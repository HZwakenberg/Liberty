diff --git a/sys/runtime/c/no_check.c b/sys/runtime/c/no_check.c
index 00b6083..daf8d09 100644
--- a/sys/runtime/c/no_check.c
+++ b/sys/runtime/c/no_check.c
@@ -140,14 +140,10 @@ void se_prinT8(FILE* file, EIF_POINTER* o) {
   The upper most context (SmartEiffel Dump stack Top) :
 */
 se_dump_stack* se_dst=NULL;
+int se_dst_depth=0;
 
 int se_stack_size(se_dump_stack* ds) {
-  int result = 0;
-  while (ds != NULL) {
-    ds = ds->caller;
-    result ++;
-  }
-  return result;
+  return se_dst_depth;
 }
 
 void se_print_run_time_stack(void) {
diff --git a/sys/runtime/c/no_check.h b/sys/runtime/c/no_check.h
index d079e84..2e6d2a9 100644
--- a/sys/runtime/c/no_check.h
+++ b/sys/runtime/c/no_check.h
@@ -90,8 +90,9 @@ struct _se_dump_stack {
   void*** locals;
 };
 
-se_dump_stack* se_dst;
-#define set_se_dst(ds) se_dst=(ds)
+extern se_dump_stack* se_dst;
+extern int se_dst_depth;
+#define set_se_dst(ds) do { if ((# ds)[0] == '&') se_dst_depth++; else se_dst_depth--; se_dst=(ds); } while (0)
 
 int se_stack_size(se_dump_stack* ds);
 void se_print_run_time_stack(void);
diff --git a/sys/runtime/c/sedb.c b/sys/runtime/c/sedb.c
index ae928de..9119eae 100644
--- a/sys/runtime/c/sedb.c
+++ b/sys/runtime/c/sedb.c
@@ -1068,7 +1068,8 @@ static int sedb_breakpoint_match(se_dump_stack*ds, int l, int f,
 
   if (bp->stack_flag) {
     StackSize = se_stack_size(ds);
-    if (StackSize < bp->stack_limit) return 0;
+    if (StackSize > 0 && StackSize < bp->stack_limit) return 0;
+    fprintf(stderr, "StackSize=%d\n", StackSize);
     stack_automatic = bp->stack_automatic;
   }
   if (bp->line_flag) {
diff --git a/tools/feature/native_plug_in.e b/tools/feature/native_plug_in.e
index 3516742..b8b7150 100644
--- a/tools/feature/native_plug_in.e
+++ b/tools/feature/native_plug_in.e
@@ -178,7 +178,7 @@ feature {}
 			if not mini_buffer.is_off then
 				mini_buffer.show_position_with_fatal_error("Unexpected trailing character")
 			end
-			
+
 			location := required_key(once "location")
 			module_name := required_key(once "module_name")
 
diff --git a/tools/kernel/system_tools.e b/tools/kernel/system_tools.e
index 3ed08f4..78c7e67 100644
--- a/tools/kernel/system_tools.e
+++ b/tools/kernel/system_tools.e
@@ -689,7 +689,7 @@ feature {C_PLUGIN}
 		require
 			arg /= Void
 		do
-			append_token(c_linker_options, arg)
+			append_token(c_plugin_linker_options, arg)
 		end
 
 	append_c_compiler_option (arg: STRING) is
@@ -935,6 +935,7 @@ feature {ACE, C_PRETTY_PRINTER, INSTALL_GLOBALS}
 
 feature {}
 	c_plugin_compiler_options: STRING is ""
+	c_plugin_linker_options: STRING is ""
 
 feature {C_PRETTY_PRINTER}
 	main_function_return_type_in (pending_c_function_signature: STRING) is
@@ -1065,6 +1066,7 @@ feature {NATIVE_PLUG_IN}
 			p := once ""
 			p.copy(location)
 			environment_variable_substitution(Void, p)
+			p := absolute_path(position, p)
 			location_plugins := plugins.reference_at(p)
 			if location_plugins = Void then
 				create {HASHED_DICTIONARY[PLUGIN, STRING]} location_plugins.make
@@ -1078,6 +1080,18 @@ feature {NATIVE_PLUG_IN}
 			end
 		end
 
+feature {}
+	absolute_path (a_position: POSITION; a_path: STRING): STRING is
+		local
+			bd: BASIC_DIRECTORY
+		do
+			Result := once ""
+			bd.ensure_system_notation
+			bd.compute_parent_directory_of(a_position.path)
+			Result.copy(bd.last_entry)
+			bd.system_notation.to_absolute_path_in(Result, a_path)
+		end
+
 feature {C_PRETTY_PRINTER}
 	auto_init_plugins is
 		local
@@ -1277,6 +1291,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 			if c_compiler = gcc or else c_compiler = gpp or else c_compiler = distcc then
 				Result.append(c_linker_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
 				if not external_c_files.is_empty then
@@ -1299,6 +1314,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 					append_token(Result, s_flag)
 				end
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				add_executable_name(Result)
 				if objects.count < 4 then
 					-- Object files are passed in the command line:
@@ -1327,6 +1343,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
@@ -1338,6 +1355,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
@@ -1349,6 +1367,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
@@ -1367,6 +1386,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				append_token(Result, external_object_files)
 				append_token(Result, once " /link")
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				append_token(Result, external_lib)
 				add_lib_math
@@ -1376,6 +1396,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				--|*** CAD: ?? append_token(Result,c_compiler_options)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, c_name)
 				Result.append(once "#1#2#3#4#5#6#7#8#9#?.o")
 				append_token(Result, external_c_files)
@@ -1390,6 +1411,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
@@ -1407,6 +1429,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				add_lib_math
@@ -1419,6 +1442,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
@@ -1430,6 +1454,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_tokens(Result, objects)
@@ -1463,6 +1488,7 @@ feature {C_PRETTY_PRINTER, INSTALL_GLOBALS, C_SPLITTER}
 				Result.append(c_linker_path)
 				append_token(Result, external_header_path)
 				append_token(Result, c_linker_options)
+				append_token(Result, c_plugin_linker_options)
 				append_token(Result, external_lib_path)
 				add_executable_name(Result)
 				append_token(Result, external_lib)
