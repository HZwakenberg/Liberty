#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmartEiffel The GNU Eiffel Compiler, Eiffel tools and libraries
Release 2011.07 (LibertyEiffel revival)
Copyright (C), 1994-2002 - INRIA - LORIA - ESIAL UHP Nancy 1 - FRANCE
Copyright (C), 2003-2005 - INRIA - LORIA - IUT Charlemagne Nancy 2 - FRANCE
D.COLNET, P.RIBET, C.ADRIAN, V.CROIZIER F.MERIZEN - SmartEiffel@loria.fr
http://SmartEiffel.loria.fr

Copyright (C), 2011 - C.ADRIAN - cyril.adrian@gmail.com
https://github.com/LibertyEiffel/Liberty
                        C Compiler options used: -pipe -Os
*/

/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
  This file (SmartEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/

#ifndef _BASE_H
#define _BASE_H

#if defined(_MSC_VER) && (_MSC_VER >= 1400)       /* VC8+ */
# ifndef _CRT_SECURE_NO_DEPRECATE
#  define _CRT_SECURE_NO_DEPRECATE
# endif
# ifndef _CRT_NONSTDC_NO_DEPRECATE
#  define _CRT_NONSTDC_NO_DEPRECATE
# endif
#endif   /* VC8+ */

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  include <unistd.h>
#endif
#if !defined(WIN32) && \
       (defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#  define WIN32 1
#endif
#ifdef WIN32
#  include <windows.h>
#else
#  ifndef O_RDONLY
#    include <sys/file.h>
#  endif
#  ifndef O_RDONLY
#    define O_RDONLY 0000
#  endif
#endif

#if defined(_MSC_VER) && (_MSC_VER < 1600) /* MSVC older than v10 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "I64d"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c
#  define INT64_C(c) c ## i64
#elif defined(__WATCOMC__) && (__WATCOMC__ <= 1220) /* WATCOM 12.2 or lower */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "I64Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__FreeBSD__) && (__FreeBSD__ < 5) /* FreeBSD before 5.0 */ && !defined (_SYS_INTTYPES_H_)
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#elif defined(__CYGWIN__) && defined(__BIT_TYPES_DEFINED__) /* Cygwin defines intxx_t in sys/types.h instead of inttypes.h */
#  include <cygwin/version.h>
#  if defined(CYGWIN_VERSION_DLL_MAJOR) && (CYGWIN_VERSION_DLL_MAJOR<1005)
typedef unsigned char uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
#  endif
#elif defined(SASC)
#    error("Too old SAS/C compiler, sorry.");
#elif defined(__SASC__)
#  if (__SASC__ < 750 ) /*  SAS/C before 7.50 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#  endif
#else
#  include <inttypes.h>
#  if !defined(INT8_MAX) && defined(INT16_MAX)
/* int8_t is not mandatory */
typedef int_least8_t int8_t;
#  endif
#endif

#if !defined(PRId16)
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "lld"
#elif !defined(PRId8)
#  define PRId8 "d"
#endif
#if !defined(INT16_C)
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## LL
#elif !defined(INT8_C)
#  define INT8_C(c) c
#endif
#if !defined(INT16_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#  define INT8_MAX (INT8_C(127))
#  define INT16_MIN (-INT16_C(32767)-1)
#  define INT16_MAX (INT16_C(32767))
#  define INT32_MIN (-INT32_C(2147483647)-1)
#  define INT32_MAX (INT32_C(2147483647))
#  define INT64_MIN (-INT64_C(9223372036854775807)-1)
#  define INT64_MAX (INT64_C(9223372036854775807))
#elif !defined(INT8_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#endif


/*
  Endian stuff
*/
#if defined(BSD) && (BSD >= 199103)
#  include <machine/endian.h>
#elif defined(__alpha__) || defined(__alpha) || defined(_M_ALPHA)
/* bi-endian processor, current mode should be find in machine/endian.h file */
#  include <machine/endian.h>
#elif defined(linux)
#  include <endian.h>
#endif



#if !defined(BYTE_ORDER) && defined(__BYTE_ORDER)
#  define BYTE_ORDER      __BYTE_ORDER
#endif

#if !defined(LITTLE_ENDIAN) && defined(__LITTLE_ENDIAN)
#  define LITTLE_ENDIAN      __LITTLE_ENDIAN
#endif

#if !defined(BIG_ENDIAN) && defined(__BIG_ENDIAN)
#  define BIG_ENDIAN      __BIG_ENDIAN
#endif

#if !defined(LITTLE_ENDIAN)
#  define LITTLE_ENDIAN   1234    /* LSB first (vax, pc) */
#endif
#if !defined(BIG_ENDIAN)
#  define BIG_ENDIAN      4321    /* MSB first (IBM, net) */
#endif
#if !defined(PDP_ENDIAN)
#  define PDP_ENDIAN      3412    /* LSB first in word, MSW first in long */
#endif

#if !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_RIGHT)
#  define BYTE_ORDER      LITTLE_ENDIAN
#elif !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_LEFT)
#  define BYTE_ORDER      BIG_ENDIAN
#elif !defined(BYTE_ORDER)

/* ARM */
#  if defined(__ARMEL__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(__ARMEB__)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__arm__)
#    error "ARMs are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* HP RISC */
#  if defined(__hppa__) || defined(__hppa) || defined(__hp9000) || \
      defined(__hp9000s300) || defined(hp9000s300) || \
      defined(__hp9000s700) || defined(hp9000s700) || \
      defined(__hp9000s800) || defined(hp9000s800) || defined(hp9000s820)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* IBM */
#  if defined(ibm032) || defined(ibm370) || defined(_IBMR2) || \
      defined(IBM370) || defined(__MVS__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Intel x86 */
#  if defined(i386) || defined(__i386__) || defined(__i386) || \
      defined(_M_IX86) || defined(_X86_) || defined(__THW_INTEL) || \
      defined(sun386)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Intel Itanium */
#  if defined(__ia64__) || defined(_IA64) || defined(__IA64__) || \
      defined(_M_IA64)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Nationnal Semiconductor 32000 serie */
#  if  defined(ns32000)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Motorola 68000 */
#  if defined(mc68000) || defined(is68k) || defined(macII) || defined(m68k)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* MIPS */
#  if defined(MIPSEL) || defined(_MIPSEL)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(MIPSEB) || defined(_MIPSEB)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__mips__) || defined(__mips) || defined(__MIPS__)
#    error "MIPS are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* Power PC */
/* this processor is bi-endian, how to know if little-endian is set? */
#  if defined(__powerpc) || defined(__powerpc__) || defined(__POWERPC__) || \
      defined(__ppc__) || defined(__ppc) || defined(_M_PPC) || \
      defined(__PPC) || defined(__PPC__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Pyramid 9810 */
#  if defined(pyr)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* RS/6000 */
#  if defined(__THW_RS6000) || defined(_IBMR2) || defined(_POWER) || \
      defined(_ARCH_PWR) || defined(_ARCH_PWR2)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* SPARC */
#  if defined(__sparc__) || defined(sparc) || defined(__sparc)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* CCI Tahoe */
#  if defined(tahoe)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* VAX */
#  if defined(vax) || defined(VAX) || defined(__vax__) || defined(_vax_) || \
      defined(__vax) || defined(__VAX)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* ELATE is a virtual OS with a little endian Virtual Processor */
#  if defined(__ELATE__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous little endian */
#  if defined(wrltitan)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous big endian */
#  if defined(apollo) || defined(__convex__) || defined(_CRAY) || defined(sel)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif
#endif


#if !defined(BYTE_ORDER)
#  error "Unknown byte order. Add your system in above macros once you know your system type. Please drop an e-mail to SmartEiffel@loria.fr"
#endif
#if (BYTE_ORDER != BIG_ENDIAN && BYTE_ORDER != LITTLE_ENDIAN)
#  error "Only little-endian and big-endian are valid at this time. Please drop an e-mail to SmartEiffel@loria.fr"
#endif


/*
  Byte swapping stuff
*/
extern void copy_swap_16(const uint16_t *src, uint16_t *dest, int count);


/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#  define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#  define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.

   NOTE: with gcc, -ansi is used for SmartEiffel generated files EXCEPT in
   -no_split mode. ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#  define JMP_BUF    sigjmp_buf
#  define SETJMP(x)  sigsetjmp( (x), 1)
#  define LONGJMP    siglongjmp
#else
#  define JMP_BUF    jmp_buf
#  define SETJMP(x)  setjmp( (x) )
#  define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER_8 is #1:
*/
typedef int8_t T1;
#define EIF_INTEGER_8 T1
#define M1 (INT8_C(0))
#define EIF_INTEGER_8_BITS (CHAR_BIT)
#define EIF_MINIMUM_INTEGER_8 (INT8_MIN)
#define EIF_MAXIMUM_INTEGER_8 (INT8_MAX)

/*
  Eiffel type INTEGER_16 is #10:
*/
typedef int16_t T10;
#define EIF_INTEGER_16 T10
#define M10 (INT16_C(0))
#define EIF_INTEGER_16_BITS (CHAR_BIT*sizeof(T10t))
#define EIF_MINIMUM_INTEGER_16 (INT16_MIN) /*-32768*/
#define EIF_MAXIMUM_INTEGER_16 (INT16_MAX) /*+32767*/

/*
  Eiffel type INTEGER or INTEGER_32 is #2:
*/
typedef int32_t T2;
#define EIF_INTEGER T2
#define EIF_INTEGER_32 T2
#define M2 (INT32_C(0))
#define EIF_INTEGER_BITS ((T2)(CHAR_BIT*sizeof(T2)))
#define EIF_INTEGER_32_BITS EIF_INTEGER_BITS
#define EIF_MINIMUM_INTEGER (INT32_MIN)
#define EIF_MAXIMUM_INTEGER (INT32_MAX)

/*
  Eiffel type INTEGER_64 is #11:
*/
typedef int64_t T11;
#define EIF_INTEGER_64 T11
#define M11 (INT64_C(0))
#define EIF_INTEGER_64_BITS (CHAR_BIT*sizeof(T11))
#define EIF_MINIMUM_INTEGER_64 (INT64_MIN)
#define EIF_MAXIMUM_INTEGER_64 (INT64_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T10)(x))
#define T3to_integer(x) ((signed char)(x))
#define T3to_integer_8(x) ((signed char)(x))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL_32 is #4:
*/
typedef float T4;
typedef T4 real32_t;
#define EIF_REAL_32 T4
#define M4 (0.0)
#define EIF_MINIMUM_REAL_32 (-(FLT_MAX))
#define EIF_MAXIMUM_REAL_32 (FLT_MAX)

/*
  Eiffel type REAL or REAL_64 is #5:
*/
typedef double T5;
typedef T5 real64_t;
#define EIF_REAL T5
#define EIF_REAL_64 T5
#define M5 (0.0)
#define EIF_MINIMUM_REAL_64 (-(DBL_MAX))
#define EIF_MINIMUM_REAL (EIF_MINIMUM_REAL_64)
#define EIF_MAXIMUM_REAL_64 (DBL_MAX)
#define EIF_MAXIMUM_REAL (EIF_MAXIMUM_REAL_64)

/*
  Eiffel type REAL_EXTENDED is #12:
*/
typedef long double T12;
typedef T12 real_extended_t;
#define EIF_REAL_EXTENDED T12
#define EIF_REAL_128 T12
#define M12 (0.0)
#define EIF_MINIMUM_REAL_EXTENDED (-(DBL_MAX))
#define EIF_MAXIMUM_REAL_EXTENDED (DBL_MAX)

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
/* Sometimes, NULL is defined as 0 */
#define M8 ((void*)NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ
#define EIF_ANY EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void* src, size_t size);

/*
   die method.
 */
void se_die(int code);

/*
    Runtime hooks. They allow different runtime modules to be quite independant. In time, they will also allow
    thread-safe operations.

    Currently known modules:
      - boost
      - no_check
      - sedb
      - gc
      - print stack
      - profile
      - plugins

    However, currently only profile uses this method. It will be extended to other modules later.

    The currently defined hooks are described in the enum below (the names should be self-explanatory).
 */
typedef enum {
  SE_HANDLE_EXCEPTION_SET, /* called when an exception handler is set, prior to SETJMP */
  SE_HANDLE_EXCEPTION_CLEAR, /* called when a feature with an exception handler normally returns */
  SE_HANDLE_EXCEPTION_THROWN, /* called when an exception is thrown, prior to the LONGJMP */
  SE_HANDLE_ENTER_GC, /* called when gc_start() begins */
  SE_HANDLE_EXIT_GC, /* called when gc_start() ends */
  SE_HANDLE_ENTER_PRINT_STACK, /* called when se_print_run_time_stack() begins */
  SE_HANDLE_EXIT_PRINT_STACK, /* called when se_print_run_time_stack() ends */
  SE_HANDLE_NO_MORE_MEMORY, /* called by se_alloc() and co */
  SE_HANDLE_SEDB_BREAK, /* called when sedb stops the program */
  SE_HANDLE_SEDB_CONTINUE, /* called when sedb continues the program */
  SE_HANDLE_RUNTIME_ERROR, /* called when a runtime error is raised and not caught by an exception. Cannot be raised in boost mode. */
  SE_HANDLE_DIE_WITH_CODE, /* called when the program is stopped by the die_with_code feature. The data points to the int code. */
  SE_HANDLE_NORMAL_EXIT /* called when the program correctly terminates. The data is null. */
} se_handler_action_t;

extern int handlers_count;
typedef void se_runtime_handler_t(se_handler_action_t action, void*data);
void register_handler(se_runtime_handler_t*handler);
void _handle(se_handler_action_t action, void*data);

#define handle(action,data) do{if(handlers_count>0)_handle(action,data);}while(0)

#endif /* #ifndef _BASE_H */
#define SE_BOOST 1
#define SE_GC_LIB 1
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#include <errno.h>

#define text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define io_fclose(p) (fclose((FILE*)(p)))
#define io_flush(p) (fflush((FILE*)(p)))
#define io_getc(f) (getc(((FILE*)(f))))
#define io_putc(b, f) (putc((b),((FILE*)(f))))
#define io_ungetc(b, f) (ungetc((b), (FILE*)(f)))
#define io_fread(b, n, f) (fread((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_fwrite(b, n, f) (fwrite((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_feof(f) (feof(((FILE*)(f))))
#define io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define io_remove(f) (remove(((char*)(f))))
#define io_fseek(f, o) (fseek((FILE*)(f),(o),SEEK_SET))
#define io_ftell(f) ((EIF_INTEGER_64)ftell((FILE*)(f)))

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  define read_stdin(b, s) (read(STDIN_FILENO, b, s))
#else
   extern int read_stdin(EIF_CHARACTER *buffer, int size);
#endif

extern void io_copy(char*source, char*target);
extern int io_file_exists(char*source);
extern int io_same_physical_file(char*path1,char*path2);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define pointer_hash_code(p) (((unsigned int)(unsigned long)(p))>>1)
#define pointer_to_any(p) ((T0*)(p))
#define pointer_plus(p, o) (((char*)(p))+o)
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define mbi_unsigned_32_to_integer_64(x) (((int64_t)((uint32_t)(x))))
#define mbi_unsigned_less_than(a,b) ((((uint32_t)(a)) < ((uint32_t)(b))))
#define mbi_unsigned_greater_than(a,b) ((((uint32_t)(a)) > ((uint32_t)(b))))
#define mbi_unsigned_greater_or_equal(a,b) ((((uint32_t)(a)) >= ((uint32_t)(b))))
#define mbi_storage_at(s, n) (((s)+(n)))
EIF_BOOLEAN mbi_inc (int32_t *p);
EIF_BOOLEAN mbi_add (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_add_with_inc (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_dec (int32_t *p);
EIF_BOOLEAN mbi_subtract (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_subtract_with_dec (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply_with_add (int32_t a, int32_t b, int32_t c, int32_t *p);
EIF_INTEGER mbi_multiply_with_2_add (int32_t a, int32_t b, int32_t c, int32_t d, int32_t *p);
EIF_INTEGER mbi_divide (int32_t a, int32_t b, int32_t d, int32_t *r);



/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_exec_system_none  0
#define basic_exec_system_posix 1
#define basic_exec_system_win32 2

/***************************
 * Common macros and types *
 * basic_exec_xxx          *
 ***************************/

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE || defined  __APPLE__

/*#  include <unistd.h> done in base.h */
/*#  include <sys/types.h> done in base.h */
#include <sys/wait.h>

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  pid_t id; /* the launched child process id */
  int running; /* true if the process is running */
  int child; /* true if the process is the child itself (useful for duplicate) */
  int status; /* the status of the child process if finished */
};

extern char** environ;

#define basic_exec_id(data) (((se_exec_data_t*)data)->id)
#define basic_exec_is_child(data) (((se_exec_data_t*)data)->child)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)
#define basic_exec_alloc_pipe() (calloc(2, sizeof(int)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)(pipe(p)>=0))
#define basic_exec_system basic_exec_system_posix

#elif defined WIN32
/*#  include <windows.h> done in base.h */

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  PROCESS_INFORMATION process_information;
  int running;
  DWORD status;
};

#define basic_exec_id(data) (((se_exec_data_t*)data)->process_information.dwProcessId)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)

#define basic_exec_alloc_pipe() (calloc(2, sizeof(HANDLE)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_system basic_exec_system_win32

extern EIF_BOOLEAN basic_exec_init_pipe(HANDLE*p);

#else
/* Dummy implementation that always reports an error back to the Eiffel side */
typedef int se_exec_data_t;

#define basic_exec_id(data) (-1)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (0)

#define basic_exec_alloc_pipe() (NULL)
#define basic_exec_free_pipe(p) /* dummy */
#define basic_exec_alloc_data() ((se_exec_data_t*)NULL)
#define basic_exec_free_data(p) /* dummy */
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)0)
#define basic_exec_system basic_exec_system_none

#endif

/***********************************
 * Prototypes for common functions *
 * basic_exec_xxx                  *
 ***********************************/

extern EIF_BOOLEAN basic_exec_is_finished(se_exec_data_t*data);
extern void basic_exec_wait(se_exec_data_t*data);
extern void basic_exec_cleanup(se_exec_data_t*data, int status);

/*************************************************
 * Posix-specific function prototypes and macros *
 * basic_exec_posix_xxx                          *
 *************************************************/

extern EIF_BOOLEAN basic_exec_posix_execute(se_exec_data_t*data, char*prog, char**args, EIF_BOOLEAN keep_env, char**add_env, int*in_fd, int*out_fd, int*err_fd);
extern EIF_INTEGER basic_exec_posix_get_character (EIF_INTEGER fd);
extern void basic_exec_posix_put_character(EIF_INTEGER fd, EIF_CHARACTER c);
extern void basic_exec_posix_wait_any(se_exec_data_t*data);
extern void basic_exec_posix_any_finished(se_exec_data_t*data);

#if basic_exec_system == basic_exec_system_posix
#define basic_exec_posix_flush(fd) (fsync(fd))
#define basic_exec_posix_close(fd) (close(fd))
#define basic_exec_posix_kill(data, sig) (kill((data)->id, (sig)))
#define basic_exec_posix_get_in_descriptor(pipe) (((int*)pipe)[0])
#define basic_exec_posix_get_out_descriptor(pipe) (((int*)pipe)[1])
#else
#define basic_exec_posix_flush(fd) /* dummy */
#define basic_exec_posix_close(fd) /* dummy */
#define basic_exec_posix_kill(data, sig) /* dummy */
#define basic_exec_posix_get_in_descriptor(pipe) 0
#define basic_exec_posix_get_out_descriptor(pipe) 0
#endif

/*************************************************
 * Win32-specific function prototypes and macros *
 * basic_exec_win32_xxx                          *
 *************************************************/

#if basic_exec_system == basic_exec_system_win32
#define basic_exec_win32_flush(h) FlushFileBuffers((HANDLE)h)
#define basic_exec_win32_close(h) CloseHandle((HANDLE)h)
#define basic_exec_win32_handle(data) ((int)((se_exec_data_t*)data)->process_information.hProcess)
#define basic_exec_win32_maximum_wait (MAXIMUM_WAIT_OBJECTS)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, HANDLE*in_h, HANDLE*out_h, HANDLE*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(HANDLE h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (HANDLE h);
#define basic_exec_win32_get_in_handle(pipe) (((HANDLE*)pipe)[0])
#define basic_exec_win32_get_out_handle(pipe) (((HANDLE*)pipe)[1])
#else
#define basic_exec_win32_flush(h) /* dummy */
#define basic_exec_win32_close(h) /* dummy */
#define basic_exec_win32_handle(data) (0)
#define basic_exec_win32_maximum_wait (0)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, void*in_h, void*out_h, void*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(void*handles, int count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(void*handles, int count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(void*h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (void*h);
#define basic_exec_win32_get_in_handle(pipe) NULL
#define basic_exec_win32_get_out_handle(pipe) NULL
#endif
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <dirent.h>
#endif
#ifndef WIN32
#  include <unistd.h>
#endif

EIF_POINTER directory_open(EIF_POINTER path);
EIF_POINTER directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN directory_close(EIF_POINTER dirstream);
#define directory_current_working_directory (directory_cwd())
EIF_POINTER directory_cwd(void);
EIF_BOOLEAN directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN directory_rmdir(EIF_POINTER directory_path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/

EIF_INTEGER fstat_st_size(EIF_POINTER path);
EIF_INTEGER_64 fstat_st_mtime(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_file(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_dir(EIF_POINTER path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define sprintf_pointer(buffer, pointer) sprintf((char*)(buffer),"%p",pointer)
void sprintf_real_64(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real64_t r);
void sprintf_real_extended(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real_extended_t r);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_getenv(v) (getenv((char*)v))
/* C Header Pass 1: */
typedef union _se_agent se_agent;
typedef struct _se_agent0 se_agent0;
typedef struct S25 T25;
typedef int T282;
typedef struct S97 T97;
typedef void*T851;
typedef struct S89 T89;
typedef struct S113 T113;
typedef struct S267 T267;
typedef struct S101 T101;
typedef struct S96 T96;
typedef struct S278 T278;
typedef void*T264;
typedef struct S7 T7;
typedef struct S613 T613;
typedef struct S859 T859;
typedef int T634;
typedef struct S73 T73;
typedef struct S860 T860;
typedef int T281;
typedef struct S280 T280;
typedef int T544;
typedef struct S529 T529;
typedef struct S63 T63;
typedef struct S861 T861;
typedef struct S531 T531;
typedef struct S535 T535;
typedef struct S536 T536;
typedef struct S537 T537;
typedef struct S538 T538;
typedef struct S539 T539;
typedef struct S862 T862;
typedef struct S863 T863;
typedef struct S87 T87;
typedef struct S530 T530;
typedef struct S447 T447;
typedef struct S446 T446;
typedef struct S65 T65;
typedef struct S44 T44;
typedef struct S864 T864;
typedef struct S92 T92;
typedef struct S108 T108;
typedef struct S675 T675;
typedef struct S679 T679;
typedef struct S677 T677;
typedef struct S540 T540;
typedef struct S680 T680;
typedef struct S333 T333;
typedef struct S415 T415;
typedef struct S865 T865;
typedef struct S294 T294;
typedef struct S681 T681;
typedef struct S866 T866;
typedef struct S424 T424;
typedef struct S750 T750;
typedef struct S558 T558;
typedef struct S588 T588;
typedef struct S589 T589;
typedef struct S590 T590;
typedef struct S591 T591;
typedef struct S603 T603;
typedef struct S604 T604;
typedef struct S605 T605;
typedef struct S607 T607;
typedef struct S608 T608;
typedef struct S612 T612;
typedef struct S614 T614;
typedef struct S615 T615;
typedef struct S616 T616;
typedef struct S617 T617;
typedef struct S618 T618;
typedef struct S619 T619;
typedef struct S621 T621;
typedef struct S620 T620;
typedef struct S622 T622;
typedef struct S623 T623;
typedef struct S624 T624;
typedef struct S867 T867;
typedef void*T625;
typedef struct S868 T868;
typedef struct S869 T869;
typedef struct S363 T363;
typedef struct S82 T82;
typedef struct S84 T84;
typedef struct S870 T870;
typedef struct S871 T871;
typedef struct S872 T872;
typedef struct S270 T270;
typedef struct S76 T76;
typedef struct S527 T527;
typedef struct S874 T874;
typedef struct S324 T324;
typedef void*T95;
typedef struct S93 T93;
typedef void*T99;
typedef void*T112;
typedef struct S109 T109;
typedef void*T114;
typedef struct S78 T78;
typedef struct S433 T433;
typedef struct S876 T876;
typedef struct S877 T877;
typedef struct S105 T105;
typedef struct S428 T428;
typedef struct S880 T880;
typedef int T689;
typedef struct S881 T881;
typedef struct S882 T882;
typedef struct S782 T782;
typedef struct S784 T784;
typedef struct S785 T785;
typedef struct S786 T786;
typedef struct S787 T787;
typedef struct S323 T323;
typedef struct S886 T886;
typedef struct S887 T887;
typedef int T888;
typedef struct S771 T771;
typedef int T890;
typedef struct S772 T772;
typedef struct S891 T891;
typedef struct S892 T892;
typedef struct S303 T303;
typedef struct S893 T893;
typedef struct S896 T896;
typedef struct S898 T898;
typedef struct S899 T899;
typedef struct S900 T900;
typedef struct S901 T901;
typedef struct S274 T274;
typedef int T903;
typedef struct S905 T905;
typedef struct S91 T91;
typedef struct S908 T908;
typedef struct S741 T741;
typedef struct S791 T791;
typedef struct S910 T910;
typedef struct S912 T912;
typedef struct S914 T914;
typedef struct S916 T916;
typedef struct S743 T743;
typedef struct S919 T919;
typedef struct S444 T444;
typedef struct S421 T421;
typedef struct S375 T375;
typedef struct S427 T427;
typedef struct S436 T436;
typedef struct S478 T478;
typedef struct S488 T488;
typedef struct S490 T490;
typedef struct S349 T349;
typedef struct S106 T106;
typedef struct S491 T491;
typedef struct S440 T440;
typedef struct S403 T403;
typedef struct S376 T376;
typedef struct S431 T431;
typedef struct S402 T402;
typedef struct S429 T429;
typedef struct S398 T398;
typedef struct S432 T432;
typedef struct S430 T430;
typedef struct S437 T437;
typedef struct S434 T434;
typedef struct S438 T438;
typedef struct S441 T441;
typedef struct S266 T266;
typedef struct S461 T461;
typedef struct S463 T463;
typedef struct S464 T464;
typedef struct S465 T465;
typedef struct S466 T466;
typedef struct S416 T416;
typedef struct S920 T920;
typedef struct S273 T273;
typedef struct S471 T471;
typedef struct S921 T921;
typedef struct S511 T511;
typedef struct S480 T480;
typedef struct S396 T396;
typedef struct S467 T467;
typedef struct S366 T366;
typedef struct S468 T468;
typedef struct S469 T469;
typedef struct S334 T334;
typedef struct S343 T343;
typedef struct S346 T346;
typedef struct S348 T348;
typedef struct S337 T337;
typedef struct S341 T341;
typedef struct S342 T342;
typedef struct S482 T482;
typedef struct S483 T483;
typedef struct S484 T484;
typedef struct S473 T473;
typedef struct S380 T380;
typedef struct S451 T451;
typedef struct S457 T457;
typedef struct S474 T474;
typedef struct S508 T508;
typedef struct S509 T509;
typedef struct S922 T922;
typedef struct S923 T923;
typedef struct S448 T448;
typedef struct S449 T449;
typedef struct S924 T924;
typedef struct S386 T386;
typedef struct S925 T925;
typedef struct S658 T658;
typedef struct S926 T926;
typedef struct S413 T413;
typedef struct S383 T383;
typedef struct S927 T927;
typedef struct S387 T387;
typedef struct S443 T443;
typedef struct S510 T510;
typedef struct S928 T928;
typedef struct S470 T470;
typedef struct S407 T407;
typedef struct S393 T393;
typedef struct S929 T929;
typedef struct S352 T352;
typedef struct S364 T364;
typedef struct S357 T357;
typedef struct S472 T472;
typedef struct S418 T418;
typedef struct S459 T459;
typedef struct S460 T460;
typedef struct S359 T359;
typedef struct S399 T399;
typedef struct S458 T458;
typedef struct S487 T487;
typedef struct S477 T477;
typedef struct S362 T362;
typedef struct S389 T389;
typedef struct S454 T454;
typedef struct S390 T390;
typedef struct S653 T653;
typedef struct S476 T476;
typedef struct S391 T391;
typedef struct S485 T485;
typedef struct S507 T507;
typedef struct S506 T506;
typedef struct S502 T502;
typedef struct S503 T503;
typedef struct S504 T504;
typedef struct S505 T505;
typedef struct S501 T501;
typedef struct S369 T369;
typedef struct S392 T392;
typedef struct S497 T497;
typedef struct S498 T498;
typedef struct S499 T499;
typedef struct S500 T500;
typedef struct S397 T397;
typedef struct S496 T496;
typedef struct S493 T493;
typedef struct S494 T494;
typedef struct S495 T495;
typedef struct S492 T492;
typedef struct S452 T452;
typedef struct S453 T453;
typedef struct S486 T486;
typedef struct S279 T279;
typedef struct S456 T456;
typedef struct S455 T455;
typedef struct S930 T930;
typedef struct S414 T414;
typedef struct S423 T423;
typedef struct S742 T742;
typedef struct S450 T450;
typedef struct S353 T353;
typedef struct S405 T405;
typedef struct S388 T388;
typedef struct S931 T931;
typedef struct S932 T932;
typedef struct S933 T933;
typedef struct S934 T934;
typedef struct S938 T938;
typedef struct S525 T525;
typedef struct S939 T939;
typedef struct S941 T941;
typedef struct S425 T425;
typedef struct S417 T417;
typedef T0 T942;
typedef T0 T945;
typedef struct S947 T947;
typedef struct S948 T948;
typedef struct S445 T445;
typedef struct S422 T422;
typedef struct S442 T442;
typedef struct S949 T949;
typedef struct S420 T420;
typedef struct S950 T950;
typedef struct S952 T952;
typedef struct S953 T953;
typedef struct S955 T955;
typedef struct S957 T957;
typedef struct S958 T958;
typedef struct S959 T959;
typedef struct S962 T962;
typedef struct S963 T963;
typedef struct S964 T964;
typedef struct S965 T965;
typedef struct S966 T966;
typedef struct S967 T967;
typedef struct S518 T518;
typedef struct S969 T969;
typedef struct S973 T973;
typedef struct S974 T974;
typedef struct S975 T975;
typedef struct S976 T976;
typedef struct S977 T977;
typedef struct S520 T520;
typedef struct S978 T978;
typedef struct S979 T979;
typedef struct S553 T553;
typedef struct S981 T981;
typedef struct S982 T982;
typedef struct S983 T983;
typedef struct S395 T395;
typedef struct S985 T985;
typedef struct S986 T986;
typedef struct S988 T988;
typedef struct S989 T989;
typedef struct S628 T628;
typedef struct S990 T990;
typedef struct S991 T991;
typedef struct S992 T992;
typedef struct S330 T330;
typedef struct S993 T993;
typedef struct S998 T998;
typedef struct S999 T999;
typedef struct S1000 T1000;
typedef struct S1001 T1001;
typedef struct S1002 T1002;
typedef struct S1003 T1003;
typedef struct S1005 T1005;
typedef struct S1006 T1006;
typedef struct S1009 T1009;
typedef struct S1012 T1012;
typedef struct S1013 T1013;
typedef struct S1014 T1014;
typedef struct S401 T401;
typedef struct S1015 T1015;
typedef struct S554 T554;
typedef struct S1016 T1016;
typedef struct S1017 T1017;
typedef struct S1020 T1020;
typedef struct S1021 T1021;
typedef struct S1024 T1024;
typedef struct S1025 T1025;
typedef struct S1027 T1027;
typedef struct S1032 T1032;
typedef struct S1033 T1033;
typedef struct S517 T517;
typedef struct S513 T513;
typedef struct S1035 T1035;
typedef struct S767 T767;
typedef struct S1037 T1037;
typedef struct S1038 T1038;
typedef struct S1039 T1039;
typedef struct S1040 T1040;
typedef struct S1042 T1042;
typedef struct S1043 T1043;
typedef struct S1046 T1046;
typedef struct S1047 T1047;
typedef struct S1048 T1048;
typedef struct S1049 T1049;
typedef struct S1051 T1051;
typedef struct S636 T636;
typedef struct S644 T644;
typedef struct S555 T555;
typedef struct S649 T649;
typedef struct S646 T646;
typedef struct S647 T647;
typedef struct S642 T642;
typedef struct S645 T645;
typedef struct S643 T643;
typedef struct S648 T648;
typedef struct S639 T639;
typedef struct S638 T638;
typedef struct S641 T641;
typedef struct S1053 T1053;
typedef struct S1054 T1054;
typedef struct S1055 T1055;
typedef struct S683 T683;
typedef struct S1058 T1058;
typedef struct S1063 T1063;
typedef struct S1067 T1067;
typedef struct S724 T724;
typedef struct S1069 T1069;
typedef struct S374 T374;
typedef struct S670 T670;
typedef struct S661 T661;
typedef struct S1070 T1070;
typedef struct S1071 T1071;
typedef struct S666 T666;
typedef struct S1072 T1072;
typedef struct S1073 T1073;
typedef struct S1074 T1074;
typedef struct S1078 T1078;
typedef struct S1079 T1079;
typedef struct S1081 T1081;
typedef struct S1082 T1082;
typedef struct S1090 T1090;
typedef struct S1091 T1091;
typedef struct S1092 T1092;
typedef struct S1093 T1093;
typedef struct S1094 T1094;
typedef struct S1095 T1095;
typedef struct S1097 T1097;
typedef struct S1099 T1099;
typedef struct S1100 T1100;
typedef struct S1101 T1101;
typedef struct S1103 T1103;
typedef struct S1105 T1105;
typedef struct S1106 T1106;
typedef struct S1107 T1107;
typedef struct S1112 T1112;
typedef struct S1113 T1113;
typedef struct S1117 T1117;
typedef struct S1118 T1118;
typedef struct S1119 T1119;
typedef struct S1120 T1120;
typedef struct S1123 T1123;
typedef struct S1124 T1124;
typedef struct S1125 T1125;
typedef struct S1126 T1126;
typedef struct S1129 T1129;
typedef struct S1130 T1130;
typedef struct S1132 T1132;
typedef struct S1133 T1133;
typedef struct S1136 T1136;
typedef struct S1137 T1137;
typedef struct S1138 T1138;
typedef struct S1140 T1140;
typedef struct S408 T408;
typedef struct S725 T725;
typedef struct S1143 T1143;
typedef struct S1144 T1144;
typedef struct S1146 T1146;
typedef struct S1147 T1147;
typedef struct S1150 T1150;
typedef struct S1151 T1151;
typedef struct S1152 T1152;
typedef struct S1153 T1153;
typedef struct S1155 T1155;
typedef struct S1156 T1156;
typedef struct S1160 T1160;
typedef struct S1161 T1161;
typedef struct S351 T351;
typedef struct S1165 T1165;
typedef struct S1167 T1167;
typedef struct S1169 T1169;
typedef struct S1172 T1172;
typedef struct S1173 T1173;
typedef struct S1175 T1175;
typedef struct S763 T763;
typedef struct S764 T764;
typedef struct S765 T765;
typedef struct S760 T760;
typedef struct S761 T761;
typedef struct S762 T762;
typedef struct S1176 T1176;
typedef struct S758 T758;
typedef int T817;
typedef struct S1178 T1178;
typedef struct S1180 T1180;
typedef struct S1182 T1182;
typedef struct S1183 T1183;
typedef struct S1186 T1186;
typedef struct S1187 T1187;
typedef struct S1189 T1189;
typedef struct S1190 T1190;
typedef struct S1192 T1192;
typedef struct S1193 T1193;
typedef struct S1195 T1195;
typedef struct S1196 T1196;
typedef struct S1197 T1197;
typedef struct S1204 T1204;
typedef struct S1207 T1207;
typedef struct S1208 T1208;
typedef struct S1214 T1214;
typedef struct S1215 T1215;
typedef struct S815 T815;
typedef struct S1217 T1217;
typedef struct S1218 T1218;
typedef struct S1219 T1219;
typedef struct S1220 T1220;
typedef struct S1222 T1222;
typedef struct S1224 T1224;
typedef struct S1225 T1225;
typedef struct S332 T332;
typedef struct S1227 T1227;
typedef struct S1228 T1228;
typedef struct S1229 T1229;
typedef struct S1230 T1230;
typedef struct S1232 T1232;
typedef struct S1234 T1234;
typedef struct S1235 T1235;
typedef struct S1237 T1237;
typedef struct S1241 T1241;
typedef struct S1242 T1242;
typedef struct S1243 T1243;
typedef struct S1244 T1244;
typedef struct S1245 T1245;
typedef struct S1248 T1248;
typedef struct S1249 T1249;
typedef struct S1250 T1250;
typedef struct S1251 T1251;
typedef struct S1254 T1254;
typedef struct S1255 T1255;
typedef struct S34 T34;
typedef struct S769 T769;
typedef int T1257;
typedef struct S728 T728;
typedef struct S654 T654;
typedef T0 T1259;
typedef struct S1261 T1261;
typedef struct S1263 T1263;
typedef struct S1266 T1266;
typedef struct S660 T660;
typedef struct S663 T663;
typedef struct S664 T664;
typedef struct S667 T667;
typedef struct S669 T669;
typedef struct S662 T662;
typedef struct S657 T657;
typedef struct S668 T668;
typedef struct S650 T650;
typedef struct S1267 T1267;
typedef struct S1268 T1268;
typedef struct S519 T519;
typedef struct S1269 T1269;
typedef struct S671 T671;
typedef struct S659 T659;
typedef struct S655 T655;
typedef struct S1270 T1270;
typedef struct S1271 T1271;
typedef struct S1272 T1272;
typedef int T316;
typedef struct S1273 T1273;
typedef struct S1274 T1274;
typedef struct S1280 T1280;
typedef struct S522 T522;
typedef struct S116 T116;
typedef struct S726 T726;
typedef struct S731 T731;
typedef struct S107 T107;
typedef struct S1282 T1282;
typedef struct S409 T409;
typedef struct S406 T406;
typedef struct S361 T361;
typedef struct S777 T777;
typedef struct S633 T633;
typedef struct S779 T779;
typedef struct S755 T755;
typedef struct S526 T526;
typedef struct S778 T778;
typedef struct S632 T632;
typedef struct S1283 T1283;
typedef struct S818 T818;
typedef struct S820 T820;
typedef struct S821 T821;
typedef struct S822 T822;
typedef struct S1285 T1285;
typedef struct S1286 T1286;
typedef struct S1287 T1287;
typedef struct S1288 T1288;
typedef struct S1290 T1290;
typedef struct S1291 T1291;
typedef struct S1293 T1293;
typedef struct S1294 T1294;
typedef struct S1297 T1297;
typedef struct S1298 T1298;
typedef struct S665 T665;
typedef struct S701 T701;
typedef struct S1303 T1303;
typedef struct S1304 T1304;
typedef int T1309;
typedef struct S1310 T1310;
typedef struct S1311 T1311;
typedef struct S852 T852;
typedef struct S626 T626;
typedef struct S552 T552;
typedef T0 T1313;
typedef T0 T1315;
typedef T0 T1317;
typedef T0 T1319;
typedef T0 T1321;
typedef T0 T1323;
typedef struct S1325 T1325;
typedef struct S1326 T1326;
typedef struct S546 T546;
typedef struct S547 T547;
typedef struct S548 T548;
typedef struct S549 T549;
typedef struct S550 T550;
typedef struct S551 T551;
typedef int T1327;
typedef T0 T1329;
typedef struct S1332 T1332;
typedef struct S1336 T1336;
typedef int T1337;
typedef struct S790 T790;
typedef struct S1338 T1338;
typedef T0 T1339;
typedef struct S788 T788;
typedef struct S1344 T1344;
typedef struct S1345 T1345;
typedef struct S706 T706;
typedef struct S1346 T1346;
typedef struct S1350 T1350;
typedef struct S1351 T1351;
typedef struct S1353 T1353;
typedef struct S703 T703;
typedef struct S1357 T1357;
typedef struct S1358 T1358;
typedef T0 T1360;
typedef T0 T1363;
typedef T0 T1366;
typedef T0 T1368;
typedef struct S1371 T1371;
typedef struct S776 T776;
typedef struct S1372 T1372;
typedef struct S774 T774;
typedef int T1374;
typedef struct S1375 T1375;
typedef struct S1377 T1377;
typedef struct S1378 T1378;
/* C Header Pass 2: */
typedef T3*T9;
#define M9 NULL
typedef T0**T884;
#define M884 NULL
typedef T0**T897;
#define M897 NULL
typedef T0**T902;
#define M902 NULL
typedef T0**T906;
#define M906 NULL
typedef T10*T907;
#define M907 NULL
typedef T0**T911;
#define M911 NULL
typedef T0**T935;
#define M935 NULL
typedef T0**T936;
#define M936 NULL
typedef T0**T937;
#define M937 NULL
typedef T0**T951;
#define M951 NULL
typedef T0**T954;
#define M954 NULL
typedef T2*T956;
#define M956 NULL
typedef T0**T984;
#define M984 NULL
typedef T0**T987;
#define M987 NULL
typedef T0**T1004;
#define M1004 NULL
typedef T0**T1007;
#define M1007 NULL
typedef T0**T1008;
#define M1008 NULL
typedef T0**T1018;
#define M1018 NULL
typedef T333*T1019;
#define M1019 NULL
typedef T0**T1023;
#define M1023 NULL
typedef T0**T1026;
#define M1026 NULL
typedef T0**T1029;
#define M1029 NULL
typedef T0**T1030;
#define M1030 NULL
typedef T0**T1031;
#define M1031 NULL
typedef T0**T1041;
#define M1041 NULL
typedef T0**T1044;
#define M1044 NULL
typedef T0**T1045;
#define M1045 NULL
typedef T0**T1050;
#define M1050 NULL
typedef T0**T1052;
#define M1052 NULL
typedef T0**T1056;
#define M1056 NULL
typedef T0**T1057;
#define M1057 NULL
typedef T0**T1059;
#define M1059 NULL
typedef T0**T1060;
#define M1060 NULL
typedef T0**T1061;
#define M1061 NULL
typedef T0**T1062;
#define M1062 NULL
typedef T0**T1064;
#define M1064 NULL
typedef T0**T1065;
#define M1065 NULL
typedef T0**T1066;
#define M1066 NULL
typedef T0**T1068;
#define M1068 NULL
typedef T0**T1076;
#define M1076 NULL
typedef T0**T1077;
#define M1077 NULL
typedef T0**T1080;
#define M1080 NULL
typedef T0**T1083;
#define M1083 NULL
typedef T0**T1086;
#define M1086 NULL
typedef T0**T1087;
#define M1087 NULL
typedef T0**T1088;
#define M1088 NULL
typedef T0**T1089;
#define M1089 NULL
typedef T0**T1096;
#define M1096 NULL
typedef T0**T1098;
#define M1098 NULL
typedef T0**T1102;
#define M1102 NULL
typedef T0**T1108;
#define M1108 NULL
typedef T0**T1109;
#define M1109 NULL
typedef T0**T1110;
#define M1110 NULL
typedef T0**T1111;
#define M1111 NULL
typedef T0**T1114;
#define M1114 NULL
typedef T0**T1116;
#define M1116 NULL
typedef T0**T1121;
#define M1121 NULL
typedef T0**T1122;
#define M1122 NULL
typedef T0**T1127;
#define M1127 NULL
typedef T0**T1128;
#define M1128 NULL
typedef T0**T1131;
#define M1131 NULL
typedef T0**T1134;
#define M1134 NULL
typedef T0**T1135;
#define M1135 NULL
typedef T0**T1139;
#define M1139 NULL
typedef T0**T1141;
#define M1141 NULL
typedef T0**T1142;
#define M1142 NULL
typedef T0**T1145;
#define M1145 NULL
typedef T0**T1148;
#define M1148 NULL
typedef T0**T1149;
#define M1149 NULL
typedef T0**T1154;
#define M1154 NULL
typedef T0**T1157;
#define M1157 NULL
typedef T0**T1158;
#define M1158 NULL
typedef T1*T1159;
#define M1159 NULL
typedef T0**T1162;
#define M1162 NULL
typedef T0**T1163;
#define M1163 NULL
typedef T0**T1164;
#define M1164 NULL
typedef T0**T1166;
#define M1166 NULL
typedef T0**T1168;
#define M1168 NULL
typedef T0**T1170;
#define M1170 NULL
typedef T0**T1171;
#define M1171 NULL
typedef T0**T1179;
#define M1179 NULL
typedef T0**T1181;
#define M1181 NULL
typedef T0**T1184;
#define M1184 NULL
typedef T0**T1185;
#define M1185 NULL
typedef T0**T1188;
#define M1188 NULL
typedef T0**T1191;
#define M1191 NULL
typedef T0**T1194;
#define M1194 NULL
typedef T0**T1198;
#define M1198 NULL
typedef T0**T1199;
#define M1199 NULL
typedef T0**T1200;
#define M1200 NULL
typedef T0**T1201;
#define M1201 NULL
typedef T0**T1202;
#define M1202 NULL
typedef T0**T1203;
#define M1203 NULL
typedef T0**T1205;
#define M1205 NULL
typedef T0**T1206;
#define M1206 NULL
typedef T0**T1209;
#define M1209 NULL
typedef T0**T1210;
#define M1210 NULL
typedef T0**T1211;
#define M1211 NULL
typedef T0**T1212;
#define M1212 NULL
typedef T0**T1213;
#define M1213 NULL
typedef T0**T1216;
#define M1216 NULL
typedef T758*T1221;
#define M1221 NULL
typedef T0**T1223;
#define M1223 NULL
typedef T0**T1226;
#define M1226 NULL
typedef T0**T1233;
#define M1233 NULL
typedef T0**T1236;
#define M1236 NULL
typedef T0**T1238;
#define M1238 NULL
typedef T0**T1252;
#define M1252 NULL
typedef T0**T1253;
#define M1253 NULL
typedef T0**T1256;
#define M1256 NULL
typedef T0**T1275;
#define M1275 NULL
typedef T0**T1284;
#define M1284 NULL
typedef T0**T1289;
#define M1289 NULL
typedef T0**T1292;
#define M1292 NULL
typedef T0**T1299;
#define M1299 NULL
typedef T0**T1300;
#define M1300 NULL
typedef T0**T1301;
#define M1301 NULL
typedef T0**T1302;
#define M1302 NULL
typedef T0**T1305;
#define M1305 NULL
typedef T0**T1306;
#define M1306 NULL
typedef T8*T1307;
#define M1307 NULL
typedef T0**T1308;
#define M1308 NULL
typedef T0**T1312;
#define M1312 NULL
typedef T0**T1347;
#define M1347 NULL
typedef T0**T1348;
#define M1348 NULL
typedef T0**T1349;
#define M1349 NULL
typedef T0**T1352;
#define M1352 NULL
typedef T0**T1354;
#define M1354 NULL
typedef T0**T1355;
#define M1355 NULL
typedef T0**T1356;
#define M1356 NULL
typedef T0**T1376;
#define M1376 NULL
/* C Header Pass 2: */
struct S529{T8 _current_entry;T8 _directory_stream;};
int se_cmpT529(T529* o1,T529* o2);
struct S333{T2 _mangling;};
int se_cmpT333(T333* o1,T333* o2);
struct S681{int _file_tools;};
int se_cmpT681(T681* o1,T681* o2);
struct S750{T0* _hashed_string_memory;T2 _column;T2 _line;};
int se_cmpT750(T750* o1,T750* o2);
extern T888 M888;
extern T890 M890;
extern T903 M903;
struct S330{T2 _hash_code;T0* _feature_name;T0* _class_name;};
int se_cmpT330(T330* o1,T330* o2);
struct S517{T6 _direct_error;T6 _direct_output;T6 _direct_input;T0* _group;T6 _keep_environment;};
int se_cmpT517(T517* o1,T517* o2);
struct S758{T0* _item_memory;T2 _capacity;};
int se_cmpT758(T758* o1,T758* o2);
extern T1257 M1257;
struct S728{T2 _first_error_character;T2 _first_error_index;T0* _first_error;};
int se_cmpT728(T728* o1,T728* o2);
extern T1309 M1309;
extern T1327 M1327;
extern T1337 M1337;
extern T1374 M1374;
/* C Header Pass 4: */
struct S25{T0* _level_flag;T6 _version_flag;T6 _help_flag;};
extern T25 M25;
extern T282 M282;
struct S97{T0* _plugin_factory;T0* _plugins;T0* _config_loadpath_names;T0* _config_loadpath_files;T0* _extra_loadpath_files;T6 _c_mode_has_explicit_linker_path_or_option;T0* _smarteiffel_options;T0* _ace_linker_options;T0* _ace_compiler_options;T0* _cpp_strip_path;T0* _cpp_linker_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T2 _c_compiler_mode;T0* _c_compiler;T6 _is_alternate_c_mode;T529 _basic_directory;T0* _is_unix_like;T0* _is_win_like;T6 _no_strip;T0* _short_directory;T0* _bin_directory;T0* _sys_directory;T0* _config;T0* _seconf;T0* _system_flavor;T0* _system_name;};
extern T97 M97;
extern T851 M851;
struct S89{T0* _tmp_feature;T2 _eiffel_parser_stamp;T2 _inline_agent_counter;T0* _last_tag_mark;T0* _last_parent_edge;T0* _last_instruction;T0* _last_formal_generic_type_mark;T0* _last_feature_name_list;T0* _last_feature_name;T0* _last_feature_declaration;T0* _last_class_name;T0* _last_type_mark;T0* _last_expression;T6 _ok;T0* _local_vars;T0* _arguments;T0* _formal_generic_list;T6 _tuple_flag;T6 _inside_rescue_flag;T6 _inside_ensure_flag;T6 _inside_function_flag;T0* _last_class_text;T0* _cluster;T10 _current_id;T6 _is_running;T6 _no_style_warning;T750 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _column;T2 _line;};
extern T89 M89;
struct S113{T0* _output_path;T0* _error_stream;T0* _output_stream;T2 _output_state;T6 _is_verbose;};
extern T113 M113;
struct S267{T6 _sedb_flag;T0* _root_procedure_name_memory;T0* _splitter;T2 _default_assertion_level;T6 _default_trace;T2 _highest_encountered_level;T6 _clean;T6 _precompile_header;T6 _relax;T6 _profile;T6 _high_memory_compiler;T6 _manifest_string_trace;T6 _safety_check;T6 _no_main;T6 _flat_check;T0* _executable_name;T0* _file_path;T0* _default_debug_keys;T750 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T267 M267;
struct S101{T0* _once_mark_list;T0* _registered_natives;T6 _has_c_plus_plus;T0* _include_memory;T6 _executable_is_up_to_date;T0* _out_h;T6 _assignment_evobt;T6 _in_assignment;T2 _function_count_in_file;T6 _assertion_checks_disabled;T2 _pending_c_function_counter;T6 _pending_c_function;T0* _native_array_collector;T0* _native_need_wrapper;T0* _need_struct;T0* _va_arg_type;T0* _argument_type;T0* _result_type;T0* _target_type;T0* _introspection_display;T0* _introspection_function;T0* _native_c_definition;T0* _native_procedure_mapper;T0* _native_function_mapper;T0* _gc_handler;T0* _compound_expression_compiler;T0* _code_compiler;T0* _arg_mapper;T0* _target_mapper;T0* _initializer;T0* _mapper;T0* _live_type_compiler;T0* _header_pass_4;T0* _header_pass_3;T0* _header_pass_2;T0* _header_pass_1;T0* _unused_contexts;T2 _top;T2 _real_function_count;T2 _real_procedure_count;T2 _precursor_routine_count;T2 _function_count;T2 _procedure_count;};
extern T101 M101;
struct S96{int _live_type_sorter;T0* _live_type_map_;T2 _inspect_when_merge_counter;T0* _polymorphic_distribution;T2 _void_target_function_call_count;T2 _void_target_procedure_call_count;T2 _polymorphic_function_call_count;T2 _polymorphic_procedure_call_count;T2 _expanded_target_function_call_count;T2 _expanded_target_procedure_call_count;T2 _monomorphic_function_call_count;T2 _monomorphic_procedure_call_count;T0* _type_real_extended_memory;T0* _type_real_64_memory;T0* _type_real_32_memory;T0* _type_natural_64_memory;T0* _type_natural_32_memory;T0* _type_natural_16_memory;T0* _type_natural_8_memory;T0* _type_integer_64_memory;T0* _type_integer_32_memory;T0* _type_integer_16_memory;T0* _type_integer_8_memory;T0* _type_pointer_memory;T0* _type_unicode_string_memory;T0* _type_native_array_character_memory;T0* _type_string_memory;T0* _type_character_memory;T0* _type_boolean_memory;T0* _type_any_memory;T0* _specializing_feature_local_var_list;T2 _se_atexit_id;T0* _se_atexit_stamp;T6 _simplify_done;T2 _magic_count;T0* _agent_switches;T0* _agent_creations;T0* _class_invariants;T0* _run_features;T0* _root_procedure;T6 _deep_twin_used;T6 _generator_used;T6 _generating_type_used;T6 _no_id;T6 _pretty_flag;T6 _short_or_class_check_flag;};
extern T96 M96;
struct S278{T10 _min_id;T10 _max_id;};
extern T278 M278;
extern T264 M264;
struct S7{Tid id;T6 _has_storage_signature;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;T2 _generation;};
extern T7 M7;
struct S613{T6 _dispose_flag;T0* _need_mark;T0* _before_mark_compiler;T0* _info_compiler;T0* _functions_compiler;T0* _header_compiler;T6 _info_flag;T6 _is_off;};
extern T613 M613;
struct S859{Tid id;T2 _upper;T2 _capacity;T884 _storage;T2 _generation;};
extern T859 M859;
extern T634 M634;
struct S73{T0* _cecil_files;T2 _state;};
extern T73 M73;
struct S860{T0* _item;};
extern T860 M860;
extern T281 M281;
struct S280{T6 _no_warning;T2 _warning_counter;T2 _error_counter;};
extern T280 M280;
extern T544 M544;
extern T529 M529;
struct S63{Tid id;};
extern T63 M63;
struct S861{Tid id;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T897 _buckets;T2 _generation;};
extern T861 M861;
struct S531{Tid id;T0* _destination_notation;T0* _current_path;};
extern T531 M531;
struct S535{Tid id;T0* _destination_notation;T0* _current_path;};
extern T535 M535;
struct S536{Tid id;};
extern T536 M536;
struct S537{Tid id;};
extern T537 M537;
struct S538{Tid id;};
extern T538 M538;
struct S539{Tid id;};
extern T539 M539;
struct S862{T0* _item;};
extern T862 M862;
struct S863{T6 _item;};
extern T863 M863;
struct S87{T2 _capacity;T2 _buffer_position;T2 _buffer_size;T6 _end_reached;T9 _buffer;T8 _input_stream;T3 _filtered_last_character;T6 _end_of_input;T0* _filter;T0* _path;};
extern T87 M87;
struct S530{T0* _smarteiffel_options;T0* _cpp_linker_options;T0* _cpp_compiler_options;T0* _cpp_linker_path;T0* _cpp_strip_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_linker_options;T0* _c_compiler_options;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T0* _c_compiler;};
extern T530 M530;
struct S447{T6 _busy;T0* _names;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _obsolete_mark;T0* _header_comment;T0* _type;T0* _arguments;};
extern T447 M447;
struct S446{Tid id;T8 _output_stream;T2 _capacity;T2 _buffer_position;T9 _buffer;T11 _flushed_character_count;T0* _filter;T0* _path;};
extern T446 M446;
struct S65{Tid id;T0* _filter;};
extern T65 M65;
struct S44{Tid id;T2 _capacity;T9 _buffer;T2 _buffer_position;T0* _filter;};
extern T44 M44;
struct S864{T2 _upper;T2 _capacity;T902 _storage;T2 _generation;};
extern T864 M864;
struct S92{T2 _hash_code;T0* _to_string;};
extern T92 M92;
struct S108{T0* _text;T2 _count;T0* _cluster;T0* _hashed_path;};
extern T108 M108;
struct S675{Tid id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T675 M675;
struct S679{Tid id;int _sorter;T0* _ids;T0* _suffixes;T2 _count;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T679 M679;
struct S677{Tid id;T2 _split_id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T677 M677;
struct S540{T0* _name_list;int _collection_sorter;T6 _exists;T0* _path;T0* _name;T529 _basic_directory;};
extern T540 M540;
struct S680{Tid id;T0* _classeses;T529 _basic_directory;T2 _distance;T0* _parent;};
extern T680 M680;
extern T333 M333;
struct S415{Tid id;T0* _list;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T415 M415;
struct S865{Tid id;T2 _lower;T2 _upper;T2 _capacity;T884 _storage;T2 _generation;};
extern T865 M865;
struct S294{T0* _low_surrogate_values;T0* _low_surrogate_indexes;T2 _capacity;T2 _count;T907 _storage;T2 _generation;};
extern T294 M294;
extern T681 M681;
struct S866{T2 _upper;T2 _capacity;T911 _storage;T2 _generation;};
extern T866 M866;
struct S424{T0* _pool;T0* _type_dictionary;T0* _exclude_list;T0* _include_list;T0* _option_trace;T0* _option_debug_keys;T0* _option_assertion_level;T3 _default_trace;T2 _default_assertion_level;T0* _directory_path;T0* _name;T0* _class_text_map;T0* _tree;T0* _default_debug_keys;};
extern T424 M424;
extern T750 M750;
struct S558{Tid id;T0* _compiled;};
extern T558 M558;
struct S588{Tid id;T0* _compiled;};
extern T588 M588;
struct S589{Tid id;T0* _compiled;};
extern T589 M589;
struct S590{Tid id;T0* _compiled;};
extern T590 M590;
struct S591{Tid id;T0* _compiled;};
extern T591 M591;
struct S603{Tid id;};
extern T603 M603;
struct S604{Tid id;};
extern T604 M604;
struct S605{Tid id;T0* _target_formal_type;T0* _type;};
extern T605 M605;
struct S607{Tid id;T0* _type;};
extern T607 M607;
struct S608{Tid id;T0* _type;};
extern T608 M608;
struct S612{Tid id;T0* _continue;T0* _finish;T0* _type;};
extern T612 M612;
struct S614{Tid id;T0* _name;T0* _bcn;T0* _type_of_current;T0* _rf8;};
extern T614 M614;
struct S615{Tid id;T0* _rf7;T0* _name;T0* _bcn;T0* _type_of_current;};
extern T615 M615;
struct S616{Tid id;T0* _external_routine_memory;T0* _rf8;T0* _rf7;};
extern T616 M616;
struct S617{Tid id;T6 _put_else;};
extern T617 M617;
struct S618{Tid id;T6 _put_coma;};
extern T618 M618;
struct S619{Tid id;};
extern T619 M619;
struct S621{Tid id;};
extern T621 M621;
struct S620{Tid id;};
extern T620 M620;
struct S622{Tid id;};
extern T622 M622;
struct S623{Tid id;T6 _flag;};
extern T623 M623;
struct S624{Tid id;T0* _name;T0* _type_of_current;T6 _flag;};
extern T624 M624;
struct S867{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T935 _buckets;T2 _generation;};
extern T867 M867;
extern T625 M625;
struct S868{T2 _upper;T2 _capacity;T936 _storage;T2 _generation;};
extern T868 M868;
struct S869{T2 _upper;T2 _capacity;T937 _storage;T2 _generation;};
extern T869 M869;
struct S363{Tid id;T0* _writable_attributes_mem;T0* _default_create_run_feature_memory;T0* _to_internals_stamp;T6 _create_blank_internals_used;T0* _create_blank_internals_instruction;T1 _collect_is_deep_equal_status;T6 _collecting_deep_twin;T0* _structure_signature_memory;T0* _actual_clients_;T0* _memory_dispose_stamp;T0* _default_create_stamp;T2 _tagged_memory;T2 _generating_type_level;T6 _has_been_collected;T6 _is_collecting;T0* _precursor_run_features;T0* _precursor_classes;T0* _create_function_list;T0* _live_features;T2 _hash_code;T0* _run_time_set;T6 _at_run_time;T2 _id;T0* _class_text_name;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _type;T0* _tagged_data_map;};
extern T363 M363;
struct S82{T6 _has_tried_to_load;T0* _class_text_memory;T2 _hash_code;T0* _to_string;T0* _hashed_name;T333 _start_position;};
extern T82 M82;
struct S84{Tid id;T0* _insert_inherit_test_memory_cache;T6 _creation_list_check_done;T2 _assertion_level;T0* _declaration_type_of_like_current_memory;T0* _feature_dictionary;T0* _check_expanded_with_flag;T0* _external_type;T2 _hash_code;T6 _sedb_trace;T0* _end_comment;T0* _class_invariant;T0* _feature_clause_list;T0* _creation_clause_list;T0* _parent_lists;T0* _obsolete_mark;T0* _heading_comment2;T0* _formal_generic_list;T0* _name;T6 _is_expanded;T6 _is_deferred;T0* _heading_comment1;T0* _index_list;T0* _cluster;T0* _path;T10 _id;T0* _tagged_data_map;};
extern T84 M84;
struct S870{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T951 _buckets;T2 _generation;};
extern T870 M870;
struct S871{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T954 _buckets;T2 _generation;};
extern T871 M871;
struct S872{T2 _upper;T2 _capacity;T956 _storage;T2 _generation;};
extern T872 M872;
struct S270{T0* _insert_inherit_test_memory_cache;T0* _address_of_memory2;T0* _address_of_memory1;T0* _temporary_simple_feature_name;T0* _writable_attributes_memory;T0* _feature_stamps;T0* _external_type;T6 _is_deferred;T0* _class_invariant;T2 _hash_code;T0* _private_generic_list;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _live_type;T6 _default_rescue_collected;T0* _default_rescue_compound;T0* _children_edge_load;T0* _parents_edge_load;T6 _mark;T0* _children_edge;T0* _parents_edge;T0* _children;T0* _parents;T0* _item;};
extern T270 M270;
struct S76{T0* _run_features;T0* _rename_down_child_feature_stamp;T0* _rename_down_edge;T0* _rename_down_child_class;T0* _rename_down_context_class;T0* _rename_up_parent_feature_stamp;T0* _rename_up_edge;T0* _rename_up_parent_class;T0* _rename_up_context_class;T0* _anonymous_features;T0* _roots;T2 _hash_code;T0* _name;};
extern T76 M76;
struct S527{T6 _inlining_dynamic_dispatch_done;T6 _collecting_done;T0* _specializing_type_memory;T2 _safety_check_state;T2 _phase;};
extern T527 M527;
struct S874{T2 _lower;T2 _upper;T2 _capacity;T956 _storage;T2 _generation;};
extern T874 M874;
struct S324{T2 _sedb_counter;T0* _current_context;T2 _context_level;T0* _code_stack;};
extern T324 M324;
extern T95 M95;
struct S93{T0* _se_ums_;T0* _unicode_string_type;T0* _unicode_string_manifest_initialize_stamp;T6 _first_unicode_manifest_string_collected_flag;T6 _first_manifest_string_collected_flag;};
extern T93 M93;
extern T99 M99;
extern T112 M112;
struct S109{T6 _agent_creation_collected_flag;};
extern T109 M109;
extern T114 M114;
struct S78{T0* _native_array_internals_from_generating_type_args;T333 _native_array_internals_from_generating_type_position;T333 _internals_from_generating_type_position;T6 _has_capacity;T6 _can_twin;T0* _native_array_element_type;T0* _target_type;T0* _new_type;T0* _external_routine;T0* _type_internals_handler;};
extern T78 M78;
struct S433{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T433 M433;
struct S876{T2 _lower;T2 _upper;T2 _capacity;T984 _storage;T2 _generation;};
extern T876 M876;
struct S877{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T987 _buckets;T2 _generation;};
extern T877 M877;
struct S105{T0* _insert_seeds;T0* _seeds;T0* _insert_problem_seeds;T0* _seeds_of_current_feature;T0* _insert_seeds_of_current_feature;T0* _feature_stamps_memory;T0* _features_dictionary;T0* _free;T0* _features;T0* _feature_stamp;T1 _state;T2 _waiting_type;T0* _current_mixer;T6 _specialize_2_in_progress;T0* _pending_list;T0* _specialize_2_list;T0* _current_fn;T0* _context_type;};
extern T105 M105;
struct S428{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T428 M428;
struct S880{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1004 _buckets;T2 _generation;};
extern T880 M880;
extern T689 M689;
struct S881{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1007 _buckets;T2 _generation;};
extern T881 M881;
struct S882{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1008 _buckets;T2 _generation;};
extern T882 M882;
struct S782{Tid id;};
extern T782 M782;
struct S784{Tid id;T0* _wa_cycle;T0* _wa_cyclic_buf;T0* _wa_buf;};
extern T784 M784;
struct S785{Tid id;};
extern T785 M785;
struct S786{Tid id;};
extern T786 M786;
struct S787{Tid id;T6 _flag;};
extern T787 M787;
struct S323{T0* _entries;T0* _path_h;T0* _path;};
extern T323 M323;
struct S886{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1018 _buckets;T2 _generation;};
extern T886 M886;
struct S887{T2 _upper;T2 _capacity;T1019 _storage;T2 _generation;};
extern T887 M887;
struct S771{Tid id;T0* _config;};
extern T771 M771;
struct S772{Tid id;T0* _my_path;T0* _my_c_modes;T0* _my_tools;T0* _my_loadpaths;T0* _my_environment;T0* _java_compiler;T0* _java_virtual_machine;T0* _jar;T2 _jobs;T0* _flavor;T0* _os;T0* _short;T0* _sys;T0* _bin;};
extern T772 M772;
struct S891{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1023 _buckets;T2 _generation;};
extern T891 M891;
struct S892{T2 _upper;T2 _capacity;T1026 _storage;T2 _generation;};
extern T892 M892;
struct S303{Tid id;T0* _original;T0* _holders;T6 _is_interned;T6 _immutable;T2 _hash_code;T6 _has_storage_signature;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;};
extern T303 M303;
struct S893{T0* _next;T0* _key;T0* _item;};
extern T893 M893;
struct S896{Tid id;T0* _item;};
extern T896 M896;
struct S898{Tid id;T0* _item;};
extern T898 M898;
struct S899{T0* _next;T0* _key;T0* _item;};
extern T899 M899;
struct S900{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1029 _buckets;T2 _generation;};
extern T900 M900;
struct S901{T2 _upper;T2 _capacity;T1030 _storage;T2 _generation;};
extern T901 M901;
struct S274{T0* _name;T333 _start_position;T2 _name_type;};
extern T274 M274;
struct S905{T2 _upper;T2 _capacity;T1031 _storage;T2 _generation;};
extern T905 M905;
struct S91{T0* _sections;T0* _default_section;T0* _last_key;T0* _last_section;T6 _expand_execute;T6 _expand_var;T10 _id;T6 _is_invalid;T0* _file_path;T750 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T91 M91;
struct S908{T2 _upper;T2 _capacity;T907 _storage;T2 _generation;};
extern T908 M908;
struct S741{Tid id;T0* _path;T0* _name;T0* _cluster;T0* _classeses;T529 _basic_directory;T2 _distance;T0* _parent;};
extern T741 M741;
struct S791{Tid id;T0* _path;T0* _name;T0* _classeses;T529 _basic_directory;T2 _distance;T0* _parent;};
extern T791 M791;
struct S910{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1041 _buckets;T2 _generation;};
extern T910 M910;
struct S912{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1044 _buckets;T2 _generation;};
extern T912 M912;
struct S914{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1045 _buckets;T2 _generation;};
extern T914 M914;
struct S916{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1050 _buckets;T2 _generation;};
extern T916 M916;
struct S743{T0* _cluster;T0* _classes;};
extern T743 M743;
struct S919{T2 _upper;T2 _capacity;T1052 _storage;T2 _generation;};
extern T919 M919;
struct S444{T6 _is_inline_agent;T333 _sedb_trace_before_exit;T0* _obsolete_mark;T0* _header_comment;T0* _anonymous_feature;T0* _result_type;T0* _arguments;T0* _names;T0* _feature_clause;};
extern T444 M444;
struct S421{T0* _list;T0* _tag;};
extern T421 M421;
struct S375{Tid id;T2 _hash_code_memory;T0* _source_view;T0* _once_variable;T0* _initial_storage_id;T0* _alias_link;T0* _unicode_string;T0* _to_string;T6 _unicode_flag;T6 _once_flag;T333 _start_position;};
extern T375 M375;
struct S427{T6 _no_generic_constraint_flag;T0* _list;T333 _start_position;};
extern T427 M427;
struct S436{T2 _rank;T0* _constraint;T0* _name;};
extern T436 M436;
struct S478{Tid id;T2 _rank;T0* _formal_generic_arg;T0* _formal_name;T6 _already_checking;T0* _written_name;T0* _class_text_memory;};
extern T478 M478;
struct S488{Tid id;T333 _start_position;T0* _class_text_memory;};
extern T488 M488;
struct S490{Tid id;T0* _feature_stamp_memory;T0* _declaration_type;T0* _written_name;T0* _like_what;T333 _start_position;T0* _class_text_memory;};
extern T490 M490;
struct S349{Tid id;T0* _flat_list;T0* _list;};
extern T349 M349;
struct S106{T2 _mode;T6 _semi_colon_flag;};
extern T106 M106;
struct S491{Tid id;T6 _like_argument_computing;T0* _type_marks_memory;T0* _written_name;T0* _like_what;T333 _start_position;T0* _class_text_memory;};
extern T491 M491;
struct S440{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T440 M440;
struct S403{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T403 M403;
struct S376{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T376 M376;
struct S431{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T431 M431;
struct S402{Tid id;T2 _bit_count_memory;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T402 M402;
struct S429{Tid id;T2 _bit_count;T0* _class_text_name;T0* _class_text_memory;};
extern T429 M429;
struct S398{Tid id;T0* _type_memory;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T398 M398;
struct S432{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T432 M432;
struct S430{Tid id;T2 _bit_count;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T430 M430;
struct S437{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T437 M437;
struct S434{Tid id;T0* _type_memory;T0* _class_text_name;T0* _class_text_memory;};
extern T434 M434;
struct S438{Tid id;T2 _pretty_code;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T438 M438;
struct S441{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T441 M441;
struct S266{T2 _idx;T2 _count;T0* _to_string;T0* _manifest_string;};
extern T266 M266;
struct S461{Tid id;T0* _external_tag;};
extern T461 M461;
struct S463{Tid id;T0* _alias_data;T2 _hash_code;T0* _plugin;T0* _feature_name;T0* _external_tag;};
extern T463 M463;
struct S464{Tid id;T0* _rf8_memory;T0* _rf7_memory;T0* _external_tag;};
extern T464 M464;
struct S465{Tid id;T6 _c_inline;T0* _signature;T2 _access_mode;T0* _type;T0* _access;T0* _struct;T6 _macro;T6 _parsing_done;T6 _need_prototype;T0* _external_tag;};
extern T465 M465;
struct S466{Tid id;T0* _external_tag;};
extern T466 M466;
struct S416{T0* _alias_tag;T0* _native;T333 _start_position;T0* _default_value;T0* _type_name;};
extern T416 M416;
struct S920{T2 _upper;T2 _capacity;T1056 _storage;T2 _generation;};
extern T920 M920;
struct S273{T0* _comment;T0* _redefine_list;T0* _undefine_list;T0* _export_list;T0* _rename_list;T6 _is_insert_member;T0* _parent_lists;T0* _class_text_name;T0* _class_text;T0* _type_mark;};
extern T273 M273;
struct S471{T0* _old_name;T0* _new_name;};
extern T471 M471;
struct S921{T2 _upper;T2 _capacity;T1057 _storage;T2 _generation;};
extern T921 M921;
struct S511{Tid id;T0* _list;T333 _start_position;};
extern T511 M511;
struct S480{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T480 M480;
struct S396{Tid id;T0* _right_side;T0* _left_writable;T0* _left_type_mark;};
extern T396 M396;
struct S467{Tid id;T0* _notify_memory;T0* _resolved_memory;T2 _rank;T0* _curly_type;T333 _start_position;};
extern T467 M467;
struct S366{Tid id;T0* _pretty_view;T0* _result_type_memory;T2 _size;T11 _value_memory;T333 _start_position;};
extern T366 M366;
struct S468{Tid id;T0* _normalized_memory;T0* _result_type;T0* _pretty_view;T333 _start_position;};
extern T468 M468;
struct S469{Tid id;T333 _irregular_position;T0* _manifest_put_feature_stamp;T0* _manifest_make_feature_stamp;T0* _created_type;T2 _semicolon_count;T0* _item_list;T0* _optional_arguments;T0* _type_mark;T333 _start_position;};
extern T469 M469;
struct S334{T0* _remainder;T0* _first_one;};
extern T334 M334;
struct S343{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T343 M343;
struct S346{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T346 M346;
struct S348{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T348 M348;
struct S337{Tid id;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T337 M337;
struct S341{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T341 M341;
struct S342{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T342 M342;
struct S482{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T482 M482;
struct S483{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T483 M483;
struct S484{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T484 M484;
struct S473{Tid id;T0* _create_expression;T0* _effective_arg_list;T333 _start_position;};
extern T473 M473;
struct S380{Tid id;T333 _start_position;};
extern T380 M380;
struct S451{Tid id;T333 _start_position;};
extern T451 M451;
struct S457{Tid id;T0* _pretty_view;T3 _value;T333 _start_position;};
extern T457 M457;
struct S474{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T333 _start_position;};
extern T474 M474;
struct S508{Tid id;T0* _declaration_type_memory;T0* _explicit_type_mark;T333 _start_position;};
extern T508 M508;
struct S509{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T333 _start_position;};
extern T509 M509;
struct S922{T2 _upper;T2 _capacity;T1059 _storage;T2 _generation;};
extern T922 M922;
struct S923{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1060 _storage;T2 _generation;};
extern T923 M923;
struct S448{Tid id;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T333 _start_position;};
extern T448 M448;
struct S449{Tid id;T0* _name_list;};
extern T449 M449;
struct S924{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1061 _storage;T2 _generation;};
extern T924 M924;
struct S386{Tid id;T0* _name;};
extern T386 M386;
struct S925{T2 _lower;T2 _upper;T2 _capacity;T1062 _storage;T2 _generation;};
extern T925 M925;
struct S658{Tid id;T0* _direct_parents_require;T0* _local_require;T6 _is_require_else;T2 _eiffel_parser_stamp;};
extern T658 M658;
struct S926{T2 _upper;T2 _capacity;T1064 _storage;T2 _generation;};
extern T926 M926;
struct S413{Tid id;T0* _source_view;T0* _comment;T0* _expression;T0* _tag;};
extern T413 M413;
struct S383{Tid id;T2 _live_reference_counter;T2 _parsing_reference_counter;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T333 _start_position;};
extern T383 M383;
struct S927{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1065 _storage;T2 _generation;};
extern T927 M927;
struct S387{Tid id;T0* _flat_list;T0* _list;};
extern T387 M387;
struct S443{T0* _remainder;T0* _first;};
extern T443 M443;
struct S510{Tid id;T0* _assertion_list;T2 _eiffel_parser_stamp;};
extern T510 M510;
struct S928{T2 _upper;T2 _capacity;T1066 _storage;T2 _generation;};
extern T928 M928;
struct S470{Tid id;T0* _compound;T0* _key_list;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T470 M470;
struct S407{Tid id;T0* _then_compound;T0* _expression;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T407 M407;
struct S393{Tid id;T0* _else_compound;T0* _elseif_list;T0* _then_compound;T0* _expression;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T393 M393;
struct S929{T2 _upper;T2 _capacity;T1068 _storage;T2 _generation;};
extern T929 M929;
struct S352{Tid id;T0* _strip_condition;T0* _values;T0* _list;T0* _condition_live_type;T0* _compound;T0* _header_comment;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T352 M352;
struct S364{Tid id;T0* _declaration_type;T333 _start_position;};
extern T364 M364;
struct S357{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T333 _else_position;T0* _when_list;T0* _expression;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T357 M357;
struct S472{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T333 _else_position;T0* _when_list;T0* _expression;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T472 M472;
struct S418{Tid id;T0* _list;T0* _header_comment;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T418 M418;
struct S459{Tid id;T0* _expression;T0* _comment2;T0* _tag;T0* _comment1;};
extern T459 M459;
struct S460{Tid id;T0* _loop_body;T0* _until_expression;T0* _loop_variant;T0* _loop_invariant;T0* _initialize;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T460 M460;
struct S359{Tid id;T0* _once_function;T0* _enclosing_function;T0* _written_declaration_type_mark;T0* _type_mark_memory;T0* _declaration_type;T333 _start_position;};
extern T359 M359;
struct S399{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T399 M399;
struct S458{Tid id;T333 _start_position;T0* _c_code;T6 _is_c_inline_c;T2 _eiffel_parser_stamp;};
extern T458 M458;
struct S487{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T487 M487;
struct S477{Tid id;T0* _declaration_type;T333 _start_position;};
extern T477 M477;
struct S362{Tid id;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T362 M362;
struct S389{Tid id;T6 _forced_flag;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T389 M389;
struct S454{Tid id;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T454 M454;
struct S390{Tid id;T0* _list;T2 _eiffel_parser_stamp;};
extern T390 M390;
struct S653{Tid id;T6 _is_ensure_then;T0* _list;T0* _header_comment;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T653 M653;
struct S476{Tid id;T0* _inline_feature;T0* _resolved_memory;T0* _closed_operand_list;T0* _open_operand_list;T0* _code;T0* _original_function_call;T333 _start_position;};
extern T476 M476;
struct S391{Tid id;T333 _start_position;};
extern T391 M391;
struct S485{Tid id;T0* _expression;T333 _start_position;T0* _tagged_data_map;};
extern T485 M485;
struct S507{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T507 M507;
struct S506{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T506 M506;
struct S502{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T502 M502;
struct S503{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T503 M503;
struct S504{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T504 M504;
struct S505{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T505 M505;
struct S501{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T501 M501;
struct S369{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T369 M369;
struct S392{Tid id;T0* _right_side;T0* _left_side;T333 _operator_position;T6 _eq_flag;};
extern T392 M392;
struct S497{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T497 M497;
struct S498{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T498 M498;
struct S499{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T499 M499;
struct S500{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T500 M500;
struct S397{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T397 M397;
struct S496{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T496 M496;
struct S493{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T493 M493;
struct S494{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T494 M494;
struct S495{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T495 M495;
struct S492{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T492 M492;
struct S452{Tid id;T0* _comment;T0* _expression;};
extern T452 M452;
struct S453{Tid id;T0* _calling_code;T0* _feature_stamp;T0* _target_type;T0* _feature_name;T0* _local_name;};
extern T453 M453;
struct S486{T0* _remainder;T0* _first;};
extern T486 M486;
struct S279{T0* _eiffel_view_memory;T0* _class_name_list;T333 _start_position;};
extern T279 M279;
struct S456{T0* _permissions;T0* _items;T0* _for_all;T333 _start_position;};
extern T456 M456;
struct S455{T0* _list;T0* _clients;};
extern T455 M455;
struct S930{T2 _lower;T2 _upper;T2 _capacity;T1076 _storage;T2 _generation;};
extern T930 M930;
struct S414{T0* _procedure_list;T0* _comment;T0* _clients;T333 _start_position;};
extern T414 M414;
struct S423{T0* _list;T0* _class_text;T0* _comment;T0* _clients;};
extern T423 M423;
struct S742{T0* _path;T0* _cluster;T0* _class_name;};
extern T742 M742;
struct S450{T333 _start_position;T0* _hashed_name;};
extern T450 M450;
struct S353{Tid id;T0* _formal_arg_list;T0* _declaration_type;T2 _rank;T333 _start_position;};
extern T353 M353;
struct S405{Tid id;T0* _declaration_type;T0* _written_declaration_type_mark;T0* _feature_stamp;T0* _feature_name;};
extern T405 M405;
struct S388{Tid id;T0* _local_var_list;T0* _written_declaration_type_mark;T0* _declaration_type;T2 _rank;T333 _start_position;};
extern T388 M388;
struct S931{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1077 _buckets;T2 _generation;};
extern T931 M931;
struct S932{T2 _upper;T2 _capacity;T1080 _storage;T2 _generation;};
extern T932 M932;
struct S933{Tid id;T0* _item;};
extern T933 M933;
struct S934{T0* _next;T0* _key;T0* _item;};
extern T934 M934;
struct S938{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1083 _buckets;T2 _generation;};
extern T938 M938;
struct S525{T0* _sorted;T0* _set;T0* _owner;};
extern T525 M525;
struct S939{T2 _lower;T2 _upper;T2 _capacity;T1086 _storage;T2 _generation;};
extern T939 M939;
struct S941{T2 _upper;T2 _capacity;T1087 _storage;T2 _generation;};
extern T941 M941;
struct S425{Tid id;T2 _rank;T0* _end_comment;T0* _specialized_feature_stamp;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T425 M425;
struct S417{Tid id;T0* _list;T0* _header_comment;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T417 M417;
struct S947{T2 _upper;T2 _capacity;T1088 _storage;T2 _generation;};
extern T947 M947;
struct S948{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1089 _buckets;T2 _generation;};
extern T948 M948;
struct S445{T0* _insert_list;T0* _inherit_list;T6 _default_insert_any_added_flag;T0* _insert_comment;T0* _inherit_comment;T0* _class_text;};
extern T445 M445;
struct S422{T0* _list;};
extern T422 M422;
struct S442{T0* _list;};
extern T442 M442;
struct S949{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1096 _buckets;T2 _generation;};
extern T949 M949;
struct S420{T0* _list;};
extern T420 M420;
struct S950{T0* _next;T0* _key;T0* _item;};
extern T950 M950;
struct S952{Tid id;T0* _item;};
extern T952 M952;
struct S953{T0* _next;T0* _key;T0* _item;};
extern T953 M953;
struct S955{Tid id;T0* _item;};
extern T955 M955;
struct S957{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1098 _buckets;T2 _generation;};
extern T957 M957;
struct S958{T2 _upper;T2 _capacity;T1086 _storage;T2 _generation;};
extern T958 M958;
struct S959{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _capacity;T1102 _val_buckets;T1102 _key_buckets;T2 _count;T2 _generation;};
extern T959 M959;
struct S962{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1108 _buckets;T2 _generation;};
extern T962 M962;
struct S963{T2 _upper;T2 _capacity;T906 _storage;T2 _generation;};
extern T963 M963;
struct S964{T2 _upper;T2 _capacity;T1109 _storage;T2 _generation;};
extern T964 M964;
struct S965{T2 _upper;T2 _capacity;T1110 _storage;T2 _generation;};
extern T965 M965;
struct S966{T2 _upper;T2 _capacity;T1111 _storage;T2 _generation;};
extern T966 M966;
struct S967{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1114 _buckets;T2 _generation;};
extern T967 M967;
struct S518{T0* _destination_graph_nodes;T2 _hash_code;T0* _source_type;};
extern T518 M518;
struct S969{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1116 _buckets;T2 _generation;};
extern T969 M969;
struct S973{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1121 _buckets;T2 _generation;};
extern T973 M973;
struct S974{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1122 _buckets;T2 _generation;};
extern T974 M974;
struct S975{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1127 _buckets;T2 _generation;};
extern T975 M975;
struct S976{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1128 _buckets;T2 _generation;};
extern T976 M976;
struct S977{T2 _upper;T2 _capacity;T1131 _storage;T2 _generation;};
extern T977 M977;
struct S520{Tid id;T0* _context_type;T0* _feature_stamp;T0* _dynamic_type;};
extern T520 M520;
struct S978{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1134 _buckets;T2 _generation;};
extern T978 M978;
struct S979{T2 _upper;T2 _capacity;T1275 _storage;T2 _generation;};
extern T979 M979;
struct S553{T0* _agent_type;T0* _signature;};
extern T553 M553;
struct S981{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1135 _buckets;T2 _generation;};
extern T981 M981;
struct S982{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1139 _buckets;T2 _generation;};
extern T982 M982;
struct S983{T2 _upper;T2 _capacity;T1141 _storage;T2 _generation;};
extern T983 M983;
struct S395{Tid id;T0* _result_type;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T395 M395;
struct S985{Tid id;T0* _item;};
extern T985 M985;
struct S986{T0* _next;T0* _key;T0* _item;};
extern T986 M986;
struct S988{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1142 _buckets;T2 _generation;};
extern T988 M988;
struct S989{T2 _upper;T2 _capacity;T1145 _storage;T2 _generation;};
extern T989 M989;
struct S628{T6 _local_definition;T6 _signature_ready;T0* _body_inherit;T0* _body_type;T0* _body_feature;T0* _build_definition;T0* _parents_edges;T0* _parents_type;T0* _parents_af;T0* _feature_name;T1 _computing_result_type;};
extern T628 M628;
struct S990{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1148 _buckets;T2 _generation;};
extern T990 M990;
struct S991{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1086 _storage;T2 _generation;};
extern T991 M991;
struct S992{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1149 _buckets;T2 _generation;};
extern T992 M992;
extern T330 M330;
struct S993{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1154 _buckets;T2 _generation;};
extern T993 M993;
struct S998{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1157 _buckets;T2 _generation;};
extern T998 M998;
struct S999{T2 _lower;T2 _upper;T2 _capacity;T1158 _storage;T2 _generation;};
extern T999 M999;
struct S1000{T2 _lower;T2 _upper;T2 _capacity;T1159 _storage;T2 _generation;};
extern T1000 M1000;
struct S1001{T2 _upper;T2 _capacity;T1088 _storage;T2 _generation;};
extern T1001 M1001;
struct S1002{Tid id;T0* _item;};
extern T1002 M1002;
struct S1003{T0* _next;T0* _key;T0* _item;};
extern T1003 M1003;
struct S1005{Tid id;T0* _item;};
extern T1005 M1005;
struct S1006{T0* _next;T0* _key;T10 _item;};
extern T1006 M1006;
struct S1009{T0* _next;T0* _item;};
extern T1009 M1009;
struct S1012{Tid id;T0* _item;};
extern T1012 M1012;
struct S1013{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1162 _buckets;T2 _generation;};
extern T1013 M1013;
struct S1014{T2 _upper;T2 _capacity;T1163 _storage;T2 _generation;};
extern T1014 M1014;
struct S401{Tid id;T0* _ensure_assertion;T0* _require_assertion;T2 _order;T0* _result_type;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T401 M401;
struct S1015{T2 _upper;T2 _capacity;T1164 _storage;T2 _generation;};
extern T1015 M1015;
struct S554{T0* _target_type;T0* _code;T6 _is_creation;T0* _feature_name;T0* _target_type_mark;T0* _c_name;};
extern T554 M554;
struct S1016{Tid id;T0* _item;};
extern T1016 M1016;
struct S1017{T0* _next;T0* _key;T0* _item;};
extern T1017 M1017;
struct S1020{T2 _upper;T2 _capacity;T1166 _storage;T2 _generation;};
extern T1020 M1020;
struct S1021{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1168 _buckets;T2 _generation;};
extern T1021 M1021;
struct S1024{T0* _next;T2 _key;T0* _item;};
extern T1024 M1024;
struct S1025{Tid id;T0* _item;};
extern T1025 M1025;
struct S1027{T2 _upper;T2 _capacity;T1170 _storage;T2 _generation;};
extern T1027 M1027;
struct S1032{T0* _ordered_keys;T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1171 _buckets;T2 _generation;};
extern T1032 M1032;
struct S1033{Tid id;T0* _ordered_keys;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T897 _buckets;T2 _generation;};
extern T1033 M1033;
extern T517 M517;
struct S513{int _items_comparator;T0* _strings;T758 _recycling_item;};
extern T513 M513;
struct S1035{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1179 _buckets;T2 _generation;};
extern T1035 M1035;
struct S767{Tid id;T0* _to_string;};
extern T767 M767;
struct S1037{T2 _upper;T2 _capacity;T1181 _storage;T2 _generation;};
extern T1037 M1037;
struct S1038{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1184 _buckets;T2 _generation;};
extern T1038 M1038;
struct S1039{Tid id;T0* _item;};
extern T1039 M1039;
struct S1040{T0* _next;T0* _key;T0* _item;};
extern T1040 M1040;
struct S1042{Tid id;T0* _item;};
extern T1042 M1042;
struct S1043{T0* _next;T0* _key;T0* _item;};
extern T1043 M1043;
struct S1046{T0* _next;T0* _item;};
extern T1046 M1046;
struct S1047{Tid id;T0* _item;};
extern T1047 M1047;
struct S1048{Tid id;T0* _item;};
extern T1048 M1048;
struct S1049{T0* _next;T0* _key;T2 _item;};
extern T1049 M1049;
struct S1051{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1185 _buckets;T2 _generation;};
extern T1051 M1051;
struct S636{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T636 M636;
struct S644{Tid id;T2 _rank;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T644 M644;
struct S555{Tid id;T0* _result_type;T0* _inline_result;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T555 M555;
struct S649{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T649 M649;
struct S646{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T646 M646;
struct S647{Tid id;T0* _result_type;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T647 M647;
struct S642{Tid id;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T642 M642;
struct S645{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T645 M645;
struct S643{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T643 M643;
struct S648{Tid id;T0* _result_type;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T648 M648;
struct S639{Tid id;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T639 M639;
struct S638{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T638 M638;
struct S641{Tid id;T0* _value_memory;T2 _rank;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T641 M641;
struct S1053{T2 _lower;T2 _upper;T2 _capacity;T1188 _storage;T2 _generation;};
extern T1053 M1053;
struct S1054{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1191 _buckets;T2 _generation;};
extern T1054 M1054;
struct S1055{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1194 _buckets;T2 _generation;};
extern T1055 M1055;
struct S683{T0* _list;};
extern T683 M683;
struct S1058{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1198 _buckets;T2 _generation;};
extern T1058 M1058;
struct S1063{T2 _upper;T2 _capacity;T1199 _storage;T2 _generation;};
extern T1063 M1063;
struct S1067{T2 _upper;T2 _capacity;T1200 _storage;T2 _generation;};
extern T1067 M1067;
struct S724{Tid id;T0* _lower_manifest_expression;T0* _upper_manifest_expression;T0* _upper;T0* _lower;};
extern T724 M724;
struct S1069{T2 _upper;T2 _capacity;T1201 _storage;T2 _generation;};
extern T1069 M1069;
struct S374{Tid id;T0* _manifest_expression;T0* _expression;};
extern T374 M374;
struct S670{Tid id;T0* _list;};
extern T670 M670;
struct S661{Tid id;T0* _declaration_type;T0* _type_mark;T0* _writable;};
extern T661 M661;
struct S1070{T2 _upper;T2 _capacity;T1202 _storage;T2 _generation;};
extern T1070 M1070;
struct S1071{T2 _upper;T2 _capacity;T1203 _storage;T2 _generation;};
extern T1071 M1071;
struct S666{Tid id;T6 _inside_agent_launcher_flag;T0* _capture_memory;T2 _rank;T0* _original_capture;T333 _start_position;};
extern T666 M666;
struct S1072{T2 _upper;T2 _capacity;T1205 _storage;T2 _generation;};
extern T1072 M1072;
struct S1073{T2 _upper;T2 _capacity;T1206 _storage;T2 _generation;};
extern T1073 M1073;
struct S1074{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1209 _buckets;T2 _generation;};
extern T1074 M1074;
struct S1078{T0* _next;T0* _item;};
extern T1078 M1078;
struct S1079{Tid id;T0* _item;};
extern T1079 M1079;
struct S1081{Tid id;T0* _item;};
extern T1081 M1081;
struct S1082{T0* _next;T0* _key;T0* _item;};
extern T1082 M1082;
struct S1090{T0* _next;T0* _key;T1 _item;};
extern T1090 M1090;
struct S1091{Tid id;T0* _item;};
extern T1091 M1091;
struct S1092{T2 _upper;T2 _capacity;T1210 _storage;T2 _generation;};
extern T1092 M1092;
struct S1093{T2 _upper;T2 _capacity;T1211 _storage;T2 _generation;};
extern T1093 M1093;
struct S1094{Tid id;T0* _item;};
extern T1094 M1094;
struct S1095{T0* _next;T0* _key;T0* _item;};
extern T1095 M1095;
struct S1097{T2 _lower;T2 _upper;T2 _capacity;T1212 _storage;T2 _generation;};
extern T1097 M1097;
struct S1099{T0* _next;T0* _key;T1 _item;};
extern T1099 M1099;
struct S1100{Tid id;T0* _item;};
extern T1100 M1100;
struct S1101{T0* _next_val;T0* _next_key;T0* _key;T0* _val;};
extern T1101 M1101;
struct S1103{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1213 _buckets;T2 _generation;};
extern T1103 M1103;
struct S1105{T0* _item;};
extern T1105 M1105;
struct S1106{Tid id;T0* _item;};
extern T1106 M1106;
struct S1107{T0* _next;T0* _key;T0* _item;};
extern T1107 M1107;
struct S1112{T0* _next;T0* _key;T0* _item;};
extern T1112 M1112;
struct S1113{Tid id;T0* _item;};
extern T1113 M1113;
struct S1117{T0* _next;T0* _item;};
extern T1117 M1117;
struct S1118{Tid id;T0* _item;};
extern T1118 M1118;
struct S1119{Tid id;T0* _item;};
extern T1119 M1119;
struct S1120{T0* _next;T0* _key;T0* _item;};
extern T1120 M1120;
struct S1123{T0* _next;T0* _item;};
extern T1123 M1123;
struct S1124{Tid id;T0* _item;};
extern T1124 M1124;
struct S1125{Tid id;T0* _item;};
extern T1125 M1125;
struct S1126{T0* _next;T0* _key;T0* _item;};
extern T1126 M1126;
struct S1129{T0* _next;T0* _item;};
extern T1129 M1129;
struct S1130{Tid id;T0* _item;};
extern T1130 M1130;
struct S1132{T0* _next;T0* _key;T0* _item;};
extern T1132 M1132;
struct S1133{Tid id;T0* _item;};
extern T1133 M1133;
struct S1136{T0* _next;T0* _item;};
extern T1136 M1136;
struct S1137{Tid id;T0* _item;};
extern T1137 M1137;
struct S1138{T0* _next;T0* _key;T0* _item;};
extern T1138 M1138;
struct S1140{Tid id;T0* _item;};
extern T1140 M1140;
struct S408{Tid id;T0* _compound;T2 _eiffel_parser_stamp;};
extern T408 M408;
struct S725{T333 _empty_position;T0* _headers;T0* _string_pool;};
extern T725 M725;
struct S1143{T0* _next;T0* _key;T0* _item;};
extern T1143 M1143;
struct S1144{Tid id;T0* _item;};
extern T1144 M1144;
struct S1146{Tid id;T0* _item;};
extern T1146 M1146;
struct S1147{T0* _next;T0* _key;T0* _item;};
extern T1147 M1147;
struct S1150{T0* _next;T330 _item;};
extern T1150 M1150;
struct S1151{Tid id;T0* _item;};
extern T1151 M1151;
struct S1152{Tid id;T0* _item;};
extern T1152 M1152;
struct S1153{T0* _next;T330 _key;T0* _item;};
extern T1153 M1153;
struct S1155{Tid id;T0* _item;};
extern T1155 M1155;
struct S1156{T0* _next;T0* _key;T0* _item;};
extern T1156 M1156;
struct S1160{Tid id;T0* _item;};
extern T1160 M1160;
struct S1161{T0* _next;T0* _key;T0* _item;};
extern T1161 M1161;
struct S351{Tid id;T2 _rank;T333 _start_position;T0* _result_type;T0* _declaration_type;};
extern T351 M351;
struct S1165{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1216 _buckets;T2 _generation;};
extern T1165 M1165;
struct S1167{T0* _next;T0* _key;T0* _item;};
extern T1167 M1167;
struct S1169{Tid id;T0* _item;};
extern T1169 M1169;
struct S1172{T0* _next;T0* _key;T0* _item;};
extern T1172 M1172;
struct S1173{Tid id;T2 _item_index;T0* _traversable;T2 _generation;};
extern T1173 M1173;
struct S1175{Tid id;T0* _item;};
extern T1175 M1175;
struct S763{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T763 M763;
struct S764{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T764 M764;
struct S765{Tid id;T0* _group;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T765 M765;
struct S760{Tid id;T8 _data;T0* _id_map;};
extern T760 M760;
struct S761{Tid id;T8 _data;T6 _handle_list_dirty;T0* _handle_map;};
extern T761 M761;
struct S762{Tid id;};
extern T762 M762;
struct S1176{T2 _upper;T2 _capacity;T1221 _storage;T2 _generation;};
extern T1176 M1176;
extern T758 M758;
extern T817 M817;
struct S1178{T0* _next;T0* _key;T0* _item;};
extern T1178 M1178;
struct S1180{Tid id;T0* _item;};
extern T1180 M1180;
struct S1182{Tid id;T0* _item;};
extern T1182 M1182;
struct S1183{T0* _next;T0* _key;T0* _item;};
extern T1183 M1183;
struct S1186{T0* _next;T0* _key;T0* _item;};
extern T1186 M1186;
struct S1187{Tid id;T0* _item;};
extern T1187 M1187;
struct S1189{Tid id;T0* _item;};
extern T1189 M1189;
struct S1190{T0* _next;T0* _key;T0* _item;};
extern T1190 M1190;
struct S1192{Tid id;T0* _item;};
extern T1192 M1192;
struct S1193{T0* _next;T0* _key;T0* _item;};
extern T1193 M1193;
struct S1195{T2 _upper;T2 _capacity;T1223 _storage;T2 _generation;};
extern T1195 M1195;
struct S1196{Tid id;T0* _item;};
extern T1196 M1196;
struct S1197{T0* _next;T0* _key;T0* _item;};
extern T1197 M1197;
struct S1204{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1226 _buckets;T2 _generation;};
extern T1204 M1204;
struct S1207{Tid id;T0* _item;};
extern T1207 M1207;
struct S1208{T0* _next;T0* _key;T0* _item;};
extern T1208 M1208;
struct S1214{T0* _next;T0* _key;T0* _item;};
extern T1214 M1214;
struct S1215{Tid id;T0* _item;};
extern T1215 M1215;
struct S815{T0* _transitions;T0* _headers;T0* _tag_state;T2 _empty_idx;T2 _id;T2 _maxstate;T6 _has_empty;};
extern T815 M815;
struct S1217{T0* _next;T0* _item;};
extern T1217 M1217;
struct S1218{Tid id;T0* _item;};
extern T1218 M1218;
struct S1219{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1233 _buckets;T2 _generation;};
extern T1219 M1219;
struct S1220{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1236 _buckets;T2 _generation;};
extern T1220 M1220;
struct S1222{T0* _item;};
extern T1222 M1222;
struct S1224{Tid id;T0* _item;};
extern T1224 M1224;
struct S1225{T0* _next;T0* _key;T0* _item;};
extern T1225 M1225;
struct S332{T2 _item;};
extern T332 M332;
struct S1227{T2 _upper;T2 _capacity;T1238 _storage;T2 _generation;};
extern T1227 M1227;
struct S1228{T0* _free_nodes;T0* _mem_lnk;T2 _mem_idx;T0* _last_link;T0* _first_link;T2 _upper;T2 _generation;};
extern T1228 M1228;
struct S1229{T2 _item_2;T3 _item_1;};
extern T1229 M1229;
struct S1230{T2 _value_memory;T0* _lost_nodes;T6 _map_dirty;T0* _map;T2 _key_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1230 M1230;
struct S1232{T0* _next;T2 _key;T0* _item;};
extern T1232 M1232;
struct S1234{Tid id;T0* _item;};
extern T1234 M1234;
struct S1235{T0* _next;T2 _key;T0* _item;};
extern T1235 M1235;
struct S1237{Tid id;T0* _item;};
extern T1237 M1237;
struct S1241{T0* _item;};
extern T1241 M1241;
struct S1242{T0* _next;T0* _item;};
extern T1242 M1242;
struct S1243{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1252 _buckets;T2 _generation;};
extern T1243 M1243;
struct S1244{T2 _upper;T2 _capacity;T1253 _storage;T2 _generation;};
extern T1244 M1244;
struct S1245{T2 _value;T2 _balance;T2 _key;T0* _right;T0* _left;};
extern T1245 M1245;
struct S1248{T0* _item;};
extern T1248 M1248;
struct S1249{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1256 _buckets;T2 _generation;};
extern T1249 M1249;
struct S1250{Tid id;T0* _item;};
extern T1250 M1250;
struct S1251{T0* _next;T0* _key;T0* _item;};
extern T1251 M1251;
struct S1254{Tid id;T0* _item;};
extern T1254 M1254;
struct S1255{T0* _next;T0* _key;T0* _item;};
extern T1255 M1255;
struct S34{T2 _capacity;T9 _buffer;T0* _filter;};
extern T34 M34;
struct S769{Tid id;T6 _valid_cache;T0* _to_string_cache;T3 _drive;T0* _path;};
extern T769 M769;
extern T728 M728;
struct S654{Tid id;T3 _info_code;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T654 M654;
struct S1261{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1284 _buckets;T2 _generation;};
extern T1261 M1261;
struct S1263{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1289 _buckets;T2 _generation;};
extern T1263 M1263;
struct S1266{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1292 _buckets;T2 _generation;};
extern T1266 M1266;
struct S660{Tid id;T0* _dynamic_type;T0* _side_effect_free_expression;};
extern T660 M660;
struct S663{Tid id;T0* _target_type;T0* _target;T0* _tagged_data_map;};
extern T663 M663;
struct S664{Tid id;T0* _live_type;T0* _dynamic_dispatch_temporary1;};
extern T664 M664;
struct S667{Tid id;T0* _target_type;T0* _feature_stamp;T333 _start_position;};
extern T667 M667;
struct S669{Tid id;T0* _dynamic_dispatch_temporary1;};
extern T669 M669;
struct S662{Tid id;T0* _tag;T6 _collect_flag;T0* _original_expression;T333 _start_position;T0* _tagged_data_map;};
extern T662 M662;
struct S657{Tid id;T0* _expression;T2 _eiffel_parser_stamp;};
extern T657 M657;
struct S668{Tid id;T0* _type_mark;T333 _start_position;};
extern T668 M668;
struct S650{Tid id;T0* _error_name;T0* _error_message;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T650 M650;
struct S1267{T2 _upper;T2 _capacity;T1275 _storage;T2 _generation;};
extern T1267 M1267;
struct S1268{T0* _lost_nodes;T6 _map_dirty;T0* _map;T333 _item_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1268 M1268;
struct S519{Tid id;T0* _expression_type;T0* _expression;T0* _resolved_memory;};
extern T519 M519;
struct S1269{T2 _upper;T2 _capacity;T1299 _storage;T2 _generation;};
extern T1269 M1269;
struct S671{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _target;T0* _agent_type;};
extern T671 M671;
struct S659{Tid id;T0* _target_type;T0* _feature_stamp;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T659 M659;
struct S655{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _agent_type;T2 _eiffel_parser_stamp;T0* _target;};
extern T655 M655;
struct S1270{T0* _item;};
extern T1270 M1270;
struct S1271{T2 _upper;T2 _capacity;T1300 _storage;T2 _generation;};
extern T1271 M1271;
struct S1272{T2 _upper;T2 _capacity;T1301 _storage;T2 _generation;};
extern T1272 M1272;
extern T316 M316;
struct S1273{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1302 _buckets;T2 _generation;};
extern T1273 M1273;
struct S1274{T2 _upper;T2 _capacity;T1305 _storage;T2 _generation;};
extern T1274 M1274;
struct S1280{T2 _upper;T2 _capacity;T1306 _storage;T2 _generation;};
extern T1280 M1280;
struct S522{T0* _code;};
extern T522 M522;
struct S116{Tid id;T6 _can_be_dropped_flag;T6 _precomputable;};
extern T116 M116;
struct S726{Tid id;T6 _trace_result;T0* _trace;T0* _type;};
extern T726 M726;
struct S731{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T731 M731;
struct S107{T6 _used;};
extern T107 M107;
struct S1282{T2 _lower;T2 _upper;T2 _capacity;T1109 _storage;T2 _generation;};
extern T1282 M1282;
struct S409{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T409 M409;
struct S406{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T333 _start_position;T2 _eiffel_parser_stamp;};
extern T406 M406;
struct S361{Tid id;T3 _array_name;T0* _target_type;T333 _start_position;};
extern T361 M361;
struct S777{Tid id;T0* _result_type;T0* _value;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T777 M777;
struct S633{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T633 M633;
struct S779{Tid id;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T779 M779;
struct S755{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T755 M755;
struct S526{Tid id;T6 _side_effect_free_flag;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T526 M526;
struct S778{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T778 M778;
struct S632{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T632 M632;
struct S1283{T2 _upper;T2 _capacity;T1307 _storage;T2 _generation;};
extern T1283 M1283;
struct S818{Tid id;T0* _process;T2 _filtered_descriptor;T6 _is_connected;T8 _pipe;};
extern T818 M818;
struct S820{Tid id;T0* _process;T2 _filtered_descriptor;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T820 M820;
struct S821{Tid id;T8 _handle;T0* _process;T6 _is_connected;T8 _pipe;};
extern T821 M821;
struct S822{Tid id;T8 _handle;T0* _process;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T822 M822;
struct S1285{T0* _next;T0* _item;};
extern T1285 M1285;
struct S1286{Tid id;T0* _item;};
extern T1286 M1286;
struct S1287{Tid id;T0* _item;};
extern T1287 M1287;
struct S1288{T0* _next;T0* _key;T0* _item;};
extern T1288 M1288;
struct S1290{Tid id;T0* _item;};
extern T1290 M1290;
struct S1291{T0* _next;T0* _key;T0* _item;};
extern T1291 M1291;
struct S1293{T2 _upper;T2 _capacity;T1308 _storage;T2 _generation;};
extern T1293 M1293;
struct S1294{T2 _balance;T333 _item;T0* _right;T0* _left;};
extern T1294 M1294;
struct S1297{T0* _item;};
extern T1297 M1297;
struct S1298{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1312 _buckets;T2 _generation;};
extern T1298 M1298;
struct S665{Tid id;T0* _list;T333 _start_position;};
extern T665 M665;
struct S701{Tid id;T11 _value;};
extern T701 M701;
struct S1303{T0* _next;T0* _item;};
extern T1303 M1303;
struct S1304{Tid id;T0* _item;};
extern T1304 M1304;
struct S1310{Tid id;T0* _item;};
extern T1310 M1310;
struct S1311{T0* _next;T0* _key;T0* _item;};
extern T1311 M1311;
struct S852{T0* _c_auto_init_plugin_deps_name;T0* _c_auto_init_plugin_deps_location;T0* _c_auto_init_function_name;T0* _c_compiler_options;T0* _c_linker_options;T0* _c_library_paths;T0* _c_libraries;T0* _c_header_paths;T0* _c_headers;T0* _c_sources;T333 _start_position;T6 _is_included;T6 _auto_init_done;T529 _bd;T0* _path;T0* _name;T2 _hash_code;};
extern T852 M852;
struct S626{T2 _declared_tmp_counter;};
extern T626 M626;
struct S552{T0* _type;T0* _doc_tag;T2 _number;T2 _eiffel_parser_stamp;};
extern T552 M552;
struct S1325{T2 _upper;T2 _capacity;T1347 _storage;T2 _generation;};
extern T1325 M1325;
struct S1326{T2 _lower;T2 _upper;T2 _capacity;T1348 _storage;T2 _generation;};
extern T1326 M1326;
struct S546{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T546 M546;
struct S547{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T547 M547;
struct S548{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T548 M548;
struct S549{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T549 M549;
struct S550{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T550 M550;
struct S551{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T551 M551;
struct S1332{T2 _upper;T2 _capacity;T1349 _storage;T2 _generation;};
extern T1332 M1332;
struct S1336{Tid id;T2 _item_index;T0* _dictionary;T2 _generation;};
extern T1336 M1336;
struct S790{Tid id;T2 _count;T2 _index;};
extern T790 M790;
struct S1338{T2 _lower;T2 _upper;T2 _capacity;T1163 _storage;T2 _generation;};
extern T1338 M1338;
struct S788{Tid id;T6 _item;};
extern T788 M788;
struct S1344{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1352 _buckets;T2 _generation;};
extern T1344 M1344;
struct S1345{T2 _upper;T2 _capacity;T1354 _storage;T2 _generation;};
extern T1345 M1345;
struct S706{T6 _negative;T2 _offset;T2 _integer_length;T2 _capacity;T956 _storage;};
extern T706 M706;
struct S1346{T2 _upper;T2 _capacity;T1355 _storage;T2 _generation;};
extern T1346 M1346;
struct S1350{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1356 _buckets;T2 _generation;};
extern T1350 M1350;
struct S1351{T0* _next;T0* _key;T0* _item;};
extern T1351 M1351;
struct S1353{Tid id;T0* _item;};
extern T1353 M1353;
struct S703{Tid id;T956 _storage;T2 _capacity;T6 _negative;};
extern T703 M703;
struct S1357{T0* _next;T0* _key;T0* _item;};
extern T1357 M1357;
struct S1358{Tid id;T0* _item;};
extern T1358 M1358;
struct S1371{T2 _upper;T2 _capacity;T1057 _storage;T2 _generation;};
extern T1371 M1371;
struct S776{Tid id;T0* _item;};
extern T776 M776;
struct S1372{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1376 _buckets;T2 _generation;};
extern T1372 M1372;
struct S774{Tid id;T2 _item;};
extern T774 M774;
struct S1375{T2 _upper;T2 _capacity;T9 _storage;T2 _generation;};
extern T1375 M1375;
struct S1377{T0* _next;T2 _key;T0* _item;};
extern T1377 M1377;
struct S1378{Tid id;T0* _item;};
extern T1378 M1378;
extern char*s340_1195446850A;
extern char*s97_0A;
extern char*s101_1418906530A;
extern char*s29_424424A;
extern char*s614_25969530A;
extern char*s96_10A;
extern char*s29_424430A;
extern char*s362_1114345928A;
extern char*s628_1983193131A;
extern char*s26_199827552A;
extern char*s101_1564992795A;
extern char*s614_59375621A;
extern char*s101_1772404517A;
extern char*s414_772854717A;
extern char*s89_1078639380A;
extern char*s89_1138390195A;
extern char*s101_523400916A;
extern char*s101_12331A;
extern char*s591_1880914324A;
extern char*s89_34A;
extern char*s29_38A;
extern char*s101_40A;
extern char*s101_41A;
extern char*s606_7233618A;
extern char*s29_42A;
extern char*s29_43A;
extern char*s101_44A;
extern char*s101_36951A;
extern char*s29_45A;
extern char*s447_46A;
extern char*s29_47A;
extern char*s604_48A;
extern char*s25_1889925553A;
extern char*s113_1071750288A;
extern char*s405_532898088A;
extern char*s591_1664036235A;
extern char*s463_58A;
extern char*s615_59A;
extern char*s89_12362A;
extern char*s29_60A;
extern char*s29_61A;
extern char*s614_2017590A;
extern char*s29_62A;
extern char*s26_63A;
extern char*s772_1883030297A;
extern char*s29_64A;
extern char*s91_1684808173A;
extern char*s617_1216329562A;
extern char*s89_67A;
extern char*s89_1268871407A;
extern char*s614_219498506A;
extern char*s26_1202957293A;
extern char*s30_212160365A;
extern char*s608_80037A;
extern char*s278_12376A;
extern char*s105_325166540A;
extern char*s101_77A;
extern char*s415_77A;
extern char*s791_79A;
extern char*s101_1206795525A;
extern char*s101_441192857A;
extern char*s591_82A;
extern char*s782_306811962A;
extern char*s784_1665297219A;
extern char*s101_1645835456A;
extern char*s617_84A;
extern char*s101_2189840A;
extern char*s97_301485A;
extern char*s101_392938270A;
extern char*s591_585895143A;
extern char*s615_91A;
extern char*s89_1656587411A;
extern char*s101_93A;
extern char*s29_94A;
extern char*s89_916596A;
extern char*s791_2008215484A;
extern char*s97_99A;
extern char*s784_101A;
extern char*s267_376816512A;
extern char*s101_273430505A;
extern char*s613_158634393A;
extern char*s26_104A;
extern char*s608_105A;
extern char*s97_109A;
extern char*s424_178490A;
extern char*s29_112335826A;
extern char*s101_114A;
extern char*s84_772983982A;
extern char*s552_1399364920A;
extern char*s26_118A;
extern char*s613_6271A;
extern char*s469_123A;
extern char*s29_124A;
extern char*s29_126A;
extern char*s101_273430530A;
extern char*s101_391886489A;
extern char*s358_1485085274A;
extern char*s614_579867211A;
extern char*s89_629850238A;
extern char*s101_2145444338A;
extern char*s101_1629400044A;
extern char*s29_80109A;
extern char*s608_252339A;
extern char*s105_612971904A;
extern char*s424_202915491A;
extern char*s391_2066164109A;
extern char*s387_446205995A;
extern char*s608_6305A;
extern char*s89_280897875A;
extern char*s395_1324593410A;
extern char*s30_1473988901A;
extern char*s554_168A;
extern char*s413_145102259A;
extern char*s89_339436953A;
extern char*s97_539873441A;
extern char*s101_1853640928A;
extern char*s447_1876110531A;
extern char*s89_470853074A;
extern char*s101_6330A;
extern char*s97_180A;
extern char*s101_1368099455A;
extern char*s101_30942A;
extern char*s101_37095A;
extern char*s784_61699A;
extern char*s30_436911A;
extern char*s608_1341914655A;
extern char*s90_1604340919A;
extern char*s267_1341859296A;
extern char*s628_42706587A;
extern char*s89_194A;
extern char*s96_195A;
extern char*s101_475921520A;
extern char*s590_619030689A;
extern char*s280_200A;
extern char*s608_117385886A;
extern char*s101_6355A;
extern char*s101_204A;
extern char*s606_205A;
extern char*s95_580488532A;
extern char*s784_212314278A;
extern char*s89_639285944A;
extern char*s407_1085830094A;
extern char*s96_215A;
extern char*s375_905138318A;
extern char*s267_216A;
extern char*s29_217A;
extern char*s463_218A;
extern char*s29_218A;
extern char*s614_160146A;
extern char*s101_993675817A;
extern char*s29_220A;
extern char*s89_873294598A;
extern char*s29_54688766A;
extern char*s614_4638080A;
extern char*s606_226A;
extern char*s89_1922692108A;
extern char*s101_227A;
extern char*s267_1302880443A;
extern char*s340_1306325004A;
extern char*s101_585944489A;
extern char*s605_230A;
extern char*s606_230A;
extern char*s608_236A;
extern char*s559_237A;
extern char*s101_240A;
extern char*s97_240A;
extern char*s726_241A;
extern char*s89_241A;
extern char*s606_36137368A;
extern char*s558_244A;
extern char*s614_6396A;
extern char*s101_245A;
extern char*s591_246A;
extern char*s591_247A;
extern char*s614_247A;
extern char*s29_1682815431A;
extern char*s101_249A;
extern char*s101_251A;
extern char*s84_251A;
extern char*s280_252A;
extern char*s591_254A;
extern char*s614_255A;
extern char*s559_255A;
extern char*s96_542094038A;
extern char*s587_257A;
extern char*s101_257A;
extern char*s605_258A;
extern char*s591_259A;
extern char*s608_259A;
extern char*s614_6411A;
extern char*s96_262A;
extern char*s30_10703002A;
extern char*s101_1312728230A;
extern char*s608_264A;
extern char*s614_265A;
extern char*s606_184795A;
extern char*s591_436987A;
extern char*s438_1428348580A;
extern char*s106_270A;
extern char*s395_190952A;
extern char*s413_271A;
extern char*s101_272A;
extern char*s614_6425A;
extern char*s606_1097836905A;
extern char*s591_274A;
extern char*s90_116346440A;
extern char*s101_1017947719A;
extern char*s539_276A;
extern char*s101_277B;
extern char*s101_277C;
extern char*s101_277A;
extern char*s791_277A;
extern char*s366_278A;
extern char*s96_1255776138A;
extern char*s96_1131876546A;
extern char*s101_282A;
extern char*s29_282A;
extern char*s101_284B;
extern char*s101_284A;
extern char*s518_287A;
extern char*s518_80251A;
extern char*s620_293A;
extern char*s620_294A;
extern char*s469_594795843A;
extern char*s620_295A;
extern char*s614_296A;
extern char*s29_296A;
extern char*s97_297A;
extern char*s608_244699380A;
extern char*s97_298A;
extern char*s424_299A;
extern char*s280_300A;
extern char*s97_301A;
extern char*s852_302A;
extern char*s101_6455A;
extern char*s469_305A;
extern char*s101_1754886761A;
extern char*s101_317A;
extern char*s29_406284A;
extern char*s29_42134669A;
extern char*s414_325449730A;
extern char*s101_1238750212A;
extern char*s273_90592250A;
extern char*s89_1088075316A;
extern char*s113_322A;
extern char*s613_35343969A;
extern char*s763_324A;
extern char*s614_325A;
extern char*s97_326A;
extern char*s591_327A;
extern char*s613_197159A;
extern char*s97_327A;
extern char*s349_327A;
extern char*s28_329A;
extern char*s559_1710309A;
extern char*s28_331A;
extern char*s101_10739979A;
extern char*s591_815493762A;
extern char*s97_333A;
extern char*s97_334A;
extern char*s28_334A;
extern char*s105_107193812A;
extern char*s31_336A;
extern char*s554_142931125A;
extern char*s97_340A;
extern char*s97_341A;
extern char*s606_345A;
extern char*s29_1501191A;
extern char*s464_348A;
extern char*s30_437070A;
extern char*s726_351A;
extern char*s107_1568216255A;
extern char*s96_36611104A;
extern char*s29_1578334651A;
extern char*s656_301503927A;
extern char*s511_360A;
extern char*s366_360A;
extern char*s29_361A;
extern char*s400_1136256141A;
extern char*s463_2140868216A;
extern char*s617_754574290A;
extern char*s608_366A;
extern char*s590_775396A;
extern char*s90_1700247488A;
extern char*s29_371A;
extern char*s511_372A;
extern char*s389_376A;
extern char*s784_377A;
extern char*s101_379A;
extern char*s29_548214405A;
extern char*s457_898426A;
extern char*s101_175857472A;
extern char*s101_382A;
extern char*s614_6534A;
extern char*s590_197373672A;
extern char*s97_62728285A;
extern char*s606_1639500234A;
extern char*s112_397A;
extern char*s613_6550A;
extern char*s447_1962655329A;
extern char*s97_402A;
extern char*s591_2054563574A;
extern char*s392_1442631340A;
extern char*s30_9909665A;
extern char*s101_6559A;
extern char*s784_1748680500A;
extern char*s89_1011636926A;
extern char*s614_1340573954A;
extern char*s591_1484470448A;
extern char*s591_1212159A;
extern char*s89_1733505988A;
extern char*s101_1601653158A;
extern char*s614_419A;
extern char*s349_892535123A;
extern char*s590_1809907567A;
extern char*s101_1957408550A;
extern char*s101_781060556A;
extern char*s101_726728775A;
extern char*s414_1604599495A;
extern char*s400_343527626A;
extern char*s90_74239A;
extern char*s591_6580A;
extern char*s373_1808265259A;
extern char*s587_86545A;
extern char*s424_205111678A;
extern char*s90_696478167A;
extern char*s270_38905513A;
extern char*s447_1604408825A;
extern char*s628_1447552176A;
extern char*s29_1603529235A;
extern char*s784_526175446A;
extern char*s29_80416A;
extern char*s101_1793244543A;
extern char*s29_878996813A;
extern char*s96_408537579A;
extern char*s101_10666295A;
extern char*s101_339308075A;
extern char*s395_1297676933A;
extern char*s784_6614A;
extern char*s852_1935504882A;
extern char*s101_471A;
extern char*s620_471A;
extern char*s656_1084920002A;
extern char*s620_474A;
extern char*s415_1240817101A;
extern char*s620_476A;
extern char*s97_1192507148A;
extern char*s29_1639475718A;
extern char*s615_529853775A;
extern char*s661_1937147216A;
extern char*s96_1459577427A;
extern char*s424_397816412A;
extern char*s97_1721407046A;
extern char*s464_1577658176A;
extern char*s591_283801480A;
extern char*s628_1655357614A;
extern char*s769_498A;
extern char*s30_2073386A;
extern char*s89_2117894368A;
extern char*s89_924385084A;
extern char*s613_6655A;
extern char*s26_613587359A;
extern char*s606_506A;
extern char*s101_215791A;
extern char*s608_1181502A;
extern char*s852_1942892277A;
extern char*s89_1524784203A;
extern char*s101_365905049A;
extern char*s459_334725631A;
extern char*s772_1000694404A;
extern char*s331_25373399A;
extern char*s101_526A;
extern char*s395_889865702A;
extern char*s29_534A;
extern char*s614_535A;
extern char*s97_6687A;
extern char*s483_2057854492A;
extern char*s101_932172292A;
extern char*s89_955638361A;
extern char*s89_9897510A;
extern char*s30_10315778A;
extern char*s29_552A;
extern char*s463_1490203324A;
extern char*s101_1901889757A;
extern char*s784_25822456A;
extern char*s679_559A;
extern char*s89_1471861047A;
extern char*s608_550508910A;
extern char*s30_1532343833A;
extern char*s772_68224A;
extern char*s362_1744510279A;
extern char*s280_22396357A;
extern char*s606_570A;
extern char*s114_570A;
extern char*s608_1832703325A;
extern char*s30_54418471A;
extern char*s89_1228072329A;
extern char*s101_1988895671A;
extern char*s559_166654A;
extern char*s267_1476966395A;
extern char*s101_1290234339A;
extern char*s89_1961160815A;
extern char*s392_1037594318A;
extern char*s89_751585121A;
extern char*s30_2233396A;
extern char*s26_1724187394A;
extern char*s30_48390502A;
extern char*s93_589A;
extern char*s620_591A;
extern char*s97_2077353217A;
extern char*s267_2132072515A;
extern char*s31_594A;
extern char*s29_9713026A;
extern char*s29_36193081A;
extern char*s503_2080244194A;
extern char*s30_600A;
extern char*s90_1317175740A;
extern char*s96_1463938603A;
extern char*s97_603A;
extern char*s784_6755A;
extern char*s784_604A;
extern char*s89_1207921682A;
extern char*s96_801894175A;
extern char*s436_1773450779A;
extern char*s89_437331A;
extern char*s400_1260488135A;
extern char*s89_611A;
extern char*s29_548331507A;
extern char*s782_614A;
extern char*s613_185146A;
extern char*s101_1419097826A;
extern char*s96_427937988A;
extern char*s97_179868158A;
extern char*s614_475042348A;
extern char*s424_620A;
extern char*s591_68284A;
extern char*s101_625A;
extern char*s101_5395053A;
extern char*s30_627A;
extern char*s608_693716559A;
extern char*s113_354654986A;
extern char*s29_51915068A;
extern char*s105_1661847054A;
extern char*s90_85511833A;
extern char*s606_1367878466A;
extern char*s101_635A;
extern char*s29_636A;
extern char*s86_1861287086A;
extern char*s465_449661A;
extern char*s30_640A;
extern char*s608_2251910A;
extern char*s603_5395074A;
extern char*s96_1174466439A;
extern char*s101_651A;
extern char*s30_1690381566A;
extern char*s101_934202231A;
extern char*s29_1744399653A;
extern char*s28_1841690022A;
extern char*s614_6810A;
extern char*s93_660A;
extern char*s30_661A;
extern char*s95_97543221A;
extern char*s603_4570857A;
extern char*s608_1175100011A;
extern char*s29_669A;
extern char*s614_670A;
extern char*s30_670A;
extern char*s554_671A;
extern char*s591_43730A;
extern char*s394_925886099A;
extern char*s614_351281A;
extern char*s97_674A;
extern char*s89_1135641353A;
extern char*s784_6830A;
extern char*s628_378711602A;
extern char*s97_1087245292A;
extern char*s78_685A;
extern char*s97_686A;
extern char*s603_4570882A;
extern char*s97_689A;
extern char*s101_1713607783A;
extern char*s613_1824264277A;
extern char*s613_905827712A;
extern char*s782_699A;
extern char*s614_31455A;
extern char*s588_619166512A;
extern char*s101_228498053A;
extern char*s273_875060418A;
extern char*s29_1115958189A;
extern char*s29_1206543966A;
extern char*s603_4570907A;
extern char*s25_1325879523A;
extern char*s628_1197649626A;
extern char*s89_316863332A;
extern char*s591_10937200A;
extern char*s101_6877A;
extern char*s97_13028A;
extern char*s29_80694A;
extern char*s559_1290234494A;
extern char*s91_1385667261A;
extern char*s29_849712179A;
extern char*s603_4570932A;
extern char*s279_740A;
extern char*s613_101227749A;
extern char*s608_744A;
extern char*s97_1772235A;
extern char*s608_750A;
extern char*s608_1261705A;
extern char*s681_1601130656A;
extern char*s96_1460051321A;
extern char*s267_527202963A;
extern char*s101_1195084695A;
extern char*s395_613384625A;
extern char*s552_2007779419A;
extern char*s469_589832448A;
extern char*s613_40031469A;
extern char*s603_4570957A;
extern char*s615_68406039A;
extern char*s784_5161461A;
extern char*s101_644847010A;
extern char*s29_567319806A;
extern char*s608_1124563501A;
extern char*s102_6926A;
extern char*s97_51699930A;
extern char*s389_7867907A;
extern char*s29_1597390874A;
extern char*s29_567319812A;
extern char*s101_7720290A;
extern char*s603_4570982A;
extern char*s107_899910547A;
extern char*s784_2092663259A;
extern char*s614_6946A;
extern char*s101_1994813154A;
extern char*s29_567319829A;
extern char*s414_282823780A;
extern char*s614_1824713404A;
extern char*s96_1220451466A;
extern char*s29_9676326A;
extern char*s590_926003101A;
extern char*s591_80771A;
extern char*s28_1473362143A;
extern char*s267_1091711046A;
extern char*s614_6965A;
extern char*s603_4571007A;
extern char*s29_1671553525A;
extern char*s101_1981256377A;
extern char*s97_10937305A;
extern char*s591_173055A;
extern char*s465_55156846A;
extern char*s89_52979396A;
extern char*s491_1083118122A;
extern char*s608_400650A;
extern char*s608_86950A;
extern char*s30_400652A;
extern char*s614_427390771A;
extern char*s267_1707020207A;
extern char*s603_4571032A;
extern char*s591_345908476A;
extern char*s614_6995A;
extern char*s84_142319A;
extern char*s30_11251026A;
extern char*s414_170383550A;
extern char*s617_7006A;
extern char*s97_373286592A;
extern char*s89_1275558331A;
extern char*s603_4571057A;
extern char*s89_888875725A;
extern char*s784_1648235130A;
extern char*s29_1498845794A;
extern char*s463_1331532446A;
extern char*s392_1769582063A;
extern char*s614_7025A;
extern char*s784_1288623074A;
extern char*s478_672729595A;
extern char*s786_730579755A;
extern char*s267_1130154866A;
extern char*s395_923532A;
extern char*s852_7037A;
extern char*s96_1814748872A;
extern char*s331_345225764A;
extern char*s608_1291760099A;
extern char*s29_80854A;
extern char*s29_13194A;
extern char*s270_1820580025A;
extern char*s614_1689502217A;
extern char*s603_185428A;
extern char*s30_10193105A;
extern char*s29_10377643A;
extern char*s603_185438A;
extern char*s97_703496930A;
extern char*s786_1295032451A;
extern char*s96_604558099A;
extern char*s603_185443A;
extern char*s656_501491947A;
extern char*s603_185448A;
extern char*s96_1786429697A;
extern char*s395_1552156565A;
extern char*s603_185453A;
extern char*s30_1975394A;
extern char*s29_1594034A;
extern char*s29_2246041A;
extern char*s603_185458A;
extern char*s784_1012357115A;
extern char*s603_185463A;
extern char*s266_51017327A;
extern char*s101_934A;
extern char*s363_1809213019A;
extern char*s30_1839765037A;
extern char*s603_185468A;
extern char*s97_830570470A;
extern char*s559_481249030A;
extern char*s724_495673125A;
extern char*s105_1752297822A;
extern char*s25_1461786092A;
extern char*s101_1642367158A;
extern char*s101_273431355A;
extern char*s267_708319A;
extern char*s784_915251302A;
extern char*s427_171706123A;
extern char*s97_50863580A;
extern char*s544_1747846A;
extern char*s608_7118A;
extern char*s29_1607595572A;
extern char*s628_557767498A;
extern char*s30_1992063831A;
extern char*s490_1962243783A;
extern char*s101_207160501A;
extern char*s617_124454155A;
extern char*s469_1496963692A;
extern char*s608_54714119A;
extern char*s614_87090A;
extern char*s101_1586448448A;
extern char*s784_77282146A;
extern char*s614_185515A;
extern char*s438_540477054A;
extern char*s73_1761241425A;
extern char*s101_1500500537A;
extern char*s101_437715A;
extern char*s89_1587734026A;
extern char*s784_160930A;
extern char*s89_1703575813A;
extern char*s617_160937A;
extern char*s267_89867121A;
extern char*s395_205616643A;
extern char*s101_514187710A;
extern char*s442_1615634978A;
extern char*s89_2080029331A;
extern char*s97_851047233A;
extern char*s101_1346694814A;
extern char*s96_1365578385A;
extern char*s89_1090616383A;
extern char*s101_308580A;
extern char*s96_713806135A;
extern char*s340_646901709A;
extern char*s89_1581435442A;
extern char*s441_743946038A;
extern char*s673_1043A;
extern char*s97_17494489A;
extern char*s674_1047A;
extern char*s280_7207A;
extern char*s30_10876026A;
extern char*s101_437780A;
extern char*s89_1380562254A;
extern char*s628_1092806174A;
extern char*s403_1719402393A;
extern char*s95_23085765A;
extern char*s101_1102979933A;
extern char*s784_1574324912A;
extern char*s31_87180A;
extern char*s84_439490016A;
extern char*s96_385188989A;
extern char*s89_1934613587A;
extern char*s101_965818786A;
extern char*s467_68732A;
extern char*s267_208962844A;
extern char*s89_2091587115A;
extern char*s26_142550A;
extern char*s101_4620481A;
extern char*s472_7232A;
extern char*s395_156630152A;
extern char*s606_167166A;
extern char*s26_1090A;
extern char*s615_1102979958A;
extern char*s544_1027113524A;
extern char*s608_1348915394A;
extern char*s101_1901755A;
extern char*s606_580292587A;
extern char*s453_99702656A;
extern char*s96_1839715989A;
extern char*s558_302501127A;
extern char*s447_1630520481A;
extern char*s791_1101A;
extern char*s456_1554555636A;
extern char*s395_1277330071A;
extern char*s101_893005A;
extern char*s784_2136427942A;
extern char*s469_1034900711A;
extern char*s424_1112A;
extern char*s89_1617443474A;
extern char*s101_588411932A;
extern char*s511_1330923746A;
extern char*s84_1121A;
extern char*s358_327012886A;
extern char*s89_1717397235A;
extern char*s89_1003875089A;
extern char*s31_2141685A;
extern char*s606_1446625A;
extern char*s340_1759986771A;
extern char*s101_4620546A;
extern char*s784_7296A;
extern char*s525_927498134A;
extern char*s613_10322525A;
extern char*s405_1099750743A;
extern char*s614_1628970485A;
extern char*s278_1133285999A;
extern char*s29_1157A;
extern char*s324_1981041429A;
extern char*s101_273443870A;
extern char*s587_7317A;
extern char*s101_1350760769A;
extern char*s96_1535001676A;
extern char*s613_419443A;
extern char*s459_1867518592A;
extern char*s97_1964046235A;
extern char*s395_905382A;
extern char*s101_1142598643A;
extern char*s267_305465997A;
extern char*s29_1944903A;
extern char*s426_235492225A;
extern char*s29_55040341A;
extern char*s544_28418819A;
extern char*s30_10648581A;
extern char*s374_1552710436A;
extern char*s89_1819737650A;
extern char*s96_1206593669A;
extern char*s13_1210A;
extern char*s31_2246326A;
extern char*s97_1215A;
extern char*s267_767646015A;
extern char*s270_1641573945A;
extern char*s101_1839365502A;
extern char*s29_9529116A;
extern char*s606_11300605A;
extern char*s784_7374A;
extern char*s608_1923566548A;
extern char*s113_1430004157A;
extern char*s614_1671074150A;
extern char*s395_1324951230A;
extern char*s280_188916891A;
extern char*s89_155929078A;
extern char*s96_646243744A;
extern char*s29_276937706A;
extern char*s29_1235A;
extern char*s89_911265735A;
extern char*s606_1240A;
extern char*s784_407207A;
extern char*s414_1700082283A;
extern char*s614_520388145A;
extern char*s29_55040391A;
extern char*s614_704592146A;
extern char*s29_1247A;
extern char*s456_1377394679A;
extern char*s373_1088174660A;
extern char*s89_445001496A;
extern char*s613_52555395A;
extern char*s26_513843490A;
extern char*s29_55040401A;
extern char*s101_499425548A;
extern char*s280_4479182A;
extern char*s591_1485929081A;
extern char*s29_2067995A;
extern char*s614_870841390A;
extern char*s101_1919660703A;
extern char*s101_1264A;
extern char*s96_1265A;
extern char*s101_2115846852A;
extern char*s591_1269A;
extern char*s101_1271B;
extern char*s101_1271A;
extern char*s84_74133124A;
extern char*s101_148900A;
extern char*s552_38182A;
extern char*s591_182255408A;
extern char*s615_1431664982A;
extern char*s615_1280A;
extern char*s101_1284A;
extern char*s606_1285A;
extern char*s615_1291A;
extern char*s97_932412928A;
extern char*s661_1083579905A;
extern char*s101_81256A;
extern char*s101_1295B;
extern char*s101_1295A;
extern char*s608_25900A;
extern char*s606_1298A;
extern char*s424_1642232185A;
extern char*s447_1952642401A;
extern char*s608_685204250A;
extern char*s604_7454A;
extern char*s603_1312A;
extern char*s30_1988096A;
extern char*s26_1511689536A;
extern char*s591_7475A;
extern char*s29_747962924A;
extern char*s101_32080A;
extern char*s527_902076231A;
extern char*s359_1686701A;
extern char*s30_945182441A;
extern char*s101_1330A;
extern char*s784_26635163A;
extern char*s29_1245671098A;
extern char*s97_1335A;
extern char*s398_13637A;
extern char*s89_2097430832A;
extern char*s90_140920753A;
extern char*s591_37202594A;
extern char*s469_412142950A;
extern char*s414_1304837581A;
extern char*s30_87466A;
extern char*s101_411134193A;
extern char*s273_413151726A;
extern char*s270_1136866084A;
extern char*s617_1068122514A;
extern char*s613_2077255577A;
extern char*s614_116864219A;
extern char*s414_1081673178A;
extern char*s471_869266852A;
extern char*s331_590983311A;
extern char*s425_1382A;
extern char*s362_762122588A;
extern char*s267_139303084A;
extern char*s591_2028521226A;
extern char*s90_996106634A;
extern char*s89_1910692676A;
extern char*s89_1466196812A;
extern char*s784_1396A;
extern char*s101_1618833880A;
extern char*s89_463134792A;
extern char*s628_1846931416A;
extern char*s267_86060043A;
extern char*s852_1807195960A;
extern char*s552_7557A;
extern char*s396_1127350535A;
extern char*s279_87520A;
extern char*s613_1407A;
extern char*s613_1994331A;
extern char*s28_711020104A;
extern char*s395_1705796732A;
extern char*s782_1414A;
extern char*s90_181806522A;
extern char*s101_1417A;
extern char*s608_32175A;
extern char*s617_32176A;
extern char*s628_39109479A;
extern char*s400_1732344459A;
extern char*s89_2110077371A;
extern char*s591_1426A;
extern char*s29_87541A;
extern char*s29_1427A;
extern char*s113_210310269A;
extern char*s109_489233515A;
extern char*s358_1459510708A;
extern char*s400_1382321814A;
extern char*s615_29107967A;
extern char*s101_1540494783A;
extern char*s97_1438A;
extern char*s101_2087300232A;
extern char*s608_1445A;
extern char*s614_1124779458A;
extern char*s26_941571923A;
extern char*s674_1452A;
extern char*s345_1440516445A;
extern char*s490_90494969A;
extern char*s267_1689176777A;
extern char*s101_1924772383A;
extern char*s591_1246790712A;
extern char*s463_486705491A;
extern char*s782_81437A;
extern char*s101_1476A;
extern char*s615_813409A;
extern char*s430_1478A;
extern char*s101_188283590A;
extern char*s608_1307328870A;
extern char*s331_934695142A;
extern char*s101_1273572186A;
extern char*s26_579450289A;
extern char*s97_642534946A;
extern char*s89_54634669A;
extern char*s590_340114884A;
extern char*s101_1493A;
extern char*s29_1375414302A;
extern char*s89_1744209811A;
extern char*s101_13801A;
extern char*s101_586511651A;
extern char*s683_511703191A;
extern char*s784_479982486A;
extern char*s101_1404852998A;
extern char*s389_35382059A;
extern char*s89_49203356A;
extern char*s101_2142659303A;
extern char*s395_2480364A;
extern char*s389_354065377A;
extern char*s105_582925635A;
extern char*s89_2047201942A;
extern char*s89_1575450999A;
extern char*s89_1909979286A;
extern char*s113_1680762272A;
extern char*s29_880412606A;
extern char*s30_2234341A;
extern char*s267_1709309070A;
extern char*s97_1102814319A;
extern char*s614_1530A;
extern char*s89_833080669A;
extern char*s613_49806180A;
extern char*s614_1679636650A;
extern char*s465_413651A;
extern char*s784_129037214A;
extern char*s29_279656751A;
extern char*s395_2480394A;
extern char*s89_962885232A;
extern char*s29_859431564A;
extern char*s101_490869799A;
extern char*s89_791727511A;
extern char*s101_1164920984A;
extern char*s89_2099054905A;
extern char*s656_643795973A;
extern char*s591_1111954737A;
extern char*s30_1957581A;
extern char*s267_1553744164A;
extern char*s101_1565A;
extern char*s614_511943145A;
extern char*s89_2037548A;
extern char*s591_491029751A;
extern char*s784_1111960899A;
extern char*s101_1471782099A;
extern char*s89_955584028A;
extern char*s30_407540A;
extern char*s29_438300A;
extern char*s338_242535516A;
extern char*s613_1203432441A;
extern char*s608_283285900A;
extern char*s101_1661632742A;
extern char*s613_2006740748A;
extern char*s29_761722990A;
extern char*s469_1319735562A;
extern char*s89_1208507031A;
extern char*s591_1185483839A;
extern char*s101_341357508A;
extern char*s113_3556890A;
extern char*s90_1038536453A;
extern char*s590_1191155066A;
extern char*s97_2011772281A;
extern char*s29_185934049A;
extern char*s97_1626A;
extern char*s395_2480479A;
extern char*s29_185934055A;
extern char*s26_7779A;
extern char*s89_2055333675A;
extern char*s101_1607940692A;
extern char*s101_860532685A;
extern char*s97_2139128753A;
extern char*s613_1783951564A;
extern char*s30_1532344910A;
extern char*s29_619776399A;
extern char*s30_479921113A;
extern char*s463_522818189A;
extern char*s791_1644A;
extern char*s29_185934072A;
extern char*s615_32400A;
extern char*s591_1923813010A;
extern char*s590_1646A;
extern char*s456_2141380032A;
extern char*s89_1254996328A;
extern char*s784_687744958A;
extern char*s608_1650A;
extern char*s784_1651A;
extern char*s414_265238926A;
extern char*s97_7809A;
extern char*s608_180037A;
extern char*s587_386149138A;
extern char*s89_401981819A;
extern char*s101_1164208A;
extern char*s554_1046299075A;
extern char*s784_349661420A;
extern char*s591_1676A;
extern char*s29_1326673961A;
extern char*s614_32435A;
extern char*s784_44739A;
extern char*s89_1668608056A;
extern char*s31_1994621A;
extern char*s89_1289042164A;
extern char*s614_32456A;
extern char*s101_1946737844A;
extern char*s101_14005A;
extern char*s101_192841706A;
extern char*s395_1337425939A;
extern char*s105_1875884480A;
extern char*s436_1110386385A;
extern char*s101_7869A;
extern char*s280_2082988666A;
extern char*s97_7878A;
extern char*s608_1727A;
extern char*s405_183516812A;
extern char*s614_1586596820A;
extern char*s615_29126717A;
extern char*s30_14036A;
extern char*s29_55926626A;
extern char*s101_48520827A;
extern char*s608_1060489498A;
extern char*s588_161665A;
extern char*s414_1857191624A;
extern char*s107_1797674551A;
extern char*s97_1744A;
extern char*s608_1115076A;
extern char*s608_180128A;
extern char*s89_941240074A;
extern char*s267_608446371A;
extern char*s468_1753A;
extern char*s469_112048371A;
extern char*s101_1852104762A;
extern char*s554_22612837A;
extern char*s101_1765A;
extern char*s400_176104896A;
extern char*s366_1712194128A;
extern char*s90_256559978A;
extern char*s400_1458557644A;
extern char*s84_1052333303A;
extern char*s89_1296817101A;
extern char*s97_1775A;
extern char*s89_376006259A;
extern char*s101_1364588829A;
extern char*s365_7506001A;
extern char*s101_36778611A;
extern char*s89_970900228A;
extern char*s588_565063403A;
extern char*s447_2108232434A;
extern char*s101_308542101A;
extern char*s101_4049151A;
extern char*s784_1523807481A;
extern char*s483_920757291A;
extern char*s389_1801A;
extern char*s628_1658151484A;
extern char*s89_1917483795A;
extern char*s101_1630601156A;
extern char*s96_89019087A;
extern char*s30_2185421A;
extern char*s30_251171752A;
extern char*s89_1778077539A;
extern char*s29_312005144A;
extern char*s89_1665385073A;
extern char*s344_1771711260A;
extern char*s544_1826A;
extern char*s469_1832A;
extern char*s613_54714979A;
extern char*s614_1651828280A;
extern char*s331_1813679543A;
extern char*s614_1214258443A;
extern char*s614_167916A;
extern char*s614_1840A;
extern char*s89_997601777A;
extern char*s614_108351709A;
extern char*s29_94407393A;
extern char*s29_14150A;
extern char*s784_32605A;
extern char*s89_50040236A;
extern char*s101_1154403080A;
extern char*s463_1468725331A;
extern char*s101_426087775A;
extern char*s101_57150800A;
extern char*s89_1021024803A;
extern char*s784_47598300A;
extern char*s270_1188332009A;
extern char*s89_603076667A;
extern char*s615_534333098A;
extern char*s784_692075493A;
extern char*s101_107312226A;
extern char*s447_90390825A;
extern char*s101_267478119A;
extern char*s31_2191641A;
extern char*s590_565069653A;
extern char*s615_2001063662A;
extern char*s89_2047202317A;
extern char*s614_32650A;
extern char*s101_438660461A;
extern char*s89_502181838A;
extern char*s89_307717976A;
extern char*s96_327902A;
extern char*s614_1900A;
extern char*s614_10089540A;
extern char*s89_1938643327A;
extern char*s101_1580612071A;
extern char*s558_1747685533A;
extern char*s89_376006384A;
extern char*s29_50778415A;
extern char*s591_505232755A;
extern char*s606_36126743A;
extern char*s101_7918258A;
extern char*s782_413927315A;
extern char*s278_1185293475A;
extern char*s613_1994852A;
extern char*s29_1530432238A;
extern char*s614_5654700A;
extern char*s614_887295984A;
extern char*s89_2061122069A;
extern char*s89_945201499A;
extern char*s89_1933A;
extern char*s554_992810240A;
extern char*s29_88048A;
extern char*s101_950675891A;
extern char*s29_88049A;
extern char*s613_942808765A;
extern char*s89_246527867A;
extern char*s97_69601A;
extern char*s29_55041091A;
extern char*s89_4492176A;
extern char*s89_119995654A;
extern char*s591_2111741A;
extern char*s784_27909038A;
extern char*s29_36200588A;
extern char*s554_724183788A;
extern char*s97_683870135A;
extern char*s29_261093457A;
extern char*s469_909851733A;
extern char*s89_1991246741A;
extern char*s29_1286698901A;
extern char*s89_1505459217A;
extern char*s89_1421116705A;
extern char*s614_9794360A;
extern char*s97_1115301A;
extern char*s591_2072064738A;
extern char*s29_1680885744A;
extern char*s97_5525574A;
extern char*s784_525205114A;
extern char*s101_11086084A;
extern char*s591_4996600A;
extern char*s89_676728857A;
extern char*s30_451011A;
extern char*s614_86195952A;
extern char*s29_55041141A;
extern char*s105_1127406485A;
extern char*s96_2029530601A;
extern char*s101_1492394528A;
extern char*s29_55041151A;
extern char*s614_19199275A;
extern char*s113_1711985232A;
extern char*s590_2039095413A;
extern char*s89_1284361566A;
extern char*s96_1378502623A;
extern char*s392_729510616A;
extern char*s608_28032126A;
extern char*s469_1646704683A;
extern char*s101_1965252672A;
extern char*s784_2121801775A;
extern char*s606_161951A;
extern char*s270_1281353746A;
extern char*s101_772432310A;
extern char*s270_169314461A;
extern char*s29_586229245A;
extern char*s614_484454800A;
extern char*s617_1150927957A;
extern char*s29_1395184171A;
extern char*s614_10089690A;
extern char*s101_1307483215A;
extern char*s101_637467090A;
extern char*s96_891552598A;
extern char*s101_1724182721A;
extern char*s614_476433922A;
extern char*s96_1145029170A;
extern char*s90_446380143A;
extern char*s101_2075A;
extern char*s591_826425832A;
extern char*s606_21020045A;
extern char*s614_9954400A;
extern char*s97_186217457A;
extern char*s614_162010A;
extern char*s101_1656195746A;
extern char*s96_1483967746A;
extern char*s606_162019A;
extern char*s614_162020A;
extern char*s617_5279655A;
extern char*s396_1993565801A;
extern char*s101_506210947A;
extern char*s29_1300046706A;
extern char*s29_2104A;
extern char*s615_32860A;
extern char*s101_8260A;
extern char*s615_2110A;
extern char*s26_1042405932A;
extern char*s101_32869A;
extern char*s89_2001191A;
extern char*s591_1032053803A;
extern char*s469_1427483140A;
extern char*s324_977955761A;
extern char*s30_408086A;
extern char*s101_531983658A;
extern char*s30_251916328A;
extern char*s89_1176245553A;
extern char*s84_1781104140A;
extern char*s97_57487A;
extern char*s101_451157A;
extern char*s614_8291A;
extern char*s590_205124A;
extern char*s468_2009909053A;
extern char*s614_162070A;
extern char*s30_69805A;
extern char*s617_1113554587A;
extern char*s101_389672A;
extern char*s101_389675A;
extern char*s784_1927425A;
extern char*s785_14464A;
extern char*s363_202031759A;
extern char*s89_2051403723A;
extern char*s608_162095A;
extern char*s614_2138778683A;
extern char*s270_32926A;
extern char*s113_461074983A;
extern char*s395_900982204A;
extern char*s97_2178A;
extern char*s30_401994A;
extern char*s31_2020550321A;
extern char*s29_2035472654A;
extern char*s852_482960256A;
extern char*s97_69851A;
extern char*s101_1826935309A;
extern char*s30_2032026A;
extern char*s614_1726920051A;
extern char*s30_264667428A;
extern char*s101_351488799A;
extern char*s89_4750778A;
extern char*s101_383570A;
extern char*s614_340514A;
extern char*s614_1240185282A;
extern char*s30_820292A;
extern char*s105_1585514726A;
extern char*s591_1637927398A;
extern char*s267_698011541A;
extern char*s383_529996976A;
extern char*s105_1297180456A;
extern char*s29_1447702A;
extern char*s97_1255802680A;
extern char*s511_922867504A;
extern char*s30_88336A;
extern char*s89_599810839A;
extern char*s590_1112927266A;
extern char*s29_840111968A;
extern char*s469_115013643A;
extern char*s614_234933541A;
extern char*s89_1023251859A;
extern char*s725_2114672999A;
extern char*s395_442652821A;
extern char*s96_601041072A;
extern char*s414_797085749A;
extern char*s29_1297432701A;
extern char*s784_5839580A;
extern char*s29_2067759348A;
extern char*s591_832670A;
extern char*s617_8436A;
extern char*s424_408035024A;
extern char*s628_1679625106A;
extern char*s323_864187036A;
extern char*s615_1155996628A;
extern char*s29_1209184326A;
extern char*s89_700613496A;
extern char*s614_45355A;
extern char*s617_1245850444A;
extern char*s591_2301A;
extern char*s89_1689577436A;
extern char*s29_1604515261A;
extern char*s614_1096165867A;
extern char*s89_860582570A;
extern char*s614_245384155A;
extern char*s101_1816632501A;
extern char*s105_1811139659A;
extern char*s29_728963476A;
extern char*s29_9647090A;
extern char*s591_8475A;
extern char*s89_28789007A;
extern char*s97_395994A;
extern char*s614_8485A;
extern char*s26_546635553A;
extern char*s614_1553763390A;
extern char*s101_20552830A;
extern char*s626_1664721281A;
extern char*s89_1752914319A;
extern char*s89_2020913390A;
extern char*s30_414461A;
extern char*s591_1426099398A;
extern char*s89_156243902A;
extern char*s605_1476205446A;
extern char*s608_1936367907A;
extern char*s267_1955866577A;
extern char*s626_1025503229A;
extern char*s443_914877497A;
extern char*s614_244793715A;
extern char*s360_1360462097A;
extern char*s763_1121854A;
extern char*s331_2084982239A;
extern char*s29_175767198A;
extern char*s628_1238684603A;
extern char*s97_45436A;
extern char*s784_737599544A;
extern char*s101_419316052A;
extern char*s101_2382A;
extern char*s84_1452647150A;
extern char*s360_41841490A;
extern char*s97_217674A;
extern char*s101_149822297A;
extern char*s587_1359151955A;
extern char*s587_8545A;
extern char*s622_2394A;
extern char*s101_2395A;
extern char*s591_126319331A;
extern char*s622_2395A;
extern char*s89_1478844272A;
extern char*s89_1223700793A;
extern char*s89_529554293A;
extern char*s280_63912A;
extern char*s89_2117988535A;
extern char*s96_2114217978A;
extern char*s101_1327517381A;
extern char*s608_2065182209A;
extern char*s101_1530032908A;
extern char*s392_1222747401A;
extern char*s267_2070822678A;
extern char*s30_76226A;
extern char*s89_439136A;
extern char*s101_2417A;
extern char*s424_146113272A;
extern char*s614_714188879A;
extern char*s84_2123229206A;
extern char*s267_763815152A;
extern char*s267_957054969A;
extern char*s475_180503525A;
extern char*s97_2440A;
extern char*s267_556698697A;
extern char*s97_6159594A;
extern char*s113_1974940930A;
extern char*s614_168532A;
extern char*s617_1956008156A;
extern char*s90_274238642A;
extern char*s29_2090604340A;
extern char*s29_591414963A;
extern char*s102_1753572602A;
extern char*s558_11381817A;
extern char*s608_48939825A;
extern char*s90_332623945A;
extern char*s784_8624A;
extern char*s395_282345691A;
extern char*s613_1119207694A;
extern char*s613_118716790A;
extern char*s608_48939847A;
extern char*s89_1439398002A;
extern char*s463_1917908900A;
extern char*s608_279959115A;
extern char*s89_277837020A;
extern char*s29_2504A;
extern char*s91_1656731300A;
extern char*s613_49917876A;
extern char*s544_193194A;
extern char*s97_207986277A;
extern char*s89_180894A;
extern char*s282_1477688005A;
extern char*s30_402346A;
extern char*s614_33291A;
extern char*s113_2537A;
extern char*s89_761631659A;
extern char*s366_2126200255A;
extern char*s107_584218374A;
extern char*s101_2545A;
extern char*s591_1575353618A;
extern char*s559_33316A;
extern char*s614_308542874A;
extern char*s782_2082029949A;
extern char*s677_2565A;
extern char*s628_1711825865A;
extern char*s89_1909918820A;
extern char*s29_744845610A;
extern char*s395_1670460393A;
extern char*s614_2571A;
extern char*s591_1489891655A;
extern char*s392_1182157125A;
extern char*s614_37173080A;
extern char*s559_3920780A;
extern char*s97_76405A;
extern char*s105_305596576A;
extern char*s101_1361175839A;
extern char*s267_22915075A;
extern char*s101_218061703A;
extern char*s97_98806116A;
extern char*s30_82570A;
extern char*s613_411283072A;
extern char*s89_1731250773A;
extern char*s89_1564737054A;
extern char*s26_8771A;
extern char*s613_689812670A;
extern char*s90_894954671A;
extern char*s554_950159899A;
extern char*s89_2992013A;
extern char*s101_2630A;
extern char*s30_114085235A;
extern char*s97_1247935972A;
extern char*s101_1308400309A;
extern char*s615_1773508175A;
extern char*s97_8801A;
extern char*s614_524787520A;
extern char*s97_530877013A;
extern char*s447_789877170A;
extern char*s89_1098712729A;
extern char*s614_1116064705A;
extern char*s447_783418632A;
extern char*s615_2670A;
extern char*s101_33425A;
extern char*s362_292944046A;
extern char*s784_1069766146A;
extern char*s29_88795A;
extern char*s791_480414235A;
extern char*s96_1572647306A;
extern char*s786_585110409A;
extern char*s101_1082664800A;
extern char*s108_138929174A;
extern char*s614_1263916320A;
extern char*s26_1010347497A;
extern char*s30_2063276A;
extern char*s29_201970776A;
extern char*s30_396356A;
extern char*s614_1023363018A;
extern char*s463_1089314041A;
extern char*s30_1939265372A;
extern char*s29_201970793A;
extern char*s270_2089269822A;
extern char*s29_756809447A;
extern char*s603_23647157A;
extern char*s31_234165132A;
extern char*s29_201970799A;
extern char*s558_15019A;
extern char*s30_479922190A;
extern char*s614_15020A;
extern char*s101_33475A;
extern char*s456_1172758533A;
extern char*s628_1912840703A;
extern char*s101_1934139A;
extern char*s331_1646268668A;
extern char*s101_8880A;
extern char*s97_8884A;
extern char*s614_8885A;
extern char*s527_520647979A;
extern char*s392_112006296A;
extern char*s97_8889A;
extern char*s101_941548611A;
extern char*s613_1637595774A;
extern char*s28_8897A;
extern char*s89_45224899A;
extern char*s101_162838175A;
extern char*s29_30191860A;
extern char*s101_2753A;
extern char*s784_1341105285A;
extern char*s267_1251030042A;
extern char*s101_900404594A;
extern char*s25_1525604536A;
extern char*s29_1673345408A;
extern char*s29_954385774A;
extern char*s280_10926944A;
extern char*s427_1666936074A;
extern char*s395_2004103151A;
extern char*s89_1232601674A;
extern char*s84_672350142A;
extern char*s459_946986142A;
extern char*s784_236525A;
extern char*s29_827429162A;
extern char*s784_2142119302A;
extern char*s613_444775459A;
extern char*s324_311661671A;
extern char*s266_758913190A;
extern char*s29_253393261A;
extern char*s101_1040899642A;
extern char*s266_319940936A;
extern char*s30_1509818A;
extern char*s97_8976A;
extern char*s90_1581369567A;
extern char*s89_2137524537A;
extern char*s613_1246644455A;
extern char*s101_1136523103A;
extern char*s97_2833A;
extern char*s414_1529695024A;
extern char*s331_556920526A;
extern char*s424_1026844627A;
extern char*s591_567426438A;
extern char*s97_8991A;
extern char*s614_2217200A;
extern char*s395_1143055473A;
extern char*s97_1331737400A;
extern char*s476_76659A;
extern char*s101_985140858A;
extern char*s267_961330339A;
extern char*s615_177459204A;
extern char*s405_936707889A;
extern char*s105_612334905A;
extern char*s97_1431838787A;
extern char*s784_52067A;
extern char*s398_1721243342A;
extern char*s89_1207880883A;
extern char*s101_400297641A;
extern char*s363_2870A;
extern char*s101_1746979137A;
extern char*s101_1591358844A;
extern char*s29_52347889A;
extern char*s29_76691A;
extern char*s96_1574136045A;
extern char*s323_36115402A;
extern char*s375_527180488A;
extern char*s101_2883A;
extern char*s89_1910823336A;
extern char*s784_618166083A;
extern char*s29_1095772782A;
extern char*s97_218174A;
extern char*s614_907447617A;
extern char*s460_1057882626A;
extern char*s274_15195A;
extern char*s29_869539012A;
extern char*s591_1728089446A;
extern char*s614_1671063525A;
extern char*s73_522142839A;
extern char*s615_965636096A;
extern char*s101_54734511A;
extern char*s628_1691484858A;
extern char*s614_520377520A;
extern char*s29_1574640467A;
extern char*s97_9073A;
extern char*s614_39831A;
extern char*s587_1971245A;
extern char*s29_48958735A;
extern char*s89_727272566A;
extern char*s91_1377150320A;
extern char*s29_170256464A;
extern char*s89_1953566687A;
extern char*s628_81368369A;
extern char*s282_624587783A;
extern char*s112_2947A;
extern char*s30_8054609A;
extern char*s97_9107A;
extern char*s447_947318471A;
extern char*s97_9121A;
extern char*s363_181352A;
extern char*s96_1737672775A;
extern char*s613_497096041A;
extern char*s852_387651299A;
extern char*s614_2118444283A;
extern char*s101_9130A;
extern char*s768_1182938696A;
extern char*s97_2109537640A;
extern char*s591_759184012A;
extern char*s101_374291339A;
extern char*s101_712350300A;
extern char*s97_415107A;
extern char*s89_1775667520A;
extern char*s614_2996A;
extern char*s784_998144220A;
extern char*s101_1582839830A;
extern char*s29_180965424A;
extern char*s363_732402575A;
extern char*s29_180965430A;
extern char*s363_44462444A;
extern char*s101_1281004126A;
extern char*s101_1450568746A;
extern char*s89_188494264A;
extern char*s101_1982839385A;
extern char*s29_180965447A;
extern char*s89_167445550A;
extern char*s29_10945665A;
extern char*s101_3040A;
extern char*s613_1757386798A;
extern char*s90_1708886163A;
extern char*s280_1661812564A;
extern char*s267_2028436769A;
extern char*s101_15351A;
extern char*s628_214672950A;
extern char*s29_2174354A;
extern char*s591_1111279623A;
extern char*s628_1961403182A;
extern char*s617_2117730851A;
extern char*s274_15370A;
extern char*s105_69115705A;
extern char*s97_9220A;
extern char*s97_3069A;
extern char*s273_1492303331A;
extern char*s97_9222A;
extern char*s89_723705127A;
extern char*s97_1527462449A;
extern char*s30_3073A;
extern char*s29_3075A;
extern char*s89_1922694958A;
extern char*s784_33836A;
extern char*s267_817932306A;
extern char*s105_840703310A;
extern char*s30_3085A;
extern char*s30_51843716A;
extern char*s101_1145546877A;
extern char*s389_1896547075A;
extern char*s463_1014770470A;
extern char*s97_3094A;
extern char*s591_1125599189A;
extern char*s26_546820847A;
extern char*s97_1663868A;
extern char*s114_3100A;
extern char*s31_89216A;
extern char*s617_138425A;
extern char*s784_15405A;
extern char*s461_384465A;
extern char*s90_1923039443A;
extern char*s613_1197879602A;
extern char*s29_1856946950A;
extern char*s28_1947489674A;
extern char*s29_39154229A;
extern char*s89_370754643A;
extern char*s89_188014584A;
extern char*s96_1066764899A;
extern char*s784_33875A;
extern char*s89_1502870799A;
extern char*s101_1737592965A;
extern char*s89_144939139A;
extern char*s89_1409701608A;
extern char*s613_1087364605A;
extern char*s89_1550836304A;
extern char*s340_1186844731A;
extern char*s414_1134247532A;
extern char*s366_30745830A;
extern char*s101_375072661A;
extern char*s728_849265556A;
extern char*s96_298390A;
extern char*s89_734506354A;
extern char*s97_721564652A;
extern char*s29_15448A;
extern char*s371_3147A;
extern char*s591_26975282A;
extern char*s89_822318035A;
extern char*s101_756717624A;
extern char*s29_207673214A;
extern char*s626_1901947715A;
extern char*s591_26975293A;
extern char*s473_1329824754A;
extern char*s97_3169A;
extern char*s29_207673231A;
extern char*s608_3175A;
extern char*s31_2248290A;
extern char*s30_3175A;
extern char*s614_653639191A;
extern char*s105_938738041A;
extern char*s784_884381655A;
extern char*s615_3181A;
extern char*s591_156962A;
extern char*s678_46245A;
extern char*s90_1452518781A;
extern char*s96_689013605A;
extern char*s267_1389956963A;
extern char*s101_36460172A;
extern char*s29_7095298A;
extern char*s465_3196A;
extern char*s101_323348966A;
extern char*s101_2101369329A;
extern char*s29_280482649A;
extern char*s784_244523906A;
extern char*s784_3209A;
extern char*s614_802840A;
extern char*s614_1679626025A;
extern char*s591_3212A;
extern char*s473_2088401A;
extern char*s608_602573626A;
extern char*s334_97896378A;
extern char*s613_159025018A;
extern char*s97_9366A;
extern char*s89_1898638542A;
extern char*s89_1460213717A;
extern char*s90_92397395A;
extern char*s606_7224500A;
extern char*s614_15533A;
extern char*s89_1452100558A;
extern char*s89_850458948A;
extern char*s29_421505A;
extern char*s358_336696676A;
extern char*s724_2068836731A;
extern char*s89_1389575653A;
extern char*s469_1088102843A;
extern char*s608_4179775A;
extern char*s105_2035830473A;
extern char*s30_3249A;
extern char*s89_638895319A;
extern char*s389_1645291191A;
extern char*s625_80501401A;
extern char*s404_835850355A;
extern char*s591_1610470399A;
extern char*s784_834589410A;
extern char*s591_46337A;
extern char*s267_1811847991A;
extern char*s101_660780608A;
extern char*s29_7704337A;
extern char*s101_15589A;
extern char*s614_1206509635A;
extern char*s97_3291A;
extern char*s28_640734509A;
extern char*s97_1346168095A;
extern char*s101_46350A;
extern char*s29_33120277A;
extern char*s613_38305571A;
extern char*s97_3294A;
extern char*s331_70962A;
extern char*s96_1928938448A;
extern char*s101_960414291A;
extern char*s30_1072344038A;
extern char*s89_1725672511A;
extern char*s101_2115332211A;
extern char*s112_287218105A;
extern char*s89_2008366323A;
extern char*s614_83277A;
extern char*s270_1897894366A;
extern char*s464_1810101146A;
extern char*s97_3320A;
extern char*s395_276773717A;
extern char*s614_104084395A;
extern char*s554_13424808A;
extern char*s606_15629A;
extern char*s464_34086A;
extern char*s615_105695965A;
extern char*s628_58505493A;
extern char*s89_147793411A;
extern char*s30_1223234252A;
extern char*s447_221949868A;
extern char*s363_3337A;
extern char*s89_1297544492A;
extern char*s613_259021955A;
extern char*s559_1500847347A;
extern char*s97_150382995A;
extern char*s278_360205908A;
extern char*s30_3349A;
extern char*s366_1731781A;
extern char*s28_30358538A;
extern char*s89_760340765A;
extern char*s728_1398420907A;
extern char*s615_129654140A;
extern char*s725_89481A;
extern char*s101_511465169A;
extern char*s358_240593583A;
extern char*s358_611824887A;
extern char*s101_3374A;
extern char*s469_192265186A;
extern char*s614_83345A;
extern char*s26_1102047298A;
extern char*s89_1109293176A;
extern char*s96_292482A;
extern char*s29_698215697A;
extern char*s96_763853019A;
extern char*s608_23451005A;
extern char*s101_3393A;
extern char*s400_739187517A;
extern char*s89_883016350A;
extern char*s29_89510A;
extern char*s29_1297876698A;
extern char*s101_42279221A;
extern char*s608_2024156039A;
extern char*s615_1062582514A;
extern char*s267_1977886A;
extern char*s30_3415A;
extern char*s656_22122412A;
extern char*s97_15721A;
extern char*s29_3421A;
extern char*s101_5164112A;
extern char*s614_1338608648A;
extern char*s101_3430A;
extern char*s89_2053250287A;
extern char*s608_169510A;
extern char*s101_1855175789A;
extern char*s97_759424351A;
extern char*s89_2060176323A;
extern char*s465_83406A;
extern char*s29_15751A;
extern char*s93_1449185201A;
extern char*s101_2123070311A;
extern char*s784_1242450095A;
extern char*s89_239621812A;
extern char*s101_3457A;
extern char*s273_1534075159A;
extern char*s392_362752532A;
extern char*s338_1742784741A;
extern char*s358_1485100899A;
extern char*s29_3460A;
extern char*s101_1203674198A;
extern char*s97_1067454155A;
extern char*s784_46525A;
extern char*s29_3472A;
extern char*s97_270309168A;
extern char*s29_3474A;
extern char*s101_3475A;
extern char*s101_2038260346A;
extern char*s852_10220290A;
extern char*s606_3485A;
extern char*s97_592781506A;
extern char*s614_1821634438A;
extern char*s101_120095614A;
extern char*s29_1418282620A;
extern char*s591_20240284A;
extern char*s97_3494A;
extern char*s101_325655889A;
extern char*s465_3496A;
extern char*s363_1317154036A;
extern char*s396_176211197A;
extern char*s29_3501A;
extern char*s101_1572014572A;
extern char*s358_1626899946A;
extern char*s89_46597328A;
extern char*s97_62380794A;
extern char*s89_1631593164A;
extern char*s784_1973244310A;
extern char*s784_1173325215A;
extern char*s107_253892190A;
extern char*s785_27492334A;
extern char*s471_1387816739A;
extern char*s590_1199805276A;
extern char*s396_256961544A;
extern char*s78_3520A;
extern char*s97_15828A;
extern char*s784_1058430701A;
extern char*s101_1728206941A;
extern char*s29_15831A;
extern char*s447_1606367935A;
extern char*s29_1947246A;
extern char*s25_1767481079A;
extern char*s96_1225577982A;
extern char*s89_1522646678A;
extern char*s29_1947251A;
extern char*s30_77350A;
extern char*s89_1931146896A;
extern char*s427_1379248421A;
extern char*s89_201048978A;
extern char*s772_789213750A;
extern char*s785_692716864A;
extern char*s89_1582009998A;
extern char*s617_646768902A;
extern char*s89_1167481808A;
extern char*s675_1499315956A;
extern char*s78_1462938943A;
extern char*s552_3557A;
extern char*s608_1965730A;
extern char*s90_176469602A;
extern char*s267_2100317873A;
extern char*s113_902010809A;
extern char*s625_936093505A;
extern char*s726_858562A;
extern char*s606_23186700A;
extern char*s591_134876562A;
extern char*s615_28273584A;
extern char*s101_357794960A;
extern char*s89_161325869A;
extern char*s614_304601115A;
extern char*s30_3595A;
extern char*s464_852437A;
extern char*s101_77412A;
extern char*s30_3601A;
extern char*s84_1229059519A;
extern char*s101_726227573A;
extern char*s101_434116584A;
extern char*s613_15915A;
extern char*s89_1061217192A;
extern char*s613_1193180751A;
extern char*s82_1554312113A;
extern char*s29_279523519A;
extern char*s267_551231644A;
extern char*s84_620670284A;
extern char*s101_1065652086A;
extern char*s613_1549077634A;
extern char*s608_206626A;
extern char*s30_3645A;
extern char*s616_54686040A;
extern char*s26_1009954795A;
extern char*s101_1723513855A;
extern char*s30_89771A;
extern char*s96_2106290588A;
extern char*s89_1522646803A;
extern char*s29_577213499A;
extern char*s591_1115628985A;
extern char*s89_375534514A;
extern char*s29_3669A;
extern char*s626_1750246116A;
extern char*s590_1199620901A;
extern char*s29_911175911A;
extern char*s608_1631421108A;
extern char*s852_28287A;
extern char*s267_261396584A;
extern char*s29_169371474A;
extern char*s278_1539722017A;
extern char*s30_16001A;
extern char*s101_395316170A;
extern char*s29_1947419A;
extern char*s101_1565125654A;
extern char*s400_581709925A;
extern char*s444_1087076085A;
extern char*s613_89821A;
extern char*s101_1773201687A;
extern char*s84_1914699291A;
extern char*s105_429361964A;
extern char*s89_1453066751A;
extern char*s101_1059359695A;
extern char*s101_56845112A;
extern char*s413_1288915017A;
extern char*s395_1469170081A;
extern char*s791_1635136368A;
extern char*s96_1014346693A;
extern char*s30_937397683A;
extern char*s591_129254700A;
extern char*s331_1524252299A;
extern char*s29_2218105A;
extern char*s97_89862A;
extern char*s278_411001267A;
extern char*s396_1933023161A;
extern char*s394_1140411454A;
extern char*s29_203589551A;
extern char*s614_9905A;
extern char*s614_34510A;
extern char*s608_3760A;
extern char*s84_510352234A;
extern char*s389_1128496981A;
extern char*s89_407741255A;
extern char*s101_22971612A;
extern char*s725_560556710A;
extern char*s395_944882A;
extern char*s614_437573617A;
extern char*s101_1316373138A;
extern char*s614_2030510390A;
extern char*s405_1931700734A;
extern char*s667_638047023A;
extern char*s267_1737556726A;
extern char*s29_275488632A;
extern char*s267_2044479327A;
extern char*s31_77608A;
extern char*s614_9980719A;
extern char*s113_113009969A;
extern char*s101_122027336A;
extern char*s30_2593373A;
extern char*s456_907165587A;
extern char*s618_2187411A;
extern char*s852_1760616840A;
extern char*s267_1799491166A;
extern char*s424_892969089A;
extern char*s96_1194472660A;
extern char*s89_1943393816A;
extern char*s464_9808515A;
extern char*s772_65332A;
extern char*s591_2187432A;
extern char*s726_16139A;
extern char*s656_1864907075A;
extern char*s90_372047073A;
extern char*s29_440571A;
extern char*s89_2082787810A;
extern char*s96_388205767A;
extern char*s29_1604522960A;
extern char*s280_2064444A;
extern char*s29_2187464A;
extern char*s101_697705640A;
extern char*s278_188525860A;
extern char*s30_49076540A;
extern char*s264_1587749191A;
extern char*s97_143937264A;
extern char*s267_452889A;
extern char*s101_1450791030A;
extern char*s786_1411018665A;
extern char*s414_2134616155A;
extern char*s392_333554149A;
extern char*s101_397592212A;
extern char*s31_16177A;
extern char*s392_461679483A;
extern char*s29_2187483A;
extern char*s559_11241768A;
extern char*s30_59251A;
extern char*s280_1224218969A;
extern char*s784_54686284A;
extern char*s280_1750778A;
extern char*s91_745978733A;
extern char*s784_384078512A;
extern char*s656_191115496A;
extern char*s101_522691310A;
extern char*s95_1442714837A;
extern char*s615_2187545A;
extern char*s97_1058443417A;
extern char*s89_1687580001A;
extern char*s89_1301660112A;
extern char*s101_1136118256A;
extern char*s460_779913846A;
extern char*s362_389128515A;
extern char*s628_7440512A;
extern char*s614_77767A;
extern char*s101_2060090728A;
extern char*s267_641030424A;
extern char*s614_77773A;
extern char*s30_16264A;
extern char*s30_9790205A;
extern char*s558_1476287022A;
extern char*s101_984785217A;
extern char*s89_99041221A;
extern char*s606_7225250A;
extern char*s606_2187584A;
extern char*s606_2187585A;
extern char*s30_265093627A;
extern char*s101_1234811086A;
extern char*s394_435568604A;
extern char*s90_175744216A;
extern char*s101_700572143A;
extern char*s29_1223936132A;
extern char*s89_331100035A;
extern char*s395_511502716A;
extern char*s29_37186806A;
extern char*s791_1847764413A;
extern char*s591_2187619A;
extern char*s608_809795A;
extern char*s363_4488096A;
extern char*s591_208313786A;
extern char*s90_175744241A;
extern char*s29_77832A;
extern char*s267_1667312535A;
extern char*s267_90141A;
extern char*s383_1814961148A;
extern char*s447_161769183A;
extern char*s360_432936020A;
extern char*s101_889346373A;
extern char*s101_4980205A;
extern char*s89_872019014A;
extern char*s105_7612837A;
extern char*s267_1984169029A;
extern char*s89_1476889913A;
extern char*s101_2039472678A;
extern char*s554_26108906A;
extern char*s29_65574A;
extern char*s101_136593176A;
extern char*s29_197002151A;
extern char*s608_440120430A;
extern char*s101_533301931A;
extern char*s615_388821092A;
extern char*s89_1160088831A;
extern char*s89_902126A;
extern char*s608_2089246593A;
extern char*s614_234855416A;
extern char*s784_2051940780A;
extern char*s29_550709268A;
extern char*s101_253935823A;
extern char*s84_1468715266A;
extern char*s29_197002168A;
extern char*s89_732932648A;
extern char*s591_657822788A;
extern char*s90_1836169859A;
extern char*s30_434665A;
extern char*s90_175744316A;
extern char*s405_626532654A;
extern char*s29_197002174A;
extern char*s464_397949195A;
extern char*s101_1099040180A;
extern char*s267_1805205737A;
extern char*s29_573080478A;
extern char*s392_2089449608A;
extern char*s728_1139569132A;
extern char*s97_1832417772A;
extern char*s615_84085A;
extern char*s89_1732402521A;
extern char*s782_742356016A;
extern char*s608_47187A;
extern char*s587_1152812249A;
extern char*s105_1248054333A;
extern char*s29_53339A;
extern char*s26_1335263213A;
extern char*s613_1085305030A;
extern char*s278_838840612A;
extern char*s95_1616517694A;
extern char*s558_1476281050A;
extern char*s558_742356033A;
extern char*s29_49076823A;
extern char*s101_1858528797A;
extern char*s591_1949908058A;
extern char*s101_10940631A;
extern char*s96_218672210A;
extern char*s424_397660162A;
extern char*s26_375350487A;
extern char*s97_1361085152A;
extern char*s613_1403828457A;
extern char*s467_1610077639A;
extern char*s101_16487A;
extern char*s89_398318341A;
extern char*s90_595894613A;
extern char*s725_2027238465A;
extern char*s89_1174611449A;
extern char*s30_78002A;
extern char*s358_165601417A;
extern char*s728_1927020241A;
extern char*s331_1246984134A;
extern char*s608_16510A;
extern char*s29_1202672333A;
extern char*s89_897447412A;
extern char*s97_19761224A;
extern char*s101_1201497496A;
extern char*s791_1959331451A;
extern char*s784_1990989A;
extern char*s101_5367889A;
extern char*s89_586311386A;
extern char*s591_422487A;
extern char*s101_47278A;
extern char*s89_1093012317A;
extern char*s617_41131A;
extern char*s89_1437345301A;
extern char*s852_2072196164A;
extern char*s29_1744612358A;
extern char*s438_1118729658A;
extern char*s101_2096892436A;
extern char*s617_1659544035A;
extern char*s89_4235A;
extern char*s96_1610926534A;
extern char*s89_1154110220A;
extern char*s266_956361723A;
extern char*s101_1110850242A;
extern char*s101_1377391529A;
extern char*s614_884813300A;
extern char*s614_4881995A;
extern char*s101_1197714671A;
extern char*s608_840791A;
extern char*s90_543076045A;
extern char*s613_280766651A;
extern char*s91_42698349A;
extern char*s678_928596125A;
extern char*s101_246893097A;
extern char*s101_1911279888A;
extern char*s101_1604142009A;
extern char*s101_163909964A;
extern char*s389_332834879A;
extern char*s363_78082A;
extern char*s97_1223801083A;
extern char*s396_1907958363A;
extern char*s469_94643563A;
extern char*s614_17743770A;
extern char*s101_1964848975A;
extern char*s89_688657949A;
extern char*s784_1772045883A;
extern char*s30_90408A;
extern char*s784_1314337673A;
extern char*s90_1242149539A;
extern char*s29_7748406A;
extern char*s511_840796792A;
extern char*s89_126038302A;
extern char*s29_16616A;
extern char*s97_2121681051A;
extern char*s606_36122993A;
extern char*s395_1718483009A;
extern char*s30_16630A;
extern char*s89_494839979A;
extern char*s91_1784452489A;
extern char*s30_10208843A;
extern char*s30_56255230A;
extern char*s97_725963810A;
extern char*s29_16639A;
extern char*s29_78150A;
extern char*s438_1888871872A;
extern char*s89_2016523575A;
extern char*s30_1730514379A;
extern char*s485_1879799154A;
extern char*s608_1553642381A;
extern char*s389_1469029227A;
extern char*s640_1166590709A;
extern char*s784_1396798042A;
extern char*s29_705019679A;
extern char*s29_1339128A;
extern char*s29_451899881A;
extern char*s97_59731A;
extern char*s525_2014364610A;
extern char*s97_39204698A;
extern char*s463_1979303915A;
extern char*s89_768172015A;
extern char*s614_17743865A;
extern char*s90_1226144723A;
extern char*s358_61858840A;
extern char*s29_16686A;
extern char*s784_1279738389A;
extern char*s352_881547256A;
extern char*s31_385751A;
extern char*s785_41300A;
extern char*s677_355003A;
extern char*s726_78209A;
extern char*s101_561301605A;
extern char*s101_988839165A;
extern char*s366_31214580A;
extern char*s614_106047655A;
extern char*s267_2085574777A;
extern char*s97_84381A;
extern char*s267_416541A;
extern char*s608_4425A;
extern char*s590_1511378937A;
extern char*s29_90544A;
extern char*s101_280139425A;
extern char*s389_29037A;
extern char*s728_888288799A;
extern char*s30_427898753A;
extern char*s608_847125A;
extern char*s614_111269879A;
extern char*s362_1881300092A;
extern char*s331_2084824380A;
extern char*s266_988261007A;
extern char*s101_1240218271A;
extern char*s90_175744666A;
extern char*s679_1085938891A;
extern char*s544_32450971A;
extern char*s606_920950A;
extern char*s30_78263A;
extern char*s608_958274895A;
extern char*s615_804085A;
extern char*s101_561947515A;
extern char*s30_16761A;
extern char*s724_786403659A;
extern char*s89_1559455194A;
extern char*s101_21391495A;
extern char*s90_175744691A;
extern char*s89_1421961899A;
extern char*s345_1479430694A;
extern char*s424_597973944A;
extern char*s101_16782A;
extern char*s30_84443A;
extern char*s680_161074567A;
extern char*s400_182862A;
extern char*s96_1914558593A;
extern char*s96_1450022771A;
extern char*s591_430519127A;
extern char*s89_611217054A;
extern char*s389_138555764A;
extern char*s97_1615398571A;
extern char*s750_1400894751A;
extern char*s93_1880881887A;
extern char*s728_263008962A;
extern char*s29_839855894A;
extern char*s89_1075925125A;
extern char*s89_488830629A;
extern char*s331_2050169721A;
extern char*s614_1174230416A;
extern char*s96_1661328107A;
extern char*s29_2126626A;
extern char*s101_179423058A;
extern char*s96_42846255A;
extern char*s389_1816745449A;
extern char*s463_56907446A;
extern char*s613_614557109A;
extern char*s463_10559665A;
extern char*s558_1208522276A;
extern char*s613_1215177661A;
extern char*s395_1592935176A;
extern char*s29_324411A;
extern char*s29_1739790308A;
extern char*s84_15142174A;
extern char*s101_1483072174A;
extern char*s614_195246A;
extern char*s559_1502207936A;
extern char*s683_1345295929A;
extern char*s97_149455415A;
extern char*s614_1605175681A;
extern char*s96_22271191A;
extern char*s447_375578482A;
extern char*s591_948421114A;
extern char*s105_784841421A;
extern char*s89_107634778A;
extern char*s395_350193314A;
extern char*s615_269141588A;
extern char*s91_1043946153A;
extern char*s97_1515266530A;
extern char*s101_1065942137A;
extern char*s101_283387313A;
extern char*s89_104977558A;
extern char*s113_1662662954A;
extern char*s392_401707956A;
extern char*s464_16902A;
extern char*s414_1878889060A;
extern char*s101_18131599A;
extern char*s544_1185594A;
extern char*s784_784300160A;
extern char*s101_355630820A;
extern char*s29_243411981A;
extern char*s29_1419919903A;
extern char*s89_2102385657A;
extern char*s395_211605167A;
extern char*s89_762747069A;
extern char*s97_466551816A;
extern char*s97_2009849A;
extern char*s101_1743948446A;
extern char*s613_16927A;
extern char*s786_1682659883A;
extern char*s784_1007239A;
extern char*s89_2028592127A;
extern char*s84_1838187926A;
extern char*s464_1163823042A;
extern char*s30_16942A;
extern char*s725_989731302A;
extern char*s389_897982986A;
extern char*s96_1783880762A;
extern char*s30_10049231A;
extern char*s608_206419907A;
extern char*s784_931143030A;
extern char*s603_810433A;
extern char*s270_1973946666A;
extern char*s89_1062177790A;
extern char*s852_1994165009A;
extern char*s591_46733806A;
extern char*s270_1838870713A;
extern char*s608_1008067448A;
extern char*s96_485115581A;
extern char*s460_2101296982A;
extern char*s784_90782A;
extern char*s852_1508488213A;
extern char*s621_90792A;
extern char*s30_78490A;
extern char*s31_78495A;
extern char*s97_146157A;
extern char*s613_1428771266A;
extern char*s334_931579788A;
extern char*s852_1942675017A;
extern char*s614_252669317A;
extern char*s29_41849945A;
extern char*s113_27561173A;
extern char*s101_1533928773A;
extern char*s791_2007377394A;
extern char*s90_1658160521A;
extern char*s614_933501A;
extern char*s465_1136691048A;
extern char*s101_1170250908A;
extern char*s363_35157672A;
extern char*s89_1436398529A;
extern char*s29_447584A;
extern char*s89_1414519430A;
extern char*s101_1404148845A;
extern char*s101_958964069A;
extern char*s617_90405963A;
extern char*s471_439056951A;
extern char*s340_767649523A;
extern char*s29_1554777A;
extern char*s13_1216703285A;
extern char*s445_22861847A;
extern char*s101_530940601A;
extern char*s101_724500276A;
extern char*s467_1723490337A;
extern char*s101_2109816196A;
extern char*s29_591417242A;
extern char*s614_10895A;
extern char*s852_1439959996A;
extern char*s358_1094507536A;
extern char*s96_1253172581A;
extern char*s614_10430693A;
extern char*s96_445497083A;
extern char*s784_176986A;
extern char*s101_997623147A;
extern char*s591_1623721137A;
extern char*s101_2055072316A;
extern char*s97_631091213A;
extern char*s29_1735712398A;
extern char*s784_73472312A;
extern char*s84_625881326A;
extern char*s389_507413068A;
extern char*s30_78591A;
extern char*s608_379993A;
extern char*s395_163270777A;
extern char*s366_561523426A;
extern char*s396_1490189105A;
extern char*s331_1060258809A;
extern char*s267_2108992007A;
extern char*s29_1192911276A;
extern char*s89_631447998A;
extern char*s30_10990481A;
extern char*s614_1514442508A;
extern char*s89_1632732392A;
extern char*s29_167970159A;
extern char*s101_1253959973A;
extern char*s558_565060278A;
extern char*s614_78629A;
extern char*s96_1605895597A;
extern char*s91_126291003A;
extern char*s587_1031515224A;
extern char*s267_1658492806A;
extern char*s29_48856070A;
extern char*s29_1622700141A;
extern char*s591_1694771411A;
extern char*s101_78646A;
extern char*s273_722230651A;
extern char*s591_404651A;
extern char*s608_119389596A;
extern char*s89_844703215A;
extern char*s101_2237652A;
extern char*s396_1256137461A;
extern char*s628_1465905014A;
extern char*s91_618869258A;
extern char*s25_1852009437A;
extern char*s90_174945438A;
extern char*s31_1777434714A;
extern char*s101_1220584686A;
extern char*s89_501268295A;
extern char*s608_380065A;
extern char*s590_605650769A;
extern char*s96_313299890A;
extern char*s89_1950357785A;
extern char*s89_2077708091A;
extern char*s658_1760457965A;
extern char*s101_850522083A;
extern char*s97_447734A;
extern char*s101_824324978A;
extern char*s345_793028699A;
extern char*s400_2007408328A;
extern char*s30_17176A;
extern char*s392_1090404950A;
extern char*s345_1492212881A;
extern char*s681_78239462A;
extern char*s89_2141291014A;
extern char*s628_1548937422A;
extern char*s113_210141519A;
extern char*s30_2065491A;
extern char*s101_27063164A;
extern char*s615_1719326284A;
extern char*s113_349372A;
extern char*s101_106460275A;
extern char*s29_84881A;
extern char*s30_17221A;
extern char*s101_1917882A;
extern char*s786_576790349A;
extern char*s97_129391217A;
extern char*s29_2038667775A;
extern char*s724_1762204931A;
extern char*s784_1497878015A;
extern char*s772_1854402277A;
extern char*s89_2127445170A;
extern char*s29_50246319A;
extern char*s267_926093361A;
extern char*s608_1898591066A;
extern char*s101_545118879A;
extern char*s608_380168A;
extern char*s89_23410A;
extern char*s784_77562923A;
extern char*s447_1790874766A;
extern char*s358_7238542A;
extern char*s89_469031018A;
extern char*s613_453998A;
extern char*s614_1671077900A;
extern char*s608_1952787551A;
extern char*s784_1739163321A;
extern char*s29_447851A;
extern char*s270_689575137A;
extern char*s469_29585A;
extern char*s559_100561530A;
extern char*s29_2098363273A;
extern char*s96_1004555549A;
extern char*s29_349117293A;
extern char*s26_1812938425A;
extern char*s90_1861857328A;
extern char*s628_1541882313A;
extern char*s89_928941315A;
extern char*s96_1836299930A;
extern char*s113_195766720A;
extern char*s89_1680421289A;
extern char*s96_231762379A;
extern char*s395_165614527A;
extern char*s29_84969A;
extern char*s591_2142146116A;
extern char*s608_380218A;
extern char*s395_1057872442A;
extern char*s26_739945705A;
extern char*s614_204519611A;
extern char*s852_838816886A;
extern char*s105_1998329594A;
extern char*s89_75828399A;
extern char*s89_1204389280A;
extern char*s424_1628100917A;
extern char*s90_1578831409A;
extern char*s89_1690004585A;
extern char*s784_486352305A;
extern char*s414_1627141371A;
extern char*s31_914215870A;
extern char*s97_1588150185A;
extern char*s97_91157A;
extern char*s772_1932458562A;
extern char*s84_8198176A;
extern char*s614_60405A;
extern char*s447_1875641781A;
extern char*s784_1831440704A;
extern char*s396_29662A;
extern char*s724_1309017823A;
extern char*s267_1453633985A;
extern char*s101_495363549A;
extern char*s613_1240206596A;
extern char*s89_1545228536A;
extern char*s89_973007162A;
extern char*s97_561720547A;
extern char*s352_197895058A;
extern char*s96_1889118664A;
extern char*s591_1387812168A;
extern char*s374_668815628A;
extern char*s89_2108887750A;
extern char*s29_240810599A;
extern char*s101_2022630A;
extern char*s97_11253A;
extern char*s29_240810604A;
extern char*s608_2022635A;
extern char*s106_128358027A;
extern char*s591_4999725A;
extern char*s89_199494346A;
extern char*s591_706329A;
extern char*s782_1777096676A;
extern char*s614_525503499A;
extern char*s656_143852403A;
extern char*s628_831146693A;
extern char*s29_17422A;
extern char*s29_2054549840A;
extern char*s626_265537649A;
extern char*s608_380343A;
extern char*s656_167300030A;
extern char*s613_1384921237A;
extern char*s784_110557057A;
extern char*s89_922446006A;
extern char*s89_66884963A;
extern char*s101_1581747096A;
extern char*s89_134219969A;
extern char*s101_471553120A;
extern char*s613_1374304640A;
extern char*s608_504830035A;
extern char*s373_128333478A;
extern char*s97_262628264A;
extern char*s608_1888091524A;
extern char*s464_1809088081A;
extern char*s614_114321512A;
extern char*s89_1701980726A;
extern char*s29_337331A;
extern char*s101_17480A;
extern char*s84_1056980719A;
extern char*s323_1542436092A;
extern char*s101_1680956616A;
extern char*s89_2060540980A;
extern char*s617_5313505A;
extern char*s31_17498A;
extern char*s113_1293738877A;
extern char*s29_1483884743A;
extern char*s558_985967445A;
extern char*s615_2102695A;
extern char*s101_17507A;
extern char*s628_139854341A;
extern char*s89_2176510A;
extern char*s89_552734069A;
extern char*s96_1556970935A;
extern char*s615_35966A;
extern char*s617_5313530A;
extern char*s615_1416678934A;
extern char*s374_492964813A;
extern char*s90_1538234998A;
extern char*s30_306165094A;
extern char*s96_921818688A;
extern char*s395_1505530135A;
extern char*s614_46980416A;
extern char*s784_1843146228A;
extern char*s105_870131842A;
extern char*s101_2072467813A;
extern char*s395_177461A;
extern char*s96_572614135A;
extern char*s273_867234734A;
extern char*s784_97510A;
extern char*s84_445214625A;
extern char*s267_929353692A;
extern char*s511_637371887A;
extern char*s101_1130602126A;
extern char*s591_558682149A;
extern char*s544_11429A;
extern char*s615_23692781A;
extern char*s96_170061979A;
extern char*s613_398948A;
extern char*s591_5284A;
extern char*s613_1231257120A;
extern char*s89_755120513A;
extern char*s502_890319497A;
extern char*s89_2087550139A;
extern char*s591_21632225A;
extern char*s784_775406525A;
extern char*s468_1370872538A;
extern char*s614_520373770A;
extern char*s31_10714216A;
extern char*s622_448205A;
extern char*s614_1836091144A;
extern char*s108_300594A;
extern char*s29_1740332382A;
extern char*s96_1379717706A;
extern char*s29_1644425991A;
extern char*s628_1677586033A;
extern char*s591_4434071A;
extern char*s608_4766225A;
extern char*s400_1119905623A;
extern char*s30_75797981A;
extern char*s613_49680837A;
extern char*s90_744085684A;
extern char*s101_1173628471A;
extern char*s552_146251545A;
extern char*s29_267647687A;
extern char*s465_380590A;
extern char*s392_988692517A;
extern char*s372_5382A;
extern char*s628_2025498932A;
extern char*s89_96053257A;
extern char*s267_17696A;
extern char*s89_1066804080A;
extern char*s89_1062283098A;
extern char*s96_109671582A;
extern char*s280_1831619428A;
extern char*s323_1262756502A;
extern char*s101_444175272A;
extern char*s30_17715A;
extern char*s267_880804011A;
extern char*s617_300665A;
extern char*s331_1001314405A;
extern char*s90_2004339522A;
extern char*s273_92467250A;
extern char*s280_878860A;
extern char*s614_537910373A;
extern char*s89_112999293A;
extern char*s334_700665835A;
extern char*s613_30034A;
extern char*s101_1968768303A;
extern char*s591_180709512A;
extern char*s105_1605047378A;
extern char*s89_1984637890A;
extern char*s101_1435285930A;
extern char*s89_79251A;
extern char*s89_756929053A;
extern char*s89_142936234A;
extern char*s628_21306364A;
extern char*s101_738771309A;
extern char*s96_295542551A;
extern char*s591_386819A;
extern char*s362_22401251A;
extern char*s90_348041349A;
extern char*s101_401124480A;
extern char*s414_1837585965A;
extern char*s591_1642168697A;
extern char*s373_305790140A;
extern char*s591_242108838A;
extern char*s591_56760755A;
extern char*s591_60837A;
extern char*s591_1367040625A;
extern char*s29_1979951A;
extern char*s472_1965077754A;
extern char*s101_471707221A;
extern char*s453_1809998749A;
extern char*s97_17794A;
extern char*s29_386854A;
extern char*s101_1844536619A;
extern char*s89_776600004A;
extern char*s782_1126647264A;
extern char*s371_2014931627A;
extern char*s89_150329797A;
extern char*s101_802495724A;
extern char*s101_719604853A;
extern char*s97_39617954A;
extern char*s97_25704393A;
extern char*s554_5515A;
extern char*s89_397329363A;
extern char*s101_1881374985A;
extern char*s614_134878499A;
extern char*s101_713312393A;
extern char*s89_676769302A;
extern char*s29_79341A;
extern char*s591_882065083A;
extern char*s101_862271166A;
extern char*s280_60894A;
extern char*s29_48672249A;
extern char*s101_23988287A;
extern char*s101_1682814572A;
extern char*s29_572288431A;
extern char*s96_1019367716A;
extern char*s29_572288437A;
extern char*s613_189437896A;
extern char*s395_530141799A;
extern char*s591_560761477A;
extern char*s89_202933204A;
extern char*s29_572288454A;
extern char*s101_1672511676A;
extern char*s96_479236135A;
extern char*s590_5580A;
extern char*s96_1865554673A;
extern char*s89_922212712A;
extern char*s96_1162901343A;
extern char*s785_992457137A;
extern char*s591_674382779A;
extern char*s96_1546692995A;
extern char*s469_1411247976A;
extern char*s101_4692662A;
extern char*s486_2068414678A;
extern char*s608_312808564A;
extern char*s101_1994596535A;
extern char*s620_17916A;
extern char*s96_5615A;
extern char*s101_4631170A;
extern char*s101_1413407004A;
extern char*s29_1680926299A;
extern char*s30_436196A;
extern char*s469_1142240176A;
extern char*s772_602797481A;
extern char*s97_120239233A;
extern char*s784_28263330A;
extern char*s29_506823435A;
extern char*s31_10554609A;
extern char*s267_816126476A;
extern char*s89_2009918711A;
extern char*s677_861846863A;
extern char*s29_39002989A;
extern char*s527_456083848A;
extern char*s25_85614A;
extern char*s608_521905705A;
extern char*s784_291421585A;
extern char*s101_1586354711A;
extern char*s447_865125357A;
extern char*s89_971408488A;
extern char*s96_866669263A;
extern char*s464_1961687A;
extern char*s107_51895507A;
extern char*s113_1635864124A;
extern char*s784_1815688614A;
extern char*s89_210812758A;
extern char*s389_1250079569A;
extern char*s628_1722095007A;
extern char*s414_1333985363A;
extern char*s96_1986489600A;
extern char*s101_2041682A;
extern char*s340_786054293A;
extern char*s591_988243818A;
extern char*s29_1937220099A;
extern char*s591_5720A;
extern char*s614_829308144A;
extern char*s784_598811726A;
extern char*s728_1613492996A;
extern char*s89_18036A;
extern char*s29_247239028A;
extern char*s615_1942608409A;
extern char*s613_41125176A;
extern char*s785_1506490209A;
extern char*s606_1406782500A;
extern char*s784_69352117A;
extern char*s25_425790270A;
extern char*s608_137954235A;
extern char*s101_2103819988A;
extern char*s392_1816888147A;
extern char*s89_1694969179A;
extern char*s101_1836282258A;
extern char*s606_1188262106A;
extern char*s89_825716016A;
extern char*s29_1549680A;
extern char*s782_130382376A;
extern char*s463_1848584263A;
extern char*s331_1642968637A;
extern char*s784_1040644265A;
extern char*s101_1042003640A;
extern char*s362_5787A;
extern char*s30_18090A;
extern char*s445_114137597A;
extern char*s615_946895A;
extern char*s29_1549697A;
extern char*s101_1352413868A;
extern char*s587_11952A;
extern char*s29_1549703A;
extern char*s96_98784712A;
extern char*s266_1968202785A;
extern char*s29_18110A;
extern char*s101_1063704391A;
extern char*s591_1566831588A;
extern char*s101_1339521386A;
extern char*s267_374877A;
extern char*s784_2021999449A;
extern char*s628_1849347035A;
extern char*s101_1460025642A;
extern char*s784_484169497A;
extern char*s469_14429929A;
extern char*s113_809686569A;
extern char*s608_6575105A;
extern char*s97_18144A;
extern char*s89_18150A;
extern char*s105_290966604A;
extern char*s615_2122389958A;
extern char*s101_1624663341A;
extern char*s89_1320619413A;
extern char*s89_442256615A;
extern char*s606_112304676A;
extern char*s448_2015374870A;
extern char*s591_472574902A;
extern char*s267_1325140408A;
extern char*s784_171955A;
extern char*s31_267875778A;
extern char*s465_18186A;
extern char*s784_1985327250A;
extern char*s784_1196941282A;
extern char*s29_1176378494A;
extern char*s544_1096544670A;
extern char*s113_203714719A;
extern char*s29_55924644A;
extern char*s782_2097247A;
extern char*s109_2120987577A;
extern char*s389_5912A;
extern char*s273_1153312264A;
extern char*s101_163413385A;
extern char*s784_1800342110A;
extern char*s591_1992825354A;
extern char*s614_854330615A;
extern char*s852_1067567332A;
extern char*s29_1673348567A;
extern char*s96_5873980A;
extern char*s622_399591A;
extern char*s84_1539816514A;
extern char*s113_44975894A;
extern char*s30_56927287A;
extern char*s614_1709245815A;
extern char*s25_1950832492A;
extern char*s614_4680700A;
extern char*s89_518055462A;
extern char*s469_84293096A;
extern char*s29_1831158645A;
extern char*s89_732257893A;
extern char*s608_352968782A;
extern char*s101_49152444A;
extern char*s363_18257A;
extern char*s396_902517583A;
extern char*s625_496139469A;
extern char*s280_927785894A;
extern char*s352_1664909434A;
extern char*s89_1387339410A;
extern char*s89_445504446A;
extern char*s96_1242126608A;
extern char*s31_10714862A;
extern char*s97_1494914262A;
extern char*s427_983618541A;
extern char*s447_827998241A;
extern char*s613_1869700848A;
extern char*s96_1568923104A;
extern char*s97_448859A;
extern char*s29_1553736287A;
extern char*s784_744114A;
extern char*s89_1575461624A;
extern char*s89_1181926797A;
extern char*s615_531809155A;
extern char*s101_8359055A;
extern char*s89_1978106088A;
extern char*s29_9712276A;
extern char*s613_172080A;
extern char*s617_705408837A;
extern char*s30_1168210079A;
extern char*s614_42916A;
extern char*s25_24284008A;
extern char*s613_249330648A;
extern char*s273_1145998825A;
extern char*s614_842552A;
extern char*s101_431043495A;
extern char*s101_490486762A;
extern char*s89_727903062A;
extern char*s97_165012750A;
extern char*s97_2075119688A;
extern char*s413_306215109A;
extern char*s101_1377208779A;
extern char*s614_153655A;
extern char*s96_212031001A;
extern char*s89_12184A;
extern char*s95_1152235958A;
extern char*s101_1160736641A;
extern char*s101_12188A;
extern char*s101_113036818A;
extern char*s101_12201A;
extern char*s89_34383990A;
extern char*s90_35386613A;
extern char*s442_498169402A;
extern char*s89_1593742473A;
extern char*s89_2018315248A;
extern char*s101_1009317511A;
extern char*s89_124311631A;
extern char*s511_1359629264A;
extern char*s427_1920465143A;
extern char*s680_8777401A;
extern char*s101_1838958244A;
extern char*s89_1962710217A;
extern char*s784_365929075A;
extern char*s786_958639438A;
extern char*s784_680177517A;
extern char*s613_1328320695A;
extern char*s97_5578901A;
extern char*s606_7227375A;
extern char*s89_431394186A;
extern char*s591_9589368A;
extern char*s31_388005040A;
extern char*s97_1319327951A;
extern char*s628_374042271A;
extern char*s96_3579844A;
extern char*s30_1747646688A;
extern char*s559_51582255A;
extern char*s113_141444A;
extern char*s90_432335312A;
extern char*s784_1265395998A;
extern char*s267_1598804806A;
extern char*s91_356743A;
extern char*s101_209121A;
extern char*s89_1615234134A;
extern char*s591_338723264A;
extern char*s447_1573210512A;
extern char*s101_1790869799A;
extern char*s591_3912034A;
extern char*s653_1257368965A;
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
#define FSOC_SIZE 8192
#define RSOC_SIZE 32768
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
   This file (SmartEiffel/sys/runtime/gc_lib.h) is automatically included
   when the Garbage Collector is used (default, unless option -no_gc has
   been selected).
*/

#define SE_GC_LIB 1

#define SE_GC_LOW_MEMORY_STRATEGY 0
#define SE_GC_HIGH_MEMORY_STRATEGY 1
#define SE_GC_DEFAULT_MEMORY_STRATEGY 2
extern int se_gc_strategy;


#define RSOH_UNMARKED 15253
#define RSOH_FREE 1
#define RSOH_MARKED 2


#define FSOH_UNMARKED ((void *) 1)
#define FSOH_MARKED   ((void *) 2)

/* To codify the state and the type of some Memory Chunk, we are
   using the following definitions :
*/
#define FSO_FREE_CHUNK  (-2)
#define RSO_FREE_CHUNK  (-1)
#define RSO_USED_CHUNK  ( 0)
#define FSO_STORE_CHUNK ( 1)
#define FSO_USED_CHUNK  ( 2)
#define FREE_CHUNK(x) ((x)<0)

/* Minimum size for a store area in a ReSizable Objects Chunk :
 */
#define RSOC_MIN_STORE 512

/* The default channel used to print -gc_info flag information :
*/
#define SE_GCINFO SE_ERR

extern int collector_counter; /* MEMORY.collector_counter */

typedef struct s_mch mch; /* Memory Chunk Header. */
typedef struct s_fsoc fsoc; /* Fixed Size Objects Chunk. */
typedef union u_rsoh rsoh; /* ReSizable Object Header. */
typedef struct s_fll_rsoh fll_rsoh;
typedef struct s_rsoc rsoc; /* ReSizable Objects Chunk. */
typedef struct s_na_env na_env; /* Native Array ENVironment. */


struct s_mch{
  unsigned int size; /* In number of bytes (actual argument of malloc).*/
  int state_type; /* One value in : RSO_USED_CHUNK,
                     FREE_CHUNK, FSO_STORE_CHUNK, FSO_USED_CHUNK */
  void(*amfp)(mch*,void*); /* Align Mark Function Pointer. */
  void(*swfp)(mch*); /* SWeep Function Pointer. */
};

struct s_fsoc{
  mch header; /* Common header for fsoc and rsoc. */
  fsoc* next; /* The next one when in free list (fsocfl). */
  int count_minus_one;
  double first_object;
};

typedef struct _rso_header rso_header;

struct _rso_header{
    unsigned int size;
    int magic_flag;     /* RSOH_MARKED when used,
			   RSOH_FREE when free,
			   else RSOH_UNMARKED */
};

typedef union u_fso_header fso_header;

union u_fso_header{
  void* flag;
  void* next;/* accurately typed as gcXX* in actual fso headers */
};

union u_rsoh{
  rso_header header;
  double padding;
};

struct s_fll_rsoh {
  rso_header rsoh_field;
  fll_rsoh* nextflol;
};

struct s_rsoc{
  mch header; /* Common header for fsoc and rsoc. */
  unsigned int isize; /* Initial size (at malloc time) to detect split chunks. */
  rsoc* next; /* Next one when in free list (rsocfl) or in na_env->chunk_list. */
  fll_rsoh*free_list_of_large; /* Intra. free list. */
  na_env*nae;
  rsoh first_header;
};

struct s_na_env{
  unsigned int store_left;
  rsoh* store;
  rsoc*store_chunk;
  rsoc*chunk_list; /*List of chunks of that type that have a non-null free_list_of_large*/
  void (*gc_mark)(T0*);
  int space_used;
};

extern void**stack_bottom;
extern mch**gcmt;
extern int gcmt_max;
extern int gcmt_used;
extern int gc_is_off;
extern fsoc* fsocfl;
extern unsigned int fsoc_count;
extern unsigned int rsoc_count;
extern void*gcmt_tail_addr;

void gc_sweep(void);
void gc_mark(void* p);
mch* gc_find_chunk(void* p);
int gc_stack_size(void);
int garbage_delayed(void);
void gc_update_ceils(void);
char*new_na(na_env*nae,unsigned int size);
unsigned int fsocfl_count(void);
unsigned int rsocfl_count(void);
void gc_dispose_before_exit(void);
void mark_stack_and_registers (void);
fsoc* gc_fsoc_get1(void);
fsoc* gc_fsoc_get2(void);

int gc_memory_used(void);
/*The generic se_agent0 definition:*/
struct _se_agent0{
Tid id;
Tid creation_mold_id;
void(*afp)(se_agent*);
void(*gc_mark_agent_mold)(se_agent*);
int(*eq)(se_agent*,se_agent*);
};
extern unsigned int fsoc_count_ceil;
extern unsigned int rsoc_count_ceil;
/*INTEGER_32*/T6 r2in_range(T2 C,T2 a1,T2 a2);
/*INTEGER_32*/T2 r2max(T2 C,T2 a1);
/*INTEGER_32*/T6 r2is_even(T2 C);
/*INTEGER_32*/T2 r2min(T2 C,T2 a1);
/*INTEGER_32*/T2 r2_ix_9292(T2 C,T2 a1);
/*INTEGER_32*/T0* r2to_string(T2 C);
/*INTEGER_32*/T2 r2_ix_4747(T2 C,T2 a1);
/*INTEGER_32*/T3 r2hexadecimal_digit(T2 C);
/*INTEGER_32*/T6 r2is_odd(T2 C);
/*INTEGER_32*/T6 r2bit_test(T2 C,T1 a1);
/*INTEGER_32*/void r2append_in(T2 C,T0* a1);
/*INTEGER_32*/T3 r2decimal_digit(T2 C);
/*INTEGER_32*/void r2to_hexadecimal_in(T2 C,T0* a1);
extern T0*oBC70string_buffer;
extern int fBC70string_buffer;
/*INTEGER_32*/T0* r2string_buffer(void);
/*INTEGER_8*/T1 r1min(T1 C,T1 a1);
/*INTEGER_8*/void r1to_octal_in(T1 C,T0* a1);
/*INTEGER_8*/T3 r1decimal_digit(T1 C);
/*CHARACTER*/T3 r3to_upper(T3 C);
/*CHARACTER*/T6 r3is_digit(T3 C);
/*CHARACTER*/T6 r3in_range(T3 C,T3 a1,T3 a2);
/*CHARACTER*/T1 r3value(T3 C);
/*CHARACTER*/T6 r3is_separator(T3 C);
/*CHARACTER*/T6 r3is_lower(T3 C);
/*CHARACTER*/T1 r3decimal_value(T3 C);
/*CHARACTER*/T1 r3hexadecimal_value(T3 C);
/*CHARACTER*/T3 r3to_lower(T3 C);
/*CHARACTER*/T6 r3is_hexadecimal_digit(T3 C);
/*CHARACTER*/T6 r3_ix_60(T3 C,T3 a1);
/*CHARACTER*/T6 r3same_as(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_letter(T3 C);
/*CHARACTER*/T6 r3_ix_6061(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_upper(T3 C);
/*CHARACTER*/T6 r3_ix_6261(T3 C,T3 a1);
/*BOOLEAN*/T6 r6_ix_and(T6 C,T6 a1);
/*BOOLEAN*/T6 r6_ix_or(T6 C,T6 a1);
/*INTEGER_16*/T6 r10in_range(T10 C,T10 a1,T10 a2);
/*INTEGER_16*/T10 r10max(T10 C,T10 a1);
/*INTEGER_16*/T10 r10min(T10 C,T10 a1);
/*INTEGER_16*/T2 r10to_integer_32(T10 C);
/*INTEGER_16*/void r10append_in(T10 C,T0* a1);
/*INTEGER_16*/T3 r10decimal_digit(T10 C);
/*REAL_64*/void r5append_in_format(T5 C,T0* a1,T2 a2);
extern T9 oBC285sprintf_buffer;
/*POINTER*/T8 r8_ix_43(T8 C,T2 a1);
/*POINTER*/T2 r8hash_code(T8 C);
/*POINTER*/void r8append_in(T8 C,T0* a1);
extern T0*oBC8string_buffer;
extern int fBC8string_buffer;
/*POINTER*/T0* r8string_buffer(void);
/*INTEGER_64*/T6 r11in_range(T11 C,T11 a1,T11 a2);
/*INTEGER_64*/T6 r11fit_integer_8(T11 C);
/*INTEGER_64*/T0* r11to_number(T11 C);
/*INTEGER_64*/T2 r11high_32(T11 C);
/*INTEGER_64*/T11 r11_ix_9292(T11 C,T11 a1);
/*INTEGER_64*/T6 r11fit_integer_32(T11 C);
/*INTEGER_64*/T6 r11fit_integer_16(T11 C);
/*INTEGER_64*/T0* r11to_string(T11 C);
/*INTEGER_64*/T11 r11_ix_4747(T11 C,T11 a1);
/*INTEGER_64*/T6 r11is_odd(T11 C);
/*INTEGER_64*/void r11append_in(T11 C,T0* a1);
/*INTEGER_64*/T3 r11decimal_digit(T11 C);
/*INTEGER_64*/T11 r11_ix_94(T11 C,T11 a1);
/*INTEGER_64*/T0* r11string_buffer(void);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_reverse_index_of(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T9 r9realloc(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_index_of(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_has(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_from(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9move(T9 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear_all(T9 C,T2 a1);
/*NATIVE_ARRAY[CHARACTER]*/void r9set_all_with(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_memcmp(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_slice_from(T9 C,T9 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9slice_fast_occurrences(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/T884 r884realloc(T884 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r884fast_index_of(T884 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/void r884copy_from(T884 C,T884 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T6 r884safe_equal(T0* a1,T0* a2);
/*NATIVE_ARRAY[STRING]*/void r884clear(T884 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r884clear_all(T884 C,T2 a1);
/*NATIVE_ARRAY[STRING]*/void r884remove(T884 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r884set_all_with(T884 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r884first_index_of(T884 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r884copy_slice_from(T884 C,T884 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r897clear_all(T897 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/T902 r902realloc(T902 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r902copy_from(T902 C,T902 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r902clear(T902 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r902clear_all(T902 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/void r902copy_slice_from(T902 C,T902 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_TEXT]*/T906 r906realloc(T906 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r906copy_from(T906 C,T906 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r906clear(T906 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r906clear_all(T906 C,T2 a1);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r906copy_slice_from(T906 C,T906 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_16]*/T907 r907realloc(T907 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r907copy_from(T907 C,T907 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r907clear_all(T907 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_16]*/void r907copy_slice_from(T907 C,T907 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLUSTER]*/T911 r911realloc(T911 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r911copy_from(T911 C,T911 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r911clear_all(T911 C,T2 a1);
/*NATIVE_ARRAY[CLUSTER]*/void r911copy_slice_from(T911 C,T911 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r935clear_all(T935 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/T936 r936realloc(T936 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r936copy_from(T936 C,T936 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r936clear_all(T936 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r936copy_slice_from(T936 C,T936 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/T937 r937realloc(T937 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/T2 r937fast_index_of(T937 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r937copy_from(T937 C,T937 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r937clear(T937 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r937clear_all(T937 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r937copy_slice_from(T937 C,T937 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r951clear_all(T951 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r954clear_all(T954 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/T956 r956realloc(T956 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/T2 r956fast_index_of(T956 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r956copy_from(T956 C,T956 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r956move(T956 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r956clear(T956 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r956clear_all(T956 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/void r956remove(T956 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r956set_all_with(T956 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r956copy_slice_from(T956 C,T956 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE_MARK]*/T984 r984realloc(T984 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r984copy_from(T984 C,T984 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r984clear_all(T984 C,T2 a1);
/*NATIVE_ARRAY[TYPE_MARK]*/void r984set_all_with(T984 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r984copy_slice_from(T984 C,T984 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r987clear_all(T987 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1004clear_all(T1004 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1007clear_all(T1007 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[HASHED_STRING]]*/void r1008clear_all(T1008 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1018clear_all(T1018 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/T1019 r1019realloc(T1019 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1019copy_from(T1019 C,T1019 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1019clear(T1019 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1019clear_all(T1019 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/void r1019copy_slice_from(T1019 C,T1019 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1023clear_all(T1023 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/T1026 r1026realloc(T1026 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/T2 r1026fast_index_of(T1026 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1026copy_from(T1026 C,T1026 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1026clear(T1026 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1026clear_all(T1026 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1026remove(T1026 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1026copy_slice_from(T1026 C,T1026 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1029clear_all(T1029 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/T1030 r1030realloc(T1030 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1030copy_from(T1030 C,T1030 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1030clear(T1030 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1030clear_all(T1030 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1030copy_slice_from(T1030 C,T1030 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASSES]*/T1031 r1031realloc(T1031 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1031copy_from(T1031 C,T1031 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1031clear(T1031 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1031clear_all(T1031 C,T2 a1);
/*NATIVE_ARRAY[CLASSES]*/void r1031copy_slice_from(T1031 C,T1031 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1041clear_all(T1041 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1044clear_all(T1044 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[CLASS_NAME]]*/void r1045clear_all(T1045 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1050clear_all(T1050 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/T1052 r1052realloc(T1052 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1052copy_from(T1052 C,T1052 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1052clear(T1052 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1052clear_all(T1052 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1052copy_slice_from(T1052 C,T1052 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/T1056 r1056realloc(T1056 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/T2 r1056fast_index_of(T1056 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1056copy_from(T1056 C,T1056 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1056clear(T1056 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1056clear_all(T1056 C,T2 a1);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1056remove(T1056 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1056copy_slice_from(T1056 C,T1056 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPRESSION]*/T1057 r1057realloc(T1057 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1057copy_from(T1057 C,T1057 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1057clear(T1057 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1057clear_all(T1057 C,T2 a1);
/*NATIVE_ARRAY[EXPRESSION]*/void r1057copy_slice_from(T1057 C,T1057 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TMP_FEATURE]*/T1059 r1059realloc(T1059 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1059copy_from(T1059 C,T1059 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1059clear(T1059 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1059clear_all(T1059 C,T2 a1);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1059copy_slice_from(T1059 C,T1059 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/T1060 r1060realloc(T1060 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1060copy_from(T1060 C,T1060 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1060clear_all(T1060 C,T2 a1);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1060set_all_with(T1060 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1060copy_slice_from(T1060 C,T1060 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1061clear_all(T1061 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1061set_all_with(T1061 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/T1062 r1062realloc(T1062 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1062copy_from(T1062 C,T1062 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1062clear_all(T1062 C,T2 a1);
/*NATIVE_ARRAY[DECLARATION]*/void r1062set_all_with(T1062 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1062copy_slice_from(T1062 C,T1062 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ASSERTION]*/T1064 r1064realloc(T1064 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1064copy_from(T1064 C,T1064 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1064clear(T1064 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1064clear_all(T1064 C,T2 a1);
/*NATIVE_ARRAY[ASSERTION]*/void r1064copy_slice_from(T1064 C,T1064 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_NAME1]*/T1065 r1065realloc(T1065 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1065copy_from(T1065 C,T1065 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1065clear_all(T1065 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1065set_all_with(T1065 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1065copy_slice_from(T1065 C,T1065 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[MANIFEST_STRING]*/T1066 r1066realloc(T1066 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1066copy_from(T1066 C,T1066 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1066clear(T1066 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1066clear_all(T1066 C,T2 a1);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1066copy_slice_from(T1066 C,T1066 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/T1068 r1068realloc(T1068 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1068copy_from(T1068 C,T1068 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1068clear(T1068 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1068clear_all(T1068 C,T2 a1);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1068remove(T1068 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1068copy_slice_from(T1068 C,T1068 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPORT_ITEM]*/T1076 r1076realloc(T1076 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1076copy_from(T1076 C,T1076 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1076clear_all(T1076 C,T2 a1);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1076set_all_with(T1076 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1076copy_slice_from(T1076 C,T1076 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[LIVE_TYPE]]*/void r1077clear_all(T1077 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T1080 r1080realloc(T1080 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T2 r1080fast_index_of(T1080 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1080copy_from(T1080 C,T1080 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1080clear(T1080 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1080clear_all(T1080 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1080copy_slice_from(T1080 C,T1080 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1083clear_all(T1083 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/T1086 r1086realloc(T1086 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/T2 r1086fast_index_of(T1086 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE]*/void r1086copy_from(T1086 C,T1086 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1086clear(T1086 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1086clear_all(T1086 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/void r1086remove(T1086 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1086set_all_with(T1086 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1086copy_slice_from(T1086 C,T1086 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/T1087 r1087realloc(T1087 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/T2 r1087fast_index_of(T1087 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1087copy_from(T1087 C,T1087 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1087clear(T1087 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1087clear_all(T1087 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1087copy_slice_from(T1087 C,T1087 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T1088 r1088realloc(T1088 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T2 r1088fast_index_of(T1088 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1088copy_from(T1088 C,T1088 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1088clear(T1088 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1088clear_all(T1088 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1088copy_slice_from(T1088 C,T1088 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1089clear_all(T1089 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1096clear_all(T1096 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1098clear_all(T1098 C,T2 a1);
/*NATIVE_ARRAY[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1102clear_all(T1102 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1108clear_all(T1108 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T1109 r1109realloc(T1109 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T2 r1109fast_index_of(T1109 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1109copy_from(T1109 C,T1109 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1109clear(T1109 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1109clear_all(T1109 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1109set_all_with(T1109 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1109copy_slice_from(T1109 C,T1109 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/T1110 r1110realloc(T1110 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1110copy_from(T1110 C,T1110 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1110clear(T1110 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1110clear_all(T1110 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1110copy_slice_from(T1110 C,T1110 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CODE]*/T1111 r1111realloc(T1111 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1111copy_from(T1111 C,T1111 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1111clear(T1111 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1111clear_all(T1111 C,T2 a1);
/*NATIVE_ARRAY[CODE]*/void r1111copy_slice_from(T1111 C,T1111 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1114clear_all(T1114 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[TYPE]]*/void r1116clear_all(T1116 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1121clear_all(T1121 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[STRING]]*/void r1122clear_all(T1122 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1127clear_all(T1127 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1128clear_all(T1128 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T1131 r1131realloc(T1131 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1131fast_index_of(T1131 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1131copy_from(T1131 C,T1131 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1131clear(T1131 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1131clear_all(T1131 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1131copy_slice_from(T1131 C,T1131 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1134clear_all(T1134 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[AGENT_ARGS]]*/void r1135clear_all(T1135 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1139clear_all(T1139 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/T1141 r1141realloc(T1141 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1141copy_from(T1141 C,T1141 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1141clear(T1141 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1141clear_all(T1141 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1141copy_slice_from(T1141 C,T1141 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1142clear_all(T1142 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T1145 r1145realloc(T1145 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1145copy_from(T1145 C,T1145 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1145clear(T1145 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1145clear_all(T1145 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1145copy_slice_from(T1145 C,T1145 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1148clear_all(T1148 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1149clear_all(T1149 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1154clear_all(T1154 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1157clear_all(T1157 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1158clear_all(T1158 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1158set_all_with(T1158 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_8]*/void r1159clear_all(T1159 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_8]*/void r1159set_all_with(T1159 C,T1 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1162clear_all(T1162 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/T1163 r1163realloc(T1163 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1163copy_from(T1163 C,T1163 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1163clear(T1163 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1163clear_all(T1163 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1163set_all_with(T1163 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1163copy_slice_from(T1163 C,T1163 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CECIL_ENTRY]*/T1164 r1164realloc(T1164 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1164copy_from(T1164 C,T1164 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1164clear(T1164 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1164clear_all(T1164 C,T2 a1);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1164copy_slice_from(T1164 C,T1164 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[SE_CONFIG]*/T1166 r1166realloc(T1166 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1166copy_from(T1166 C,T1166 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1166clear_all(T1166 C,T2 a1);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1166copy_slice_from(T1166 C,T1166 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1168clear_all(T1168 C,T2 a1);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T1170 r1170realloc(T1170 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1170copy_from(T1170 C,T1170 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1170clear(T1170 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1170clear_all(T1170 C,T2 a1);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1170copy_slice_from(T1170 C,T1170 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1171clear_all(T1171 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1179clear_all(T1179 C,T2 a1);
/*NATIVE_ARRAY[TEXT_FILE_READ]*/void r1181clear_all(T1181 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1184clear_all(T1184 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1185clear_all(T1185 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/T1188 r1188realloc(T1188 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1188copy_from(T1188 C,T1188 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1188clear_all(T1188 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1188set_all_with(T1188 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1188copy_slice_from(T1188 C,T1188 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1191clear_all(T1191 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1194clear_all(T1194 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1198clear_all(T1198 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/T1199 r1199realloc(T1199 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1199copy_from(T1199 C,T1199 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1199clear(T1199 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1199clear_all(T1199 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1199copy_slice_from(T1199 C,T1199 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[IFTHEN]*/T1200 r1200realloc(T1200 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1200copy_from(T1200 C,T1200 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1200clear(T1200 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1200clear_all(T1200 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1200remove(T1200 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1200remove_first(T1200 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1200copy_slice_from(T1200 C,T1200 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_ITEM]*/T1201 r1201realloc(T1201 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1201copy_from(T1201 C,T1201 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1201clear(T1201 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1201clear_all(T1201 C,T2 a1);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1201copy_slice_from(T1201 C,T1201 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INSTRUCTION]*/T1202 r1202realloc(T1202 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1202copy_from(T1202 C,T1202 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1202clear(T1202 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1202clear_all(T1202 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1202remove_first(T1202 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1202copy_slice_from(T1202 C,T1202 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[OPEN_OPERAND]*/T1203 r1203realloc(T1203 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1203copy_from(T1203 C,T1203 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1203clear(T1203 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1203clear_all(T1203 C,T2 a1);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1203copy_slice_from(T1203 C,T1203 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/T1205 r1205realloc(T1205 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1205copy_from(T1205 C,T1205 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1205clear(T1205 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1205clear_all(T1205 C,T2 a1);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1205copy_slice_from(T1205 C,T1205 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_NAME]*/T1206 r1206realloc(T1206 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1206copy_from(T1206 C,T1206 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1206clear(T1206 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1206clear_all(T1206 C,T2 a1);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1206copy_slice_from(T1206 C,T1206 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1209clear_all(T1209 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/T1210 r1210realloc(T1210 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1210copy_from(T1210 C,T1210 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1210clear(T1210 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1210clear_all(T1210 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1210copy_slice_from(T1210 C,T1210 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/T1211 r1211realloc(T1211 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1211copy_from(T1211 C,T1211 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1211clear(T1211 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1211clear_all(T1211 C,T2 a1);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1211copy_slice_from(T1211 C,T1211 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/T1212 r1212realloc(T1212 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1212copy_from(T1212 C,T1212 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1212clear_all(T1212 C,T2 a1);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1212set_all_with(T1212 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1212copy_slice_from(T1212 C,T1212 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1213clear_all(T1213 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[GRAPH_NODE]]*/void r1216clear_all(T1216 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/T1221 r1221realloc(T1221 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1221copy_from(T1221 C,T1221 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1221clear_all(T1221 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1221copy_slice_from(T1221 C,T1221 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RENAME_PAIR]*/T1223 r1223realloc(T1223 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1223copy_from(T1223 C,T1223 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1223clear(T1223 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1223clear_all(T1223 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1223copy_slice_from(T1223 C,T1223 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1226clear_all(T1226 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1233clear_all(T1233 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1236clear_all(T1236 C,T2 a1);
/*NATIVE_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1238clear_all(T1238 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1252clear_all(T1252 C,T2 a1);
/*NATIVE_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1253clear_all(T1253 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1256clear_all(T1256 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/T1275 r1275realloc(T1275 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/T2 r1275fast_index_of(T1275 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1275copy_from(T1275 C,T1275 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1275clear(T1275 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1275clear_all(T1275 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1275copy_slice_from(T1275 C,T1275 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1284clear_all(T1284 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1289clear_all(T1289 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1292clear_all(T1292 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/T1299 r1299realloc(T1299 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1299copy_from(T1299 C,T1299 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1299clear(T1299 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1299clear_all(T1299 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1299copy_slice_from(T1299 C,T1299 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/T1300 r1300realloc(T1300 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1300copy_from(T1300 C,T1300 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1300clear(T1300 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1300clear_all(T1300 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1300copy_slice_from(T1300 C,T1300 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[E_OLD]*/T1301 r1301realloc(T1301 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1301copy_from(T1301 C,T1301 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1301clear(T1301 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1301clear_all(T1301 C,T2 a1);
/*NATIVE_ARRAY[E_OLD]*/void r1301copy_slice_from(T1301 C,T1301 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1302clear_all(T1302 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/T1305 r1305realloc(T1305 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1305copy_from(T1305 C,T1305 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1305clear(T1305 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1305clear_all(T1305 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1305copy_slice_from(T1305 C,T1305 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INLINE_MEMO]*/T1306 r1306realloc(T1306 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1306copy_from(T1306 C,T1306 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1306clear(T1306 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1306clear_all(T1306 C,T2 a1);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1306copy_slice_from(T1306 C,T1306 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[POINTER]*/void r1307clear_all(T1307 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[POSITION]]*/void r1308clear_all(T1308 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1312clear_all(T1312 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/T1347 r1347realloc(T1347 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1347copy_from(T1347 C,T1347 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1347clear(T1347 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1347clear_all(T1347 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1347copy_slice_from(T1347 C,T1347 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T1348 r1348realloc(T1348 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1348copy_from(T1348 C,T1348 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1348move(T1348 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1348clear(T1348 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1348clear_all(T1348 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1348set_all_with(T1348 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1348copy_slice_from(T1348 C,T1348 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/T1349 r1349realloc(T1349 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1349copy_from(T1349 C,T1349 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1349clear(T1349 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1349clear_all(T1349 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1349copy_slice_from(T1349 C,T1349 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1352clear_all(T1352 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/T1354 r1354realloc(T1354 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1354copy_from(T1354 C,T1354 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1354clear(T1354 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1354clear_all(T1354 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1354copy_slice_from(T1354 C,T1354 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/T1355 r1355realloc(T1355 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1355copy_from(T1355 C,T1355 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1355clear(T1355 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1355clear_all(T1355 C,T2 a1);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1355copy_slice_from(T1355 C,T1355 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1356clear_all(T1356 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1376clear_all(T1376 C,T2 a1);
/*STRING*/T2 r7first_index_of(T7* C,T3 a1);
/*STRING*/T0* r7out(T7* C);
/*STRING*/void r7copy(T7* C,T0* a1);
/*STRING*/T0* r7substring(T7* C,T2 a1,T2 a2);
/*STRING*/T2 r7occurrences(T7* C,T3 a1);
/*STRING*/void r7set_storage_signature(T7* C);
/*STRING*/void r7remove_prefix(T7* C,T0* a1);
/*STRING*/T0* r7intern(T7* C);
/*STRING*/T2 r7reverse_index_of(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove_first(T7* C);
/*STRING*/T3 r7last(T7* C);
/*STRING*/T2 r7first_substring_index(T7* C,T0* a1);
/*STRING*/void r7remove_suffix(T7* C,T0* a1);
/*STRING*/void r7put(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove_between(T7* C,T2 a1,T2 a2);
/*STRING*/T6 r7is_equal(T7* C,T0* a1);
/*STRING*/void r7insert_character(T7* C,T3 a1,T2 a2);
extern T0*oBC49interned;
extern int fBC49interned;
/*STRING*/T0* r7interned(void);
/*STRING*/T3 r7item(T7* C,T2 a1);
/*STRING*/T0* r7_ix_43(T7* C,T0* a1);
extern T0*oBC49string_buffer;
extern int fBC49string_buffer;
/*STRING*/T0* r7string_buffer(void);
extern T0*oBC49split_buffer;
extern int fBC49split_buffer;
/*STRING*/T0* r7split_buffer(void);
/*STRING*/T0* r7split(T7* C);
/*STRING*/T6 r7valid_index(T7* C,T2 a1);
/*STRING*/void r7append(T7* C,T0* a1);
/*STRING*/void r7print_on(T7* C,T0* a1);
/*STRING*/T6 r7_ix_60(T7* C,T0* a1);
/*STRING*/T6 r7has_substring(T7* C,T0* a1);
/*STRING*/void r7copy_slice_to_native(T7* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*STRING*/T2 r7index_of(T7* C,T3 a1,T2 a2);
/*STRING*/void r7out_in_tagged_out_memory(T7* C);
/*STRING*/void r7make_empty(T7* C);
/*STRING*/void r7slice_copy(T7* C,T2 a1,T0* a2,T2 a3,T2 a4);
/*STRING*/T6 r7has_suffix(T7* C,T0* a1);
/*STRING*/T6 r7is_integer(T7* C);
/*STRING*/void r7remove_tail(T7* C,T2 a1);
/*STRING*/void r7make(T7* C,T2 a1);
/*STRING*/T6 r7has_prefix(T7* C,T0* a1);
/*STRING*/void r7clear_count(T7* C);
/*STRING*/void r7append_string(T7* C,T0* a1);
/*STRING*/void r7make_filled(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove(T7* C,T2 a1);
/*STRING*/void r7append_substring(T7* C,T0* a1,T2 a2,T2 a3);
/*STRING*/void r7extend(T7* C,T3 a1);
/*STRING*/void r7remove_last(T7* C);
/*STRING*/T6 r7has(T7* C,T3 a1);
/*STRING*/void r7keep_head(T7* C,T2 a1);
/*STRING*/T2 r7to_integer(T7* C);
/*STRING*/void r7fill_with(T7* C,T3 a1);
/*STRING*/void r7extend_unless(T7* C,T3 a1);
/*STRING*/T6 r7same_as(T7* C,T0* a1);
/*STRING*/void r7add_last(T7* C,T3 a1);
/*STRING*/T3 r7first(T7* C);
/*STRING*/void r7shrink(T7* C,T2 a1,T2 a2);
/*STRING*/void r7resize(T7* C,T2 a1);
/*STRING*/void r7to_upper(T7* C);
/*STRING*/T2 r7substring_index(T7* C,T0* a1,T2 a2);
/*STRING*/void r7ensure_capacity(T7* C,T2 a1);
/*STRING*/void r7from_external_copy(T7* C,T8 a1);
/*STRING*/T2 r7computed_hash_code(T7* C);
/*STRING*/T6 r7is_integer_64(T7* C);
/*STRING*/T8 r7to_external(T7* C);
/*STRING*/void r7extend_multiple(T7* C,T3 a1,T2 a2);
/*STRING*/void r7to_lower(T7* C);
/*STRING*/T2 r7last_index_of(T7* C,T3 a1);
/*STRING*/T0* r7twin(T7* C);
/*STRING*/void r7with_capacity(T7* C,T2 a1);
/*STRING*/void r7extend_to_count(T7* C,T3 a1,T2 a2);
extern T0*oBC13tagged_out_lock;
/*STRING*/void r7remove_head(T7* C,T2 a1);
/*STRING*/void r7next_generation(T7* C);
/*STRING*/T11 r7to_integer_64(T7* C);
/*STRING*/void r7split_in(T7* C,T0* a1);
extern T0*oBC13tagged_out_memory;
extern int fBC13tagged_out_memory;
/*STRING*/T0* r7tagged_out_memory(void);
/*STRING*/void r7swap(T7* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r859swap(T859* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r859make(T859* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r859put(T859* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r859manifest_put(T859* C,T2 a1,T0* a2);
/*FAST_ARRAY[STRING]*/void r859add(T859* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r859move(T859* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING]*/T0* r859new_iterator(T859* C);
/*FAST_ARRAY[STRING]*/T2 r859fast_first_index_of(T859* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r859add_last(T859* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r859mark_native_arrays(T859* C);
/*FAST_ARRAY[STRING]*/void r859clear_count(T859* C);
/*FAST_ARRAY[STRING]*/void r859manifest_make(T859* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r859valid_index(T859* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r859fast_has(T859* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r859from_collection(T859* C,T0* a1);
/*FAST_ARRAY[STRING]*/T2 r859first_index_of(T859* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r859with_capacity(T859* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r859next_generation(T859* C);
/*FAST_ARRAY[STRING]*/T2 r859count(T859* C);
/*FAST_ARRAY[STRING]*/T6 r859has(T859* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/T0* r864last(T864* C);
/*FAST_ARRAY[HASHED_STRING]*/void r864add_last(T864* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/void r864mark_native_arrays(T864* C);
/*FAST_ARRAY[HASHED_STRING]*/void r864with_capacity(T864* C,T2 a1);
/*FAST_ARRAY[HASHED_STRING]*/void r864next_generation(T864* C);
/*FAST_ARRAY[HASHED_STRING]*/T2 r864count(T864* C);
/*ARRAY[STRING]*/void r865swap(T865* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/T0* r865first(T865* C);
/*ARRAY[STRING]*/void r865put(T865* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r865ensure_capacity_and_bounds(T865* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r865add(T865* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r865move(T865* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r865copy(T865* C,T0* a1);
/*ARRAY[STRING]*/void r865add_last(T865* C,T0* a1);
/*ARRAY[STRING]*/void r865mark_native_arrays(T865* C);
/*ARRAY[STRING]*/T0* r865item(T865* C,T2 a1);
/*ARRAY[STRING]*/void r865clear_all(T865* C);
/*ARRAY[STRING]*/void r865remove(T865* C,T2 a1);
/*ARRAY[STRING]*/void r865clear_count(T865* C);
/*ARRAY[STRING]*/T6 r865is_empty(T865* C);
/*ARRAY[STRING]*/T0* r865twin(T865* C);
/*ARRAY[STRING]*/void r865set_all_with(T865* C,T0* a1);
/*ARRAY[STRING]*/T6 r865valid_index(T865* C,T2 a1);
/*ARRAY[STRING]*/void r865with_capacity(T865* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/void r865next_generation(T865* C);
/*ARRAY[STRING]*/T2 r865count(T865* C);
/*FAST_ARRAY[CLUSTER]*/void r866make(T866* C,T2 a1);
/*FAST_ARRAY[CLUSTER]*/T0* r866first(T866* C);
/*FAST_ARRAY[CLUSTER]*/void r866put(T866* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r866add(T866* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r866move(T866* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLUSTER]*/void r866add_last(T866* C,T0* a1);
/*FAST_ARRAY[CLUSTER]*/void r866mark_native_arrays(T866* C);
/*FAST_ARRAY[CLUSTER]*/void r866clear_count(T866* C);
/*FAST_ARRAY[CLUSTER]*/T6 r866is_empty(T866* C);
/*FAST_ARRAY[CLUSTER]*/void r866next_generation(T866* C);
/*FAST_ARRAY[CLUSTER]*/T2 r866count(T866* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r868make(T868* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r868add_last(T868* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r868mark_native_arrays(T868* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/T0* r868item(T868* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r868next_generation(T868* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r868do_all(T868* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r869swap(T869* C,T2 a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/T0* r869first(T869* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r869put(T869* C,T0* a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r869fast_first_index_of(T869* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r869add_last(T869* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r869mark_native_arrays(T869* C);
/*FAST_ARRAY[LIVE_TYPE]*/T0* r869item(T869* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r869clear_count(T869* C);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r869valid_index(T869* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r869fast_has(T869* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r869with_capacity(T869* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r869next_generation(T869* C);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r869count(T869* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r869do_all(T869* C,T0* a1);
/*FAST_ARRAY[INTEGER_32]*/void r872swap(T872* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r872make(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T2 r872first(T872* C);
/*FAST_ARRAY[INTEGER_32]*/void r872remove_last(T872* C);
/*FAST_ARRAY[INTEGER_32]*/void r872put(T872* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r872add(T872* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r872move(T872* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[INTEGER_32]*/T2 r872last(T872* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r872fast_first_index_of(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r872add_last(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r872remove(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r872clear_count(T872* C);
/*FAST_ARRAY[INTEGER_32]*/void r872set_all_with(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r872valid_index(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r872fast_has(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r872with_capacity(T872* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r872next_generation(T872* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r872count(T872* C);
/*ARRAY[INTEGER_32]*/void r874make(T874* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r874resize(T874* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r874put(T874* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r874ensure_capacity_and_bounds(T874* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_32]*/void r874add_last(T874* C,T2 a1);
/*ARRAY[INTEGER_32]*/T2 r874item(T874* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r874clear_all(T874* C);
/*ARRAY[INTEGER_32]*/void r874set_all_with(T874* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r874force(T874* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/T6 r874valid_index(T874* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r874with_capacity(T874* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r874next_generation(T874* C);
/*ARRAY[INTEGER_32]*/T2 r874count(T874* C);
/*ARRAY[TYPE_MARK]*/void r876make(T876* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r876first(T876* C);
/*ARRAY[TYPE_MARK]*/void r876put(T876* C,T0* a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r876ensure_capacity_and_bounds(T876* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE_MARK]*/void r876manifest_put(T876* C,T2 a1,T0* a2);
/*ARRAY[TYPE_MARK]*/void r876copy(T876* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T0* r876last(T876* C);
/*ARRAY[TYPE_MARK]*/void r876add_last(T876* C,T0* a1);
/*ARRAY[TYPE_MARK]*/void r876mark_native_arrays(T876* C);
/*ARRAY[TYPE_MARK]*/T0* r876item(T876* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r876clear_all(T876* C);
/*ARRAY[TYPE_MARK]*/void r876manifest_make(T876* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r876twin(T876* C);
/*ARRAY[TYPE_MARK]*/void r876set_all_with(T876* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T6 r876valid_index(T876* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r876with_capacity(T876* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r876next_generation(T876* C);
/*ARRAY[TYPE_MARK]*/T2 r876count(T876* C);
/*FAST_ARRAY[POSITION]*/void r887swap(T887* C,T2 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T333 r887first(T887* C);
/*FAST_ARRAY[POSITION]*/void r887remove_last(T887* C);
/*FAST_ARRAY[POSITION]*/void r887put(T887* C,T333 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T333 r887last(T887* C);
/*FAST_ARRAY[POSITION]*/void r887add_last(T887* C,T333 a1);
/*FAST_ARRAY[POSITION]*/void r887clear_count(T887* C);
/*FAST_ARRAY[POSITION]*/T6 r887is_empty(T887* C);
/*FAST_ARRAY[POSITION]*/void r887with_capacity(T887* C,T2 a1);
/*FAST_ARRAY[POSITION]*/void r887next_generation(T887* C);
/*FAST_ARRAY[POSITION]*/T2 r887count(T887* C);
/*FAST_ARRAY[FIXED_STRING]*/void r892swap(T892* C,T2 a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r892put(T892* C,T0* a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r892add_last(T892* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/T2 r892fast_first_index_of(T892* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/void r892mark_native_arrays(T892* C);
/*FAST_ARRAY[FIXED_STRING]*/void r892remove(T892* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r892with_capacity(T892* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r892next_generation(T892* C);
/*FAST_ARRAY[FIXED_STRING]*/T2 r892count(T892* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r901make(T901* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/T0* r901first(T901* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r901put(T901* C,T0* a1,T2 a2);
/*FAST_ARRAY[FEATURE_NAME]*/void r901add_last(T901* C,T0* a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r901mark_native_arrays(T901* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r901clear_count(T901* C);
/*FAST_ARRAY[FEATURE_NAME]*/T6 r901valid_index(T901* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r901with_capacity(T901* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r901next_generation(T901* C);
/*FAST_ARRAY[FEATURE_NAME]*/T2 r901count(T901* C);
/*FAST_ARRAY[CLASSES]*/void r905put(T905* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r905add(T905* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r905move(T905* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLASSES]*/void r905add_last(T905* C,T0* a1);
/*FAST_ARRAY[CLASSES]*/void r905mark_native_arrays(T905* C);
/*FAST_ARRAY[CLASSES]*/T6 r905is_empty(T905* C);
/*FAST_ARRAY[CLASSES]*/void r905with_capacity(T905* C,T2 a1);
/*FAST_ARRAY[CLASSES]*/void r905next_generation(T905* C);
/*FAST_ARRAY[INTEGER_16]*/void r908make(T908* C,T2 a1);
/*FAST_ARRAY[INTEGER_16]*/void r908add_last(T908* C,T10 a1);
/*FAST_ARRAY[INTEGER_16]*/void r908next_generation(T908* C);
/*FAST_ARRAY[INTEGER_16]*/T2 r908count(T908* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r919copy(T919* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r919add_last(T919* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r919mark_native_arrays(T919* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r919clear_count(T919* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T6 r919is_empty(T919* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T0* r919twin(T919* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r919with_capacity(T919* C,T2 a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r919next_generation(T919* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r920swap(T920* C,T2 a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r920make(T920* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r920fast_index_of(T920* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r920put(T920* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/T0* r920last(T920* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r920fast_first_index_of(T920* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r920add_last(T920* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r920mark_native_arrays(T920* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r920remove(T920* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r920clear_count(T920* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r920is_empty(T920* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r920valid_index(T920* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r920fast_has(T920* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r920with_capacity(T920* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r920next_generation(T920* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r920count(T920* C);
/*FAST_ARRAY[EXPRESSION]*/void r921make(T921* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/T0* r921first(T921* C);
/*FAST_ARRAY[EXPRESSION]*/void r921put(T921* C,T0* a1,T2 a2);
/*FAST_ARRAY[EXPRESSION]*/void r921copy(T921* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r921add_last(T921* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r921mark_native_arrays(T921* C);
/*FAST_ARRAY[EXPRESSION]*/T0* r921twin(T921* C);
/*FAST_ARRAY[EXPRESSION]*/void r921with_capacity(T921* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/void r921next_generation(T921* C);
/*FAST_ARRAY[EXPRESSION]*/T2 r921count(T921* C);
/*ARRAY[ARGUMENT_NAME1]*/void r923make(T923* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/T0* r923first(T923* C);
/*ARRAY[ARGUMENT_NAME1]*/void r923put(T923* C,T0* a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r923ensure_capacity_and_bounds(T923* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARGUMENT_NAME1]*/void r923add_last(T923* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r923mark_native_arrays(T923* C);
/*ARRAY[ARGUMENT_NAME1]*/T0* r923item(T923* C,T2 a1);
/*ARRAY[ARGUMENT_NAME1]*/void r923clear_all(T923* C);
/*ARRAY[ARGUMENT_NAME1]*/void r923set_all_with(T923* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r923from_collection(T923* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r923with_capacity(T923* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r923next_generation(T923* C);
/*ARRAY[ARGUMENT_NAME1]*/T2 r923count(T923* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r924first(T924* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924put(T924* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924ensure_capacity_and_bounds(T924* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924mark_native_arrays(T924* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r924item(T924* C,T2 a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924clear_all(T924* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924set_all_with(T924* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924from_collection(T924* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924with_capacity(T924* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r924next_generation(T924* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T2 r924count(T924* C);
/*ARRAY[DECLARATION]*/void r925make(T925* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r925put(T925* C,T0* a1,T2 a2);
/*ARRAY[DECLARATION]*/void r925ensure_capacity_and_bounds(T925* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[DECLARATION]*/void r925manifest_put(T925* C,T2 a1,T0* a2);
/*ARRAY[DECLARATION]*/void r925add_last(T925* C,T0* a1);
/*ARRAY[DECLARATION]*/void r925mark_native_arrays(T925* C);
/*ARRAY[DECLARATION]*/T0* r925item(T925* C,T2 a1);
/*ARRAY[DECLARATION]*/void r925clear_all(T925* C);
/*ARRAY[DECLARATION]*/T6 r925is_empty(T925* C);
/*ARRAY[DECLARATION]*/void r925manifest_make(T925* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r925set_all_with(T925* C,T0* a1);
/*ARRAY[DECLARATION]*/void r925from_collection(T925* C,T0* a1);
/*ARRAY[DECLARATION]*/void r925with_capacity(T925* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r925next_generation(T925* C);
/*ARRAY[DECLARATION]*/T2 r925count(T925* C);
/*FAST_ARRAY[ASSERTION]*/void r926put(T926* C,T0* a1,T2 a2);
/*FAST_ARRAY[ASSERTION]*/void r926copy(T926* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r926add_last(T926* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r926mark_native_arrays(T926* C);
/*FAST_ARRAY[ASSERTION]*/T0* r926item(T926* C,T2 a1);
/*FAST_ARRAY[ASSERTION]*/void r926clear_count(T926* C);
/*FAST_ARRAY[ASSERTION]*/T6 r926is_empty(T926* C);
/*FAST_ARRAY[ASSERTION]*/T0* r926twin(T926* C);
/*FAST_ARRAY[ASSERTION]*/void r926with_capacity(T926* C,T2 a1);
/*FAST_ARRAY[ASSERTION]*/void r926next_generation(T926* C);
/*FAST_ARRAY[ASSERTION]*/T2 r926count(T926* C);
/*FAST_ARRAY[ASSERTION]*/void r926do_all(T926* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r927make(T927* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/T0* r927first(T927* C);
/*ARRAY[LOCAL_NAME1]*/void r927put(T927* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r927ensure_capacity_and_bounds(T927* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_NAME1]*/void r927add_last(T927* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r927mark_native_arrays(T927* C);
/*ARRAY[LOCAL_NAME1]*/T0* r927item(T927* C,T2 a1);
/*ARRAY[LOCAL_NAME1]*/void r927clear_all(T927* C);
/*ARRAY[LOCAL_NAME1]*/void r927set_all_with(T927* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r927from_collection(T927* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r927with_capacity(T927* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r927next_generation(T927* C);
/*ARRAY[LOCAL_NAME1]*/T2 r927count(T927* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r928add_last(T928* C,T0* a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r928mark_native_arrays(T928* C);
/*FAST_ARRAY[MANIFEST_STRING]*/T6 r928is_empty(T928* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r928with_capacity(T928* C,T2 a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r928next_generation(T928* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929make(T929* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929swap(T929* C,T2 a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r929first(T929* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929put(T929* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929copy(T929* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929add_last(T929* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929mark_native_arrays(T929* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929remove(T929* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929clear_count(T929* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T6 r929is_empty(T929* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r929twin(T929* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929remove_tail(T929* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929with_capacity(T929* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r929next_generation(T929* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T2 r929count(T929* C);
/*ARRAY[EXPORT_ITEM]*/void r930put(T930* C,T0* a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r930ensure_capacity_and_bounds(T930* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[EXPORT_ITEM]*/void r930add_last(T930* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r930mark_native_arrays(T930* C);
/*ARRAY[EXPORT_ITEM]*/T0* r930item(T930* C,T2 a1);
/*ARRAY[EXPORT_ITEM]*/void r930clear_all(T930* C);
/*ARRAY[EXPORT_ITEM]*/void r930set_all_with(T930* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r930with_capacity(T930* C,T2 a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r930next_generation(T930* C);
/*ARRAY[EXPORT_ITEM]*/T2 r930count(T930* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r932add_last(T932* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T2 r932fast_first_index_of(T932* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r932mark_native_arrays(T932* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r932valid_index(T932* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r932fast_has(T932* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r932with_capacity(T932* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r932next_generation(T932* C);
/*ARRAY[TYPE]*/T0* r939first(T939* C);
/*ARRAY[TYPE]*/void r939put(T939* C,T0* a1,T2 a2);
/*ARRAY[TYPE]*/void r939ensure_capacity_and_bounds(T939* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE]*/void r939add_last(T939* C,T0* a1);
/*ARRAY[TYPE]*/void r939mark_native_arrays(T939* C);
/*ARRAY[TYPE]*/T0* r939item(T939* C,T2 a1);
/*ARRAY[TYPE]*/void r939clear_all(T939* C);
/*ARRAY[TYPE]*/void r939set_all_with(T939* C,T0* a1);
/*ARRAY[TYPE]*/void r939with_capacity(T939* C,T2 a1,T2 a2);
/*ARRAY[TYPE]*/void r939next_generation(T939* C);
/*ARRAY[TYPE]*/T2 r939count(T939* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r941add_last(T941* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r941fast_first_index_of(T941* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r941mark_native_arrays(T941* C);
/*FAST_ARRAY[RUN_FEATURE]*/T0* r941item(T941* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/T6 r941valid_index(T941* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r941with_capacity(T941* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r941next_generation(T941* C);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r941count(T941* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r941do_all(T941* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r958make(T958* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T0* r958first(T958* C);
/*FAST_ARRAY[TYPE]*/void r958resize(T958* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r958remove_last(T958* C);
/*FAST_ARRAY[TYPE]*/T0* r958last(T958* C);
/*FAST_ARRAY[TYPE]*/T2 r958fast_first_index_of(T958* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r958add_last(T958* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r958mark_native_arrays(T958* C);
/*FAST_ARRAY[TYPE]*/void r958remove(T958* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r958clear_count(T958* C);
/*FAST_ARRAY[TYPE]*/T6 r958valid_index(T958* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T6 r958fast_has(T958* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r958with_capacity(T958* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r958next_generation(T958* C);
/*FAST_ARRAY[TYPE]*/T2 r958count(T958* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r963add_last(T963* C,T0* a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r963mark_native_arrays(T963* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r963with_capacity(T963* C,T2 a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r963next_generation(T963* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T2 r964fast_first_index_of(T964* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r964add_last(T964* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r964mark_native_arrays(T964* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T0* r964item(T964* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r964is_empty(T964* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r964valid_index(T964* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r964fast_has(T964* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r964with_capacity(T964* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r964next_generation(T964* C);
/*FAST_ARRAY[FEATURE_STAMP]*/void r964do_all(T964* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r965add_last(T965* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r965mark_native_arrays(T965* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T6 r965valid_index(T965* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r965with_capacity(T965* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r965next_generation(T965* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T2 r965count(T965* C);
/*FAST_ARRAY[CODE]*/T0* r966first(T966* C);
/*FAST_ARRAY[CODE]*/void r966remove_last(T966* C);
/*FAST_ARRAY[CODE]*/void r966put(T966* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE]*/void r966copy(T966* C,T0* a1);
/*FAST_ARRAY[CODE]*/T0* r966last(T966* C);
/*FAST_ARRAY[CODE]*/void r966add_last(T966* C,T0* a1);
/*FAST_ARRAY[CODE]*/void r966mark_native_arrays(T966* C);
/*FAST_ARRAY[CODE]*/void r966clear_count(T966* C);
/*FAST_ARRAY[CODE]*/T6 r966is_empty(T966* C);
/*FAST_ARRAY[CODE]*/T0* r966twin(T966* C);
/*FAST_ARRAY[CODE]*/void r966with_capacity(T966* C,T2 a1);
/*FAST_ARRAY[CODE]*/void r966next_generation(T966* C);
/*FAST_ARRAY[CODE]*/T2 r966count(T966* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r977add_last(T977* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r977fast_first_index_of(T977* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r977mark_native_arrays(T977* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T0* r977item(T977* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r977clear_count(T977* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r977valid_index(T977* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r977fast_has(T977* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r977with_capacity(T977* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r977next_generation(T977* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r977do_all(T977* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r979fast_first_index_of(T979* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r979add_last(T979* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r979mark_native_arrays(T979* C);
/*FAST_ARRAY[AGENT_CREATION]*/void r979clear_count(T979* C);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r979valid_index(T979* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r979fast_has(T979* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r979with_capacity(T979* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r979next_generation(T979* C);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r979count(T979* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r983remove_last(T983* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T0* r983last(T983* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r983add_last(T983* C,T0* a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r983mark_native_arrays(T983* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T6 r983is_empty(T983* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r983with_capacity(T983* C,T2 a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r983next_generation(T983* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r989remove_last(T989* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T0* r989last(T989* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r989add_last(T989* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r989mark_native_arrays(T989* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r989clear_count(T989* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T6 r989is_empty(T989* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r989with_capacity(T989* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r989next_generation(T989* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999make(T999* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999ensure_capacity_and_bounds(T999* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999manifest_put(T999* C,T2 a1,T0* a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999mark_native_arrays(T999* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T0* r999item(T999* C,T2 a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999clear_all(T999* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999manifest_make(T999* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999set_all_with(T999* C,T0* a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r999next_generation(T999* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T2 r999count(T999* C);
/*ARRAY[INTEGER_8]*/void r1000make(T1000* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1000ensure_capacity_and_bounds(T1000* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_8]*/void r1000manifest_put(T1000* C,T2 a1,T1 a2);
/*ARRAY[INTEGER_8]*/T1 r1000item(T1000* C,T2 a1);
/*ARRAY[INTEGER_8]*/void r1000clear_all(T1000* C);
/*ARRAY[INTEGER_8]*/void r1000manifest_make(T1000* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1000set_all_with(T1000* C,T1 a1);
/*ARRAY[INTEGER_8]*/void r1000next_generation(T1000* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001make(T1001* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1001first(T1001* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001remove_last(T1001* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1001last(T1001* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T2 r1001fast_first_index_of(T1001* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001add_last(T1001* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001mark_native_arrays(T1001* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001clear_count(T1001* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1001is_empty(T1001* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1001valid_index(T1001* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1001fast_has(T1001* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001with_capacity(T1001* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1001next_generation(T1001* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1014add_last(T1014* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1014mark_native_arrays(T1014* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1014clear_count(T1014* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T6 r1014is_empty(T1014* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1014with_capacity(T1014* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1014next_generation(T1014* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T2 r1014count(T1014* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1015add_last(T1015* C,T0* a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1015mark_native_arrays(T1015* C);
/*FAST_ARRAY[CECIL_ENTRY]*/T0* r1015item(T1015* C,T2 a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1015with_capacity(T1015* C,T2 a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1015next_generation(T1015* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1015do_all(T1015* C,T0* a1);
/*FAST_ARRAY[SE_CONFIG]*/void r1020make(T1020* C,T2 a1);
/*FAST_ARRAY[SE_CONFIG]*/void r1020add_last(T1020* C,T0* a1);
/*FAST_ARRAY[SE_CONFIG]*/void r1020mark_native_arrays(T1020* C);
/*FAST_ARRAY[SE_CONFIG]*/T6 r1020is_empty(T1020* C);
/*FAST_ARRAY[SE_CONFIG]*/void r1020next_generation(T1020* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1027remove_last(T1027* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T0* r1027last(T1027* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1027add_last(T1027* C,T0* a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1027mark_native_arrays(T1027* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T6 r1027is_empty(T1027* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1027with_capacity(T1027* C,T2 a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1027next_generation(T1027* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1037make(T1037* C,T2 a1);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1037remove_last(T1037* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T0* r1037last(T1037* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1037mark_native_arrays(T1037* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T6 r1037is_empty(T1037* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1037next_generation(T1037* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053put(T1053* C,T0* a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053ensure_capacity_and_bounds(T1053* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053add_last(T1053* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053mark_native_arrays(T1053* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T0* r1053item(T1053* C,T2 a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053clear_all(T1053* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053set_all_with(T1053* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053with_capacity(T1053* C,T2 a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1053next_generation(T1053* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T2 r1053count(T1053* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1063first(T1063* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1063put(T1063* C,T0* a1,T2 a2);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1063copy(T1063* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1063add_last(T1063* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1063mark_native_arrays(T1063* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1063twin(T1063* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1063with_capacity(T1063* C,T2 a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1063next_generation(T1063* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T2 r1063count(T1063* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1067first(T1067* C);
/*FAST_ARRAY[IFTHEN]*/void r1067remove_last(T1067* C);
/*FAST_ARRAY[IFTHEN]*/void r1067put(T1067* C,T0* a1,T2 a2);
/*FAST_ARRAY[IFTHEN]*/void r1067copy(T1067* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/T0* r1067last(T1067* C);
/*FAST_ARRAY[IFTHEN]*/void r1067add_last(T1067* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/void r1067mark_native_arrays(T1067* C);
/*FAST_ARRAY[IFTHEN]*/void r1067remove(T1067* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/T6 r1067is_empty(T1067* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1067twin(T1067* C);
/*FAST_ARRAY[IFTHEN]*/void r1067remove_tail(T1067* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1067with_capacity(T1067* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1067next_generation(T1067* C);
/*FAST_ARRAY[IFTHEN]*/void r1067remove_first(T1067* C);
/*FAST_ARRAY[IFTHEN]*/T2 r1067count(T1067* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1069first(T1069* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069put(T1069* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069copy(T1069* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069add_last(T1069* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069mark_native_arrays(T1069* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069append_traversable(T1069* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/T6 r1069is_empty(T1069* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1069twin(T1069* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069with_capacity(T1069* C,T2 a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1069next_generation(T1069* C);
/*FAST_ARRAY[WHEN_ITEM]*/T2 r1069count(T1069* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1070make(T1070* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1070first(T1070* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1070put(T1070* C,T0* a1,T2 a2);
/*FAST_ARRAY[INSTRUCTION]*/void r1070copy(T1070* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1070last(T1070* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1070add_last(T1070* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1070mark_native_arrays(T1070* C);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1070twin(T1070* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1070with_capacity(T1070* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1070next_generation(T1070* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1070remove_first(T1070* C);
/*FAST_ARRAY[INSTRUCTION]*/T2 r1070count(T1070* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1071add_last(T1071* C,T0* a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1071mark_native_arrays(T1071* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1071with_capacity(T1071* C,T2 a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1071next_generation(T1071* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1072add_last(T1072* C,T0* a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1072mark_native_arrays(T1072* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1072with_capacity(T1072* C,T2 a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1072next_generation(T1072* C);
/*FAST_ARRAY[CLASS_NAME]*/void r1073add_last(T1073* C,T0* a1);
/*FAST_ARRAY[CLASS_NAME]*/void r1073mark_native_arrays(T1073* C);
/*FAST_ARRAY[CLASS_NAME]*/void r1073with_capacity(T1073* C,T2 a1);
/*FAST_ARRAY[CLASS_NAME]*/void r1073next_generation(T1073* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1092add_last(T1092* C,T0* a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1092mark_native_arrays(T1092* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1092with_capacity(T1092* C,T2 a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1092next_generation(T1092* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/T0* r1093first(T1093* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1093add_last(T1093* C,T0* a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1093mark_native_arrays(T1093* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1093with_capacity(T1093* C,T2 a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1093next_generation(T1093* C);
/*ARRAY[INDEX_CLAUSE]*/void r1097put(T1097* C,T0* a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1097ensure_capacity_and_bounds(T1097* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INDEX_CLAUSE]*/void r1097add_last(T1097* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1097mark_native_arrays(T1097* C);
/*ARRAY[INDEX_CLAUSE]*/void r1097clear_all(T1097* C);
/*ARRAY[INDEX_CLAUSE]*/void r1097set_all_with(T1097* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1097with_capacity(T1097* C,T2 a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1097next_generation(T1097* C);
/*ARRAY[INDEX_CLAUSE]*/T2 r1097count(T1097* C);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176make(T1176* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176put(T1176* C,T758 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176add(T1176* C,T758 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176move(T1176* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176add_last(T1176* C,T758 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1176is_empty(T1176* C);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1176valid_index(T1176* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176next_generation(T1176* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1195add_last(T1195* C,T0* a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1195mark_native_arrays(T1195* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1195with_capacity(T1195* C,T2 a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1195next_generation(T1195* C);
/*FAST_ARRAY[RENAME_PAIR]*/T2 r1195count(T1195* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1227make(T1227* C,T2 a1);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1227put(T1227* C,T0* a1,T2 a2);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1227mark_native_arrays(T1227* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1227next_generation(T1227* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1244make(T1244* C,T2 a1);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1244mark_native_arrays(T1244* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1244next_generation(T1244* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1269resize(T1269* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1269add_last(T1269* C,T0* a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1269mark_native_arrays(T1269* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1269with_capacity(T1269* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1269next_generation(T1269* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/T2 r1269count(T1269* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1271remove_last(T1271* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1271put(T1271* C,T0* a1,T2 a2);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/T0* r1271last(T1271* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1271add_last(T1271* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1271mark_native_arrays(T1271* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1271with_capacity(T1271* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1271next_generation(T1271* C);
/*FAST_ARRAY[E_OLD]*/void r1272add_last(T1272* C,T0* a1);
/*FAST_ARRAY[E_OLD]*/void r1272mark_native_arrays(T1272* C);
/*FAST_ARRAY[E_OLD]*/void r1272with_capacity(T1272* C,T2 a1);
/*FAST_ARRAY[E_OLD]*/void r1272next_generation(T1272* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1274add_last(T1274* C,T0* a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1274mark_native_arrays(T1274* C);
/*FAST_ARRAY[ADDRESS_OF]*/T0* r1274item(T1274* C,T2 a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1274with_capacity(T1274* C,T2 a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1274next_generation(T1274* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1274do_all(T1274* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1280remove_last(T1280* C);
/*FAST_ARRAY[INLINE_MEMO]*/T0* r1280last(T1280* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1280add_last(T1280* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1280mark_native_arrays(T1280* C);
/*FAST_ARRAY[INLINE_MEMO]*/T6 r1280is_empty(T1280* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1280with_capacity(T1280* C,T2 a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1280next_generation(T1280* C);
/*ARRAY[FEATURE_STAMP]*/void r1282put(T1282* C,T0* a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1282ensure_capacity_and_bounds(T1282* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FEATURE_STAMP]*/void r1282add_last(T1282* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1282mark_native_arrays(T1282* C);
/*ARRAY[FEATURE_STAMP]*/T0* r1282item(T1282* C,T2 a1);
/*ARRAY[FEATURE_STAMP]*/void r1282clear_all(T1282* C);
/*ARRAY[FEATURE_STAMP]*/T6 r1282is_empty(T1282* C);
/*ARRAY[FEATURE_STAMP]*/void r1282set_all_with(T1282* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1282with_capacity(T1282* C,T2 a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1282next_generation(T1282* C);
/*ARRAY[FEATURE_STAMP]*/T2 r1282count(T1282* C);
/*FAST_ARRAY[POINTER]*/void r1283make(T1283* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1283put(T1283* C,T8 a1,T2 a2);
/*FAST_ARRAY[POINTER]*/void r1283manifest_put(T1283* C,T2 a1,T8 a2);
/*FAST_ARRAY[POINTER]*/void r1283manifest_make(T1283* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1283next_generation(T1283* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1293make(T1293* C,T2 a1);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1293mark_native_arrays(T1293* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1293next_generation(T1293* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325make(T1325* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325resize(T1325* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325remove_last(T1325* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325put(T1325* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE_CONTEXT]*/T0* r1325last(T1325* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325add_last(T1325* C,T0* a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325mark_native_arrays(T1325* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T6 r1325is_empty(T1325* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325with_capacity(T1325* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1325next_generation(T1325* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T2 r1325count(T1325* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326make(T1326* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326resize(T1326* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326put(T1326* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326ensure_capacity_and_bounds(T1326* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326add_last(T1326* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326mark_native_arrays(T1326* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T0* r1326item(T1326* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326clear_all(T1326* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326set_all_with(T1326* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326force(T1326* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T6 r1326valid_index(T1326* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1326next_generation(T1326* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T2 r1326count(T1326* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1332add_last(T1332* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1332mark_native_arrays(T1332* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1332with_capacity(T1332* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1332next_generation(T1332* C);
/*ARRAY[RUN_FEATURE_2]*/void r1338swap(T1338* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1338put(T1338* C,T0* a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1338ensure_capacity_and_bounds(T1338* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[RUN_FEATURE_2]*/void r1338add_last(T1338* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1338mark_native_arrays(T1338* C);
/*ARRAY[RUN_FEATURE_2]*/T0* r1338item(T1338* C,T2 a1);
/*ARRAY[RUN_FEATURE_2]*/void r1338clear_all(T1338* C);
/*ARRAY[RUN_FEATURE_2]*/void r1338set_all_with(T1338* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1338with_capacity(T1338* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1338next_generation(T1338* C);
/*ARRAY[RUN_FEATURE_2]*/T2 r1338count(T1338* C);
/*ARRAY[RUN_FEATURE_2]*/void r1338do_all(T1338* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1345add_last(T1345* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1345mark_native_arrays(T1345* C);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1345with_capacity(T1345* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1345next_generation(T1345* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1346add_last(T1346* C,T0* a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1346mark_native_arrays(T1346* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1346with_capacity(T1346* C,T2 a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1346next_generation(T1346* C);
/*FAST_ARRAY[CHARACTER]*/void r1375make(T1375* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1375resize(T1375* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1375put(T1375* C,T3 a1,T2 a2);
/*FAST_ARRAY[CHARACTER]*/void r1375next_generation(T1375* C);
/*FAST_ARRAY[CHARACTER]*/T2 r1375count(T1375* C);
extern T0*oBC309common_free_nodes;
extern int fBC309common_free_nodes;
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861common_free_nodes(void);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861make(T861* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861key(T861* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861put(T861* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861new_node(T861* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861add(T861* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861at(T861* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861set_cache_user(T861* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r861prime_capacity(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861buckets_item(T897 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r861should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r861key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861reference_at(T861* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r861prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861dispose_node(T861* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861item(T861* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861remove(T861* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861create_with_capacity(T861* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861increase_capacity(T861* C);
/*HASHED_DICTIONARY[STRING,STRING]*/void r861next_generation(T861* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r861hash_code(T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r861has(T861* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r861new_iterator_on_keys(T861* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r867common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r867make(T867* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r867key(T867* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r867new_node(T867* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r867add(T867* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r867set_cache_user(T867* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r867prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r867buckets_item(T935 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r867should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r867prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r867item(T867* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r867create_with_capacity(T867* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r867increase_capacity(T867* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r867fast_has(T867* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r867next_generation(T867* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r867hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r870common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r870make(T870* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r870put(T870* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r870new_node(T870* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r870prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r870buckets_item(T951 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r870should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r870key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r870reference_at(T870* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r870prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r870create_with_capacity(T870* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r870increase_capacity(T870* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r870next_generation(T870* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r870hash_code(T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r871common_free_nodes(void);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871make(T871* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871put(T871* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r871new_node(T871* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871add(T871* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871set_cache_user(T871* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r871prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r871buckets_item(T954 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r871should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r871key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r871reference_at(T871* C,T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r871prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r871item(T871* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871create_with_capacity(T871* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871increase_capacity(T871* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r871next_generation(T871* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r871hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r877make(T877* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r877common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r877new_node(T877* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r877add(T877* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r877prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r877buckets_item(T987 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r877should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r877prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r877create_with_capacity(T877* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r877increase_capacity(T877* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r877fast_has(T877* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r877with_capacity(T877* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r877next_generation(T877* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r877hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r877fast_reference_at(T877* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r880common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r880key(T880* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r880new_node(T880* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r880add(T880* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r880set_cache_user(T880* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r880prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r880buckets_item(T1004 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r880should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r880key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r880reference_at(T880* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r880prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r880upper(T880* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r880item(T880* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r880create_with_capacity(T880* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r880increase_capacity(T880* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r880with_capacity(T880* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r880next_generation(T880* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r880hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r881common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r881key(T881* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r881fast_key_at(T881* C,T10 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r881new_node(T881* C,T10 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881add(T881* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881set_cache_user(T881* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r881prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r881buckets_item(T1007 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r881should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r881prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r881item(T881* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r881fast_at(T881* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881create_with_capacity(T881* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881increase_capacity(T881* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r881fast_has(T881* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881with_capacity(T881* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881next_generation(T881* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r881fast_put(T881* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r881hash_code(T0* a1);
extern T0*oBC328common_free_nodes;
extern int fBC328common_free_nodes;
/*HASHED_SET[HASHED_STRING]*/T0* r882common_free_nodes(void);
/*HASHED_SET[HASHED_STRING]*/T0* r882new_node(T882* C,T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T6 r882safe_equal(T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/void r882add(T882* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/void r882manifest_put(T882* C,T2 a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T2 r882prime_capacity(T2 a1);
/*HASHED_SET[HASHED_STRING]*/T6 r882should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[HASHED_STRING]*/T0* r882reference_at(T882* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/T2 r882prime_number_ceiling(T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r882manifest_make(T882* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r882create_with_capacity(T882* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r882increase_capacity(T882* C);
/*HASHED_SET[HASHED_STRING]*/void r882with_capacity(T882* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r882next_generation(T882* C);
/*HASHED_SET[HASHED_STRING]*/T2 r882hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r886common_free_nodes(void);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886make(T886* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r886key(T886* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r886new_node(T886* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886add(T886* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886set_cache_user(T886* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r886prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r886buckets_item(T1018 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r886should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r886key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r886prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r886item(T886* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886create_with_capacity(T886* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886increase_capacity(T886* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886next_generation(T886* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r886hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r886do_all(T886* C,T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r886has(T886* C,T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r888quick_sort_region(T0* a1,T2 a2,T2 a3);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r888lt(T333 a1,T333 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r888quick_sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r888lte(T333 a1,T333 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r888sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r888is_sorted(T0* a1);
/*COLLECTION_SORTER[STRING]*/void r890add(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r890quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[STRING]*/T2 r890insert_index(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/T6 r890lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r890quick_sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r890lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r890sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r890is_sorted(T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r891common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r891make(T891* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r891new_node(T891* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r891add(T891* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r891prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r891buckets_item(T1023 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r891should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r891key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r891reference_at(T891* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r891prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r891create_with_capacity(T891* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r891increase_capacity(T891* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r891next_generation(T891* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r891hash_code(T2 a1);
/*HASHED_DICTIONARY_NODE[STRING,STRING]*/void r893make(T893* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r896set_item(T896* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r898set_item(T898* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r899make(T899* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r900new_node(T900* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r900add(T900* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r900prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r900buckets_item(T1029 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T6 r900should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r900special_common_dictionary(T900* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r900prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r900increase_capacity(T900* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r900next_generation(T900* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r900hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r900fast_reference_at(T900* C,T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/void r903quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r903lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r903quick_sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r903lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r903sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r903is_sorted(T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r910common_free_nodes(void);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r910make(T910* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r910new_node(T910* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r910add(T910* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r910prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r910buckets_item(T1041 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r910should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r910key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r910reference_at(T910* C,T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r910prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r910create_with_capacity(T910* C,T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r910increase_capacity(T910* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r910next_generation(T910* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r910hash_code(T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r912common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r912make(T912* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r912new_node(T912* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r912add(T912* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r912prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r912buckets_item(T1044 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r912should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r912key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r912reference_at(T912* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r912prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r912create_with_capacity(T912* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r912increase_capacity(T912* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r912next_generation(T912* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r912hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T0* r914common_free_nodes(void);
/*HASHED_SET[CLASS_NAME]*/void r914make(T914* C);
/*HASHED_SET[CLASS_NAME]*/T0* r914new_node(T914* C,T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/void r914add(T914* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r914safe_equal(T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/T2 r914prime_capacity(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T6 r914should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[CLASS_NAME]*/T2 r914prime_number_ceiling(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T0* r914dispose_node(T914* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/void r914clear_count(T914* C);
/*HASHED_SET[CLASS_NAME]*/void r914create_with_capacity(T914* C,T2 a1);
/*HASHED_SET[CLASS_NAME]*/void r914increase_capacity(T914* C);
/*HASHED_SET[CLASS_NAME]*/void r914next_generation(T914* C);
/*HASHED_SET[CLASS_NAME]*/T2 r914hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r914has(T914* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r916common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r916make(T916* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r916put(T916* C,T2 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r916new_node(T916* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r916at(T916* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r916internal_key(T916* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r916prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r916buckets_item(T1050 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r916should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r916key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r916prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r916create_with_capacity(T916* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r916increase_capacity(T916* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r916next_generation(T916* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r916hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r916has(T916* C,T0* a1);
/*STACK[TMP_FEATURE]*/void r922make(T922* C);
/*STACK[TMP_FEATURE]*/void r922mark_native_arrays(T922* C);
/*STACK[TMP_FEATURE]*/void r922push(T922* C,T0* a1);
/*STACK[TMP_FEATURE]*/T6 r922is_empty(T922* C);
/*STACK[TMP_FEATURE]*/void r922pop(T922* C);
/*STACK[TMP_FEATURE]*/T0* r922top(T922* C);
/*STACK[TMP_FEATURE]*/void r922with_capacity(T922* C,T2 a1);
/*STACK[TMP_FEATURE]*/void r922next_generation(T922* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r931common_free_nodes(void);
/*HASHED_SET[LIVE_TYPE]*/void r931make(T931* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r931new_node(T931* C,T0* a1,T0* a2);
/*HASHED_SET[LIVE_TYPE]*/void r931set_cache_user(T931* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T2 r931prime_capacity(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T6 r931should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[LIVE_TYPE]*/T2 r931prime_number_ceiling(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r931dispose_node(T931* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r931item(T931* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r931clear_count(T931* C);
/*HASHED_SET[LIVE_TYPE]*/void r931create_with_capacity(T931* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r931increase_capacity(T931* C);
/*HASHED_SET[LIVE_TYPE]*/T6 r931fast_has(T931* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r931with_capacity(T931* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r931next_generation(T931* C);
/*HASHED_SET[LIVE_TYPE]*/T2 r931hash_code(T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r931fast_add(T931* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r933set_item(T933* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]*/void r934make(T934* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938key(T938* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938new_node(T938* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938fast_remove(T938* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938add(T938* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938set_cache_user(T938* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r938prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938buckets_item(T1083 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r938should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r938key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r938prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r938upper(T938* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938dispose_node(T938* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938item(T938* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r938fast_at(T938* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938remove(T938* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938clear_count(T938* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938create_with_capacity(T938* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938increase_capacity(T938* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r938fast_has(T938* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938with_capacity(T938* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938next_generation(T938* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r938fast_put(T938* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r938hash_code(T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r947mark_native_arrays(T947* C);
/*STACK[ANONYMOUS_FEATURE]*/void r947push(T947* C,T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r947pop(T947* C);
/*STACK[ANONYMOUS_FEATURE]*/T0* r947top(T947* C);
/*STACK[ANONYMOUS_FEATURE]*/void r947with_capacity(T947* C,T2 a1);
/*STACK[ANONYMOUS_FEATURE]*/void r947next_generation(T947* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r948common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r948new_node(T948* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r948add(T948* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r948prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r948buckets_item(T1089 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r948should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r948prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T1 r948fast_at(T948* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r948create_with_capacity(T948* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r948increase_capacity(T948* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r948fast_has(T948* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r948with_capacity(T948* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r948next_generation(T948* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r948hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r949make(T949* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949key(T949* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949new_node(T949* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r949add(T949* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949at(T949* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r949set_cache_user(T949* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949internal_key(T949* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r949prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949buckets_item(T1096 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r949should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r949key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949reference_at(T949* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r949prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r949item(T949* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r949create_with_capacity(T949* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r949increase_capacity(T949* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r949next_generation(T949* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r949hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r949has(T949* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r950make(T950* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r952set_item(T952* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]*/void r953make(T953* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r955set_item(T955* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r957common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r957new_node(T957* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r957add(T957* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r957prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r957buckets_item(T1098 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r957should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r957prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T1 r957fast_at(T957* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r957create_with_capacity(T957* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r957increase_capacity(T957* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r957fast_has(T957* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r957with_capacity(T957* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r957next_generation(T957* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r957hash_code(T0* a1);
extern T0*oBC685common_free_nodes;
extern int fBC685common_free_nodes;
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959common_free_nodes(void);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959key(T959* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959fast_key_at(T959* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959new_node(T959* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r959add(T959* C,T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r959set_cache_user(T959* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959internal_key(T959* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r959prime_capacity(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r959should_increase_capacity(T2 a1,T2 a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r959key_safe_equal(T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959reference_at(T959* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r959prime_number_ceiling(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r959item(T959* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r959increase_capacity(T959* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r959with_capacity(T959* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r959next_generation(T959* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r959basic_make(T959* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r959has(T959* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r962common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r962new_node(T962* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r962add(T962* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r962prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r962buckets_item(T1108 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r962should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r962prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r962create_with_capacity(T962* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r962increase_capacity(T962* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r962fast_has(T962* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r962with_capacity(T962* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r962next_generation(T962* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r962hash_code(T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r962fast_reference_at(T962* C,T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r967common_free_nodes(void);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r967new_node(T967* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r967add(T967* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r967set_cache_user(T967* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r967prime_capacity(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r967buckets_item(T1114 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T6 r967should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r967prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r967item(T967* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r967create_with_capacity(T967* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r967increase_capacity(T967* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r967with_capacity(T967* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r967next_generation(T967* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r967hash_code(T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r967fast_reference_at(T967* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r969common_free_nodes(void);
/*HASHED_SET[TYPE]*/void r969make(T969* C);
/*HASHED_SET[TYPE]*/T0* r969new_node(T969* C,T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/T6 r969safe_equal(T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/void r969add(T969* C,T0* a1);
/*HASHED_SET[TYPE]*/void r969set_cache_user(T969* C,T2 a1);
/*HASHED_SET[TYPE]*/T2 r969prime_capacity(T2 a1);
/*HASHED_SET[TYPE]*/T6 r969should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[TYPE]*/T2 r969prime_number_ceiling(T2 a1);
/*HASHED_SET[TYPE]*/T0* r969dispose_node(T969* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r969item(T969* C,T2 a1);
/*HASHED_SET[TYPE]*/void r969remove(T969* C,T0* a1);
/*HASHED_SET[TYPE]*/void r969clear_count(T969* C);
/*HASHED_SET[TYPE]*/void r969create_with_capacity(T969* C,T2 a1);
/*HASHED_SET[TYPE]*/void r969increase_capacity(T969* C);
/*HASHED_SET[TYPE]*/void r969next_generation(T969* C);
/*HASHED_SET[TYPE]*/T2 r969hash_code(T0* a1);
/*HASHED_SET[TYPE]*/T6 r969has(T969* C,T0* a1);
/*HASHED_SET[TYPE]*/void r969fast_add(T969* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r973common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973put(T973* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r973new_node(T973* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973set_cache_user(T973* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r973prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r973buckets_item(T1121 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r973should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r973key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r973prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r973dispose_node(T973* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r973item(T973* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973clear_count(T973* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973create_with_capacity(T973* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973increase_capacity(T973* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973with_capacity(T973* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r973next_generation(T973* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r973hash_code(T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r973has(T973* C,T0* a1);
/*HASHED_SET[STRING]*/void r974make(T974* C);
/*HASHED_SET[STRING]*/T0* r974common_free_nodes(void);
/*HASHED_SET[STRING]*/T0* r974new_node(T974* C,T0* a1,T0* a2);
/*HASHED_SET[STRING]*/T6 r974safe_equal(T0* a1,T0* a2);
/*HASHED_SET[STRING]*/void r974add(T974* C,T0* a1);
/*HASHED_SET[STRING]*/void r974manifest_put(T974* C,T2 a1,T0* a2);
/*HASHED_SET[STRING]*/T2 r974prime_capacity(T2 a1);
/*HASHED_SET[STRING]*/T6 r974should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[STRING]*/T2 r974prime_number_ceiling(T2 a1);
/*HASHED_SET[STRING]*/T0* r974dispose_node(T974* C,T0* a1);
/*HASHED_SET[STRING]*/void r974clear_count(T974* C);
/*HASHED_SET[STRING]*/void r974manifest_make(T974* C,T2 a1);
/*HASHED_SET[STRING]*/void r974create_with_capacity(T974* C,T2 a1);
/*HASHED_SET[STRING]*/void r974increase_capacity(T974* C);
/*HASHED_SET[STRING]*/T6 r974fast_has(T974* C,T0* a1);
/*HASHED_SET[STRING]*/void r974with_capacity(T974* C,T2 a1);
/*HASHED_SET[STRING]*/void r974next_generation(T974* C);
/*HASHED_SET[STRING]*/T2 r974hash_code(T0* a1);
/*HASHED_SET[STRING]*/T6 r974has(T974* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r975common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975put(T975* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r975new_node(T975* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975set_cache_user(T975* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r975prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r975buckets_item(T1127 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r975should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r975key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r975reference_at(T975* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r975prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r975dispose_node(T975* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r975item(T975* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975clear_count(T975* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975create_with_capacity(T975* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975increase_capacity(T975* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975with_capacity(T975* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r975next_generation(T975* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r975hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r976common_free_nodes(void);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976make(T976* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r976new_node(T976* C,T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r976safe_equal(T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976add(T976* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976set_cache_user(T976* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r976prime_capacity(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r976should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r976prime_number_ceiling(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r976dispose_node(T976* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r976item(T976* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976clear_count(T976* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976create_with_capacity(T976* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976increase_capacity(T976* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976next_generation(T976* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r976hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r976do_all(T976* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r978common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r978make(T978* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r978key(T978* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r978new_node(T978* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r978add(T978* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r978set_cache_user(T978* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r978prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r978buckets_item(T1134 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r978should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r978key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r978reference_at(T978* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r978prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r978item(T978* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r978create_with_capacity(T978* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r978increase_capacity(T978* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r978next_generation(T978* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r978hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r981common_free_nodes(void);
/*HASHED_SET[AGENT_ARGS]*/void r981make(T981* C);
/*HASHED_SET[AGENT_ARGS]*/T0* r981new_node(T981* C,T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/T6 r981safe_equal(T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/void r981add(T981* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/void r981set_cache_user(T981* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T2 r981prime_capacity(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r981should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[AGENT_ARGS]*/T2 r981prime_number_ceiling(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r981dispose_node(T981* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r981item(T981* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r981clear_count(T981* C);
/*HASHED_SET[AGENT_ARGS]*/void r981create_with_capacity(T981* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r981increase_capacity(T981* C);
/*HASHED_SET[AGENT_ARGS]*/void r981next_generation(T981* C);
/*HASHED_SET[AGENT_ARGS]*/T2 r981hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r981has(T981* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982make(T982* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982key(T982* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982new_node(T982* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982set_cache_user(T982* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r982prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982buckets_item(T1139 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T6 r982should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r982prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982dispose_node(T982* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982item(T982* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982clear_count(T982* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982create_with_capacity(T982* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982increase_capacity(T982* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982next_generation(T982* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r982fast_put(T982* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r982hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r982fast_reference_at(T982* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r985set_item(T985* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]*/void r986make(T986* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r988common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r988new_node(T988* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r988add(T988* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r988set_cache_user(T988* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r988prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r988buckets_item(T1142 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r988should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r988key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r988reference_at(T988* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r988prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r988item(T988* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r988create_with_capacity(T988* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r988increase_capacity(T988* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r988with_capacity(T988* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r988next_generation(T988* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r988hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r990common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r990new_node(T990* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r990add(T990* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r990prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r990buckets_item(T1148 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r990should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r990key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r990reference_at(T990* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r990prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r990dispose_node(T990* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r990clear_count(T990* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r990create_with_capacity(T990* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r990increase_capacity(T990* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r990with_capacity(T990* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r990next_generation(T990* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r990hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r990has(T990* C,T0* a1);
/*QUEUE[TYPE]*/T0* r991first(T991* C);
/*QUEUE[TYPE]*/void r991put(T991* C,T0* a1,T2 a2);
/*QUEUE[TYPE]*/void r991add(T991* C,T0* a1);
/*QUEUE[TYPE]*/void r991move(T991* C,T2 a1,T2 a2,T2 a3);
/*QUEUE[TYPE]*/void r991collection_with_capacity(T991* C,T2 a1,T2 a2);
/*QUEUE[TYPE]*/T2 r991wrap_point(T991* C);
/*QUEUE[TYPE]*/void r991mark_native_arrays(T991* C);
/*QUEUE[TYPE]*/void r991make_space_for_one(T991* C);
/*QUEUE[TYPE]*/void r991squeeze_bubble(T991* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*QUEUE[TYPE]*/T0* r991item(T991* C,T2 a1);
/*QUEUE[TYPE]*/T2 r991storage_upper(T991* C);
/*QUEUE[TYPE]*/void r991remove(T991* C);
/*QUEUE[TYPE]*/T6 r991is_empty(T991* C);
/*QUEUE[TYPE]*/T6 r991is_wrapped(T991* C);
/*QUEUE[TYPE]*/T2 r991storage_index(T991* C,T2 a1);
/*QUEUE[TYPE]*/void r991with_capacity(T991* C,T2 a1);
/*QUEUE[TYPE]*/void r991next_generation(T991* C);
/*QUEUE[TYPE]*/T2 r991count(T991* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r992common_free_nodes(void);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992make(T992* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r992new_node(T992* C,T330 a1,T0* a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r992safe_equal(T330 a1,T330 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992add(T992* C,T330 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992set_cache_user(T992* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r992prime_capacity(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r992should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r992prime_number_ceiling(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r992dispose_node(T992* C,T0* a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T330 r992item(T992* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992clear_count(T992* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992create_with_capacity(T992* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992increase_capacity(T992* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r992next_generation(T992* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r992hash_code(T330 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993make(T993* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T330 r993key(T993* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993put(T993* C,T0* a1,T330 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993new_node(T993* C,T0* a1,T330 a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993add(T993* C,T0* a1,T330 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993at(T993* C,T330 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993set_cache_user(T993* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r993prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993buckets_item(T1154 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r993should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r993key_safe_equal(T330 a1,T330 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993reference_at(T993* C,T330 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r993prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993dispose_node(T993* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r993item(T993* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993remove(T993* C,T330 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993clear_count(T993* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993create_with_capacity(T993* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993increase_capacity(T993* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r993next_generation(T993* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r993hash_code(T330 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r993has(T993* C,T330 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r998common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r998new_node(T998* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r998add(T998* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r998prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r998buckets_item(T1157 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r998should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r998prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r998fast_at(T998* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r998create_with_capacity(T998* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r998increase_capacity(T998* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r998fast_has(T998* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r998with_capacity(T998* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r998next_generation(T998* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r998fast_put(T998* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r998hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r998fast_reference_at(T998* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1002set_item(T1002* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1003make(T1003* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1005set_item(T1005* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]*/void r1006make(T1006* C,T10 a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[HASHED_STRING]*/void r1009make(T1009* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[HASHED_STRING]]*/void r1012set_item(T1012* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1013common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1013make(T1013* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1013new_node(T1013* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1013add(T1013* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1013prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1013buckets_item(T1162 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T6 r1013should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1013prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1013create_with_capacity(T1013* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1013increase_capacity(T1013* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1013next_generation(T1013* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1013hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1013fast_reference_at(T1013* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1016set_item(T1016* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]*/void r1017make(T1017* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1021common_free_nodes(void);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1021make(T1021* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1021put(T1021* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1021new_node(T1021* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1021prime_capacity(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1021buckets_item(T1168 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1021should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1021reference_at(T1021* C,T0* a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1021key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1021prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1021create_with_capacity(T1021* C,T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1021increase_capacity(T1021* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1021next_generation(T1021* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1021hash_code(T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1024make(T1024* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1025set_item(T1025* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032common_free_nodes(void);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032make(T1032* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032new_node(T1032* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032add(T1032* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032at(T1032* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1032prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032buckets_item(T1171 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1032should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032reference_at(T1032* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1032key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1032prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032dispose_node(T1032* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032clear_count(T1032* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032create_with_capacity(T1032* C,T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032increase_capacity(T1032* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032next_generation(T1032* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1032hash_code(T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1032new_iterator_on_keys(T1032* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1032has(T1032* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032_P_309_add(T1032* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032_P_309_clear_count(T1032* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1032_P_309_create_with_capacity(T1032* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T1033*create1033make(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033common_free_nodes(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033make(T1033* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033key(T1033* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033put(T1033* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033new_node(T1033* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033add(T1033* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033set_cache_user(T1033* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033at(T1033* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1033prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033buckets_item(T897 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1033should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1033key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033reference_at(T1033* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1033prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033dispose_node(T1033* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033item(T1033* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033remove(T1033* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033clear_count(T1033* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033create_with_capacity(T1033* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033increase_capacity(T1033* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033next_generation(T1033* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1033hash_code(T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1033new_iterator_on_keys(T1033* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1033has(T1033* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033_P_309_put(T1033* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033_P_309_add(T1033* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033_P_309_clear_count(T1033* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1033_P_309_create_with_capacity(T1033* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1035common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1035make(T1035* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1035key(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1035new_node(T1035* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1035add(T1035* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1035set_cache_user(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1035prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1035buckets_item(T1179 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1035should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1035key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1035reference_at(T1035* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1035prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1035item(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1035create_with_capacity(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1035increase_capacity(T1035* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1035next_generation(T1035* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1035hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1038common_free_nodes(void);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1038make(T1038* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1038put(T1038* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1038new_node(T1038* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1038prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1038buckets_item(T1184 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1038should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1038key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1038prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1038create_with_capacity(T1038* C,T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1038increase_capacity(T1038* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1038next_generation(T1038* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1038hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1038has(T1038* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1039set_item(T1039* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASSES,STRING]*/void r1040make(T1040* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1042set_item(T1042* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]*/void r1043make(T1043* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[CLASS_NAME]*/void r1046make(T1046* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[CLASS_NAME]]*/void r1047set_item(T1047* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1048set_item(T1048* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]*/void r1049make(T1049* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1051common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1051make(T1051* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1051new_node(T1051* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1051add(T1051* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1051prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1051buckets_item(T1185 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1051should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1051prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1051create_with_capacity(T1051* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1051increase_capacity(T1051* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1051fast_has(T1051* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1051next_generation(T1051* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1051hash_code(T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1051fast_reference_at(T1051* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054make(T1054* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054key(T1054* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054put(T1054* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054new_node(T1054* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054add(T1054* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054set_cache_user(T1054* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054copy(T1054* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1054prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054buckets_item(T1191 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1054should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1054key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1054prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054dispose_node(T1054* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054item(T1054* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054clear_count(T1054* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054twin(T1054* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054create_with_capacity(T1054* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054increase_capacity(T1054* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054with_capacity(T1054* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054next_generation(T1054* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1054fast_put(T1054* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1054hash_code(T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1054fast_reference_at(T1054* C,T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1055common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1055new_node(T1055* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1055prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1055buckets_item(T1194 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T6 r1055should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1055prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1055create_with_capacity(T1055* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1055increase_capacity(T1055* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1055with_capacity(T1055* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1055next_generation(T1055* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1055fast_put(T1055* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1055hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1055fast_reference_at(T1055* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1058common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1058make(T1058* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1058put(T1058* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1058new_node(T1058* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1058prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1058buckets_item(T1198 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1058should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1058key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1058reference_at(T1058* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1058prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1058fast_at(T1058* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1058create_with_capacity(T1058* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1058increase_capacity(T1058* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1058next_generation(T1058* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1058fast_put(T1058* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1058hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1058fast_reference_at(T1058* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1074common_free_nodes(void);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1074put(T1074* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1074new_node(T1074* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1074add(T1074* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1074internal_key(T1074* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1074prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1074buckets_item(T1209 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1074should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1074key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1074reference_at(T1074* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1074prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1074create_with_capacity(T1074* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1074increase_capacity(T1074* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1074with_capacity(T1074* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1074next_generation(T1074* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1074hash_code(T0* a1);
/*HASHED_SET_NODE[LIVE_TYPE]*/void r1078make(T1078* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[LIVE_TYPE]]*/void r1079set_item(T1079* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1081set_item(T1081* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1082make(T1082* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]*/void r1090make(T1090* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1091set_item(T1091* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1094set_item(T1094* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095make(T1095* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]*/void r1099make(T1099* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1100set_item(T1100* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1101make(T1101* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1103common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1103make(T1103* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1103new_node(T1103* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1103add(T1103* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1103prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1103buckets_item(T1213 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T6 r1103should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1103prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1103create_with_capacity(T1103* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1103increase_capacity(T1103* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1103next_generation(T1103* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1103hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1103fast_reference_at(T1103* C,T0* a1);
/*WEAK_REFERENCE[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1105set_item(T1105* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1106set_item(T1106* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]*/void r1107make(T1107* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]*/void r1112make(T1112* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1113set_item(T1113* C,T0* a1);
/*HASHED_SET_NODE[TYPE]*/void r1117make(T1117* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[TYPE]]*/void r1118set_item(T1118* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1119set_item(T1119* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]*/void r1120make(T1120* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[STRING]*/void r1123make(T1123* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[STRING]]*/void r1124set_item(T1124* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1125set_item(T1125* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]*/void r1126make(T1126* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[MANIFEST_GENERIC]*/void r1129make(T1129* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1130set_item(T1130* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1132make(T1132* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1133set_item(T1133* C,T0* a1);
/*HASHED_SET_NODE[AGENT_ARGS]*/void r1136make(T1136* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[AGENT_ARGS]]*/void r1137set_item(T1137* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]*/void r1138make(T1138* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1140set_item(T1140* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1143make(T1143* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1144set_item(T1144* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1146set_item(T1146* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1147make(T1147* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]*/void r1150make(T1150* C,T330 a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1151set_item(T1151* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1152set_item(T1152* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1153make(T1153* C,T0* a1,T330 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1155set_item(T1155* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]*/void r1156make(T1156* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1160set_item(T1160* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1161make(T1161* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET[GRAPH_NODE]*/T0* r1165common_free_nodes(void);
/*HASHED_SET[GRAPH_NODE]*/void r1165make(T1165* C);
/*HASHED_SET[GRAPH_NODE]*/T0* r1165new_node(T1165* C,T0* a1,T0* a2);
/*HASHED_SET[GRAPH_NODE]*/void r1165set_cache_user(T1165* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T2 r1165prime_capacity(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T6 r1165should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[GRAPH_NODE]*/T2 r1165prime_number_ceiling(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1165dispose_node(T1165* C,T0* a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1165item(T1165* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1165clear_count(T1165* C);
/*HASHED_SET[GRAPH_NODE]*/void r1165create_with_capacity(T1165* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1165increase_capacity(T1165* C);
/*HASHED_SET[GRAPH_NODE]*/void r1165next_generation(T1165* C);
/*HASHED_SET[GRAPH_NODE]*/T2 r1165hash_code(T0* a1);
/*HASHED_SET[GRAPH_NODE]*/void r1165fast_add(T1165* C,T0* a1);
/*HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]*/void r1167make(T1167* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1169set_item(T1169* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1172make(T1172* C,T0* a1,T0* a2,T0* a3);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1173make(T1173* C,T0* a1);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T6 r1173is_off(T1173* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1173next(T1173* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T2 r1173iterable_generation(T1173* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T0* r1173item(T1173* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1173start(T1173* C);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1175set_item(T1175* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLUSTER,STRING]*/void r1178make(T1178* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1180set_item(T1180* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1182set_item(T1182* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]*/void r1183make(T1183* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]*/void r1186make(T1186* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1187set_item(T1187* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1189set_item(T1189* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]*/void r1190make(T1190* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1192set_item(T1192* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]*/void r1193make(T1193* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1196set_item(T1196* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,TYPE]*/void r1197make(T1197* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1204common_free_nodes(void);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1204make(T1204* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1204put(T1204* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1204new_node(T1204* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1204prime_capacity(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1204buckets_item(T1226 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1204should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1204key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1204reference_at(T1204* C,T0* a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1204prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1204create_with_capacity(T1204* C,T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1204increase_capacity(T1204* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1204next_generation(T1204* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1204hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1207set_item(T1207* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]*/void r1208make(T1208* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1214make(T1214* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1215set_item(T1215* C,T0* a1);
/*HASHED_SET_NODE[GRAPH_NODE]*/void r1217make(T1217* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[GRAPH_NODE]]*/void r1218set_item(T1218* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1219common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1219make(T1219* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1219put(T1219* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1219new_node(T1219* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1219prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1219buckets_item(T1233 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1219should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1219key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1219prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1219dispose_node(T1219* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1219remove(T1219* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1219create_with_capacity(T1219* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1219increase_capacity(T1219* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1219next_generation(T1219* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1219hash_code(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1220common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1220make(T1220* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1220put(T1220* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1220new_node(T1220* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1220prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1220buckets_item(T1236 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1220should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1220key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1220prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1220dispose_node(T1220* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1220remove(T1220* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1220create_with_capacity(T1220* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1220increase_capacity(T1220* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1220next_generation(T1220* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1220hash_code(T2 a1);
/*WEAK_REFERENCE[STRING]*/void r1222set_item(T1222* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1224set_item(T1224* C,T0* a1);
/*HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]*/void r1225make(T1225* C,T0* a1,T0* a2,T0* a3);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T1228*create1228make(void);
extern T0*oBC780common_free_nodes;
extern int fBC780common_free_nodes;
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1228common_free_nodes(void);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1228make(T1228* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1228new_node(T1228* C,T0* a1,T0* a2);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1228go_item(T1228* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1228add_last(T1228* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1228dispose_node(T1228* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1228item(T1228* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1228clear_count(T1228* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1228next_generation(T1228* C);
/*TUPLE[CHARACTER,INTEGER_32]*/T1229*create1229make_2(T3 a1,T2 a2);
/*TUPLE[CHARACTER,INTEGER_32]*/void r1229make_2(T1229* C,T3 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230a_new_node(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230make(T1230* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230fast_do_insert(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230set_value(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230new_node(T1230* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230set_value_and_key(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230left_grown(T1230* C,T0* a1);
extern T0*oBC841common_lost_nodes;
extern int fBC841common_lost_nodes;
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230common_lost_nodes(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T2 r1230fast_at(T1230* C,T2 a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230do_insert(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1230right_grown(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230discard_node(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230clear_count(T1230* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230clear_nodes(T1230* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230next_generation(T1230* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1230fast_put(T1230* C,T2 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T6 r1230ordered(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]*/void r1232make(T1232* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1234set_item(T1234* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]*/void r1235make(T1235* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1237set_item(T1237* C,T0* a1);
/*WEAK_REFERENCE[LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]]*/void r1241set_item(T1241* C,T0* a1);
/*LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]*/void r1242make(T1242* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1243common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1243make(T1243* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1243new_node(T1243* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1243add(T1243* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1243prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1243buckets_item(T1252 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T6 r1243should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1243prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1243create_with_capacity(T1243* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1243increase_capacity(T1243* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1243next_generation(T1243* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1243hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1243fast_reference_at(T1243* C,T0* a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1245rotate_left(T1245* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/void r1245set(T1245* C,T2 a1,T2 a2);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1245rotate_right(T1245* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1245fast_at(T1245* C,T2 a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T6 r1245ordered(T2 a1,T2 a2);
/*WEAK_REFERENCE[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1248set_item(T1248* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1249common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1249make(T1249* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1249new_node(T1249* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1249add(T1249* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1249prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1249buckets_item(T1256 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1249should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1249key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1249reference_at(T1249* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1249prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1249create_with_capacity(T1249* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1249increase_capacity(T1249* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1249next_generation(T1249* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1249hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1250set_item(T1250* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1251make(T1251* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1254set_item(T1254* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1255make(T1255* C,T0* a1,T0* a2,T0* a3);
/*COLLECTION_SORTER[INTEGER_32]*/T2 r1257insert_index(T0* a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1257lt(T2 a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1257lte(T2 a1,T2 a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1261common_free_nodes(void);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261make(T1261* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1261new_node(T1261* C,T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1261safe_equal(T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261add(T1261* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261set_cache_user(T1261* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1261prime_capacity(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1261should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1261prime_number_ceiling(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1261dispose_node(T1261* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1261item(T1261* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261clear_count(T1261* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261create_with_capacity(T1261* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261increase_capacity(T1261* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261next_generation(T1261* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1261hash_code(T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1261do_all(T1261* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1263common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1263make(T1263* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1263new_node(T1263* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1263add(T1263* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1263set_cache_user(T1263* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1263prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1263buckets_item(T1289 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1263should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1263key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1263reference_at(T1263* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1263prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1263item(T1263* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1263create_with_capacity(T1263* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1263increase_capacity(T1263* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1263next_generation(T1263* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1263hash_code(T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1266common_free_nodes(void);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1266make(T1266* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1266new_node(T1266* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1266add(T1266* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1266set_cache_user(T1266* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1266prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1266buckets_item(T1292 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1266should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1266key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1266reference_at(T1266* C,T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1266prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1266item(T1266* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1266create_with_capacity(T1266* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1266increase_capacity(T1266* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1266next_generation(T1266* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1266hash_code(T0* a1);
/*STACK[AGENT_CREATION]*/void r1267make(T1267* C);
/*STACK[AGENT_CREATION]*/void r1267mark_native_arrays(T1267* C);
/*STACK[AGENT_CREATION]*/void r1267push(T1267* C,T0* a1);
/*STACK[AGENT_CREATION]*/T6 r1267is_empty(T1267* C);
/*STACK[AGENT_CREATION]*/void r1267pop(T1267* C);
/*STACK[AGENT_CREATION]*/T0* r1267top(T1267* C);
/*STACK[AGENT_CREATION]*/void r1267with_capacity(T1267* C,T2 a1);
/*STACK[AGENT_CREATION]*/void r1267next_generation(T1267* C);
/*AVL_SET[POSITION]*/T0* r1268a_new_node(void);
/*AVL_SET[POSITION]*/void r1268make(T1268* C);
/*AVL_SET[POSITION]*/T0* r1268new_node(T1268* C);
/*AVL_SET[POSITION]*/void r1268add(T1268* C,T333 a1);
/*AVL_SET[POSITION]*/T0* r1268left_grown(T1268* C,T0* a1);
extern T0*oBC720common_lost_nodes;
extern int fBC720common_lost_nodes;
/*AVL_SET[POSITION]*/T0* r1268common_lost_nodes(void);
/*AVL_SET[POSITION]*/void r1268set_item(T1268* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1268do_insert(T1268* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1268right_grown(T1268* C,T0* a1);
/*AVL_SET[POSITION]*/void r1268discard_node(T1268* C,T0* a1);
/*AVL_SET[POSITION]*/void r1268clear_count(T1268* C);
/*AVL_SET[POSITION]*/void r1268clear_nodes(T1268* C,T0* a1);
/*AVL_SET[POSITION]*/void r1268next_generation(T1268* C);
/*AVL_SET[POSITION]*/T6 r1268ordered(T333 a1,T333 a2);
/*AVL_SET[POSITION]*/T6 r1268has(T1268* C,T333 a1);
/*REFERENCE[E_OLD]*/void r1270clear(T1270* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1273common_free_nodes(void);
/*HASHED_SET[FEATURE_STAMP]*/void r1273make(T1273* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1273new_node(T1273* C,T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/void r1273add(T1273* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1273safe_equal(T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1273prime_capacity(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1273should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1273prime_number_ceiling(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1273dispose_node(T1273* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1273clear_count(T1273* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1273create_with_capacity(T1273* C,T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1273increase_capacity(T1273* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1273next_generation(T1273* C);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1273hash_code(T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1273has(T1273* C,T0* a1);
/*HASHED_SET_NODE[NATIVE_PLUG_IN]*/void r1285make(T1285* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1286set_item(T1286* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1287set_item(T1287* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]*/void r1288make(T1288* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1290set_item(T1290* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PLUGIN,STRING]*/void r1291make(T1291* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET_NODE[POSITION]*/T0* r1294rotate_left(T1294* C);
/*AVL_SET_NODE[POSITION]*/void r1294set(T1294* C,T333 a1);
/*AVL_SET_NODE[POSITION]*/T0* r1294rotate_right(T1294* C);
/*AVL_SET_NODE[POSITION]*/T6 r1294ordered(T333 a1,T333 a2);
/*AVL_SET_NODE[POSITION]*/T6 r1294has(T1294* C,T333 a1);
/*WEAK_REFERENCE[AVL_SET_NODE[POSITION]]*/void r1297set_item(T1297* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1298common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1298make(T1298* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1298new_node(T1298* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1298add(T1298* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1298prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1298buckets_item(T1312 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1298should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1298key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1298reference_at(T1298* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1298prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1298create_with_capacity(T1298* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1298increase_capacity(T1298* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1298next_generation(T1298* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1298hash_code(T0* a1);
/*HASHED_SET_NODE[FEATURE_STAMP]*/void r1303make(T1303* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1304set_item(T1304* C,T0* a1);
/*SAFE_EQUAL[POSITION]*/T6 r1309test(T333 a1,T333 a2);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1310set_item(T1310* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1311make(T1311* C,T0* a1,T0* a2,T0* a3);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1327quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1327lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1327quick_sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1327lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1327sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1327is_sorted(T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1336make(T1336* C,T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T6 r1336is_off(T1336* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1336next(T1336* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T2 r1336iterable_generation(T1336* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T0* r1336item(T1336* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1336start(T1336* C);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T2 r1337insert_index(T0* a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1337lt(T2 a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1337lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1344common_free_nodes(void);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1344make(T1344* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1344put(T1344* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1344new_node(T1344* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1344prime_capacity(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1344buckets_item(T1352 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1344should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1344key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1344reference_at(T1344* C,T0* a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1344prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1344create_with_capacity(T1344* C,T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1344increase_capacity(T1344* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1344next_generation(T1344* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1344hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1350common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1350make(T1350* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1350new_node(T1350* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1350add(T1350* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1350prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1350buckets_item(T1356 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T6 r1350should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1350prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1350create_with_capacity(T1350* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1350increase_capacity(T1350* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1350next_generation(T1350* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1350hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1350fast_reference_at(T1350* C,T0* a1);
/*HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]*/void r1351make(T1351* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1353set_item(T1353* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]*/void r1357make(T1357* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1358set_item(T1358* C,T0* a1);
/*STACK[EXPRESSION]*/void r1371make(T1371* C);
/*STACK[EXPRESSION]*/void r1371mark_native_arrays(T1371* C);
/*STACK[EXPRESSION]*/void r1371push(T1371* C,T0* a1);
/*STACK[EXPRESSION]*/void r1371pop(T1371* C);
/*STACK[EXPRESSION]*/T0* r1371top(T1371* C);
/*STACK[EXPRESSION]*/void r1371with_capacity(T1371* C,T2 a1);
/*STACK[EXPRESSION]*/void r1371next_generation(T1371* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1372common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1372make(T1372* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1372new_node(T1372* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1372add(T1372* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1372prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1372buckets_item(T1376 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T6 r1372should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1372prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1372create_with_capacity(T1372* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1372increase_capacity(T1372* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1372next_generation(T1372* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1372hash_code(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1372fast_reference_at(T1372* C,T2 a1);
/*SAFE_EQUAL[INTEGER_32]*/T6 r1374test(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]*/void r1377make(T1377* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1378set_item(T1378* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_version_flag(T25* C,T0* a1);
extern T0*oBC28eiffel_parser;
extern int fBC28eiffel_parser;
/*COMPILE_TO_C*/T0* r25eiffel_parser(void);
/*COMPILE_TO_C*/T6 r25is_output_error_warning_on_flag(T25* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/T6 r25is_no_style_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_version_flag_no_exit(T25* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_relax_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_flat_check_flag(T0* a1);
extern T0*oBC28smart_eiffel;
extern T0*oBC28system_tools;
extern int fBC28system_tools;
/*COMPILE_TO_C*/T0* r25system_tools(void);
/*COMPILE_TO_C*/T6 r25is_cecil_flag(T25* C,T0* a1,T2 a2);
extern T0*oBC27command_arguments;
extern int fBC27command_arguments;
/*COMPILE_TO_C*/T0* r25command_arguments(void);
/*COMPILE_TO_C*/T6 r25ace_file_mode(T25* C);
/*COMPILE_TO_C*/T2 r25argument_count(void);
extern T0*oBC28cpp;
extern int fBC28cpp;
/*COMPILE_TO_C*/T0* r25cpp(void);
/*COMPILE_TO_C*/T6 r25flag_match(T0* a1,T0* a2);
extern T0*oBC28cecil_pool_memory;
/*COMPILE_TO_C*/T6 r25is_trace_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_o_flag(T25* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/void r25make(T25* C);
/*COMPILE_TO_C*/void r25parse_command_line(T25* C,T2 a1);
extern T0*oBC28echo;
extern int fBC28echo;
/*COMPILE_TO_C*/T0* r25echo(void);
/*COMPILE_TO_C*/T6 r25is_verbose_flag(T0* a1);
/*COMPILE_TO_C*/T0* r25search_for_echo_redirect_flag(T25* C);
extern T0*oBC28string_aliaser;
/*COMPILE_TO_C*/T6 r25is_help_flag(T25* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_debug_flag(T0* a1);
extern T0*oBC28ace;
/*COMPILE_TO_C*/T6 r25is_high_memory_compiler(T0* a1);
/*COMPILE_TO_C*/T6 r25is_no_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_safety_check_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_profile(T0* a1);
/*COMPILE_TO_C*/T6 r25is_case_insensitive_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_valid_argument_for_ace_mode(T25* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_manifest_string_trace_flag(T0* a1);
/*COMPILE_TO_C*/void r25search_for_cc_flag(void);
/*COMPILE_TO_C*/T6 r25is_a_compilation_level_flag(T25* C,T0* a1);
extern T0*oBC28id_provider;
extern int fBC28id_provider;
/*COMPILE_TO_C*/T0* r25id_provider(void);
/*COMPILE_TO_C*/void r25search_for_verbose_flag(void);
extern T0*oBC28error_handler;
/*COMPILE_TO_C*/void r25check_for_level(T25* C,T0* a1);
extern int fBC28set_cecil_pool;
/*COMPILE_TO_C*/void r25set_cecil_pool(void);
/*STRING_COMMAND_LINE*/T6 r282is_profile(T0* a1);
/*STRING_COMMAND_LINE*/void r282parse(T0* a1);
extern T0*oBC282command_line_buffer;
extern int fBC282command_line_buffer;
/*STRING_COMMAND_LINE*/T0* r282command_line_buffer(void);
/*STRING_COMMAND_LINE*/T6 r282is_trace_flag(T0* a1);
/*STRING_COMMAND_LINE*/T0* r282echo(void);
/*STRING_COMMAND_LINE*/T0* r282cpp(void);
/*STRING_COMMAND_LINE*/void r282next_option(void);
extern T0*oBC282option_buffer;
extern int fBC282option_buffer;
/*STRING_COMMAND_LINE*/T0* r282option_buffer(void);
/*STRING_COMMAND_LINE*/T0* r282system_tools(void);
/*STRING_COMMAND_LINE*/T6 r282flag_match(T0* a1,T0* a2);
extern T0*oBC97object_suffix;
extern int fBC97object_suffix;
/*SYSTEM_TOOLS*/T0* r97object_suffix(T97* C);
extern T0*oBC97c_mode_memory;
extern int fBC97c_mode_memory;
/*SYSTEM_TOOLS*/T0* r97c_mode_memory(void);
/*SYSTEM_TOOLS*/T0* r97path_h(T97* C);
/*SYSTEM_TOOLS*/T6 r97is_linking_mandatory(void);
/*SYSTEM_TOOLS*/T6 r97is_install(void);
extern T0*oBC28install_memory;
extern T0*oBC97token_buffer;
extern int fBC97token_buffer;
/*SYSTEM_TOOLS*/T0* r97token_buffer(void);
/*SYSTEM_TOOLS*/T0* r97strip_path_or_default(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r97linker_command(T97* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r97plugin(T97* C,T0* a1,T0* a2,T333 a3);
/*SYSTEM_TOOLS*/T0* r97absolute_path(T333 a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r97strip_executable(T97* C);
/*SYSTEM_TOOLS*/void r97main_function_return_type_in(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T6 r97is_c_plus_plus_file_path(T0* a1);
/*SYSTEM_TOOLS*/void r97set_alternate_c_mode(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97environment_variable_substitution(T97* C,T0* a1,T0* a2);
extern int fBC97check_c_plus_plus;
/*SYSTEM_TOOLS*/void r97check_c_plus_plus(T97* C);
extern T0*oBC97compiler_list;
extern int fBC97compiler_list;
/*SYSTEM_TOOLS*/T0* r97compiler_list(void);
/*SYSTEM_TOOLS*/void r97append_if_not_already(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r97verify_system_name(T97* C);
/*SYSTEM_TOOLS*/void r97add_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r97bad_use_exit(T97* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T2 r97nb_errors(void);
/*SYSTEM_TOOLS*/T0* r97linker_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r97set_c_mode(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r97compiler_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r97set_system_name(T97* C,T0* a1);
extern int fBC97add_lib_math;
/*SYSTEM_TOOLS*/void r97add_lib_math(T97* C);
/*SYSTEM_TOOLS*/void r97subdirectory(T97* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T6 r97precompile_header_supported(T97* C);
extern int fBC97set_basic_directory_notation;
/*SYSTEM_TOOLS*/void r97set_basic_directory_notation(T97* C);
/*SYSTEM_TOOLS*/void r97sys_runtime(T97* C,T0* a1,T3 a2);
extern T0*oBC97make_suffix;
extern int fBC97make_suffix;
/*SYSTEM_TOOLS*/T0* r97make_suffix(T97* C);
extern T0*oBC97precompiled_header_suffix;
extern int fBC97precompiled_header_suffix;
/*SYSTEM_TOOLS*/T0* r97precompiled_header_suffix(T97* C);
/*SYSTEM_TOOLS*/T0* r97h_precompiler_command(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97system_name_in(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r97echo(void);
extern T0*oBC97external_lib_paths;
extern int fBC97external_lib_paths;
/*SYSTEM_TOOLS*/T0* r97external_lib_paths(void);
extern T0*oBC28tmp_path;
extern int fBC28tmp_path;
/*SYSTEM_TOOLS*/T0* r97tmp_path(void);
extern int fBC97add_lib_profile;
/*SYSTEM_TOOLS*/void r97add_lib_profile(T97* C);
/*SYSTEM_TOOLS*/void r97add_lib_math_do_it_again(T97* C);
extern int fBC97include_config_loadpaths;
/*SYSTEM_TOOLS*/void r97include_config_loadpaths(T97* C);
extern T6 oBC97Scoptions_exists;
extern int fBC97Scoptions_exists;
/*SYSTEM_TOOLS*/T6 r97Scoptions_exists(void);
/*SYSTEM_TOOLS*/void r97set_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r97add_smarteiffel_c_mode_options(T97* C);
/*SYSTEM_TOOLS*/void r97append_tokens(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r97add_x_suffix(T97* C,T0* a1);
extern T0*oBC97id_file_path;
extern int fBC97id_file_path;
/*SYSTEM_TOOLS*/T0* r97id_file_path(T97* C);
extern T0*oBC13io;
/*SYSTEM_TOOLS*/T0* r97c_compiler_command(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T2 r97extra_arg(T97* C,T0* a1,T2 a2,T0* a3);
/*SYSTEM_TOOLS*/void r97mandatory_sys_runtime(T97* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r97sys_runtime_(T97* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r97add_loadpath_file(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97read_loadpath_files(T97* C);
/*SYSTEM_TOOLS*/void r97add_config_loadpath_file(T97* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r97auto_init_plugins(T97* C);
/*SYSTEM_TOOLS*/void r97add_libraries_from_compiler_options(T97* C);
/*SYSTEM_TOOLS*/void r97add_executable_name(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r97environment(T97* C,T0* a1);
extern T0*oBC28tmp_file_read;
/*SYSTEM_TOOLS*/void r97set_automatic_system_name(T97* C);
/*SYSTEM_TOOLS*/void r97set_c_compiler(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97get_started(T97* C);
/*SYSTEM_TOOLS*/void r97file_path(T97* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r97loaded_plugin(T97* C,T0* a1,T0* a2);
extern T0*oBC97c_plus_plus_compiler_list;
extern int fBC97c_plus_plus_compiler_list;
/*SYSTEM_TOOLS*/T0* r97c_plus_plus_compiler_list(void);
extern int fBC97set_config;
/*SYSTEM_TOOLS*/void r97set_config(T97* C);
/*SYSTEM_TOOLS*/void r97set_default_c_mode(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97append_token(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r97show_compiler_list_then_exit(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97make(T97* C);
/*SYSTEM_TOOLS*/void r97main_function_exit_in(T97* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r97sas_c_compiler_options(T6 a1);
extern T0*oBC97x_suffix;
extern int fBC97x_suffix;
/*SYSTEM_TOOLS*/T0* r97x_suffix(T97* C);
/*SYSTEM_TOOLS*/void r97external_c_files_for_lcc_win32(T97* C,T0* a1);
extern T0*oBC97external_libs;
extern int fBC97external_libs;
/*SYSTEM_TOOLS*/T0* r97external_libs(void);
extern T0*oBC97system_list;
extern int fBC97system_list;
/*SYSTEM_TOOLS*/T0* r97system_list(void);
/*SYSTEM_TOOLS*/void r97add_external_lib_path(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97parent_directory(T97* C,T0* a1);
/*SYSTEM_TOOLS*/void r97add_external_lib(T97* C,T0* a1);
/*C_PLUGIN_FACTORY*/T851*create851(void);
/*C_PLUGIN_FACTORY*/T0* r851new(T333 a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r89a_parent_edge(T89* C,T6 a1);
extern T0*oBC89and_name;
extern int fBC89and_name;
/*EIFFEL_PARSER*/T0* r89and_name(void);
/*EIFFEL_PARSER*/T6 r89a_local_name2(T89* C);
/*EIFFEL_PARSER*/T6 r89a_local_name1(T89* C);
extern T0*oBC90buffer;
extern int fBC90buffer;
/*EIFFEL_PARSER*/T0* r89buffer(void);
/*EIFFEL_PARSER*/T6 r89a_instruction(T89* C);
/*EIFFEL_PARSER*/T0* r89parse_type_mark(T89* C);
/*EIFFEL_PARSER*/void r89a_function_call(T89* C);
/*EIFFEL_PARSER*/void r89a_new_export_list(T89* C);
/*EIFFEL_PARSER*/T6 r89a_conditional(T89* C);
/*EIFFEL_PARSER*/T0* r89connect_to_cecil(T89* C,T0* a1);
/*EIFFEL_PARSER*/T6 r89skip1(T89* C,T3 a1);
/*EIFFEL_PARSER*/T6 r89skip2(T89* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/T6 r89skip3(T89* C,T3 a1,T3 a2,T3 a3);
extern T0*oBC89not_name;
extern int fBC89not_name;
/*EIFFEL_PARSER*/T0* r89not_name(void);
/*EIFFEL_PARSER*/T6 r89a_index_clause(T89* C);
/*EIFFEL_PARSER*/T6 r89a_keyword_true(T89* C);
extern T0*oBC89minus_name;
extern int fBC89minus_name;
/*EIFFEL_PARSER*/T0* r89minus_name(void);
/*EIFFEL_PARSER*/T0* r89a_external(T89* C);
/*EIFFEL_PARSER*/void r89next_char(T89* C);
/*EIFFEL_PARSER*/T6 r89a_base_class_name_inside_client_list(T89* C);
/*EIFFEL_PARSER*/T0* r89a_external_specification(T89* C);
/*EIFFEL_PARSER*/T0* r89parse_feature_name(T89* C);
/*EIFFEL_PARSER*/T6 r89a_inspect(T89* C);
/*EIFFEL_PARSER*/T6 r89a_prefix(T89* C);
extern T0*oBC89implies_name;
extern int fBC89implies_name;
/*EIFFEL_PARSER*/T0* r89implies_name(void);
/*EIFFEL_PARSER*/void r89a_indexing(T89* C);
/*EIFFEL_PARSER*/T6 r89a_free_operator_usage(T89* C,T6 a1);
/*EIFFEL_PARSER*/T6 r89a_free_operator_definition(T89* C,T6 a1);
/*EIFFEL_PARSER*/T0* r89get_comment(T89* C);
/*EIFFEL_PARSER*/T6 r89a_keyword_false(T89* C);
/*EIFFEL_PARSER*/void r89integer_overflow_error(T89* C,T2 a1,T2 a2,T0* a3);
/*EIFFEL_PARSER*/T6 r89a_keyword_void(T89* C);
/*EIFFEL_PARSER*/T0* r89parse_c_name(T89* C);
extern T0*oBC89inline_agents;
extern int fBC89inline_agents;
/*EIFFEL_PARSER*/T0* r89inline_agents(void);
extern T6 oBC89no_static_simplify;
extern int fBC89no_static_simplify;
/*EIFFEL_PARSER*/T6 r89no_static_simplify(void);
/*EIFFEL_PARSER*/T6 r89a_rename_pair(T89* C);
/*EIFFEL_PARSER*/void r89error_handler_append_info_about_feature_name(void);
/*EIFFEL_PARSER*/void r89void_current_comparison_check_(T0* a1,T0* a2);
/*EIFFEL_PARSER*/void r89a_procedure_call(T89* C);
/*EIFFEL_PARSER*/T6 r89a_class_name(T89* C);
/*EIFFEL_PARSER*/T6 r89a_keyword_precursor(T89* C);
/*EIFFEL_PARSER*/T6 r89a_writable(T89* C);
/*EIFFEL_PARSER*/void r89void_current_comparison_check(T0* a1,T0* a2);
extern T0*oBC89a_assertion_buffer;
extern int fBC89a_assertion_buffer;
/*EIFFEL_PARSER*/T0* r89a_assertion_buffer(void);
extern T0*oBC89gt_name;
extern int fBC89gt_name;
/*EIFFEL_PARSER*/T0* r89gt_name(void);
/*EIFFEL_PARSER*/void r89inside_function_precursor_check(T89* C,T0* a1);
extern T0*oBC28or_else_name;
extern int fBC28or_else_name;
/*EIFFEL_PARSER*/T0* r89or_else_name(void);
/*EIFFEL_PARSER*/void r89no_void_after_elseif_check(T0* a1);
/*EIFFEL_PARSER*/T6 r89a_binary(T89* C,T333 a1);
extern T0*oBC90lcs;
extern int fBC90lcs;
/*EIFFEL_PARSER*/T0* r89lcs(void);
/*EIFFEL_PARSER*/T2 r89a_when_part(T89* C,T2 a1,T0* a2);
extern T0*oBC89unused_tmp_features;
extern int fBC89unused_tmp_features;
/*EIFFEL_PARSER*/T0* r89unused_tmp_features(void);
/*EIFFEL_PARSER*/void r89show_nb_errors(void);
/*EIFFEL_PARSER*/void r89a_feature_clause(T89* C);
/*EIFFEL_PARSER*/void r89unknown_external_language(T0* a1);
/*EIFFEL_PARSER*/T0* r89to_call(T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r89a_infix(T89* C);
/*EIFFEL_PARSER*/T6 r89a_keyword_result(T89* C);
extern T0*oBC89ge_name;
extern int fBC89ge_name;
/*EIFFEL_PARSER*/T0* r89ge_name(void);
/*EIFFEL_PARSER*/T6 r89an_allowed_expression_in_when_of_inspect(T89* C);
/*EIFFEL_PARSER*/T333 r89current_position(T89* C);
/*EIFFEL_PARSER*/T6 r89a_feature_name_list(T89* C);
/*EIFFEL_PARSER*/void r89a_r10(T89* C,T6 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC89muls_name;
extern int fBC89muls_name;
/*EIFFEL_PARSER*/T0* r89muls_name(void);
extern T0*oBC89sharp_muls_name;
extern int fBC89sharp_muls_name;
/*EIFFEL_PARSER*/T0* r89sharp_muls_name(void);
/*EIFFEL_PARSER*/void r89create_infix_prefix(T89* C,T6 a1,T2 a2,T2 a3);
/*EIFFEL_PARSER*/void r89show_nb_warnings(void);
/*EIFFEL_PARSER*/void r89a_base_class_name1(T89* C);
/*EIFFEL_PARSER*/T6 r89a_check(T89* C);
/*EIFFEL_PARSER*/T6 r89a_feature_name(T89* C);
/*EIFFEL_PARSER*/T6 r89a_character_constant(T89* C,T1 a1);
/*EIFFEL_PARSER*/T6 r89a_manifest_string(T89* C,T6 a1);
/*EIFFEL_PARSER*/T6 r89a_loop(T89* C);
/*EIFFEL_PARSER*/T6 r89a_index_value(T89* C);
/*EIFFEL_PARSER*/T0* r89a_precursor_type_mark(T89* C,T333 a1);
/*EIFFEL_PARSER*/T0* r89a_actuals(T89* C);
/*EIFFEL_PARSER*/T0* r89a_external_name(T89* C);
extern T0*oBC89pow_name;
extern int fBC89pow_name;
/*EIFFEL_PARSER*/T0* r89pow_name(void);
/*EIFFEL_PARSER*/T6 r89a_manifest_or_type_test(T89* C,T1 a1);
/*EIFFEL_PARSER*/T0* r89echo(void);
/*EIFFEL_PARSER*/void r89go_back_at(T89* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r89a_address_of(T89* C);
/*EIFFEL_PARSER*/T6 r89a_feature_declaration(T89* C);
/*EIFFEL_PARSER*/T6 r89a_formal_generic_type_mark(T89* C);
/*EIFFEL_PARSER*/T6 r89a_keyword_current(T89* C);
/*EIFFEL_PARSER*/T0* r89a_routine_body(T89* C);
/*EIFFEL_PARSER*/T2 r89nb_warnings(void);
/*EIFFEL_PARSER*/T6 r89a_static_type_mark(T89* C);
/*EIFFEL_PARSER*/T333 r89pos(T89* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T0* r89a_routine(T89* C);
/*EIFFEL_PARSER*/void r89a_class_declaration(T89* C);
/*EIFFEL_PARSER*/T6 r89a_expression(T89* C);
extern T0*oBC89slash_slash_name;
extern int fBC89slash_slash_name;
/*EIFFEL_PARSER*/T0* r89slash_slash_name(void);
/*EIFFEL_PARSER*/T0* r89mandatory_writable(T89* C);
extern T0*oBC28parser_buffer;
extern int fBC28parser_buffer;
/*EIFFEL_PARSER*/T0* r89parser_buffer(void);
/*EIFFEL_PARSER*/T6 r89a_e1(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e2(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e3(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e4(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e5(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e6(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e7(T89* C);
/*EIFFEL_PARSER*/void r89a_rename_list(T89* C);
/*EIFFEL_PARSER*/T0* r89a_clients(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e8(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e9(T89* C);
extern T0*oBC89faof;
extern int fBC89faof;
/*EIFFEL_PARSER*/T0* r89faof(void);
/*EIFFEL_PARSER*/T6 r89a_assignment_or_procedure_call(T89* C);
extern T0*oBC28mini_buffer;
/*EIFFEL_PARSER*/T6 r89a_c_inline_c(T89* C);
/*EIFFEL_PARSER*/void r89no_void_check(T0* a1,T0* a2);
/*EIFFEL_PARSER*/T6 r89a_c_inline_h(T89* C);
extern T0*oBC90unicode_string_buffer;
extern int fBC90unicode_string_buffer;
/*EIFFEL_PARSER*/T0* r89unicode_string_buffer(void);
/*EIFFEL_PARSER*/T6 r89a_keyword(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_parent_list(T89* C);
/*EIFFEL_PARSER*/T0* r89to_proc_call(T89* C,T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T0* r89analyse_class(T89* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/T0* r89a_then_compound(T89* C);
/*EIFFEL_PARSER*/T2 r89nb_errors(void);
/*EIFFEL_PARSER*/void r89a_r1(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r2(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r3(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r4(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r5(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r6(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r7(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_r8(T89* C,T0* a1);
/*EIFFEL_PARSER*/T6 r89a_retry(T89* C);
/*EIFFEL_PARSER*/void r89make(T89* C);
/*EIFFEL_PARSER*/void r89anchored_creation_check(T0* a1);
/*EIFFEL_PARSER*/T6 r89a_create_expression(T89* C);
extern T0*oBC89or_name;
extern int fBC89or_name;
/*EIFFEL_PARSER*/T0* r89or_name(void);
/*EIFFEL_PARSER*/T6 r89a_debug(T89* C);
/*EIFFEL_PARSER*/void r89err_exp(T333 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/T0* r89a_inline_agent(T89* C);
/*EIFFEL_PARSER*/void r89show_nb(T2 a1,T0* a2);
/*EIFFEL_PARSER*/void r89a_formal_arg_list(T89* C);
/*EIFFEL_PARSER*/T6 r89a_boolean_constant(T89* C);
/*EIFFEL_PARSER*/void r89a_creation_clause(T89* C,T333 a1);
/*EIFFEL_PARSER*/T0* r89id_provider(void);
extern T0*oBC89plus_name;
extern int fBC89plus_name;
/*EIFFEL_PARSER*/T0* r89plus_name(void);
/*EIFFEL_PARSER*/T6 r89a_ordinary_feature_name_or_local_name(T89* C);
extern T0*oBC89backslash_backslash_name;
extern int fBC89backslash_backslash_name;
/*EIFFEL_PARSER*/T0* r89backslash_backslash_name(void);
extern T0*oBC89sharp_plus_name;
extern int fBC89sharp_plus_name;
/*EIFFEL_PARSER*/T0* r89sharp_plus_name(void);
/*EIFFEL_PARSER*/T0* r89analyse_buffer(T89* C);
/*EIFFEL_PARSER*/T0* r89a_assertion(T89* C);
extern T0*oBC28omitted_client_list;
/*EIFFEL_PARSER*/T0* r89expression_with_comment(T89* C,T0* a1);
/*EIFFEL_PARSER*/void r89a_local_var_list(T89* C);
/*EIFFEL_PARSER*/T6 r89a_non_allowed_very_strange_identifier(T89* C);
/*EIFFEL_PARSER*/T6 r89a_old_creation(T89* C);
/*EIFFEL_PARSER*/T6 r89a_tag_mark(T89* C);
/*EIFFEL_PARSER*/T6 r89a_create_instruction(T89* C);
extern T0*oBC89xor_name;
extern int fBC89xor_name;
/*EIFFEL_PARSER*/T0* r89xor_name(void);
/*EIFFEL_PARSER*/T6 r89a_possibly_frozen_feature_name(T89* C);
extern T0*oBC89lt_name;
extern int fBC89lt_name;
/*EIFFEL_PARSER*/T0* r89lt_name(void);
/*EIFFEL_PARSER*/T6 r89parse_cecil_is_creation(T89* C);
extern T0*oBC89slash_name;
extern int fBC89slash_name;
/*EIFFEL_PARSER*/T0* r89slash_name(void);
/*EIFFEL_PARSER*/T6 r89a_base_class_name(T89* C);
extern T0*oBC89sharp_minus_name;
extern int fBC89sharp_minus_name;
/*EIFFEL_PARSER*/T0* r89sharp_minus_name(void);
extern T0*oBC28and_then_name;
extern int fBC28and_then_name;
/*EIFFEL_PARSER*/T0* r89and_then_name(void);
/*EIFFEL_PARSER*/T0* r89a_compound1(T89* C);
/*EIFFEL_PARSER*/T0* r89a_compound2(T89* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/void r89a_formal_generic_list(T89* C);
/*EIFFEL_PARSER*/void r89disconnect(T89* C);
extern T0*oBC89le_name;
extern int fBC89le_name;
/*EIFFEL_PARSER*/T0* r89le_name(void);
/*EIFFEL_PARSER*/T6 r89a_type_mark(T89* C);
/*EIFFEL_PARSER*/T6 r89a_e10(T89* C);
/*EIFFEL_PARSER*/void r89manifest_just_after_a_dot(T89* C,T3 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/void r89update_last_manifest_string(T89* C,T333 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*EIFFEL_PARSER*/void r89unused_once_warning_check(T89* C);
/*EIFFEL_PARSER*/T6 r89skip1unless2(T89* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/void r89valid_parent_edge_type_check(T0* a1);
/*EIFFEL_PARSER*/void r89skip_comments(T89* C);
/*EIFFEL_PARSER*/void r89just_after_a_dot(T89* C,T6 a1,T0* a2);
/*EIFFEL_PARSER*/T6 r89a_unary(T89* C);
/*EIFFEL_PARSER*/T6 r89a_argument(T89* C);
/*EIFFEL_PARSER*/T0* r89static_simplify(T0* a1);
/*ECHO*/void r113make(T113* C);
/*ECHO*/void r113tfr_connect_or_exit(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113before_exit_close(T113* C);
/*ECHO*/void r113w_put_string(T113* C,T0* a1);
/*ECHO*/void r113file_renaming(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113tfr_connect(T113* C,T0* a1,T0* a2);
extern T0*oBC13std_output;
extern int fBC13std_output;
/*ECHO*/T0* r113std_output(void);
/*ECHO*/void r113print_count(T113* C,T0* a1,T2 a2);
/*ECHO*/T0* r113getenv(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113tfw_connect(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113w_put_character(T113* C,T3 a1);
/*ECHO*/void r113put_new_line(T113* C);
/*ECHO*/void r113put_string(T113* C,T0* a1);
/*ECHO*/T0* r113system_tools(void);
/*ECHO*/void r113put_real_format(T113* C,T5 a1,T2 a2);
/*ECHO*/void r113put_integer(T113* C,T2 a1);
extern T0*oBC13std_error;
/*ECHO*/void r113file_removing(T113* C,T0* a1);
/*ECHO*/void r113w_put_integer(T113* C,T2 a1);
/*ECHO*/void r113redirect_output_on(T113* C,T0* a1);
/*ECHO*/void r113put_character(T113* C,T3 a1);
/*ACE*/T333 r267current_position(T267* C);
/*ACE*/T0* r267cecil_pool(void);
extern T0*oBC267clusters_;
extern int fBC267clusters_;
/*ACE*/T0* r267clusters_(void);
/*ACE*/T0* r267cpp(void);
/*ACE*/void r267go_back_at(T267* C,T2 a1,T2 a2);
/*ACE*/T6 r267no_check(T267* C);
/*ACE*/T2 r267class_text_count(void);
extern T0*oBC267root_class_names;
extern int fBC267root_class_names;
/*ACE*/T0* r267root_class_names(void);
/*ACE*/T6 r267all_check(T267* C);
/*ACE*/T0* r267buffer(void);
/*ACE*/T0* r267a_string(T267* C);
/*ACE*/T6 r267a_manifest_string(T267* C,T6 a1);
/*ACE*/void r267fatal_error_in(T267* C,T0* a1);
/*ACE*/void r267parse_include(T267* C);
/*ACE*/void r267set_highest_encountered_level(T267* C,T2 a1);
/*ACE*/T0* r267a_identifier(T267* C);
/*ACE*/T0* r267class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T0* r267a_debug_key(T267* C);
/*ACE*/T0* r267a_split_key(T267* C);
/*ACE*/T6 r267a_cluster_clause_list(T267* C);
/*ACE*/void r267add_loadpath(T0* a1,T0* a2,T2 a3,T6 a4);
/*ACE*/T6 r267a_keyword(T267* C,T0* a1);
/*ACE*/T0* r267a_cecil_file(T267* C);
/*ACE*/void r267skip_comments(T267* C);
/*ACE*/void r267set_root_class_name_using(T0* a1);
extern T0*oBC267pov_classes;
extern int fBC267pov_classes;
/*ACE*/T0* r267pov_classes(void);
/*ACE*/T6 r267a_option_in_cluster_properties(T267* C);
/*ACE*/T6 r267default_debug(T267* C,T0* a1);
extern T0*oBC267no_pov_classes;
extern int fBC267no_pov_classes;
/*ACE*/T0* r267no_pov_classes(void);
/*ACE*/void r267may_expand_var(T267* C);
/*ACE*/T0* r267parser_buffer(void);
/*ACE*/void r267new_universe_entry(T2 a1,T0* a2,T0* a3);
/*ACE*/void r267a_generate(T267* C);
/*ACE*/T0* r267root_class_name(void);
/*ACE*/T6 r267require_check(T267* C);
/*ACE*/void r267set_default_trace(T267* C);
/*ACE*/void r267set_debug_check(T267* C);
/*ACE*/T0* r267echo(void);
/*ACE*/T6 r267skip1(T267* C,T3 a1);
/*ACE*/void r267view_in(T267* C,T0* a1);
/*ACE*/T0* r267class_name_using(T0* a1);
/*ACE*/T0* r267system_tools(void);
/*ACE*/void r267next_char(T267* C);
extern T0*oBC28is_launcher_memory;
/*ACE*/T0* r267cluster_of(T0* a1,T6 a2);
/*ACE*/T0* r267lcs(void);
/*ACE*/T6 r267trace_of(T267* C,T0* a1);
/*ACE*/T2 r267a_assertion_level(T267* C);
/*ACE*/T6 r267is_debug_checked(T267* C,T0* a1,T0* a2);
/*ACE*/T6 r267a_yes_no_all(T267* C);
/*ACE*/T0* r267find_class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T2 r267cluster_count(void);
/*ACE*/void r267add_default_debug_key(T267* C,T0* a1);
/*ACE*/T6 r267is_launcher(void);
/*ACE*/T0* r267level_name(T2 a1);
/*ACE*/void r267analyse_ace_file(T267* C,T0* a1);
/*ACE*/void r267set_no_split(T267* C,T6 a1);
/*ACE*/void r267set_split(T267* C,T0* a1);
/*ACE*/void r267a_external(T267* C);
/*ACE*/T0* r267best_cluster_of(T0* a1,T0* a2,T6 a3,T0* a4);
/*ACE*/T6 r267ensure_check(T267* C);
/*ACE*/T0* r267unicode_string_buffer(void);
/*ACE*/void r267a_cluster_mark(T267* C);
extern T0*oBC267universe;
extern int fBC267universe;
/*ACE*/T0* r267universe(void);
extern T0*oBC267distances_;
extern int fBC267distances_;
/*ACE*/T0* r267distances_(void);
/*ACE*/void r267set_default_level(T267* C);
/*ACE*/void r267set_command_line_debug(T267* C);
/*ACE*/T0* r267eiffel_parser(void);
/*ACE*/void r267get_started(T267* C);
/*ACE*/T6 r267a_system_level_defaults(T267* C);
/*ACE*/void r267set_default_c_mode(T267* C);
/*ACE*/void r267a_cluster_properties(T267* C);
/*ACE*/T6 r267a_class_name(T267* C);
extern T0*oBC267new_clusters;
extern int fBC267new_clusters;
/*ACE*/T0* r267new_clusters(void);
/*ACE*/void r267command_line_parsed(T267* C,T0* a1);
/*ACE*/T0* r267root_procedure_name(T267* C);
/*ACE*/T333 r267pos(T2 a1,T2 a2);
/*ACE*/T6 r267match_debug_keys(T0* a1,T0* a2);
/*ACE*/T2 r267assertion_level_of(T267* C,T0* a1);
/*ACE*/T6 r267sedb(T267* C);
/*ACE*/T6 r267a_cluster_clause(T267* C);
typedef struct _se_agenT101f101l3967c31 se_agenT101f101l3967c31;
struct _se_agenT101f101l3967c31{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l3967c31*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l3967c31*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT101f101l3967c31(T0* closed_C,T0* closed_a1);
void gc_mark_agenT101f101l3967c31(se_agenT101f101l3967c31*u);
typedef struct _se_agenT101f101l3956c28 se_agenT101f101l3956c28;
struct _se_agenT101f101l3956c28{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l3956c28*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l3956c28*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT101f101l3956c28(T0* closed_C);
void gc_mark_agenT101f101l3956c28(se_agenT101f101l3956c28*u);
typedef struct _se_agenT101f101l3727c47 se_agenT101f101l3727c47;
struct _se_agenT101f101l3727c47{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l3727c47*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l3727c47*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT101f101l3727c47(T0* closed_C);
void gc_mark_agenT101f101l3727c47(se_agenT101f101l3727c47*u);
typedef struct _se_agenT101f101l608c22 se_agenT101f101l608c22;
struct _se_agenT101f101l608c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l608c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l608c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT101f101l608c22(void);
void gc_mark_agenT101f101l608c22(se_agenT101f101l608c22*u);
typedef struct _se_agenT101f101l664c22 se_agenT101f101l664c22;
struct _se_agenT101f101l664c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l664c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l664c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT101f101l664c22(void);
void gc_mark_agenT101f101l664c22(se_agenT101f101l664c22*u);
typedef struct _se_agenT101f101l3746c55 se_agenT101f101l3746c55;
struct _se_agenT101f101l3746c55{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l3746c55*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l3746c55*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a2;};
/*agent creation*/T0*agenT101f101l3746c55(T0* closed_C,T0* closed_a2);
void gc_mark_agenT101f101l3746c55(se_agenT101f101l3746c55*u);
typedef struct _se_agenT101f101l3539c39 se_agenT101f101l3539c39;
struct _se_agenT101f101l3539c39{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l3539c39*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l3539c39*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT101f101l3539c39(T0* closed_C);
void gc_mark_agenT101f101l3539c39(se_agenT101f101l3539c39*u);
typedef struct _se_agenT101f101l3456c38 se_agenT101f101l3456c38;
struct _se_agenT101f101l3456c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT101f101l3456c38*,T0*,T0*);
void(*gc_mark_agent_mold)(se_agenT101f101l3456c38*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT101f101l3456c38(T0* closed_C);
void gc_mark_agenT101f101l3456c38(se_agenT101f101l3456c38*u);
/*C_PRETTY_PRINTER*/T0* r101cecil_pool(void);
extern T0*oBC101c_code;
extern int fBC101c_code;
/*C_PRETTY_PRINTER*/T0* r101c_code(void);
extern T0*oBC101defined_agent_creation;
extern int fBC101defined_agent_creation;
/*C_PRETTY_PRINTER*/T0* r101defined_agent_creation(void);
/*C_PRETTY_PRINTER*/T0* r101stack_top(T101* C);
/*C_PRETTY_PRINTER*/void r101put_target_as_target(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101c_plus_plus_register(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101print_argument(T2 a1);
/*C_PRETTY_PRINTER*/T6 r101manifest_string_trace(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T2 r101class_invariant_call_opening(T101* C,T0* a1,T6 a2);
/*C_PRETTY_PRINTER*/void r101target_position_in_error_handler(T101* C);
/*C_PRETTY_PRINTER*/void r101put_arguments(T101* C,T2 a1);
/*C_PRETTY_PRINTER*/void r101c_test_o_flag(T0* a1);
/*C_PRETTY_PRINTER*/void r101print_local(T0* a1);
/*C_PRETTY_PRINTER*/void r101initialize_size_table(T101* C);
/*C_PRETTY_PRINTER*/void r101split_c_file_now(T101* C,T2 a1);
/*C_PRETTY_PRINTER*/void r101put_monomorphic_or_void_call(T101* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r101inspect_local_compile_to_c(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101c_define_assignment_test_functions(T101* C);
/*C_PRETTY_PRINTER*/T0* r101reserve_context(T101* C,T2 a1);
/*C_PRETTY_PRINTER*/T0* r101run_features(void);
/*C_PRETTY_PRINTER*/T6 r101target_cannot_be_dropped(T101* C);
/*C_PRETTY_PRINTER*/void r101get_started(T101* C);
extern T0*oBC101path_make;
extern int fBC101path_make;
/*C_PRETTY_PRINTER*/T0* r101path_make(void);
/*C_PRETTY_PRINTER*/void r101c_test_o_flag_recursion(T0* a1);
/*C_PRETTY_PRINTER*/T6 r101define_agent_launcher_heading(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101se_evobt(T101* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r101cpp(void);
/*C_PRETTY_PRINTER*/void r101compile_routines(T101* C);
/*C_PRETTY_PRINTER*/void r101set_dump_stack_top_for(T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r101put_c_inline_h(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/T0* r101tmp_path(void);
/*C_PRETTY_PRINTER*/void r101put_file(T101* C,T0* a1,T0* a2);
extern T0*oBC28live_type_extra_collectors;
extern int fBC28live_type_extra_collectors;
/*C_PRETTY_PRINTER*/T0* r101live_type_extra_collectors(void);
/*C_PRETTY_PRINTER*/void r101cecil_define_users_for_file(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101initialize_generating_type(void);
/*C_PRETTY_PRINTER*/T0* r101agent_switches(void);
/*C_PRETTY_PRINTER*/void r101stop_recursive_assertion_opening(T6 a1);
/*C_PRETTY_PRINTER*/void r101add_first_include(T0* a1);
/*C_PRETTY_PRINTER*/void r101cecil_define_users_for_entry(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101put_target_generating_type(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101class_invariant_call_closing(T2 a1,T6 a2);
extern T0*oBC102context_stack;
extern int fBC102context_stack;
/*C_PRETTY_PRINTER*/T0* r101context_stack(void);
/*C_PRETTY_PRINTER*/void r101current_class_invariant(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101push_create_expression(T101* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r101add_include(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101recompilation_comment(T0* a1);
/*C_PRETTY_PRINTER*/void r101macro_def(T101* C,T0* a1,T2 a2);
/*C_PRETTY_PRINTER*/void r101sys_runtime_h_and_c(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101se_ms_c_call_in(T0* a1,T0* a2);
extern T0*oBC101pending_c_function_body;
extern int fBC101pending_c_function_body;
/*C_PRETTY_PRINTER*/T0* r101pending_c_function_body(void);
/*C_PRETTY_PRINTER*/void r101start_profile(T0* a1);
/*C_PRETTY_PRINTER*/void r101c_register(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101prepare_c_function(T101* C);
/*C_PRETTY_PRINTER*/void r101c_frame_descriptor_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101va_type_in(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r101class_invariants(void);
/*C_PRETTY_PRINTER*/void r101initialize_path_table(T101* C);
/*C_PRETTY_PRINTER*/void r101define_initialize_eiffel_runtime(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101c_test_o_flag_introspect(T0* a1);
/*C_PRETTY_PRINTER*/void r101initialize_generator(void);
/*C_PRETTY_PRINTER*/void r101inspect_local_type(T0* a1);
/*C_PRETTY_PRINTER*/void r101begin_c_file(T101* C);
/*C_PRETTY_PRINTER*/void r101stop_recursive_assertion_closing(T6 a1);
/*C_PRETTY_PRINTER*/void r101push_inside_some_wrapper(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101right_hand_side_can_only_be_void(void);
/*C_PRETTY_PRINTER*/void r101check_assertion(T101* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/T0* r101live_type_map(void);
/*C_PRETTY_PRINTER*/void r101put_target_as_value(T101* C);
/*C_PRETTY_PRINTER*/void r101c_define1_manifest_string_pool(T101* C);
/*C_PRETTY_PRINTER*/void r101put_error0(T0* a1);
/*C_PRETTY_PRINTER*/void r101end_c_file(void);
/*C_PRETTY_PRINTER*/void r101begin_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T6 r101arguments_cannot_be_dropped(T101* C);
/*C_PRETTY_PRINTER*/void r101add_extra_collectors(T101* C);
extern T0*oBC101internal_c_local_stamps_stack;
extern int fBC101internal_c_local_stamps_stack;
/*C_PRETTY_PRINTER*/T0* r101internal_c_local_stamps_stack(void);
/*C_PRETTY_PRINTER*/void r101connect_cecil_out_h(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101customize_runtime(T101* C);
/*C_PRETTY_PRINTER*/void r101really_define_c_main(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101push_direct(T101* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC101pending_c_function_signature;
extern int fBC101pending_c_function_signature;
/*C_PRETTY_PRINTER*/T0* r101pending_c_function_signature(void);
/*C_PRETTY_PRINTER*/void r101cecil_define(T101* C);
/*C_PRETTY_PRINTER*/T6 r101once_flag(T101* C,T0* a1);
extern T0*oBC101internal_c_local_list;
/*C_PRETTY_PRINTER*/void r101string_to_c_code(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101show_profile(void);
/*C_PRETTY_PRINTER*/void r101common_put_target(T101* C);
/*C_PRETTY_PRINTER*/void r101free_context(T101* C,T0* a1);
extern T0*oBC101out_make;
extern int fBC101out_make;
/*C_PRETTY_PRINTER*/T0* r101out_make(void);
extern T0*oBC101inspect_local_stack;
extern int fBC101inspect_local_stack;
/*C_PRETTY_PRINTER*/T0* r101inspect_local_stack(void);
/*C_PRETTY_PRINTER*/void r101put_position(T333 a1);
/*C_PRETTY_PRINTER*/void r101write_out_h_buffer(T101* C);
/*C_PRETTY_PRINTER*/void r101incr_real_procedure_count(T101* C);
/*C_PRETTY_PRINTER*/void r101echo_information(T101* C);
/*C_PRETTY_PRINTER*/void r101c_code_for_precomputable_routines(T101* C);
/*C_PRETTY_PRINTER*/void r101variant_check(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r101echo(void);
/*C_PRETTY_PRINTER*/void r101write_out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r101c_define_manifest_generic_functions(T101* C);
extern T0*oBC28manifest_string_pool;
/*C_PRETTY_PRINTER*/T6 r101use_c_function_call_for_attribute_read(T101* C);
/*C_PRETTY_PRINTER*/void r101put_ith_argument(T101* C,T2 a1);
/*C_PRETTY_PRINTER*/void r101add_include_on(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101push_create_instruction(T101* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r101pop(T101* C);
/*C_PRETTY_PRINTER*/void r101se_string(T0* a1);
/*C_PRETTY_PRINTER*/void r101put_trace_switch(T101* C);
/*C_PRETTY_PRINTER*/void r101c_code_for_precomputable_routine(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101external_prototype_in(T101* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r101pending_c_function_lock_local(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101args_compile_to_c_ith(T101* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*C_PRETTY_PRINTER*/void r101define_main(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101incr_procedure_count(T101* C);
extern T0*oBC28agent_pool;
/*C_PRETTY_PRINTER*/T6 r101cannot_drop_all(T101* C);
/*C_PRETTY_PRINTER*/void r101push_precursor(T101* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r101agent_pool_switch_in(T101* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r101c_define_o_flag(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101incr_real_function_count(T101* C);
/*C_PRETTY_PRINTER*/void r101put_object_size(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101start_profile_class_invariant(T0* a1);
extern T0*oBC101out_c_buffer;
extern int fBC101out_c_buffer;
/*C_PRETTY_PRINTER*/T0* r101out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r101put_direct(T101* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC101c_frame_descriptor_locals;
extern int fBC101c_frame_descriptor_locals;
/*C_PRETTY_PRINTER*/T0* r101c_frame_descriptor_locals(void);
/*C_PRETTY_PRINTER*/void r101c_define_for_native_array(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101c_pre_compute_once_function(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101incr_function_count(T101* C);
/*C_PRETTY_PRINTER*/void r101put_banner(T0* a1);
/*C_PRETTY_PRINTER*/void r101put_c_file(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101c_define_o_result_for(T101* C,T0* a1);
extern T0*oBC101out_h_buffer;
extern int fBC101out_h_buffer;
/*C_PRETTY_PRINTER*/T0* r101out_h_buffer(void);
/*C_PRETTY_PRINTER*/T2 r101nb_errors(void);
/*C_PRETTY_PRINTER*/void r101stack_overflow(T101* C);
/*C_PRETTY_PRINTER*/void r101h_connect(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101compile(T101* C);
/*C_PRETTY_PRINTER*/void r101customize_agent_pool_runtime_1(T101* C);
/*C_PRETTY_PRINTER*/void r101customize_agent_pool_runtime_2(T101* C);
/*C_PRETTY_PRINTER*/void r101c_declare_local(T101* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r101character_to_c_code(T3 a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101initialize_path_table_of(T0* a1);
/*C_PRETTY_PRINTER*/void r101native_array_to_c_code(T2 a1,T9 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r101c_call_initialize_manifest_strings(void);
/*C_PRETTY_PRINTER*/void r101se_ums_c_call_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101start_profile_agent_switch(T0* a1);
/*C_PRETTY_PRINTER*/void r101make(T101* C);
/*C_PRETTY_PRINTER*/void r101array_access(T3 a1,T2 a2);
/*C_PRETTY_PRINTER*/void r101write_extern_2(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101write_extern_1(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101write_extern_0(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101stack_push(T101* C,T2 a1);
/*C_PRETTY_PRINTER*/void r101common_body_for_se_string_and_se_ms(T101* C,T6 a1);
/*C_PRETTY_PRINTER*/T0* r101out_c(void);
/*C_PRETTY_PRINTER*/void r101write_make_file(T101* C);
/*C_PRETTY_PRINTER*/void r101start_profile_agent_creation(T0* a1);
/*C_PRETTY_PRINTER*/void r101define_extern_tables(T101* C);
/*C_PRETTY_PRINTER*/void r101c_define_for_user_generic(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101start_assignment(T101* C);
/*C_PRETTY_PRINTER*/T0* r101agent_creations(void);
/*C_PRETTY_PRINTER*/T0* r101id_provider(void);
/*C_PRETTY_PRINTER*/T0* r101system_tools(void);
/*C_PRETTY_PRINTER*/void r101prepare_introspection(T101* C);
/*C_PRETTY_PRINTER*/T0* r101need_invariant(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101initialize_profile(void);
/*C_PRETTY_PRINTER*/void r101put_position_comment(T333 a1);
/*C_PRETTY_PRINTER*/void r101inside_twin(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101c_declare_locals(T101* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r101set_live_type(T0* a1);
extern T0*oBC28once_routine_pool;
/*C_PRETTY_PRINTER*/void r101include_register(T101* C,T333 a1,T0* a2);
/*C_PRETTY_PRINTER*/T6 r101c_plus_plus_registered(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101define_agent_launcher_args(T101* C,T0* a1);
extern T0*oBC28assignment_test_pool;
/*C_PRETTY_PRINTER*/void r101initialize_generator_of(T0* a1);
/*C_PRETTY_PRINTER*/void r101put_target_generator(T101* C,T0* a1);
extern T0*oBC101c_inline_h_mem;
extern int fBC101c_inline_h_mem;
/*C_PRETTY_PRINTER*/T0* r101c_inline_h_mem(void);
/*C_PRETTY_PRINTER*/void r101c_variables_for_precomputable_routines(T101* C);
/*C_PRETTY_PRINTER*/void r101c_define_manifest_generic_for(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101dump_pending_c_function(T101* C,T6 a1);
extern T0*oBC101tmp_string;
extern int fBC101tmp_string;
/*C_PRETTY_PRINTER*/T0* r101tmp_string(void);
/*C_PRETTY_PRINTER*/void r101c_plus_plus_definitions(T101* C);
/*C_PRETTY_PRINTER*/void r101c_define_assignment_test_for(T101* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r101put_position_comment_on(T0* a1,T333 a2);
/*C_PRETTY_PRINTER*/void r101c_define2_manifest_string_pool(T101* C);
extern T0*oBC28pretty_printer;
/*C_PRETTY_PRINTER*/void r101write_extern_array_1(T101* C,T0* a1,T2 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r101write_extern_array_2(T101* C,T0* a1,T2 a2);
extern T0*oBC28manifest_generic_pool;
extern T0*oBC28exceptions_handler;
/*C_PRETTY_PRINTER*/void r101put_h_file(T101* C,T0* a1);
/*C_PRETTY_PRINTER*/void r101put_position_in_ds(T333 a1);
extern T0*oBC101path_c;
extern int fBC101path_c;
/*C_PRETTY_PRINTER*/T0* r101path_c(void);
/*C_PRETTY_PRINTER*/void r101end_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T0* r101new_context(T2 a1);
extern T0*oBC101path_h;
extern int fBC101path_h;
/*C_PRETTY_PRINTER*/T0* r101path_h(void);
/*C_PRETTY_PRINTER*/void r101put_position_comment_in(T0* a1,T333 a2);
/*C_PRETTY_PRINTER*/void r101put_sedb_breakpoint(T101* C);
/*C_PRETTY_PRINTER*/void r101c_define_o_result(T101* C,T0* a1);
extern T0*oBC101c_frame_descriptor_format;
extern int fBC101c_frame_descriptor_format;
/*C_PRETTY_PRINTER*/T0* r101c_frame_descriptor_format(void);
/*C_PRETTY_PRINTER*/void r101do_write_make_file(T101* C);
typedef struct _se_agenT96f96l345c38 se_agenT96f96l345c38;
struct _se_agenT96f96l345c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT96f96l345c38*,T0*);
void(*gc_mark_agent_mold)(se_agenT96f96l345c38*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT96f96l345c38(void);
void gc_mark_agenT96f96l345c38(se_agenT96f96l345c38*u);
/*SMART_EIFFEL*/void r96polymorphic_procedure_call_count_increment(T96* C,T2 a1);
/*SMART_EIFFEL*/T0* r96old_list_stack_pop(void);
/*SMART_EIFFEL*/void r96id_extra_information(T0* a1,T0* a2,T0* a3);
extern T0*oBC96old_list_stack;
extern int fBC96old_list_stack;
/*SMART_EIFFEL*/T0* r96old_list_stack(void);
/*SMART_EIFFEL*/T0* r96type_real_32(T96* C);
/*SMART_EIFFEL*/T0* r96feature_stamp(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r96cecil_pool(void);
/*SMART_EIFFEL*/void r96register_class_invariant(T96* C,T0* a1);
/*SMART_EIFFEL*/void r96inline_dynamic_dispatch(T96* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r96loaded_class_text(T0* a1);
/*SMART_EIFFEL*/T6 r96is_at_run_time(T0* a1);
/*SMART_EIFFEL*/T0* r96long_type_name(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r96cluster_named(T0* a1);
/*SMART_EIFFEL*/T0* r96type_string(T96* C);
/*SMART_EIFFEL*/T0* r96type_natural_16(T96* C);
/*SMART_EIFFEL*/T0* r96context_feature(void);
/*SMART_EIFFEL*/T0* r96type_natural_32(T96* C);
/*SMART_EIFFEL*/void r96sort_live_type_map(T96* C);
/*SMART_EIFFEL*/void r96very_last_information(void);
/*SMART_EIFFEL*/T2 r96class_text_count(void);
/*SMART_EIFFEL*/T0* r96type_natural_64(T96* C);
/*SMART_EIFFEL*/T0* r96get_type(T0* a1);
/*SMART_EIFFEL*/T0* r96type_internals_handler_if_exists(void);
/*SMART_EIFFEL*/void r96update_polymorphic_distribution(T96* C,T2 a1);
/*SMART_EIFFEL*/void r96expanded_target_function_call_count_increment(T96* C);
/*SMART_EIFFEL*/void r96expanded_target_procedure_call_count_increment(T96* C);
extern T0*oBC96copyright;
extern int fBC96copyright;
/*SMART_EIFFEL*/T0* r96copyright(void);
/*SMART_EIFFEL*/void r96register_run_feature(T96* C,T0* a1);
/*SMART_EIFFEL*/T0* r96create_type(T0* a1);
/*SMART_EIFFEL*/T0* r96type_natural_8(T96* C);
/*SMART_EIFFEL*/T0* r96get_inline_memo(void);
/*SMART_EIFFEL*/void r96parse_include(T0* a1);
/*SMART_EIFFEL*/void r96void_target_procedure_call_count_increment(T96* C);
/*SMART_EIFFEL*/void r96echo_magic_count(T96* C,T0* a1);
/*SMART_EIFFEL*/T0* r96get_type_for_non_generic(T0* a1);
extern T0*oBC96type_dictionary;
extern int fBC96type_dictionary;
/*SMART_EIFFEL*/T0* r96type_dictionary(void);
/*SMART_EIFFEL*/void r96register_old(T0* a1);
/*SMART_EIFFEL*/void r96simplify(T96* C);
/*SMART_EIFFEL*/void r96collect_se_atexit(T96* C,T0* a1);
/*SMART_EIFFEL*/T0* r96type_integer_16(T96* C);
/*SMART_EIFFEL*/T0* r96type_native_array_character(T96* C);
/*SMART_EIFFEL*/T0* r96class_text(T0* a1,T6 a2);
/*SMART_EIFFEL*/T0* r96type_integer_32(T96* C);
extern T0*oBC28se_atexit_name;
extern int fBC28se_atexit_name;
/*SMART_EIFFEL*/T0* r96se_atexit_name(void);
extern T0*oBC96agent_creation_error_trap;
extern int fBC96agent_creation_error_trap;
/*SMART_EIFFEL*/T0* r96agent_creation_error_trap(void);
/*SMART_EIFFEL*/T2 r96nb_errors(void);
extern T0*oBC96manifest_creation_name;
extern int fBC96manifest_creation_name;
/*SMART_EIFFEL*/T0* r96manifest_creation_name(T96* C);
/*SMART_EIFFEL*/T0* r96type_integer_64(T96* C);
/*SMART_EIFFEL*/T0* r96parser_buffer(void);
/*SMART_EIFFEL*/void r96polymorphic_function_call_count_increment(T96* C,T2 a1);
/*SMART_EIFFEL*/void r96register_agent_switch(T96* C,T0* a1);
/*SMART_EIFFEL*/T0* r96type_pointer(T96* C);
/*SMART_EIFFEL*/void r96collect_precomputable(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r96analyze_class(T0* a1,T0* a2);
/*SMART_EIFFEL*/void r96collect_external_function(T0* a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r96collect_local_expanded(T0* a1);
/*SMART_EIFFEL*/void r96monomorphic_function_call_count_increment(T96* C);
/*SMART_EIFFEL*/void r96register_type(T0* a1);
/*SMART_EIFFEL*/T0* r96echo(void);
/*SMART_EIFFEL*/void r96tuple_class_not_found_fatal_error(T0* a1);
/*SMART_EIFFEL*/void r96do_one_collect_cycle(T96* C);
/*SMART_EIFFEL*/void r96customize_runtime(void);
/*SMART_EIFFEL*/void r96simplify_and_optimize(T96* C,T0* a1,T0* a2);
extern T0*oBC96collected_external_functions;
extern int fBC96collected_external_functions;
/*SMART_EIFFEL*/T0* r96collected_external_functions(void);
/*SMART_EIFFEL*/T0* r96cluster_of(T0* a1,T6 a2);
extern T0*oBC96free_inline_memo;
extern int fBC96free_inline_memo;
/*SMART_EIFFEL*/T0* r96free_inline_memo(void);
/*SMART_EIFFEL*/void r96vffd7_fatal_error(T333 a1);
/*SMART_EIFFEL*/void r96covariance_check(T333 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r96argument_count_check(T0* a1,T333 a2,T0* a3,T0* a4);
/*SMART_EIFFEL*/T0* r96collect(T0* a1,T0* a2,T6 a3);
/*SMART_EIFFEL*/T0* r96type_unicode_string(T96* C);
/*SMART_EIFFEL*/T6 r96is_ready(void);
/*SMART_EIFFEL*/T6 r96is_tagged(T96* C,T0* a1);
extern T0*oBC28introspection_handler;
/*SMART_EIFFEL*/void r96register_agent_creation(T96* C,T0* a1);
/*SMART_EIFFEL*/void r96collect_deep_features(T96* C);
extern T0*oBC28feature_accumulator;
extern int fBC28feature_accumulator;
/*SMART_EIFFEL*/T0* r96feature_accumulator(void);
/*SMART_EIFFEL*/void r96front_end(T96* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r96type_any(T96* C);
extern T0*oBC96status;
/*SMART_EIFFEL*/T0* r96type_integer_8(T96* C);
/*SMART_EIFFEL*/void r96collect_generic(T0* a1);
/*SMART_EIFFEL*/void r96register_plug_in(T0* a1);
/*SMART_EIFFEL*/void r96monomorphic_procedure_call_count_increment(T96* C);
/*SMART_EIFFEL*/void r96unknown_feature_fatal_error(T0* a1,T0* a2,T0* a3);
extern T0*oBC96memory_dispose_stamp;
extern int fBC96memory_dispose_stamp;
/*SMART_EIFFEL*/T0* r96memory_dispose_stamp(void);
/*SMART_EIFFEL*/T0* r96type_boolean(T96* C);
/*SMART_EIFFEL*/void r96compile(T96* C,T0* a1);
extern T0*oBC96collected_plug_in;
extern int fBC96collected_plug_in;
/*SMART_EIFFEL*/T0* r96collected_plug_in(void);
/*SMART_EIFFEL*/void r96clear_agent_creation_error_trap(T0* a1);
extern T0*oBC96context_feature_stack;
extern int fBC96context_feature_stack;
/*SMART_EIFFEL*/T0* r96context_feature_stack(void);
/*SMART_EIFFEL*/T0* r96eiffel_parser(void);
/*SMART_EIFFEL*/void r96collect_from_root(T96* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/void r96collect_external(T0* a1);
extern T0*oBC96code_accumulator;
extern int fBC96code_accumulator;
/*SMART_EIFFEL*/T0* r96code_accumulator(void);
/*SMART_EIFFEL*/T0* r96type_real_extended(T96* C);
/*SMART_EIFFEL*/void r96void_target_function_call_count_increment(T96* C);
/*SMART_EIFFEL*/void r96echo_polymorphic_inspect_distribution(T96* C,T0* a1);
/*SMART_EIFFEL*/void r96safety_check(T96* C);
extern int fBC96initialize_any_tuple;
/*SMART_EIFFEL*/void r96initialize_any_tuple(void);
/*SMART_EIFFEL*/T6 r96try_agent_creation_error_trap(T0* a1);
/*SMART_EIFFEL*/T0* r96type_character(T96* C);
/*SMART_EIFFEL*/void r96magic_count_increment(T96* C);
/*SMART_EIFFEL*/void r96pop_context(T0* a1);
/*SMART_EIFFEL*/T0* r96collect_one_type(T0* a1,T6 a2);
extern T0*oBC28assignment_handler;
/*SMART_EIFFEL*/void r96inspect_when_merge_counter_increment(T96* C);
/*SMART_EIFFEL*/void r96collect_create(T0* a1);
/*SMART_EIFFEL*/T0* r96simplify_integer_infix_power(T333 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r96collect_constant(T0* a1);
/*SMART_EIFFEL*/T0* r96type_real_64(T96* C);
/*ID_PROVIDER*/void r278make(T278* C);
/*ID_PROVIDER*/T0* r278alias_of(T10 a1);
extern T0*oBC278id_memory;
extern int fBC278id_memory;
/*ID_PROVIDER*/T0* r278id_memory(void);
/*ID_PROVIDER*/T0* r278echo(void);
extern T0*oBC278per_cluster_id_memory;
extern int fBC278per_cluster_id_memory;
/*ID_PROVIDER*/T0* r278per_cluster_id_memory(void);
/*ID_PROVIDER*/T0* r278cluster_id_memory(T0* a1);
/*ID_PROVIDER*/T10 r278high_item(T278* C,T0* a1);
/*ID_PROVIDER*/void r278cluster_id_memory_add(T10 a1,T0* a2,T0* a3);
/*ID_PROVIDER*/T0* r278class_name_of(T0* a1);
/*ID_PROVIDER*/T10 r278item(T278* C,T0* a1,T0* a2);
extern T0*oBC278temporary_type_name;
extern int fBC278temporary_type_name;
/*ID_PROVIDER*/T0* r278temporary_type_name(void);
/*ID_PROVIDER*/void r278disk_save(T278* C);
/*ID_PROVIDER*/T0* r278system_tools(void);
/*ID_PROVIDER*/void r278disk_save_ids(T278* C,T0* a1,T0* a2,T0* a3);
/*ID_PROVIDER*/void r278disk_restore(T278* C);
/*ID_PROVIDER*/void r278id_memory_add(T10 a1,T0* a2,T6 a3);
/*ID_PROVIDER*/T6 r278is_valid_type_mark(T0* a1);
/*STRING_ALIASER*/T6 r264registered_one(T0* a1);
/*STRING_ALIASER*/T0* r264hashed_string(T0* a1);
/*STRING_ALIASER*/T0* r264create_hashed_string(T0* a1);
extern T0*oBC264memory;
extern int fBC264memory;
/*STRING_ALIASER*/T0* r264memory(void);
/*STRING_ALIASER*/T0* r264string(T0* a1);
/*STRING_ALIASER*/void r264echo_information(void);
/*STRING_ALIASER*/T0* r264echo(void);
extern T0*oBC264tuple_name;
extern int fBC264tuple_name;
/*STRING_ALIASER*/T0* r264tuple_name(void);
extern T0*oBC264hashed_string_buffer;
extern int fBC264hashed_string_buffer;
/*STRING_ALIASER*/T0* r264hashed_string_buffer(void);
/*GC_HANDLER*/void r613make(T613* C);
/*GC_HANDLER*/void r613gc_info_before_exit(T613* C);
/*GC_HANDLER*/void r613free_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613compute_ceils(void);
extern T0*oBC613switch_list;
extern int fBC613switch_list;
/*GC_HANDLER*/T0* r613switch_list(void);
/*GC_HANDLER*/void r613initialize_user_expanded_attributes(T0* a1,T0* a2);
/*GC_HANDLER*/void r613info_nb_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613mark_once_routines(T613* C);
/*GC_HANDLER*/T0* r613echo(void);
/*GC_HANDLER*/void r613align_mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613customize_c_runtime(T613* C);
/*GC_HANDLER*/void r613native9_in(T613* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r613na_env_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613c_dicho(T0* a1,T2 a2,T2 a3);
/*GC_HANDLER*/void r613set_info_flag(T613* C);
/*GC_HANDLER*/void r613mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/T0* r613cpp(void);
/*GC_HANDLER*/void r613allocation_of(T613* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r613define_gc_start(T613* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r613agent_pool_gc_info(void);
/*GC_HANDLER*/void r613no_gc(T613* C);
/*GC_HANDLER*/void r613mark_for(T0* a1,T0* a2,T6 a3);
/*GC_HANDLER*/void r613define1(void);
/*GC_HANDLER*/void r613manifest_string_mark_signature(T2 a1);
/*GC_HANDLER*/void r613define2(T613* C);
/*GC_HANDLER*/void r613initialize_runtime(T613* C);
/*GC_HANDLER*/void r613memory_dispose(T613* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r613store_left_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613store_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613store_chunk_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r613define_gc_info(T613* C,T0* a1);
/*GC_HANDLER*/void r613manifest_string_in(T613* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r613just_before_mark(T613* C,T0* a1);
/*GC_HANDLER*/void r613define_manifest_string_mark(void);
/*GC_HANDLER*/void r613switch_for(T0* a1);
/*SYSTEM*/int create634(void);
/*SYSTEM*/T0* r634get_environment_variable(T0* a1);
/*CECIL_POOL*/T73*create73(void);
/*CECIL_POOL*/T0* r73echo(void);
/*CECIL_POOL*/void r73parse_cecil_files(T73* C);
/*CECIL_POOL*/void r73collect(T73* C);
/*CECIL_POOL*/void r73add_cecil_file(T73* C,T0* a1);
/*CECIL_POOL*/void r73inline_dynamic_dispatch(T73* C,T0* a1,T0* a2);
/*CECIL_POOL*/void r73do_all(T73* C,T0* a1);
/*FILE_TOOLS*/int create281(void);
extern T0*oBC281tfr1;
extern T0*oBC281tfr2;
/*FILE_TOOLS*/T6 r281same_files(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r281is_readable(T0* a1);
/*FILE_TOOLS*/T6 r281file_exists(T0* a1);
/*FILE_TOOLS*/void r281delete(T0* a1);
/*FILE_TOOLS*/T6 r281is_empty(T0* a1);
/*FILE_TOOLS*/T6 r281is_file(T0* a1);
/*FILE_TOOLS*/T6 r281is_directory(T0* a1);
/*FILE_TOOLS*/void r281rename_to(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r281same_physical_file(T0* a1,T0* a2);
/*ERROR_HANDLER*/void r280print_as_error(T280* C);
/*ERROR_HANDLER*/void r280put_arrows_into(T0* a1,T0* a2);
/*ERROR_HANDLER*/void r280get_positions_on_same_line(T0* a1);
/*ERROR_HANDLER*/void r280cancel(void);
/*ERROR_HANDLER*/void r280print_spaces(T2 a1);
extern T0*oBC280positions;
extern int fBC280positions;
/*ERROR_HANDLER*/T0* r280positions(void);
/*ERROR_HANDLER*/T0* r280echo(void);
/*ERROR_HANDLER*/void r280add_position(T333 a1);
/*ERROR_HANDLER*/T2 r280detab_line(T0* a1);
/*ERROR_HANDLER*/void r280add_expression(T0* a1);
/*ERROR_HANDLER*/void r280print_as_fatal_error(T280* C);
/*ERROR_HANDLER*/void r280do_print(T0* a1);
/*ERROR_HANDLER*/void r280print_as_warning(T280* C);
/*ERROR_HANDLER*/void r280add_type(T0* a1);
/*ERROR_HANDLER*/void r280add_type_mark(T0* a1);
/*ERROR_HANDLER*/void r280add_context_info(T0* a1);
/*ERROR_HANDLER*/void r280append_integer_64(T11 a1);
/*ERROR_HANDLER*/T6 r280is_empty(void);
/*ERROR_HANDLER*/void r280add_feature_name(T0* a1);
/*ERROR_HANDLER*/void r280crash(T280* C);
/*ERROR_HANDLER*/void r280append_integer(T2 a1);
/*ERROR_HANDLER*/void r280print_as_internal_error(T280* C);
/*ERROR_HANDLER*/void r280print_error_header(T0* a1,T0* a2,T2 a3,T0* a4);
/*ERROR_HANDLER*/void r280display_lines(void);
/*ERROR_HANDLER*/T0* r280get_line(T0* a1,T2 a2);
extern T0*oBC280explanation;
extern int fBC280explanation;
/*ERROR_HANDLER*/T0* r280explanation(void);
/*SERC_FACTORY*/void r544add_to_chain(T0* a1,T0* a2);
extern T0*oBC544config;
extern int fBC544config;
/*SERC_FACTORY*/T0* r544config(void);
extern T0*oBC544seconf_env;
extern int fBC544seconf_env;
/*SERC_FACTORY*/T0* r544seconf_env(void);
extern T0*oBC544userprofile_env;
extern int fBC544userprofile_env;
/*SERC_FACTORY*/T0* r544userprofile_env(void);
/*SERC_FACTORY*/T0* r544system_tools(void);
extern T0*oBC544home_env;
extern int fBC544home_env;
/*SERC_FACTORY*/T0* r544home_env(void);
/*SERC_FACTORY*/T0* r544parser_buffer(void);
/*SERC_FACTORY*/T0* r544env(T0* a1);
/*BASIC_DIRECTORY*/void r529compute_file_path_with(T0* a1,T0* a2);
/*BASIC_DIRECTORY*/T6 r529macintosh_notation(void);
/*BASIC_DIRECTORY*/T6 r529openvms_notation(void);
/*BASIC_DIRECTORY*/void r529compute_parent_directory_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r529unix_notation(void);
/*BASIC_DIRECTORY*/void r529compute_absolute_file_path_with(T0* a1);
/*BASIC_DIRECTORY*/void r529connect_to_current_working_directory(T529* C);
/*BASIC_DIRECTORY*/T6 r529windows_notation(void);
/*BASIC_DIRECTORY*/T6 r529amiga_notation(void);
/*BASIC_DIRECTORY*/void r529set_notation_using(T0* a1);
/*BASIC_DIRECTORY*/void r529compute_short_name_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r529cygwin_notation(void);
extern T0*oBC529last_entry;
extern int fBC529last_entry;
/*BASIC_DIRECTORY*/T0* r529last_entry(void);
/*BASIC_DIRECTORY*/T0* r529current_working_directory(void);
/*BASIC_DIRECTORY*/T0* r529system_notation(void);
/*BASIC_DIRECTORY*/void r529compute_subdirectory_with(T0* a1,T0* a2);
extern int fBC529ensure_system_notation;
/*BASIC_DIRECTORY*/void r529ensure_system_notation(void);
/*BASIC_DIRECTORY*/void r529connect_to(T529* C,T0* a1);
/*BASIC_DIRECTORY*/void r529read_entry(T529* C);
/*BASIC_DIRECTORY*/void r529disconnect(T529* C);
extern T0*oBC529system_notation_buffer;
extern T0*oBC13std_input;
extern int fBC13std_input;
/*STD_INPUT_OUTPUT*/T0* r63std_input(void);
/*STD_INPUT_OUTPUT*/T0* r63std_output(void);
/*STD_INPUT_OUTPUT*/T6 r63is_connected(void);
/*STD_INPUT_OUTPUT*/void r63put_string(T63* C,T0* a1);
extern T0*oBC47tmp_string;
extern int fBC47tmp_string;
/*STD_INPUT_OUTPUT*/T0* r63tmp_string(void);
/*STD_INPUT_OUTPUT*/void r63put_real_format(T63* C,T5 a1,T2 a2);
/*STD_INPUT_OUTPUT*/void r63put_integer(T63* C,T11 a1);
/*STD_INPUT_OUTPUT*/void r63put_abstract_string(T0* a1);
/*STD_INPUT_OUTPUT*/void r63disconnect(void);
/*STD_INPUT_OUTPUT*/T0* r63as_output_stream(T63* C);
/*UNIX_DIRECTORY_NOTATION*/T531*create531(void);
/*UNIX_DIRECTORY_NOTATION*/void r531to_subpath_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/T0* r531from_path_name(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r531to_subdirectory_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531start_join(T531* C,T0* a1,T2 a2);
/*UNIX_DIRECTORY_NOTATION*/void r531to_root(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531join_element(T531* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r531to_directory_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r531to_short_name_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531to_current_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r531to_file_path_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531from_notation(T531* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531to_absolute_path_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531to_parent_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r531join_directory(T531* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T6 r531is_absolute_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T0* r531to_notation(T531* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r531join_up(T531* C);
/*UNIX_DIRECTORY_NOTATION*/void r531to_default_root(T0* a1);
extern T0*oBC531tmp1;
extern int fBC531tmp1;
/*UNIX_DIRECTORY_NOTATION*/T0* r531tmp1(void);
extern T0*oBC531tmp2;
extern int fBC531tmp2;
/*UNIX_DIRECTORY_NOTATION*/T0* r531tmp2(void);
/*WINDOWS_DIRECTORY_NOTATION*/T535*create535(void);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_subpath_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r535from_path_name(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_subdirectory_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535start_join(T535* C,T0* a1,T2 a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_root(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535join_element(T535* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_directory_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_short_name_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_current_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_file_path_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535from_notation(T535* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_absolute_path_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_parent_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r535join_directory(T535* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T6 r535is_absolute_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r535to_notation(T535* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r535join_up(T535* C);
/*WINDOWS_DIRECTORY_NOTATION*/void r535to_default_root(T0* a1);
extern T0*oBC535tmp1;
extern int fBC535tmp1;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r535tmp1(void);
extern T0*oBC535tmp2;
extern int fBC535tmp2;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r535tmp2(void);
/*MACINTOSH_DIRECTORY_NOTATION*/T536*create536(void);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_subpath_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_subdirectory_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_directory_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_short_name_in(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_current_directory(T536* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_file_path_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536from_notation(T536* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_absolute_path_in(T536* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_parent_directory(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r536is_absolute_path(T536* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T0* r536to_notation(T536* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r536is_valid_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536to_default_root(T536* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536crash(T536* C);
/*MACINTOSH_DIRECTORY_NOTATION*/void r536not_yet_implemented(T536* C);
/*AMIGA_DIRECTORY_NOTATION*/T537*create537(void);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_subpath_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_subdirectory_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_directory_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_short_name_in(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_current_directory(T537* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_file_path_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r537from_notation(T537* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_absolute_path_in(T537* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_parent_directory(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T6 r537is_absolute_path(T537* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T0* r537to_notation(T537* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/T6 r537is_valid_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r537to_default_root(T537* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r537crash(T537* C);
/*AMIGA_DIRECTORY_NOTATION*/void r537not_yet_implemented(T537* C);
/*OPENVMS_DIRECTORY_NOTATION*/T538*create538(void);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_subpath_with(T538* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_subdirectory_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_directory_path(T538* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_short_name_in(T538* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_current_directory(T538* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_file_path_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r538from_notation(T538* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_absolute_path_in(T538* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_parent_directory(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r538is_absolute_path(T538* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T0* r538to_notation(T538* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r538is_valid_path(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r538to_default_root(T538* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r538crash(T538* C);
/*OPENVMS_DIRECTORY_NOTATION*/void r538not_yet_implemented(T538* C);
/*CYGWIN_DIRECTORY_NOTATION*/T539*create539(void);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_subpath_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_subdirectory_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_directory_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_short_name_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_current_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_file_path_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r539from_notation(T539* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_absolute_path_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_parent_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r539is_absolute_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T0* r539to_notation(T539* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r539is_valid_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r539to_default_root(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r539crash(T539* C);
/*CYGWIN_DIRECTORY_NOTATION*/void r539not_yet_implemented(T539* C);
/*TEXT_FILE_READ*/void r87unlock_tagged_out(void);
/*TEXT_FILE_READ*/void r87filtered_read_character(T87* C);
/*TEXT_FILE_READ*/void r87lock_tagged_out(void);
/*TEXT_FILE_READ*/void r87filtered_read_line_in(T87* C,T0* a1);
/*TEXT_FILE_READ*/void r87set_path(T87* C,T0* a1);
/*TEXT_FILE_READ*/void r87read_line(T87* C);
/*TEXT_FILE_READ*/void r87fill_buffer(T87* C);
/*TEXT_FILE_READ*/T6 r87same_as(T87* C,T0* a1);
/*TEXT_FILE_READ*/T0* r87tagged_out_memory(void);
/*TEXT_FILE_READ*/void r87connect_to(T87* C,T0* a1);
extern T0*oBC40last_string;
extern int fBC40last_string;
/*TEXT_FILE_READ*/T0* r87last_string(void);
/*TEXT_FILE_READ*/void r87dispose(T87* C);
/*TEXT_FILE_READ*/void r87disconnect(T87* C);
/*SE_C_MODE*/void r530make(T530* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8,T0* a9,T0* a10,T0* a11,T0* a12,T0* a13);
/*TMP_FEATURE*/T0* r447as_character_constant(T447* C,T0* a1);
/*TMP_FEATURE*/T0* r447n(T447* C);
/*TMP_FEATURE*/T0* r447as_once_routine(T447* C);
/*TMP_FEATURE*/T0* r447as_deferred_routine(T447* C);
/*TMP_FEATURE*/void r447constant_attribute_common_checks(T447* C,T0* a1);
/*TMP_FEATURE*/T0* r447as_writable_attribute(T447* C);
/*TMP_FEATURE*/void r447initialize(T447* C);
/*TMP_FEATURE*/T0* r447as_string_constant(T447* C,T0* a1);
/*TMP_FEATURE*/void r447set_require(T447* C,T333 a1,T6 a2,T0* a3,T0* a4);
/*TMP_FEATURE*/T0* r447as_constant(T447* C,T0* a1);
/*TMP_FEATURE*/T0* r447as_procedure_or_function(T447* C);
/*TMP_FEATURE*/T0* r447as_unique_constant(T447* C);
/*TMP_FEATURE*/T0* r447as_external_routine(T447* C,T0* a1,T0* a2);
/*TMP_FEATURE*/T0* r447as_boolean_constant(T447* C,T0* a1);
/*TEXT_FILE_WRITE*/void r446put_line(T446* C,T0* a1);
/*TEXT_FILE_WRITE*/T11 r446character_count(T446* C);
/*TEXT_FILE_WRITE*/void r446make(T446* C);
/*TEXT_FILE_WRITE*/void r446unlock_tagged_out(void);
/*TEXT_FILE_WRITE*/void r446filtered_put_character(T446* C,T3 a1);
/*TEXT_FILE_WRITE*/void r446lock_tagged_out(void);
/*TEXT_FILE_WRITE*/void r446set_path(T446* C,T0* a1);
/*TEXT_FILE_WRITE*/T6 r446is_connected(T446* C);
/*TEXT_FILE_WRITE*/void r446put_string(T446* C,T0* a1);
/*TEXT_FILE_WRITE*/T0* r446tmp_string(void);
/*TEXT_FILE_WRITE*/void r446put_real_format(T446* C,T5 a1,T2 a2);
/*TEXT_FILE_WRITE*/void r446put_integer(T446* C,T11 a1);
/*TEXT_FILE_WRITE*/T0* r446tagged_out_memory(void);
/*TEXT_FILE_WRITE*/void r446connect_to(T446* C,T0* a1);
/*TEXT_FILE_WRITE*/void r446filtered_flush(T446* C);
/*TEXT_FILE_WRITE*/void r446put_abstract_string(T446* C,T0* a1);
/*TEXT_FILE_WRITE*/void r446dispose(T446* C);
/*TEXT_FILE_WRITE*/void r446disconnect(T446* C);
/*TEXT_FILE_WRITE*/T0* r446as_output_stream(T446* C);
/*TEXT_FILE_WRITE*/void r446write_buffer(T446* C);
/*STD_ERROR*/void r65put_natively_stored_string(T0* a1);
/*STD_ERROR*/T0* r65std_output(void);
/*STD_ERROR*/void r65put_string(T65* C,T0* a1);
/*STD_ERROR*/T0* r65tmp_string(void);
/*STD_ERROR*/void r65put_real_format(T65* C,T5 a1,T2 a2);
/*STD_ERROR*/void r65put_integer(T65* C,T11 a1);
/*STD_ERROR*/void r65filtered_flush(void);
/*STD_ERROR*/T0* r65as_output_stream(T65* C);
/*STD_OUTPUT*/void r44make(T44* C);
/*STD_OUTPUT*/void r44filtered_put_character(T44* C,T3 a1);
/*STD_OUTPUT*/void r44put_natively_stored_string(T44* C,T0* a1);
/*STD_OUTPUT*/T0* r44std_output(void);
/*STD_OUTPUT*/void r44flush(T44* C);
/*STD_OUTPUT*/void r44put_string(T44* C,T0* a1);
/*STD_OUTPUT*/T0* r44tmp_string(void);
/*STD_OUTPUT*/void r44put_real_format(T44* C,T5 a1,T2 a2);
/*STD_OUTPUT*/void r44put_integer(T44* C,T11 a1);
/*STD_OUTPUT*/void r44se_atexit(void);
/*STD_OUTPUT*/void r44filtered_flush(T44* C);
/*STD_OUTPUT*/T0* r44as_output_stream(T44* C);
/*STD_OUTPUT*/void r44write_buffer(T44* C);
/*HASHED_STRING*/T6 r92is_equal(T92* C,T0* a1);
/*HASHED_STRING*/void r92make(T92* C,T0* a1,T2 a2);
/*HASHED_STRING*/void r92set(T92* C,T0* a1);
/*HASHED_STRING*/T6 r92is_tuple_related(T92* C);
/*PARSER_BUFFER*/void r108make(T108* C);
/*PARSER_BUFFER*/void r108release(T108* C);
/*PARSER_BUFFER*/void r108load_file(T108* C,T0* a1);
/*PARSER_BUFFER*/T0* r108empty_line_at(T108* C,T2 a1);
/*C_SPLITTER_NO_SPLIT*/void r675make(void);
/*C_SPLITTER_NO_SPLIT*/void r675connect(T675* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/void r675split_now(T675* C);
/*C_SPLITTER_NO_SPLIT*/void r675connect_out_c(T675* C);
/*C_SPLITTER_NO_SPLIT*/T0* r675echo(void);
/*C_SPLITTER_NO_SPLIT*/void r675c_connect(T675* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r675cpp(void);
/*C_SPLITTER_NO_SPLIT*/T0* r675system_tools(void);
extern T0*oBC676out_c;
extern int fBC676out_c;
/*C_SPLITTER_NO_SPLIT*/T0* r675out_c(void);
/*C_SPLITTER_NO_SPLIT*/T6 r675write_make_file(T675* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r675linker_command(T675* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679make(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r679should_split(T679* C,T2 a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679connect(T679* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679split_now(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679connect_out_c(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679echo(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679c_files_suffixes(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T2 r679current_id(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679c_connect(T679* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679cpp(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679current_c_file_suffix(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679tmp_path(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679backup_tfw_connect(T679* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679system_tools(void);
extern T0*oBC678tmp_string;
extern int fBC678tmp_string;
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679tmp_string(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679do_split(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679path_in(T679* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679out_c(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679set_live_type(T679* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679append_suffix(T679* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r679write_make_file(T679* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r679linker_command(T679* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r679_P_676_connect(T679* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r677make(T677* C);
/*C_SPLITTER_LEGACY*/void r677add_objects_(T0* a1,T0* a2,T2 a3,T2 a4);
/*C_SPLITTER_LEGACY*/T6 r677should_split(T677* C,T2 a1);
/*C_SPLITTER_LEGACY*/void r677connect(T677* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r677split_now(T677* C);
/*C_SPLITTER_LEGACY*/void r677connect_out_c(T677* C);
/*C_SPLITTER_LEGACY*/T0* r677echo(void);
/*C_SPLITTER_LEGACY*/T0* r677c_files_suffixes(T677* C);
/*C_SPLITTER_LEGACY*/void r677c_connect(T677* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r677cpp(void);
/*C_SPLITTER_LEGACY*/T0* r677current_c_file_suffix(T677* C);
/*C_SPLITTER_LEGACY*/void r677add_objects(T677* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r677tmp_path(void);
/*C_SPLITTER_LEGACY*/void r677backup_tfw_connect(T677* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r677system_tools(void);
/*C_SPLITTER_LEGACY*/T0* r677tmp_string(void);
/*C_SPLITTER_LEGACY*/void r677do_split(T677* C);
/*C_SPLITTER_LEGACY*/void r677path_in(T677* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_LEGACY*/T0* r677out_c(void);
/*C_SPLITTER_LEGACY*/T6 r677write_make_file(T677* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r677linker_command(T677* C,T0* a1);
/*DIRECTORY*/T0* r540connect_directory(T540* C,T0* a1);
/*DIRECTORY*/void r540scan(T540* C,T0* a1);
/*UNIVERSE*/void r680make(T680* C);
/*UNIVERSE*/void r680add_classes(T680* C,T0* a1);
/*UNIVERSE*/void r680for_all(T680* C,T0* a1);
/*UNIVERSE*/T2 r680cluster_count(T680* C);
extern T0*oBC674classes_notation;
/*UNIVERSE*/T6 r680has_physical_cluster(T680* C,T0* a1);
/*UNIVERSE*/T0* r680echo(void);
/*UNIVERSE*/T0* r680cluster_named(T680* C,T0* a1);
/*UNIVERSE*/T6 r680is_system_path(T680* C,T0* a1);
/*UNIVERSE*/void r680get_started(T680* C,T2 a1);
/*UNIVERSE*/T0* r680system_path_to_classes_path(T680* C,T0* a1);
/*UNIVERSE*/void r680clusters_of(T680* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*UNIVERSE*/void r680add_entry(T680* C,T2 a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*UNIVERSE*/void r680view_in(T680* C,T0* a1);
extern T0*oBC674system_notation;
extern int fBC674system_notation;
/*UNIVERSE*/T0* r680system_notation(T680* C);
/*UNIVERSE*/T2 r680loaded_class_count(T680* C);
/*UNIVERSE*/void r680show_tabs(T2 a1);
/*UNIVERSE*/void r680parse_include(T680* C);
/*UNIVERSE*/T0* r680find_physical_cluster(T680* C,T0* a1);
/*UNIVERSE*/void r680show(T680* C,T2 a1);
/*POSITION*/void r333set(T333* C,T2 a1,T2 a2,T10 a3,T0* a4);
/*POSITION*/T6 r333sedb_trace(T333* C);
/*POSITION*/T6 r333same_line_as(T333* C,T333 a1);
extern T0*oBC28plugin_config;
/*POSITION*/T0* r333path(T333* C);
/*POSITION*/T10 r333id(T333* C);
/*POSITION*/void r333set_in_ace_file(T333* C,T2 a1,T2 a2);
/*POSITION*/T0* r333class_text_name(T333* C);
/*POSITION*/T0* r333id_provider(void);
extern T906 oBC333class_text_storage;
extern T0*oBC28ini_parser;
/*POSITION*/void r333set_in_ini_file(T333* C,T2 a1,T2 a2,T10 a3);
/*POSITION*/T6 r333_ix_60(T333* C,T333 a1);
/*POSITION*/T0* r333class_text(T333* C);
/*POSITION*/T2 r333column(T333* C);
/*POSITION*/T2 r333line(T333* C);
/*POSITION*/T6 r333before(T333* C,T333 a1);
/*COMMENT*/T0* r415to_expression(T415* C);
/*COMMENT*/void r415make(T415* C,T333 a1,T0* a2);
/*COMMENT*/void r415pretty(T415* C,T2 a1);
/*COMMENT*/T0* r415simplify(T0* a1);
/*COMMENT*/void r415good_end_warning_check(T415* C,T0* a1);
/*COMMENT*/T6 r415is_dummy_feature_end(T415* C,T0* a1);
/*COMMENT*/void r415add_last(T415* C,T0* a1);
/*COMMENT*/void r415append(T415* C,T0* a1);
/*COMMENT*/T6 r415use_current(T0* a1);
/*COMMENT*/T6 r415side_effect_free(T0* a1);
/*COMMENT*/T0* r415inline_dynamic_dispatch(T0* a1,T0* a2);
/*COMMENT*/T2 r415count(T415* C);
/*COMMENT*/T0* r415to_instruction(T415* C);
/*UNICODE_STRING*/void r294make(T294* C,T2 a1);
/*UNICODE_STRING*/void r294make_empty(T294* C);
/*UNICODE_STRING*/T6 r294valid_unicode(T2 a1);
/*UNICODE_STRING*/void r294extend(T294* C,T2 a1);
/*UNICODE_STRING*/void r294add_last(T294* C,T2 a1);
/*UNICODE_STRING*/T10 r294low_surrogate_value(T294* C,T2 a1);
/*UNICODE_STRING*/T2 r294item(T294* C,T2 a1);
/*UNICODE_STRING*/void r294clear_count(T294* C);
/*UNICODE_STRING*/void r294utf8_encode_in(T294* C,T0* a1);
/*UNICODE_STRING*/void r294next_generation(T294* C);
extern T0*oBC681classes_memory;
extern int fBC681classes_memory;
/*CLASSES_TREE_FACTORY*/T0* r681classes_memory(void);
/*CLASSES_TREE_FACTORY*/T0* r681classes(T681* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
extern T0*oBC681universe;
extern int fBC681universe;
/*CLASSES_TREE_FACTORY*/T0* r681universe(void);
/*CLUSTER*/void r424register_class_text(T424* C,T0* a1);
extern T0*oBC424file_name_buffer;
extern int fBC424file_name_buffer;
/*CLUSTER*/T0* r424file_name_buffer(void);
/*CLUSTER*/void r424exclude_add_last(T424* C,T0* a1);
/*CLUSTER*/void r424include_add_last(T424* C,T0* a1);
/*CLUSTER*/void r424read_classes(T424* C);
/*CLUSTER*/T6 r424trace(T424* C,T0* a1);
/*CLUSTER*/void r424include_parsing(T424* C);
/*CLUSTER*/T0* r424system_tools(void);
/*CLUSTER*/T6 r424debug_check(T424* C,T0* a1,T0* a2);
extern T0*oBC424path_buffer;
extern int fBC424path_buffer;
/*CLUSTER*/T0* r424path_buffer(void);
/*CLUSTER*/T2 r424class_text_count(T424* C);
/*CLUSTER*/void r424add_default_debug_key(T424* C,T0* a1);
/*CLUSTER*/T2 r424assertion_level_of(T424* C,T0* a1);
/*CLUSTER*/T0* r424parser_buffer(void);
/*CLUSTER*/T6 r424parser_buffer_load(T424* C);
/*CLUSTER*/void r424show(T424* C);
/*CLUSTER*/void r424make(T424* C,T0* a1,T0* a2,T0* a3);
/*CLUSTER*/T0* r424echo(void);
/*CLUSTER*/T2 r424loaded_class_count(T424* C);
/*CLUSTER*/void r424init(T424* C,T0* a1,T2 a2);
/*CLUSTER*/T6 r424parser_buffer_for(T424* C,T0* a1,T6 a2);
/*CLUSTER*/T0* r424level_name(T2 a1);
/*CLUSTER*/T6 r424match_debug_keys(T0* a1,T0* a2);
/*CLUSTER*/T6 r424default_trace_or_ace_default_trace(T424* C);
/*CLUSTER*/void r424set_option_assertion_level(T424* C,T0* a1,T2 a2);
/*CLUSTER*/void r424for_all(T424* C,T0* a1);
/*CLUSTER*/T0* r424class_text(T424* C,T0* a1,T6 a2,T6 a3);
/*CLUSTER*/void r424set_default_trace(T424* C,T6 a1);
/*CLUSTER*/void r424add_option_trace(T424* C,T0* a1);
/*CLUSTER*/void r424get_started(T424* C,T2 a1);
/*CLUSTER*/void r424view_in(T424* C,T0* a1);
/*CLUSTER*/T6 r424prepare_parser_buffer_for(T424* C,T0* a1);
/*CLUSTER*/void r424add_option_debug_key(T424* C,T0* a1,T0* a2);
/*TOKEN_BUFFER*/T0* r750to_class_name(T750* C);
/*TOKEN_BUFFER*/T0* r750eiffel_parser(void);
/*TOKEN_BUFFER*/T0* r750to_feature_name(T750* C);
/*TOKEN_BUFFER*/T0* r750to_tag_name(T750* C);
/*TOKEN_BUFFER*/T0* r750to_argument_name1(T750* C);
/*TOKEN_BUFFER*/T0* r750to_argument_name2(T750* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/void r750extend(T3 a1);
/*TOKEN_BUFFER*/T6 r750isa_keyword(void);
/*TOKEN_BUFFER*/T0* r750hashed_string(T750* C);
/*TOKEN_BUFFER*/T333 r750start_position(T750* C);
/*TOKEN_BUFFER*/T0* r750to_manifest_string(T750* C);
/*TOKEN_BUFFER*/T0* r750to_writable_attribute_name(T750* C);
/*TOKEN_BUFFER*/void r750append(T0* a1);
/*TOKEN_BUFFER*/void r750reset(T750* C,T2 a1,T2 a2);
/*TOKEN_BUFFER*/T0* r750to_local_name2(T750* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/T0* r750to_local_name1(T750* C);
typedef struct _se_agenT558f559l25c44 se_agenT558f559l25c44;
struct _se_agenT558f559l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT558f559l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT558f559l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT558f559l25c44(T0* closed_C);
void gc_mark_agenT558f559l25c44(se_agenT558f559l25c44*u);
/*C_HEADER_PASS_1*/void r558make(T558* C);
/*C_HEADER_PASS_1*/void r558compile_live_type(T558* C,T0* a1);
/*C_HEADER_PASS_1*/void r558visit_native_array_type_mark(T558* C,T0* a1);
/*C_HEADER_PASS_1*/void r558visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_1*/void r558standard_c_typedef(T0* a1);
/*C_HEADER_PASS_1*/void r558pre_compile(void);
/*C_HEADER_PASS_1*/void r558visit_agent_type_mark(T0* a1);
/*C_HEADER_PASS_1*/T0* r558cpp(void);
/*C_HEADER_PASS_1*/void r558do_compile(T558* C,T0* a1);
/*C_HEADER_PASS_1*/void r558compile(T558* C);
/*C_HEADER_PASS_1*/void r558flush_out_h(void);
/*C_HEADER_PASS_1*/void r558visit_class_type_mark(T0* a1);
typedef struct _se_agenT588f559l25c44 se_agenT588f559l25c44;
struct _se_agenT588f559l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT588f559l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT588f559l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT588f559l25c44(T0* closed_C);
void gc_mark_agenT588f559l25c44(se_agenT588f559l25c44*u);
/*C_HEADER_PASS_2*/void r588make(T588* C);
/*C_HEADER_PASS_2*/void r588compile_live_type(T588* C,T0* a1);
/*C_HEADER_PASS_2*/void r588visit_native_array_type_mark(T588* C,T0* a1);
/*C_HEADER_PASS_2*/T0* r588cpp(void);
/*C_HEADER_PASS_2*/void r588do_compile(T588* C,T0* a1);
/*C_HEADER_PASS_2*/void r588compile(T588* C);
/*C_HEADER_PASS_2*/void r588native_array_type_in(T0* a1,T0* a2);
/*C_HEADER_PASS_2*/void r588flush_out_h(void);
typedef struct _se_agenT589f589l22c50 se_agenT589f589l22c50;
struct _se_agenT589f589l22c50{Tid id;
int creation_mold_id;
void(*afp)(se_agenT589f589l22c50*,T0*);
void(*gc_mark_agent_mold)(se_agenT589f589l22c50*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT589f589l22c50(T0* closed_C);
void gc_mark_agenT589f589l22c50(se_agenT589f589l22c50*u);
typedef struct _se_agenT589f559l25c44 se_agenT589f559l25c44;
struct _se_agenT589f559l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT589f559l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT589f559l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT589f559l25c44(T0* closed_C);
void gc_mark_agenT589f559l25c44(se_agenT589f559l25c44*u);
/*C_HEADER_PASS_3*/void r589make(T589* C);
/*C_HEADER_PASS_3*/void r589standard_c_object_model(T0* a1);
/*C_HEADER_PASS_3*/void r589compile_expanded(T589* C,T0* a1);
/*C_HEADER_PASS_3*/void r589compile_live_type(T589* C,T0* a1);
/*C_HEADER_PASS_3*/void r589c_object_model_in(T0* a1);
/*C_HEADER_PASS_3*/void r589visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_3*/T0* r589cpp(void);
/*C_HEADER_PASS_3*/void r589do_compile(T589* C,T0* a1);
/*C_HEADER_PASS_3*/void r589compile(T589* C);
/*C_HEADER_PASS_3*/void r589flush_out_h(void);
/*C_HEADER_PASS_3*/void r589standard_c_struct(T0* a1);
/*C_HEADER_PASS_3*/void r589visit_class_type_mark(T0* a1);
typedef struct _se_agenT590f559l25c44 se_agenT590f559l25c44;
struct _se_agenT590f559l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT590f559l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT590f559l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT590f559l25c44(T0* closed_C);
void gc_mark_agenT590f559l25c44(se_agenT590f559l25c44*u);
/*C_HEADER_PASS_4*/void r590visit_empty_tuple_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r590make(T590* C);
/*C_HEADER_PASS_4*/void r590visit_string_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r590standard_c_object_model(T0* a1);
/*C_HEADER_PASS_4*/void r590compile_live_type(T590* C,T0* a1);
/*C_HEADER_PASS_4*/void r590visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r590c_object_model_in(T0* a1);
/*C_HEADER_PASS_4*/void r590visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r590c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r590visit_any_type_mark(T0* a1);
/*C_HEADER_PASS_4*/T0* r590cpp(void);
/*C_HEADER_PASS_4*/void r590do_compile(T590* C,T0* a1);
/*C_HEADER_PASS_4*/void r590compile(T590* C);
/*C_HEADER_PASS_4*/void r590standard_c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r590flush_out_h(void);
/*C_HEADER_PASS_4*/void r590visit_array_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r590standard_c_struct(T0* a1);
/*C_HEADER_PASS_4*/void r590visit_class_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r590visit_non_empty_tuple_type_mark(T0* a1);
typedef struct _se_agenT591f591l77c54 se_agenT591f591l77c54;
struct _se_agenT591f591l77c54{Tid id;
int creation_mold_id;
void(*afp)(se_agenT591f591l77c54*,T0*);
void(*gc_mark_agent_mold)(se_agenT591f591l77c54*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT591f591l77c54(T0* closed_a1);
void gc_mark_agenT591f591l77c54(se_agenT591f591l77c54*u);
typedef struct _se_agenT591f591l106c53 se_agenT591f591l106c53;
struct _se_agenT591f591l106c53{Tid id;
int creation_mold_id;
void(*afp)(se_agenT591f591l106c53*,T0*);
void(*gc_mark_agent_mold)(se_agenT591f591l106c53*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT591f591l106c53(T0* closed_a1);
void gc_mark_agenT591f591l106c53(se_agenT591f591l106c53*u);
typedef struct _se_agenT591f591l117c20 se_agenT591f591l117c20;
struct _se_agenT591f591l117c20{Tid id;
int creation_mold_id;
void(*afp)(se_agenT591f591l117c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT591f591l117c20*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT591f591l117c20(void);
void gc_mark_agenT591f591l117c20(se_agenT591f591l117c20*u);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_7(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_8(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_9(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591put_c_field_name(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591make(T591* C);
extern T0*oBC587pending_c_function_counter_tag_key;
extern int fBC587pending_c_function_counter_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r591pending_c_function_counter_tag_key(void);
/*C_LIVE_TYPE_COMPILER*/void r591c_initialize_frame_information(T0* a1,T2 a2);
extern T0*oBC591agent_address_of_c_define;
extern int fBC591agent_address_of_c_define;
/*C_LIVE_TYPE_COMPILER*/T0* r591agent_address_of_c_define(void);
/*C_LIVE_TYPE_COMPILER*/void r591open_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591closed_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591compile_to_c_old_memory(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591is_equal_agent_creation_define_type_for(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591compile_live_type(T591* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/T0* r591echo(void);
/*C_LIVE_TYPE_COMPILER*/T0* r591define_agent_creation_type(T0* a1,T0* a2,T6 a3,T0* a4,T2 a5);
extern T0*oBC591is_equal_agent_creation_type_generated;
extern int fBC591is_equal_agent_creation_type_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r591is_equal_agent_creation_type_generated(void);
/*C_LIVE_TYPE_COMPILER*/T6 r591rf8_does_need_c_wrapper(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591set_internal_c_local_tag(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591c_frame_descriptor(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591c_define_opening(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591c_define_closing(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T6 r591rf7_does_need_c_wrapper(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T0* r591cpp(void);
/*C_LIVE_TYPE_COMPILER*/void r591define_agent_creation_function(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_LIVE_TYPE_COMPILER*/void r591do_compile(T591* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591compile(T591* C,T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/void r591address_of_c_define(T0* a1);
extern T0*oBC587pending_c_function_counter_tag_values;
extern int fBC587pending_c_function_counter_tag_values;
/*C_LIVE_TYPE_COMPILER*/T0* r591pending_c_function_counter_tag_values(void);
extern T0*oBC591is_equal_agent_creation_function_generated;
extern int fBC591is_equal_agent_creation_function_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r591is_equal_agent_creation_function_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r591put_c_name_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591create_function_define(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591is_equal_agent_creation_define_function(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591define_c_signature(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591set_pending_c_function_counter_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T0* r591internal_c_local_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591args_c_frame_descriptor(T0* a1,T0* a2,T0* a3,T0* a4);
/*C_LIVE_TYPE_COMPILER*/void r591rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r591initialize_expanded(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591is_equal_mold_id_in(T0* a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r591args_compile_to_c_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r591define_agent_creation_for(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591define_check_class_invariant_c_function(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T2 r591pending_c_function_counter_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_2(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_3(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_4(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_5(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r591visit_run_feature_6(T0* a1);
extern T0*oBC587internal_c_local_tag_key;
extern int fBC587internal_c_local_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r591internal_c_local_tag_key(void);
/*C_MAPPER*/void r603visit_run_feature_7(T0* a1);
/*C_MAPPER*/void r603visit_run_feature_8(T0* a1);
/*C_MAPPER*/void r603visit_run_feature_9(T0* a1);
/*C_MAPPER*/void r603put_c_field_name(T0* a1);
/*C_MAPPER*/void r603default_mapping_function(T0* a1);
/*C_MAPPER*/T6 r603rf8_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/void r603default_mapping_procedure(T0* a1);
/*C_MAPPER*/T6 r603rf7_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/T0* r603cpp(void);
/*C_MAPPER*/void r603compile(T603* C,T0* a1);
/*C_MAPPER*/void r603visit_run_feature_1(T0* a1);
/*C_MAPPER*/void r603default_mapping_arg(T0* a1,T6 a2,T6 a3,T6 a4);
/*C_MAPPER*/void r603visit_run_feature_2(T0* a1);
/*C_MAPPER*/void r603visit_run_feature_3(T0* a1);
/*C_MAPPER*/void r603visit_run_feature_4(T0* a1);
/*C_MAPPER*/void r603visit_run_feature_5(T0* a1);
/*C_MAPPER*/void r603visit_run_feature_6(T0* a1);
/*C_INITIALIZER*/void r604visit_empty_tuple_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_string_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_like_feature_type_mark(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_real_type_mark(T0* a1);
/*C_INITIALIZER*/T0* r604for(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_native_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_natural_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_like_current_type_mark(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_like_argument_type_mark(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_user_generic_type_mark(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_pointer_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_any_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_agent_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_character_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_formal_generic_type_mark(T604* C,T0* a1);
/*C_INITIALIZER*/void r604c_initialize_user_expanded(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_boolean_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r604crash(T604* C);
/*C_INITIALIZER*/void r604visit_integer_type_mark(T0* a1);
/*C_INITIALIZER*/void r604visit_class_type_mark(T604* C,T0* a1);
/*C_INITIALIZER*/void r604visit_non_empty_tuple_type_mark(T0* a1);
/*C_TARGET_MAPPER*/void r605set_pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_void_call(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_create_expression(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605compile_feature_call(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_fake_tuple(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_e_false(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_call_infix_ge(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_implicit_cast(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_integer_constant(T0* a1);
/*C_TARGET_MAPPER*/void r605not_yet_implemented(T605* C);
/*C_TARGET_MAPPER*/T0* r605internal_c_local_tag(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_compound_expression(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605set_internal_c_local_tag(T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r605visit_dynamic_dispatch_temporary1_id(T605* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r605pending_c_function_counter_tag_key(void);
/*C_TARGET_MAPPER*/void r605visit_old_manifest_array(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_call_infix_gt(T605* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r605pending_c_function_counter_tag_values(void);
/*C_TARGET_MAPPER*/void r605compile_expression(T605* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r605internal_c_local_tag_key(void);
/*C_TARGET_MAPPER*/void r605visit_call_infix_le(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_call_prefix_not(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_call_infix_lt(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_implicit_current(T0* a1);
/*C_TARGET_MAPPER*/T0* r605cpp(void);
/*C_TARGET_MAPPER*/void r605args_compile_to_c(T605* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r605visit_real_constant(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_agent_creation(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_static_call_0_c(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_no_dispatch(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_character_constant(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_null_pointer(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_dynamic_dispatch_temporary1(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_dynamic_dispatch_temporary2(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_e_true(T0* a1);
/*C_TARGET_MAPPER*/void r605crash(T605* C);
/*C_TARGET_MAPPER*/void r605compile_(T605* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r605visit_assignment_test(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605create_expression_support(T605* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r605visit_written_current(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605compile(T605* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r605visit_expression_with_comment(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_assertion(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_manifest_string(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605c2c_cast_op(T605* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r605visit_non_void_no_dispatch(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_manifest_tuple(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_closed_operand(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605cmp_user_expanded(T605* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/T2 r605pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r605visit_create_writable(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605standard_mapping_c_target(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_writable_attribute_name(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_internal_local2(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_address_of(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_fake_argument(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_e_void(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605compile_character(T3 a1);
/*C_TARGET_MAPPER*/void r605visit_loop_variant(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605cmp_expanded_with_void(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605visit_manifest_generic(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605compile_arg(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605cmp_reference(T605* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r605visit_built_in_eq_neq(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605cmp_basic_eiffel_expanded(T605* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r605_P_606_compile_feature_call(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_no_dispatch(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_assignment_test(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_manifest_string(T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_non_void_no_dispatch(T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_manifest_tuple(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_internal_local2(T605* C,T0* a1);
/*C_TARGET_MAPPER*/void r605_P_606_visit_manifest_generic(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r607set_pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r607visit_void_call(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_create_expression(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607compile_feature_call(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_fake_tuple(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_e_false(T0* a1);
/*C_ARG_MAPPER*/void r607visit_call_infix_ge(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_implicit_cast(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_integer_constant(T0* a1);
/*C_ARG_MAPPER*/void r607not_yet_implemented(T607* C);
/*C_ARG_MAPPER*/T0* r607internal_c_local_tag(T0* a1);
/*C_ARG_MAPPER*/void r607visit_compound_expression(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607set_internal_c_local_tag(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607visit_argument_name2(T0* a1);
/*C_ARG_MAPPER*/void r607visit_dynamic_dispatch_temporary1_id(T607* C,T0* a1);
/*C_ARG_MAPPER*/T0* r607pending_c_function_counter_tag_key(void);
/*C_ARG_MAPPER*/void r607compile_agent_definition_call(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_old_manifest_array(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_call_infix_gt(T607* C,T0* a1);
/*C_ARG_MAPPER*/T0* r607pending_c_function_counter_tag_values(void);
/*C_ARG_MAPPER*/void r607compile_expression(T607* C,T0* a1);
/*C_ARG_MAPPER*/T0* r607internal_c_local_tag_key(void);
/*C_ARG_MAPPER*/void r607visit_call_infix_le(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_call_prefix_not(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_call_infix_lt(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_generator_generating_type(T0* a1);
/*C_ARG_MAPPER*/T0* r607cpp(void);
/*C_ARG_MAPPER*/void r607args_compile_to_c(T607* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607visit_real_constant(T0* a1);
/*C_ARG_MAPPER*/void r607visit_agent_creation(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r607visit_static_call_0_c(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_no_dispatch(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_character_constant(T0* a1);
/*C_ARG_MAPPER*/void r607visit_null_pointer(T0* a1);
/*C_ARG_MAPPER*/void r607visit_dynamic_dispatch_temporary1(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_dynamic_dispatch_temporary2(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_e_true(T0* a1);
/*C_ARG_MAPPER*/void r607compile_code(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607crash(T607* C);
/*C_ARG_MAPPER*/void r607compile_agent_void_call(T607* C,T0* a1,T333 a2,T0* a3);
/*C_ARG_MAPPER*/void r607visit_assignment_test(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607create_expression_support(T607* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607compile(T607* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607visit_expression_with_comment(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_abstract_current(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_assertion(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_manifest_string(T0* a1);
/*C_ARG_MAPPER*/void r607c2c_cast_op(T607* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r607visit_non_void_no_dispatch(T0* a1);
/*C_ARG_MAPPER*/void r607visit_manifest_tuple(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_closed_operand(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607open_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607visit_open_operand(T0* a1);
/*C_ARG_MAPPER*/void r607cmp_user_expanded(T607* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607visit_local_name2(T0* a1);
/*C_ARG_MAPPER*/void r607visit_e_old(T0* a1);
/*C_ARG_MAPPER*/T2 r607pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r607visit_create_writable(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_fake_target(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_writable_attribute_name(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_internal_local2(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_address_of(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_fake_argument(T0* a1);
/*C_ARG_MAPPER*/void r607visit_e_void(T0* a1);
/*C_ARG_MAPPER*/void r607compile_character(T3 a1);
/*C_ARG_MAPPER*/void r607visit_agent_expression(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_loop_variant(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607compile_precursor(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607cmp_expanded_with_void(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607visit_manifest_generic(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607compile_arg(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607cmp_reference(T607* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r607visit_built_in_eq_neq(T607* C,T0* a1);
/*C_ARG_MAPPER*/void r607closed_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r607visit_result(T0* a1);
/*C_ARG_MAPPER*/void r607cmp_basic_eiffel_expanded(T607* C,T0* a1,T0* a2,T0* a3);
typedef struct _se_agenT608f608l80c33 se_agenT608f608l80c33;
struct _se_agenT608f608l80c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT608f608l80c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT608f608l80c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT608f608l80c33(T0* closed_C);
void gc_mark_agenT608f608l80c33(se_agenT608f608l80c33*u);
typedef struct _se_agenT608f608l1073c35 se_agenT608f608l1073c35;
struct _se_agenT608f608l1073c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT608f608l1073c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT608f608l1073c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT608f608l1073c35(T0* closed_C);
void gc_mark_agenT608f608l1073c35(se_agenT608f608l1073c35*u);
typedef struct _se_agenT608f608l61c33 se_agenT608f608l61c33;
struct _se_agenT608f608l61c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT608f608l61c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT608f608l61c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT608f608l61c33(T0* closed_C);
void gc_mark_agenT608f608l61c33(se_agenT608f608l61c33*u);
typedef struct _se_agenT608f608l1048c37 se_agenT608f608l1048c37;
struct _se_agenT608f608l1048c37{Tid id;
int creation_mold_id;
void(*afp)(se_agenT608f608l1048c37*,T0*);
void(*gc_mark_agent_mold)(se_agenT608f608l1048c37*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT608f608l1048c37(T0* closed_C);
void gc_mark_agenT608f608l1048c37(se_agenT608f608l1048c37*u);
typedef struct _se_agenT608f608l1056c32 se_agenT608f608l1056c32;
struct _se_agenT608f608l1056c32{Tid id;
int creation_mold_id;
void(*afp)(se_agenT608f608l1056c32*,T0*);
void(*gc_mark_agent_mold)(se_agenT608f608l1056c32*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT608f608l1056c32(T0* closed_C);
void gc_mark_agenT608f608l1056c32(se_agenT608f608l1056c32*u);
typedef struct _se_agenT608f608l1003c35 se_agenT608f608l1003c35;
struct _se_agenT608f608l1003c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT608f608l1003c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT608f608l1003c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT608f608l1003c35(T0* closed_C);
void gc_mark_agenT608f608l1003c35(se_agenT608f608l1003c35*u);
/*C_CODE_COMPILER*/void r608compile_as_require_n(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_compound(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608not_yet_implemented(T608* C);
/*C_CODE_COMPILER*/void r608visit_check_compound(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_inspect_as_switch(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_e_void(T0* a1);
/*C_CODE_COMPILER*/void r608compile_code(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_old_manifest_array(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_class_invariant(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_inspect_statement(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_as_check_compound(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_feature_call(T608* C,T0* a1);
/*C_CODE_COMPILER*/T0* r608cpp(void);
/*C_CODE_COMPILER*/void r608visit_manifest_generic(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_run_time_error_instruction(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_assertion(T608* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608visit_fake_target(T0* a1);
/*C_CODE_COMPILER*/void r608visit_real_constant(T0* a1);
/*C_CODE_COMPILER*/void r608visit_no_dispatch(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_argument_name2(T0* a1);
/*C_CODE_COMPILER*/void r608compile_as_require_1(T608* C,T0* a1);
/*C_CODE_COMPILER*/T0* r608pending_c_function_counter_tag_values(void);
/*C_CODE_COMPILER*/void r608visit_address_of(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_create_writable(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_inspect_as_ifthenelse(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_assertion_list(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_retry_instruction(T0* a1);
/*C_CODE_COMPILER*/void r608visit_e_false(T0* a1);
/*C_CODE_COMPILER*/void r608visit_manifest_string(T0* a1);
/*C_CODE_COMPILER*/void r608visit_writable_attribute_name(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_c_inline(T0* a1);
/*C_CODE_COMPILER*/void r608visit_call_prefix_not(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_arg(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_assignment_test(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_implicit_cast(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_no_invariant_wrapper(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_internal_local2(T608* C,T0* a1);
/*C_CODE_COMPILER*/T2 r608pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r608open_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608visit_ensure_assertion(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_expression(T608* C,T0* a1);
/*C_CODE_COMPILER*/T0* r608pending_c_function_counter_tag_key(void);
/*C_CODE_COMPILER*/void r608visit_create_expression(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_e_true(T0* a1);
/*C_CODE_COMPILER*/void r608compile_precursor(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608set_internal_c_local_tag(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608unlock_internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/void r608visit_when_clause(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608cmp_expanded_with_void(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_sedb(T0* a1);
/*C_CODE_COMPILER*/void r608visit_built_in_eq_neq(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r608compile_assertion_as_require_n(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_when_clause_as_switch(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608put_start_position(T0* a1);
/*C_CODE_COMPILER*/void r608visit_result(T0* a1);
/*C_CODE_COMPILER*/void r608set_pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r608visit_dynamic_dispatch_temporary1(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608cmp_user_expanded(T608* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608visit_dynamic_dispatch_temporary2(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_manifest_tuple(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_character(T3 a1);
/*C_CODE_COMPILER*/void r608compile_as_require(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_fake_tuple(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_debug_compound(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608create_expression_support(T608* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608visit_character_constant(T0* a1);
/*C_CODE_COMPILER*/void r608visit_integer_constant(T0* a1);
/*C_CODE_COMPILER*/void r608visit_closed_operand(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_agent_instruction(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_abstract_current(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_void_call(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_generator_generating_type(T0* a1);
/*C_CODE_COMPILER*/void r608args_compile_to_c(T608* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608put_c_field_name(T0* a1);
/*C_CODE_COMPILER*/void r608visit_unused_expression(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_null_pointer(T0* a1);
/*C_CODE_COMPILER*/void r608visit_e_old(T0* a1);
/*C_CODE_COMPILER*/void r608visit_non_void_no_dispatch(T0* a1);
/*C_CODE_COMPILER*/void r608visit_agent_creation(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_dynamic_dispatch_temporary1_id(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608crash(T608* C);
/*C_CODE_COMPILER*/void r608visit_ifthenelse(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_create_instruction(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_assertion(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_local_name2(T0* a1);
/*C_CODE_COMPILER*/void r608compile_manifest_string_inspector(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_loop_instruction(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile(T608* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608visit_ifthen(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_agent_definition_call(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_require_assertion(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_call_infix_ge(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_compound_expression(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608compile_agent_void_call(T608* C,T0* a1,T333 a2,T0* a3);
/*C_CODE_COMPILER*/void r608visit_agent_expression(T608* C,T0* a1);
/*C_CODE_COMPILER*/T0* r608internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/T0* r608internal_c_local_tag_key(void);
/*C_CODE_COMPILER*/void r608compile_as_loop_invariant(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_call_infix_gt(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_open_operand(T0* a1);
/*C_CODE_COMPILER*/void r608closed_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r608visit_void_proc_call(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_call_infix_le(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_loop_variant(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608c2c_cast_op(T608* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r608visit_assignment_attempt(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_static_call_0_c(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_fake_argument(T0* a1);
/*C_CODE_COMPILER*/void r608cmp_reference(T608* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r608visit_call_infix_lt(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_expression_with_comment(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608visit_assignment(T608* C,T0* a1);
/*C_CODE_COMPILER*/void r608cmp_basic_eiffel_expanded(T608* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r608visit_raw_create_instruction(T608* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612set_pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_void_call(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_create_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_feature_call(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_fake_tuple(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_e_false(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_ge(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_implicit_cast(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_integer_constant(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r612internal_c_local_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_compound_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612set_internal_c_local_tag(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_argument_name2(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_dynamic_dispatch_temporary1_id(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r612pending_c_function_counter_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_plus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_agent_definition_call(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_old_manifest_array(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_gt(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612put_c_field_name(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r612pending_c_function_counter_tag_values(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r612internal_c_local_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_le(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_times(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_prefix_not(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_prefix_freeop(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_lt(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_generator_generating_type(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r612cpp(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_minus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612args_compile_to_c(T612* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_or(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_prefix_minus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_or_else(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_real_constant(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_agent_creation(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_prefix_plus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_int_rem(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_static_call_0_c(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_div(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_no_dispatch(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_character_constant(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_dynamic_dispatch_temporary1(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_null_pointer(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_dynamic_dispatch_temporary2(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_e_true(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_code(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612crash(T612* C);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_implies(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_agent_void_call(T612* C,T0* a1,T333 a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_(T612* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_assignment_test(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612create_expression_support(T612* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile(T612* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_expression_with_comment(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_abstract_current(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_assertion(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_function_call_0(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_manifest_string(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_function_call_1(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612c2c_cast_op(T612* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_non_void_no_dispatch(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_manifest_tuple(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_closed_operand(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_xor(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612open_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_open_operand(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_and_then(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612cmp_user_expanded(T612* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_local_name2(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_e_old(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T2 r612pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_int_div(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_create_writable(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_and(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_freeop(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_fake_target(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_writable_attribute_name(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_internal_local2(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_address_of(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_fake_argument(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_e_void(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_character(T3 a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_agent_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_loop_variant(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_precursor(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612cmp_expanded_with_void(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_manifest_generic(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612compile_arg(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612cmp_reference(T612* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_built_in_eq_neq(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_precursor_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612closed_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_result(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_function_call_n(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612cmp_basic_eiffel_expanded(T612* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612visit_call_infix_power(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_void_call(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_create_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_fake_tuple(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_e_false(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_ge(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_implicit_cast(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_integer_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_argument_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_dynamic_dispatch_temporary1_id(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_plus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_old_manifest_array(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_gt(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_le(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_times(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_prefix_not(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_prefix_freeop(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_lt(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_generator_generating_type(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_minus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_or(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_prefix_minus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_or_else(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_real_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_agent_creation(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_prefix_plus(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_int_rem(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_static_call_0_c(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_div(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_no_dispatch(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_character_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_dynamic_dispatch_temporary1(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_null_pointer(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_dynamic_dispatch_temporary2(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_e_true(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_implies(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_assignment_test(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_expression_with_comment(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_abstract_current(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_assertion(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_function_call_0(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_manifest_string(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_function_call_1(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_non_void_no_dispatch(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_manifest_tuple(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_closed_operand(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_xor(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_open_operand(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_and_then(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_local_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_e_old(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_int_div(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_create_writable(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_and(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_freeop(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_fake_target(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_writable_attribute_name(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_internal_local2(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_address_of(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_fake_argument(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_e_void(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_agent_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_loop_variant(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_manifest_generic(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_built_in_eq_neq(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_precursor_expression(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_result(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_function_call_n(T612* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r612_P_606_visit_call_infix_power(T612* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614not_yet_implemented(T614* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r614visit_native_java(T614* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614visit_native_built_in(T614* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r614system_tools(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r614extra_c_prototype_in_cpp_out_h_buffer(T333 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r614extra_c_prototype(T333 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_mapping_integer_function(T614* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r614visit_native_c_plus_plus(T614* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_deep_twin_body(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r614cpp(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r614mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_FUNCTION_MAPPER*/void r614visit_native_c(T614* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_modular_computation(T2 a1,T3 a2);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_field_access(T0* a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r614crash(T614* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r614visit_native_plug_in(T614* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614compile(T614* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_mapping_real(T614* C);
/*C_NATIVE_FUNCTION_MAPPER*/T6 r614expanded_initializer(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614is_deep_equal_c_code(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614fe_c2c(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_mapping_natural_function(T614* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_mapping_native_array_function(T614* C);
extern T0*oBC28capacity_name;
extern int fBC28capacity_name;
/*C_NATIVE_FUNCTION_MAPPER*/T0* r614capacity_name(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r614c_mapping_standard_twin(T614* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r614wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615visit_native_c(T615* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615c_mapping_native_array_procedure(T615* C);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615fe_c2c(T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/T0* r615cpp(void);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615compile(T615* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615extra_c_prototype_in_cpp_out_h_buffer(T333 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615visit_native_built_in(T615* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615visit_native_c_plus_plus(T615* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615visit_native_java(T615* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615extra_c_prototype(T333 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615c_mapping_integer_procedure(T615* C);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615visit_native_plug_in(T615* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r615mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_C_DEFINITION*/void r616make(T616* C);
/*C_NATIVE_C_DEFINITION*/void r616c_plus_plus_procedure_definition(T616* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/T0* r616cpp(void);
/*C_NATIVE_C_DEFINITION*/void r616compile(T616* C,T0* a1,T0* a2);
/*C_NATIVE_C_DEFINITION*/void r616extra_c_prototype_in_cpp_out_h_buffer(T333 a1,T0* a2,T0* a3);
/*C_NATIVE_C_DEFINITION*/void r616visit_native_c_plus_plus(T616* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/void r616c_plus_plus_function_definition(T616* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r617put_c_field_name(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r617c_pointer_to_type(T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r617mapping_c_inside_introspect(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r617cpp(void);
/*C_INTROSPECTION_FUNCTION*/void r617compile(T617* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r617c_return_introspect(T0* a1,T0* a2,T0* a3);
/*C_INTROSPECTION_FUNCTION*/void r617visit_live_type(T617* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r617visit_run_feature_2(T617* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r617visit_run_feature_6(T617* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/T0* r618cpp(void);
/*C_INTROSPECTION_DISPLAY*/void r618compile(T618* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r618visit_live_type(T618* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r618visit_run_feature_2(T618* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r618visit_run_feature_6(T618* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_like_feature_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/T0* r619for(T619* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_like_current_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_like_argument_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_formal_generic_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619crash(T619* C);
/*C_TYPE_FOR_TARGET*/void r619visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r619visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_like_feature_type_mark(T621* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r621for(T621* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_like_current_type_mark(T621* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_like_argument_type_mark(T621* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_formal_generic_type_mark(T621* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621crash(T621* C);
/*C_TYPE_FOR_RESULT*/void r621visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r621for_external(T621* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r621visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_like_feature_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/T0* r620for(T620* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_like_current_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_like_argument_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_formal_generic_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620crash(T620* C);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r620visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_like_feature_type_mark(T622* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/T0* r622for(T622* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_like_current_type_mark(T622* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_like_argument_type_mark(T622* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_formal_generic_type_mark(T622* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622crash(T622* C);
/*C_TYPE_FOR_VA_ARG*/void r622visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r622visit_non_empty_tuple_type_mark(T0* a1);
/*C_NEED_STRUCT*/void r623visit_empty_tuple_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623visit_string_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623visit_like_feature_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/T6 r623for(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623visit_like_current_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623visit_like_argument_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623set_flag_for(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623visit_formal_generic_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623visit_array_type_mark(T623* C,T0* a1);
/*C_NEED_STRUCT*/void r623crash(T623* C);
/*C_NEED_STRUCT*/void r623visit_non_empty_tuple_type_mark(T623* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r624visit_native_c(T624* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r624for(T624* C,T0* a1,T0* a2,T0* a3);
/*C_NATIVE_NEED_WRAPPER*/T6 r624expanded_initializer(T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r624visit_native_built_in(T624* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r624visit_native_c_plus_plus(T624* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r624for_rf7(T624* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r624for_rf8(T624* C,T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r625set_tag(T0* a1,T0* a2);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625get_tag(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625is_enabled(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r625is_native_array_collector_enabled_(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625cpp(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625must_collect(T0* a1);
extern T0*oBC28mark_native_arrays_name;
extern int fBC28mark_native_arrays_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625mark_native_arrays_name(void);
extern T0*oBC625yes;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r625collect(T0* a1);
extern T0*oBC625tag_key;
extern int fBC625tag_key;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625tag_key(void);
extern T0*oBC625no;
extern T0*oBC28mark_item_name;
extern int fBC28mark_item_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r625mark_item_name(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r625is_native_array_collector_enabled(T0* a1);
typedef struct _se_agenT363f363l154c36 se_agenT363f363l154c36;
struct _se_agenT363f363l154c36{Tid id;
int creation_mold_id;
void(*afp)(se_agenT363f363l154c36*,T0*);
void(*gc_mark_agent_mold)(se_agenT363f363l154c36*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT363f363l154c36(T0* closed_C,T0* closed_a1);
void gc_mark_agenT363f363l154c36(se_agenT363f363l154c36*u);
typedef struct _se_agenT363f363l472c44 se_agenT363f363l472c44;
struct _se_agenT363f363l472c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT363f363l472c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT363f363l472c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT363f363l472c44(T0* closed_a1);
void gc_mark_agenT363f363l472c44(se_agenT363f363l472c44*u);
/*LIVE_TYPE*/T0* r363tag(T363* C,T0* a1);
/*LIVE_TYPE*/void r363create_function_register(T363* C,T0* a1);
/*LIVE_TYPE*/void r363sort_wam(T0* a1);
/*LIVE_TYPE*/T6 r363generating_type_used(T363* C);
/*LIVE_TYPE*/T0* r363at(T363* C,T0* a1);
/*LIVE_TYPE*/void r363collect(T363* C,T0* a1);
extern T0*oBC28deep_memcmp_name;
extern int fBC28deep_memcmp_name;
/*LIVE_TYPE*/T0* r363deep_memcmp_name(void);
/*LIVE_TYPE*/void r363collect_is_deep_equal(T363* C);
/*LIVE_TYPE*/T6 r363is_native_array(T363* C);
/*LIVE_TYPE*/void r363simplify(T363* C);
/*LIVE_TYPE*/T6 r363generator_used(T363* C);
/*LIVE_TYPE*/T0* r363dynamic_feature(T363* C,T0* a1);
/*LIVE_TYPE*/T6 r363no_dispatch_collect(T363* C,T0* a1);
/*LIVE_TYPE*/void r363propagate_features(T363* C);
/*LIVE_TYPE*/T2 r363feature_count(T363* C);
/*LIVE_TYPE*/void r363do_collect(T363* C);
/*LIVE_TYPE*/T6 r363side_effect_free_default_create(T363* C);
/*LIVE_TYPE*/T6 r363gt(T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r363get_memory_dispose(T363* C);
/*LIVE_TYPE*/void r363safety_check(T363* C);
/*LIVE_TYPE*/void r363make_run_features(T363* C);
/*LIVE_TYPE*/T6 r363_ix_60(T363* C,T0* a1);
/*LIVE_TYPE*/T6 r363is_empty_expanded(T363* C);
/*LIVE_TYPE*/T6 r363can_be_assigned_to(T363* C,T0* a1);
/*LIVE_TYPE*/void r363make(T363* C,T0* a1);
/*LIVE_TYPE*/void r363collect_sub_type(T363* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r363echo(void);
/*LIVE_TYPE*/T0* r363copy_run_feature(T363* C);
/*LIVE_TYPE*/void r363allow_collecting(T363* C,T0* a1);
/*LIVE_TYPE*/void r363adapt_run_features_and_class_invariant(T363* C);
extern T0*oBC28is_deep_equal_name;
extern int fBC28is_deep_equal_name;
/*LIVE_TYPE*/T0* r363is_deep_equal_name(void);
/*LIVE_TYPE*/void r363collect_deep_twin(T363* C);
/*LIVE_TYPE*/void r363set_at_run_time(T363* C);
/*LIVE_TYPE*/T0* r363precursor_run_feature(T363* C,T0* a1,T0* a2);
/*LIVE_TYPE*/void r363set_generator_used(T363* C);
/*LIVE_TYPE*/void r363forbid_collecting(T363* C,T0* a1);
extern T0*oBC28any_is_deep_equal_fs;
extern int fBC28any_is_deep_equal_fs;
/*LIVE_TYPE*/T0* r363any_is_deep_equal_fs(void);
/*LIVE_TYPE*/T6 r363is_reference(T363* C);
/*LIVE_TYPE*/T0* r363default_create_run_feature(T363* C);
extern T0*oBC28deep_twin_from_name;
extern int fBC28deep_twin_from_name;
/*LIVE_TYPE*/T0* r363deep_twin_from_name(void);
/*LIVE_TYPE*/void r363inline_dynamic_dispatch(T363* C,T0* a1);
extern T0*oBC363new_features;
extern int fBC363new_features;
/*LIVE_TYPE*/T0* r363new_features(void);
extern T0*oBC28any_deep_twin_fs;
extern int fBC28any_deep_twin_fs;
/*LIVE_TYPE*/T0* r363any_deep_twin_fs(void);
/*LIVE_TYPE*/T0* r363structure_signature(T363* C);
/*LIVE_TYPE*/T0* r363writable_attributes(T363* C);
/*LIVE_TYPE*/void r363set_tag(T363* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r363id_provider(void);
/*LIVE_TYPE*/void r363id_extra_information(T363* C,T0* a1);
extern T0*oBC28deep_twin_name;
extern int fBC28deep_twin_name;
/*LIVE_TYPE*/T0* r363deep_twin_name(void);
/*LIVE_TYPE*/void r363do_collect_is_deep_equal(T363* C);
/*LIVE_TYPE*/T0* r363live_type_extra_collectors(void);
/*LIVE_TYPE*/void r363accept(T363* C,T0* a1);
/*LIVE_TYPE*/void r363forget_previous_collect(T363* C);
/*LIVE_TYPE*/T6 r363is_tagged(T363* C);
/*LIVE_TYPE*/void r363merge_features_from(T363* C,T0* a1);
/*LIVE_TYPE*/T6 r363collected(T363* C,T0* a1);
/*CLASS_NAME*/T82*create82unknown_position(T0* a1);
/*CLASS_NAME*/T82*create82make(T0* a1,T333 a2);
/*CLASS_NAME*/T6 r82is_equal(T82* C,T0* a1);
/*CLASS_NAME*/void r82make(T82* C,T0* a1,T333 a2);
/*CLASS_NAME*/T0* r82try_class_text(T82* C);
/*CLASS_NAME*/void r82set_hashed_name(T82* C,T0* a1);
/*CLASS_NAME*/void r82unknown_position(T82* C,T0* a1);
/*CLASS_NAME*/T0* r82class_text(T82* C);
/*CLASS_NAME*/T0* r82twin(T82* C);
/*CLASS_NAME*/T6 r82get_export_permission_of(T82* C,T0* a1);
/*CLASS_NAME*/T2 r82tuple_count(T82* C);
/*CLASS_TEXT*/void r84id_extra_information(T84* C,T0* a1);
/*CLASS_TEXT*/void r84create_parent_lists_using(T84* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CLASS_TEXT*/T0* r84proper_name_get(T84* C,T0* a1);
/*CLASS_TEXT*/T0* r84declaration_type_of_like_current(T84* C);
extern T0*oBC84fn_buffer;
extern int fBC84fn_buffer;
/*CLASS_TEXT*/T0* r84fn_buffer(void);
/*CLASS_TEXT*/T6 r84has_creation_check(T84* C,T0* a1,T333 a2,T0* a3);
/*CLASS_TEXT*/T0* r84next_tuple(T84* C);
/*CLASS_TEXT*/void r84add_creation_clause(T84* C,T0* a1);
/*CLASS_TEXT*/void r84set_invariant(T84* C,T333 a1,T0* a2,T0* a3);
extern T0*oBC28default_create_name;
extern int fBC28default_create_name;
/*CLASS_TEXT*/T0* r84default_create_name(void);
/*CLASS_TEXT*/T6 r84all_check(T84* C);
/*CLASS_TEXT*/void r84set_is_expanded(T84* C);
/*CLASS_TEXT*/T0* r84default_root_procedure_name(T84* C);
/*CLASS_TEXT*/void r84fatal_error_when_no_creation_clause(T84* C);
/*CLASS_TEXT*/void r84fatal_undefine(T84* C,T0* a1);
/*CLASS_TEXT*/T0* r84proper_get(T84* C,T0* a1);
/*CLASS_TEXT*/T6 r84proper_has(T84* C,T0* a1);
/*CLASS_TEXT*/T0* r84declaration_type_of_like_current_(T84* C,T333 a1);
/*CLASS_TEXT*/T1 r84insert_inherit_test(T84* C,T0* a1);
/*CLASS_TEXT*/T6 r84require_check(T84* C);
/*CLASS_TEXT*/void r84set_is_deferred(T84* C);
/*CLASS_TEXT*/void r84set_tag(T84* C,T0* a1,T0* a2);
/*CLASS_TEXT*/void r84formal_generic_list_count_check(T84* C,T333 a1,T0* a2);
/*CLASS_TEXT*/T0* r84any_copy_feature(T84* C);
/*CLASS_TEXT*/T6 r84inherits_from(T84* C,T0* a1);
/*CLASS_TEXT*/T0* r84user_expanded_default_create_stamp(T84* C,T0* a1);
/*CLASS_TEXT*/void r84initialize_and_check_level_1(T84* C);
/*CLASS_TEXT*/T0* r84root_creation_search(T84* C,T0* a1);
/*CLASS_TEXT*/T6 r84loop_check(T84* C);
/*CLASS_TEXT*/T0* r84level_name(T2 a1);
/*CLASS_TEXT*/void r84finish_create(T84* C);
/*CLASS_TEXT*/void r84extra_expanded_check(T84* C,T0* a1);
/*CLASS_TEXT*/T6 r84ensure_check(T84* C);
/*CLASS_TEXT*/void r84add_feature_clause(T84* C,T0* a1);
/*CLASS_TEXT*/T6 r84obvious_resolve_static_binding(T84* C,T0* a1,T6 a2);
/*CLASS_TEXT*/void r84check_level_2(T84* C,T0* a1);
/*CLASS_TEXT*/T0* r84non_written(T84* C,T0* a1,T0* a2);
/*CLASS_TEXT*/T0* r84id_provider(void);
/*CLASS_TEXT*/void r84make(T84* C,T0* a1,T0* a2,T0* a3,T10 a4);
/*CLASS_TEXT*/T6 r84invariant_check(T84* C);
/*CLASS_TEXT*/void r84creation_list_check(T84* C,T0* a1);
/*CLASS_TEXT*/void r84add_index_clause(T84* C,T0* a1);
/*CLASS_TEXT*/void r84error_vtec1(T84* C);
extern T0*oBC28any_default_create_fs;
extern int fBC28any_default_create_fs;
/*CLASS_TEXT*/T0* r84any_default_create_fs(void);
/*CLASS_TEXT*/void r84obsolete_warning_check(T84* C,T333 a1);
/*CLASS_TEXT*/T0* r84tag(T84* C,T0* a1);
extern T0*oBC28any_default_rescue_fs;
extern int fBC28any_default_rescue_fs;
/*TYPE*/T0* r270any_default_rescue_fs(void);
/*TYPE*/T6 r270has_simple_feature_name(T270* C,T0* a1);
/*TYPE*/T0* r270name_from_string(T270* C,T0* a1);
/*TYPE*/T6 r270is_agent(T270* C);
/*TYPE*/T0* r270long_name(T270* C);
/*TYPE*/void r270add_parent(T270* C,T0* a1);
/*TYPE*/T0* r270expanded_default_create_stamp(T270* C);
/*TYPE*/void r270collect_features(T270* C);
/*TYPE*/void r270specialize_2(T270* C);
/*TYPE*/T6 r270is_native_array(T270* C);
/*TYPE*/T2 r270id(T270* C);
/*TYPE*/T6 r270is_pointer(T270* C);
/*TYPE*/void r270collect_default_rescue(T270* C,T0* a1);
/*TYPE*/T0* r270parent_edge_load(T270* C,T2 a1);
/*TYPE*/void r270do_collect(T270* C);
/*TYPE*/T2 r270parents_count(T270* C);
/*TYPE*/T1 r270insert_inherit_test(T270* C,T0* a1);
/*TYPE*/T0* r270has_only_one_conformant_parent(T270* C);
/*TYPE*/T6 r270is_real(T270* C);
/*TYPE*/T0* r270feature_stamp_of(T270* C,T0* a1);
/*TYPE*/T6 r270is_fixed_string(T270* C);
/*TYPE*/T6 r270is_empty_expanded(T270* C);
/*TYPE*/T0* r270find_manifest_expression_for(T270* C,T0* a1,T0* a2);
/*TYPE*/T0* r270feature_accumulator(void);
/*TYPE*/T6 r270can_be_assigned_to(T270* C,T0* a1);
/*TYPE*/T6 r270is_natural(T270* C);
/*TYPE*/T6 r270print_feature_hierarchy(T270* C,T0* a1,T330 a2,T6 a3);
/*TYPE*/void r270node_init(T270* C,T0* a1);
/*TYPE*/T6 r270is_integer(T270* C);
/*TYPE*/void r270make(T270* C,T0* a1);
/*TYPE*/T6 r270is_character(T270* C);
/*TYPE*/T6 r270is_expanded(T270* C);
/*TYPE*/T0* r270copy_stamp(T270* C);
/*TYPE*/T6 r270is_kernel_expanded(T270* C);
/*TYPE*/void r270adapt_class_invariant(T270* C);
/*TYPE*/void r270add_feature(T270* C,T0* a1,T0* a2);
/*TYPE*/T6 r270is_reference(T270* C);
/*TYPE*/void r270build_actual_invariant(T270* C);
/*TYPE*/void r270inline_dynamic_dispatch_for_class_invariant(T270* C,T0* a1);
/*TYPE*/void r270do_all_address_of(T270* C,T0* a1);
extern T0*oBC28default_rescue_name;
extern int fBC28default_rescue_name;
/*TYPE*/T0* r270default_rescue_name(void);
/*TYPE*/T6 r270inherits_from(T270* C,T0* a1);
/*TYPE*/void r270deconnect_current(T270* C);
/*TYPE*/T0* r270open_arguments(T270* C);
/*TYPE*/void r270collect_local_features(T270* C);
/*TYPE*/T0* r270writable_attributes(T270* C);
/*TYPE*/T0* r270find_anonymous_feature_for(T270* C,T0* a1,T0* a2);
/*TYPE*/T6 r270is_user_expanded(T270* C);
/*TYPE*/T2 r270collected_feature_count(T270* C);
/*TYPE*/T6 r270is_boolean(T270* C);
/*TYPE*/void r270collect_one_feature(T270* C,T0* a1,T2 a2);
/*TYPE*/void r270add_seeds(T270* C,T0* a1,T0* a2,T6 a3);
/*TYPE*/T6 r270direct_non_void_call_flag(T270* C);
/*TYPE*/T6 r270is_string(T270* C);
/*TYPE*/T6 r270is_tuple(T270* C);
/*TYPE*/void r270print_graph_cycle(T270* C,T0* a1);
/*TYPE*/T0* r270agent_result(T270* C);
/*TYPE*/T6 r270is_always_void(T270* C);
/*TYPE*/void r270inheritance_cycle_check(T270* C);
/*TYPE*/void r270address_of_register(T270* C,T0* a1);
/*TYPE*/void r270_P_271_add_parent(T270* C,T0* a1);
/*TYPE*/void r270_P_272_make(T270* C,T0* a1);
/*TYPE*/void r270_P_272_add_parent(T270* C,T0* a1);
/*FEATURE_STAMP*/void r76add_anonymous_feature(T76* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r76make(T76* C,T0* a1);
/*FEATURE_STAMP*/T0* r76simplify(T76* C,T0* a1);
/*FEATURE_STAMP*/void r76specialize_2(T76* C,T0* a1);
/*FEATURE_STAMP*/T6 r76has_run_feature_for(T76* C,T0* a1);
/*FEATURE_STAMP*/T0* r76run_feature_for(T76* C,T0* a1);
/*FEATURE_STAMP*/T6 r76has_anonymous_feature_for(T76* C,T0* a1);
/*FEATURE_STAMP*/void r76rename_notify(T76* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T0* r76specialize_thru(T76* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/void r76update_anonymous_feature(T76* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T6 r76has_type(T76* C,T0* a1);
/*FEATURE_STAMP*/void r76register_type(T76* C,T0* a1);
/*FEATURE_STAMP*/T0* r76resolve_static_binding_for_insert(T76* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r76fake_feature_call(T76* C,T333 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T6 r76print_feature_hierarchy(T76* C,T0* a1,T0* a2,T330 a3,T6 a4);
/*FEATURE_STAMP*/void r76rename_down_notify(T76* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T6 r76add_seeds(T76* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*FEATURE_STAMP*/T0* r76feature_accumulator(void);
/*FEATURE_STAMP*/T0* r76resolve_static_binding_for_inherit(T76* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r76make_run_feature(T76* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r76fake_effective_arg_list(T333 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T0* r76anonymous_feature_if_exist(T76* C,T0* a1);
/*FEATURE_STAMP*/T0* r76resolve_static_binding_for(T76* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r76anonymous_feature(T76* C,T0* a1);
/*STATUS*/void r527make(T527* C);
/*STATUS*/void r527info(T527* C);
/*STATUS*/void r527push_phase(T527* C,T2 a1);
/*STATUS*/void r527pop_phase(T527* C);
/*STATUS*/void r527set_generating(T527* C);
/*STATUS*/T0* r527echo(void);
/*STATUS*/void r527set_collecting(T527* C);
/*STATUS*/void r527set_inlining_dynamic_dispatch(T527* C);
/*STATUS*/void r527set_adapting(T527* C);
/*STATUS*/void r527set_safety_checking(T527* C);
/*STATUS*/void r527start_specializing(T527* C,T0* a1);
extern T0*oBC527internal_phase_stack;
extern int fBC527internal_phase_stack;
/*STATUS*/T0* r527internal_phase_stack(void);
/*STATUS*/void r527end_specializing(T527* C,T0* a1);
/*CODE_ACCUMULATOR*/void r324make(T324* C);
/*CODE_ACCUMULATOR*/void r324open_new_context(T324* C);
/*CODE_ACCUMULATOR*/T0* r324current_context_to_instruction(T324* C);
/*CODE_ACCUMULATOR*/T0* r324echo(void);
/*CODE_ACCUMULATOR*/void r324add_sedb(T324* C,T333 a1,T3 a2);
/*CODE_ACCUMULATOR*/T0* r324current_context_to_expression(T324* C);
/*CODE_ACCUMULATOR*/void r324echo_information(T324* C);
/*CODE_ACCUMULATOR*/T0* r324current_context_to_code(T324* C);
/*CODE_ACCUMULATOR*/void r324close_current_context(T324* C);
/*ASSIGNMENT_HANDLER*/void r95recompute_all_run_time_sets(void);
/*ASSIGNMENT_HANDLER*/T0* r95echo(void);
extern T0*oBC95external_types;
extern int fBC95external_types;
/*ASSIGNMENT_HANDLER*/T0* r95external_types(void);
/*ASSIGNMENT_HANDLER*/void r95from_external(T95* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r95implicit_cast(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r95graph_node_for(T0* a1);
/*ASSIGNMENT_HANDLER*/void r95collect_force(T95* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r95id_extra_information(T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r95from_external_(T95* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r95echo_information(void);
extern T0*oBC95graph_node_dictionary;
extern int fBC95graph_node_dictionary;
/*ASSIGNMENT_HANDLER*/T0* r95graph_node_dictionary(void);
/*ASSIGNMENT_HANDLER*/void r95reset(void);
/*ASSIGNMENT_HANDLER*/T0* r95implicit_cast_(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/void r95collect_normal(T95* C,T0* a1,T0* a2);
typedef struct _se_agenT93f93l210c20 se_agenT93f93l210c20;
struct _se_agenT93f93l210c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT93f93l210c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT93f93l210c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT93f93l210c20(void);
void gc_mark_agenT93f93l210c20(se_agenT93f93l210c20*u);
typedef struct _se_agenT93f93l200c20 se_agenT93f93l200c20;
struct _se_agenT93f93l200c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT93f93l200c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT93f93l200c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT93f93l200c20(void);
void gc_mark_agenT93f93l200c20(se_agenT93f93l200c20*u);
/*MANIFEST_STRING_POOL*/void r93collect_string(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r93se_ums(T93* C);
extern T0*oBC93agent_exists_in_collected_storage_id_set;
extern int fBC93agent_exists_in_collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r93agent_exists_in_collected_storage_id_set(void);
/*MANIFEST_STRING_POOL*/void r93make_unique(T0* a1,T0* a2);
extern T0*oBC28calloc_name;
extern int fBC28calloc_name;
/*MANIFEST_STRING_POOL*/T0* r93calloc_name(void);
extern T0*oBC28count_name;
extern int fBC28count_name;
/*MANIFEST_STRING_POOL*/T0* r93count_name(void);
/*MANIFEST_STRING_POOL*/T2 r93storage_alias_count(void);
/*MANIFEST_STRING_POOL*/T2 r93collected_once_count(void);
extern T0*oBC93agent_exists_in_collected_once_variables;
extern int fBC93agent_exists_in_collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r93agent_exists_in_collected_once_variables(void);
extern T0*oBC93collected_once_variables;
extern int fBC93collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r93collected_once_variables(void);
/*MANIFEST_STRING_POOL*/T0* r93collect(T93* C,T0* a1,T6 a2,T6 a3,T0* a4);
extern T0*oBC93storage_alias;
extern int fBC93storage_alias;
/*MANIFEST_STRING_POOL*/T0* r93storage_alias(void);
extern T0*oBC28manifest_initialize_name;
extern int fBC28manifest_initialize_name;
/*MANIFEST_STRING_POOL*/T0* r93manifest_initialize_name(void);
/*MANIFEST_STRING_POOL*/T0* r93capacity_name(void);
/*MANIFEST_STRING_POOL*/void r93reset(T93* C);
/*MANIFEST_STRING_POOL*/T6 r93exists_in_collected_storage_id_set(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r93storage_alias_item(T2 a1);
/*MANIFEST_STRING_POOL*/T6 r93exists_in_collected_once_variables(T0* a1);
extern T0*oBC28storage_name;
extern int fBC28storage_name;
/*MANIFEST_STRING_POOL*/T0* r93storage_name(void);
/*MANIFEST_STRING_POOL*/void r93append_once_variable_index(T0* a1,T2 a2);
/*MANIFEST_STRING_POOL*/T0* r93collected_once_item(T2 a1);
extern T0*oBC93collected_storage_id_set;
extern int fBC93collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r93collected_storage_id_set(void);
extern T0*oBC99collected_manifest_generic;
extern int fBC99collected_manifest_generic;
/*MANIFEST_GENERIC_POOL*/T0* r99collected_manifest_generic(void);
extern T0*oBC112function_list;
extern int fBC112function_list;
/*ONCE_ROUTINE_POOL*/T0* r112function_list(void);
/*ONCE_ROUTINE_POOL*/T6 r112is_precomputed(T0* a1);
extern T0*oBC28precomputable_routine_detector;
/*ONCE_ROUTINE_POOL*/void r112unique_result_in(T0* a1,T0* a2);
/*ONCE_ROUTINE_POOL*/T0* r112non_void_no_dispatch_for(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r112o_flag(T0* a1);
/*ONCE_ROUTINE_POOL*/void r112collect_precomputable_function(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r112precomputable_function(T0* a1,T0* a2,T0* a3);
extern T0*oBC112precomputable_function_list;
extern int fBC112precomputable_function_list;
/*ONCE_ROUTINE_POOL*/T0* r112precomputable_function_list(void);
/*ONCE_ROUTINE_POOL*/void r112do_all_precomputed_ordered(T0* a1);
extern T0*oBC112collected_precomputable_function;
extern int fBC112collected_precomputable_function;
/*ONCE_ROUTINE_POOL*/T0* r112collected_precomputable_function(void);
/*ONCE_ROUTINE_POOL*/void r112unique_id_in(T0* a1,T0* a2);
extern T0*oBC112procedure_list;
extern int fBC112procedure_list;
/*ONCE_ROUTINE_POOL*/T0* r112procedure_list(void);
extern T0*oBC109creation_collected_memory;
extern int fBC109creation_collected_memory;
/*AGENT_POOL*/T0* r109creation_collected_memory(void);
extern T0*oBC109launcher_collected_memory;
extern int fBC109launcher_collected_memory;
/*AGENT_POOL*/T0* r109launcher_collected_memory(void);
/*AGENT_POOL*/T0* r109agent_launcher_collect(T0* a1);
/*AGENT_POOL*/void r109notify_assignment_handler_with(T0* a1,T0* a2);
extern T0*oBC109agent_definition_set;
extern int fBC109agent_definition_set;
/*AGENT_POOL*/T0* r109agent_definition_set(void);
/*AGENT_POOL*/void r109signature_add_last(T0* a1,T0* a2);
/*AGENT_POOL*/void r109agent_creation_collect(T109* C,T0* a1,T0* a2,T0* a3);
/*AGENT_POOL*/void r109reset(T109* C);
extern T0*oBC109launcher_memory;
extern int fBC109launcher_memory;
/*AGENT_POOL*/T0* r109launcher_memory(void);
extern T0*oBC114map;
extern int fBC114map;
/*ASSIGNMENT_TEST_POOL*/T0* r114map(void);
/*ASSIGNMENT_TEST_POOL*/T0* r114new_empty_set(void);
/*ASSIGNMENT_TEST_POOL*/void r114signature_add_last(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r114collect(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r114reset(void);
extern T0*oBC114free_set_list;
extern int fBC114free_set_list;
/*ASSIGNMENT_TEST_POOL*/T0* r114free_set_list(void);
/*ASSIGNMENT_TEST_POOL*/void r114function_name_in(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST_POOL*/T2 r114count(void);
/*ASSIGNMENT_TEST_POOL*/void r114do_all(T0* a1);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_attribute_generating_type(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_type_item_generator(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_object_attribute(T78* C);
/*INTROSPECTION_HANDLER*/T6 r78is_introspectable_static_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_typed_internals(T78* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_valid_generating_type_for_na_internals(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_set_object_attribute(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_object_attribute(T78* C);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_internals_handler(T78* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_na_internals_from_generating_type(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_type_can_be_assigned_to_item(T78* C);
/*INTROSPECTION_HANDLER*/T0* r78create_blank_internals_instruction_for(T78* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_type_item_is_expanded(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_attribute_count(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_type_item_generating_type(T78* C);
/*INTROSPECTION_HANDLER*/void r78collect_internals_from_generating_type(T78* C,T0* a1,T333 a2,T0* a3);
/*INTROSPECTION_HANDLER*/void r78collect_native_array_internals_from_generating_type(T78* C,T0* a1,T333 a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_type_attribute_count(T78* C);
/*INTROSPECTION_HANDLER*/void r78start_new_body_for(T78* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_make_blank(T78* C);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_to_internals(T78* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r78specialize_body_for_any_to_internals(T78* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/T0* r78internals_of(T78* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r78arguments(T78* C);
/*INTROSPECTION_HANDLER*/T0* r78specialize_body_for_internals_handler(T78* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_attribute_is_expanded(T78* C);
/*INTROSPECTION_HANDLER*/T0* r78specialize_body_for_native_array_internals(T78* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_attribute_generator(T78* C);
/*INTROSPECTION_HANDLER*/T6 r78is_introspectable_dynamic_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r78simplify_and_wrap(T78* C,T0* a1);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_native_array_internals(T78* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_set_object_attribute(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_attribute_count(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_is_equal(T78* C);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_internals_from_generating_type(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_can_be_assigned_to_attribute(T78* C);
/*INTROSPECTION_HANDLER*/void r78collect_internals_handler(T78* C);
/*INTROSPECTION_HANDLER*/T6 r78is_internals_from_generating_type_used(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_generator(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_na_make_blank(T78* C);
/*INTROSPECTION_HANDLER*/void r78collect_internals_handler_for(T78* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r78specialize_body_for_typed_internals(T78* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_attribute_name(T78* C);
/*INTROSPECTION_HANDLER*/void r78set_and_specialize_body(T78* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r78wrap(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r78finalized_body_for_valid_generating_type_for_internals(T78* C);
/*INTROSPECTION_HANDLER*/T6 r78create_blank_internals_used_by(T78* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_is_expanded(T78* C);
/*INTROSPECTION_HANDLER*/T333 r78start_position(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_object_as_pointer(T78* C);
/*INTROSPECTION_HANDLER*/void r78specialize_body_for_type_generating_type(T78* C);
/*INTROSPECTION_HANDLER*/T6 r78is_introspectable_attribute_type(T78* C,T0* a1);
/*STRING_TYPE_MARK*/T433*create433make(T333 a1);
/*STRING_TYPE_MARK*/T6 r433is_tuple(void);
/*STRING_TYPE_MARK*/void r433make(T433* C,T333 a1);
/*STRING_TYPE_MARK*/T0* r433generic_list(void);
/*STRING_TYPE_MARK*/T6 r433is_character(void);
/*STRING_TYPE_MARK*/T0* r433written_mark(void);
extern T0*oBC433written_name;
extern int fBC433written_name;
/*STRING_TYPE_MARK*/T0* r433written_name(void);
/*STRING_TYPE_MARK*/T6 r433is_native_array(void);
/*STRING_TYPE_MARK*/T0* r433at(T433* C,T333 a1);
extern T0*oBC433long_name;
extern int fBC433long_name;
/*STRING_TYPE_MARK*/T0* r433long_name(void);
/*STRING_TYPE_MARK*/T0* r433specialize_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*STRING_TYPE_MARK*/T6 r433is_boolean(void);
/*STRING_TYPE_MARK*/T0* r433typed_internals_type_mark(T433* C,T333 a1);
/*STRING_TYPE_MARK*/T0* r433to_static(T433* C,T0* a1);
/*STRING_TYPE_MARK*/void r433accept(T433* C,T0* a1);
/*STRING_TYPE_MARK*/T6 r433same_signature_type(T433* C,T0* a1,T0* a2);
/*STRING_TYPE_MARK*/T0* r433type(void);
/*STRING_TYPE_MARK*/T0* r433signature_resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r433is_natural(void);
/*STRING_TYPE_MARK*/T0* r433default_expression(T333 a1);
/*STRING_TYPE_MARK*/void r433id_extra_information(T0* a1);
/*STRING_TYPE_MARK*/T0* r433declaration_type(T433* C);
/*STRING_TYPE_MARK*/T6 r433is_pointer(void);
/*STRING_TYPE_MARK*/T333 r433start_position(T433* C);
/*STRING_TYPE_MARK*/T6 r433is_kernel_expanded(void);
/*STRING_TYPE_MARK*/void r433set_start_position(T433* C,T333 a1);
/*STRING_TYPE_MARK*/T6 r433is_fixed_string(void);
/*STRING_TYPE_MARK*/T0* r433class_text(T433* C);
/*STRING_TYPE_MARK*/T0* r433twin(T433* C);
/*STRING_TYPE_MARK*/T6 r433is_real(void);
/*STRING_TYPE_MARK*/T6 r433is_integer(void);
/*STRING_TYPE_MARK*/void r433pretty_in(T0* a1);
/*STRING_TYPE_MARK*/T0* r433resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r433is_agent(void);
/*FEATURE_ACCUMULATOR*/void r105make(T105* C);
/*FEATURE_ACCUMULATOR*/void r105finalize(T105* C);
/*FEATURE_ACCUMULATOR*/void r105finish_insert_seeds(T105* C);
/*FEATURE_ACCUMULATOR*/T0* r105echo(void);
/*FEATURE_ACCUMULATOR*/void r105do_pending_types(T105* C);
/*FEATURE_ACCUMULATOR*/T1 r105next_state(T105* C,T1 a1,T1 a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_ACCUMULATOR*/void r105add_local_definition(T105* C,T0* a1);
extern T0*oBC105transitions;
extern int fBC105transitions;
/*FEATURE_ACCUMULATOR*/T0* r105transitions(void);
/*FEATURE_ACCUMULATOR*/T6 r105is_known(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r105new_incomplete_type(T105* C);
/*FEATURE_ACCUMULATOR*/void r105start(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r105anonymous_feature_for(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r105feature_stamp_of(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r105echo_information(T105* C);
/*FEATURE_ACCUMULATOR*/void r105register(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r105new_feature(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r105to_feature(T105* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r105add_parent_definition(T105* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_ACCUMULATOR*/void r105check_and_merge_seeds(T105* C);
/*FEATURE_ACCUMULATOR*/T1 r105transition_index(T105* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_ACCUMULATOR*/T0* r105find_type_for(T105* C,T0* a1);
/*ANY_TYPE_MARK*/T428*create428make(T333 a1);
/*ANY_TYPE_MARK*/T6 r428is_tuple(void);
/*ANY_TYPE_MARK*/void r428make(T428* C,T333 a1);
/*ANY_TYPE_MARK*/T0* r428generic_list(void);
/*ANY_TYPE_MARK*/T6 r428is_character(void);
/*ANY_TYPE_MARK*/T0* r428written_mark(T428* C);
/*ANY_TYPE_MARK*/T0* r428written_name(T428* C);
/*ANY_TYPE_MARK*/T6 r428is_native_array(void);
/*ANY_TYPE_MARK*/T0* r428at(T428* C,T333 a1);
extern T0*oBC428long_name;
extern int fBC428long_name;
/*ANY_TYPE_MARK*/T0* r428long_name(void);
/*ANY_TYPE_MARK*/T0* r428specialize_thru(T428* C,T0* a1,T0* a2,T0* a3);
/*ANY_TYPE_MARK*/T6 r428is_boolean(void);
/*ANY_TYPE_MARK*/T0* r428typed_internals_type_mark(T428* C,T333 a1);
/*ANY_TYPE_MARK*/T0* r428to_static(T428* C,T0* a1);
/*ANY_TYPE_MARK*/T2 r428id(T428* C);
/*ANY_TYPE_MARK*/void r428accept(T428* C,T0* a1);
/*ANY_TYPE_MARK*/T6 r428same_signature_type(T428* C,T0* a1,T0* a2);
/*ANY_TYPE_MARK*/T0* r428type(void);
/*ANY_TYPE_MARK*/T0* r428signature_resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r428is_natural(void);
/*ANY_TYPE_MARK*/T0* r428default_expression(T333 a1);
/*ANY_TYPE_MARK*/void r428id_extra_information(T0* a1);
/*ANY_TYPE_MARK*/T0* r428declaration_type(T428* C);
/*ANY_TYPE_MARK*/T6 r428is_pointer(void);
/*ANY_TYPE_MARK*/T333 r428start_position(T428* C);
/*ANY_TYPE_MARK*/T6 r428is_kernel_expanded(void);
/*ANY_TYPE_MARK*/void r428set_start_position(T428* C,T333 a1);
/*ANY_TYPE_MARK*/T6 r428is_fixed_string(T428* C);
/*ANY_TYPE_MARK*/T0* r428class_text(T428* C);
/*ANY_TYPE_MARK*/T0* r428twin(T428* C);
/*ANY_TYPE_MARK*/T6 r428is_real(void);
/*ANY_TYPE_MARK*/T6 r428is_integer(void);
/*ANY_TYPE_MARK*/void r428pretty_in(T428* C,T0* a1);
/*ANY_TYPE_MARK*/T0* r428resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r428is_agent(void);
extern T0*oBC689integer_alias;
extern int fBC689integer_alias;
/*TYPE_ALIASING*/T0* r689integer_alias(void);
extern T0*oBC689real_alias;
extern int fBC689real_alias;
/*TYPE_ALIASING*/T0* r689real_alias(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_like_feature_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_like_current_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_like_argument_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_agent_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/T0* r782cpp(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_formal_generic_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782compile(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782crash(T782* C);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r782visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784make(T784* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_like_feature_type_mark(T784* C,T0* a1);
extern T0*oBC28from_pointer_name;
extern int fBC28from_pointer_name;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r784from_pointer_name(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784gc_align_mark_fixed_size(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_like_current_type_mark(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784mark_attribute(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784gc_expanded(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_like_argument_type_mark(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_user_generic_type_mark(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784gc_mark_fixed_size(T784* C,T0* a1,T6 a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784gc_set_fsoh_marked(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r784cpp(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_formal_generic_type_mark(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784compile(T784* C,T0* a1);
extern int fBC784generate_once_gc_update_weak_ref_item_polymorph;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784generate_once_gc_update_weak_ref_item_polymorph(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784native_array_type_in(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784gc_reference(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T6 r784insert_native_array_collector_flag(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784gc_mark_na(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784crash(T784* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r784visit_class_type_mark(T784* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_like_feature_type_mark(T785* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_like_current_type_mark(T785* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_like_argument_type_mark(T785* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/T0* r785cpp(void);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_formal_generic_type_mark(T785* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785compile(T785* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785crash(T785* C);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r785visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_like_feature_type_mark(T786* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_like_current_type_mark(T786* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_like_argument_type_mark(T786* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/T0* r786cpp(void);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_formal_generic_type_mark(T786* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786compile(T786* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786crash(T786* C);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r786visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_empty_tuple_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_string_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_like_feature_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/T6 r787for(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_native_array_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_like_current_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_like_argument_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_user_generic_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_any_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_agent_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_formal_generic_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787gc_mark_to_follow(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_array_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787crash(T787* C);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_class_type_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787need_gc_mark(T787* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r787visit_non_empty_tuple_type_mark(T787* C,T0* a1);
/*CECIL_FILE*/void r323parse(T323* C);
/*CECIL_FILE*/void r323make(T323* C,T0* a1);
/*CECIL_FILE*/T0* r323eiffel_parser(void);
/*CECIL_FILE*/T0* r323echo(void);
/*CECIL_FILE*/void r323collect(T323* C,T0* a1);
/*CECIL_FILE*/void r323inline_dynamic_dispatch(T323* C,T0* a1,T0* a2);
/*SERC_CHAIN*/void r771make(T771* C);
/*SERC_CHAIN*/T0* r771sys(T771* C);
/*SERC_CHAIN*/void r771loadpaths_in(T771* C,T0* a1);
/*SERC_CHAIN*/T0* r771flavor(T771* C);
/*SERC_CHAIN*/T0* r771environment(T771* C,T0* a1);
/*SERC_CHAIN*/T0* r771short(T771* C);
/*SERC_CHAIN*/T0* r771bin(T771* C);
/*SERC_CHAIN*/T0* r771c_mode(T771* C,T0* a1);
/*SERC_CHAIN*/T0* r771os(T771* C);
/*SERC*/void r772make(T772* C);
/*SERC*/void r772add_all(T772* C,T0* a1,T0* a2,T0* a3);
/*SERC*/T0* r772echo(void);
/*SERC*/void r772loadpaths_in(T772* C,T0* a1);
/*SERC*/T0* r772parser_buffer(void);
/*FIXED_STRING*/T3 r303first(T303* C);
/*FIXED_STRING*/void r303unlock_tagged_out(void);
/*FIXED_STRING*/void r303fill_tagged_out_memory(T303* C);
/*FIXED_STRING*/void r303lock_tagged_out(void);
extern T0*oBC303weakrefs;
extern int fBC303weakrefs;
/*FIXED_STRING*/T0* r303weakrefs(void);
/*FIXED_STRING*/void r303make_from_string(T303* C,T0* a1);
/*FIXED_STRING*/void r303ensure_capacity(T303* C,T2 a1);
/*FIXED_STRING*/T0* r303new_holders(T303* C);
/*FIXED_STRING*/T6 r303is_shared(T303* C);
/*FIXED_STRING*/void r303unshare(T303* C);
/*FIXED_STRING*/T8 r303to_external(T303* C);
/*FIXED_STRING*/T2 r303computed_hash_code(T303* C);
/*FIXED_STRING*/T3 r303item(T303* C,T2 a1);
/*FIXED_STRING*/T6 r303_ix_60(T303* C,T0* a1);
/*FIXED_STRING*/T6 r303same_as(T303* C,T0* a1);
/*FIXED_STRING*/T0* r303tagged_out_memory(void);
extern T0*oBC303holders_memory;
extern int fBC303holders_memory;
/*FIXED_STRING*/T0* r303holders_memory(void);
/*FIXED_STRING*/void r303do_intern(T303* C,T0* a1);
/*FIXED_STRING*/T0* r303out(T303* C);
/*FIXED_STRING*/void r303copy_slice_to_native(T303* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*FIXED_STRING*/void r303set_storage_signature(T303* C);
/*FIXED_STRING*/void r303print_on(T303* C,T0* a1);
/*FIXED_STRING*/T6 r303has(T303* C,T3 a1);
/*FEATURE_NAME*/T274*create274simple_feature_name(T0* a1,T333 a2);
/*FEATURE_NAME*/T6 r274is_equal(T274* C,T0* a1);
/*FEATURE_NAME*/T6 r274is_infix_name(T274* C);
/*FEATURE_NAME*/void r274pretty(T274* C,T2 a1);
/*FEATURE_NAME*/void r274ordinary_name(T274* C,T0* a1,T333 a2);
/*FEATURE_NAME*/T6 r274is_frozen(T274* C);
/*FEATURE_NAME*/void r274special_pretty_print(T274* C,T6 a1);
/*FEATURE_NAME*/void r274basic_create_1(T274* C,T2 a1,T0* a2,T333 a3);
/*FEATURE_NAME*/void r274basic_create_0(T274* C,T2 a1,T0* a2,T333 a3);
/*FEATURE_NAME*/T0* r274infix_or_prefix(T274* C);
/*FEATURE_NAME*/void r274unknown_position(T274* C,T0* a1);
/*FEATURE_NAME*/void r274infix_name(T274* C,T0* a1,T333 a2);
/*FEATURE_NAME*/void r274declaration_in(T274* C,T0* a1);
/*FEATURE_NAME*/T0* r274twin(T274* C);
/*FEATURE_NAME*/T6 r274is_simple_feature_name(T274* C);
/*FEATURE_NAME*/void r274complete_name_in(T274* C,T0* a1);
/*FEATURE_NAME*/void r274simple_feature_name(T274* C,T0* a1,T333 a2);
/*FEATURE_NAME*/void r274set_is_frozen(T274* C);
/*FEATURE_NAME*/T2 r274hash_code(T274* C);
/*FEATURE_NAME*/void r274prefix_name(T274* C,T0* a1,T333 a2);
/*FEATURE_NAME*/void r274mapping_c_in(T274* C,T0* a1);
/*FEATURE_NAME*/T6 r274is_prefix_name(T274* C);
/*INI_PARSER*/void r91goto_next_line(T91* C);
/*INI_PARSER*/T6 r91section_has(T91* C,T0* a1,T0* a2);
/*INI_PARSER*/void r91serc(T91* C);
/*INI_PARSER*/T0* r91lcs(void);
/*INI_PARSER*/T0* r91buffer(void);
/*INI_PARSER*/T6 r91a_section(T91* C);
extern T0*oBC91strings;
extern int fBC91strings;
/*INI_PARSER*/T0* r91strings(void);
/*INI_PARSER*/T0* r91unicode_string_buffer(void);
/*INI_PARSER*/T6 r91is_install(void);
/*INI_PARSER*/void r91a_keys(T91* C);
/*INI_PARSER*/T0* r91parser_buffer(void);
/*INI_PARSER*/void r91a_sections(T91* C);
/*INI_PARSER*/void r91go_back_at(T91* C,T2 a1,T2 a2);
/*INI_PARSER*/T6 r91skip1(T91* C,T3 a1);
/*INI_PARSER*/T6 r91a_string(T91* C);
/*INI_PARSER*/T333 r91current_position(T91* C);
/*INI_PARSER*/T6 r91a_keyword(T91* C,T0* a1);
/*INI_PARSER*/T0* r91echo(void);
/*INI_PARSER*/T6 r91a_identifier(T91* C);
/*INI_PARSER*/T6 r91a_manifest_string(T91* C,T6 a1);
/*INI_PARSER*/void r91fatal_error_except_for_install(T91* C,T0* a1);
/*INI_PARSER*/void r91a_inifile(T91* C);
/*INI_PARSER*/void r91may_expand_var_into(T91* C,T0* a1);
/*INI_PARSER*/T6 r91has(T91* C,T0* a1);
/*INI_PARSER*/void r91skip_comments(T91* C);
/*INI_PARSER*/void r91plugin(T91* C);
/*INI_PARSER*/T0* r91sections_iterator(T91* C);
/*INI_PARSER*/T0* r91section_item(T91* C,T0* a1,T0* a2);
/*INI_PARSER*/void r91next_char(T91* C);
/*INI_PARSER*/T6 r91a_key(T91* C);
/*INI_PARSER*/void r91update_last_manifest_string(T91* C,T333 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*INI_PARSER*/T0* r91section_key_iterator(T91* C,T0* a1);
/*INI_PARSER*/void r91set_value(T91* C,T0* a1);
/*INI_PARSER*/void r91may_expand_var(T91* C);
/*INI_PARSER*/T0* r91key_iterator(T91* C);
/*INI_PARSER*/T0* r91last_value(T91* C);
/*INI_PARSER*/T6 r91skip_spaces(T91* C);
/*INI_PARSER*/T333 r91pos(T91* C,T2 a1,T2 a2);
/*CLASSES_TREE*/T0* r741system_cluster(T741* C,T0* a1,T0* a2);
/*CLASSES_TREE*/void r741make(T741* C,T2 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC741system_clusters;
extern int fBC741system_clusters;
/*CLASSES_TREE*/T0* r741system_clusters(void);
/*CLASSES_TREE*/void r741for_all(T741* C,T0* a1);
/*CLASSES_TREE*/T2 r741cluster_count(T741* C);
/*CLASSES_TREE*/T0* r741echo(void);
/*CLASSES_TREE*/T0* r741cluster_named(T741* C,T0* a1);
/*CLASSES_TREE*/void r741show_name(T741* C);
/*CLASSES_TREE*/T0* r741classes_path_to_system_path(T741* C,T0* a1);
/*CLASSES_TREE*/void r741get_started(T741* C,T2 a1);
/*CLASSES_TREE*/void r741clusters_of(T741* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r741view_in(T741* C,T0* a1);
/*CLASSES_TREE*/T0* r741system_notation(T741* C);
/*CLASSES_TREE*/T2 r741loaded_class_count(T741* C);
/*CLASSES_TREE*/void r741show_tabs(T2 a1);
/*CLASSES_TREE*/T0* r741to_string(T741* C);
/*CLASSES_TREE*/void r741parse_include(T741* C);
/*CLASSES_TREE*/T0* r741find_physical_cluster(T741* C,T0* a1);
/*CLASSES_TREE*/void r741show(T741* C,T2 a1);
/*CLASSES_TREE*/void r741_P_673_for_all(T741* C,T0* a1);
/*CLASSES_TREE*/T2 r741_P_673_cluster_count(T741* C);
/*CLASSES_TREE*/T0* r741_P_673_cluster_named(T741* C,T0* a1);
/*CLASSES_TREE*/void r741_P_673_get_started(T741* C,T2 a1);
/*CLASSES_TREE*/void r741_P_673_clusters_of(T741* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r741_P_673_view_in(T741* C,T0* a1);
/*CLASSES_TREE*/T2 r741_P_673_loaded_class_count(T741* C);
/*CLASSES_TREE*/void r741_P_673_parse_include(T741* C);
/*CLASSES_TREE*/T0* r741_P_673_find_physical_cluster(T741* C,T0* a1);
/*LOADPATH*/void r791make(T791* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
/*LOADPATH*/T0* r791connect(T791* C,T0* a1,T0* a2);
/*LOADPATH*/void r791add_classes(T791* C,T0* a1);
/*LOADPATH*/void r791for_all(T791* C,T0* a1);
/*LOADPATH*/T2 r791cluster_count(T791* C);
/*LOADPATH*/void r791show_cycle(T791* C,T0* a1);
/*LOADPATH*/T0* r791echo(void);
/*LOADPATH*/void r791error_cycle(T791* C);
/*LOADPATH*/T0* r791cluster_named(T791* C,T0* a1);
extern T0*oBC791connected;
extern int fBC791connected;
/*LOADPATH*/T0* r791connected(void);
extern T0*oBC791strings;
extern int fBC791strings;
/*LOADPATH*/T0* r791strings(void);
/*LOADPATH*/void r791create_subtree(T791* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*LOADPATH*/void r791show_name(T791* C);
/*LOADPATH*/T0* r791classes_path_to_system_path(T791* C,T0* a1);
/*LOADPATH*/void r791get_started(T791* C,T2 a1);
/*LOADPATH*/T0* r791system_path_to_classes_path(T791* C,T0* a1);
/*LOADPATH*/void r791clusters_of(T791* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*LOADPATH*/void r791view_in(T791* C,T0* a1);
/*LOADPATH*/T0* r791system_tools(void);
/*LOADPATH*/T0* r791system_notation(T791* C);
/*LOADPATH*/T2 r791loaded_class_count(T791* C);
/*LOADPATH*/void r791show_tabs(T2 a1);
extern T0*oBC791files;
extern int fBC791files;
/*LOADPATH*/T0* r791files(void);
/*LOADPATH*/T0* r791to_string(T791* C);
/*LOADPATH*/void r791parse_include(T791* C);
/*LOADPATH*/T0* r791find_physical_cluster(T791* C,T0* a1);
/*LOADPATH*/void r791show(T791* C,T2 a1);
/*LOADPATH*/T0* r791new_path(T0* a1,T0* a2,T0* a3);
/*LOADPATH*/T0* r791new_name(T791* C,T0* a1,T2 a2);
/*CLUSTER_POOL_DATA*/void r743make(T743* C,T0* a1);
/*CLUSTER_POOL_DATA*/void r743add_cluster_class(T743* C,T0* a1,T0* a2);
/*CLUSTER_POOL_DATA*/T0* r743cluster_class(T743* C,T0* a1);
extern T0*oBC743hash_tuple;
extern int fBC743hash_tuple;
/*CLUSTER_POOL_DATA*/T0* r743hash_tuple(void);
/*CLUSTER_POOL_DATA*/T2 r743class_count(T743* C);
/*CLUSTER_POOL_DATA*/T6 r743has(T743* C,T0* a1);
/*FEATURE_TEXT*/void r444character_constant(T444* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r444string_constant(T444* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r444once_function(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r444set_ensure_assertion(T444* C,T0* a1);
/*FEATURE_TEXT*/void r444set_rescue_compound(T444* C,T0* a1);
/*FEATURE_TEXT*/void r444real_constant(T444* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r444inline_agent_pretty(T444* C,T2 a1);
/*FEATURE_TEXT*/void r444non_written_one(T444* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r444boolean_constant(T444* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r444set_header_comment(T444* C,T0* a1);
/*FEATURE_TEXT*/void r444deferred_function(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*FEATURE_TEXT*/void r444external_procedure(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*FEATURE_TEXT*/void r444add_into(T444* C,T0* a1,T0* a2);
/*FEATURE_TEXT*/void r444e_procedure(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*FEATURE_TEXT*/void r444integer_constant(T444* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r444external_function(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r444writable_attribute(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_TEXT*/void r444e_function(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r444deferred_procedure(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_TEXT*/void r444once_procedure(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*FEATURE_TEXT*/void r444unique_constant(T444* C,T0* a1,T0* a2);
/*INDEX_CLAUSE*/void r421add_last(T421* C,T0* a1);
/*INDEX_CLAUSE*/void r421with_tag(T421* C,T0* a1);
/*INDEX_CLAUSE*/void r421without_tag(T421* C,T0* a1);
/*MANIFEST_STRING*/T6 r375is_equal(T375* C,T0* a1);
/*MANIFEST_STRING*/T0* r375to_expression(T375* C);
/*MANIFEST_STRING*/void r375make(T375* C,T333 a1,T6 a2,T6 a3,T0* a4);
/*MANIFEST_STRING*/void r375pretty(T375* C,T2 a1);
/*MANIFEST_STRING*/T0* r375specialize_2(T375* C,T0* a1);
/*MANIFEST_STRING*/T0* r375static_simplify(T375* C);
/*MANIFEST_STRING*/void r375inline_dynamic_dispatch_(T375* C,T0* a1,T0* a2);
/*MANIFEST_STRING*/T6 r375is_static(T375* C);
/*MANIFEST_STRING*/void r375storage_alias_of(T375* C,T0* a1);
/*MANIFEST_STRING*/T6 r375is_stored_in_some_local_variable(void);
/*MANIFEST_STRING*/void r375accept(T375* C,T0* a1);
/*MANIFEST_STRING*/T0* r375declaration_type(T375* C);
/*MANIFEST_STRING*/T0* r375collect(T375* C,T0* a1);
/*MANIFEST_STRING*/void r375pretty_target(T375* C,T2 a1);
/*MANIFEST_STRING*/void r375from_identifier(T375* C,T333 a1,T0* a2);
/*MANIFEST_STRING*/void r375pretty_without_once(T375* C,T2 a1);
/*MANIFEST_STRING*/T0* r375twin(T375* C);
/*MANIFEST_STRING*/T0* r375written_declaration_type_mark(void);
/*MANIFEST_STRING*/T6 r375use_current(T0* a1);
/*MANIFEST_STRING*/void r375bracketed_pretty(T375* C,T2 a1);
/*MANIFEST_STRING*/T0* r375non_void_no_dispatch_type(T375* C,T0* a1);
/*MANIFEST_STRING*/T6 r375side_effect_free(T375* C,T0* a1);
/*MANIFEST_STRING*/T2 r375hash_code(T375* C);
/*MANIFEST_STRING*/T2 r375count(T375* C);
/*MANIFEST_STRING*/T0* r375resolve_in(T375* C,T0* a1);
/*MANIFEST_STRING*/T0* r375to_instruction(T375* C);
/*FORMAL_GENERIC_LIST*/void r427make(T427* C,T333 a1);
/*FORMAL_GENERIC_LIST*/void r427generic_formal_arguments_check(T427* C);
/*FORMAL_GENERIC_LIST*/void r427constraint_genericity_check(T427* C,T0* a1,T0* a2,T333 a3);
/*FORMAL_GENERIC_LIST*/void r427add_last(T427* C,T0* a1);
/*FORMAL_GENERIC_LIST*/T2 r427count(T427* C);
/*FORMAL_GENERIC_ARG*/void r436substitute(T0* a1,T0* a2,T2 a3,T0* a4);
/*FORMAL_GENERIC_ARG*/void r436make(T436* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_ARG*/void r436generic_formal_arguments_check(T436* C);
/*FORMAL_GENERIC_ARG*/T333 r436start_position(T436* C);
/*FORMAL_GENERIC_ARG*/void r436constraint_substitution(T436* C,T0* a1,T2 a2);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_tuple(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r478make(T478* C,T0* a1,T0* a2,T2 a3);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478generic_list(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_character(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478written_mark(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_native_array(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478at(T478* C,T333 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478specialize_thru(T478* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_boolean(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478typed_internals_type_mark(T478* C,T333 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478to_static(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r478accept(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_reference(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478same_signature_type(T478* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478type(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478signature_resolve_in(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_natural(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478default_expression(T478* C,T333 a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r478id_extra_information(T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478declaration_type(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478class_text_name(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_pointer(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_user_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T333 r478start_position(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_kernel_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r478set_start_position(T478* C,T333 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_fixed_string(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478class_text(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478twin(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_real(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_integer(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r478pretty_in(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_generic(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478resolve_in(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_agent(void);
/*LIKE_CURRENT_TYPE_MARK*/T488*create488make(T333 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_tuple(void);
/*LIKE_CURRENT_TYPE_MARK*/void r488make(T488* C,T333 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488generic_list(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_character(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488written_mark(void);
extern T0*oBC488written_name;
extern int fBC488written_name;
/*LIKE_CURRENT_TYPE_MARK*/T0* r488written_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_native_array(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488at(T488* C,T333 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_boolean(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488typed_internals_type_mark(T488* C,T333 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488to_static(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/void r488accept(T488* C,T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_reference(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488same_signature_type(T488* C,T0* a1,T0* a2);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488type(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488signature_resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_natural(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488default_expression(T488* C,T333 a1);
/*LIKE_CURRENT_TYPE_MARK*/void r488id_extra_information(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488declaration_type(T488* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488class_text_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_pointer(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_user_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_kernel_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_fixed_string(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488class_text(T488* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488twin(T488* C);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_real(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_integer(void);
/*LIKE_CURRENT_TYPE_MARK*/void r488pretty_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_generic(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_agent(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_tuple(void);
/*LIKE_FEATURE_TYPE_MARK*/void r490make(T490* C,T333 a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490generic_list(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_character(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490written_mark(T490* C);
/*LIKE_FEATURE_TYPE_MARK*/void r490specialize_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_native_array(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490at(T490* C,T333 a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490specialize_thru(T490* C,T0* a1,T0* a2,T0* a3);
/*LIKE_FEATURE_TYPE_MARK*/void r490twin_feature_stamp_memory(T490* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_boolean(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490typed_internals_type_mark(T490* C,T333 a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490to_static(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/void r490accept(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_reference(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490same_signature_type(T490* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490type(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490signature_resolve_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_natural(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490default_expression(T490* C,T333 a1);
/*LIKE_FEATURE_TYPE_MARK*/void r490id_extra_information(T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490class_text_name(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490feature_accumulator(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_pointer(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_user_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_kernel_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_fixed_string(T490* C);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490class_text(T490* C);
extern T0*oBC489written_mark_buffer;
extern int fBC489written_mark_buffer;
/*LIKE_FEATURE_TYPE_MARK*/T0* r490written_mark_buffer(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490twin(T490* C);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_real(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_integer(void);
/*LIKE_FEATURE_TYPE_MARK*/void r490pretty_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_generic(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490resolve_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_agent(void);
/*FORMAL_ARG_LIST*/void r349make(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/void r349pretty(T349* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r349specialize_in(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/void r349add_last(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r349rank_of(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/T0* r349specialize_thru(T349* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_ARG_LIST*/T0* r349adapt_for(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/void r349name_clash_check(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r349fast_rank_of(T349* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r349compute_flat_list_count_by_using_list(T349* C);
/*FORMAL_ARG_LIST*/T333 r349start_position(T349* C);
/*FORMAL_ARG_LIST*/T0* r349twin(T349* C);
/*FORMAL_ARG_LIST*/T0* r349type_mark(T349* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r349omitted_open_arguments(T349* C,T0* a1,T0* a2,T333 a3);
/*FORMAL_ARG_LIST*/T2 r349count(T349* C);
/*PRETTY_PRINTER*/void r106make(T106* C);
/*PRETTY_PRINTER*/void r106prepare_for_same_line_comment(void);
/*PRETTY_PRINTER*/T6 r106print_end_of_statement(T106* C);
/*PRETTY_PRINTER*/void r106put_type_mark(T0* a1);
/*PRETTY_PRINTER*/void r106keyword(T0* a1);
extern T0*oBC106buffer;
extern int fBC106buffer;
/*PRETTY_PRINTER*/T0* r106buffer(void);
/*PRETTY_PRINTER*/void r106put_one_line_comment(T2 a1,T0* a2);
/*PRETTY_PRINTER*/void r106expression_in(T0* a1,T0* a2);
/*PRETTY_PRINTER*/void r106put_end_of(T0* a1);
/*PRETTY_PRINTER*/void r106erase_everything_after(T2 a1);
/*PRETTY_PRINTER*/void r106set_semi_colon_flag(T106* C,T6 a1);
/*PRETTY_PRINTER*/void r106put_string(T0* a1);
/*PRETTY_PRINTER*/void r106left_margin_in(T0* a1);
/*PRETTY_PRINTER*/T6 r106is_opening_bracket_after(T2 a1);
/*PRETTY_PRINTER*/T3 r106last_non_blank_character(void);
/*PRETTY_PRINTER*/T2 r106column(void);
/*PRETTY_PRINTER*/void r106erase_separators_after(T2 a1);
/*PRETTY_PRINTER*/void r106set_indent_level(T2 a1);
/*PRETTY_PRINTER*/T2 r106index_of_last_character(void);
/*PRETTY_PRINTER*/void r106put_character(T3 a1);
/*PRETTY_PRINTER*/T6 r106print_end_of_feature(T106* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_tuple(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491make(T491* C,T333 a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491generic_list(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_character(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491written_mark(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491specialize_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_native_array(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491at(T491* C,T333 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491specialize_thru(T491* C,T0* a1,T0* a2,T0* a3);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_boolean(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491typed_internals_type_mark(T491* C,T333 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491to_static(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491accept(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_reference(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491same_signature_type(T491* C,T0* a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491type(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491signature_resolve_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_natural(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491default_expression(T491* C,T333 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491id_extra_information(T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491declaration_type(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491class_text_name(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_pointer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_user_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_kernel_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_fixed_string(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491class_text(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491written_mark_buffer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491twin(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_real(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_integer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491pretty_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_generic(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491resolve_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_agent(void);
/*ARRAY_TYPE_MARK*/void r440set_generic_list(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r440declaration_type(T440* C);
/*ARRAY_TYPE_MARK*/T6 r440is_agent(void);
/*ARRAY_TYPE_MARK*/T0* r440long_name(T440* C);
/*ARRAY_TYPE_MARK*/T0* r440written_mark(T440* C);
/*ARRAY_TYPE_MARK*/T0* r440resolve_in(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r440at(T440* C,T333 a1);
extern T0*oBC404strings;
extern int fBC404strings;
/*ARRAY_TYPE_MARK*/T0* r440strings(void);
/*ARRAY_TYPE_MARK*/void r440set_generic_list_with(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r440specialize_in(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T6 r440is_native_array(void);
/*ARRAY_TYPE_MARK*/T6 r440is_static(T440* C);
/*ARRAY_TYPE_MARK*/T0* r440type(T440* C);
/*ARRAY_TYPE_MARK*/T6 r440is_pointer(void);
/*ARRAY_TYPE_MARK*/T2 r440id(T440* C);
/*ARRAY_TYPE_MARK*/void r440recompute_declaration_type(T440* C);
/*ARRAY_TYPE_MARK*/T0* r440specialize_thru(T440* C,T0* a1,T0* a2,T0* a3);
/*ARRAY_TYPE_MARK*/T6 r440is_real(void);
/*ARRAY_TYPE_MARK*/T6 r440is_fixed_string(T440* C);
/*ARRAY_TYPE_MARK*/T6 r440same_signature_type(T440* C,T0* a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r440is_natural(void);
/*ARRAY_TYPE_MARK*/T6 r440is_integer(void);
/*ARRAY_TYPE_MARK*/void r440make(T440* C,T333 a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r440is_character(void);
/*ARRAY_TYPE_MARK*/T6 r440is_kernel_expanded(void);
/*ARRAY_TYPE_MARK*/T0* r440written_name(T440* C);
/*ARRAY_TYPE_MARK*/T0* r440default_expression(T333 a1);
extern T0*oBC440array_name;
extern int fBC440array_name;
/*ARRAY_TYPE_MARK*/T0* r440array_name(void);
/*ARRAY_TYPE_MARK*/T0* r440to_static(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r440signature_resolve_in(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r440twin(T440* C);
/*ARRAY_TYPE_MARK*/void r440id_extra_information(T0* a1);
/*ARRAY_TYPE_MARK*/void r440set_start_position(T440* C,T333 a1);
/*ARRAY_TYPE_MARK*/T0* r440class_text(T440* C);
/*ARRAY_TYPE_MARK*/T6 r440is_boolean(void);
/*ARRAY_TYPE_MARK*/void r440accept(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r440set_static_generic_list(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r440update_static_memory(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r440typed_internals_type_mark(T440* C,T333 a1);
/*ARRAY_TYPE_MARK*/T6 r440is_tuple(void);
/*ARRAY_TYPE_MARK*/void r440pretty_in(T440* C,T0* a1);
/*ARRAY_TYPE_MARK*/T333 r440start_position(T440* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r403set_generic_list(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403declaration_type(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_agent(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403long_name(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403written_mark(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403resolve_in(T403* C,T0* a1);
extern T0*oBC403native_array_name;
extern int fBC403native_array_name;
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403native_array_name(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403at(T403* C,T333 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403strings(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r403specialize_in(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_native_array(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_static(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403type(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_pointer(void);
/*NATIVE_ARRAY_TYPE_MARK*/T2 r403id(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403elements_type(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r403recompute_declaration_type(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403specialize_thru(T403* C,T0* a1,T0* a2,T0* a3);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_real(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_fixed_string(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403same_signature_type(T403* C,T0* a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_natural(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_integer(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r403make(T403* C,T333 a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_character(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_kernel_expanded(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403written_name(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403default_expression(T403* C,T333 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403to_static(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403signature_resolve_in(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403twin(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r403id_extra_information(T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r403set_start_position(T403* C,T333 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403class_text(T403* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_boolean(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r403accept(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r403set_static_generic_list(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r403update_static_memory(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r403typed_internals_type_mark(T403* C,T333 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r403is_tuple(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r403pretty_in(T403* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T333 r403start_position(T403* C);
/*BOOLEAN_TYPE_MARK*/T376*create376make(T333 a1);
/*BOOLEAN_TYPE_MARK*/T6 r376is_tuple(void);
/*BOOLEAN_TYPE_MARK*/void r376make(T376* C,T333 a1);
/*BOOLEAN_TYPE_MARK*/T0* r376generic_list(void);
/*BOOLEAN_TYPE_MARK*/T6 r376is_character(void);
/*BOOLEAN_TYPE_MARK*/T0* r376written_mark(void);
extern T0*oBC376written_name;
extern int fBC376written_name;
/*BOOLEAN_TYPE_MARK*/T0* r376written_name(void);
/*BOOLEAN_TYPE_MARK*/T6 r376is_native_array(void);
/*BOOLEAN_TYPE_MARK*/T0* r376at(T376* C,T333 a1);
extern T0*oBC376long_name;
extern int fBC376long_name;
/*BOOLEAN_TYPE_MARK*/T0* r376long_name(void);
/*BOOLEAN_TYPE_MARK*/T0* r376specialize_thru(T376* C,T0* a1,T0* a2,T0* a3);
/*BOOLEAN_TYPE_MARK*/T6 r376is_boolean(void);
/*BOOLEAN_TYPE_MARK*/T0* r376typed_internals_type_mark(T376* C,T333 a1);
/*BOOLEAN_TYPE_MARK*/T0* r376to_static(T376* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/void r376accept(T376* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r376same_signature_type(T376* C,T0* a1,T0* a2);
/*BOOLEAN_TYPE_MARK*/T0* r376type(void);
/*BOOLEAN_TYPE_MARK*/T0* r376signature_resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r376is_natural(void);
/*BOOLEAN_TYPE_MARK*/T0* r376default_expression(T333 a1);
/*BOOLEAN_TYPE_MARK*/void r376id_extra_information(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r376declaration_type(T376* C);
/*BOOLEAN_TYPE_MARK*/T6 r376is_pointer(void);
/*BOOLEAN_TYPE_MARK*/T333 r376start_position(T376* C);
/*BOOLEAN_TYPE_MARK*/T6 r376is_kernel_expanded(void);
/*BOOLEAN_TYPE_MARK*/void r376set_start_position(T376* C,T333 a1);
/*BOOLEAN_TYPE_MARK*/T6 r376is_fixed_string(void);
/*BOOLEAN_TYPE_MARK*/T0* r376class_text(T376* C);
/*BOOLEAN_TYPE_MARK*/T0* r376twin(T376* C);
/*BOOLEAN_TYPE_MARK*/T6 r376is_real(void);
/*BOOLEAN_TYPE_MARK*/T6 r376is_integer(void);
/*BOOLEAN_TYPE_MARK*/void r376pretty_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r376resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r376is_agent(void);
/*CHARACTER_TYPE_MARK*/T431*create431make(T333 a1);
/*CHARACTER_TYPE_MARK*/T6 r431is_tuple(void);
/*CHARACTER_TYPE_MARK*/void r431make(T431* C,T333 a1);
/*CHARACTER_TYPE_MARK*/T0* r431generic_list(void);
/*CHARACTER_TYPE_MARK*/T6 r431is_character(void);
/*CHARACTER_TYPE_MARK*/T0* r431written_mark(void);
extern T0*oBC431written_name;
extern int fBC431written_name;
/*CHARACTER_TYPE_MARK*/T0* r431written_name(void);
/*CHARACTER_TYPE_MARK*/T6 r431is_native_array(void);
/*CHARACTER_TYPE_MARK*/T0* r431at(T431* C,T333 a1);
extern T0*oBC431long_name;
extern int fBC431long_name;
/*CHARACTER_TYPE_MARK*/T0* r431long_name(void);
/*CHARACTER_TYPE_MARK*/T0* r431specialize_thru(T431* C,T0* a1,T0* a2,T0* a3);
/*CHARACTER_TYPE_MARK*/T6 r431is_boolean(void);
/*CHARACTER_TYPE_MARK*/T0* r431typed_internals_type_mark(T431* C,T333 a1);
/*CHARACTER_TYPE_MARK*/T0* r431to_static(T431* C,T0* a1);
/*CHARACTER_TYPE_MARK*/void r431accept(T431* C,T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r431same_signature_type(T431* C,T0* a1,T0* a2);
/*CHARACTER_TYPE_MARK*/T0* r431type(void);
/*CHARACTER_TYPE_MARK*/T0* r431signature_resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r431is_natural(void);
/*CHARACTER_TYPE_MARK*/T0* r431default_expression(T333 a1);
/*CHARACTER_TYPE_MARK*/void r431id_extra_information(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r431declaration_type(T431* C);
/*CHARACTER_TYPE_MARK*/T6 r431is_pointer(void);
/*CHARACTER_TYPE_MARK*/T333 r431start_position(T431* C);
/*CHARACTER_TYPE_MARK*/T6 r431is_kernel_expanded(void);
/*CHARACTER_TYPE_MARK*/void r431set_start_position(T431* C,T333 a1);
/*CHARACTER_TYPE_MARK*/T6 r431is_fixed_string(void);
/*CHARACTER_TYPE_MARK*/T0* r431class_text(T431* C);
/*CHARACTER_TYPE_MARK*/T0* r431twin(T431* C);
/*CHARACTER_TYPE_MARK*/T6 r431is_real(void);
/*CHARACTER_TYPE_MARK*/T6 r431is_integer(void);
/*CHARACTER_TYPE_MARK*/void r431pretty_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r431resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r431is_agent(void);
/*INTEGER_TYPE_MARK*/T402*create402integer_16(T333 a1);
/*INTEGER_TYPE_MARK*/T402*create402integer(T333 a1);
/*INTEGER_TYPE_MARK*/T402*create402integer_64(T333 a1);
/*INTEGER_TYPE_MARK*/T402*create402integer_8(T333 a1);
/*INTEGER_TYPE_MARK*/T402*create402integer_32(T333 a1);
/*INTEGER_TYPE_MARK*/T0* r402declaration_type(T402* C);
/*INTEGER_TYPE_MARK*/T6 r402is_agent(void);
/*INTEGER_TYPE_MARK*/T0* r402generic_list(void);
/*INTEGER_TYPE_MARK*/T0* r402written_mark(T402* C);
/*INTEGER_TYPE_MARK*/T0* r402resolve_in(T402* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r402at(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T6 r402is_native_array(void);
/*INTEGER_TYPE_MARK*/T3 r402structure_mark(T402* C);
/*INTEGER_TYPE_MARK*/T0* r402type(T402* C);
/*INTEGER_TYPE_MARK*/T6 r402is_pointer(void);
/*INTEGER_TYPE_MARK*/T2 r402id(T402* C);
/*INTEGER_TYPE_MARK*/void r402integer_16(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/void r402integer_32(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T0* r402specialize_thru(T402* C,T0* a1,T0* a2,T0* a3);
/*INTEGER_TYPE_MARK*/T6 r402is_real(void);
/*INTEGER_TYPE_MARK*/T6 r402is_fixed_string(T402* C);
extern T0*oBC402integer_64_name;
extern int fBC402integer_64_name;
/*INTEGER_TYPE_MARK*/T0* r402integer_64_name(void);
/*INTEGER_TYPE_MARK*/void r402integer(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T6 r402same_signature_type(T402* C,T0* a1,T0* a2);
/*INTEGER_TYPE_MARK*/void r402integer_64(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T6 r402can_be_assigned_to(T402* C,T0* a1);
/*INTEGER_TYPE_MARK*/T6 r402is_natural(void);
/*INTEGER_TYPE_MARK*/void r402integer_8(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T6 r402is_integer(void);
extern T0*oBC402integer_name;
extern int fBC402integer_name;
/*INTEGER_TYPE_MARK*/T0* r402integer_name(void);
/*INTEGER_TYPE_MARK*/T6 r402is_character(void);
/*INTEGER_TYPE_MARK*/T6 r402is_kernel_expanded(void);
extern T0*oBC402integer_8_name;
extern int fBC402integer_8_name;
/*INTEGER_TYPE_MARK*/T0* r402integer_8_name(void);
/*INTEGER_TYPE_MARK*/T0* r402written_name(T402* C);
/*INTEGER_TYPE_MARK*/T0* r402default_expression(T402* C,T333 a1);
extern T0*oBC402integer_32_name;
extern int fBC402integer_32_name;
/*INTEGER_TYPE_MARK*/T0* r402integer_32_name(void);
/*INTEGER_TYPE_MARK*/T0* r402to_static(T402* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r402signature_resolve_in(T402* C,T0* a1);
extern T0*oBC402integer_16_name;
extern int fBC402integer_16_name;
/*INTEGER_TYPE_MARK*/T0* r402integer_16_name(void);
/*INTEGER_TYPE_MARK*/T0* r402twin(T402* C);
/*INTEGER_TYPE_MARK*/void r402id_extra_information(T0* a1);
/*INTEGER_TYPE_MARK*/void r402set_start_position(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T0* r402class_text(T402* C);
/*INTEGER_TYPE_MARK*/T6 r402is_boolean(void);
/*INTEGER_TYPE_MARK*/void r402accept(T402* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r402typed_internals_type_mark(T402* C,T333 a1);
/*INTEGER_TYPE_MARK*/T6 r402is_tuple(void);
/*INTEGER_TYPE_MARK*/void r402pretty_in(T402* C,T0* a1);
/*INTEGER_TYPE_MARK*/T333 r402start_position(T402* C);
/*INTEGER_TYPE_MARK*/T0* r402_P_360_class_text(T402* C);
/*NATURAL_TYPE_MARK*/T429*create429natural_16(T333 a1);
/*NATURAL_TYPE_MARK*/T429*create429natural_32(T333 a1);
/*NATURAL_TYPE_MARK*/T429*create429natural_64(T333 a1);
/*NATURAL_TYPE_MARK*/T429*create429natural_8(T333 a1);
/*NATURAL_TYPE_MARK*/T0* r429declaration_type(T429* C);
extern T0*oBC429natural_32_name;
extern int fBC429natural_32_name;
/*NATURAL_TYPE_MARK*/T0* r429natural_32_name(void);
/*NATURAL_TYPE_MARK*/T6 r429is_agent(void);
/*NATURAL_TYPE_MARK*/T0* r429generic_list(void);
/*NATURAL_TYPE_MARK*/T0* r429written_mark(T429* C);
/*NATURAL_TYPE_MARK*/T0* r429resolve_in(T429* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r429at(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T6 r429is_native_array(void);
/*NATURAL_TYPE_MARK*/T3 r429structure_mark(T429* C);
/*NATURAL_TYPE_MARK*/T0* r429type(T429* C);
/*NATURAL_TYPE_MARK*/T6 r429is_pointer(void);
/*NATURAL_TYPE_MARK*/T2 r429id(T429* C);
/*NATURAL_TYPE_MARK*/void r429natural_8(T429* C,T333 a1);
extern T0*oBC429natural_64_name;
extern int fBC429natural_64_name;
/*NATURAL_TYPE_MARK*/T0* r429natural_64_name(void);
extern T0*oBC429natural_8_name;
extern int fBC429natural_8_name;
/*NATURAL_TYPE_MARK*/T0* r429natural_8_name(void);
/*NATURAL_TYPE_MARK*/T0* r429specialize_thru(T429* C,T0* a1,T0* a2,T0* a3);
/*NATURAL_TYPE_MARK*/T6 r429is_real(void);
/*NATURAL_TYPE_MARK*/T6 r429is_fixed_string(T429* C);
/*NATURAL_TYPE_MARK*/T6 r429same_signature_type(T429* C,T0* a1,T0* a2);
/*NATURAL_TYPE_MARK*/T6 r429is_natural(void);
/*NATURAL_TYPE_MARK*/void r429natural_16(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T6 r429is_integer(void);
/*NATURAL_TYPE_MARK*/void r429natural_32(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T6 r429is_character(void);
/*NATURAL_TYPE_MARK*/void r429natural_64(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T6 r429is_kernel_expanded(void);
/*NATURAL_TYPE_MARK*/T0* r429written_name(T429* C);
/*NATURAL_TYPE_MARK*/T0* r429default_expression(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T0* r429to_static(T429* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r429signature_resolve_in(T429* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r429twin(T429* C);
/*NATURAL_TYPE_MARK*/void r429id_extra_information(T0* a1);
/*NATURAL_TYPE_MARK*/void r429set_start_position(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T0* r429class_text(T429* C);
/*NATURAL_TYPE_MARK*/T6 r429is_boolean(void);
extern T0*oBC429natural_16_name;
extern int fBC429natural_16_name;
/*NATURAL_TYPE_MARK*/T0* r429natural_16_name(void);
/*NATURAL_TYPE_MARK*/void r429accept(T429* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r429typed_internals_type_mark(T429* C,T333 a1);
/*NATURAL_TYPE_MARK*/T6 r429is_tuple(void);
/*NATURAL_TYPE_MARK*/void r429pretty_in(T429* C,T0* a1);
/*NATURAL_TYPE_MARK*/T333 r429start_position(T429* C);
/*CLASS_TYPE_MARK*/T398*create398make(T0* a1);
/*CLASS_TYPE_MARK*/T6 r398is_tuple(void);
/*CLASS_TYPE_MARK*/void r398make(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r398generic_list(void);
/*CLASS_TYPE_MARK*/T6 r398is_character(void);
/*CLASS_TYPE_MARK*/T0* r398written_mark(T398* C);
/*CLASS_TYPE_MARK*/T0* r398canonical_long_name(T398* C);
/*CLASS_TYPE_MARK*/T0* r398written_name(T398* C);
/*CLASS_TYPE_MARK*/T6 r398is_native_array(void);
/*CLASS_TYPE_MARK*/T0* r398at(T398* C,T333 a1);
/*CLASS_TYPE_MARK*/T6 r398is_expanded(T398* C);
/*CLASS_TYPE_MARK*/T0* r398specialize_thru(T398* C,T0* a1,T0* a2,T0* a3);
/*CLASS_TYPE_MARK*/T6 r398is_boolean(void);
/*CLASS_TYPE_MARK*/T0* r398typed_internals_type_mark(T398* C,T333 a1);
/*CLASS_TYPE_MARK*/T0* r398to_static(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T2 r398id(T398* C);
/*CLASS_TYPE_MARK*/void r398accept(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r398is_reference(T398* C);
/*CLASS_TYPE_MARK*/T6 r398same_signature_type(T398* C,T0* a1,T0* a2);
/*CLASS_TYPE_MARK*/T0* r398type(T398* C);
/*CLASS_TYPE_MARK*/T0* r398signature_resolve_in(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r398is_natural(void);
/*CLASS_TYPE_MARK*/T0* r398default_expression(T398* C,T333 a1);
/*CLASS_TYPE_MARK*/void r398id_extra_information(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r398declaration_type(T398* C);
/*CLASS_TYPE_MARK*/T6 r398is_pointer(void);
/*CLASS_TYPE_MARK*/T6 r398is_user_expanded(T398* C);
/*CLASS_TYPE_MARK*/T333 r398start_position(T398* C);
/*CLASS_TYPE_MARK*/T6 r398is_kernel_expanded(void);
/*CLASS_TYPE_MARK*/void r398set_start_position(T398* C,T333 a1);
/*CLASS_TYPE_MARK*/T6 r398is_fixed_string(T398* C);
/*CLASS_TYPE_MARK*/T0* r398class_text(T398* C);
/*CLASS_TYPE_MARK*/T0* r398twin(T398* C);
/*CLASS_TYPE_MARK*/T6 r398is_real(void);
/*CLASS_TYPE_MARK*/T6 r398is_integer(void);
/*CLASS_TYPE_MARK*/void r398pretty_in(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r398is_empty_expanded(T398* C);
/*CLASS_TYPE_MARK*/T0* r398resolve_in(T398* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r398is_agent(void);
/*POINTER_TYPE_MARK*/T432*create432make(T333 a1);
/*POINTER_TYPE_MARK*/T6 r432is_tuple(void);
/*POINTER_TYPE_MARK*/void r432make(T432* C,T333 a1);
/*POINTER_TYPE_MARK*/T0* r432generic_list(void);
/*POINTER_TYPE_MARK*/T6 r432is_character(void);
/*POINTER_TYPE_MARK*/T0* r432written_mark(void);
extern T0*oBC432written_name;
extern int fBC432written_name;
/*POINTER_TYPE_MARK*/T0* r432written_name(void);
/*POINTER_TYPE_MARK*/T6 r432is_native_array(void);
/*POINTER_TYPE_MARK*/T0* r432at(T432* C,T333 a1);
extern T0*oBC432long_name;
extern int fBC432long_name;
/*POINTER_TYPE_MARK*/T0* r432long_name(void);
/*POINTER_TYPE_MARK*/T0* r432specialize_thru(T432* C,T0* a1,T0* a2,T0* a3);
/*POINTER_TYPE_MARK*/T6 r432is_boolean(void);
/*POINTER_TYPE_MARK*/T0* r432typed_internals_type_mark(T432* C,T333 a1);
/*POINTER_TYPE_MARK*/T0* r432to_static(T432* C,T0* a1);
/*POINTER_TYPE_MARK*/void r432accept(T432* C,T0* a1);
/*POINTER_TYPE_MARK*/T6 r432same_signature_type(T432* C,T0* a1,T0* a2);
/*POINTER_TYPE_MARK*/T0* r432type(void);
/*POINTER_TYPE_MARK*/T0* r432signature_resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r432is_natural(void);
/*POINTER_TYPE_MARK*/T0* r432default_expression(T432* C,T333 a1);
/*POINTER_TYPE_MARK*/void r432id_extra_information(T0* a1);
/*POINTER_TYPE_MARK*/T0* r432declaration_type(T432* C);
/*POINTER_TYPE_MARK*/T6 r432is_pointer(void);
/*POINTER_TYPE_MARK*/T333 r432start_position(T432* C);
/*POINTER_TYPE_MARK*/T6 r432is_kernel_expanded(void);
/*POINTER_TYPE_MARK*/void r432set_start_position(T432* C,T333 a1);
/*POINTER_TYPE_MARK*/T6 r432is_fixed_string(void);
/*POINTER_TYPE_MARK*/T0* r432class_text(T432* C);
/*POINTER_TYPE_MARK*/T0* r432twin(T432* C);
/*POINTER_TYPE_MARK*/T6 r432is_real(void);
/*POINTER_TYPE_MARK*/T6 r432is_integer(void);
/*POINTER_TYPE_MARK*/void r432pretty_in(T0* a1);
/*POINTER_TYPE_MARK*/T0* r432resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r432is_agent(void);
/*REAL_TYPE_MARK*/T430*create430real_32(T333 a1);
/*REAL_TYPE_MARK*/T430*create430real_extended(T333 a1);
/*REAL_TYPE_MARK*/T430*create430real(T333 a1);
/*REAL_TYPE_MARK*/T0* r430declaration_type(T430* C);
/*REAL_TYPE_MARK*/T6 r430is_agent(void);
/*REAL_TYPE_MARK*/T0* r430generic_list(void);
extern T0*oBC430real_80_name;
extern int fBC430real_80_name;
/*REAL_TYPE_MARK*/T0* r430real_80_name(void);
/*REAL_TYPE_MARK*/T0* r430written_mark(T430* C);
/*REAL_TYPE_MARK*/T0* r430resolve_in(T430* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r430at(T430* C,T333 a1);
/*REAL_TYPE_MARK*/T6 r430is_native_array(void);
/*REAL_TYPE_MARK*/T3 r430structure_mark(T430* C);
extern T0*oBC430real_64_name;
extern int fBC430real_64_name;
/*REAL_TYPE_MARK*/T0* r430real_64_name(void);
/*REAL_TYPE_MARK*/T0* r430type(T430* C);
/*REAL_TYPE_MARK*/T6 r430is_pointer(void);
/*REAL_TYPE_MARK*/T2 r430id(T430* C);
extern T0*oBC430real_128_name;
extern int fBC430real_128_name;
/*REAL_TYPE_MARK*/T0* r430real_128_name(void);
/*REAL_TYPE_MARK*/T0* r430specialize_thru(T430* C,T0* a1,T0* a2,T0* a3);
/*REAL_TYPE_MARK*/T6 r430is_real(void);
/*REAL_TYPE_MARK*/T6 r430is_fixed_string(T430* C);
/*REAL_TYPE_MARK*/T6 r430same_signature_type(T430* C,T0* a1,T0* a2);
/*REAL_TYPE_MARK*/T6 r430can_be_assigned_to(T430* C,T0* a1);
/*REAL_TYPE_MARK*/T6 r430is_natural(void);
extern T0*oBC430real_name;
extern int fBC430real_name;
/*REAL_TYPE_MARK*/T0* r430real_name(void);
/*REAL_TYPE_MARK*/T6 r430is_integer(void);
extern T0*oBC430real_32_name;
extern int fBC430real_32_name;
/*REAL_TYPE_MARK*/T0* r430real_32_name(void);
/*REAL_TYPE_MARK*/T6 r430is_character(void);
/*REAL_TYPE_MARK*/T6 r430is_kernel_expanded(void);
/*REAL_TYPE_MARK*/T0* r430written_name(T430* C);
/*REAL_TYPE_MARK*/T0* r430default_expression(T430* C,T333 a1);
/*REAL_TYPE_MARK*/void r430real_32(T430* C,T333 a1);
/*REAL_TYPE_MARK*/T0* r430to_static(T430* C,T0* a1);
/*REAL_TYPE_MARK*/void r430real_64(T430* C,T333 a1);
/*REAL_TYPE_MARK*/T0* r430signature_resolve_in(T430* C,T0* a1);
/*REAL_TYPE_MARK*/void r430real_80(T430* C,T333 a1);
extern T0*oBC430real_extended_name;
extern int fBC430real_extended_name;
/*REAL_TYPE_MARK*/T0* r430real_extended_name(void);
/*REAL_TYPE_MARK*/void r430real_extended(T430* C,T333 a1);
/*REAL_TYPE_MARK*/T0* r430twin(T430* C);
/*REAL_TYPE_MARK*/void r430id_extra_information(T0* a1);
/*REAL_TYPE_MARK*/void r430set_start_position(T430* C,T333 a1);
/*REAL_TYPE_MARK*/T0* r430class_text(T430* C);
/*REAL_TYPE_MARK*/T6 r430is_boolean(void);
/*REAL_TYPE_MARK*/void r430accept(T430* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r430typed_internals_type_mark(T430* C,T333 a1);
/*REAL_TYPE_MARK*/T6 r430is_tuple(void);
/*REAL_TYPE_MARK*/void r430pretty_in(T430* C,T0* a1);
/*REAL_TYPE_MARK*/T333 r430start_position(T430* C);
/*REAL_TYPE_MARK*/void r430real_128(T430* C,T333 a1);
/*REAL_TYPE_MARK*/void r430real(T430* C,T333 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437set_generic_list(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437declaration_type(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_agent(void);
extern T0*oBC435canonical_long_name;
extern int fBC435canonical_long_name;
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437canonical_long_name(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437long_name(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437written_mark(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437resolve_in(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437at(T437* C,T333 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437strings(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437specialize_in(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_native_array(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_static(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437type(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_pointer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r437id(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437recompute_declaration_type(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437specialize_thru(T437* C,T0* a1,T0* a2,T0* a3);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_real(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_fixed_string(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437same_signature_type(T437* C,T0* a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_natural(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_integer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437make(T437* C,T333 a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_character(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_kernel_expanded(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437written_name(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437default_expression(T333 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437to_static(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437signature_resolve_in(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437twin(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437id_extra_information(T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437set_start_position(T437* C,T333 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437class_text(T437* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r437is_boolean(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437accept(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437set_static_generic_list(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437update_static_memory(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r437typed_internals_type_mark(T437* C,T333 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r437pretty_in(T437* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T333 r437start_position(T437* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r434make(T434* C,T333 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434generic_list(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_character(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434written_mark(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434canonical_long_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434written_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_native_array(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434at(T434* C,T333 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434specialize_thru(T434* C,T0* a1,T0* a2,T0* a3);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_boolean(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434typed_internals_type_mark(T434* C,T333 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434to_static(T434* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T2 r434id(T434* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r434accept(T434* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434same_signature_type(T434* C,T0* a1,T0* a2);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434type(T434* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434signature_resolve_in(T434* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_natural(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434default_expression(T333 a1);
/*EMPTY_TUPLE_TYPE_MARK*/void r434id_extra_information(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434declaration_type(T434* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_pointer(void);
/*EMPTY_TUPLE_TYPE_MARK*/T333 r434start_position(T434* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_kernel_expanded(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r434set_start_position(T434* C,T333 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_fixed_string(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434class_text(T434* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434twin(T434* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_real(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_integer(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r434pretty_in(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r434resolve_in(T434* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r434is_agent(void);
/*AGENT_TYPE_MARK*/void r438set_generic_list(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r438declaration_type(T438* C);
/*AGENT_TYPE_MARK*/T6 r438is_agent(void);
/*AGENT_TYPE_MARK*/T0* r438canonical_long_name(T438* C);
/*AGENT_TYPE_MARK*/T0* r438long_name(T438* C);
/*AGENT_TYPE_MARK*/T0* r438written_mark(T438* C);
/*AGENT_TYPE_MARK*/T0* r438resolve_in(T438* C,T0* a1);
extern T0*oBC438function_name;
extern int fBC438function_name;
/*AGENT_TYPE_MARK*/T0* r438function_name(void);
/*AGENT_TYPE_MARK*/T0* r438at(T438* C,T333 a1);
/*AGENT_TYPE_MARK*/T0* r438written_open(T438* C);
/*AGENT_TYPE_MARK*/T0* r438strings(void);
/*AGENT_TYPE_MARK*/void r438procedure(T438* C,T333 a1,T0* a2);
/*AGENT_TYPE_MARK*/void r438specialize_in(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/T6 r438is_native_array(void);
extern T0*oBC438routine_name;
extern int fBC438routine_name;
/*AGENT_TYPE_MARK*/T0* r438routine_name(void);
/*AGENT_TYPE_MARK*/T6 r438is_static(T438* C);
/*AGENT_TYPE_MARK*/T0* r438type(T438* C);
/*AGENT_TYPE_MARK*/T6 r438is_pointer(void);
/*AGENT_TYPE_MARK*/T2 r438id(T438* C);
/*AGENT_TYPE_MARK*/void r438recompute_declaration_type(T438* C);
/*AGENT_TYPE_MARK*/T0* r438specialize_thru(T438* C,T0* a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r438is_real(void);
/*AGENT_TYPE_MARK*/T6 r438is_fixed_string(T438* C);
/*AGENT_TYPE_MARK*/T6 r438same_signature_type(T438* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r438is_natural(void);
/*AGENT_TYPE_MARK*/T6 r438is_integer(void);
/*AGENT_TYPE_MARK*/T6 r438is_character(void);
/*AGENT_TYPE_MARK*/T0* r438result_type(T438* C);
/*AGENT_TYPE_MARK*/void r438predicate(T438* C,T333 a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r438is_kernel_expanded(void);
/*AGENT_TYPE_MARK*/void r438routine(T438* C,T333 a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r438written_name(T438* C);
/*AGENT_TYPE_MARK*/T0* r438default_expression(T333 a1);
/*AGENT_TYPE_MARK*/void r438basic_make(T438* C,T2 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T0* r438to_static(T438* C,T0* a1);
extern T0*oBC438procedure_name;
extern int fBC438procedure_name;
/*AGENT_TYPE_MARK*/T0* r438procedure_name(void);
/*AGENT_TYPE_MARK*/void r438open_check(T438* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r438signature_resolve_in(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r438twin(T438* C);
/*AGENT_TYPE_MARK*/void r438id_extra_information(T0* a1);
/*AGENT_TYPE_MARK*/void r438set_start_position(T438* C,T333 a1);
/*AGENT_TYPE_MARK*/T0* r438class_text(T438* C);
/*AGENT_TYPE_MARK*/void r438function(T438* C,T333 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r438is_boolean(void);
/*AGENT_TYPE_MARK*/void r438accept(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/void r438set_static_generic_list(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/void r438update_static_memory(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r438typed_internals_type_mark(T438* C,T333 a1);
/*AGENT_TYPE_MARK*/T6 r438is_tuple(void);
/*AGENT_TYPE_MARK*/void r438pretty_in(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/T333 r438start_position(T438* C);
/*AGENT_TYPE_MARK*/void r438_P_404_specialize_in(T438* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r438_P_404_specialize_thru(T438* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/void r441set_generic_list(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441declaration_type(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_agent(void);
/*USER_GENERIC_TYPE_MARK*/T0* r441canonical_long_name(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441long_name(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441written_mark(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441resolve_in(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441at(T441* C,T333 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441strings(void);
/*USER_GENERIC_TYPE_MARK*/void r441specialize_in(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_native_array(void);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_static(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441type(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_pointer(void);
/*USER_GENERIC_TYPE_MARK*/T2 r441id(T441* C);
/*USER_GENERIC_TYPE_MARK*/void r441recompute_declaration_type(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441specialize_thru(T441* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_real(void);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_fixed_string(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_empty_expanded(T441* C);
/*USER_GENERIC_TYPE_MARK*/void r441special_weak_reference_extra_check(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441same_signature_type(T441* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_natural(void);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_integer(void);
/*USER_GENERIC_TYPE_MARK*/void r441make(T441* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_character(void);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_expanded(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_kernel_expanded(void);
/*USER_GENERIC_TYPE_MARK*/T0* r441written_name(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441default_expression(T441* C,T333 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441to_static(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_reference(T441* C);
/*USER_GENERIC_TYPE_MARK*/T0* r441signature_resolve_in(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441twin(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_user_expanded(T441* C);
/*USER_GENERIC_TYPE_MARK*/void r441id_extra_information(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441weak_reference_argument(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r441set_start_position(T441* C,T333 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441class_text(T441* C);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_boolean(void);
/*USER_GENERIC_TYPE_MARK*/void r441accept(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r441set_static_generic_list(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r441update_static_memory(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r441typed_internals_type_mark(T441* C,T333 a1);
/*USER_GENERIC_TYPE_MARK*/T6 r441is_tuple(void);
/*USER_GENERIC_TYPE_MARK*/void r441pretty_in(T441* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T333 r441start_position(T441* C);
/*MINI_BUFFER*/T6 r266is_off(T266* C);
/*MINI_BUFFER*/T0* r266a_include(T266* C);
/*MINI_BUFFER*/void r266next(T266* C);
/*MINI_BUFFER*/T0* r266a_file_or_directory_path(T266* C);
/*MINI_BUFFER*/T0* r266a_type_cast(T266* C);
/*MINI_BUFFER*/T6 r266a_keyword(T266* C,T0* a1);
/*MINI_BUFFER*/void r266skip_separators(T266* C);
/*MINI_BUFFER*/T3 r266item(T266* C);
/*MINI_BUFFER*/T0* r266system_tools(void);
/*MINI_BUFFER*/T0* r266a_signature(T266* C);
/*MINI_BUFFER*/T0* r266an_identifier(T266* C);
/*MINI_BUFFER*/void r266start_with(T266* C,T0* a1);
/*MINI_BUFFER*/void r266show_position_with_fatal_error(T266* C,T0* a1);
/*MINI_BUFFER*/T6 r266a_word(T266* C,T0* a1);
/*NATIVE_BUILT_IN*/void r461make(T461* C,T0* a1);
/*NATIVE_BUILT_IN*/void r461pretty(T461* C,T2 a1,T6 a2);
/*NATIVE_BUILT_IN*/void r461parse_external_type(T461* C,T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r461accept(T461* C,T0* a1);
/*NATIVE_BUILT_IN*/T333 r461start_position(T461* C);
/*NATIVE_BUILT_IN*/T6 r461use_current(T0* a1);
/*NATIVE_BUILT_IN*/void r461crash(T461* C);
/*NATIVE_BUILT_IN*/T6 r461side_effect_free(T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r461not_yet_implemented(T461* C);
/*NATIVE_BUILT_IN*/T2 r461hash_code(T461* C);
/*NATIVE_PLUG_IN*/T6 r463is_equal(T463* C,T0* a1);
/*NATIVE_PLUG_IN*/void r463make(T463* C,T0* a1);
/*NATIVE_PLUG_IN*/void r463pretty(T463* C,T2 a1,T6 a2);
/*NATIVE_PLUG_IN*/void r463parse_external_type(T463* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/void r463parse_alias_string(T463* C,T0* a1);
/*NATIVE_PLUG_IN*/void r463accept(T463* C,T0* a1);
/*NATIVE_PLUG_IN*/void r463do_collect(T463* C);
/*NATIVE_PLUG_IN*/T0* r463required_key(T463* C,T0* a1);
/*NATIVE_PLUG_IN*/void r463check_unused_keys(T463* C);
/*NATIVE_PLUG_IN*/void r463collect(T463* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/T333 r463start_position(T463* C);
/*NATIVE_PLUG_IN*/T0* r463system_tools(void);
/*NATIVE_PLUG_IN*/void r463customize_runtime(T463* C);
/*NATIVE_C_PLUS_PLUS*/void r464make(T464* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/void r464pretty(T464* C,T2 a1,T6 a2);
/*NATIVE_C_PLUS_PLUS*/T2 r464parse_args_in(T464* C,T0* a1,T2 a2,T0* a3,T2 a4,T2 a5);
/*NATIVE_C_PLUS_PLUS*/void r464parse_external_type(T464* C,T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T0* r464cpp(void);
/*NATIVE_C_PLUS_PLUS*/void r464accept(T464* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/T2 r464error_at(T464* C,T2 a1,T0* a2,T2 a3);
/*NATIVE_C_PLUS_PLUS*/void r464notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/void r464collect(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T333 r464start_position(T464* C);
/*NATIVE_C_PLUS_PLUS*/T2 r464parse_cpp_class_in(T464* C,T0* a1,T2 a2,T0* a3);
/*NATIVE_C_PLUS_PLUS*/void r464crash(T464* C);
/*NATIVE_C_PLUS_PLUS*/T2 r464parse_include(T464* C,T2 a1,T0* a2);
extern T0*oBC464include_memory;
extern int fBC464include_memory;
/*NATIVE_C_PLUS_PLUS*/T0* r464include_memory(void);
/*NATIVE_C_PLUS_PLUS*/void r464parse_external_in(T464* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*NATIVE_C_PLUS_PLUS*/void r464not_yet_implemented(T464* C);
/*NATIVE_C_PLUS_PLUS*/T2 r464hash_code(T464* C);
/*NATIVE_C*/void r465make(T465* C,T0* a1);
/*NATIVE_C*/void r465pretty(T465* C,T2 a1,T6 a2);
/*NATIVE_C*/void r465parse_external_type(T465* C,T0* a1,T0* a2);
/*NATIVE_C*/T0* r465cpp(void);
/*NATIVE_C*/void r465accept(T465* C,T0* a1);
/*NATIVE_C*/void r465notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C*/void r465parse_external_tag(T465* C);
/*NATIVE_C*/void r465collect(T0* a1,T0* a2);
/*NATIVE_C*/T333 r465start_position(T465* C);
/*NATIVE_C*/void r465crash(T465* C);
/*NATIVE_C*/void r465not_yet_implemented(T465* C);
/*NATIVE_C*/T2 r465hash_code(T465* C);
/*NATIVE_C*/void r465bad_external(T465* C,T0* a1);
/*NATIVE_JAVA*/void r466make(T466* C,T0* a1);
/*NATIVE_JAVA*/void r466pretty(T466* C,T2 a1,T6 a2);
/*NATIVE_JAVA*/void r466parse_external_type(T466* C,T0* a1,T0* a2);
/*NATIVE_JAVA*/void r466accept(T466* C,T0* a1);
/*NATIVE_JAVA*/void r466notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_JAVA*/void r466collect(T0* a1,T0* a2);
/*NATIVE_JAVA*/void r466crash(T466* C);
/*NATIVE_JAVA*/void r466not_yet_implemented(T466* C);
/*NATIVE_JAVA*/T2 r466hash_code(T466* C);
/*EXTERNAL_TYPE*/T416*create416make(T0* a1,T0* a2,T333 a3);
/*EXTERNAL_TYPE*/void r416make(T416* C,T0* a1,T0* a2,T333 a3);
/*EXTERNAL_TYPE*/void r416set(T416* C,T0* a1,T0* a2);
/*EXTERNAL_TYPE*/void r416collect(T416* C);
/*PARENT_EDGE*/T273*create273make(T6 a1,T0* a2);
/*PARENT_EDGE*/void r273check_level_2(T273* C,T0* a1);
/*PARENT_EDGE*/void r273make(T273* C,T6 a1,T0* a2);
/*PARENT_EDGE*/T0* r273exports_for(T273* C,T0* a1);
/*PARENT_EDGE*/void r273add_rename(T273* C,T0* a1);
/*PARENT_EDGE*/T6 r273is_target_of_rename(T273* C,T0* a1);
extern T0*oBC273forbidden_parent_list;
extern int fBC273forbidden_parent_list;
/*PARENT_EDGE*/T0* r273forbidden_parent_list(void);
/*PARENT_EDGE*/void r273initialize_and_check_level_1(T273* C,T0* a1);
/*PARENT_EDGE*/T2 r273rename_count(T273* C);
/*PARENT_EDGE*/void r273id_extra_information(T273* C,T0* a1);
/*PARENT_EDGE*/T0* r273get_name_in_child(T273* C,T0* a1);
/*PARENT_EDGE*/T0* r273exports_for_all(T273* C);
/*PARENT_EDGE*/T333 r273start_position(T273* C);
/*PARENT_EDGE*/T0* r273do_rename(T273* C,T0* a1);
/*PARENT_EDGE*/T0* r273get_undefine(T273* C,T0* a1);
/*PARENT_EDGE*/T0* r273get_redefine(T273* C,T0* a1);
/*RENAME_PAIR*/void r471make(T471* C,T0* a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/T0* r511to_expression(T511* C);
/*OLD_MANIFEST_ARRAY*/void r511make(T511* C,T333 a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/void r511pretty(T511* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r511specialize_2(T511* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r511static_simplify(T511* C);
/*OLD_MANIFEST_ARRAY*/T0* r511specialize_in(T511* C,T0* a1);
extern T0*oBC511type_set_buffer;
extern int fBC511type_set_buffer;
/*OLD_MANIFEST_ARRAY*/T0* r511type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r511specialize_thru(T511* C,T0* a1,T0* a2,T0* a3);
/*OLD_MANIFEST_ARRAY*/T6 r511is_stored_in_some_local_variable(void);
/*OLD_MANIFEST_ARRAY*/void r511accept(T511* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/void r511pretty_target(T511* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r511twin(T511* C);
/*OLD_MANIFEST_ARRAY*/T0* r511written_declaration_type_mark(void);
/*OLD_MANIFEST_ARRAY*/T6 r511use_current(T0* a1);
/*OLD_MANIFEST_ARRAY*/void r511bracketed_pretty(T511* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r511non_void_no_dispatch_type(T0* a1);
/*OLD_MANIFEST_ARRAY*/T6 r511side_effect_free(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r511smallest_ancestor_from_type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r511resolve_in(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r511to_instruction(T511* C);
/*CALL_PREFIX_NOT*/T0* r480declaration_type(T480* C);
/*CALL_PREFIX_NOT*/T0* r480adapt_for(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480resolve_in(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480eiffel_parser(void);
extern T0*oBC340use_current_stack;
extern int fBC340use_current_stack;
/*CALL_PREFIX_NOT*/T0* r480use_current_stack(void);
/*CALL_PREFIX_NOT*/T0* r480collect(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480specialize_2(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480specialize_in(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480written_declaration_type_mark(void);
/*CALL_PREFIX_NOT*/T0* r480simplify(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/void r480pretty_target(T480* C,T2 a1);
/*CALL_PREFIX_NOT*/void r480safety_check(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480to_expression(T480* C);
/*CALL_PREFIX_NOT*/T0* r480specialize_thru(T480* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/T0* r480manifest_expression(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480feature_accumulator(void);
/*CALL_PREFIX_NOT*/T6 r480simplify_limit_reached(T480* C);
/*CALL_PREFIX_NOT*/void r480inline_dynamic_dispatch_(T480* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r480to_instruction(T480* C);
/*CALL_PREFIX_NOT*/T0* r480current_or_twin_init(T480* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r480standard_check_export_and_obsolete_calls(T480* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/void r480make(T480* C,T333 a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r480echo(void);
/*CALL_PREFIX_NOT*/void r480type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/void r480non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/T6 r480use_current(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480static_simplify(T480* C);
/*CALL_PREFIX_NOT*/T0* r480extra_local_expanded(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/void r480function_and_argument_count_check(T480* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r480pretty(T480* C,T2 a1);
/*CALL_PREFIX_NOT*/T6 r480side_effect_free(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480non_void_no_dispatch_type(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480inline_with(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480twin(T480* C);
/*CALL_PREFIX_NOT*/void r480bracketed_pretty(T480* C,T2 a1);
/*CALL_PREFIX_NOT*/void r480accept(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T333 r480start_position(T480* C);
/*CALL_PREFIX_NOT*/T6 r480is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/T396*create396make(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/T0* r396to_expression(T396* C);
/*ASSIGNMENT_TEST*/void r396make(T396* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r396pretty(T396* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r396simplify(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r396specialize_2(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r396static_simplify(T396* C);
/*ASSIGNMENT_TEST*/T0* r396specialize_in(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/void r396inline_dynamic_dispatch_(T396* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/void r396safety_check(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/T6 r396static_left_type_mark(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r396specialize_thru(T396* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r396with_writable(T396* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T6 r396is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/void r396accept(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r396adapt_for(T396* C,T0* a1);
extern T0*oBC396declaration_type;
extern int fBC396declaration_type;
/*ASSIGNMENT_TEST*/T0* r396declaration_type(void);
/*ASSIGNMENT_TEST*/T0* r396collect(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/void r396pretty_target(T396* C,T2 a1);
/*ASSIGNMENT_TEST*/T333 r396start_position(T396* C);
/*ASSIGNMENT_TEST*/T0* r396twin(T396* C);
/*ASSIGNMENT_TEST*/T0* r396written_declaration_type_mark(void);
/*ASSIGNMENT_TEST*/T6 r396use_current(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/void r396bracketed_pretty(T396* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r396non_void_no_dispatch_type(T0* a1);
/*ASSIGNMENT_TEST*/T6 r396side_effect_free(T396* C,T0* a1);
/*ASSIGNMENT_TEST*/void r396with_type_mark(T396* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T0* r396resolve_in(T0* a1);
/*ASSIGNMENT_TEST*/T0* r396to_instruction(T396* C);
/*OPEN_OPERAND*/T0* r467to_expression(T467* C);
/*OPEN_OPERAND*/void r467question_mark(T467* C,T333 a1);
/*OPEN_OPERAND*/void r467pretty(T467* C,T2 a1);
/*OPEN_OPERAND*/T0* r467static_simplify(T467* C);
/*OPEN_OPERAND*/T0* r467specialize_in(T467* C,T0* a1);
/*OPEN_OPERAND*/void r467inline_dynamic_dispatch_(T467* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/void r467type_holder(T467* C,T333 a1,T0* a2);
/*OPEN_OPERAND*/T0* r467specialize_thru(T467* C,T0* a1,T0* a2,T0* a3);
/*OPEN_OPERAND*/void r467update_resolved_memory(T467* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/T6 r467is_stored_in_some_local_variable(void);
/*OPEN_OPERAND*/void r467accept(T467* C,T0* a1);
/*OPEN_OPERAND*/T0* r467declaration_type(T467* C);
/*OPEN_OPERAND*/void r467pretty_target(T467* C,T2 a1);
/*OPEN_OPERAND*/T0* r467twin(T467* C);
/*OPEN_OPERAND*/T0* r467written_declaration_type_mark(void);
/*OPEN_OPERAND*/T6 r467use_current(T0* a1);
/*OPEN_OPERAND*/void r467bracketed_pretty(T467* C,T2 a1);
/*OPEN_OPERAND*/void r467crash(T467* C);
/*OPEN_OPERAND*/T0* r467non_void_no_dispatch_type(T0* a1);
/*OPEN_OPERAND*/T6 r467side_effect_free(T0* a1);
/*OPEN_OPERAND*/void r467not_yet_implemented(T467* C);
/*OPEN_OPERAND*/T0* r467resolve_in(T467* C,T0* a1);
/*OPEN_OPERAND*/T0* r467to_instruction(T467* C);
/*INTEGER_CONSTANT*/T366*create366make(T11 a1,T333 a2);
/*INTEGER_CONSTANT*/T366*create366with(T11 a1,T333 a2,T0* a3);
/*INTEGER_CONSTANT*/void r366hexadecimal(T366* C,T333 a1,T0* a2,T1 a3,T6 a4,T11 a5);
/*INTEGER_CONSTANT*/T0* r366to_expression(T366* C);
/*INTEGER_CONSTANT*/void r366make(T366* C,T11 a1,T333 a2);
/*INTEGER_CONSTANT*/T0* r366to_real_constant(T366* C);
/*INTEGER_CONSTANT*/void r366pretty(T366* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r366simplify(T366* C,T0* a1);
/*INTEGER_CONSTANT*/T6 r366extra_bracket_flag(T366* C);
/*INTEGER_CONSTANT*/void r366set_value(T366* C,T11 a1);
/*INTEGER_CONSTANT*/T0* r366static_simplify(T366* C);
/*INTEGER_CONSTANT*/void r366inline_dynamic_dispatch_(T366* C,T0* a1,T0* a2);
/*INTEGER_CONSTANT*/void r366special(T366* C,T333 a1,T0* a2,T0* a3,T11 a4);
/*INTEGER_CONSTANT*/T6 r366is_stored_in_some_local_variable(void);
/*INTEGER_CONSTANT*/void r366accept(T366* C,T0* a1);
/*INTEGER_CONSTANT*/void r366with(T366* C,T11 a1,T333 a2,T0* a3);
/*INTEGER_CONSTANT*/T0* r366result_type(T366* C);
/*INTEGER_CONSTANT*/T0* r366declaration_type(T366* C);
/*INTEGER_CONSTANT*/T0* r366collect(T366* C,T0* a1);
/*INTEGER_CONSTANT*/void r366pretty_target(T366* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r366twin(T366* C);
/*INTEGER_CONSTANT*/T0* r366written_declaration_type_mark(void);
/*INTEGER_CONSTANT*/T6 r366use_current(T0* a1);
/*INTEGER_CONSTANT*/void r366bracketed_pretty(T366* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r366non_void_no_dispatch_type(T366* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r366to_string(T366* C);
/*INTEGER_CONSTANT*/T6 r366side_effect_free(T0* a1);
/*INTEGER_CONSTANT*/void r366append_in(T366* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r366resolve_in(T366* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r366to_instruction(T366* C);
/*INTEGER_CONSTANT*/void r366_P_367_pretty_target(T366* C,T2 a1);
/*REAL_CONSTANT*/T0* r468to_expression(T468* C);
/*REAL_CONSTANT*/void r468make(T468* C,T333 a1,T0* a2,T0* a3);
/*REAL_CONSTANT*/void r468pretty(T468* C,T2 a1);
/*REAL_CONSTANT*/T0* r468simplify(T468* C,T0* a1);
/*REAL_CONSTANT*/T0* r468static_simplify(T468* C);
/*REAL_CONSTANT*/void r468inline_dynamic_dispatch_(T468* C,T0* a1,T0* a2);
/*REAL_CONSTANT*/T0* r468normalized_view(T468* C);
/*REAL_CONSTANT*/T6 r468is_stored_in_some_local_variable(void);
/*REAL_CONSTANT*/void r468accept(T468* C,T0* a1);
/*REAL_CONSTANT*/T0* r468declaration_type(T468* C);
/*REAL_CONSTANT*/T0* r468collect(T468* C,T0* a1);
/*REAL_CONSTANT*/void r468pretty_target(T468* C,T2 a1);
/*REAL_CONSTANT*/T0* r468twin(T468* C);
/*REAL_CONSTANT*/T0* r468written_declaration_type_mark(void);
/*REAL_CONSTANT*/T6 r468use_current(T0* a1);
/*REAL_CONSTANT*/void r468bracketed_pretty(T468* C,T2 a1);
/*REAL_CONSTANT*/T0* r468non_void_no_dispatch_type(T468* C,T0* a1);
/*REAL_CONSTANT*/T6 r468side_effect_free(T0* a1);
/*REAL_CONSTANT*/T0* r468resolve_in(T468* C,T0* a1);
/*REAL_CONSTANT*/T0* r468to_instruction(T468* C);
/*MANIFEST_GENERIC*/T6 r469use_current_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r469declaration_type(T469* C);
/*MANIFEST_GENERIC*/T0* r469adapt_for(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469resolve_in(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469collect(T469* C,T0* a1);
extern T0*oBC28manifest_make_name;
extern int fBC28manifest_make_name;
/*MANIFEST_GENERIC*/T0* r469manifest_make_name(void);
/*MANIFEST_GENERIC*/T6 r469is_equal(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469specialize_2(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469specialize_in(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/T0* r469written_declaration_type_mark(void);
/*MANIFEST_GENERIC*/T0* r469simplify(T469* C,T0* a1);
extern T0*oBC28manifest_semicolon_check_name;
extern int fBC28manifest_semicolon_check_name;
/*MANIFEST_GENERIC*/T0* r469manifest_semicolon_check_name(void);
/*MANIFEST_GENERIC*/void r469pretty_target(T469* C,T2 a1);
/*MANIFEST_GENERIC*/T0* r469specialize_2_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/void r469safety_check(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469to_expression(T469* C);
/*MANIFEST_GENERIC*/T0* r469specialize_thru(T469* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/void r469specialize_2_from_old_manifest_array(T469* C,T0* a1);
/*MANIFEST_GENERIC*/void r469inline_dynamic_dispatch_(T469* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r469to_instruction(T469* C);
/*MANIFEST_GENERIC*/T0* r469optional_arguments_specialize_2(T469* C,T0* a1);
/*MANIFEST_GENERIC*/void r469make(T469* C,T333 a1,T0* a2,T0* a3,T0* a4,T2 a5,T333 a6);
/*MANIFEST_GENERIC*/T0* r469calloc_name(void);
/*MANIFEST_GENERIC*/T2 r469hash_code(T469* C);
/*MANIFEST_GENERIC*/T0* r469simplify_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T6 r469use_current(T469* C,T0* a1);
/*MANIFEST_GENERIC*/void r469init(T469* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r469static_simplify(T469* C);
/*MANIFEST_GENERIC*/T0* r469specialize_in_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r469pretty(T469* C,T2 a1);
extern T0*oBC28manifest_put_name;
extern int fBC28manifest_put_name;
/*MANIFEST_GENERIC*/T0* r469manifest_put_name(void);
/*MANIFEST_GENERIC*/T6 r469side_effect_free(T0* a1);
/*MANIFEST_GENERIC*/T0* r469specialize_thru_of(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/T0* r469non_void_no_dispatch_type(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469item_list_specialize_2(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469twin(T469* C);
/*MANIFEST_GENERIC*/T0* r469adapt_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r469safety_check_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r469accept(T469* C,T0* a1);
extern T0*oBC28put_name;
extern int fBC28put_name;
/*MANIFEST_GENERIC*/T0* r469put_name(void);
/*MANIFEST_GENERIC*/T6 r469is_stored_in_some_local_variable(void);
/*EFFECTIVE_ARG_LIST*/T334*create334make_1(T0* a1);
/*EFFECTIVE_ARG_LIST*/T334*create334make_2(T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r334to_fake_tuple(T334* C);
/*EFFECTIVE_ARG_LIST*/void r334pretty(T334* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r334unused_expression_inline(T334* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r334simplify(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r334replace_item(T334* C,T2 a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r334specialize_2(T334* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EFFECTIVE_ARG_LIST*/void r334put(T334* C,T0* a1,T2 a2);
/*EFFECTIVE_ARG_LIST*/void r334static_simplify(T334* C);
/*EFFECTIVE_ARG_LIST*/T0* r334specialize_in(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r334specialize_2_on_expressions(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r334expression(T334* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r334safety_check(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r334add_last(T334* C,T0* a1);
extern T0*oBC334collecting_formal_sub_type;
extern int fBC334collecting_formal_sub_type;
/*EFFECTIVE_ARG_LIST*/T0* r334collecting_formal_sub_type(void);
/*EFFECTIVE_ARG_LIST*/T0* r334specialize_thru(T334* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/T6 r334is_static(T334* C);
/*EFFECTIVE_ARG_LIST*/T0* r334specialize_2_basic(T0* a1,T0* a2,T0* a3,T0* a4);
/*EFFECTIVE_ARG_LIST*/void r334accept(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r334adapt_for(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r334create_inline(T334* C);
/*EFFECTIVE_ARG_LIST*/T0* r334item(T334* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r334make_n(T334* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r334unused_expression_in(T334* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r334collect(T334* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/void r334simple_collect(T334* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T333 r334start_position(T334* C);
/*EFFECTIVE_ARG_LIST*/T0* r334twin(T334* C);
/*EFFECTIVE_ARG_LIST*/T6 r334use_current(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T6 r334side_effect_free(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r334inline_dynamic_dispatch(T334* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r334make_1(T334* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r334make_2(T334* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T2 r334count(T334* C);
extern T0*oBC334collecting_formal;
extern int fBC334collecting_formal;
/*EFFECTIVE_ARG_LIST*/T0* r334collecting_formal(void);
/*FUNCTION_CALL_0*/T0* r343declaration_type(T343* C);
/*FUNCTION_CALL_0*/T0* r343adapt_for(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343resolve_in(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343use_current_stack(void);
/*FUNCTION_CALL_0*/T0* r343collect(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343specialize_2(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343specialize_in(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343written_declaration_type_mark(void);
/*FUNCTION_CALL_0*/T0* r343simplify(T343* C,T0* a1);
/*FUNCTION_CALL_0*/void r343pretty_target(T343* C,T2 a1);
/*FUNCTION_CALL_0*/void r343safety_check(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343to_expression(T343* C);
/*FUNCTION_CALL_0*/T0* r343specialize_thru(T343* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T0* r343manifest_expression(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343feature_accumulator(void);
/*FUNCTION_CALL_0*/T6 r343simplify_limit_reached(T343* C);
/*FUNCTION_CALL_0*/void r343inline_dynamic_dispatch_(T343* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r343to_instruction(T343* C);
/*FUNCTION_CALL_0*/T0* r343current_or_twin_init(T343* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r343standard_check_export_and_obsolete_calls(T343* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/void r343make(T343* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r343echo(void);
/*FUNCTION_CALL_0*/void r343type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/void r343non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/T6 r343use_current(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343static_simplify(T343* C);
/*FUNCTION_CALL_0*/T0* r343extra_local_expanded(T343* C,T0* a1);
/*FUNCTION_CALL_0*/void r343function_and_argument_count_check(T343* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r343pretty(T343* C,T2 a1);
/*FUNCTION_CALL_0*/T6 r343side_effect_free(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343non_void_no_dispatch_type(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343inline_with(T343* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r343twin(T343* C);
/*FUNCTION_CALL_0*/void r343bracketed_pretty(T343* C,T2 a1);
/*FUNCTION_CALL_0*/void r343accept(T343* C,T0* a1);
/*FUNCTION_CALL_0*/void r343make_specialized(T343* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T333 r343start_position(T343* C);
/*FUNCTION_CALL_0*/T6 r343is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T6 r346is_balanced_operator(T0* a1);
/*FUNCTION_CALL_1*/T0* r346declaration_type(T346* C);
/*FUNCTION_CALL_1*/T0* r346adapt_for(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346resolve_in(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346use_current_stack(void);
/*FUNCTION_CALL_1*/T0* r346collect(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346specialize_2(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346specialize_in(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346written_declaration_type_mark(void);
/*FUNCTION_CALL_1*/T0* r346simplify(T346* C,T0* a1);
/*FUNCTION_CALL_1*/void r346pretty_target(T346* C,T2 a1);
/*FUNCTION_CALL_1*/void r346safety_check(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346to_expression(T346* C);
/*FUNCTION_CALL_1*/T0* r346specialize_thru(T346* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r346feature_accumulator(void);
/*FUNCTION_CALL_1*/void r346inline_dynamic_dispatch_(T346* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r346to_instruction(T346* C);
/*FUNCTION_CALL_1*/T0* r346current_or_twin_init(T346* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r346standard_check_export_and_obsolete_calls(T346* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r346make(T346* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r346arg1(T346* C);
/*FUNCTION_CALL_1*/void r346type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/void r346non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T6 r346use_current(T346* C,T0* a1);
/*FUNCTION_CALL_1*/void r346init(T346* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r346static_simplify(T346* C);
/*FUNCTION_CALL_1*/T0* r346extra_local_expanded(T346* C,T0* a1);
/*FUNCTION_CALL_1*/void r346function_and_argument_count_check(T346* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/void r346pretty(T346* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r346side_effect_free(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346non_void_no_dispatch_type(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346run_feature_for(T346* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r346inline_with(T346* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r346twin(T346* C);
/*FUNCTION_CALL_1*/void r346bracketed_pretty(T346* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r346is_question_mark_open_operand(T0* a1);
/*FUNCTION_CALL_1*/void r346accept(T346* C,T0* a1);
/*FUNCTION_CALL_1*/void r346make_specialized(T346* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T333 r346start_position(T346* C);
/*FUNCTION_CALL_1*/T6 r346is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T0* r346_P_345_declaration_type(T346* C);
/*FUNCTION_CALL_N*/T0* r348to_expression(T348* C);
/*FUNCTION_CALL_N*/T2 r348arg_count(T348* C);
/*FUNCTION_CALL_N*/void r348make(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r348pretty(T348* C,T2 a1);
/*FUNCTION_CALL_N*/T0* r348simplify(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/T0* r348specialize_2(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348standard_check_export_and_obsolete_calls(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r348static_simplify(T348* C);
/*FUNCTION_CALL_N*/T0* r348specialize_in(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348inline_dynamic_dispatch_(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/T0* r348run_feature_for(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348safety_check(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348init(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r348extra_local_expanded(T348* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r348specialize_thru(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T6 r348is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_N*/void r348accept(T348* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r348adapt_for(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348function_and_argument_count_check(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/T0* r348declaration_type(T348* C);
/*FUNCTION_CALL_N*/T0* r348feature_accumulator(void);
/*FUNCTION_CALL_N*/T0* r348collect(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348pretty_target(T348* C,T2 a1);
/*FUNCTION_CALL_N*/T333 r348start_position(T348* C);
/*FUNCTION_CALL_N*/T0* r348use_current_stack(void);
/*FUNCTION_CALL_N*/T0* r348twin(T348* C);
/*FUNCTION_CALL_N*/T0* r348written_declaration_type_mark(void);
/*FUNCTION_CALL_N*/T6 r348use_current(T348* C,T0* a1);
/*FUNCTION_CALL_N*/void r348bracketed_pretty(T348* C,T2 a1);
/*FUNCTION_CALL_N*/void r348type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/T0* r348non_void_no_dispatch_type(T348* C,T0* a1);
/*FUNCTION_CALL_N*/T6 r348side_effect_free(T348* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r348resolve_in(T348* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r348to_instruction(T348* C);
/*PROCEDURE_CALL_0*/T0* r337to_expression(T337* C);
/*PROCEDURE_CALL_0*/void r337make(T337* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r337pretty(T337* C,T2 a1);
/*PROCEDURE_CALL_0*/T0* r337simplify(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/void r337non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/T0* r337specialize_2(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/void r337standard_check_export_and_obsolete_calls(T337* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/T0* r337specialize_in(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/void r337inline_dynamic_dispatch_(T337* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r337safety_check(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r337run_feature_for(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r337specialize_thru(T337* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/void r337accept(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r337simplify_arguments(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r337adapt_for(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r337collect(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T333 r337start_position(T337* C);
/*PROCEDURE_CALL_0*/T0* r337use_current_stack(void);
/*PROCEDURE_CALL_0*/T0* r337twin(T337* C);
/*PROCEDURE_CALL_0*/T6 r337use_current(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/void r337type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/T6 r337side_effect_free(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r337arguments(void);
/*PROCEDURE_CALL_0*/T0* r337inline_dynamic_dispatch(T337* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r337inline_with(T337* C,T0* a1);
/*PROCEDURE_CALL_0*/void r337collect_create(T337* C,T0* a1,T0* a2,T333 a3);
/*PROCEDURE_CALL_0*/void r337procedure_and_argument_count_check(T337* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r337to_instruction(T337* C);
/*PROCEDURE_CALL_1*/T0* r341to_expression(T341* C);
/*PROCEDURE_CALL_1*/void r341make(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r341pretty(T341* C,T2 a1);
/*PROCEDURE_CALL_1*/T0* r341simplify(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/void r341non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/T0* r341specialize_2(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/void r341standard_check_export_and_obsolete_calls(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r341specialize_in(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/void r341inline_dynamic_dispatch_(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r341arg1(T341* C);
/*PROCEDURE_CALL_1*/void r341safety_check(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r341run_feature_for(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/void r341init(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r341specialize_thru(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r341accept(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r341simplify_arguments(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r341adapt_for(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r341collect(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/T333 r341start_position(T341* C);
/*PROCEDURE_CALL_1*/T0* r341use_current_stack(void);
/*PROCEDURE_CALL_1*/T0* r341twin(T341* C);
/*PROCEDURE_CALL_1*/T6 r341use_current(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/void r341type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/T6 r341side_effect_free(T341* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r341inline_dynamic_dispatch(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r341inline_with(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/void r341collect_create(T341* C,T0* a1,T0* a2,T333 a3);
/*PROCEDURE_CALL_1*/void r341procedure_and_argument_count_check(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r341to_instruction(T341* C);
/*PROCEDURE_CALL_N*/T0* r342to_expression(T342* C);
/*PROCEDURE_CALL_N*/T2 r342arg_count(T342* C);
/*PROCEDURE_CALL_N*/void r342make(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r342pretty(T342* C,T2 a1);
/*PROCEDURE_CALL_N*/T0* r342simplify(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/void r342non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/T0* r342specialize_2(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/void r342standard_check_export_and_obsolete_calls(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r342specialize_in(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/void r342inline_dynamic_dispatch_(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r342safety_check(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r342run_feature_for(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/void r342init(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r342specialize_thru(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r342accept(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r342inline_2(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r342simplify_arguments(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r342adapt_for(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r342collect(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/T333 r342start_position(T342* C);
/*PROCEDURE_CALL_N*/T0* r342use_current_stack(void);
/*PROCEDURE_CALL_N*/T0* r342twin(T342* C);
/*PROCEDURE_CALL_N*/T6 r342use_current(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/void r342type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/T6 r342side_effect_free(T342* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r342inline_dynamic_dispatch(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r342inline_with(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r342collect_create(T342* C,T0* a1,T0* a2,T333 a3);
/*PROCEDURE_CALL_N*/void r342procedure_and_argument_count_check(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r342to_instruction(T342* C);
/*CALL_PREFIX_PLUS*/T0* r482declaration_type(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482adapt_for(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482resolve_in(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482eiffel_parser(void);
/*CALL_PREFIX_PLUS*/T0* r482use_current_stack(void);
/*CALL_PREFIX_PLUS*/T0* r482collect(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482specialize_2(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482specialize_in(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482written_declaration_type_mark(void);
/*CALL_PREFIX_PLUS*/T0* r482simplify(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/void r482pretty_target(T482* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r482safety_check(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482to_expression(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482specialize_thru(T482* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/T0* r482manifest_expression(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482feature_accumulator(void);
/*CALL_PREFIX_PLUS*/T6 r482simplify_limit_reached(T482* C);
/*CALL_PREFIX_PLUS*/void r482inline_dynamic_dispatch_(T482* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r482to_instruction(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482current_or_twin_init(T482* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r482standard_check_export_and_obsolete_calls(T482* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/void r482make(T482* C,T333 a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r482echo(void);
/*CALL_PREFIX_PLUS*/void r482type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/void r482non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/T6 r482use_current(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482static_simplify(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482extra_local_expanded(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/void r482function_and_argument_count_check(T482* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r482pretty(T482* C,T2 a1);
/*CALL_PREFIX_PLUS*/T6 r482side_effect_free(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482non_void_no_dispatch_type(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482inline_with(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482twin(T482* C);
/*CALL_PREFIX_PLUS*/void r482bracketed_pretty(T482* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r482accept(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T333 r482start_position(T482* C);
/*CALL_PREFIX_PLUS*/T6 r482is_stored_in_some_local_variable(void);
/*CALL_PREFIX_MINUS*/T0* r483declaration_type(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483adapt_for(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483resolve_in(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483eiffel_parser(void);
/*CALL_PREFIX_MINUS*/T0* r483use_current_stack(void);
/*CALL_PREFIX_MINUS*/T0* r483collect(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483specialize_2(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483specialize_in(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483written_declaration_type_mark(void);
/*CALL_PREFIX_MINUS*/T0* r483simplify(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/void r483pretty_target(T483* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r483safety_check(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483to_expression(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483specialize_thru(T483* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/T0* r483manifest_expression(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483feature_accumulator(void);
/*CALL_PREFIX_MINUS*/T6 r483simplify_limit_reached(T483* C);
/*CALL_PREFIX_MINUS*/void r483inline_dynamic_dispatch_(T483* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r483to_instruction(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483current_or_twin_init(T483* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r483standard_check_export_and_obsolete_calls(T483* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/void r483make(T483* C,T333 a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r483echo(void);
/*CALL_PREFIX_MINUS*/void r483type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/void r483non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/T6 r483use_current(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483static_simplify(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483extra_local_expanded(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/void r483function_and_argument_count_check(T483* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r483pretty(T483* C,T2 a1);
/*CALL_PREFIX_MINUS*/T6 r483side_effect_free(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483non_void_no_dispatch_type(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483inline_with(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483twin(T483* C);
/*CALL_PREFIX_MINUS*/void r483bracketed_pretty(T483* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r483accept(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T333 r483start_position(T483* C);
/*CALL_PREFIX_MINUS*/T6 r483is_stored_in_some_local_variable(void);
/*CALL_PREFIX_FREEOP*/T0* r484declaration_type(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484adapt_for(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484resolve_in(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484use_current_stack(void);
/*CALL_PREFIX_FREEOP*/T0* r484collect(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484specialize_2(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484specialize_in(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484written_declaration_type_mark(void);
/*CALL_PREFIX_FREEOP*/T0* r484simplify(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/void r484pretty_target(T484* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r484safety_check(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484to_expression(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484specialize_thru(T484* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/T0* r484manifest_expression(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484feature_accumulator(void);
/*CALL_PREFIX_FREEOP*/T6 r484simplify_limit_reached(T484* C);
/*CALL_PREFIX_FREEOP*/void r484inline_dynamic_dispatch_(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r484to_instruction(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484current_or_twin_init(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r484standard_check_export_and_obsolete_calls(T484* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/void r484make(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r484echo(void);
/*CALL_PREFIX_FREEOP*/void r484type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/void r484non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/T6 r484use_current(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484static_simplify(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484extra_local_expanded(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/void r484function_and_argument_count_check(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r484pretty(T484* C,T2 a1);
/*CALL_PREFIX_FREEOP*/T6 r484side_effect_free(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484non_void_no_dispatch_type(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484inline_with(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484twin(T484* C);
/*CALL_PREFIX_FREEOP*/void r484bracketed_pretty(T484* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r484accept(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T333 r484start_position(T484* C);
/*CALL_PREFIX_FREEOP*/T6 r484is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/T0* r473to_expression(T473* C);
/*MANIFEST_TUPLE*/void r473make(T473* C,T333 a1,T0* a2);
/*MANIFEST_TUPLE*/void r473pretty(T473* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r473simplify(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473create_expression_for(T473* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r473specialize_2(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473static_simplify(T473* C);
/*MANIFEST_TUPLE*/T0* r473specialize_in(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473safety_check(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473init(T473* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r473specialize_thru(T473* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_TUPLE*/T6 r473is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/void r473accept(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473adapt_for(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473pretty_target(T473* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r473twin(T473* C);
/*MANIFEST_TUPLE*/T0* r473written_declaration_type_mark(void);
/*MANIFEST_TUPLE*/T6 r473use_current(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473bracketed_pretty(T473* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r473non_void_no_dispatch_type(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T6 r473side_effect_free(T0* a1);
/*MANIFEST_TUPLE*/T0* r473resolve_in(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473to_instruction(T473* C);
/*MANIFEST_TUPLE*/T0* r473current_or_twin_init(T473* C,T0* a1,T0* a2);
/*E_TRUE*/T380*create380make(T333 a1);
/*E_TRUE*/T0* r380to_expression(T380* C);
/*E_TRUE*/void r380make(T380* C,T333 a1);
/*E_TRUE*/void r380pretty(T2 a1);
/*E_TRUE*/T0* r380simplify(T380* C,T0* a1);
/*E_TRUE*/T0* r380static_simplify(T380* C);
/*E_TRUE*/void r380inline_dynamic_dispatch_(T380* C,T0* a1,T0* a2);
/*E_TRUE*/T6 r380is_stored_in_some_local_variable(void);
/*E_TRUE*/void r380accept(T380* C,T0* a1);
extern T0*oBC381declaration_type;
extern int fBC381declaration_type;
/*E_TRUE*/T0* r380declaration_type(void);
/*E_TRUE*/T0* r380collect(T0* a1);
/*E_TRUE*/void r380pretty_target(T2 a1);
/*E_TRUE*/T0* r380twin(T380* C);
/*E_TRUE*/T0* r380written_declaration_type_mark(void);
/*E_TRUE*/T6 r380use_current(T0* a1);
/*E_TRUE*/void r380bracketed_pretty(T2 a1);
/*E_TRUE*/T0* r380non_void_no_dispatch_type(T0* a1);
/*E_TRUE*/T6 r380side_effect_free(T0* a1);
/*E_TRUE*/T0* r380resolve_in(T0* a1);
/*E_TRUE*/T0* r380to_instruction(T380* C);
/*E_FALSE*/T451*create451make(T333 a1);
/*E_FALSE*/T0* r451to_expression(T451* C);
/*E_FALSE*/void r451make(T451* C,T333 a1);
/*E_FALSE*/void r451pretty(T2 a1);
/*E_FALSE*/T0* r451simplify(T451* C,T0* a1);
/*E_FALSE*/T0* r451static_simplify(T451* C);
/*E_FALSE*/void r451inline_dynamic_dispatch_(T451* C,T0* a1,T0* a2);
/*E_FALSE*/T6 r451is_stored_in_some_local_variable(void);
/*E_FALSE*/void r451accept(T451* C,T0* a1);
/*E_FALSE*/T0* r451declaration_type(void);
/*E_FALSE*/T0* r451collect(T0* a1);
/*E_FALSE*/void r451pretty_target(T2 a1);
/*E_FALSE*/T0* r451twin(T451* C);
/*E_FALSE*/T0* r451written_declaration_type_mark(void);
/*E_FALSE*/T6 r451use_current(T0* a1);
/*E_FALSE*/void r451bracketed_pretty(T2 a1);
/*E_FALSE*/T0* r451non_void_no_dispatch_type(T0* a1);
/*E_FALSE*/T6 r451side_effect_free(T0* a1);
/*E_FALSE*/T0* r451resolve_in(T0* a1);
/*E_FALSE*/T0* r451to_instruction(T451* C);
/*CHARACTER_CONSTANT*/T457*create457with(T333 a1,T3 a2);
/*CHARACTER_CONSTANT*/T0* r457to_expression(T457* C);
/*CHARACTER_CONSTANT*/void r457make(T457* C,T333 a1,T3 a2,T0* a3);
/*CHARACTER_CONSTANT*/void r457character_coding(T3 a1,T0* a2);
/*CHARACTER_CONSTANT*/void r457pretty(T457* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r457simplify(T457* C,T0* a1);
/*CHARACTER_CONSTANT*/T0* r457static_simplify(T457* C);
/*CHARACTER_CONSTANT*/void r457inline_dynamic_dispatch_(T457* C,T0* a1,T0* a2);
/*CHARACTER_CONSTANT*/T6 r457is_stored_in_some_local_variable(void);
/*CHARACTER_CONSTANT*/void r457accept(T457* C,T0* a1);
/*CHARACTER_CONSTANT*/void r457with(T457* C,T333 a1,T3 a2);
extern T0*oBC457declaration_type;
extern int fBC457declaration_type;
/*CHARACTER_CONSTANT*/T0* r457declaration_type(void);
/*CHARACTER_CONSTANT*/T0* r457collect(T0* a1);
/*CHARACTER_CONSTANT*/void r457pretty_target(T457* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r457twin(T457* C);
/*CHARACTER_CONSTANT*/T0* r457written_declaration_type_mark(void);
/*CHARACTER_CONSTANT*/T6 r457use_current(T0* a1);
/*CHARACTER_CONSTANT*/void r457bracketed_pretty(T457* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r457non_void_no_dispatch_type(T0* a1);
/*CHARACTER_CONSTANT*/T0* r457to_string(T457* C);
/*CHARACTER_CONSTANT*/T6 r457side_effect_free(T0* a1);
/*CHARACTER_CONSTANT*/T0* r457resolve_in(T0* a1);
/*CHARACTER_CONSTANT*/T0* r457to_instruction(T457* C);
/*PRECURSOR_EXPRESSION*/T0* r474to_expression(T474* C);
/*PRECURSOR_EXPRESSION*/void r474make(T474* C,T333 a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T0* r474simplify(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474specialize_2(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474static_simplify(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474specialize_in(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r474inline_dynamic_dispatch_(T474* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r474safety_check(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r474init(T474* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r474pretty_(T474* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r474specialize_thru(T474* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T6 r474is_stored_in_some_local_variable(void);
/*PRECURSOR_EXPRESSION*/void r474accept(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474adapt_for(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474declaration_type(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474feature_accumulator(void);
/*PRECURSOR_EXPRESSION*/T0* r474collect(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r474pretty_target(T474* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r474twin(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474written_declaration_type_mark(void);
/*PRECURSOR_EXPRESSION*/T6 r474use_current(T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474non_void_no_dispatch_type(T0* a1);
/*PRECURSOR_EXPRESSION*/T6 r474side_effect_free(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474resolve_in(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474to_instruction(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474current_or_twin_init(T474* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r508to_expression(T508* C);
/*FAKE_TARGET*/void r508make(T508* C,T333 a1,T0* a2);
/*FAKE_TARGET*/void r508pretty(T508* C,T2 a1);
/*FAKE_TARGET*/T0* r508static_simplify(T508* C);
/*FAKE_TARGET*/T0* r508specialize_in(T508* C,T0* a1);
/*FAKE_TARGET*/void r508inline_dynamic_dispatch_(T508* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r508specialize_thru(T508* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TARGET*/T6 r508is_stored_in_some_local_variable(void);
/*FAKE_TARGET*/void r508accept(T508* C,T0* a1);
/*FAKE_TARGET*/T0* r508adapt_for(T508* C,T0* a1);
/*FAKE_TARGET*/T0* r508declaration_type(T508* C);
/*FAKE_TARGET*/void r508pretty_target(T508* C,T2 a1);
/*FAKE_TARGET*/T0* r508twin(T508* C);
/*FAKE_TARGET*/T0* r508written_declaration_type_mark(void);
/*FAKE_TARGET*/T6 r508use_current(T0* a1);
/*FAKE_TARGET*/void r508bracketed_pretty(T508* C,T2 a1);
/*FAKE_TARGET*/T0* r508non_void_no_dispatch_type(T0* a1);
/*FAKE_TARGET*/T6 r508side_effect_free(T0* a1);
/*FAKE_TARGET*/T0* r508resolve_in(T508* C,T0* a1);
/*FAKE_TARGET*/T0* r508to_instruction(T508* C);
/*FAKE_TARGET*/T0* r508current_or_twin_init(T508* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509to_expression(T509* C);
/*CREATE_EXPRESSION*/void r509make(T509* C,T333 a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T0* r509created_type(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509pretty(T509* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r509simplify(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509specialize_2(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509default_user_expanded(T509* C,T333 a1,T0* a2);
/*CREATE_EXPRESSION*/void r509specialize_2_checks(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509static_simplify(T509* C);
/*CREATE_EXPRESSION*/T0* r509specialize_in(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509inline_dynamic_dispatch_(T509* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/void r509safety_check(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509init(T509* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/T0* r509extra_local_expanded(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509specialize_thru(T509* C,T0* a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T6 r509is_stored_in_some_local_variable(void);
/*CREATE_EXPRESSION*/void r509accept(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509adapt_for(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509declaration_type(T509* C);
/*CREATE_EXPRESSION*/T0* r509default_create_name(void);
/*CREATE_EXPRESSION*/T0* r509collect(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509pretty_target(T509* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r509any_default_create_fs(void);
/*CREATE_EXPRESSION*/T0* r509twin(T509* C);
/*CREATE_EXPRESSION*/T0* r509written_declaration_type_mark(void);
/*CREATE_EXPRESSION*/T0* r509creation_procedure(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r509use_current(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509bracketed_pretty(T509* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r509non_void_no_dispatch_type(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r509side_effect_free(T0* a1);
/*CREATE_EXPRESSION*/T0* r509arguments(T509* C);
/*CREATE_EXPRESSION*/T0* r509resolve_in(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509to_instruction(T509* C);
/*CREATE_EXPRESSION*/T0* r509current_or_twin_init(T509* C,T0* a1,T0* a2);
/*ARGUMENT_NAME1*/void r448make(T448* C,T333 a1,T0* a2);
/*ARGUMENT_NAME1*/T0* r448specialize_in(T448* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r448specialize_thru(T448* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME1*/T0* r448adapt_for(T448* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r448collect(T448* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r448twin(T448* C);
/*ARGUMENT_NAME1*/T0* r448resolve_in(T448* C,T0* a1);
/*ARGUMENT_NAME1*/void r448name_clash_check_(T448* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/void r449make(T449* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/T0* r449specialize_in(T449* C,T0* a1);
/*DECLARATION_GROUP*/void r449append_in_local_var_list(T449* C,T0* a1);
/*DECLARATION_GROUP*/T0* r449specialize_thru(T449* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_GROUP*/void r449append_in_formal_arg_list(T449* C,T0* a1);
/*DECLARATION_GROUP*/T0* r449twin(T449* C);
/*DECLARATION_GROUP*/void r449pretty_in(T449* C,T0* a1);
/*DECLARATION_GROUP*/T2 r449count(T449* C);
/*DECLARATION_1*/void r386make(T386* C,T0* a1,T0* a2);
/*DECLARATION_1*/T0* r386specialize_in(T386* C,T0* a1);
/*DECLARATION_1*/void r386append_in_local_var_list(T386* C,T0* a1);
/*DECLARATION_1*/T0* r386specialize_thru(T386* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_1*/void r386append_in_formal_arg_list(T386* C,T0* a1);
/*DECLARATION_1*/T0* r386twin(T386* C);
/*DECLARATION_1*/void r386pretty_in(T386* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r658to_expression(T658* C);
/*REQUIRE_ASSERTION*/void r658make(T658* C,T333 a1,T6 a2,T0* a3,T0* a4);
/*REQUIRE_ASSERTION*/void r658pretty(T658* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r658simplify(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r658specialize_2(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r658specialize_in(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/void r658inline_dynamic_dispatch_(T658* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r658add_parent_require(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T6 r658is_always_true(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/void r658safety_check(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/void r658from_parents(T658* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/T6 r658has_item_located_at(T658* C,T333 a1);
/*REQUIRE_ASSERTION*/T0* r658specialize_thru(T658* C,T0* a1,T0* a2,T0* a3);
/*REQUIRE_ASSERTION*/void r658accept(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r658adapt_for(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r658item(T658* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r658collect(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T333 r658start_position(T658* C);
/*REQUIRE_ASSERTION*/T0* r658twin(T658* C);
/*REQUIRE_ASSERTION*/T6 r658use_current(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/void r658crash(T658* C);
/*REQUIRE_ASSERTION*/T6 r658side_effect_free(T658* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r658inline_dynamic_dispatch(T658* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r658not_yet_implemented(T658* C);
/*REQUIRE_ASSERTION*/T2 r658count(T658* C);
/*REQUIRE_ASSERTION*/T0* r658to_instruction(T658* C);
/*ASSERTION*/T0* r413to_expression(T413* C);
/*ASSERTION*/void r413make(T413* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/void r413pretty(T413* C,T2 a1);
/*ASSERTION*/void r413specialize_2_check(T413* C,T0* a1);
/*ASSERTION*/T0* r413specialize_2(T413* C,T0* a1);
/*ASSERTION*/T0* r413static_simplify(T413* C);
/*ASSERTION*/T0* r413specialize_in(T413* C,T0* a1);
/*ASSERTION*/void r413inline_dynamic_dispatch_(T413* C,T0* a1,T0* a2);
/*ASSERTION*/T6 r413is_always_true(T413* C,T0* a1);
/*ASSERTION*/void r413safety_check(T413* C,T0* a1);
/*ASSERTION*/T0* r413specialize_thru(T413* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/T6 r413is_static(T413* C);
/*ASSERTION*/T6 r413is_stored_in_some_local_variable(void);
/*ASSERTION*/void r413accept(T413* C,T0* a1);
/*ASSERTION*/T0* r413adapt_for(T413* C,T0* a1);
/*ASSERTION*/T0* r413collect(T413* C,T0* a1);
/*ASSERTION*/T333 r413start_position(T413* C);
/*ASSERTION*/T0* r413twin(T413* C);
/*ASSERTION*/T0* r413written_declaration_type_mark(void);
/*ASSERTION*/T6 r413use_current(T413* C,T0* a1);
/*ASSERTION*/T0* r413non_void_no_dispatch_type(T0* a1);
/*ASSERTION*/T6 r413side_effect_free(T413* C,T0* a1);
/*ASSERTION*/T0* r413resolve_in(T0* a1);
/*ASSERTION*/T0* r413to_instruction(T413* C);
/*ASSERTION*/T0* r413current_or_twin_init(T413* C,T0* a1);
/*LOCAL_NAME1*/void r383make(T383* C,T333 a1,T0* a2);
/*LOCAL_NAME1*/T0* r383specialize_in(T383* C,T0* a1);
/*LOCAL_NAME1*/void r383parsing_reference_counter_increment(T383* C);
/*LOCAL_NAME1*/void r383live_reference_counter_increment(T383* C);
/*LOCAL_NAME1*/T6 r383is_used(T383* C,T0* a1);
/*LOCAL_NAME1*/T0* r383specialize_thru(T383* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME1*/T0* r383adapt_for(T383* C,T0* a1);
/*LOCAL_NAME1*/T0* r383collect(T383* C,T0* a1);
/*LOCAL_NAME1*/T0* r383twin(T383* C);
/*LOCAL_NAME1*/void r383usage_warning_check(T383* C,T0* a1);
/*LOCAL_NAME1*/void r383name_clash_check_(T383* C,T0* a1,T0* a2);
/*LOCAL_VAR_LIST*/void r387make(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/void r387pretty(T387* C);
/*LOCAL_VAR_LIST*/T0* r387specialize_in(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r387rank_of(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/void r387add_last(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r387specialize_thru(T387* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_VAR_LIST*/void r387accept(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r387adapt_for(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/void r387name_clash_check(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r387compute_flat_list_count_by_using_list(T387* C);
/*LOCAL_VAR_LIST*/void r387collect(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r387twin(T387* C);
/*LOCAL_VAR_LIST*/T0* r387type_mark(T387* C,T2 a1);
/*LOCAL_VAR_LIST*/T6 r387side_effect_free(T387* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r387count(T387* C);
/*FEATURE_NAME_LIST*/void r443fe_multiple(T0* a1,T0* a2);
/*FEATURE_NAME_LIST*/void r443all_positions_in_error_handler(T443* C);
/*FEATURE_NAME_LIST*/T0* r443internal_name(T443* C,T0* a1);
/*FEATURE_NAME_LIST*/void r443add_last(T443* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r443item(T443* C,T2 a1);
/*FEATURE_NAME_LIST*/void r443make_n(T443* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r443index_of(T443* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r443root_creation_search(T443* C,T0* a1);
/*FEATURE_NAME_LIST*/T6 r443has_make(T443* C);
/*FEATURE_NAME_LIST*/void r443make_1(T443* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r443count(T443* C);
/*FEATURE_NAME_LIST*/T6 r443has(T443* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510to_expression(T510* C);
/*CHECK_COMPOUND*/void r510make(T510* C,T333 a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/void r510pretty(T510* C,T2 a1);
/*CHECK_COMPOUND*/T0* r510simplify(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510specialize_2(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510specialize_in(T510* C,T0* a1);
/*CHECK_COMPOUND*/void r510inline_dynamic_dispatch_(T510* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/void r510safety_check(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510specialize_thru(T510* C,T0* a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/T6 r510must_be_generated(T510* C,T0* a1);
/*CHECK_COMPOUND*/void r510accept(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510adapt_for(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510collect(T510* C,T0* a1);
/*CHECK_COMPOUND*/T333 r510start_position(T510* C);
/*CHECK_COMPOUND*/T0* r510twin(T510* C);
/*CHECK_COMPOUND*/T6 r510use_current(T510* C,T0* a1);
/*CHECK_COMPOUND*/T6 r510side_effect_free(T0* a1);
/*CHECK_COMPOUND*/T0* r510inline_dynamic_dispatch(T510* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/T0* r510to_instruction(T510* C);
/*CHECK_COMPOUND*/T0* r510current_or_twin_init(T510* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470to_expression(T470* C);
/*DEBUG_COMPOUND*/void r470make(T470* C,T333 a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/void r470pretty(T470* C,T2 a1);
/*DEBUG_COMPOUND*/T0* r470simplify(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470specialize_2(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470specialize_in(T470* C,T0* a1);
/*DEBUG_COMPOUND*/void r470inline_dynamic_dispatch_(T470* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/void r470safety_check(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470specialize_thru(T470* C,T0* a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/T6 r470must_be_generated(T470* C,T0* a1);
/*DEBUG_COMPOUND*/void r470accept(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470adapt_for(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470collect(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470twin(T470* C);
/*DEBUG_COMPOUND*/T6 r470use_current(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T6 r470side_effect_free(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470inline_dynamic_dispatch(T470* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/T6 r470match_debug_key(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470to_instruction(T470* C);
/*DEBUG_COMPOUND*/T0* r470current_or_twin_init(T470* C,T0* a1);
/*IFTHEN*/T407*create407make(T333 a1,T0* a2,T0* a3);
/*IFTHEN*/T0* r407to_expression(T407* C);
/*IFTHEN*/void r407make(T407* C,T333 a1,T0* a2,T0* a3);
/*IFTHEN*/void r407pretty(T407* C,T2 a1);
/*IFTHEN*/T0* r407simplify(T407* C,T0* a1);
/*IFTHEN*/T0* r407specialize_2(T407* C,T0* a1);
/*IFTHEN*/void r407pretty_end_if(T2 a1);
/*IFTHEN*/T0* r407specialize_in(T407* C,T0* a1);
/*IFTHEN*/void r407inline_dynamic_dispatch_(T407* C,T0* a1,T0* a2);
/*IFTHEN*/void r407safety_check(T407* C,T0* a1);
/*IFTHEN*/void r407init(T407* C,T0* a1,T0* a2);
/*IFTHEN*/void r407pretty_(T407* C,T2 a1,T0* a2);
/*IFTHEN*/void r407specialize_2_check_(T407* C,T0* a1);
/*IFTHEN*/T0* r407specialize_thru(T407* C,T0* a1,T0* a2,T0* a3);
/*IFTHEN*/void r407accept(T407* C,T0* a1);
/*IFTHEN*/T0* r407adapt_for(T407* C,T0* a1);
/*IFTHEN*/T0* r407collect(T407* C,T0* a1);
/*IFTHEN*/T0* r407twin(T407* C);
/*IFTHEN*/T6 r407use_current(T407* C,T0* a1);
/*IFTHEN*/T6 r407side_effect_free(T0* a1);
/*IFTHEN*/T0* r407inline_dynamic_dispatch(T407* C,T0* a1,T0* a2);
/*IFTHEN*/T0* r407to_instruction(T407* C);
/*IFTHEN*/T0* r407current_or_twin_init(T407* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r393to_expression(T393* C);
/*IFTHENELSE*/void r393pretty(T393* C,T2 a1);
/*IFTHENELSE*/T0* r393simplify(T393* C,T0* a1);
/*IFTHENELSE*/void r393specialize_2_check(T393* C,T0* a1);
/*IFTHENELSE*/void r393inline_dd(T393* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*IFTHENELSE*/T0* r393specialize_2(T393* C,T0* a1);
/*IFTHENELSE*/void r393pretty_end_if(T2 a1);
/*IFTHENELSE*/T0* r393specialize_in(T393* C,T0* a1);
/*IFTHENELSE*/void r393inline_dynamic_dispatch_(T393* C,T0* a1,T0* a2);
/*IFTHENELSE*/void r393safety_check(T393* C,T0* a1);
/*IFTHENELSE*/void r393init(T393* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r393pretty_(T393* C,T2 a1,T0* a2);
/*IFTHENELSE*/void r393specialize_2_check_(T393* C,T0* a1);
/*IFTHENELSE*/T0* r393specialize_thru(T393* C,T0* a1,T0* a2,T0* a3);
/*IFTHENELSE*/T0* r393simplify_elseif_list(T0* a1,T6 a2,T0* a3);
/*IFTHENELSE*/void r393accept(T393* C,T0* a1);
/*IFTHENELSE*/T0* r393adapt_for(T393* C,T0* a1);
/*IFTHENELSE*/T0* r393collect(T393* C,T0* a1);
/*IFTHENELSE*/T0* r393twin(T393* C);
/*IFTHENELSE*/T6 r393use_current(T393* C,T0* a1);
/*IFTHENELSE*/T6 r393side_effect_free(T0* a1);
/*IFTHENELSE*/void r393with_else(T393* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r393with_elseif(T393* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/T0* r393inline_dynamic_dispatch(T393* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r393to_instruction(T393* C);
/*IFTHENELSE*/void r393with_elseif_and_else(T393* C,T333 a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*IFTHENELSE*/T0* r393current_or_twin_init(T393* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WHEN_CLAUSE*/T0* r352specialize_2_string(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352adapt_for(T352* C,T0* a1);
/*WHEN_CLAUSE*/void r352not_yet_implemented(T352* C);
/*WHEN_CLAUSE*/T0* r352collect(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352specialize_2(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352specialize_in(T352* C,T0* a1);
/*WHEN_CLAUSE*/T6 r352validity_check_continued(T352* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r352simplify(T352* C,T0* a1);
/*WHEN_CLAUSE*/T6 r352match_value(T352* C,T2 a1);
/*WHEN_CLAUSE*/void r352safety_check(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352specialize_2_integer(T352* C,T0* a1);
/*WHEN_CLAUSE*/void r352force_internal_character_values(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352to_expression(T352* C);
/*WHEN_CLAUSE*/void r352add_value(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352specialize_thru(T352* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r352inline_dynamic_dispatch_(T352* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T0* r352to_instruction(T352* C);
/*WHEN_CLAUSE*/void r352make(T352* C,T0* a1,T333 a2,T0* a3);
/*WHEN_CLAUSE*/void r352make_strippable(T352* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r352is_live(T352* C,T0* a1);
/*WHEN_CLAUSE*/void r352no_manifest_string_slice_check(T0* a1);
/*WHEN_CLAUSE*/void r352crash(T352* C);
/*WHEN_CLAUSE*/T6 r352is_more_complex_than(T352* C,T0* a1);
/*WHEN_CLAUSE*/void r352force_internal_integer_values(T352* C,T0* a1);
/*WHEN_CLAUSE*/T2 r352parser_add_value(T352* C,T2 a1,T0* a2);
/*WHEN_CLAUSE*/T6 r352use_current(T352* C,T0* a1);
/*WHEN_CLAUSE*/void r352init(T352* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r352validity_check(T352* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r352parser_make(T352* C,T333 a1,T0* a2);
/*WHEN_CLAUSE*/void r352pretty(T352* C,T2 a1);
/*WHEN_CLAUSE*/T0* r352strip_or_set_value(T352* C,T2 a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r352inline_dynamic_dispatch(T352* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r352side_effect_free(T0* a1);
/*WHEN_CLAUSE*/T0* r352twin(T352* C);
/*WHEN_CLAUSE*/void r352compute_values(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352specialize_2_when_items_integer(T352* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T2 r352largest_range_of_values(T352* C);
/*WHEN_CLAUSE*/void r352add_slice(T352* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r352accept(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352specialize_2_character(T352* C,T0* a1);
/*WHEN_CLAUSE*/T0* r352create_merged_with(T352* C,T0* a1);
/*IMPLICIT_CURRENT*/T364*create364make(T333 a1);
/*IMPLICIT_CURRENT*/T0* r364to_expression(T364* C);
/*IMPLICIT_CURRENT*/void r364make(T364* C,T333 a1);
/*IMPLICIT_CURRENT*/void r364pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r364simplify(T364* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r364static_simplify(T364* C);
/*IMPLICIT_CURRENT*/T0* r364specialize_in(T364* C,T0* a1);
/*IMPLICIT_CURRENT*/void r364inline_dynamic_dispatch_(T364* C,T0* a1,T0* a2);
/*IMPLICIT_CURRENT*/T6 r364is_stored_in_some_local_variable(void);
/*IMPLICIT_CURRENT*/void r364accept(T364* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r364collect(T0* a1);
/*IMPLICIT_CURRENT*/T0* r364twin(T364* C);
/*IMPLICIT_CURRENT*/T0* r364written_declaration_type_mark(void);
/*IMPLICIT_CURRENT*/T6 r364use_current(T0* a1);
/*IMPLICIT_CURRENT*/void r364bracketed_pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r364non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CURRENT*/T6 r364side_effect_free(T0* a1);
/*IMPLICIT_CURRENT*/T0* r364resolve_in(T0* a1);
/*IMPLICIT_CURRENT*/T0* r364to_instruction(T364* C);
/*OTHER_INSPECT_STATEMENT*/void r357make_strippable(T357* C,T333 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r357to_expression(T357* C);
/*OTHER_INSPECT_STATEMENT*/void r357make(T357* C,T333 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r357with_when_list(T357* C,T333 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r357pretty(T357* C,T2 a1);
/*OTHER_INSPECT_STATEMENT*/T0* r357simplify(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r357specialize_2(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r357force_internal_values(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r357validity_check(T357* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r357specialize_in(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r357inline_dynamic_dispatch_(T357* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T6 r357same_compound(T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r357safety_check(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r357init(T357* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r357count_call(T357* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r357set_else_compound(T357* C,T333 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r357specialize_thru(T357* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC358code_comparator;
/*OTHER_INSPECT_STATEMENT*/T0* r357count_name(void);
/*OTHER_INSPECT_STATEMENT*/void r357accept(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r357validity_check_continued(T357* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r357add_when(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r357adapt_for(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T2 r357largest_range_of_values(T357* C);
/*OTHER_INSPECT_STATEMENT*/T6 r357use_c_switch_statement(T357* C);
/*OTHER_INSPECT_STATEMENT*/T0* r357collect(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r357item_call(T357* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r357twin(T357* C);
/*OTHER_INSPECT_STATEMENT*/T6 r357use_current(T357* C,T0* a1);
extern T0*oBC28item_name;
extern int fBC28item_name;
/*OTHER_INSPECT_STATEMENT*/T0* r357item_name(void);
/*OTHER_INSPECT_STATEMENT*/T6 r357side_effect_free(T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r357inline_dynamic_dispatch(T357* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r357compute_values(T357* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r357to_instruction(T357* C);
/*OTHER_INSPECT_STATEMENT*/T0* r357current_or_twin_init(T357* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472to_expression(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472with_when_list(T472* C,T333 a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472pretty(T472* C,T2 a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472simplify(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472specialize_2(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472validity_check(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472specialize_in(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472inline_dynamic_dispatch_(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472same_compound(T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472safety_check(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472init(T472* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472count_call(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472set_else_compound(T472* C,T333 a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472specialize_thru(T472* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472count_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472accept(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472validity_check_continued(T472* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472add_when(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472adapt_for(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T2 r472largest_range_of_values(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472use_c_switch_statement(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472collect(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472item_call(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472twin(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472use_current(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472item_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472side_effect_free(T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472inline_dynamic_dispatch(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472compute_values(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472to_instruction(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472current_or_twin_init(T472* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/T0* r418to_expression(T418* C);
/*ASSERTION_LIST*/void r418make(T418* C,T333 a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r418pretty(T418* C,T2 a1);
/*ASSERTION_LIST*/T0* r418simplify(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418specialize_2(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418specialize_in(T418* C,T0* a1);
/*ASSERTION_LIST*/void r418inline_dynamic_dispatch_(T418* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/T6 r418is_always_true(T418* C,T0* a1);
/*ASSERTION_LIST*/void r418safety_check(T418* C,T0* a1);
/*ASSERTION_LIST*/void r418set_list(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418specialize_thru(T418* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r418pretty_as_loop_invariant(T418* C,T2 a1);
/*ASSERTION_LIST*/T2 r418upper(T418* C);
/*ASSERTION_LIST*/void r418accept(T418* C,T0* a1);
/*ASSERTION_LIST*/void r418set_eiffel_parser_stamp(T418* C,T2 a1);
/*ASSERTION_LIST*/T0* r418adapt_for(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418item(T418* C,T2 a1);
/*ASSERTION_LIST*/T0* r418collect(T418* C,T0* a1);
/*ASSERTION_LIST*/void r418pretty_print_with_tag(T418* C,T2 a1,T0* a2);
/*ASSERTION_LIST*/T6 r418is_empty(T418* C);
/*ASSERTION_LIST*/T0* r418specialize_2_without_checks(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418twin(T418* C);
/*ASSERTION_LIST*/void r418pretty_as_check_compound(T418* C,T2 a1);
/*ASSERTION_LIST*/T6 r418use_current(T418* C,T0* a1);
/*ASSERTION_LIST*/void r418crash(T418* C);
/*ASSERTION_LIST*/void r418breakpoint(T418* C);
/*ASSERTION_LIST*/T6 r418side_effect_free(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418inline_dynamic_dispatch(T418* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/void r418not_yet_implemented(T418* C);
/*ASSERTION_LIST*/void r418do_all(T418* C,T0* a1);
/*ASSERTION_LIST*/T0* r418to_instruction(T418* C);
/*ASSERTION_LIST*/T2 r418lower(T418* C);
/*LOOP_VARIANT*/T0* r459to_expression(T459* C);
/*LOOP_VARIANT*/void r459make(T459* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*LOOP_VARIANT*/void r459pretty(T459* C,T2 a1);
/*LOOP_VARIANT*/T0* r459simplify(T459* C,T0* a1);
/*LOOP_VARIANT*/void r459specialize_2_check(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459specialize_2(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459static_simplify(T459* C);
/*LOOP_VARIANT*/T0* r459specialize_in(T459* C,T0* a1);
/*LOOP_VARIANT*/void r459inline_dynamic_dispatch_(T459* C,T0* a1,T0* a2);
/*LOOP_VARIANT*/void r459safety_check(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459specialize_thru(T459* C,T0* a1,T0* a2,T0* a3);
/*LOOP_VARIANT*/T6 r459is_stored_in_some_local_variable(void);
/*LOOP_VARIANT*/void r459accept(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459declaration_type(T459* C);
/*LOOP_VARIANT*/T0* r459collect(T459* C,T0* a1);
/*LOOP_VARIANT*/T333 r459start_position(T459* C);
/*LOOP_VARIANT*/T0* r459twin(T459* C);
/*LOOP_VARIANT*/T0* r459written_declaration_type_mark(void);
/*LOOP_VARIANT*/T6 r459use_current(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459non_void_no_dispatch_type(T0* a1);
/*LOOP_VARIANT*/T6 r459side_effect_free(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459resolve_in(T459* C,T0* a1);
/*LOOP_VARIANT*/T0* r459to_instruction(T459* C);
/*LOOP_INSTRUCTION*/T0* r460to_expression(T460* C);
/*LOOP_INSTRUCTION*/void r460make(T460* C,T333 a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*LOOP_INSTRUCTION*/void r460pretty(T460* C,T2 a1);
/*LOOP_INSTRUCTION*/T0* r460simplify(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/void r460specialize_2_check(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r460specialize_2(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r460specialize_in(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/void r460inline_dynamic_dispatch_(T460* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/void r460safety_check(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r460specialize_thru(T460* C,T0* a1,T0* a2,T0* a3);
/*LOOP_INSTRUCTION*/void r460accept(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r460adapt_for(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r460collect(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r460use_current(T460* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r460side_effect_free(T0* a1);
/*LOOP_INSTRUCTION*/T0* r460inline_dynamic_dispatch(T460* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/T0* r460to_instruction(T460* C);
/*LOOP_INSTRUCTION*/T6 r460loop_check(T0* a1);
/*RESULT*/T0* r359to_expression(T359* C);
/*RESULT*/void r359make(T359* C,T333 a1);
/*RESULT*/void r359pretty(T2 a1);
/*RESULT*/T0* r359simplify(T359* C,T0* a1);
/*RESULT*/void r359validity_check(T359* C,T0* a1);
/*RESULT*/T0* r359static_simplify(T359* C);
/*RESULT*/T0* r359specialize_in(T359* C,T0* a1);
/*RESULT*/void r359inline_dynamic_dispatch_(T359* C,T0* a1,T0* a2);
/*RESULT*/void r359set_enclosing_function(T359* C,T0* a1);
/*RESULT*/T0* r359specialize_thru(T359* C,T0* a1,T0* a2,T0* a3);
/*RESULT*/void r359set_type_mark_memory(T359* C,T0* a1);
/*RESULT*/T6 r359is_stored_in_some_local_variable(void);
/*RESULT*/void r359accept(T359* C,T0* a1);
/*RESULT*/T0* r359adapt_for(T359* C,T0* a1);
/*RESULT*/T0* r359feature_accumulator(void);
/*RESULT*/T0* r359collect(T0* a1);
/*RESULT*/void r359pretty_target(T2 a1);
/*RESULT*/T0* r359twin(T359* C);
/*RESULT*/T6 r359use_current(T0* a1);
/*RESULT*/void r359bracketed_pretty(T2 a1);
/*RESULT*/T0* r359non_void_no_dispatch_type(T359* C,T0* a1);
/*RESULT*/T6 r359side_effect_free(T0* a1);
/*RESULT*/T0* r359resolve_in(T359* C,T0* a1);
/*RESULT*/T0* r359to_instruction(T359* C);
/*RESULT*/T0* r359current_or_twin_init(T359* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r399to_expression(T399* C);
/*CREATE_INSTRUCTION*/void r399make(T399* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r399created_type(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/void r399typed_internals(T399* C,T333 a1,T0* a2);
/*CREATE_INSTRUCTION*/void r399pretty(T399* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r399simplify(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r399specialize_2(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/void r399specialize_2_checks(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r399specialize_in(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/void r399inline_dynamic_dispatch_(T399* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r399safety_check(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/void r399set_call(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/void r399init(T399* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/T0* r399specialize_thru(T399* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/void r399accept(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/void r399set_eiffel_parser_stamp(T399* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r399adapt_for(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r399default_create_name(void);
/*CREATE_INSTRUCTION*/T0* r399collect(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r399any_default_create_fs(void);
/*CREATE_INSTRUCTION*/T0* r399specialize_2_without_checks(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r399twin(T399* C);
/*CREATE_INSTRUCTION*/T0* r399creation_procedure(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r399use_current(T399* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r399side_effect_free(T0* a1);
/*CREATE_INSTRUCTION*/T0* r399arguments(T399* C);
/*CREATE_INSTRUCTION*/T0* r399inline_dynamic_dispatch(T399* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r399make_specialized(T399* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r399to_instruction(T399* C);
/*CREATE_INSTRUCTION*/T0* r399current_or_twin_init(T399* C,T0* a1,T0* a2,T0* a3);
/*C_INLINE*/T0* r458to_expression(T458* C);
/*C_INLINE*/void r458pretty(T458* C,T2 a1);
/*C_INLINE*/T0* r458simplify(T458* C,T0* a1);
/*C_INLINE*/T0* r458specialize_2(T458* C,T0* a1);
/*C_INLINE*/void r458inline_dynamic_dispatch_(T458* C,T0* a1,T0* a2);
/*C_INLINE*/void r458accept(T458* C,T0* a1);
/*C_INLINE*/void r458make_c_inline_h(T458* C,T333 a1,T0* a2);
/*C_INLINE*/void r458make_c_inline_c(T458* C,T333 a1,T0* a2);
/*C_INLINE*/T6 r458use_current(T458* C,T0* a1);
/*C_INLINE*/void r458crash(T458* C);
/*C_INLINE*/T6 r458side_effect_free(T0* a1);
/*C_INLINE*/T0* r458inline_dynamic_dispatch(T458* C,T0* a1,T0* a2);
/*C_INLINE*/void r458not_yet_implemented(T458* C);
/*C_INLINE*/T0* r458to_instruction(T458* C);
/*PRECURSOR_INSTRUCTION*/T0* r487to_expression(T487* C);
/*PRECURSOR_INSTRUCTION*/void r487make(T487* C,T333 a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r487pretty(T487* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r487simplify(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487specialize_2(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487specialize_in(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r487inline_dynamic_dispatch_(T487* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r487safety_check(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r487init(T487* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r487pretty_(T487* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r487specialize_thru(T487* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r487accept(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487adapt_for(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487feature_accumulator(void);
/*PRECURSOR_INSTRUCTION*/T0* r487collect(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487twin(T487* C);
/*PRECURSOR_INSTRUCTION*/T6 r487use_current(T0* a1);
/*PRECURSOR_INSTRUCTION*/T6 r487side_effect_free(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487inline_dynamic_dispatch(T487* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/T0* r487to_instruction(T487* C);
/*PRECURSOR_INSTRUCTION*/T0* r487current_or_twin_init(T487* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T477*create477make(T333 a1);
/*WRITTEN_CURRENT*/T0* r477to_expression(T477* C);
/*WRITTEN_CURRENT*/void r477make(T477* C,T333 a1);
/*WRITTEN_CURRENT*/void r477pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r477simplify(T477* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r477static_simplify(T477* C);
/*WRITTEN_CURRENT*/T0* r477specialize_in(T477* C,T0* a1);
/*WRITTEN_CURRENT*/void r477inline_dynamic_dispatch_(T477* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T6 r477is_stored_in_some_local_variable(void);
/*WRITTEN_CURRENT*/void r477accept(T477* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r477collect(T0* a1);
/*WRITTEN_CURRENT*/void r477pretty_target(T2 a1);
/*WRITTEN_CURRENT*/T0* r477twin(T477* C);
/*WRITTEN_CURRENT*/T0* r477written_declaration_type_mark(void);
/*WRITTEN_CURRENT*/T6 r477use_current(T0* a1);
/*WRITTEN_CURRENT*/void r477bracketed_pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r477non_void_no_dispatch_type(T0* a1);
/*WRITTEN_CURRENT*/T6 r477side_effect_free(T0* a1);
/*WRITTEN_CURRENT*/T0* r477resolve_in(T0* a1);
/*WRITTEN_CURRENT*/T0* r477to_instruction(T477* C);
/*ASSIGNMENT*/T362*create362inline_make(T0* a1,T0* a2);
/*ASSIGNMENT*/T362*create362make(T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r362to_expression(T362* C);
/*ASSIGNMENT*/void r362make(T362* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r362fatal_error_for(T362* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ASSIGNMENT*/void r362pretty(T362* C,T2 a1);
/*ASSIGNMENT*/T0* r362simplify(T362* C,T0* a1);
/*ASSIGNMENT*/T0* r362specialize_2(T362* C,T0* a1);
/*ASSIGNMENT*/T0* r362specialize_in(T362* C,T0* a1);
/*ASSIGNMENT*/void r362inline_dynamic_dispatch_(T362* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r362safety_check(T362* C,T0* a1);
/*ASSIGNMENT*/T0* r362specialize_thru(T362* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT*/T6 r362reset_default_value_in_local_or_result(T362* C,T0* a1);
/*ASSIGNMENT*/void r362inline_make(T362* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r362accept(T362* C,T0* a1);
/*ASSIGNMENT*/T0* r362adapt_for(T362* C,T0* a1);
/*ASSIGNMENT*/T0* r362collect(T362* C,T0* a1);
/*ASSIGNMENT*/T333 r362start_position(T362* C);
/*ASSIGNMENT*/T6 r362use_current(T362* C,T0* a1);
/*ASSIGNMENT*/T6 r362side_effect_free(T0* a1);
/*ASSIGNMENT*/T0* r362inline_dynamic_dispatch(T362* C,T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r362to_instruction(T362* C);
/*ASSIGNMENT_ATTEMPT*/T389*create389make(T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/T0* r389to_expression(T389* C);
/*ASSIGNMENT_ATTEMPT*/void r389make(T389* C,T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/void r389pretty(T389* C,T2 a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389simplify(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389specialize_2(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389specialize_in(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/void r389inline_dynamic_dispatch_(T389* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/void r389safety_check(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389specialize_thru(T389* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_ATTEMPT*/void r389accept(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389adapt_for(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389collect(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T333 r389start_position(T389* C);
/*ASSIGNMENT_ATTEMPT*/T6 r389use_current(T389* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T6 r389side_effect_free(T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r389inline_dynamic_dispatch(T389* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/T0* r389to_instruction(T389* C);
/*RETRY_INSTRUCTION*/T0* r454to_expression(T454* C);
/*RETRY_INSTRUCTION*/void r454make(T454* C,T333 a1);
/*RETRY_INSTRUCTION*/void r454pretty(T2 a1);
/*RETRY_INSTRUCTION*/T0* r454simplify(T454* C,T0* a1);
/*RETRY_INSTRUCTION*/void r454inline_dynamic_dispatch_(T454* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/void r454accept(T454* C,T0* a1);
/*RETRY_INSTRUCTION*/T6 r454use_current(T0* a1);
/*RETRY_INSTRUCTION*/T6 r454side_effect_free(T0* a1);
/*RETRY_INSTRUCTION*/T0* r454inline_dynamic_dispatch(T454* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/T0* r454to_instruction(T454* C);
/*COMPOUND*/T390*create390make_2(T0* a1,T0* a2);
/*COMPOUND*/void r390simplify_add(T0* a1,T0* a2);
/*COMPOUND*/T0* r390to_expression(T390* C);
/*COMPOUND*/T0* r390first(T390* C);
/*COMPOUND*/void r390pretty(T390* C,T2 a1);
/*COMPOUND*/T0* r390simplify(T390* C,T0* a1);
/*COMPOUND*/T0* r390specialize_2(T390* C,T0* a1);
/*COMPOUND*/T0* r390twin_remove_first(T390* C);
/*COMPOUND*/T0* r390specialize_in(T390* C,T0* a1);
/*COMPOUND*/void r390inline_dynamic_dispatch_(T390* C,T0* a1,T0* a2);
/*COMPOUND*/void r390safety_check(T390* C,T0* a1);
/*COMPOUND*/void r390set_list(T390* C,T0* a1);
/*COMPOUND*/T0* r390specialize_thru(T390* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r390upper(T390* C);
/*COMPOUND*/void r390accept(T390* C,T0* a1);
/*COMPOUND*/T0* r390adapt_for(T390* C,T0* a1);
/*COMPOUND*/void r390from_list(T390* C,T0* a1);
/*COMPOUND*/void r390make_n(T390* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*COMPOUND*/T0* r390collect(T390* C,T0* a1);
/*COMPOUND*/T6 r390is_a_comment(T0* a1);
/*COMPOUND*/T333 r390start_position(T390* C);
/*COMPOUND*/T0* r390twin(T390* C);
/*COMPOUND*/T6 r390use_current(T390* C,T0* a1);
/*COMPOUND*/T6 r390side_effect_free(T390* C,T0* a1);
/*COMPOUND*/T0* r390inline_dynamic_dispatch(T390* C,T0* a1,T0* a2);
/*COMPOUND*/void r390make_2(T390* C,T0* a1,T0* a2);
/*COMPOUND*/void r390make_3(T390* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r390count(T390* C);
/*COMPOUND*/void r390make_4(T390* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*COMPOUND*/T0* r390to_instruction(T390* C);
/*ENSURE_ASSERTION*/T653*create653make(T333 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T0* r653to_expression(T653* C);
/*ENSURE_ASSERTION*/void r653make(T653* C,T333 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T6 r653has_assertion_located_at(T653* C,T333 a1);
/*ENSURE_ASSERTION*/void r653pretty(T653* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r653simplify(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653specialize_2(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653specialize_in(T653* C,T0* a1);
/*ENSURE_ASSERTION*/void r653inline_dynamic_dispatch_(T653* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r653is_always_true(T653* C,T0* a1);
/*ENSURE_ASSERTION*/void r653safety_check(T653* C,T0* a1);
/*ENSURE_ASSERTION*/void r653set_list(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653specialize_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r653pretty_as_loop_invariant(T653* C,T2 a1);
/*ENSURE_ASSERTION*/T2 r653upper(T653* C);
/*ENSURE_ASSERTION*/void r653assertion_list_make(T653* C,T333 a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r653accept(T653* C,T0* a1);
/*ENSURE_ASSERTION*/void r653set_eiffel_parser_stamp(T653* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r653adapt_for(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653item(T653* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r653add_items_from(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653collect(T653* C,T0* a1);
/*ENSURE_ASSERTION*/void r653pretty_print_with_tag(T653* C,T2 a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r653is_empty(T653* C);
/*ENSURE_ASSERTION*/T0* r653specialize_2_without_checks(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653twin(T653* C);
/*ENSURE_ASSERTION*/void r653pretty_as_check_compound(T653* C,T2 a1);
/*ENSURE_ASSERTION*/T6 r653use_current(T653* C,T0* a1);
/*ENSURE_ASSERTION*/void r653breakpoint(T653* C);
/*ENSURE_ASSERTION*/void r653crash(T653* C);
/*ENSURE_ASSERTION*/T6 r653side_effect_free(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653inline_dynamic_dispatch(T653* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/void r653not_yet_implemented(T653* C);
/*ENSURE_ASSERTION*/T2 r653count(T653* C);
/*ENSURE_ASSERTION*/void r653do_all(T653* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r653to_instruction(T653* C);
/*ENSURE_ASSERTION*/T2 r653lower(T653* C);
/*AGENT_CREATION*/T0* r476to_expression(T476* C);
/*AGENT_CREATION*/void r476make(T476* C,T333 a1,T0* a2,T0* a3);
/*AGENT_CREATION*/void r476pretty(T476* C,T2 a1);
/*AGENT_CREATION*/T0* r476simplify(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476specialize_2(T476* C,T0* a1);
/*AGENT_CREATION*/T6 r476same_mold_id_as(T476* C,T0* a1);
extern T0*oBC28is_equal_name;
extern int fBC28is_equal_name;
/*AGENT_CREATION*/T0* r476is_equal_name(void);
/*AGENT_CREATION*/T0* r476specialize_2_procedure(T476* C,T0* a1);
/*AGENT_CREATION*/T6 r476is_equal_used_in(T0* a1);
/*AGENT_CREATION*/T0* r476static_simplify(T476* C);
/*AGENT_CREATION*/T0* r476specialize_in(T476* C,T0* a1);
/*AGENT_CREATION*/void r476inline_dynamic_dispatch_(T476* C,T0* a1,T0* a2);
/*AGENT_CREATION*/T0* r476specialize_2_function(T476* C,T0* a1);
/*AGENT_CREATION*/void r476safety_check(T476* C,T0* a1);
/*AGENT_CREATION*/void r476mold_id_in(T476* C,T0* a1,T0* a2);
/*AGENT_CREATION*/T0* r476specialize_thru(T476* C,T0* a1,T0* a2,T0* a3);
/*AGENT_CREATION*/T6 r476is_stored_in_some_local_variable(void);
/*AGENT_CREATION*/void r476accept(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476adapt_for(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476declaration_type(T476* C);
/*AGENT_CREATION*/T0* r476collect(T476* C,T0* a1);
/*AGENT_CREATION*/void r476pretty_target(T476* C,T2 a1);
extern T0*oBC28any_is_equal_fs;
extern int fBC28any_is_equal_fs;
/*AGENT_CREATION*/T0* r476any_is_equal_fs(void);
/*AGENT_CREATION*/void r476set_inside_agent_launcher_flag(T476* C,T6 a1);
/*AGENT_CREATION*/T0* r476twin(T476* C);
/*AGENT_CREATION*/T0* r476written_declaration_type_mark(void);
/*AGENT_CREATION*/T6 r476use_current(T476* C,T0* a1);
/*AGENT_CREATION*/void r476bracketed_pretty(T476* C,T2 a1);
/*AGENT_CREATION*/T6 r476stored_closed_operand(T476* C,T0* a1,T0* a2);
/*AGENT_CREATION*/void r476omitted_open_arguments_update(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476non_void_no_dispatch_type(T476* C,T0* a1);
/*AGENT_CREATION*/T6 r476side_effect_free(T0* a1);
/*AGENT_CREATION*/T0* r476resolve_in(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476to_instruction(T476* C);
/*E_VOID*/T391*create391make(T333 a1);
/*E_VOID*/T0* r391to_expression(T391* C);
/*E_VOID*/void r391make(T391* C,T333 a1);
/*E_VOID*/void r391pretty(T2 a1);
/*E_VOID*/T0* r391static_simplify(T391* C);
/*E_VOID*/void r391inline_dynamic_dispatch_(T391* C,T0* a1,T0* a2);
/*E_VOID*/T6 r391is_stored_in_some_local_variable(void);
/*E_VOID*/void r391accept(T391* C,T0* a1);
/*E_VOID*/T0* r391collect(T391* C,T0* a1);
/*E_VOID*/T0* r391twin(T391* C);
/*E_VOID*/T0* r391written_declaration_type_mark(void);
/*E_VOID*/T6 r391use_current(T0* a1);
/*E_VOID*/void r391bracketed_pretty(T2 a1);
/*E_VOID*/T0* r391non_void_no_dispatch_type(T0* a1);
/*E_VOID*/T6 r391side_effect_free(T0* a1);
/*E_VOID*/T0* r391resolve_in(T391* C,T0* a1);
/*E_VOID*/T0* r391to_instruction(T391* C);
/*E_OLD*/T0* r485to_expression(T485* C);
/*E_OLD*/void r485make(T485* C,T333 a1,T0* a2);
extern T0*oBC485vaol_check_memory;
/*E_OLD*/void r485pretty(T485* C,T2 a1);
/*E_OLD*/T0* r485simplify(T485* C,T0* a1);
/*E_OLD*/T0* r485specialize_2(T485* C,T0* a1);
/*E_OLD*/void r485set_tag(T485* C,T0* a1,T0* a2);
/*E_OLD*/T0* r485static_simplify(T485* C);
/*E_OLD*/T0* r485specialize_in(T485* C,T0* a1);
/*E_OLD*/void r485inline_dynamic_dispatch_(T485* C,T0* a1,T0* a2);
/*E_OLD*/void r485safety_check(T485* C,T0* a1);
/*E_OLD*/T0* r485specialize_thru(T485* C,T0* a1,T0* a2,T0* a3);
/*E_OLD*/T6 r485is_stored_in_some_local_variable(void);
/*E_OLD*/void r485accept(T485* C,T0* a1);
/*E_OLD*/T0* r485adapt_for(T485* C,T0* a1);
/*E_OLD*/T0* r485declaration_type(T485* C);
/*E_OLD*/T0* r485collect(T485* C,T0* a1);
/*E_OLD*/void r485pretty_target(T485* C,T2 a1);
/*E_OLD*/T0* r485twin(T485* C);
/*E_OLD*/T0* r485written_declaration_type_mark(void);
/*E_OLD*/T6 r485use_current(T485* C,T0* a1);
/*E_OLD*/void r485bracketed_pretty(T485* C,T2 a1);
/*E_OLD*/void r485crash(T485* C);
/*E_OLD*/T0* r485non_void_no_dispatch_type(T485* C,T0* a1);
/*E_OLD*/T6 r485side_effect_free(T0* a1);
/*E_OLD*/void r485not_yet_implemented(T485* C);
/*E_OLD*/T0* r485tag(T485* C,T0* a1);
/*E_OLD*/T0* r485resolve_in(T485* C,T0* a1);
/*E_OLD*/T0* r485to_instruction(T485* C);
/*E_OLD*/T0* r485current_or_twin_init(T485* C,T0* a1);
/*CALL_INFIX_FREEOP*/T6 r507is_balanced_operator(T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507declaration_type(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507adapt_for(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507resolve_in(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507use_current_stack(void);
/*CALL_INFIX_FREEOP*/T0* r507collect(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507specialize_2(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507specialize_in(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507written_declaration_type_mark(void);
/*CALL_INFIX_FREEOP*/T0* r507simplify(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r507pretty_target(T507* C,T2 a1);
/*CALL_INFIX_FREEOP*/void r507safety_check(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507to_expression(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507specialize_thru(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r507feature_accumulator(void);
/*CALL_INFIX_FREEOP*/void r507inline_dynamic_dispatch_(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r507to_instruction(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507current_or_twin_init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r507standard_check_export_and_obsolete_calls(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r507make(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r507arg1(T507* C);
/*CALL_INFIX_FREEOP*/void r507type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/void r507non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/T6 r507use_current(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r507init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r507static_simplify(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507extra_local_expanded(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r507function_and_argument_count_check(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/void r507pretty(T507* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r507side_effect_free(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507non_void_no_dispatch_type(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507run_feature_for(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507inline_with(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r507twin(T507* C);
/*CALL_INFIX_FREEOP*/void r507bracketed_pretty(T507* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r507is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_FREEOP*/void r507accept(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T333 r507start_position(T507* C);
/*CALL_INFIX_FREEOP*/T6 r507is_stored_in_some_local_variable(void);
/*CALL_INFIX_FREEOP*/T0* r507_P_345_declaration_type(T507* C);
/*CALL_INFIX_POWER*/T6 r506is_balanced_operator(T0* a1);
/*CALL_INFIX_POWER*/T0* r506declaration_type(T506* C);
/*CALL_INFIX_POWER*/T0* r506adapt_for(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506resolve_in(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506eiffel_parser(void);
/*CALL_INFIX_POWER*/T0* r506use_current_stack(void);
/*CALL_INFIX_POWER*/T0* r506collect(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506specialize_2(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506specialize_in(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506written_declaration_type_mark(void);
/*CALL_INFIX_POWER*/T0* r506simplify(T506* C,T0* a1);
/*CALL_INFIX_POWER*/void r506pretty_target(T506* C,T2 a1);
/*CALL_INFIX_POWER*/void r506safety_check(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506to_expression(T506* C);
/*CALL_INFIX_POWER*/T0* r506specialize_thru(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r506feature_accumulator(void);
/*CALL_INFIX_POWER*/void r506inline_dynamic_dispatch_(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r506to_instruction(T506* C);
/*CALL_INFIX_POWER*/T0* r506current_or_twin_init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r506standard_check_export_and_obsolete_calls(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r506make(T506* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r506arg1(T506* C);
/*CALL_INFIX_POWER*/void r506type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/void r506non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/T6 r506use_current(T506* C,T0* a1);
/*CALL_INFIX_POWER*/void r506init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r506static_simplify(T506* C);
/*CALL_INFIX_POWER*/T0* r506extra_local_expanded(T506* C,T0* a1);
/*CALL_INFIX_POWER*/void r506function_and_argument_count_check(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/void r506pretty(T506* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r506side_effect_free(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506non_void_no_dispatch_type(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506run_feature_for(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506inline_with(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r506twin(T506* C);
/*CALL_INFIX_POWER*/void r506bracketed_pretty(T506* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r506is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_POWER*/void r506accept(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T333 r506start_position(T506* C);
/*CALL_INFIX_POWER*/T6 r506is_stored_in_some_local_variable(void);
/*CALL_INFIX_POWER*/T0* r506_P_345_declaration_type(T506* C);
/*CALL_INFIX_TIMES*/T6 r502is_balanced_operator(T0* a1);
/*CALL_INFIX_TIMES*/T0* r502declaration_type(T502* C);
/*CALL_INFIX_TIMES*/T0* r502adapt_for(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502resolve_in(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502eiffel_parser(void);
/*CALL_INFIX_TIMES*/T0* r502use_current_stack(void);
/*CALL_INFIX_TIMES*/T0* r502collect(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502specialize_2(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502specialize_in(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502written_declaration_type_mark(void);
/*CALL_INFIX_TIMES*/T0* r502simplify(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/void r502pretty_target(T502* C,T2 a1);
/*CALL_INFIX_TIMES*/void r502safety_check(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502to_expression(T502* C);
/*CALL_INFIX_TIMES*/T0* r502specialize_thru(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r502feature_accumulator(void);
/*CALL_INFIX_TIMES*/void r502inline_dynamic_dispatch_(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r502to_instruction(T502* C);
/*CALL_INFIX_TIMES*/T0* r502current_or_twin_init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r502standard_check_export_and_obsolete_calls(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r502make(T502* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r502arg1(T502* C);
/*CALL_INFIX_TIMES*/void r502type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/void r502non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/T6 r502use_current(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/void r502init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r502static_simplify(T502* C);
/*CALL_INFIX_TIMES*/T0* r502extra_local_expanded(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/void r502function_and_argument_count_check(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/void r502pretty(T502* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r502side_effect_free(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502non_void_no_dispatch_type(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502run_feature_for(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502inline_with(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r502twin(T502* C);
/*CALL_INFIX_TIMES*/void r502bracketed_pretty(T502* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r502is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_TIMES*/void r502accept(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T333 r502start_position(T502* C);
/*CALL_INFIX_TIMES*/T6 r502is_stored_in_some_local_variable(void);
/*CALL_INFIX_TIMES*/T0* r502_P_345_declaration_type(T502* C);
/*CALL_INFIX_INT_DIV*/T6 r503is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503declaration_type(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503adapt_for(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503resolve_in(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503eiffel_parser(void);
/*CALL_INFIX_INT_DIV*/T0* r503use_current_stack(void);
/*CALL_INFIX_INT_DIV*/T0* r503collect(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503specialize_2(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503specialize_in(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503written_declaration_type_mark(void);
/*CALL_INFIX_INT_DIV*/T0* r503simplify(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r503pretty_target(T503* C,T2 a1);
/*CALL_INFIX_INT_DIV*/void r503safety_check(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503to_expression(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503specialize_thru(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r503feature_accumulator(void);
/*CALL_INFIX_INT_DIV*/void r503inline_dynamic_dispatch_(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r503to_instruction(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503current_or_twin_init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r503standard_check_export_and_obsolete_calls(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r503make(T503* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r503arg1(T503* C);
/*CALL_INFIX_INT_DIV*/void r503type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/void r503non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/T6 r503use_current(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r503init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r503static_simplify(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503extra_local_expanded(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r503function_and_argument_count_check(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/void r503pretty(T503* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r503side_effect_free(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503non_void_no_dispatch_type(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503run_feature_for(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503inline_with(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r503twin(T503* C);
/*CALL_INFIX_INT_DIV*/void r503bracketed_pretty(T503* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r503is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_DIV*/void r503accept(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T333 r503start_position(T503* C);
/*CALL_INFIX_INT_DIV*/T6 r503is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_DIV*/T0* r503_P_345_declaration_type(T503* C);
/*CALL_INFIX_INT_REM*/T6 r504is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504declaration_type(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504adapt_for(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504resolve_in(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504eiffel_parser(void);
/*CALL_INFIX_INT_REM*/T0* r504use_current_stack(void);
/*CALL_INFIX_INT_REM*/T0* r504collect(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504specialize_2(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504specialize_in(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504written_declaration_type_mark(void);
/*CALL_INFIX_INT_REM*/T0* r504simplify(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r504pretty_target(T504* C,T2 a1);
/*CALL_INFIX_INT_REM*/void r504safety_check(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504to_expression(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504specialize_thru(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r504feature_accumulator(void);
/*CALL_INFIX_INT_REM*/void r504inline_dynamic_dispatch_(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r504to_instruction(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504current_or_twin_init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r504standard_check_export_and_obsolete_calls(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r504make(T504* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r504arg1(T504* C);
/*CALL_INFIX_INT_REM*/void r504type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/void r504non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/T6 r504use_current(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r504init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r504static_simplify(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504extra_local_expanded(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r504function_and_argument_count_check(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/void r504pretty(T504* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r504side_effect_free(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504non_void_no_dispatch_type(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504run_feature_for(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504inline_with(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r504twin(T504* C);
/*CALL_INFIX_INT_REM*/void r504bracketed_pretty(T504* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r504is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_REM*/void r504accept(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T333 r504start_position(T504* C);
/*CALL_INFIX_INT_REM*/T6 r504is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_REM*/T0* r504_P_345_declaration_type(T504* C);
/*CALL_INFIX_DIV*/T6 r505is_balanced_operator(T0* a1);
/*CALL_INFIX_DIV*/T0* r505declaration_type(T505* C);
/*CALL_INFIX_DIV*/T0* r505adapt_for(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505resolve_in(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505eiffel_parser(void);
/*CALL_INFIX_DIV*/T0* r505use_current_stack(void);
/*CALL_INFIX_DIV*/T0* r505collect(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505specialize_2(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505specialize_in(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505written_declaration_type_mark(void);
/*CALL_INFIX_DIV*/T0* r505simplify(T505* C,T0* a1);
/*CALL_INFIX_DIV*/void r505pretty_target(T505* C,T2 a1);
/*CALL_INFIX_DIV*/void r505safety_check(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505to_expression(T505* C);
/*CALL_INFIX_DIV*/T0* r505specialize_thru(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r505feature_accumulator(void);
/*CALL_INFIX_DIV*/void r505inline_dynamic_dispatch_(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r505to_instruction(T505* C);
/*CALL_INFIX_DIV*/T0* r505current_or_twin_init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r505standard_check_export_and_obsolete_calls(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r505make(T505* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r505arg1(T505* C);
/*CALL_INFIX_DIV*/void r505type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/void r505non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/T6 r505use_current(T505* C,T0* a1);
/*CALL_INFIX_DIV*/void r505init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r505static_simplify(T505* C);
/*CALL_INFIX_DIV*/T0* r505extra_local_expanded(T505* C,T0* a1);
/*CALL_INFIX_DIV*/void r505function_and_argument_count_check(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/void r505pretty(T505* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r505side_effect_free(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505non_void_no_dispatch_type(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505run_feature_for(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505inline_with(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r505twin(T505* C);
/*CALL_INFIX_DIV*/void r505bracketed_pretty(T505* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r505is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_DIV*/void r505accept(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T333 r505start_position(T505* C);
/*CALL_INFIX_DIV*/T6 r505is_stored_in_some_local_variable(void);
/*CALL_INFIX_DIV*/T0* r505_P_345_declaration_type(T505* C);
/*CALL_INFIX_PLUS*/T6 r501is_balanced_operator(T0* a1);
/*CALL_INFIX_PLUS*/T0* r501declaration_type(T501* C);
/*CALL_INFIX_PLUS*/T0* r501adapt_for(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501resolve_in(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501eiffel_parser(void);
/*CALL_INFIX_PLUS*/T0* r501use_current_stack(void);
/*CALL_INFIX_PLUS*/T0* r501collect(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501specialize_2(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501specialize_in(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501written_declaration_type_mark(void);
/*CALL_INFIX_PLUS*/T0* r501simplify(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/void r501pretty_target(T501* C,T2 a1);
/*CALL_INFIX_PLUS*/void r501safety_check(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501to_expression(T501* C);
/*CALL_INFIX_PLUS*/T0* r501specialize_thru(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r501feature_accumulator(void);
/*CALL_INFIX_PLUS*/void r501inline_dynamic_dispatch_(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r501to_instruction(T501* C);
/*CALL_INFIX_PLUS*/T0* r501current_or_twin_init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r501standard_check_export_and_obsolete_calls(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r501make(T501* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r501arg1(T501* C);
/*CALL_INFIX_PLUS*/void r501type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/void r501non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/T6 r501use_current(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/void r501init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r501static_simplify(T501* C);
/*CALL_INFIX_PLUS*/T0* r501extra_local_expanded(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/void r501function_and_argument_count_check(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/void r501pretty(T501* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r501side_effect_free(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501non_void_no_dispatch_type(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501run_feature_for(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501inline_with(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r501twin(T501* C);
/*CALL_INFIX_PLUS*/void r501bracketed_pretty(T501* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r501is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_PLUS*/void r501accept(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T333 r501start_position(T501* C);
/*CALL_INFIX_PLUS*/T6 r501is_stored_in_some_local_variable(void);
/*CALL_INFIX_PLUS*/T0* r501_P_345_declaration_type(T501* C);
/*CALL_INFIX_MINUS*/T6 r369is_balanced_operator(T0* a1);
/*CALL_INFIX_MINUS*/T0* r369declaration_type(T369* C);
/*CALL_INFIX_MINUS*/T0* r369adapt_for(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369resolve_in(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369eiffel_parser(void);
/*CALL_INFIX_MINUS*/T0* r369use_current_stack(void);
/*CALL_INFIX_MINUS*/T0* r369collect(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369specialize_2(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369specialize_in(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369written_declaration_type_mark(void);
/*CALL_INFIX_MINUS*/T0* r369simplify(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/void r369pretty_target(T369* C,T2 a1);
/*CALL_INFIX_MINUS*/void r369safety_check(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369to_expression(T369* C);
/*CALL_INFIX_MINUS*/T0* r369specialize_thru(T369* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r369feature_accumulator(void);
/*CALL_INFIX_MINUS*/void r369inline_dynamic_dispatch_(T369* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r369to_instruction(T369* C);
/*CALL_INFIX_MINUS*/T0* r369current_or_twin_init(T369* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r369standard_check_export_and_obsolete_calls(T369* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r369make(T369* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r369arg1(T369* C);
/*CALL_INFIX_MINUS*/void r369type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/void r369non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/T6 r369use_current(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/void r369init(T369* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r369static_simplify(T369* C);
/*CALL_INFIX_MINUS*/T0* r369extra_local_expanded(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/void r369function_and_argument_count_check(T369* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/void r369pretty(T369* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r369side_effect_free(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369non_void_no_dispatch_type(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369run_feature_for(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r369inline_with(T369* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r369twin(T369* C);
/*CALL_INFIX_MINUS*/void r369bracketed_pretty(T369* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r369is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_MINUS*/void r369accept(T369* C,T0* a1);
/*CALL_INFIX_MINUS*/T333 r369start_position(T369* C);
/*CALL_INFIX_MINUS*/T6 r369is_stored_in_some_local_variable(void);
/*CALL_INFIX_MINUS*/T0* r369_P_345_declaration_type(T369* C);
/*BUILT_IN_EQ_NEQ*/T392*create392make_neq(T0* a1,T333 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T392*create392make_eq(T0* a1,T333 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r392to_expression(T392* C);
/*BUILT_IN_EQ_NEQ*/void r392make_neq(T392* C,T0* a1,T333 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/void r392pretty(T392* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T0* r392simplify(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r392set_left_and_right(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r392specialize_2(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r392simplify_integer_real(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r392static_simplify(T392* C);
/*BUILT_IN_EQ_NEQ*/T0* r392specialize_in(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r392inline_dynamic_dispatch_(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/void r392safety_check(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r392specialize_2_standard_comparison_check(T392* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r392simplify_null_pointer(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r392simplify_character_constant(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r392specialize_thru(T392* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r392is_static(T392* C);
/*BUILT_IN_EQ_NEQ*/void r392make_eq(T392* C,T0* a1,T333 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r392is_stored_in_some_local_variable(void);
/*BUILT_IN_EQ_NEQ*/void r392accept(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r392adapt_for(T392* C,T0* a1);
extern T0*oBC392declaration_type;
extern int fBC392declaration_type;
/*BUILT_IN_EQ_NEQ*/T0* r392declaration_type(void);
/*BUILT_IN_EQ_NEQ*/T0* r392collect(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r392pretty_target(T392* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T333 r392start_position(T392* C);
/*BUILT_IN_EQ_NEQ*/T0* r392twin(T392* C);
/*BUILT_IN_EQ_NEQ*/T0* r392written_declaration_type_mark(void);
/*BUILT_IN_EQ_NEQ*/T6 r392use_current(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r392bracketed_pretty(T392* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/void r392void_comparison_check(T392* C,T0* a1,T333 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r392non_void_no_dispatch_type(T0* a1);
/*BUILT_IN_EQ_NEQ*/T6 r392side_effect_free(T392* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r392simplify_void(T392* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r392inline_with(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r392true_or_false(T392* C,T6 a1);
/*BUILT_IN_EQ_NEQ*/T0* r392simplify_boolean_constant(T392* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r392resolve_in(T0* a1);
/*BUILT_IN_EQ_NEQ*/void r392basic_make(T392* C,T6 a1,T0* a2,T333 a3,T0* a4);
/*BUILT_IN_EQ_NEQ*/T0* r392to_instruction(T392* C);
/*CALL_INFIX_LE*/T6 r497is_balanced_operator(T0* a1);
/*CALL_INFIX_LE*/T0* r497declaration_type(T497* C);
/*CALL_INFIX_LE*/T0* r497adapt_for(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497resolve_in(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497eiffel_parser(void);
/*CALL_INFIX_LE*/T0* r497use_current_stack(void);
/*CALL_INFIX_LE*/T0* r497collect(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497specialize_2(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497specialize_in(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497written_declaration_type_mark(void);
/*CALL_INFIX_LE*/T0* r497simplify(T497* C,T0* a1);
/*CALL_INFIX_LE*/void r497pretty_target(T497* C,T2 a1);
/*CALL_INFIX_LE*/void r497safety_check(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497to_expression(T497* C);
/*CALL_INFIX_LE*/T0* r497specialize_thru(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r497feature_accumulator(void);
/*CALL_INFIX_LE*/void r497inline_dynamic_dispatch_(T497* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r497to_instruction(T497* C);
/*CALL_INFIX_LE*/T0* r497current_or_twin_init(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r497standard_check_export_and_obsolete_calls(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r497make(T497* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_LE*/T0* r497arg1(T497* C);
/*CALL_INFIX_LE*/void r497type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/void r497non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/T6 r497use_current(T497* C,T0* a1);
/*CALL_INFIX_LE*/void r497init(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r497static_simplify(T497* C);
/*CALL_INFIX_LE*/T0* r497extra_local_expanded(T497* C,T0* a1);
/*CALL_INFIX_LE*/void r497function_and_argument_count_check(T497* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/void r497pretty(T497* C,T2 a1);
/*CALL_INFIX_LE*/T6 r497side_effect_free(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497non_void_no_dispatch_type(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497run_feature_for(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497inline_with(T497* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r497twin(T497* C);
/*CALL_INFIX_LE*/void r497bracketed_pretty(T497* C,T2 a1);
/*CALL_INFIX_LE*/T6 r497is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LE*/void r497accept(T497* C,T0* a1);
/*CALL_INFIX_LE*/T333 r497start_position(T497* C);
/*CALL_INFIX_LE*/T6 r497is_stored_in_some_local_variable(void);
/*CALL_INFIX_LE*/T0* r497_P_345_declaration_type(T497* C);
/*CALL_INFIX_GE*/T6 r498is_balanced_operator(T0* a1);
/*CALL_INFIX_GE*/T0* r498declaration_type(T498* C);
/*CALL_INFIX_GE*/T0* r498adapt_for(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498resolve_in(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498eiffel_parser(void);
/*CALL_INFIX_GE*/T0* r498use_current_stack(void);
/*CALL_INFIX_GE*/T0* r498collect(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498specialize_2(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498specialize_in(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498written_declaration_type_mark(void);
/*CALL_INFIX_GE*/T0* r498simplify(T498* C,T0* a1);
/*CALL_INFIX_GE*/void r498pretty_target(T498* C,T2 a1);
/*CALL_INFIX_GE*/void r498safety_check(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498to_expression(T498* C);
/*CALL_INFIX_GE*/T0* r498specialize_thru(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r498feature_accumulator(void);
/*CALL_INFIX_GE*/void r498inline_dynamic_dispatch_(T498* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r498to_instruction(T498* C);
/*CALL_INFIX_GE*/T0* r498current_or_twin_init(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r498standard_check_export_and_obsolete_calls(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r498make(T498* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_GE*/T0* r498arg1(T498* C);
/*CALL_INFIX_GE*/void r498type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/void r498non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/T6 r498use_current(T498* C,T0* a1);
/*CALL_INFIX_GE*/void r498init(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r498static_simplify(T498* C);
/*CALL_INFIX_GE*/T0* r498extra_local_expanded(T498* C,T0* a1);
/*CALL_INFIX_GE*/void r498function_and_argument_count_check(T498* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/void r498pretty(T498* C,T2 a1);
/*CALL_INFIX_GE*/T6 r498side_effect_free(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498non_void_no_dispatch_type(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498run_feature_for(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498inline_with(T498* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r498twin(T498* C);
/*CALL_INFIX_GE*/void r498bracketed_pretty(T498* C,T2 a1);
/*CALL_INFIX_GE*/T6 r498is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GE*/void r498accept(T498* C,T0* a1);
/*CALL_INFIX_GE*/T333 r498start_position(T498* C);
/*CALL_INFIX_GE*/T6 r498is_stored_in_some_local_variable(void);
/*CALL_INFIX_GE*/T0* r498_P_345_declaration_type(T498* C);
/*CALL_INFIX_LT*/T6 r499is_balanced_operator(T0* a1);
/*CALL_INFIX_LT*/T0* r499declaration_type(T499* C);
/*CALL_INFIX_LT*/T0* r499adapt_for(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499resolve_in(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499eiffel_parser(void);
/*CALL_INFIX_LT*/T0* r499use_current_stack(void);
/*CALL_INFIX_LT*/T0* r499collect(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499specialize_2(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499specialize_in(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499written_declaration_type_mark(void);
/*CALL_INFIX_LT*/T0* r499simplify(T499* C,T0* a1);
/*CALL_INFIX_LT*/void r499pretty_target(T499* C,T2 a1);
/*CALL_INFIX_LT*/void r499safety_check(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499to_expression(T499* C);
/*CALL_INFIX_LT*/T0* r499specialize_thru(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r499feature_accumulator(void);
/*CALL_INFIX_LT*/void r499inline_dynamic_dispatch_(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r499to_instruction(T499* C);
/*CALL_INFIX_LT*/T0* r499current_or_twin_init(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r499standard_check_export_and_obsolete_calls(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r499make(T499* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_LT*/T0* r499arg1(T499* C);
/*CALL_INFIX_LT*/void r499type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/void r499non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/T6 r499use_current(T499* C,T0* a1);
/*CALL_INFIX_LT*/void r499init(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r499static_simplify(T499* C);
/*CALL_INFIX_LT*/T0* r499extra_local_expanded(T499* C,T0* a1);
/*CALL_INFIX_LT*/void r499function_and_argument_count_check(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/void r499pretty(T499* C,T2 a1);
/*CALL_INFIX_LT*/T6 r499side_effect_free(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499non_void_no_dispatch_type(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499run_feature_for(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499inline_with(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r499twin(T499* C);
/*CALL_INFIX_LT*/void r499bracketed_pretty(T499* C,T2 a1);
/*CALL_INFIX_LT*/T6 r499is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LT*/void r499accept(T499* C,T0* a1);
/*CALL_INFIX_LT*/T333 r499start_position(T499* C);
/*CALL_INFIX_LT*/T6 r499is_stored_in_some_local_variable(void);
/*CALL_INFIX_LT*/T0* r499_P_345_declaration_type(T499* C);
/*CALL_INFIX_GT*/T6 r500is_balanced_operator(T0* a1);
/*CALL_INFIX_GT*/T0* r500declaration_type(T500* C);
/*CALL_INFIX_GT*/T0* r500adapt_for(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500resolve_in(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500eiffel_parser(void);
/*CALL_INFIX_GT*/T0* r500use_current_stack(void);
/*CALL_INFIX_GT*/T0* r500collect(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500specialize_2(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500specialize_in(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500written_declaration_type_mark(void);
/*CALL_INFIX_GT*/T0* r500simplify(T500* C,T0* a1);
/*CALL_INFIX_GT*/void r500pretty_target(T500* C,T2 a1);
/*CALL_INFIX_GT*/void r500safety_check(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500to_expression(T500* C);
/*CALL_INFIX_GT*/T0* r500specialize_thru(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r500feature_accumulator(void);
/*CALL_INFIX_GT*/void r500inline_dynamic_dispatch_(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r500to_instruction(T500* C);
/*CALL_INFIX_GT*/T0* r500current_or_twin_init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r500standard_check_export_and_obsolete_calls(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r500make(T500* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_GT*/T0* r500arg1(T500* C);
/*CALL_INFIX_GT*/void r500type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/void r500non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/T6 r500use_current(T500* C,T0* a1);
/*CALL_INFIX_GT*/void r500init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r500static_simplify(T500* C);
/*CALL_INFIX_GT*/T0* r500extra_local_expanded(T500* C,T0* a1);
/*CALL_INFIX_GT*/void r500function_and_argument_count_check(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/void r500pretty(T500* C,T2 a1);
/*CALL_INFIX_GT*/T6 r500side_effect_free(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500non_void_no_dispatch_type(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500run_feature_for(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500inline_with(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r500twin(T500* C);
/*CALL_INFIX_GT*/void r500bracketed_pretty(T500* C,T2 a1);
/*CALL_INFIX_GT*/T6 r500is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GT*/void r500accept(T500* C,T0* a1);
/*CALL_INFIX_GT*/T333 r500start_position(T500* C);
/*CALL_INFIX_GT*/T6 r500is_stored_in_some_local_variable(void);
/*CALL_INFIX_GT*/T0* r500_P_345_declaration_type(T500* C);
/*CALL_INFIX_AND_THEN*/T6 r397is_balanced_operator(T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397declaration_type(T397* C);
/*CALL_INFIX_AND_THEN*/T0* r397adapt_for(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397resolve_in(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397use_current_stack(void);
/*CALL_INFIX_AND_THEN*/T0* r397collect(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397specialize_2(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397specialize_in(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397written_declaration_type_mark(void);
/*CALL_INFIX_AND_THEN*/T0* r397simplify(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r397pretty_target(T397* C,T2 a1);
/*CALL_INFIX_AND_THEN*/void r397safety_check(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397to_expression(T397* C);
/*CALL_INFIX_AND_THEN*/T0* r397specialize_thru(T397* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r397feature_accumulator(void);
/*CALL_INFIX_AND_THEN*/void r397inline_dynamic_dispatch_(T397* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r397to_instruction(T397* C);
/*CALL_INFIX_AND_THEN*/T0* r397current_or_twin_init(T397* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r397standard_check_export_and_obsolete_calls(T397* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r397make(T397* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r397arg1(T397* C);
/*CALL_INFIX_AND_THEN*/T6 r397use_current(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r397init(T397* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r397static_simplify(T397* C);
/*CALL_INFIX_AND_THEN*/T0* r397and_then_name(void);
/*CALL_INFIX_AND_THEN*/T0* r397extra_local_expanded(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r397function_and_argument_count_check(T397* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/void r397pretty(T397* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r397side_effect_free(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397non_void_no_dispatch_type(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397run_feature_for(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r397inline_with(T397* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r397twin(T397* C);
/*CALL_INFIX_AND_THEN*/void r397bracketed_pretty(T397* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r397is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND_THEN*/void r397accept(T397* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T333 r397start_position(T397* C);
/*CALL_INFIX_AND_THEN*/T6 r397is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND_THEN*/T0* r397_P_345_declaration_type(T397* C);
/*CALL_INFIX_AND*/T6 r496is_balanced_operator(T0* a1);
/*CALL_INFIX_AND*/T0* r496declaration_type(T496* C);
/*CALL_INFIX_AND*/T0* r496adapt_for(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496resolve_in(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496eiffel_parser(void);
/*CALL_INFIX_AND*/T0* r496use_current_stack(void);
/*CALL_INFIX_AND*/T0* r496collect(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496specialize_2(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496specialize_in(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496written_declaration_type_mark(void);
/*CALL_INFIX_AND*/T0* r496simplify(T496* C,T0* a1);
/*CALL_INFIX_AND*/void r496pretty_target(T496* C,T2 a1);
/*CALL_INFIX_AND*/void r496safety_check(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496to_expression(T496* C);
/*CALL_INFIX_AND*/T0* r496specialize_thru(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r496feature_accumulator(void);
/*CALL_INFIX_AND*/void r496inline_dynamic_dispatch_(T496* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r496to_instruction(T496* C);
/*CALL_INFIX_AND*/T0* r496current_or_twin_init(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r496standard_check_export_and_obsolete_calls(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r496make(T496* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_AND*/T0* r496arg1(T496* C);
/*CALL_INFIX_AND*/void r496type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/void r496non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/T6 r496use_current(T496* C,T0* a1);
/*CALL_INFIX_AND*/void r496init(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r496static_simplify(T496* C);
/*CALL_INFIX_AND*/T0* r496extra_local_expanded(T496* C,T0* a1);
/*CALL_INFIX_AND*/void r496function_and_argument_count_check(T496* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/void r496pretty(T496* C,T2 a1);
/*CALL_INFIX_AND*/T6 r496side_effect_free(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496non_void_no_dispatch_type(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496run_feature_for(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496inline_with(T496* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r496twin(T496* C);
/*CALL_INFIX_AND*/void r496bracketed_pretty(T496* C,T2 a1);
/*CALL_INFIX_AND*/T6 r496is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND*/void r496accept(T496* C,T0* a1);
/*CALL_INFIX_AND*/T333 r496start_position(T496* C);
/*CALL_INFIX_AND*/T6 r496is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND*/T0* r496_P_345_declaration_type(T496* C);
/*CALL_INFIX_OR_ELSE*/T6 r493is_balanced_operator(T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493declaration_type(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493adapt_for(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493resolve_in(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493use_current_stack(void);
/*CALL_INFIX_OR_ELSE*/T0* r493collect(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493specialize_2(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493specialize_in(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493written_declaration_type_mark(void);
/*CALL_INFIX_OR_ELSE*/T0* r493simplify(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r493pretty_target(T493* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/void r493safety_check(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493to_expression(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493specialize_thru(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r493feature_accumulator(void);
/*CALL_INFIX_OR_ELSE*/void r493inline_dynamic_dispatch_(T493* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r493to_instruction(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493current_or_twin_init(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r493standard_check_export_and_obsolete_calls(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r493make(T493* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r493arg1(T493* C);
/*CALL_INFIX_OR_ELSE*/T6 r493use_current(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r493init(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r493static_simplify(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493extra_local_expanded(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493or_else_name(void);
/*CALL_INFIX_OR_ELSE*/void r493function_and_argument_count_check(T493* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/void r493pretty(T493* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r493side_effect_free(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493non_void_no_dispatch_type(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493run_feature_for(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493inline_with(T493* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r493twin(T493* C);
/*CALL_INFIX_OR_ELSE*/void r493bracketed_pretty(T493* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r493is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR_ELSE*/void r493accept(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T333 r493start_position(T493* C);
/*CALL_INFIX_OR_ELSE*/T6 r493is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR_ELSE*/T0* r493_P_345_declaration_type(T493* C);
/*CALL_INFIX_OR*/T6 r494is_balanced_operator(T0* a1);
/*CALL_INFIX_OR*/T0* r494declaration_type(T494* C);
/*CALL_INFIX_OR*/T0* r494adapt_for(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494resolve_in(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494eiffel_parser(void);
/*CALL_INFIX_OR*/T0* r494use_current_stack(void);
/*CALL_INFIX_OR*/T0* r494collect(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494specialize_2(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494specialize_in(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494written_declaration_type_mark(void);
/*CALL_INFIX_OR*/T0* r494simplify(T494* C,T0* a1);
/*CALL_INFIX_OR*/void r494pretty_target(T494* C,T2 a1);
/*CALL_INFIX_OR*/void r494safety_check(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494to_expression(T494* C);
/*CALL_INFIX_OR*/T0* r494specialize_thru(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r494feature_accumulator(void);
/*CALL_INFIX_OR*/void r494inline_dynamic_dispatch_(T494* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r494to_instruction(T494* C);
/*CALL_INFIX_OR*/T0* r494current_or_twin_init(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r494standard_check_export_and_obsolete_calls(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r494make(T494* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_OR*/T0* r494arg1(T494* C);
/*CALL_INFIX_OR*/void r494type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/void r494non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/T6 r494use_current(T494* C,T0* a1);
/*CALL_INFIX_OR*/void r494init(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r494static_simplify(T494* C);
/*CALL_INFIX_OR*/T0* r494extra_local_expanded(T494* C,T0* a1);
/*CALL_INFIX_OR*/void r494function_and_argument_count_check(T494* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/void r494pretty(T494* C,T2 a1);
/*CALL_INFIX_OR*/T6 r494side_effect_free(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494non_void_no_dispatch_type(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494run_feature_for(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494inline_with(T494* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r494twin(T494* C);
/*CALL_INFIX_OR*/void r494bracketed_pretty(T494* C,T2 a1);
/*CALL_INFIX_OR*/T6 r494is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR*/void r494accept(T494* C,T0* a1);
/*CALL_INFIX_OR*/T333 r494start_position(T494* C);
/*CALL_INFIX_OR*/T6 r494is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR*/T0* r494_P_345_declaration_type(T494* C);
/*CALL_INFIX_XOR*/T6 r495is_balanced_operator(T0* a1);
/*CALL_INFIX_XOR*/T0* r495declaration_type(T495* C);
/*CALL_INFIX_XOR*/T0* r495adapt_for(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495resolve_in(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495eiffel_parser(void);
/*CALL_INFIX_XOR*/T0* r495use_current_stack(void);
/*CALL_INFIX_XOR*/T0* r495collect(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495specialize_2(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495specialize_in(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495written_declaration_type_mark(void);
/*CALL_INFIX_XOR*/T0* r495simplify(T495* C,T0* a1);
/*CALL_INFIX_XOR*/void r495pretty_target(T495* C,T2 a1);
/*CALL_INFIX_XOR*/void r495safety_check(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495to_expression(T495* C);
/*CALL_INFIX_XOR*/T0* r495specialize_thru(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r495feature_accumulator(void);
/*CALL_INFIX_XOR*/void r495inline_dynamic_dispatch_(T495* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r495to_instruction(T495* C);
/*CALL_INFIX_XOR*/T0* r495current_or_twin_init(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r495standard_check_export_and_obsolete_calls(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r495make(T495* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r495arg1(T495* C);
/*CALL_INFIX_XOR*/void r495type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/void r495non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/T6 r495use_current(T495* C,T0* a1);
/*CALL_INFIX_XOR*/void r495init(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r495static_simplify(T495* C);
/*CALL_INFIX_XOR*/T0* r495extra_local_expanded(T495* C,T0* a1);
/*CALL_INFIX_XOR*/void r495function_and_argument_count_check(T495* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/void r495pretty(T495* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r495side_effect_free(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495non_void_no_dispatch_type(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495run_feature_for(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495inline_with(T495* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r495twin(T495* C);
/*CALL_INFIX_XOR*/void r495bracketed_pretty(T495* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r495is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_XOR*/void r495accept(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T333 r495start_position(T495* C);
/*CALL_INFIX_XOR*/T6 r495is_stored_in_some_local_variable(void);
/*CALL_INFIX_XOR*/T0* r495_P_345_declaration_type(T495* C);
/*CALL_INFIX_IMPLIES*/T6 r492is_balanced_operator(T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492declaration_type(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492adapt_for(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492resolve_in(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492eiffel_parser(void);
/*CALL_INFIX_IMPLIES*/T0* r492use_current_stack(void);
/*CALL_INFIX_IMPLIES*/T0* r492collect(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492specialize_2(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492specialize_in(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492written_declaration_type_mark(void);
/*CALL_INFIX_IMPLIES*/T0* r492simplify(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r492pretty_target(T492* C,T2 a1);
/*CALL_INFIX_IMPLIES*/void r492safety_check(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492to_expression(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492specialize_thru(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r492feature_accumulator(void);
/*CALL_INFIX_IMPLIES*/void r492inline_dynamic_dispatch_(T492* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r492to_instruction(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492current_or_twin_init(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r492standard_check_export_and_obsolete_calls(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r492make(T492* C,T0* a1,T333 a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r492arg1(T492* C);
/*CALL_INFIX_IMPLIES*/void r492type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/void r492non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/T6 r492use_current(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r492init(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r492static_simplify(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492extra_local_expanded(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r492function_and_argument_count_check(T492* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/void r492pretty(T492* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r492side_effect_free(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492non_void_no_dispatch_type(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492run_feature_for(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492inline_with(T492* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r492twin(T492* C);
/*CALL_INFIX_IMPLIES*/void r492bracketed_pretty(T492* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r492is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_IMPLIES*/void r492accept(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T333 r492start_position(T492* C);
/*CALL_INFIX_IMPLIES*/T6 r492is_stored_in_some_local_variable(void);
/*CALL_INFIX_IMPLIES*/T0* r492_P_345_declaration_type(T492* C);
/*CALL_INFIX_IMPLIES*/void r492_P_345_inline_dynamic_dispatch_(T492* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/T0* r452to_expression(T452* C);
/*EXPRESSION_WITH_COMMENT*/void r452make(T452* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r452pretty(T452* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T0* r452simplify(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r452extra_bracket_flag(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452specialize_2(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r452static_simplify(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452specialize_in(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r452inline_dynamic_dispatch_(T452* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r452safety_check(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_result(T452* C);
/*EXPRESSION_WITH_COMMENT*/T2 r452precedence(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452specialize_thru(T452* C,T0* a1,T0* a2,T0* a3);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_static(T452* C);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_stored_in_some_local_variable(void);
/*EXPRESSION_WITH_COMMENT*/void r452accept(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r452adapt_for(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r452declaration_type(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452collect(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_current(T452* C);
/*EXPRESSION_WITH_COMMENT*/void r452pretty_target(T452* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T333 r452start_position(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452twin(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452written_declaration_type_mark(void);
/*EXPRESSION_WITH_COMMENT*/T6 r452use_current(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r452bracketed_pretty(T452* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_void(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452non_void_no_dispatch_type(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r452side_effect_free(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_manifest_string(T452* C);
/*EXPRESSION_WITH_COMMENT*/T6 r452is_implicit_current(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452resolve_in(T452* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r452to_instruction(T452* C);
/*EXPRESSION_WITH_COMMENT*/T0* r452current_or_twin_init(T452* C,T0* a1);
/*ADDRESS_OF*/T0* r453to_expression(T453* C);
/*ADDRESS_OF*/void r453pretty(T453* C,T2 a1);
/*ADDRESS_OF*/T0* r453simplify(T453* C,T0* a1);
/*ADDRESS_OF*/T0* r453specialize_2(T453* C,T0* a1);
/*ADDRESS_OF*/T0* r453static_simplify(T453* C);
/*ADDRESS_OF*/T0* r453specialize_in(T453* C,T0* a1);
/*ADDRESS_OF*/void r453inline_dynamic_dispatch_(T453* C,T0* a1,T0* a2);
/*ADDRESS_OF*/void r453safety_check(T453* C,T0* a1);
/*ADDRESS_OF*/T0* r453specialize_thru(T453* C,T0* a1,T0* a2,T0* a3);
/*ADDRESS_OF*/T6 r453is_stored_in_some_local_variable(void);
/*ADDRESS_OF*/void r453accept(T453* C,T0* a1);
/*ADDRESS_OF*/T0* r453adapt_for(T453* C,T0* a1);
extern T0*oBC453declaration_type;
extern int fBC453declaration_type;
/*ADDRESS_OF*/T0* r453declaration_type(void);
/*ADDRESS_OF*/T0* r453collect(T453* C,T0* a1);
/*ADDRESS_OF*/T333 r453start_position(T453* C);
/*ADDRESS_OF*/T0* r453twin(T453* C);
/*ADDRESS_OF*/T0* r453written_declaration_type_mark(void);
/*ADDRESS_OF*/T6 r453use_current(T453* C,T0* a1);
/*ADDRESS_OF*/void r453bracketed_pretty(T453* C,T2 a1);
/*ADDRESS_OF*/T0* r453non_void_no_dispatch_type(T0* a1);
/*ADDRESS_OF*/T6 r453side_effect_free(T0* a1);
/*ADDRESS_OF*/void r453with_local(T453* C,T0* a1);
/*ADDRESS_OF*/void r453with_feature_name(T453* C,T0* a1);
/*ADDRESS_OF*/T0* r453resolve_in(T0* a1);
/*ADDRESS_OF*/T0* r453to_instruction(T453* C);
/*CLASS_NAME_LIST*/T6 r486wider_than(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486merge(T486* C,T0* a1,T0* a2);
/*CLASS_NAME_LIST*/void r486add_last(T486* C,T0* a1);
/*CLASS_NAME_LIST*/T0* r486item(T486* C,T2 a1);
/*CLASS_NAME_LIST*/T2 r486index_of(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486locate_in_error_handler(T486* C);
/*CLASS_NAME_LIST*/T6 r486gives_permission_to(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486make_1(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486append_in(T486* C,T0* a1);
/*CLASS_NAME_LIST*/T2 r486count(T486* C);
/*CLASS_NAME_LIST*/T6 r486gives_permission_to_any(T486* C);
/*CLIENT_LIST*/T279*create279make(T333 a1,T0* a2);
/*CLIENT_LIST*/void r279make(T279* C,T333 a1,T0* a2);
/*CLIENT_LIST*/T6 r279wider_than(T279* C,T0* a1);
/*CLIENT_LIST*/void r279merge(T279* C,T333 a1,T0* a2,T0* a3);
/*CLIENT_LIST*/T0* r279eiffel_view(T279* C);
/*CLIENT_LIST*/T6 r279is_omitted(T279* C);
/*CLIENT_LIST*/T6 r279gives_no_permission(T279* C);
/*CLIENT_LIST*/void r279locate_in_error_handler(T279* C);
/*CLIENT_LIST*/T6 r279gives_permission_to(T279* C,T0* a1);
/*CLIENT_LIST*/T0* r279merge_with(T279* C,T0* a1);
/*CLIENT_LIST*/void r279append_in(T279* C,T0* a1);
/*CLIENT_LIST*/T6 r279gives_permission_to_any(T279* C);
/*EXPORT_LIST*/void r456check_level_2(T456* C,T0* a1,T0* a2);
/*EXPORT_LIST*/void r456make(T456* C,T333 a1,T0* a2);
/*EXPORT_LIST*/T0* r456clients_for(T456* C,T0* a1);
/*EXPORT_ITEM*/void r455make(T455* C,T0* a1,T0* a2);
/*EXPORT_ITEM*/void r455make_all(T455* C,T0* a1);
/*CREATION_CLAUSE*/void r414make(T414* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*CREATION_CLAUSE*/void r414check_manifest_semicolon_check(T414* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r414default_root(T414* C);
/*CREATION_CLAUSE*/T0* r414manifest_make_name(void);
/*CREATION_CLAUSE*/void r414check_manifest_make(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r414extra_expanded_check(T414* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/void r414check_manifest_put(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r414manifest_semicolon_check_name(void);
/*CREATION_CLAUSE*/void r414check_for(T414* C,T0* a1);
/*CREATION_CLAUSE*/T0* r414manifest_put_name(void);
/*CREATION_CLAUSE*/T0* r414user_expanded_default_create_stamp(T414* C,T0* a1);
/*FEATURE_CLAUSE*/void r423make(T423* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_CLAUSE*/void r423add_into(T423* C,T0* a1);
/*CLUSTER_CLASS*/void r742make(T742* C,T0* a1,T0* a2,T0* a3);
/*TAG_NAME*/void r450make(T450* C,T0* a1,T333 a2);
/*ARGUMENT_NAME2*/T0* r353to_expression(T353* C);
/*ARGUMENT_NAME2*/void r353pretty(T353* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r353simplify(T353* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r353static_simplify(T353* C);
/*ARGUMENT_NAME2*/T0* r353specialize_in(T353* C,T0* a1);
/*ARGUMENT_NAME2*/void r353inline_dynamic_dispatch_(T353* C,T0* a1,T0* a2);
/*ARGUMENT_NAME2*/T0* r353specialize_thru(T353* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME2*/T6 r353is_stored_in_some_local_variable(void);
/*ARGUMENT_NAME2*/void r353accept(T353* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r353adapt_for(T353* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r353feature_accumulator(void);
/*ARGUMENT_NAME2*/T0* r353collect(T353* C,T0* a1);
/*ARGUMENT_NAME2*/void r353pretty_target(T353* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r353twin(T353* C);
/*ARGUMENT_NAME2*/T0* r353written_declaration_type_mark(void);
/*ARGUMENT_NAME2*/void r353refer_to(T353* C,T333 a1,T0* a2,T2 a3);
/*ARGUMENT_NAME2*/T6 r353use_current(T0* a1);
/*ARGUMENT_NAME2*/T0* r353non_void_no_dispatch_type(T353* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r353to_string(T353* C);
/*ARGUMENT_NAME2*/T6 r353side_effect_free(T0* a1);
/*ARGUMENT_NAME2*/T0* r353resolve_in(T353* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r353to_instruction(T353* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405to_expression(T405* C);
/*WRITABLE_ATTRIBUTE_NAME*/void r405make(T405* C,T0* a1,T333 a2);
/*WRITABLE_ATTRIBUTE_NAME*/void r405pretty(T405* C,T2 a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405simplify(T405* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405specialize_2(T405* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405static_simplify(T405* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405specialize_in(T405* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r405inline_dynamic_dispatch_(T405* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405specialize_thru(T405* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r405is_stored_in_some_local_variable(void);
/*WRITABLE_ATTRIBUTE_NAME*/void r405accept(T405* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405feature_accumulator(void);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405collect(T405* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r405set_feature_stamp_and_type(T405* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T333 r405start_position(T405* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405twin(T405* C);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r405use_current(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405non_void_no_dispatch_type(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r405side_effect_free(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405resolve_in(T405* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r405to_instruction(T405* C);
/*LOCAL_NAME2*/T0* r388to_expression(T388* C);
/*LOCAL_NAME2*/void r388pretty(T388* C,T2 a1);
/*LOCAL_NAME2*/T0* r388simplify(T388* C,T0* a1);
/*LOCAL_NAME2*/T0* r388static_simplify(T388* C);
/*LOCAL_NAME2*/T0* r388specialize_in(T388* C,T0* a1);
/*LOCAL_NAME2*/void r388inline_dynamic_dispatch_(T388* C,T0* a1,T0* a2);
/*LOCAL_NAME2*/T0* r388specialize_thru(T388* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME2*/T6 r388is_stored_in_some_local_variable(void);
/*LOCAL_NAME2*/void r388accept(T388* C,T0* a1);
/*LOCAL_NAME2*/T0* r388adapt_for(T388* C,T0* a1);
/*LOCAL_NAME2*/T0* r388collect(T388* C,T0* a1);
/*LOCAL_NAME2*/void r388pretty_target(T388* C,T2 a1);
/*LOCAL_NAME2*/T0* r388twin(T388* C);
/*LOCAL_NAME2*/void r388refer_to(T388* C,T333 a1,T0* a2,T2 a3);
/*LOCAL_NAME2*/T6 r388use_current(T0* a1);
/*LOCAL_NAME2*/T0* r388non_void_no_dispatch_type(T388* C,T0* a1);
/*LOCAL_NAME2*/T0* r388to_string(T388* C);
/*LOCAL_NAME2*/T6 r388side_effect_free(T0* a1);
/*LOCAL_NAME2*/T0* r388resolve_in(T388* C,T0* a1);
/*LOCAL_NAME2*/T0* r388to_instruction(T388* C);
/*RUN_TIME_SET*/void r525make(T525* C,T0* a1);
/*RUN_TIME_SET*/void r525force_add(T525* C,T0* a1);
/*RUN_TIME_SET*/T2 r525add_set(T525* C,T0* a1);
/*RUN_TIME_SET*/void r525id_extra_information(T525* C,T0* a1);
/*RUN_TIME_SET*/T0* r525item(T525* C,T2 a1);
/*RUN_TIME_SET*/void r525reset(T525* C);
/*RUN_TIME_SET*/T2 r525count(T525* C);
/*RUN_TIME_SET*/T6 r525has(T525* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r425specialized_ensure_thru(T425* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_signature_in(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r425try_to_undefine_aux(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r425collect(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_require_thru(T425* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_2(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r425with(T425* C,T0* a1,T0* a2,T2 a3);
/*WRITABLE_ATTRIBUTE*/T0* r425simplify(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r425arguments(void);
/*WRITABLE_ATTRIBUTE*/T0* r425specialized_require_thru(T425* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r425first_name(T425* C);
/*WRITABLE_ATTRIBUTE*/T0* r425names(T425* C);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_require_in(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r425add_into(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r425merge_signature_thru(T425* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*WRITABLE_ATTRIBUTE*/T0* r425try_to_undefine(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r425make(T425* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/void r425add_into_(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r425new_run_feature_for(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r425valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T6 r425use_current(T0* a1);
/*WRITABLE_ATTRIBUTE*/void r425obsolete_warning_check(T425* C,T0* a1,T333 a2);
/*WRITABLE_ATTRIBUTE*/T0* r425change_ensure(T425* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r425brand_new_run_feature_for(T425* C,T0* a1,T0* a2,T6 a3);
/*WRITABLE_ATTRIBUTE*/void r425pretty_print_names(T425* C);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_permissions(T425* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/void r425pretty(T425* C,T2 a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T6 r425same_body_as(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r425inline_dynamic_dispatch(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_body_thru(T425* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T6 r425same_signature(T425* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_signature_thru(T425* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_ensure_in(T425* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_ensure_thru(T425* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T0* r425twin(T425* C);
/*WRITABLE_ATTRIBUTE*/void r425accept(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r425inline_expression_0(T425* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*WRITABLE_ATTRIBUTE*/T6 r425valid_redefinition(T425* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T0* r425change_require(T425* C,T0* a1,T6 a2);
extern T0*oBC331obsolete_warning_check_memory;
extern int fBC331obsolete_warning_check_memory;
/*WRITABLE_ATTRIBUTE*/T0* r425obsolete_warning_check_memory(void);
/*WRITABLE_ATTRIBUTE*/T333 r425start_position(T425* C);
/*WRITABLE_ATTRIBUTE*/void r425set_rescue_compound(T425* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r425specialize_body_in(T425* C,T0* a1,T6 a2);
/*CLASS_INVARIANT*/T0* r417to_expression(T417* C);
/*CLASS_INVARIANT*/void r417make(T417* C,T333 a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/T6 r417has_assertion_located_at(T417* C,T333 a1);
/*CLASS_INVARIANT*/void r417pretty(T417* C,T2 a1);
/*CLASS_INVARIANT*/T0* r417simplify(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417specialize_2(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417specialize_in(T417* C,T0* a1);
/*CLASS_INVARIANT*/void r417inline_dynamic_dispatch_(T417* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/T6 r417is_always_true(T417* C,T0* a1);
/*CLASS_INVARIANT*/void r417safety_check(T417* C,T0* a1);
/*CLASS_INVARIANT*/void r417set_list(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417specialize_thru(T417* C,T0* a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/void r417pretty_as_loop_invariant(T417* C,T2 a1);
/*CLASS_INVARIANT*/T2 r417upper(T417* C);
/*CLASS_INVARIANT*/void r417accept(T417* C,T0* a1);
/*CLASS_INVARIANT*/void r417set_eiffel_parser_stamp(T417* C,T2 a1);
/*CLASS_INVARIANT*/T0* r417adapt_for(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417item(T417* C,T2 a1);
/*CLASS_INVARIANT*/T0* r417add_items_from(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417collect(T417* C,T0* a1);
/*CLASS_INVARIANT*/void r417pretty_print_with_tag(T417* C,T2 a1,T0* a2);
/*CLASS_INVARIANT*/T6 r417is_empty(T417* C);
/*CLASS_INVARIANT*/T0* r417specialize_2_without_checks(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417twin(T417* C);
/*CLASS_INVARIANT*/void r417pretty_as_check_compound(T417* C,T2 a1);
/*CLASS_INVARIANT*/T6 r417use_current(T417* C,T0* a1);
/*CLASS_INVARIANT*/void r417breakpoint(T417* C);
/*CLASS_INVARIANT*/void r417crash(T417* C);
/*CLASS_INVARIANT*/T6 r417side_effect_free(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417inline_dynamic_dispatch(T417* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/void r417not_yet_implemented(T417* C);
/*CLASS_INVARIANT*/T2 r417count(T417* C);
/*CLASS_INVARIANT*/void r417do_all(T417* C,T0* a1);
/*CLASS_INVARIANT*/T0* r417to_instruction(T417* C);
/*CLASS_INVARIANT*/T2 r417lower(T417* C);
/*PARENT_LISTS*/void r445check_level_2(T445* C,T0* a1);
/*PARENT_LISTS*/void r445make(T445* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*PARENT_LISTS*/T0* r445insert_edge(T445* C,T2 a1);
/*PARENT_LISTS*/T0* r445inherit_edge(T445* C,T2 a1);
/*PARENT_LISTS*/void r445initialize_and_check_level_1(T445* C);
/*PARENT_LISTS*/T6 r445get_permission_of(T445* C,T0* a1);
/*PARENT_LISTS*/void r445id_extra_information(T445* C,T0* a1);
/*PARENT_LISTS*/T2 r445inherit_count(T445* C);
/*PARENT_LISTS*/T333 r445undefine_position_of(T445* C,T0* a1);
/*PARENT_LISTS*/void r445set_insert_member(T445* C,T2 a1);
/*PARENT_LISTS*/T2 r445insert_count(T445* C);
/*FEATURE_CLAUSE_LIST*/void r422make(T422* C,T0* a1);
/*FEATURE_CLAUSE_LIST*/void r422get_started(T422* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r442make(T442* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r442all_positions_in_error_handler(T442* C);
/*CREATION_CLAUSE_LIST*/T0* r442get_clause(T442* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r442default_root(T442* C);
/*CREATION_CLAUSE_LIST*/void r442extra_expanded_check(T442* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T333 r442start_position(T442* C);
/*CREATION_CLAUSE_LIST*/T0* r442root_creation_search(T442* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r442check_for(T442* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r442user_expanded_default_create_stamp(T442* C,T0* a1);
/*INDEX_LIST*/void r420make(T420* C,T0* a1);
/*GRAPH_NODE*/void r518make(T518* C,T0* a1);
/*GRAPH_NODE*/T2 r518recompute_run_time_set(T518* C,T2 a1);
/*GRAPH_NODE*/void r518id_extra_information(T518* C,T0* a1);
/*GRAPH_NODE*/void r518reset(T518* C);
/*GRAPH_NODE*/void r518collect_way_to(T518* C,T0* a1);
/*GRAPH_NODE*/T2 r518destination_count(T518* C);
/*GRAPH_NODE*/T2 r518run_time_set_add(T518* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T520*create520make(T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r520to_expression(T520* C);
/*NON_VOID_NO_DISPATCH*/void r520make(T520* C,T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r520simplify(T520* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r520once_function(T520* C);
/*NON_VOID_NO_DISPATCH*/T0* r520static_simplify(T520* C);
/*NON_VOID_NO_DISPATCH*/void r520inline_dynamic_dispatch_(T520* C,T0* a1,T0* a2);
/*NON_VOID_NO_DISPATCH*/T0* r520run_feature(T520* C);
/*NON_VOID_NO_DISPATCH*/T6 r520is_stored_in_some_local_variable(void);
/*NON_VOID_NO_DISPATCH*/void r520accept(T520* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r520collect(T520* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T333 r520start_position(T520* C);
/*NON_VOID_NO_DISPATCH*/T0* r520twin(T520* C);
/*NON_VOID_NO_DISPATCH*/T0* r520written_declaration_type_mark(void);
/*NON_VOID_NO_DISPATCH*/T6 r520use_current(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r520non_void_no_dispatch_type(T520* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T6 r520side_effect_free(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r520external_function(T520* C);
/*NON_VOID_NO_DISPATCH*/T0* r520resolve_in(T520* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r520to_instruction(T520* C);
/*AGENT_ARGS*/T6 r553is_equal(T553* C,T0* a1);
/*AGENT_ARGS*/void r553make(T553* C,T0* a1,T0* a2);
/*AGENT_ARGS*/T2 r553hash_code(T553* C);
/*EXTERNAL_FUNCTION*/void r395add_into_shared(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r395inline_expression_1(T395* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T0* r395inline_expression_0(T395* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_FUNCTION*/void r395inline_dynamic_dispatch(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r395specialize_signature_in(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395specialize_require_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r395specialize_permissions(T395* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r395c_plus_plus_name(T395* C);
/*EXTERNAL_FUNCTION*/T0* r395specialized_ensure_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r395specialize_2(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395external_name(T395* C);
/*EXTERNAL_FUNCTION*/T0* r395specialize_ensure_thru(T395* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r395specialized_require_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r395true_or_false(T6 a1,T333 a2);
/*EXTERNAL_FUNCTION*/T0* r395try_to_undefine_aux(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r395make_external_routine(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r395specialize_body_thru(T395* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r395specialize_body_in(T395* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r395integer_constant(T0* a1);
/*EXTERNAL_FUNCTION*/void r395set_rescue_compound(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395simplify(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395specialize_ensure_in(T395* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r395first_name(T395* C);
/*EXTERNAL_FUNCTION*/void r395pretty_print_names(T395* C);
/*EXTERNAL_FUNCTION*/void r395add_into(T395* C,T0* a1,T0* a2);
extern T0*oBC28any_copy_fs;
extern int fBC28any_copy_fs;
/*EXTERNAL_FUNCTION*/T0* r395any_copy_fs(void);
/*EXTERNAL_FUNCTION*/T6 r395same_signature(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r395brand_new_run_feature_for(T395* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_FUNCTION*/void r395accept(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395try_to_undefine(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r395hook_collect(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r395init(T395* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_FUNCTION*/void r395inline_dynamic_dispatch_(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r395change_ensure(T395* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r395names(T395* C);
/*EXTERNAL_FUNCTION*/T0* r395current_or_twin_init(T395* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_FUNCTION*/T0* r395merge_signature_thru(T395* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/void r395make_routine(T395* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/void r395collect(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395twin(T395* C);
/*EXTERNAL_FUNCTION*/T6 r395use_current(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r395adapt_routine_body_for(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r395collect_internals_handler(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r395pretty(T395* C,T2 a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r395specialize_signature_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r395new_run_feature_for(T395* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T6 r395valid_redefinition(T395* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r395current_or_twin_init_no_body(T395* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/T0* r395specialize_require_in(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r395add_into_(T395* C,T0* a1,T0* a2);
extern T0*oBC28clear_all_name;
extern int fBC28clear_all_name;
/*EXTERNAL_FUNCTION*/T0* r395clear_all_name(void);
/*EXTERNAL_FUNCTION*/void r395collect_body(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r395valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r395change_require(T395* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T2 r395argument_rank_of(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T6 r395same_body_as(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r395make(T395* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T6 r395side_effect_free(T395* C,T0* a1);
/*EXTERNAL_FUNCTION*/T333 r395start_position(T395* C);
/*EXTERNAL_FUNCTION*/void r395obsolete_warning_check(T395* C,T0* a1,T333 a2);
extern T0*oBC28copy_name;
extern int fBC28copy_name;
/*EXTERNAL_FUNCTION*/T0* r395copy_name(void);
/*EXTERNAL_FUNCTION*/T0* r395obsolete_warning_check_memory(void);
/*EXTERNAL_FUNCTION*/void r395pretty_print_routine_body(T395* C,T2 a1);
extern T0*oBC628implicit_any;
extern int fBC628implicit_any;
/*ANONYMOUS_FEATURE_MIXER*/T0* r628implicit_any(void);
/*ANONYMOUS_FEATURE_MIXER*/void r628make(T628* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r628error_handler_show_resulting_client_list(T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r628remove_body(T628* C);
/*ANONYMOUS_FEATURE_MIXER*/void r628specialize_feature(T628* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r628build_precursor(T628* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r628set_body(T628* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/void r628add_local_definition(T628* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r628error_handler_add_export_positions(T628* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r628add_inherited_definition(T628* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/T0* r628result_type(T628* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r628specialize_precursor(T628* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ANONYMOUS_FEATURE_MIXER*/T0* r628formal_arg_list(T628* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r628export_status_for(T628* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r628specialize_signature(T628* C,T0* a1);
/*ABSOLUTE_FEATURE_NAME*/T6 r330is_equal(T330* C,T330 a1);
/*ABSOLUTE_FEATURE_NAME*/void r330make(T330* C,T0* a1,T0* a2);
/*ABSOLUTE_FEATURE_NAME*/T6 r330matches(T330* C,T0* a1,T0* a2);
/*RUN_FEATURE_2*/void r401compute_use_current(T401* C);
/*RUN_FEATURE_2*/void r401for(T401* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_2*/T6 r401need_c_function(T401* C);
/*RUN_FEATURE_2*/void r401accept(T401* C,T0* a1);
/*RUN_FEATURE_2*/void r401set_result_type(T401* C);
/*RUN_FEATURE_2*/T333 r401start_position(T401* C);
/*RUN_FEATURE_2*/T6 r401use_current(T401* C);
/*RUN_FEATURE_2*/void r401mapping_name_in(T401* C,T0* a1);
/*RUN_FEATURE_2*/void r401do_adapt(T401* C);
/*RUN_FEATURE_2*/T0* r401arguments(void);
/*RUN_FEATURE_2*/void r401adapt(T401* C);
/*RUN_FEATURE_2*/T0* r401feature_stamp(T401* C);
/*CECIL_ENTRY*/void r554make(T554* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CECIL_ENTRY*/T0* r554echo(void);
/*CECIL_ENTRY*/void r554on_echo(T554* C,T0* a1);
/*CECIL_ENTRY*/void r554get_started(T554* C,T0* a1);
/*CECIL_ENTRY*/T0* r554default_create_name(void);
/*CECIL_ENTRY*/T0* r554collect(T554* C,T0* a1);
/*CECIL_ENTRY*/T0* r554any_default_create_fs(void);
/*CECIL_ENTRY*/void r554inline_dynamic_dispatch(T554* C,T0* a1,T0* a2);
/*CECIL_ENTRY*/T0* r554anonymous_feature(T554* C);
/*PROCESS_FACTORY*/void r517default_create(T517* C);
extern T0*oBC517default_group;
extern int fBC517default_group;
/*PROCESS_FACTORY*/T0* r517default_group(T517* C);
/*PROCESS_FACTORY*/T0* r517create_group(T517* C);
/*PROCESS_FACTORY*/void r517crash(T517* C);
/*PROCESS_FACTORY*/void r517not_yet_implemented(T517* C);
/*PROCESS_FACTORY*/T0* r517create_process(T517* C);
/*STRING_RECYCLING_POOL*/void r513make(T513* C);
/*STRING_RECYCLING_POOL*/void r513recycle(T513* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r513new_twin(T513* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r513best_fit(T513* C,T2 a1);
/*POSIX_PATH_NAME*/void r767remove_last(T767* C);
/*POSIX_PATH_NAME*/void r767make_empty(T767* C);
/*POSIX_PATH_NAME*/void r767start_join(T767* C,T0* a1,T2 a2);
/*POSIX_PATH_NAME*/void r767join_element(T767* C,T0* a1);
/*POSIX_PATH_NAME*/T2 r767start_join_to(T767* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r767drive_specification(void);
/*POSIX_PATH_NAME*/void r767end_join(T767* C);
/*POSIX_PATH_NAME*/void r767make_from_string(T767* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r767last(T767* C);
/*POSIX_PATH_NAME*/void r767add_last(T767* C,T0* a1);
/*POSIX_PATH_NAME*/T6 r767is_separator(T3 a1);
/*POSIX_PATH_NAME*/T6 r767is_absolute(T767* C);
/*POSIX_PATH_NAME*/void r767go_up(T767* C);
/*POSIX_PATH_NAME*/void r767make_current(T767* C);
/*POSIX_PATH_NAME*/T2 r767scan_element(T767* C,T2 a1,T0* a2);
/*POSIX_PATH_NAME*/T6 r767is_valid_path(T0* a1);
/*POSIX_PATH_NAME*/void r767join_to(T767* C,T0* a1);
/*POSIX_PATH_NAME*/void r767join(T767* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r767short_name(T767* C);
/*POSIX_PATH_NAME*/void r767join_element_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/void r767join_directory_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/T2 r767count(T767* C);
/*POSIX_PATH_NAME*/void r767make_root(T767* C);
/*CST_ATT_CHARACTER*/T0* r636specialized_ensure_thru(T636* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r636try_to_undefine_aux(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r636collect(T636* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r636specialize_require_thru(T636* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r636specialize_2(T636* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r636simplify(T636* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r636arguments(void);
/*CST_ATT_CHARACTER*/T0* r636specialized_require_thru(T636* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r636first_name(T636* C);
/*CST_ATT_CHARACTER*/void r636collect_body(T636* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r636names(T636* C);
/*CST_ATT_CHARACTER*/T0* r636specialize_require_in(T636* C,T0* a1);
/*CST_ATT_CHARACTER*/void r636add_into(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r636merge_signature_thru(T636* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_CHARACTER*/T0* r636try_to_undefine(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r636make(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r636add_into_(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r636new_run_feature_for(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r636valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T6 r636use_current(T0* a1);
/*CST_ATT_CHARACTER*/void r636obsolete_warning_check(T636* C,T0* a1,T333 a2);
/*CST_ATT_CHARACTER*/T0* r636change_ensure(T636* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r636brand_new_run_feature_for(T636* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_CHARACTER*/void r636pretty_print_names(T636* C);
/*CST_ATT_CHARACTER*/T0* r636specialize_permissions(T636* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/void r636pretty(T636* C,T2 a1,T6 a2);
/*CST_ATT_CHARACTER*/T6 r636same_body_as(T636* C,T0* a1);
/*CST_ATT_CHARACTER*/void r636inline_dynamic_dispatch(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T6 r636same_signature(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r636specialize_signature_thru(T636* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r636specialize_ensure_in(T636* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r636specialize_ensure_thru(T636* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_CHARACTER*/T0* r636twin(T636* C);
/*CST_ATT_CHARACTER*/void r636add_into_shared(T636* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r636inline_expression_0(T636* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_CHARACTER*/T6 r636valid_redefinition(T636* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T0* r636change_require(T636* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r636obsolete_warning_check_memory(void);
/*CST_ATT_CHARACTER*/T333 r636start_position(T636* C);
/*CST_ATT_CHARACTER*/void r636set_rescue_compound(T636* C,T0* a1);
/*CST_ATT_STRING*/T0* r644specialized_ensure_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r644try_to_undefine_aux(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r644collect(T644* C,T0* a1);
/*CST_ATT_STRING*/T0* r644specialize_require_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r644specialize_2(T644* C,T0* a1);
/*CST_ATT_STRING*/void r644with(T644* C,T0* a1,T0* a2,T2 a3);
/*CST_ATT_STRING*/T0* r644simplify(T644* C,T0* a1);
/*CST_ATT_STRING*/T0* r644arguments(void);
/*CST_ATT_STRING*/T0* r644specialized_require_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r644first_name(T644* C);
/*CST_ATT_STRING*/void r644collect_body(T644* C,T0* a1);
/*CST_ATT_STRING*/T0* r644names(T644* C);
/*CST_ATT_STRING*/T0* r644specialize_require_in(T644* C,T0* a1);
/*CST_ATT_STRING*/void r644add_into(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r644merge_signature_thru(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_STRING*/T0* r644try_to_undefine(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r644make(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r644add_into_(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r644new_run_feature_for(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r644valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T6 r644use_current(T0* a1);
/*CST_ATT_STRING*/void r644obsolete_warning_check(T644* C,T0* a1,T333 a2);
/*CST_ATT_STRING*/T0* r644change_ensure(T644* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r644brand_new_run_feature_for(T644* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_STRING*/void r644pretty_print_names(T644* C);
/*CST_ATT_STRING*/T0* r644specialize_permissions(T644* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/void r644pretty(T644* C,T2 a1,T6 a2);
/*CST_ATT_STRING*/T6 r644same_body_as(T644* C,T0* a1);
/*CST_ATT_STRING*/void r644inline_dynamic_dispatch(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T6 r644same_signature(T644* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r644specialize_signature_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r644specialize_ensure_in(T644* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r644specialize_ensure_thru(T644* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_STRING*/T0* r644twin(T644* C);
/*CST_ATT_STRING*/T0* r644inline_expression_0(T644* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_STRING*/T6 r644valid_redefinition(T644* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T0* r644change_require(T644* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r644obsolete_warning_check_memory(void);
/*CST_ATT_STRING*/T333 r644start_position(T644* C);
/*CST_ATT_STRING*/void r644set_rescue_compound(T644* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555specialized_ensure_thru(T555* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r555specialize_signature_in(T555* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555try_to_undefine_aux(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r555collect(T555* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555specialize_require_thru(T555* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r555specialize_2(T555* C,T0* a1);
/*ONCE_FUNCTION*/T6 r555empty_body_side_effect_free_effective_routine(T555* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555simplify(T555* C,T0* a1);
/*ONCE_FUNCTION*/void r555pretty_print_routine_body(T555* C,T2 a1);
extern T0*oBC555type_std_output;
extern int fBC555type_std_output;
/*ONCE_FUNCTION*/T0* r555type_std_output(void);
/*ONCE_FUNCTION*/T0* r555specialized_require_thru(T555* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/void r555pretty_print_rescue(T555* C,T2 a1);
extern T0*oBC28flush_name;
extern int fBC28flush_name;
/*ONCE_FUNCTION*/T0* r555flush_name(void);
/*ONCE_FUNCTION*/T0* r555first_name(T555* C);
/*ONCE_FUNCTION*/T0* r555rescue_compound_in(T555* C,T0* a1);
/*ONCE_FUNCTION*/void r555collect_body(T555* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555names(T555* C);
/*ONCE_FUNCTION*/T0* r555specialize_require_in(T555* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r555inline_dynamic_dispatch_(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T6 r555no_rescue_no_local_expanded_in(T555* C,T0* a1);
/*ONCE_FUNCTION*/void r555add_into(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r555make_effective_routine(T555* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T0* r555merge_signature_thru(T555* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_FUNCTION*/void r555make_routine(T555* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r555try_to_undefine(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r555make(T555* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*ONCE_FUNCTION*/void r555add_into_(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r555new_run_feature_for(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r555valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T6 r555use_current(T555* C,T0* a1);
/*ONCE_FUNCTION*/void r555obsolete_warning_check(T555* C,T0* a1,T333 a2);
/*ONCE_FUNCTION*/void r555init(T555* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r555change_ensure(T555* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r555brand_new_run_feature_for(T555* C,T0* a1,T0* a2,T6 a3);
/*ONCE_FUNCTION*/void r555pretty_print_once_or_do(T2 a1);
/*ONCE_FUNCTION*/void r555pretty_print_names(T555* C);
/*ONCE_FUNCTION*/T0* r555specialize_permissions(T555* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/void r555hook_collect(T555* C,T0* a1);
/*ONCE_FUNCTION*/void r555pretty(T555* C,T2 a1,T6 a2);
/*ONCE_FUNCTION*/T6 r555same_body_as(T555* C,T0* a1);
/*ONCE_FUNCTION*/void r555inline_dynamic_dispatch(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r555specialize_body_thru(T555* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T6 r555same_signature(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T333 r555sedb_trace_before_exit(T555* C);
/*ONCE_FUNCTION*/T0* r555specialize_signature_thru(T555* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r555specialize_ensure_in(T555* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r555specialize_ensure_thru(T555* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T0* r555twin(T555* C);
/*ONCE_FUNCTION*/void r555add_into_shared(T555* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r555accept(T555* C,T0* a1);
/*ONCE_FUNCTION*/T0* r555inline_expression_0(T555* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T6 r555valid_redefinition(T555* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r555change_require(T555* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r555obsolete_warning_check_memory(void);
/*ONCE_FUNCTION*/T333 r555start_position(T555* C);
/*ONCE_FUNCTION*/T0* r555specialize_body_in(T555* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T6 r555_P_331_same_body_as(T555* C,T0* a1);
/*CST_ATT_REAL*/T0* r649specialized_ensure_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r649try_to_undefine_aux(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r649collect(T649* C,T0* a1);
/*CST_ATT_REAL*/T0* r649specialize_require_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r649specialize_2(T649* C,T0* a1);
/*CST_ATT_REAL*/T0* r649simplify(T649* C,T0* a1);
/*CST_ATT_REAL*/T0* r649arguments(void);
/*CST_ATT_REAL*/T0* r649specialized_require_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r649first_name(T649* C);
/*CST_ATT_REAL*/void r649collect_body(T649* C,T0* a1);
/*CST_ATT_REAL*/T0* r649names(T649* C);
/*CST_ATT_REAL*/T0* r649specialize_require_in(T649* C,T0* a1);
/*CST_ATT_REAL*/void r649add_into(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r649merge_signature_thru(T649* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_REAL*/T0* r649try_to_undefine(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r649make(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r649add_into_(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r649new_run_feature_for(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r649valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T6 r649use_current(T0* a1);
/*CST_ATT_REAL*/void r649obsolete_warning_check(T649* C,T0* a1,T333 a2);
/*CST_ATT_REAL*/T0* r649change_ensure(T649* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r649brand_new_run_feature_for(T649* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_REAL*/void r649pretty_print_names(T649* C);
/*CST_ATT_REAL*/T0* r649specialize_permissions(T649* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/void r649pretty(T649* C,T2 a1,T6 a2);
/*CST_ATT_REAL*/T6 r649same_body_as(T649* C,T0* a1);
/*CST_ATT_REAL*/void r649inline_dynamic_dispatch(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T6 r649same_signature(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r649specialize_signature_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r649specialize_ensure_in(T649* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r649specialize_ensure_thru(T649* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_REAL*/T0* r649twin(T649* C);
/*CST_ATT_REAL*/void r649add_into_shared(T649* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r649inline_expression_0(T649* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_REAL*/T6 r649valid_redefinition(T649* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T0* r649change_require(T649* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r649obsolete_warning_check_memory(void);
/*CST_ATT_REAL*/T333 r649start_position(T649* C);
/*CST_ATT_REAL*/void r649set_rescue_compound(T649* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r646specialized_ensure_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r646try_to_undefine_aux(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r646collect(T646* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r646specialize_require_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/void r646pretty_constant_value(T646* C,T2 a1);
/*CST_ATT_BOOLEAN*/T0* r646specialize_2(T646* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r646simplify(T646* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r646arguments(void);
/*CST_ATT_BOOLEAN*/T0* r646specialized_require_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r646first_name(T646* C);
/*CST_ATT_BOOLEAN*/void r646collect_body(T646* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r646names(T646* C);
/*CST_ATT_BOOLEAN*/T0* r646specialize_require_in(T646* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r646add_into(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r646merge_signature_thru(T646* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_BOOLEAN*/T0* r646try_to_undefine(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r646make(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r646add_into_(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r646new_run_feature_for(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r646valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T6 r646use_current(T0* a1);
/*CST_ATT_BOOLEAN*/void r646obsolete_warning_check(T646* C,T0* a1,T333 a2);
/*CST_ATT_BOOLEAN*/T0* r646change_ensure(T646* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r646brand_new_run_feature_for(T646* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_BOOLEAN*/void r646pretty_print_names(T646* C);
/*CST_ATT_BOOLEAN*/T0* r646specialize_permissions(T646* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/void r646pretty(T646* C,T2 a1,T6 a2);
/*CST_ATT_BOOLEAN*/T6 r646same_body_as(T646* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r646inline_dynamic_dispatch(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T6 r646same_signature(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r646specialize_signature_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r646specialize_ensure_in(T646* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r646specialize_ensure_thru(T646* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_BOOLEAN*/T0* r646twin(T646* C);
/*CST_ATT_BOOLEAN*/void r646add_into_shared(T646* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r646inline_expression_0(T646* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_BOOLEAN*/T6 r646valid_redefinition(T646* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T0* r646change_require(T646* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r646obsolete_warning_check_memory(void);
/*CST_ATT_BOOLEAN*/T333 r646start_position(T646* C);
/*CST_ATT_BOOLEAN*/void r646set_rescue_compound(T646* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r647specialized_ensure_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r647specialize_signature_in(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r647try_to_undefine_aux(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r647collect(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r647specialize_require_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/void r647from_effective(T647* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*DEFERRED_FUNCTION*/T0* r647specialize_2(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r647simplify(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/void r647pretty_print_routine_body(T2 a1);
/*DEFERRED_FUNCTION*/T0* r647specialized_require_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r647first_name(T647* C);
/*DEFERRED_FUNCTION*/T0* r647names(T647* C);
/*DEFERRED_FUNCTION*/T0* r647specialize_require_in(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/void r647add_into(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r647merge_signature_thru(T647* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_FUNCTION*/void r647make_routine(T647* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r647try_to_undefine(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r647make(T647* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*DEFERRED_FUNCTION*/void r647add_into_(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r647new_run_feature_for(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r647valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T6 r647use_current(T0* a1);
/*DEFERRED_FUNCTION*/void r647obsolete_warning_check(T647* C,T0* a1,T333 a2);
/*DEFERRED_FUNCTION*/T0* r647change_ensure(T647* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r647brand_new_run_feature_for(T647* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_FUNCTION*/void r647pretty_print_names(T647* C);
/*DEFERRED_FUNCTION*/T0* r647specialize_permissions(T647* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/void r647pretty(T647* C,T2 a1,T6 a2);
/*DEFERRED_FUNCTION*/T6 r647same_body_as(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/void r647inline_dynamic_dispatch(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T6 r647same_signature(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r647specialize_signature_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r647specialize_ensure_in(T647* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r647specialize_ensure_thru(T647* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_FUNCTION*/T0* r647twin(T647* C);
/*DEFERRED_FUNCTION*/void r647add_into_shared(T647* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r647accept(T647* C,T0* a1);
/*DEFERRED_FUNCTION*/T6 r647valid_redefinition(T647* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r647change_require(T647* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r647obsolete_warning_check_memory(void);
/*DEFERRED_FUNCTION*/T333 r647start_position(T647* C);
/*DEFERRED_FUNCTION*/void r647set_rescue_compound(T647* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642specialized_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r642current_or_twin_init_no_body(T642* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_signature_in(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642try_to_undefine_aux(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r642collect(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_2(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642simplify(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r642pretty_print_routine_body(T642* C,T2 a1);
/*EXTERNAL_PROCEDURE*/T0* r642specialized_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/void r642make_external_routine(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642first_name(T642* C);
/*EXTERNAL_PROCEDURE*/void r642collect_body(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642names(T642* C);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_require_in(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r642inline_dynamic_dispatch_(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642current_or_twin_init(T642* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_PROCEDURE*/void r642add_into(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642merge_signature_thru(T642* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/void r642make_routine(T642* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r642try_to_undefine(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r642make(T642* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_PROCEDURE*/void r642add_into_(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642new_run_feature_for(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642result_type(void);
/*EXTERNAL_PROCEDURE*/void r642valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r642adapt_routine_body_for(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r642use_current(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r642obsolete_warning_check(T642* C,T0* a1,T333 a2);
/*EXTERNAL_PROCEDURE*/void r642init(T642* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_PROCEDURE*/T2 r642argument_rank_of(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642external_name(T642* C);
/*EXTERNAL_PROCEDURE*/T0* r642change_ensure(T642* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r642brand_new_run_feature_for(T642* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_PROCEDURE*/void r642pretty_print_names(T642* C);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_permissions(T642* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/void r642hook_collect(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r642pretty(T642* C,T2 a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T6 r642same_body_as(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r642inline_dynamic_dispatch(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_body_thru(T642* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T6 r642same_signature(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_signature_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_ensure_in(T642* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T0* r642twin(T642* C);
/*EXTERNAL_PROCEDURE*/void r642add_into_shared(T642* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r642accept(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r642valid_redefinition(T642* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r642change_require(T642* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r642obsolete_warning_check_memory(void);
/*EXTERNAL_PROCEDURE*/T333 r642start_position(T642* C);
/*EXTERNAL_PROCEDURE*/void r642set_rescue_compound(T642* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r642c_plus_plus_name(T642* C);
/*EXTERNAL_PROCEDURE*/T0* r642specialize_body_in(T642* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r645specialized_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r645specialize_signature_in(T645* C,T0* a1);
/*E_PROCEDURE*/T0* r645inline_instruction_n(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r645try_to_undefine_aux(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r645inline_proc_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T0* r645inline_proc_call_0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r645collect(T645* C,T0* a1);
/*E_PROCEDURE*/T0* r645specialize_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r645specialize_2(T645* C,T0* a1);
/*E_PROCEDURE*/T6 r645empty_body_side_effect_free_effective_routine(T645* C,T0* a1);
/*E_PROCEDURE*/T0* r645simplify(T645* C,T0* a1);
/*E_PROCEDURE*/void r645pretty_print_routine_body(T645* C,T2 a1);
/*E_PROCEDURE*/T0* r645specialized_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/void r645pretty_print_rescue(T645* C,T2 a1);
/*E_PROCEDURE*/T0* r645first_name(T645* C);
/*E_PROCEDURE*/T0* r645inline_instruction_1(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r645inline_instruction_0(T645* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r645rescue_compound_in(T645* C,T0* a1);
/*E_PROCEDURE*/void r645collect_body(T645* C,T0* a1);
/*E_PROCEDURE*/T0* r645names(T645* C);
/*E_PROCEDURE*/T0* r645specialize_require_in(T645* C,T0* a1);
/*E_PROCEDURE*/T0* r645remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_PROCEDURE*/void r645inline_dynamic_dispatch_(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r645no_rescue_no_local_expanded_in(T645* C,T0* a1);
/*E_PROCEDURE*/void r645add_into(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r645merge_signature_thru(T645* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_PROCEDURE*/void r645make_routine(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r645try_to_undefine(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r645make(T645* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_PROCEDURE*/void r645add_into_(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r645new_run_feature_for(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r645result_type(void);
/*E_PROCEDURE*/void r645valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T6 r645use_current(T645* C,T0* a1);
/*E_PROCEDURE*/void r645obsolete_warning_check(T645* C,T0* a1,T333 a2);
/*E_PROCEDURE*/void r645init(T645* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r645change_ensure(T645* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r645brand_new_run_feature_for(T645* C,T0* a1,T0* a2,T6 a3);
/*E_PROCEDURE*/void r645pretty_print_once_or_do(T2 a1);
/*E_PROCEDURE*/void r645pretty_print_names(T645* C);
/*E_PROCEDURE*/T0* r645specialize_permissions(T645* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r645left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r645pretty(T645* C,T2 a1,T6 a2);
/*E_PROCEDURE*/T6 r645same_body_as(T645* C,T0* a1);
/*E_PROCEDURE*/void r645inline_dynamic_dispatch(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r645specialize_body_thru(T645* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r645inline_proc_call_n(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T6 r645same_signature(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T333 r645sedb_trace_before_exit(T645* C);
/*E_PROCEDURE*/T0* r645specialize_signature_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r645specialize_ensure_in(T645* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r645specialize_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r645twin(T645* C);
/*E_PROCEDURE*/void r645add_into_shared(T645* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r645accept(T645* C,T0* a1);
/*E_PROCEDURE*/T0* r645left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r645valid_redefinition(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r645change_require(T645* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r645obsolete_warning_check_memory(void);
/*E_PROCEDURE*/T333 r645start_position(T645* C);
/*E_PROCEDURE*/T0* r645specialize_body_in(T645* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T6 r645_P_331_same_body_as(T645* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r643specialized_ensure_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r643try_to_undefine_aux(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r643collect(T643* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r643specialize_require_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r643specialize_2(T643* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r643simplify(T643* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r643arguments(void);
/*CST_ATT_INTEGER*/T0* r643specialized_require_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r643first_name(T643* C);
/*CST_ATT_INTEGER*/void r643collect_body(T643* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r643names(T643* C);
/*CST_ATT_INTEGER*/T0* r643specialize_require_in(T643* C,T0* a1);
/*CST_ATT_INTEGER*/void r643add_into(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r643merge_signature_thru(T643* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_INTEGER*/T0* r643try_to_undefine(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r643make(T643* C,T0* a1);
/*CST_ATT_INTEGER*/void r643add_into_(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r643new_run_feature_for(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r643valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T6 r643use_current(T0* a1);
/*CST_ATT_INTEGER*/void r643obsolete_warning_check(T643* C,T0* a1,T333 a2);
/*CST_ATT_INTEGER*/T0* r643change_ensure(T643* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r643brand_new_run_feature_for(T643* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_INTEGER*/void r643pretty_print_names(T643* C);
/*CST_ATT_INTEGER*/T0* r643specialize_permissions(T643* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/void r643pretty(T643* C,T2 a1,T6 a2);
/*CST_ATT_INTEGER*/T6 r643same_body_as(T643* C,T0* a1);
/*CST_ATT_INTEGER*/void r643inline_dynamic_dispatch(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T6 r643same_signature(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r643specialize_signature_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r643specialize_ensure_in(T643* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r643specialize_ensure_thru(T643* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_INTEGER*/T0* r643twin(T643* C);
/*CST_ATT_INTEGER*/void r643add_into_shared(T643* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r643inline_expression_0(T643* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_INTEGER*/T6 r643valid_redefinition(T643* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T0* r643change_require(T643* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r643obsolete_warning_check_memory(void);
/*CST_ATT_INTEGER*/T333 r643start_position(T643* C);
/*CST_ATT_INTEGER*/void r643set_rescue_compound(T643* C,T0* a1);
/*E_FUNCTION*/T0* r648specialized_ensure_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r648specialize_signature_in(T648* C,T0* a1);
/*E_FUNCTION*/T0* r648try_to_undefine_aux(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r648collect(T648* C,T0* a1);
/*E_FUNCTION*/T0* r648specialize_require_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r648specialize_2(T648* C,T0* a1);
/*E_FUNCTION*/T6 r648empty_body_side_effect_free_effective_routine(T648* C,T0* a1);
/*E_FUNCTION*/T0* r648inline_eq_neq1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r648inline_eq_neq0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r648simplify(T648* C,T0* a1);
/*E_FUNCTION*/void r648pretty_print_routine_body(T648* C,T2 a1);
/*E_FUNCTION*/T0* r648specialized_require_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/void r648pretty_print_rescue(T648* C,T2 a1);
/*E_FUNCTION*/T0* r648first_name(T648* C);
/*E_FUNCTION*/T0* r648rescue_compound_in(T648* C,T0* a1);
/*E_FUNCTION*/void r648collect_body(T648* C,T0* a1);
/*E_FUNCTION*/T0* r648names(T648* C);
/*E_FUNCTION*/T0* r648specialize_require_in(T648* C,T0* a1);
/*E_FUNCTION*/T0* r648remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_FUNCTION*/void r648inline_dynamic_dispatch_(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/T6 r648no_rescue_no_local_expanded_in(T648* C,T0* a1);
/*E_FUNCTION*/void r648add_into(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r648make_effective_routine(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r648inline_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r648merge_signature_thru(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_FUNCTION*/void r648make_routine(T648* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r648try_to_undefine(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r648make(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/void r648add_into_(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r648new_run_feature_for(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r648inline_eq_neq0_(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/void r648valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T6 r648use_current(T648* C,T0* a1);
/*E_FUNCTION*/void r648obsolete_warning_check(T648* C,T0* a1,T333 a2);
/*E_FUNCTION*/void r648init(T648* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r648inline_expression_n(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r648change_ensure(T648* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r648brand_new_run_feature_for(T648* C,T0* a1,T0* a2,T6 a3);
/*E_FUNCTION*/void r648pretty_print_once_or_do(T2 a1);
/*E_FUNCTION*/void r648pretty_print_names(T648* C);
/*E_FUNCTION*/T0* r648specialize_permissions(T648* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r648left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/void r648pretty(T648* C,T2 a1,T6 a2);
/*E_FUNCTION*/T6 r648same_body_as(T648* C,T0* a1);
/*E_FUNCTION*/void r648inline_dynamic_dispatch(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r648specialize_body_thru(T648* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T6 r648same_signature(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/T333 r648sedb_trace_before_exit(T648* C);
/*E_FUNCTION*/T0* r648specialize_signature_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r648specialize_ensure_in(T648* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r648specialize_ensure_thru(T648* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T0* r648twin(T648* C);
/*E_FUNCTION*/void r648add_into_shared(T648* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r648accept(T648* C,T0* a1);
/*E_FUNCTION*/T0* r648inline_expression_1(T648* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/T0* r648inline_expression_0(T648* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r648left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_FUNCTION*/T6 r648valid_redefinition(T648* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r648change_require(T648* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r648obsolete_warning_check_memory(void);
/*E_FUNCTION*/T333 r648start_position(T648* C);
/*E_FUNCTION*/T0* r648specialize_body_in(T648* C,T0* a1,T6 a2);
/*E_FUNCTION*/T6 r648_P_331_same_body_as(T648* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r639specialized_ensure_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r639specialize_signature_in(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r639try_to_undefine_aux(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r639collect(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r639specialize_require_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/void r639from_effective(T639* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*DEFERRED_PROCEDURE*/T0* r639specialize_2(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r639simplify(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r639pretty_print_routine_body(T2 a1);
/*DEFERRED_PROCEDURE*/T0* r639specialized_require_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r639first_name(T639* C);
/*DEFERRED_PROCEDURE*/T0* r639names(T639* C);
/*DEFERRED_PROCEDURE*/T0* r639specialize_require_in(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r639add_into(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r639merge_signature_thru(T639* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_PROCEDURE*/void r639make_routine(T639* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r639try_to_undefine(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r639make(T639* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/void r639add_into_(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r639new_run_feature_for(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r639result_type(void);
/*DEFERRED_PROCEDURE*/void r639valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T6 r639use_current(T0* a1);
/*DEFERRED_PROCEDURE*/void r639obsolete_warning_check(T639* C,T0* a1,T333 a2);
/*DEFERRED_PROCEDURE*/T0* r639change_ensure(T639* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r639brand_new_run_feature_for(T639* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_PROCEDURE*/void r639pretty_print_names(T639* C);
/*DEFERRED_PROCEDURE*/T0* r639specialize_permissions(T639* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/void r639pretty(T639* C,T2 a1,T6 a2);
/*DEFERRED_PROCEDURE*/T6 r639same_body_as(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r639inline_dynamic_dispatch(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T6 r639same_signature(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r639specialize_signature_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r639specialize_ensure_in(T639* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r639specialize_ensure_thru(T639* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_PROCEDURE*/T0* r639twin(T639* C);
/*DEFERRED_PROCEDURE*/void r639add_into_shared(T639* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r639accept(T639* C,T0* a1);
/*DEFERRED_PROCEDURE*/T6 r639valid_redefinition(T639* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r639change_require(T639* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r639obsolete_warning_check_memory(void);
/*DEFERRED_PROCEDURE*/T333 r639start_position(T639* C);
/*DEFERRED_PROCEDURE*/void r639set_rescue_compound(T639* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r638specialized_ensure_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r638specialize_signature_in(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r638try_to_undefine_aux(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r638collect(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r638specialize_require_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r638specialize_2(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T6 r638empty_body_side_effect_free_effective_routine(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r638simplify(T638* C,T0* a1);
/*ONCE_PROCEDURE*/void r638pretty_print_routine_body(T638* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r638specialized_require_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/void r638pretty_print_rescue(T638* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r638first_name(T638* C);
/*ONCE_PROCEDURE*/T0* r638rescue_compound_in(T638* C,T0* a1);
/*ONCE_PROCEDURE*/void r638collect_body(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r638names(T638* C);
/*ONCE_PROCEDURE*/T0* r638specialize_require_in(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r638remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r638inline_dynamic_dispatch_(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T6 r638no_rescue_no_local_expanded_in(T638* C,T0* a1);
/*ONCE_PROCEDURE*/void r638add_into(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r638merge_signature_thru(T638* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_PROCEDURE*/void r638make_routine(T638* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r638try_to_undefine(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r638make(T638* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_PROCEDURE*/void r638add_into_(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r638new_run_feature_for(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r638result_type(void);
/*ONCE_PROCEDURE*/void r638valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T6 r638use_current(T638* C,T0* a1);
/*ONCE_PROCEDURE*/void r638obsolete_warning_check(T638* C,T0* a1,T333 a2);
/*ONCE_PROCEDURE*/void r638init(T638* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r638change_ensure(T638* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r638brand_new_run_feature_for(T638* C,T0* a1,T0* a2,T6 a3);
/*ONCE_PROCEDURE*/void r638pretty_print_once_or_do(T2 a1);
/*ONCE_PROCEDURE*/void r638pretty_print_names(T638* C);
/*ONCE_PROCEDURE*/T0* r638specialize_permissions(T638* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/void r638pretty(T638* C,T2 a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r638same_body_as(T638* C,T0* a1);
/*ONCE_PROCEDURE*/void r638inline_dynamic_dispatch(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r638specialize_body_thru(T638* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T6 r638same_signature(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T333 r638sedb_trace_before_exit(T638* C);
/*ONCE_PROCEDURE*/T0* r638specialize_signature_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r638specialize_ensure_in(T638* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r638specialize_ensure_thru(T638* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T0* r638twin(T638* C);
/*ONCE_PROCEDURE*/void r638add_into_shared(T638* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r638accept(T638* C,T0* a1);
/*ONCE_PROCEDURE*/T6 r638valid_redefinition(T638* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r638change_require(T638* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r638obsolete_warning_check_memory(void);
/*ONCE_PROCEDURE*/T333 r638start_position(T638* C);
/*ONCE_PROCEDURE*/T0* r638specialize_body_in(T638* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r638_P_331_same_body_as(T638* C,T0* a1);
/*CST_ATT_UNIQUE*/T641*create641with(T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r641specialized_ensure_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r641try_to_undefine_aux(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r641collect(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r641specialize_require_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/void r641pretty_constant_value(T2 a1);
/*CST_ATT_UNIQUE*/T0* r641specialize_2(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/void r641with(T641* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r641simplify(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r641arguments(void);
/*CST_ATT_UNIQUE*/T0* r641specialized_require_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r641first_name(T641* C);
/*CST_ATT_UNIQUE*/void r641collect_body(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r641names(T641* C);
/*CST_ATT_UNIQUE*/T0* r641specialize_require_in(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/void r641add_into(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r641merge_signature_thru(T641* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_UNIQUE*/T0* r641try_to_undefine(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r641make(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/void r641add_into_(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r641new_run_feature_for(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r641valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC641counter;
/*CST_ATT_UNIQUE*/T6 r641use_current(T0* a1);
/*CST_ATT_UNIQUE*/void r641obsolete_warning_check(T641* C,T0* a1,T333 a2);
/*CST_ATT_UNIQUE*/T0* r641change_ensure(T641* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r641brand_new_run_feature_for(T641* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_UNIQUE*/void r641pretty_print_names(T641* C);
/*CST_ATT_UNIQUE*/T0* r641specialize_permissions(T641* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/void r641pretty(T641* C,T2 a1,T6 a2);
/*CST_ATT_UNIQUE*/T6 r641same_body_as(T641* C,T0* a1);
/*CST_ATT_UNIQUE*/void r641inline_dynamic_dispatch(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T6 r641same_signature(T641* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r641specialize_signature_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r641specialize_ensure_in(T641* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r641specialize_ensure_thru(T641* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_UNIQUE*/T0* r641twin(T641* C);
/*CST_ATT_UNIQUE*/T0* r641inline_expression_0(T641* C,T0* a1,T0* a2,T333 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_UNIQUE*/T6 r641valid_redefinition(T641* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r641change_require(T641* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r641obsolete_warning_check_memory(void);
/*CST_ATT_UNIQUE*/T333 r641start_position(T641* C);
/*CST_ATT_UNIQUE*/void r641set_rescue_compound(T641* C,T0* a1);
/*RENAME_LIST*/void r683check_level_2(T683* C,T0* a1);
/*RENAME_LIST*/void r683make(T683* C,T0* a1);
/*RENAME_LIST*/T0* r683name_in_child(T683* C,T0* a1);
/*RENAME_LIST*/T6 r683is_target_of_rename(T683* C,T0* a1);
/*RENAME_LIST*/void r683initialize_and_check_level_1(T683* C);
/*RENAME_LIST*/T0* r683name_in_parent(T683* C,T0* a1);
/*RENAME_LIST*/T0* r683item(T683* C,T2 a1);
/*RENAME_LIST*/T2 r683count(T683* C);
/*WHEN_ITEM_2*/void r724make(T724* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r724pretty(T724* C,T2 a1);
/*WHEN_ITEM_2*/void r724set_lower_upper_manifest_expression(T724* C,T0* a1);
/*WHEN_ITEM_2*/void r724validity_check(T724* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r724specialize_in(T724* C,T0* a1);
/*WHEN_ITEM_2*/void r724character_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r724init(T724* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r724set_values_integer(T724* C);
/*WHEN_ITEM_2*/T2 r724upper_value(T724* C);
/*WHEN_ITEM_2*/void r724integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r724force_internal_integer_values(T724* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r724specialize_thru(T724* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r724specialize_2_character(T724* C,T0* a1);
/*WHEN_ITEM_2*/T6 r724validity_check_continued(T724* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r724adapt_for(T724* C,T0* a1);
/*WHEN_ITEM_2*/T2 r724lower_value(T724* C);
/*WHEN_ITEM_2*/void r724collect(T724* C,T0* a1);
/*WHEN_ITEM_2*/void r724validity_check_continued_when_item_2(T724* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r724validity_check_continued_when_item_1(T724* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r724manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T333 r724start_position(T724* C);
/*WHEN_ITEM_2*/T2 r724integer_value_of(T0* a1);
/*WHEN_ITEM_2*/T0* r724twin(T724* C);
/*WHEN_ITEM_2*/void r724set_values_character(T724* C);
/*WHEN_ITEM_2*/T2 r724locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_2*/void r724lower_upper_value_check(T724* C);
/*WHEN_ITEM_2*/void r724validity_check_continued_(T724* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r724force_internal_character_values(T724* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T6 r724match_value(T724* C,T2 a1);
/*WHEN_ITEM_2*/T0* r724specialize_2_integer(T724* C,T0* a1);
/*WHEN_ITEM_2*/T0* r724compute_values(T724* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r724explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r724current_or_twin_init(T724* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r374set_manifest_expression(T374* C,T0* a1);
/*WHEN_ITEM_1*/void r374make(T374* C,T0* a1);
/*WHEN_ITEM_1*/void r374pretty(T374* C,T2 a1);
/*WHEN_ITEM_1*/void r374validity_check(T374* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r374specialize_in(T374* C,T0* a1);
/*WHEN_ITEM_1*/void r374character_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r374set_expression_value(T374* C,T2 a1);
/*WHEN_ITEM_1*/void r374integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r374force_internal_integer_values(T374* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r374specialize_thru(T374* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T2 r374expression_value(T374* C);
/*WHEN_ITEM_1*/T0* r374specialize_2_character(T374* C,T0* a1);
/*WHEN_ITEM_1*/T6 r374validity_check_continued(T374* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r374adapt_for(T374* C,T0* a1);
/*WHEN_ITEM_1*/void r374collect(T374* C,T0* a1);
/*WHEN_ITEM_1*/void r374validity_check_continued_when_item_2(T374* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r374validity_check_continued_when_item_1(T374* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r374manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T333 r374start_position(T374* C);
/*WHEN_ITEM_1*/T2 r374integer_value_of(T0* a1);
/*WHEN_ITEM_1*/void r374set_expression_value_character(T374* C);
/*WHEN_ITEM_1*/T0* r374twin(T374* C);
/*WHEN_ITEM_1*/T2 r374locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_1*/void r374validity_check_continued_(T374* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r374force_internal_character_values(T374* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T6 r374match_value(T374* C,T2 a1);
/*WHEN_ITEM_1*/T0* r374specialize_2_integer(T374* C,T0* a1);
/*WHEN_ITEM_1*/T0* r374compute_values(T374* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r374set_expression_value_integer(T374* C);
/*WHEN_ITEM_1*/void r374explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r374current_or_twin_init(T374* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r670simplify_add(T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/T0* r670to_expression(T670* C);
/*COMPOUND_EXPRESSION*/T0* r670simplify(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r670static_simplify(T670* C);
/*COMPOUND_EXPRESSION*/void r670inline_dynamic_dispatch_(T670* C,T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/void r670safety_check(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r670set_list(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T2 r670upper(T670* C);
/*COMPOUND_EXPRESSION*/T6 r670is_stored_in_some_local_variable(void);
/*COMPOUND_EXPRESSION*/void r670accept(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r670adapt_for(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r670from_list(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r670collect(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T333 r670start_position(T670* C);
/*COMPOUND_EXPRESSION*/T0* r670twin(T670* C);
/*COMPOUND_EXPRESSION*/T0* r670written_declaration_type_mark(void);
/*COMPOUND_EXPRESSION*/T6 r670use_current(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r670crash(T670* C);
/*COMPOUND_EXPRESSION*/T0* r670non_void_no_dispatch_type(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T6 r670side_effect_free(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r670not_yet_implemented(T670* C);
/*COMPOUND_EXPRESSION*/T0* r670resolve_in(T670* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r670to_instruction(T670* C);
/*CREATE_WRITABLE*/T0* r661to_expression(T661* C);
/*CREATE_WRITABLE*/void r661make(T661* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r661pretty(T661* C,T2 a1);
/*CREATE_WRITABLE*/T0* r661simplify(T661* C,T0* a1);
/*CREATE_WRITABLE*/T6 r661extra_bracket_flag(T661* C);
/*CREATE_WRITABLE*/T0* r661specialize_2(T661* C,T0* a1);
/*CREATE_WRITABLE*/void r661validity_check(T661* C,T0* a1);
/*CREATE_WRITABLE*/T0* r661static_simplify(T661* C);
/*CREATE_WRITABLE*/T0* r661specialize_in(T661* C,T0* a1);
/*CREATE_WRITABLE*/void r661inline_dynamic_dispatch_(T661* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r661safety_check(T661* C,T0* a1);
/*CREATE_WRITABLE*/void r661init(T661* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T6 r661is_result(T661* C);
/*CREATE_WRITABLE*/T2 r661precedence(T661* C);
/*CREATE_WRITABLE*/T0* r661specialize_thru(T661* C,T0* a1,T0* a2,T0* a3);
/*CREATE_WRITABLE*/T6 r661is_stored_in_some_local_variable(void);
/*CREATE_WRITABLE*/void r661accept(T661* C,T0* a1);
/*CREATE_WRITABLE*/T0* r661adapt_for(T661* C,T0* a1);
/*CREATE_WRITABLE*/T0* r661collect(T661* C,T0* a1);
/*CREATE_WRITABLE*/void r661pretty_target(T661* C,T2 a1);
/*CREATE_WRITABLE*/T333 r661start_position(T661* C);
/*CREATE_WRITABLE*/T0* r661twin(T661* C);
/*CREATE_WRITABLE*/T0* r661written_declaration_type_mark(void);
/*CREATE_WRITABLE*/T6 r661use_current(T661* C,T0* a1);
/*CREATE_WRITABLE*/void r661bracketed_pretty(T661* C,T2 a1);
/*CREATE_WRITABLE*/T0* r661non_void_no_dispatch_type(T0* a1);
/*CREATE_WRITABLE*/T6 r661side_effect_free(T661* C,T0* a1);
/*CREATE_WRITABLE*/void r661make_specialized(T661* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T0* r661resolve_in(T661* C,T0* a1);
/*CREATE_WRITABLE*/T0* r661to_instruction(T661* C);
/*CREATE_WRITABLE*/T0* r661current_or_twin_init(T661* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/T0* r666to_expression(T666* C);
/*CLOSED_OPERAND*/void r666make(T666* C,T2 a1,T0* a2);
/*CLOSED_OPERAND*/void r666pretty(T666* C,T2 a1);
/*CLOSED_OPERAND*/T0* r666simplify(T666* C,T0* a1);
/*CLOSED_OPERAND*/T6 r666extra_bracket_flag(T666* C);
/*CLOSED_OPERAND*/T0* r666specialize_2(T666* C,T0* a1);
/*CLOSED_OPERAND*/T0* r666static_simplify(T666* C);
/*CLOSED_OPERAND*/T0* r666specialize_in(T666* C,T0* a1);
/*CLOSED_OPERAND*/void r666inline_dynamic_dispatch_(T666* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/void r666safety_check(T666* C,T0* a1);
/*CLOSED_OPERAND*/T6 r666is_result(T666* C);
/*CLOSED_OPERAND*/T2 r666precedence(T666* C);
/*CLOSED_OPERAND*/T0* r666specialize_thru(T666* C,T0* a1,T0* a2,T0* a3);
/*CLOSED_OPERAND*/T6 r666is_static(T666* C);
/*CLOSED_OPERAND*/T6 r666is_stored_in_some_local_variable(void);
/*CLOSED_OPERAND*/void r666accept(T666* C,T0* a1);
/*CLOSED_OPERAND*/T0* r666adapt_for(T666* C,T0* a1);
/*CLOSED_OPERAND*/T0* r666declaration_type(T666* C);
/*CLOSED_OPERAND*/T0* r666collect(T666* C,T0* a1);
/*CLOSED_OPERAND*/T6 r666is_current(T666* C);
/*CLOSED_OPERAND*/void r666pretty_target(T666* C,T2 a1);
/*CLOSED_OPERAND*/T0* r666twin(T666* C);
/*CLOSED_OPERAND*/T0* r666written_declaration_type_mark(void);
/*CLOSED_OPERAND*/T6 r666use_current(T666* C,T0* a1);
/*CLOSED_OPERAND*/void r666bracketed_pretty(T666* C,T2 a1);
/*CLOSED_OPERAND*/T6 r666is_void(T666* C);
/*CLOSED_OPERAND*/T0* r666non_void_no_dispatch_type(T666* C,T0* a1);
/*CLOSED_OPERAND*/T6 r666side_effect_free(T666* C,T0* a1);
/*CLOSED_OPERAND*/T6 r666is_manifest_string(T666* C);
/*CLOSED_OPERAND*/T6 r666is_implicit_current(T666* C);
/*CLOSED_OPERAND*/T0* r666resolve_in(T666* C,T0* a1);
/*CLOSED_OPERAND*/T0* r666to_instruction(T666* C);
/*NO_INVARIANT_WRAPPER*/T0* r408to_expression(T408* C);
/*NO_INVARIANT_WRAPPER*/void r408make(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408simplify(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408specialize_2(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408specialize_in(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/void r408inline_dynamic_dispatch_(T408* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/void r408safety_check(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408specialize_thru(T408* C,T0* a1,T0* a2,T0* a3);
/*NO_INVARIANT_WRAPPER*/void r408accept(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408adapt_for(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408collect(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r408end_mark_comment(T408* C);
/*NO_INVARIANT_WRAPPER*/T333 r408start_position(T408* C);
/*NO_INVARIANT_WRAPPER*/T0* r408specialize_2_without_checks(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408twin(T408* C);
/*NO_INVARIANT_WRAPPER*/T6 r408use_current(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r408side_effect_free(T408* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r408inline_dynamic_dispatch(T408* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/T0* r408to_instruction(T408* C);
/*NO_INVARIANT_WRAPPER*/T0* r408current_or_twin_init(T408* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/void r725make(T725* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/T0* r725simplify(T725* C,T0* a1,T0* a2);
extern T0*oBC725strings;
extern int fBC725strings;
/*MANIFEST_STRING_INSPECTOR*/T0* r725strings(void);
/*MANIFEST_STRING_INSPECTOR*/T0* r725inline_inspect(T725* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T333 a6);
/*MANIFEST_STRING_INSPECTOR*/T6 r725has_empty(T725* C);
/*FAKE_ARGUMENT*/T0* r351to_expression(T351* C);
/*FAKE_ARGUMENT*/void r351make(T351* C,T0* a1,T333 a2,T0* a3,T2 a4);
/*FAKE_ARGUMENT*/T0* r351static_simplify(T351* C);
/*FAKE_ARGUMENT*/T0* r351specialize_in(T351* C,T0* a1);
/*FAKE_ARGUMENT*/void r351inline_dynamic_dispatch_(T351* C,T0* a1,T0* a2);
/*FAKE_ARGUMENT*/T6 r351is_stored_in_some_local_variable(void);
/*FAKE_ARGUMENT*/void r351accept(T351* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r351collect(T351* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r351twin(T351* C);
/*FAKE_ARGUMENT*/T0* r351written_declaration_type_mark(void);
/*FAKE_ARGUMENT*/T6 r351use_current(T0* a1);
/*FAKE_ARGUMENT*/T0* r351non_void_no_dispatch_type(T0* a1);
/*FAKE_ARGUMENT*/T6 r351side_effect_free(T0* a1);
/*FAKE_ARGUMENT*/T0* r351resolve_in(T351* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r351to_instruction(T351* C);
/*PROCESS_POSIX*/void r763make(T763* C);
/*PROCESS_POSIX*/T6 r763is_finished(T763* C);
/*PROCESS_POSIX*/void r763cleanup_streams(T763* C);
/*PROCESS_POSIX*/T2 r763id(T763* C);
/*PROCESS_POSIX*/void r763do_execute(T763* C,T8 a1,T8 a2,T6 a3,T8 a4);
/*PROCESS_POSIX*/void r763do_cleanup(T763* C);
/*PROCESS_POSIX*/void r763execute_command_line(T763* C,T0* a1,T6 a2);
/*PROCESS_POSIX*/void r763dispose(T763* C);
/*PROCESS_POSIX*/T6 r763is_child(T763* C);
/*PROCESS_POSIX*/void r763wait(T763* C);
/*PROCESS_WIN32*/void r764make(T764* C);
/*PROCESS_WIN32*/T6 r764is_finished(T764* C);
/*PROCESS_WIN32*/void r764cleanup_streams(T764* C);
/*PROCESS_WIN32*/T2 r764handle(T764* C);
/*PROCESS_WIN32*/void r764do_execute(T764* C,T8 a1,T6 a2);
/*PROCESS_WIN32*/void r764do_cleanup(T764* C);
/*PROCESS_WIN32*/void r764execute_command_line(T764* C,T0* a1,T6 a2);
/*PROCESS_WIN32*/void r764dispose(T764* C);
/*PROCESS_WIN32*/void r764wait(T764* C);
/*PROCESS_NONE*/void r765make(T765* C);
/*PROCESS_NONE*/void r765execute_command_line(T765* C,T0* a1,T6 a2);
/*PROCESS_GROUP_POSIX*/void r760make(T760* C);
/*PROCESS_GROUP_POSIX*/void r760unregister(T760* C,T0* a1);
/*PROCESS_GROUP_POSIX*/void r760register(T760* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r761make(T761* C);
/*PROCESS_GROUP_WIN32*/void r761unregister(T761* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r761register(T761* C,T0* a1);
/*STRING_RECYCLING_ITEM*/void r758set_item(T758* C,T0* a1);
/*STRING_RECYCLING_ITEM*/T0* r758item(T758* C);
/*STRING_RECYCLING_ITEM_SORTER*/T2 r817insert_index(T0* a1,T758 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r817lt(T758 a1,T758 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r817lte(T758 a1,T758 a2);
/*TUPLE_STRING_POOL*/void r815count_states(T815* C);
extern T0*oBC816counter;
/*TUPLE_STRING_POOL*/void r815make_transitions_array(T815* C);
extern T0*oBC816transition_memory;
extern int fBC816transition_memory;
/*TUPLE_STRING_POOL*/T0* r815transition_memory(void);
/*TUPLE_STRING_POOL*/T2 r815external_state(T815* C,T2 a1);
/*TUPLE_STRING_POOL*/T2 r815the_final_state(T815* C,T0* a1,T2 a2,T2 a3);
/*TUPLE_STRING_POOL*/void r815externalize_tags(T815* C,T0* a1);
/*TUPLE_STRING_POOL*/void r815set_state(T815* C,T2 a1,T2 a2,T3 a3);
/*TUPLE_STRING_POOL*/T2 r815state(T815* C,T2 a1,T3 a2);
/*TUPLE_STRING_POOL*/void r815compile_headers(T815* C);
/*TUPLE_STRING_POOL*/void r815from_collection(T815* C,T0* a1);
/*TUPLE_STRING_POOL*/T0* r815transition(T815* C,T2 a1);
/*COUNTER*/void r332next(T332* C);
/*STD_INPUT*/void r34make(T34* C);
/*MICROSOFT_PATH_NAME*/void r769remove_last(T769* C);
/*MICROSOFT_PATH_NAME*/void r769make_empty(T769* C);
/*MICROSOFT_PATH_NAME*/void r769start_join(T769* C,T0* a1,T2 a2);
/*MICROSOFT_PATH_NAME*/void r769join_element(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T2 r769start_join_to(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r769drive_specification(T769* C);
/*MICROSOFT_PATH_NAME*/void r769end_join(T769* C);
/*MICROSOFT_PATH_NAME*/void r769make_from_string(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r769last(T769* C);
/*MICROSOFT_PATH_NAME*/void r769add_last(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T6 r769is_separator(T3 a1);
/*MICROSOFT_PATH_NAME*/T6 r769is_absolute(T769* C);
/*MICROSOFT_PATH_NAME*/void r769go_up(T769* C);
/*MICROSOFT_PATH_NAME*/void r769make_current(T769* C);
/*MICROSOFT_PATH_NAME*/T2 r769scan_element(T769* C,T2 a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T6 r769is_valid_path(T0* a1);
/*MICROSOFT_PATH_NAME*/void r769join_to(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r769join(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r769to_string(T769* C);
/*MICROSOFT_PATH_NAME*/T0* r769short_name(T769* C);
/*MICROSOFT_PATH_NAME*/void r769join_element_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/void r769join_directory_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T2 r769count(T769* C);
/*MICROSOFT_PATH_NAME*/void r769make_root(T769* C);
/*MICROSOFT_PATH_NAME*/void r769_P_768_join_element(T769* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r769_P_766_end_join(T769* C);
/*UTF8_PARSER*/void r728decode(T728* C,T0* a1,T0* a2);
/*SEDB*/T654*create654make(T333 a1,T3 a2);
/*SEDB*/T0* r654to_expression(T654* C);
/*SEDB*/void r654make(T654* C,T333 a1,T3 a2);
/*SEDB*/T0* r654simplify(T654* C,T0* a1);
/*SEDB*/void r654inline_dynamic_dispatch_(T654* C,T0* a1,T0* a2);
/*SEDB*/void r654accept(T654* C,T0* a1);
/*SEDB*/T6 r654use_current(T0* a1);
/*SEDB*/T6 r654side_effect_free(T0* a1);
/*SEDB*/T0* r654inline_dynamic_dispatch(T654* C,T0* a1,T0* a2);
/*SEDB*/T0* r654to_instruction(T654* C);
/*NO_DISPATCH*/T0* r660to_expression(T660* C);
/*NO_DISPATCH*/void r660make(T660* C,T0* a1,T0* a2,T0* a3);
/*NO_DISPATCH*/T0* r660simplify(T660* C,T0* a1);
/*NO_DISPATCH*/T0* r660static_simplify(T660* C);
/*NO_DISPATCH*/void r660inline_dynamic_dispatch_(T660* C,T0* a1,T0* a2);
/*NO_DISPATCH*/void r660safety_check(T660* C,T0* a1);
/*NO_DISPATCH*/T6 r660is_result(T660* C);
/*NO_DISPATCH*/T6 r660is_stored_in_some_local_variable(void);
/*NO_DISPATCH*/void r660accept(T660* C,T0* a1);
/*NO_DISPATCH*/T0* r660adapt_for(T660* C,T0* a1);
/*NO_DISPATCH*/T0* r660collect(T660* C,T0* a1);
/*NO_DISPATCH*/T333 r660start_position(T660* C);
/*NO_DISPATCH*/T0* r660twin(T660* C);
/*NO_DISPATCH*/T0* r660written_declaration_type_mark(void);
/*NO_DISPATCH*/T6 r660use_current(T660* C,T0* a1);
/*NO_DISPATCH*/T0* r660non_void_no_dispatch_type(T660* C,T0* a1);
/*NO_DISPATCH*/T6 r660side_effect_free(T0* a1);
/*NO_DISPATCH*/T0* r660resolve_in(T660* C,T0* a1);
/*NO_DISPATCH*/T0* r660to_instruction(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663to_expression(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r663make(T663* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663simplify(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r663set_tag(T663* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663static_simplify(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r663inline_dynamic_dispatch_(T663* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r663safety_check(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r663is_result(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r663is_static(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r663is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r663accept(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663adapt_for(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663collect(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T333 r663start_position(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663twin(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r663use_current(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r663side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663tag(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663resolve_in(T663* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r663to_instruction(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664to_expression(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r664make(T664* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664simplify(T664* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664static_simplify(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r664inline_dynamic_dispatch_(T664* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r664is_result(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r664is_static(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r664is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r664accept(T664* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T333 r664start_position(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664twin(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r664use_current(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664non_void_no_dispatch_type(T664* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r664side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664resolve_in(T664* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r664to_instruction(T664* C);
/*VOID_CALL*/T667*create667make(T333 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r667to_expression(T667* C);
/*VOID_CALL*/void r667make(T667* C,T333 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r667simplify(T667* C,T0* a1);
/*VOID_CALL*/T0* r667static_simplify(T667* C);
/*VOID_CALL*/void r667inline_dynamic_dispatch_(T667* C,T0* a1,T0* a2);
/*VOID_CALL*/void r667safety_check(T667* C,T0* a1);
/*VOID_CALL*/T6 r667is_stored_in_some_local_variable(void);
/*VOID_CALL*/void r667accept(T667* C,T0* a1);
/*VOID_CALL*/T0* r667declaration_type(T667* C);
/*VOID_CALL*/T0* r667twin(T667* C);
/*VOID_CALL*/T0* r667written_declaration_type_mark(void);
/*VOID_CALL*/T6 r667use_current(T0* a1);
/*VOID_CALL*/T0* r667non_void_no_dispatch_type(T0* a1);
/*VOID_CALL*/T6 r667side_effect_free(T0* a1);
/*VOID_CALL*/T0* r667resolve_in(T667* C,T0* a1);
/*VOID_CALL*/T0* r667to_instruction(T667* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T669*create669make(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669to_expression(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r669make(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669simplify(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669static_simplify(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r669inline_dynamic_dispatch_(T669* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r669safety_check(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r669is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r669accept(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669collect(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T333 r669start_position(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669twin(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r669use_current(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r669side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669resolve_in(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r669to_instruction(T669* C);
/*INTERNAL_LOCAL2*/T662*create662make(T333 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r662to_expression(T662* C);
/*INTERNAL_LOCAL2*/void r662make(T662* C,T333 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r662simplify(T662* C,T0* a1);
/*INTERNAL_LOCAL2*/void r662set_tag(T662* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r662static_simplify(T662* C);
/*INTERNAL_LOCAL2*/void r662inline_dynamic_dispatch_(T662* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r662tagged_tag(T662* C,T0* a1);
/*INTERNAL_LOCAL2*/T6 r662is_stored_in_some_local_variable(void);
/*INTERNAL_LOCAL2*/void r662accept(T662* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r662declaration_type(T662* C);
/*INTERNAL_LOCAL2*/T0* r662collect(T662* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r662twin(T662* C);
/*INTERNAL_LOCAL2*/T0* r662written_declaration_type_mark(T662* C);
/*INTERNAL_LOCAL2*/T6 r662use_current(T0* a1);
/*INTERNAL_LOCAL2*/T0* r662non_void_no_dispatch_type(T0* a1);
/*INTERNAL_LOCAL2*/T6 r662side_effect_free(T0* a1);
/*INTERNAL_LOCAL2*/T0* r662resolve_in(T662* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r662to_instruction(T662* C);
/*UNUSED_EXPRESSION*/T657*create657make(T0* a1);
/*UNUSED_EXPRESSION*/T0* r657to_expression(T657* C);
/*UNUSED_EXPRESSION*/void r657make(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r657simplify(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/void r657inline_dynamic_dispatch_(T657* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/void r657safety_check(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/void r657accept(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r657adapt_for(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r657collect(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/T333 r657start_position(T657* C);
/*UNUSED_EXPRESSION*/T6 r657use_current(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/T6 r657side_effect_free(T657* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r657inline_dynamic_dispatch(T657* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/T0* r657to_instruction(T657* C);
/*NULL_POINTER*/T0* r668to_expression(T668* C);
/*NULL_POINTER*/void r668make(T668* C,T333 a1,T0* a2);
/*NULL_POINTER*/T0* r668simplify(T668* C,T0* a1);
/*NULL_POINTER*/T0* r668static_simplify(T668* C);
/*NULL_POINTER*/void r668inline_dynamic_dispatch_(T668* C,T0* a1,T0* a2);
/*NULL_POINTER*/T6 r668is_stored_in_some_local_variable(void);
/*NULL_POINTER*/void r668accept(T668* C,T0* a1);
extern T0*oBC668declaration_type;
extern int fBC668declaration_type;
/*NULL_POINTER*/T0* r668declaration_type(void);
/*NULL_POINTER*/T0* r668twin(T668* C);
/*NULL_POINTER*/T0* r668written_declaration_type_mark(void);
/*NULL_POINTER*/T6 r668use_current(T0* a1);
/*NULL_POINTER*/T0* r668non_void_no_dispatch_type(T0* a1);
/*NULL_POINTER*/T6 r668side_effect_free(T0* a1);
/*NULL_POINTER*/T0* r668resolve_in(T0* a1);
/*NULL_POINTER*/T0* r668to_instruction(T668* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T650*create650make(T333 a1,T0* a2,T0* a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r650to_expression(T650* C);
/*RUN_TIME_ERROR_INSTRUCTION*/void r650make(T650* C,T333 a1,T0* a2,T0* a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r650simplify(T650* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/void r650inline_dynamic_dispatch_(T650* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/void r650accept(T650* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r650use_current(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r650side_effect_free(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r650inline_dynamic_dispatch(T650* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r650to_instruction(T650* C);
/*IMPLICIT_CAST*/T0* r519to_expression(T519* C);
/*IMPLICIT_CAST*/void r519make(T519* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/void r519pretty(T519* C,T2 a1);
/*IMPLICIT_CAST*/T0* r519simplify(T519* C,T0* a1);
/*IMPLICIT_CAST*/T6 r519extra_bracket_flag(T519* C);
/*IMPLICIT_CAST*/T0* r519specialize_2(T519* C,T0* a1);
/*IMPLICIT_CAST*/T0* r519static_simplify(T519* C);
/*IMPLICIT_CAST*/void r519inline_dynamic_dispatch_(T519* C,T0* a1,T0* a2);
/*IMPLICIT_CAST*/void r519safety_check(T519* C,T0* a1);
/*IMPLICIT_CAST*/T6 r519is_result(T519* C);
/*IMPLICIT_CAST*/T2 r519precedence(T519* C);
/*IMPLICIT_CAST*/T0* r519specialize_thru(T519* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/T6 r519is_static(T519* C);
/*IMPLICIT_CAST*/T6 r519is_stored_in_some_local_variable(void);
/*IMPLICIT_CAST*/void r519accept(T519* C,T0* a1);
/*IMPLICIT_CAST*/T0* r519adapt_for(T519* C,T0* a1);
/*IMPLICIT_CAST*/T0* r519collect(T519* C,T0* a1);
/*IMPLICIT_CAST*/T6 r519is_current(void);
/*IMPLICIT_CAST*/void r519pretty_target(T519* C,T2 a1);
/*IMPLICIT_CAST*/T333 r519start_position(T519* C);
/*IMPLICIT_CAST*/T0* r519twin(T519* C);
/*IMPLICIT_CAST*/T0* r519written_declaration_type_mark(void);
/*IMPLICIT_CAST*/T6 r519use_current(T519* C,T0* a1);
/*IMPLICIT_CAST*/void r519bracketed_pretty(T519* C,T2 a1);
/*IMPLICIT_CAST*/T6 r519is_void(T519* C);
/*IMPLICIT_CAST*/T0* r519non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CAST*/T6 r519side_effect_free(T519* C,T0* a1);
/*IMPLICIT_CAST*/T6 r519is_manifest_string(T519* C);
/*IMPLICIT_CAST*/T0* r519resolve_in(T519* C,T0* a1);
/*IMPLICIT_CAST*/T0* r519to_instruction(T519* C);
/*AGENT_EXPRESSION*/T0* r671to_expression(T671* C);
/*AGENT_EXPRESSION*/void r671make(T671* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_EXPRESSION*/void r671agent_launcher_collect(T671* C,T0* a1);
/*AGENT_EXPRESSION*/void r671pretty(T671* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r671simplify(T671* C,T0* a1);
/*AGENT_EXPRESSION*/void r671specialize_2_check(T671* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r671specialize_2(T671* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r671static_simplify(T671* C);
/*AGENT_EXPRESSION*/void r671inline_dynamic_dispatch_(T671* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/void r671safety_check(T671* C,T0* a1);
/*AGENT_EXPRESSION*/void r671init(T671* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/T0* r671specialize_thru(T671* C,T0* a1,T0* a2,T0* a3);
/*AGENT_EXPRESSION*/T6 r671is_stored_in_some_local_variable(void);
/*AGENT_EXPRESSION*/void r671accept(T671* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r671adapt_for(T671* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r671collect(T671* C,T0* a1);
/*AGENT_EXPRESSION*/void r671pretty_target(T671* C,T2 a1);
/*AGENT_EXPRESSION*/T333 r671start_position(T671* C);
/*AGENT_EXPRESSION*/T0* r671twin(T671* C);
/*AGENT_EXPRESSION*/T0* r671written_declaration_type_mark(void);
/*AGENT_EXPRESSION*/T6 r671use_current(T671* C,T0* a1);
/*AGENT_EXPRESSION*/void r671bracketed_pretty(T671* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r671non_void_no_dispatch_type(T0* a1);
/*AGENT_EXPRESSION*/T6 r671side_effect_free(T0* a1);
/*AGENT_EXPRESSION*/T0* r671resolve_in(T671* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r671to_instruction(T671* C);
/*AGENT_EXPRESSION*/T0* r671current_or_twin_init(T671* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T659*create659make(T333 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r659to_expression(T659* C);
/*VOID_PROC_CALL*/void r659make(T659* C,T333 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r659simplify(T659* C,T0* a1);
/*VOID_PROC_CALL*/void r659inline_dynamic_dispatch_(T659* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/void r659safety_check(T659* C,T0* a1);
/*VOID_PROC_CALL*/void r659accept(T659* C,T0* a1);
/*VOID_PROC_CALL*/T6 r659use_current(T0* a1);
/*VOID_PROC_CALL*/T6 r659side_effect_free(T0* a1);
/*VOID_PROC_CALL*/T0* r659inline_dynamic_dispatch(T659* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T0* r659to_instruction(T659* C);
/*AGENT_INSTRUCTION*/T0* r655to_expression(T655* C);
/*AGENT_INSTRUCTION*/void r655make(T655* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_INSTRUCTION*/void r655agent_launcher_collect(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r655simplify(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/void r655specialize_2_check(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r655specialize_2(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/void r655inline_dynamic_dispatch_(T655* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/void r655safety_check(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/void r655init(T655* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r655specialize_thru(T655* C,T0* a1,T0* a2,T0* a3);
/*AGENT_INSTRUCTION*/void r655accept(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r655adapt_for(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r655collect(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/T333 r655start_position(T655* C);
/*AGENT_INSTRUCTION*/T0* r655twin(T655* C);
/*AGENT_INSTRUCTION*/T6 r655use_current(T655* C,T0* a1);
/*AGENT_INSTRUCTION*/T6 r655side_effect_free(T0* a1);
/*AGENT_INSTRUCTION*/T0* r655inline_dynamic_dispatch(T655* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r655to_instruction(T655* C);
/*AGENT_INSTRUCTION*/T0* r655current_or_twin_init(T655* C,T0* a1,T0* a2);
/*NUMBER_TOOLS*/T0* r316from_integer_64(T11 a1);
/*INLINE_MEMO*/T0* r522expression(T522* C);
/*INLINE_MEMO*/T0* r522instruction(T522* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_compound(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_check_compound(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_procedure_call_n(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_once_function(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_native_plug_in(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_manifest_generic(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_run_time_error_instruction(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_fake_target(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_no_dispatch(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_call(T116* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_precursor_instruction(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_local_var_list(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_anonymous_feature(T116* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_address_of(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_procedure_call_1(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_procedure_call_0(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_inspect_statement(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_native_built_in(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_assertion_list(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_function_call_n(T116* C,T0* a1);
extern T0*oBC116anonymous_feature_stack;
extern int fBC116anonymous_feature_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r116anonymous_feature_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_retry_instruction(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_c_inline(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_assignment_test(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_no_invariant_wrapper(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_implicit_cast(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_once_procedure(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_deferred_procedure(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_create_expression(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_external_procedure(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_native_java(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_effective_arg_list(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r116visit(T116* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_when_clause(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_built_in_eq_neq(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_manifest_tuple(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_fake_tuple(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_debug_compound(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_e_procedure(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_agent_instruction(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_closed_operand(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_call_1(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_call_0(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_deferred_function(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_void_call(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_unused_expression(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_writable_attribute(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_e_old(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_agent_creation(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r116can_be_dropped(T116* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_ifthenelse(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_create_instruction(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_assertion(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_loop_instruction(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_e_function(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_ifthen(T116* C,T0* a1);
extern T0*oBC116type_stack;
extern int fBC116type_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r116type_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_native_c_plus_plus(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_fast_array_of_expression(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_external_function(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_require_assertion(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_compound_expression(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_native_c(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_agent_expression(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_open_operand(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_void_proc_call(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_assignment_attempt(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_fake_argument(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_precursor_expression(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_expression_with_comment(T116* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r116visit_assignment(T116* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_assignment(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_debug_compound(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_class_invariant(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_void_call(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_create_expression(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_fake_tuple(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_e_false(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_implicit_cast(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_integer_constant(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_run_time_error_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_manifest_string_inspect_statement(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_compound_expression(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_precursor_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_argument_name2(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_dynamic_dispatch_temporary1_id(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_old_manifest_array(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_sedb(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_require_assertion(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_c_inline(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_create_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_generator_generating_type(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_implicit_current(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_check_compound(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_compound(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_effective_arg_list(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_call_infix_or_else(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_real_constant(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_agent_creation(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_static_call_0_c(T726* C,T0* a1);
/*CODE_COMPARATOR*/T6 r726trace_in(T726* C,T0* a1,T0* a2,T0* a3);
/*CODE_COMPARATOR*/void r726visit_call_infix(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_no_dispatch(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_character_constant(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_dynamic_dispatch_temporary1(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_null_pointer(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_dynamic_dispatch_temporary2(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_e_true(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_ensure_assertion(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_procedure_call_n(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_call_infix_implies(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_assignment_attempt(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_assignment_test(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_written_current(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_retry_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_expression_with_comment(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_other_inspect_statement(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_assertion(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_function_call_0(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_manifest_string(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_function_call_1(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_non_void_no_dispatch(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_manifest_tuple(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_closed_operand(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_when_clause(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_ifthen(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_open_operand(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_call_infix_and_then(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_local_name2(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_e_old(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_ifthenelse(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_create_writable(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_fake_target(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_call_prefix(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_writable_attribute_name(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_unused_expression(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_internal_local2(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_procedure_call_1(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_address_of(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_loop_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_procedure_call_0(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_fake_argument(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_void_proc_call(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_raw_create_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_e_void(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_agent_expression(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_loop_variant(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_manifest_generic(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_built_in_eq_neq(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_precursor_expression(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_agent_instruction(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_assertion_list(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_no_invariant_wrapper(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_result(T726* C,T0* a1);
/*CODE_COMPARATOR*/void r726visit_function_call_n(T726* C,T0* a1);
/*RUN_FEATURE_8*/T2 r731arg_count(T731* C);
/*RUN_FEATURE_8*/void r731compute_use_current(T731* C);
/*RUN_FEATURE_8*/void r731std_compute_use_current(T731* C);
/*RUN_FEATURE_8*/void r731for(T731* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_8*/void r731accept(T731* C,T0* a1);
/*RUN_FEATURE_8*/void r731set_result_type(T731* C);
/*RUN_FEATURE_8*/T333 r731start_position(T731* C);
/*RUN_FEATURE_8*/T6 r731use_current(T731* C);
/*RUN_FEATURE_8*/void r731mapping_name_in(T731* C,T0* a1);
/*RUN_FEATURE_8*/void r731do_adapt(T731* C);
/*RUN_FEATURE_8*/void r731adapt(T731* C);
/*RUN_FEATURE_8*/T0* r731feature_stamp(T731* C);
/*EXCEPTIONS_HANDLER*/void r107se_evobt(T107* C);
/*EXCEPTIONS_HANDLER*/void r107customize_c_runtime(T107* C);
/*EXCEPTIONS_HANDLER*/T0* r107cpp(void);
/*EXCEPTIONS_HANDLER*/void r107initialize_runtime(T107* C);
/*EXCEPTIONS_HANDLER*/void r107bad_inspect_value(T107* C,T333 a1);
/*STATIC_CALL_0_C*/T0* r409declaration_type(T409* C);
/*STATIC_CALL_0_C*/T0* r409adapt_for(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409resolve_in(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409use_current_stack(void);
/*STATIC_CALL_0_C*/T0* r409collect(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409specialize_2(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409specialize_in(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409written_declaration_type_mark(void);
/*STATIC_CALL_0_C*/T0* r409simplify(T409* C,T0* a1);
/*STATIC_CALL_0_C*/void r409pretty_target(T409* C,T2 a1);
/*STATIC_CALL_0_C*/void r409safety_check(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409to_expression(T409* C);
/*STATIC_CALL_0_C*/T0* r409specialize_thru(T409* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/T0* r409manifest_expression(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409feature_accumulator(void);
/*STATIC_CALL_0_C*/T6 r409simplify_limit_reached(T409* C);
/*STATIC_CALL_0_C*/void r409inline_dynamic_dispatch_(T409* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r409to_instruction(T409* C);
/*STATIC_CALL_0_C*/T0* r409current_or_twin_init(T409* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r409standard_check_export_and_obsolete_calls(T409* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/void r409make(T409* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r409echo(void);
/*STATIC_CALL_0_C*/void r409type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/void r409non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/T6 r409use_current(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409static_simplify(T409* C);
/*STATIC_CALL_0_C*/T0* r409extra_local_expanded(T409* C,T0* a1);
/*STATIC_CALL_0_C*/void r409function_and_argument_count_check(T409* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r409pretty(T409* C,T2 a1);
/*STATIC_CALL_0_C*/T6 r409side_effect_free(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409non_void_no_dispatch_type(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409inline_with(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r409twin(T409* C);
/*STATIC_CALL_0_C*/void r409bracketed_pretty(T409* C,T2 a1);
/*STATIC_CALL_0_C*/void r409accept(T409* C,T0* a1);
/*STATIC_CALL_0_C*/T333 r409start_position(T409* C);
/*STATIC_CALL_0_C*/T6 r409is_stored_in_some_local_variable(void);
/*RAW_CREATE_INSTRUCTION*/T0* r406to_expression(T406* C);
/*RAW_CREATE_INSTRUCTION*/void r406make(T406* C,T333 a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/T0* r406created_type(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r406typed_internals(T406* C,T333 a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r406pretty(T406* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406simplify(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406specialize_2(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r406specialize_2_checks(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406specialize_in(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r406inline_dynamic_dispatch_(T406* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r406safety_check(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r406set_call(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r406init(T406* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/T0* r406specialize_thru(T406* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/void r406accept(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r406set_eiffel_parser_stamp(T406* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406adapt_for(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406default_create_name(void);
/*RAW_CREATE_INSTRUCTION*/T0* r406collect(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406any_default_create_fs(void);
/*RAW_CREATE_INSTRUCTION*/T0* r406specialize_2_without_checks(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406twin(T406* C);
/*RAW_CREATE_INSTRUCTION*/T0* r406creation_procedure(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r406use_current(T406* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r406side_effect_free(T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r406arguments(T406* C);
/*RAW_CREATE_INSTRUCTION*/T0* r406inline_dynamic_dispatch(T406* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r406make_specialized(T406* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/void r406create_instruction_make(T406* C,T333 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/T0* r406to_instruction(T406* C);
/*RAW_CREATE_INSTRUCTION*/T0* r406current_or_twin_init(T406* C,T0* a1,T0* a2,T0* a3);
/*GENERATOR_GENERATING_TYPE*/T0* r361to_expression(T361* C);
/*GENERATOR_GENERATING_TYPE*/T0* r361simplify(T361* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r361static_simplify(T361* C);
/*GENERATOR_GENERATING_TYPE*/void r361inline_dynamic_dispatch_(T361* C,T0* a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/void r361make_generating_type(T361* C,T333 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T6 r361is_stored_in_some_local_variable(void);
/*GENERATOR_GENERATING_TYPE*/void r361accept(T361* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r361declaration_type(void);
/*GENERATOR_GENERATING_TYPE*/T0* r361collect(T361* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r361twin(T361* C);
/*GENERATOR_GENERATING_TYPE*/T0* r361written_declaration_type_mark(void);
/*GENERATOR_GENERATING_TYPE*/T6 r361use_current(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r361non_void_no_dispatch_type(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T6 r361side_effect_free(T0* a1);
/*GENERATOR_GENERATING_TYPE*/void r361make_generator(T361* C,T333 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T0* r361resolve_in(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r361to_instruction(T361* C);
/*RUN_FEATURE_1*/void r777compute_use_current(T777* C);
/*RUN_FEATURE_1*/T0* r777require_assertion(void);
/*RUN_FEATURE_1*/void r777for(T777* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_1*/void r777accept(T777* C,T0* a1);
/*RUN_FEATURE_1*/void r777set_result_type(T777* C);
/*RUN_FEATURE_1*/T333 r777start_position(T777* C);
/*RUN_FEATURE_1*/T6 r777use_current(T777* C);
/*RUN_FEATURE_1*/void r777mapping_name_in(T777* C,T0* a1);
/*RUN_FEATURE_1*/T0* r777arguments(void);
/*RUN_FEATURE_1*/void r777adapt(T777* C);
/*RUN_FEATURE_1*/T0* r777feature_stamp(T777* C);
/*RUN_FEATURE_6*/void r633compute_use_current(T633* C);
/*RUN_FEATURE_6*/void r633std_compute_use_current(T633* C);
/*RUN_FEATURE_6*/void r633for(T633* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_6*/void r633accept(T633* C,T0* a1);
/*RUN_FEATURE_6*/void r633set_result_type(T633* C);
/*RUN_FEATURE_6*/T333 r633start_position(T633* C);
/*RUN_FEATURE_6*/T6 r633use_current(T633* C);
/*RUN_FEATURE_6*/void r633mapping_name_in(T633* C,T0* a1);
/*RUN_FEATURE_6*/void r633do_adapt(T633* C);
/*RUN_FEATURE_6*/void r633adapt(T633* C);
/*RUN_FEATURE_6*/T0* r633feature_stamp(T633* C);
/*RUN_FEATURE_6*/T6 r633is_precomputable_once(T633* C);
/*RUN_FEATURE_9*/void r779compute_use_current(T779* C);
/*RUN_FEATURE_9*/void r779for(T779* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_9*/void r779accept(T779* C,T0* a1);
/*RUN_FEATURE_9*/void r779set_result_type(T779* C);
/*RUN_FEATURE_9*/T333 r779start_position(T779* C);
/*RUN_FEATURE_9*/T6 r779use_current(T779* C);
/*RUN_FEATURE_9*/void r779mapping_name_in(T779* C,T0* a1);
/*RUN_FEATURE_9*/void r779do_adapt(T779* C);
/*RUN_FEATURE_9*/void r779adapt(T779* C);
/*RUN_FEATURE_9*/T0* r779feature_stamp(T779* C);
/*RUN_FEATURE_7*/T2 r755arg_count(T755* C);
/*RUN_FEATURE_7*/void r755compute_use_current(T755* C);
/*RUN_FEATURE_7*/void r755std_compute_use_current(T755* C);
/*RUN_FEATURE_7*/void r755for(T755* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_7*/void r755accept(T755* C,T0* a1);
/*RUN_FEATURE_7*/T333 r755start_position(T755* C);
/*RUN_FEATURE_7*/T6 r755use_current(T755* C);
/*RUN_FEATURE_7*/void r755mapping_name_in(T755* C,T0* a1);
/*RUN_FEATURE_7*/void r755do_adapt(T755* C);
/*RUN_FEATURE_7*/void r755adapt(T755* C);
/*RUN_FEATURE_7*/T0* r755feature_stamp(T755* C);
/*RUN_FEATURE_3*/void r526compute_use_current(T526* C);
/*RUN_FEATURE_3*/void r526std_compute_use_current(T526* C);
/*RUN_FEATURE_3*/void r526for(T526* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_3*/T6 r526empty_body_side_effect_free_in_boost(T526* C);
/*RUN_FEATURE_3*/T6 r526is_empty_or_null_body(T526* C);
/*RUN_FEATURE_3*/void r526accept(T526* C,T0* a1);
/*RUN_FEATURE_3*/T333 r526start_position(T526* C);
/*RUN_FEATURE_3*/T0* r526memory_dispose(T526* C);
/*RUN_FEATURE_3*/T6 r526use_current(T526* C);
/*RUN_FEATURE_3*/void r526mapping_name_in(T526* C,T0* a1);
/*RUN_FEATURE_3*/void r526do_adapt(T526* C);
/*RUN_FEATURE_3*/T6 r526side_effect_free(T526* C);
/*RUN_FEATURE_3*/void r526adapt(T526* C);
/*RUN_FEATURE_3*/T0* r526feature_stamp(T526* C);
/*RUN_FEATURE_4*/void r778compute_use_current(T778* C);
/*RUN_FEATURE_4*/void r778std_compute_use_current(T778* C);
/*RUN_FEATURE_4*/void r778for(T778* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_4*/void r778accept(T778* C,T0* a1);
/*RUN_FEATURE_4*/void r778set_result_type(T778* C);
/*RUN_FEATURE_4*/T333 r778start_position(T778* C);
/*RUN_FEATURE_4*/T6 r778use_current(T778* C);
/*RUN_FEATURE_4*/void r778mapping_name_in(T778* C,T0* a1);
/*RUN_FEATURE_4*/void r778do_adapt(T778* C);
/*RUN_FEATURE_4*/void r778adapt(T778* C);
/*RUN_FEATURE_4*/T0* r778feature_stamp(T778* C);
/*RUN_FEATURE_5*/void r632compute_use_current(T632* C);
/*RUN_FEATURE_5*/void r632std_compute_use_current(T632* C);
/*RUN_FEATURE_5*/void r632for(T632* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_5*/void r632accept(T632* C,T0* a1);
/*RUN_FEATURE_5*/T333 r632start_position(T632* C);
/*RUN_FEATURE_5*/T6 r632use_current(T632* C);
/*RUN_FEATURE_5*/void r632mapping_name_in(T632* C,T0* a1);
/*RUN_FEATURE_5*/void r632do_adapt(T632* C);
/*RUN_FEATURE_5*/void r632adapt(T632* C);
/*RUN_FEATURE_5*/T0* r632feature_stamp(T632* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818make(T818* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818filtered_put_character(T818* C,T3 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818create_pipe(T818* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818put_string(T818* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r818tmp_string(void);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818put_real_format(T818* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818put_integer(T818* C,T11 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818filtered_flush(T818* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818put_abstract_string(T818* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818dispose(T818* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r818disconnect(T818* C);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r818as_output_stream(T818* C);
/*EXEC_INPUT_STREAM_POSIX*/void r820make(T820* C,T0* a1);
/*EXEC_INPUT_STREAM_POSIX*/void r820filtered_read_character(T820* C);
/*EXEC_INPUT_STREAM_POSIX*/void r820create_pipe(T820* C);
/*EXEC_INPUT_STREAM_POSIX*/void r820swap_unread_buffer(T820* C);
/*EXEC_INPUT_STREAM_POSIX*/void r820dispose(T820* C);
/*EXEC_INPUT_STREAM_POSIX*/void r820disconnect(T820* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821make(T821* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821filtered_put_character(T821* C,T3 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821create_pipe(T821* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821put_string(T821* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r821tmp_string(void);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821put_real_format(T821* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821put_integer(T821* C,T11 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821filtered_flush(T821* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821put_abstract_string(T821* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821dispose(T821* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r821disconnect(T821* C);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r821as_output_stream(T821* C);
/*EXEC_INPUT_STREAM_WIN32*/void r822make(T822* C,T0* a1);
/*EXEC_INPUT_STREAM_WIN32*/void r822filtered_read_character(T822* C);
/*EXEC_INPUT_STREAM_WIN32*/void r822create_pipe(T822* C);
/*EXEC_INPUT_STREAM_WIN32*/void r822swap_unread_buffer(T822* C);
/*EXEC_INPUT_STREAM_WIN32*/void r822dispose(T822* C);
/*EXEC_INPUT_STREAM_WIN32*/void r822disconnect(T822* C);
/*FAKE_TUPLE*/T0* r665to_expression(T665* C);
/*FAKE_TUPLE*/void r665make(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665specialize_2(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665static_simplify(T665* C);
/*FAKE_TUPLE*/T0* r665specialize_in(T665* C,T0* a1);
/*FAKE_TUPLE*/void r665inline_dynamic_dispatch_(T665* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r665expression(T665* C,T2 a1);
/*FAKE_TUPLE*/void r665safety_check(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665implicit_cast(T665* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r665specialize_thru(T665* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T6 r665is_stored_in_some_local_variable(void);
/*FAKE_TUPLE*/void r665accept(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665adapt_for(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665declaration_type(T665* C);
/*FAKE_TUPLE*/T0* r665collect(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T0* r665twin(T665* C);
/*FAKE_TUPLE*/T0* r665written_declaration_type_mark(void);
/*FAKE_TUPLE*/T6 r665use_current(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665non_void_no_dispatch_type(T0* a1);
/*FAKE_TUPLE*/T6 r665side_effect_free(T0* a1);
/*FAKE_TUPLE*/T2 r665count(T665* C);
/*FAKE_TUPLE*/T0* r665resolve_in(T665* C,T0* a1);
/*FAKE_TUPLE*/T0* r665to_instruction(T665* C);
/*INTEGER_64_NUMBER*/void r701make(T701* C,T11 a1);
/*INTEGER_64_NUMBER*/T11 r701to_integer_64(T701* C);
/*INTEGER_64_NUMBER*/T0* r701multiply_with_big_integer_number(T701* C,T0* a1);
extern T0*oBC300zero;
extern T0*oBC300mutable_register1;
extern int fBC300mutable_register1;
/*INTEGER_64_NUMBER*/T0* r701mutable_register1(void);
extern T0*oBC300mutable_register2;
extern int fBC300mutable_register2;
/*INTEGER_64_NUMBER*/T0* r701mutable_register2(void);
extern T0*oBC300mutable_register3;
extern int fBC300mutable_register3;
/*INTEGER_64_NUMBER*/T0* r701mutable_register3(void);
/*INTEGER_64_NUMBER*/T0* r701_ix_42(T701* C,T0* a1);
/*INTEGER_64_NUMBER*/T0* r701_ix_43(T701* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r701is_integer_32(T701* C);
/*INTEGER_64_NUMBER*/T0* r701_px_45(T701* C);
/*INTEGER_64_NUMBER*/T0* r701_ix_45(T701* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r701is_integer_16(T701* C);
/*INTEGER_64_NUMBER*/T0* r701add_with_big_integer_number(T701* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r701is_integer_8(T701* C);
/*INTEGER_64_NUMBER*/T0* r701_ix_6442(T701* C,T11 a1);
/*INTEGER_64_NUMBER*/T0* r701_ix_6443(T701* C,T11 a1);
/*INTEGER_64_NUMBER*/T10 r701to_integer_16(T701* C);
/*INTEGER_64_NUMBER*/T0* r701to_string(T701* C);
/*INTEGER_64_NUMBER*/T1 r701to_integer_8(T701* C);
/*INTEGER_64_NUMBER*/T2 r701to_integer_32(T701* C);
/*INTEGER_64_NUMBER*/void r701append_in(T701* C,T0* a1);
extern T0*oBC300string_buffer;
extern int fBC300string_buffer;
/*INTEGER_64_NUMBER*/T0* r701string_buffer(void);
/*C_PLUGIN*/T6 r852is_equal(T852* C,T0* a1);
/*C_PLUGIN*/void r852make(T852* C,T333 a1,T0* a2,T0* a3);
/*C_PLUGIN*/void r852add_c_source(T852* C,T0* a1);
/*C_PLUGIN*/T0* r852echo(void);
/*C_PLUGIN*/void r852add_c_header(T852* C,T0* a1);
extern T0*oBC528tfr;
/*C_PLUGIN*/T0* r852cpp(void);
/*C_PLUGIN*/void r852read_auto_init(T852* C,T0* a1);
/*C_PLUGIN*/T0* r852system_tools(void);
/*C_PLUGIN*/T0* r852absolute_path(T852* C,T0* a1);
/*C_PLUGIN*/void r852try_auto_init(T852* C);
/*C_PLUGIN*/T0* r852parser_buffer(void);
/*C_PLUGIN*/void r852include(T852* C,T333 a1);
/*C_PLUGIN*/T0* r852read(T0* a1);
/*INTERNAL_C_LOCAL_LIST*/T0* r626lock_local(T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL_LIST*/T0* r626echo(void);
/*INTERNAL_C_LOCAL_LIST*/void r626declaration_dump(T626* C,T0* a1);
extern T0*oBC626internal_c_local_pool;
extern int fBC626internal_c_local_pool;
/*INTERNAL_C_LOCAL_LIST*/T0* r626internal_c_local_pool(void);
/*INTERNAL_C_LOCAL_LIST*/void r626echo_information(T626* C);
/*INTERNAL_C_LOCAL*/void r552make(T552* C,T2 a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/T0* r552lock_local(T552* C,T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/void r552unlock(T552* C);
extern T0*oBC552counter;
/*INTERNAL_C_LOCAL*/T6 r552declaration_dump(T552* C,T0* a1);
/*INTERNAL_C_LOCAL*/T0* r552cpp(void);
/*INTERNAL_C_LOCAL*/T6 r552can_be_recycle_with_type(T552* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r552c_type_in(T552* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r552append_in(T552* C,T0* a1);
/*CODE_CONTEXT_DIRECT_CALL*/void r546reserve(T546* C);
/*CODE_CONTEXT_CREATE_INSTRUCTION*/void r547reserve(T547* C);
/*CODE_CONTEXT_CREATE_EXPRESSION*/void r548reserve(T548* C);
/*CODE_CONTEXT_INSIDE_TWIN*/void r549reserve(T549* C);
/*CODE_CONTEXT_PRECURSOR*/void r550reserve(T550* C);
/*CODE_CONTEXT_INSIDE_SOME_WRAPPER*/void r551reserve(T551* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r790make(T790* C,T2 a1);
/*C_SPLITTER_LEGACY_ITERATOR*/void r790next(T790* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r790start(T790* C);
/*C_SPLITTER_LEGACY_ITERATOR*/T0* r790item(T790* C);
/*TAGGED_FLAG*/void r788as_true(T788* C);
/*MUTABLE_BIG_INTEGER*/void r706subtract_magnitude_raw_reverse(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T11 r706to_integer_64(T706* C);
/*MUTABLE_BIG_INTEGER*/T6 r706is_one_negative(T706* C);
/*MUTABLE_BIG_INTEGER*/T2 r706divide_one_word(T706* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r706add(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r706copy(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r706is_integer_64(T706* C);
extern T0*oBC706char_buffer;
extern int fBC706char_buffer;
/*MUTABLE_BIG_INTEGER*/T0* r706char_buffer(void);
/*MUTABLE_BIG_INTEGER*/void r706subtract_magnitude_raw_truncated(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r706add_integer_64(T706* C,T11 a1);
/*MUTABLE_BIG_INTEGER*/void r706negate(T706* C);
/*MUTABLE_BIG_INTEGER*/T2 r706append_in_char_buffer(T706* C);
/*MUTABLE_BIG_INTEGER*/void r706subtract_magnitude_raw(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r706is_one(T706* C);
/*MUTABLE_BIG_INTEGER*/void r706multiply_to(T706* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/void r706subtract_magnitude_raw_reverse_truncated(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T2 r706capacity_from_upper_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r706multiply_to_like_human(T706* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/T0* r706to_integer_general_number(T706* C);
extern T0*oBC706register1;
extern int fBC706register1;
/*MUTABLE_BIG_INTEGER*/T0* r706register1(void);
/*MUTABLE_BIG_INTEGER*/void r706set_with_zero(T706* C);
/*MUTABLE_BIG_INTEGER*/void r706from_integer(T706* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r706subtract_magnitude(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r706from_native_array(T706* C,T956 a1,T2 a2,T6 a3);
/*MUTABLE_BIG_INTEGER*/T2 r706capacity_from_lower_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r706add_magnitude(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r706set_all(T706* C,T956 a1,T2 a2,T2 a3,T2 a4,T6 a5);
/*MUTABLE_BIG_INTEGER*/void r706append_in(T706* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r706from_integer_64(T706* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T11 r703to_integer_64(T703* C);
/*BIG_INTEGER_NUMBER*/T0* r703multiply_with_big_integer_number(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r703mutable_register1(void);
/*BIG_INTEGER_NUMBER*/T0* r703mutable_register2(void);
/*BIG_INTEGER_NUMBER*/T0* r703mutable_register3(void);
/*BIG_INTEGER_NUMBER*/T0* r703_ix_42(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r703_ix_43(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/void r703put_into_mutable_big_integer(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r703_ix_45(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r703_px_45(T703* C);
/*BIG_INTEGER_NUMBER*/T0* r703add_with_big_integer_number(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r703_ix_6442(T703* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T0* r703_ix_6443(T703* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T10 r703to_integer_16(T703* C);
/*BIG_INTEGER_NUMBER*/T0* r703to_string(T703* C);
/*BIG_INTEGER_NUMBER*/T1 r703to_integer_8(T703* C);
/*BIG_INTEGER_NUMBER*/void r703from_native_array(T703* C,T956 a1,T2 a2,T6 a3);
/*BIG_INTEGER_NUMBER*/T2 r703to_integer_32(T703* C);
/*BIG_INTEGER_NUMBER*/void r703append_in(T703* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r703string_buffer(void);
/*TAGGED_INTERNAL_C_LOCAL*/void r776set_item(T776* C,T0* a1);
/*TAGGED_INTEGER*/void r774set_item(T774* C,T2 a1);
void agent_launcher_ADDRESS_OF(/*agent*/T0*a,T0* a1);
void agent_launcher_RUN_FEATURE(/*agent*/T0*a,T0* a1);
void agent_launcher_NATIVE_PLUG_IN(/*agent*/T0*a,T0* a1);
void agent_launcher_CECIL_FILE_STRING(/*agent*/T0*a,T0* a1,T0* a2);
void agent_launcher_TYPE_TYPE(/*agent*/T0*a,T0* a1,T0* a2);
void agent_launcher_NON_VOID_NO_DISPATCH(/*agent*/T0*a,T0* a1);
void agent_launcher_ASSERTION(/*agent*/T0*a,T0* a1);
void agent_launcher_RUN_FEATURE_2(/*agent*/T0*a,T0* a1);
void agent_launcher_CECIL_ENTRY(/*agent*/T0*a,T0* a1);
void agent_launcher_LIVE_TYPE_EXTRA_COLLECTOR(/*agent*/T0*a,T0* a1);
void agent_launcher_LIVE_TYPE(/*agent*/T0*a,T0* a1);
void agent_launcher_MANIFEST_GENERIC(/*agent*/T0*a,T0* a1);
T6 BOOLEAN_agent_launcher_STRING(/*agent*/T0*a,T0* a1);
void agent_launcher_CLASS_TEXT(/*agent*/T0*a,T0* a1);
void agent_launcher_FEATURE_STAMP(/*agent*/T0*a,T0* a1);
union _se_agent{T0 s0;se_agent0 u0;
se_agenT101f101l3967c31 uagenT101f101l3967c31;
se_agenT101f101l3956c28 uagenT101f101l3956c28;
se_agenT101f101l3727c47 uagenT101f101l3727c47;
se_agenT101f101l608c22 uagenT101f101l608c22;
se_agenT101f101l664c22 uagenT101f101l664c22;
se_agenT101f101l3746c55 uagenT101f101l3746c55;
se_agenT101f101l3539c39 uagenT101f101l3539c39;
se_agenT101f101l3456c38 uagenT101f101l3456c38;
se_agenT96f96l345c38 uagenT96f96l345c38;
se_agenT558f559l25c44 uagenT558f559l25c44;
se_agenT588f559l25c44 uagenT588f559l25c44;
se_agenT589f589l22c50 uagenT589f589l22c50;
se_agenT589f559l25c44 uagenT589f559l25c44;
se_agenT590f559l25c44 uagenT590f559l25c44;
se_agenT591f591l77c54 uagenT591f591l77c54;
se_agenT591f591l106c53 uagenT591f591l106c53;
se_agenT591f591l117c20 uagenT591f591l117c20;
se_agenT608f608l80c33 uagenT608f608l80c33;
se_agenT608f608l1073c35 uagenT608f608l1073c35;
se_agenT608f608l61c33 uagenT608f608l61c33;
se_agenT608f608l1048c37 uagenT608f608l1048c37;
se_agenT608f608l1056c32 uagenT608f608l1056c32;
se_agenT608f608l1003c35 uagenT608f608l1003c35;
se_agenT363f363l154c36 uagenT363f363l154c36;
se_agenT363f363l472c44 uagenT363f363l472c44;
se_agenT93f93l210c20 uagenT93f93l210c20;
se_agenT93f93l200c20 uagenT93f93l200c20;
};
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_AGENTS 1
#define EIF_AGENT se_agent*

se_agent* new_agent(Tid id);

#ifdef SE_GC_LIB

  typedef struct B_agent gc_agent;

  struct B_agent {
    se_agent object;
    union {
      void *flag;
      gc_agent *next;
    } header;
  };

  extern gc_agent *store_agent;
  extern gc_agent *gc_free_agent;
  extern int       store_left_agent;
  extern fsoc     *store_chunk_agent;
  extern fsoc      H_agent;
  extern int       gc_info_nb_agent;

  void gc_align_mark_agent(fsoc *c, gc_agent* a);
  void gc_sweep_agent(fsoc *c);

#endif
extern T0*ms591_56760755Abc591A;
extern T0*ms591_274Abc591A;
extern T0*ms614_2017590Abc614A;
extern T0*ms591_1111954737Abc591A;
extern T0*ms267_17696Abc267A;
extern T0*ms30_114085235Abc30A;
extern T0*ms101_13801Abc101A;
extern T0*ms608_685204250Abc608A;
extern T0*ms464_16902Abc464A;
extern T0*ms464_16902Abc464B;
extern T0*ms30_396356Abc30A;
extern T0*ms30_3645Abc360A;
extern T0*ms101_391886489Abc101A;
extern T0*ms606_11300605Abc606D;
extern T0*ms606_11300605Abc606C;
extern T0*ms464_9808515Abc464A;
extern T0*ms606_11300605Abc606B;
extern T0*ms606_11300605Abc606A;
extern T0*ms469_305Abc784D;
extern T0*ms606_1367878466Abc606A;
extern T0*ms469_305Abc784C;
extern T0*ms469_305Abc784B;
extern T0*ms469_305Abc784A;
extern T0*ms29_240810604Abc29A;
extern T0*ms608_86950Abc608A;
extern T0*ms29_1235Abc29A;
extern T0*ms30_1839765037Abc30A;
extern T0*ms84_251Abc603A;
extern T0*ms591_422487Abc591A;
extern T0*ms614_7025Abc614A;
extern T0*ms101_1413407004Abc101A;
extern T0*ms614_7025Abc614B;
extern T0*ms90_35386613Abc90A;
extern T0*ms113_141444Abc113A;
extern T0*ms97_3291Abc97A;
extern T0*ms29_79341Abc608A;
extern T0*ms101_215791Abc784A;
extern T0*ms101_1586448448Abc101A;
extern T0*ms101_253935823Abc101A;
extern T0*ms608_847125Abc608A;
extern T0*ms614_86195952Abc614A;
extern T0*ms101_136593176Abc101A;
extern T0*ms29_1245671098Abc29A;
extern T0*ms614_907447617Abc614A;
extern T0*ms587_86545Abc587A;
extern T0*ms30_84443Abc30A;
extern T0*ms472_7232Abc637A;
extern T0*ms108_300594Abc678A;
extern T0*ms101_3374Abc591A;
extern T0*ms30_10193105Abc30A;
extern T0*ms608_1727Abc608A;
extern T0*ms101_246893097Abc101A;
extern T0*ms101_6330Abc101A;
extern T0*ms101_993675817Abc101A;
extern T0*ms323_1262756502Abc323A;
extern T0*ms608_744Abc608A;
extern T0*ms101_934202231Abc101A;
extern T0*ms101_2630Abc101B;
extern T0*ms101_2630Abc101A;
extern T0*ms101_93Abc101A;
extern T0*ms613_1119207694Abc613A;
extern T0*ms784_77282146Abc784A;
extern T0*ms90_1658160521Abc90A;
extern T0*ms30_451011Abc30A;
extern T0*ms101_395316170Abc101A;
extern T0*ms613_1783951564Abc613A;
extern T0*ms89_18150Abc89A;
extern T0*ms101_3374Abc614B;
extern T0*ms101_3374Abc614A;
extern T0*ms109_489233515Abc109A;
extern T0*ms101_1839365502Abc101A;
extern T0*ms101_3374Abc608A;
extern T0*ms29_406284Abc29A;
extern T0*ms89_18150Abc97A;
extern T0*ms608_283285900Abc608A;
extern T0*ms728_888288799Abc728A;
extern T0*ms30_434665Abc30A;
extern T0*ms101_3374Abc605A;
extern T0*ms424_178490Abc424A;
extern T0*ms608_137954235Abc608A;
extern T0*ms606_1639500234Abc606A;
extern T0*ms90_274238642Abc90A;
extern T0*ms613_1215177661Abc613A;
extern T0*ms784_33836Abc784A;
extern T0*ms614_114321512Abc614A;
extern T0*ms97_98806116Abc97A;
extern T0*ms613_185146Abc613A;
extern T0*ms544_1826Abc544A;
extern T0*ms97_333Abc97A;
extern T0*ms97_333Abc97B;
extern T0*ms29_36200588Abc29A;
extern T0*ms101_635Abc784A;
extern T0*ms97_333Abc97C;
extern T0*ms29_15831Abc29A;
extern T0*ms101_635Abc784B;
extern T0*ms26_375350487Abc26A;
extern T0*ms30_49076540Abc30A;
extern T0*ms30_1957581Abc30A;
extern T0*ms101_400297641Abc101A;
extern T0*ms101_400297641Abc101B;
extern T0*ms101_400297641Abc101C;
extern T0*ms101_400297641Abc101D;
extern T0*ms608_1445Abc608A;
extern T0*ms101_713312393Abc101A;
extern T0*ms615_84085Abc615A;
extern T0*ms590_1112927266Abc590B;
extern T0*ms615_84085Abc615B;
extern T0*ms590_1112927266Abc590A;
extern T0*ms101_357794960Abc101A;
extern T0*ms101_1368099455Abc101A;
extern T0*ms101_471Abc101A;
extern T0*ms101_471Abc101B;
extern T0*ms614_1821634438Abc614A;
extern T0*ms608_119389596Abc608A;
extern T0*ms469_305Abc591S;
extern T0*ms469_305Abc591R;
extern T0*ms469_305Abc591Q;
extern T0*ms463_56907446Abc463A;
extern T0*ms614_1514442508Abc614A;
extern T0*ms469_305Abc591P;
extern T0*ms591_7475Abc591A;
extern T0*ms469_305Abc591O;
extern T0*ms591_7475Abc591B;
extern T0*ms469_305Abc591N;
extern T0*ms469_305Abc591M;
extern T0*ms852_2072196164Abc852A;
extern T0*ms469_305Abc591L;
extern T0*ms469_305Abc591K;
extern T0*ms590_775396Abc590A;
extern T0*ms469_305Abc591J;
extern T0*ms469_305Abc591I;
extern T0*ms469_305Abc591H;
extern T0*ms469_305Abc591G;
extern T0*ms469_305Abc591F;
extern T0*ms784_692075493Abc784A;
extern T0*ms469_305Abc591E;
extern T0*ms469_305Abc591D;
extern T0*ms469_305Abc591C;
extern T0*ms469_305Abc591B;
extern T0*ms469_305Abc591A;
extern T0*ms101_1361175839Abc101A;
extern T0*ms681_1601130656Abc681A;
extern T0*ms105_2035830473Abc105A;
extern T0*ms614_524787520Abc614A;
extern T0*ms97_89862Abc97A;
extern T0*ms101_3040Abc101A;
extern T0*ms97_89862Abc97B;
extern T0*ms613_419443Abc613A;
extern T0*ms29_88795Abc29A;
extern T0*ms89_49203356Abc425A;
extern T0*ms728_1927020241Abc728A;
extern T0*ms784_5161461Abc784A;
extern T0*ms101_1500500537Abc101A;
extern T0*ms784_884381655Abc784A;
extern T0*ms267_17696Abc101A;
extern T0*ms591_134876562Abc591A;
extern T0*ms591_988243818Abc591B;
extern T0*ms591_988243818Abc591A;
extern T0*ms469_305Abc618A;
extern T0*ms678_928596125Abc678A;
extern T0*ms469_305Abc617A;
extern T0*ms469_305Abc608S;
extern T0*ms469_305Abc608R;
extern T0*ms29_2126626Abc29A;
extern T0*ms469_305Abc608Q;
extern T0*ms469_305Abc608P;
extern T0*ms469_305Abc616A;
extern T0*ms469_305Abc615F;
extern T0*ms469_305Abc615E;
extern T0*ms469_305Abc608O;
extern T0*ms469_305Abc615D;
extern T0*ms469_305Abc608N;
extern T0*ms90_1708886163Abc90A;
extern T0*ms469_305Abc615C;
extern T0*ms469_305Abc608M;
extern T0*ms469_305Abc615B;
extern T0*ms469_305Abc608L;
extern T0*ms469_305Abc615A;
extern T0*ms469_305Abc608K;
extern T0*ms469_305Abc608J;
extern T0*ms469_305Abc614D;
extern T0*ms469_305Abc608I;
extern T0*ms469_305Abc608H;
extern T0*ms469_305Abc614C;
extern T0*ms469_305Abc614B;
extern T0*ms469_305Abc608G;
extern T0*ms469_305Abc614A;
extern T0*ms469_305Abc608F;
extern T0*ms606_1240Abc606A;
extern T0*ms615_531809155Abc615A;
extern T0*ms469_305Abc608E;
extern T0*ms469_305Abc558E;
extern T0*ms614_4881995Abc614A;
extern T0*ms469_305Abc608D;
extern T0*ms469_305Abc558D;
extern T0*ms469_305Abc608C;
extern T0*ms469_305Abc558C;
extern T0*ms101_1099040180Abc101A;
extern T0*ms469_305Abc608B;
extern T0*ms469_305Abc558B;
extern T0*ms469_305Abc613A;
extern T0*ms469_305Abc608A;
extern T0*ms469_305Abc558A;
extern T0*ms89_67Abc89A;
extern T0*ms606_1240Abc614A;
extern T0*ms101_1145546877Abc101A;
extern T0*ms29_2187483Abc29A;
extern T0*ms430_1478Abc604A;
extern T0*ms469_305Abc603A;
extern T0*ms101_215791Abc613A;
extern T0*ms101_215791Abc608A;
extern T0*ms101_1565Abc591C;
extern T0*ms614_9905Abc614A;
extern T0*ms101_1565Abc591B;
extern T0*ms101_1565Abc591A;
extern T0*ms101_1142598643Abc101A;
extern T0*ms469_305Abc552A;
extern T0*ms614_704592146Abc614A;
extern T0*ms784_212314278Abc784A;
extern T0*ms101_471707221Abc101A;
extern T0*ms89_1680421289Abc89A;
extern T0*ms101_32080Abc590A;
extern T0*ms90_595894613Abc90A;
extern T0*ms30_87466Abc454A;
extern T0*ms681_78239462Abc681A;
extern T0*ms591_345908476Abc591A;
extern T0*ms30_451011Abc641A;
extern T0*ms90_1604340919Abc90A;
extern T0*ms590_5580Abc590A;
extern T0*ms101_1713607783Abc101A;
extern T0*ms784_484169497Abc784A;
extern T0*ms107_51895507Abc107A;
extern T0*ms280_252Abc334A;
extern T0*ms784_1800342110Abc784A;
extern T0*ms101_712350300Abc101A;
extern T0*ms30_16001Abc393A;
extern T0*ms615_2187545Abc615A;
extern T0*ms101_1565Abc613B;
extern T0*ms101_1565Abc613A;
extern T0*ms469_305Abc469A;
extern T0*ms101_2395Abc101A;
extern T0*ms101_1281004126Abc101A;
extern T0*ms608_206419907Abc608A;
extern T0*ms29_1604515261Abc29A;
extern T0*ms29_9647090Abc29A;
extern T0*ms101_1565Abc606B;
extern T0*ms30_400652Abc393A;
extern T0*ms614_520377520Abc614C;
extern T0*ms101_1565Abc606A;
extern T0*ms101_249Abc101A;
extern T0*ms591_815493762Abc591A;
extern T0*ms614_520377520Abc614B;
extern T0*ms614_520377520Abc614A;
extern T0*ms29_2246041Abc608A;
extern T0*ms101_251Abc605A;
extern T0*ms29_42Abc29A;
extern T0*ms101_251Abc605B;
extern T0*ms613_1085305030Abc613A;
extern T0*ms608_1008067448Abc608A;
extern T0*ms101_2417Abc619A;
extern T0*ms29_282Abc29A;
extern T0*ms101_1565Abc603A;
extern T0*ms97_11253Abc97A;
extern T0*ms31_77608Abc31A;
extern T0*ms29_849712179Abc29A;
extern T0*ms608_1008067448Abc615A;
extern T0*ms615_2001063662Abc615A;
extern T0*ms101_251Abc613A;
extern T0*ms29_1326673961Abc29A;
extern T0*ms101_251Abc613B;
extern T0*ms590_1191155066Abc590A;
extern T0*ms101_375072661Abc101A;
extern T0*ms101_251Abc613C;
extern T0*ms590_1191155066Abc590B;
extern T0*ms614_520373770Abc614C;
extern T0*ms614_520373770Abc614B;
extern T0*ms280_252Abc404A;
extern T0*ms29_1176378494Abc29A;
extern T0*ms614_520373770Abc614A;
extern T0*ms101_251Abc614A;
extern T0*ms101_251Abc614B;
extern T0*ms101_251Abc614C;
extern T0*ms614_32435Abc614A;
extern T0*ms614_32435Abc614B;
extern T0*ms29_276937706Abc29A;
extern T0*ms29_207673214Abc29A;
extern T0*ms30_1532343833Abc30A;
extern T0*ms29_1740332382Abc29A;
extern T0*ms613_30034Abc613A;
extern T0*ms614_17743770Abc614A;
extern T0*ms614_17743770Abc614B;
extern T0*ms29_337331Abc359A;
extern T0*ms784_1815688614Abc784A;
extern T0*ms30_16001Abc358B;
extern T0*ms30_16001Abc358A;
extern T0*ms101_16487Abc101A;
extern T0*ms605_258Abc615A;
extern T0*ms101_16487Abc101B;
extern T0*ms30_2063276Abc30A;
extern T0*ms559_166654Abc559A;
extern T0*ms101_1404148845Abc101C;
extern T0*ms101_1404148845Abc101B;
extern T0*ms101_1404148845Abc101A;
extern T0*ms101_2072467813Abc613A;
extern T0*ms559_1502207936Abc559A;
extern T0*ms101_1102979933Abc101A;
extern T0*ms424_620Abc424A;
extern T0*ms605_258Abc605B;
extern T0*ms605_258Abc605A;
extern T0*ms101_2072467813Abc606A;
extern T0*ms101_251Abc591A;
extern T0*ms101_651Abc101A;
extern T0*ms101_651Abc101B;
extern T0*ms614_10089690Abc614A;
extern T0*ms591_882065083Abc591B;
extern T0*ms591_882065083Abc591A;
extern T0*ms101_2072467813Abc603A;
extern T0*ms101_1581747096Abc101A;
extern T0*ms587_7317Abc587A;
extern T0*ms30_2032026Abc30A;
extern T0*ms430_1478Abc430A;
extern T0*ms91_1385667261Abc91A;
extern T0*ms29_869539012Abc29A;
extern T0*ms280_252Abc437A;
extern T0*ms30_1532344910Abc30A;
extern T0*ms591_21632225Abc591A;
extern T0*ms101_41Abc101A;
extern T0*ms26_104Abc26A;
extern T0*ms280_252Abc438A;
extern T0*ms728_1139569132Abc728A;
extern T0*ms101_434116584Abc101A;
extern T0*ms554_671Abc591A;
extern T0*ms604_48Abc604A;
extern T0*ms614_1023363018Abc614A;
extern T0*ms604_48Abc604B;
extern T0*ms604_48Abc604C;
extern T0*ms31_10714862Abc31A;
extern T0*ms784_176986Abc784A;
extern T0*ms101_163909964Abc101A;
extern T0*ms101_471553120Abc101B;
extern T0*ms101_471553120Abc101A;
extern T0*ms89_494839979Abc89A;
extern T0*ms677_2565Abc677A;
extern T0*ms89_611Abc30A;
extern T0*ms101_1164208Abc101A;
extern T0*ms29_84969Abc29A;
extern T0*ms30_10315778Abc30A;
extern T0*ms608_1650Abc608A;
extern T0*ms608_1650Abc608B;
extern T0*ms608_1650Abc608C;
extern T0*ms608_1650Abc608D;
extern T0*ms280_252Abc511A;
extern T0*ms615_32400Abc615A;
extern T0*ms608_1650Abc608E;
extern T0*ms614_59375621Abc614A;
extern T0*ms101_514187710Abc101A;
extern T0*ms30_251916328Abc30A;
extern T0*ms608_1650Abc615A;
extern T0*ms614_185515Abc614A;
extern T0*ms768_1182938696Abc768A;
extern T0*ms591_327Abc591A;
extern T0*ms101_1330Abc785A;
extern T0*ms679_1085938891Abc679A;
extern T0*ms280_252Abc518A;
extern T0*ms101_490486762Abc101A;
extern T0*ms280_252Abc473A;
extern T0*ms90_1538234998Abc90A;
extern T0*ms559_100561530Abc559A;
extern T0*ms29_1622700141Abc29A;
extern T0*ms280_252Abc469A;
extern T0*ms280_252Abc469B;
extern T0*ms784_32605Abc784A;
extern T0*ms784_1990989Abc784A;
extern T0*ms554_671Abc554A;
extern T0*ms97_179868158Abc97A;
extern T0*ms101_10940631Abc101A;
extern T0*ms101_960414291Abc101A;
extern T0*ms101_756717624Abc101A;
extern T0*ms29_747962924Abc29A;
extern T0*ms89_4492176Abc591A;
extern T0*ms552_7557Abc552A;
extern T0*ms101_1656195746Abc101A;
extern T0*ms784_1314337673Abc784A;
extern T0*ms97_1615398571Abc97A;
extern T0*ms280_252Abc486A;
extern T0*ms29_756809447Abc29A;
extern T0*ms89_12184Abc89A;
extern T0*ms89_12184Abc89B;
extern T0*ms29_361Abc608A;
extern T0*ms29_361Abc608B;
extern T0*ms113_1293738877Abc113A;
extern T0*ms97_25704393Abc97A;
extern T0*ms345_1440516445Abc345A;
extern T0*ms30_1072344038Abc30A;
extern T0*ms101_267478119Abc101A;
extern T0*ms267_957054969Abc267A;
extern T0*ms97_18144Abc97A;
extern T0*ms30_1072344038Abc30B;
extern T0*ms90_372047073Abc90A;
extern T0*ms101_545118879Abc101A;
extern T0*ms267_139303084Abc267A;
extern T0*ms97_340Abc97A;
extern T0*ms101_192841706Abc101A;
extern T0*ms89_4492176Abc620A;
extern T0*ms30_78002Abc30A;
extern T0*ms101_1765Abc101A;
extern T0*ms614_2030510390Abc614A;
extern T0*ms90_1242149539Abc90A;
extern T0*ms101_379Abc101A;
extern T0*ms97_3291Abc620A;
extern T0*ms101_379Abc101B;
extern T0*ms97_3291Abc620B;
extern T0*ms31_17498Abc101A;
extern T0*ms30_436911Abc30A;
extern T0*ms97_39204698Abc97A;
extern T0*ms97_3291Abc622A;
extern T0*ms97_3291Abc622B;
extern T0*ms772_789213750Abc772A;
extern T0*ms30_2593373Abc30A;
extern T0*ms97_3291Abc622C;
extern T0*ms78_3520Abc78A;
extern T0*ms29_1947246Abc29A;
extern T0*ms29_1947251Abc29A;
extern T0*ms97_57487Abc97A;
extern T0*ms97_3291Abc619A;
extern T0*ms97_3291Abc619B;
extern T0*ms30_402346Abc653A;
extern T0*ms101_1855175789Abc101A;
extern T0*ms615_1291Abc615A;
extern T0*ms552_1399364920Abc552A;
extern T0*ms97_1588150185Abc97A;
extern T0*ms615_1291Abc615B;
extern T0*ms29_80854Abc29A;
extern T0*ms280_252Abc618A;
extern T0*ms280_252Abc618B;
extern T0*ms29_548214405Abc29A;
extern T0*ms97_17794Abc97A;
extern T0*ms784_1665297219Abc784A;
extern T0*ms608_2089246593Abc608A;
extern T0*ms97_1721407046Abc97A;
extern T0*ms614_1628970485Abc614A;
extern T0*ms784_349661420Abc784A;
extern T0*ms89_401981819Abc89B;
extern T0*ms89_401981819Abc89A;
extern T0*ms30_84443Abc387A;
extern T0*ms101_284Bbc101A;
extern T0*ms101_284Bbc101B;
extern T0*ms114_3100Abc114A;
extern T0*ms29_1604522960Abc29A;
extern T0*ms101_77412Abc101A;
extern T0*ms101_9130Abc101A;
extern T0*ms101_77412Abc101B;
extern T0*ms101_77412Abc101C;
extern T0*ms101_1924772383Abc101A;
extern T0*ms613_172080Abc613A;
extern T0*ms101_3374Abc101B;
extern T0*ms101_3374Abc101A;
extern T0*ms608_47187Abc608A;
extern T0*ms590_1199805276Abc590A;
extern T0*ms605_1476205446Abc605A;
extern T0*ms591_1637927398Abc591B;
extern T0*ms591_1637927398Abc591A;
extern T0*ms591_1923813010Abc591A;
extern T0*ms614_2571Abc614A;
extern T0*ms101_1295Abc615B;
extern T0*ms101_1295Abc615A;
extern T0*ms101_1790869799Abc101A;
extern T0*ms29_15751Abc29A;
extern T0*ms591_1880914324Abc591A;
extern T0*ms613_497096041Abc613A;
extern T0*ms608_602573626Abc608A;
extern T0*ms606_161951Abc606A;
extern T0*ms101_1330Abc591D;
extern T0*ms101_1330Abc591C;
extern T0*ms101_1330Abc591B;
extern T0*ms613_10322525Abc613A;
extern T0*ms101_1330Abc591A;
extern T0*ms615_1416678934Abc615A;
extern T0*ms101_1295Abc605A;
extern T0*ms613_2006740748Abc613A;
extern T0*ms30_407540Abc274A;
extern T0*ms270_1281353746Abc270A;
extern T0*ms108_300594Abc113A;
extern T0*ms614_10089540Abc614A;
extern T0*ms617_160937Abc617A;
extern T0*ms101_471Abc614D;
extern T0*ms101_1063704391Abc101A;
extern T0*ms101_471Abc614E;
extern T0*ms617_705408837Abc617A;
extern T0*ms30_396356Abc399A;
extern T0*ms30_78591Abc267A;
extern T0*ms101_1629400044Abc101A;
extern T0*ms614_6965Abc614A;
extern T0*ms614_6965Abc614B;
extern T0*ms614_6965Abc614C;
extern T0*ms30_306165094Abc30A;
extern T0*ms29_169371474Abc29A;
extern T0*ms101_1330Abc615F;
extern T0*ms101_1330Abc616A;
extern T0*ms101_1330Abc615E;
extern T0*ms29_386854Abc29A;
extern T0*ms101_1330Abc615D;
extern T0*ms101_1330Abc615C;
extern T0*ms101_1330Abc615B;
extern T0*ms101_1607940692Abc101A;
extern T0*ms101_1330Abc615A;
extern T0*ms29_744845610Abc29A;
extern T0*ms101_1330Abc614C;
extern T0*ms101_1330Abc614B;
extern T0*ms784_129037214Abc784A;
extern T0*ms101_1330Abc614A;
extern T0*ms89_463134792Abc89A;
extern T0*ms101_1330Abc608E;
extern T0*ms101_1330Abc608D;
extern T0*ms101_1330Abc608C;
extern T0*ms101_1330Abc613C;
extern T0*ms97_466551816Abc97A;
extern T0*ms101_1330Abc613B;
extern T0*ms101_1330Abc608B;
extern T0*ms101_1330Abc608A;
extern T0*ms101_1330Abc613A;
extern T0*ms30_396356Abc509A;
extern T0*ms101_400297641Abc591A;
extern T0*ms101_400297641Abc591B;
extern T0*ms464_348Abc464A;
extern T0*ms608_1898591066Abc608A;
extern T0*ms784_1748680500Abc784A;
extern T0*ms613_41125176Abc613A;
extern T0*ms608_3175Abc101A;
extern T0*ms608_3175Abc101B;
extern T0*ms97_1102814319Abc97A;
extern T0*ms101_1330Abc603A;
extern T0*ms101_471Abc591A;
extern T0*ms366_2126200255Abc366A;
extern T0*ms96_1459577427Abc96A;
extern T0*ms469_305Abc101U;
extern T0*ms469_305Abc101T;
extern T0*ms469_305Abc101S;
extern T0*ms469_305Abc101R;
extern T0*ms469_305Abc101Q;
extern T0*ms97_146157Abc97A;
extern T0*ms469_305Abc101P;
extern T0*ms26_8771Abc26A;
extern T0*ms469_305Abc101O;
extern T0*ms469_305Abc101N;
extern T0*ms469_305Abc101M;
extern T0*ms469_305Abc101L;
extern T0*ms591_2072064738Abc591A;
extern T0*ms469_305Abc101K;
extern T0*ms680_8777401Abc680A;
extern T0*ms469_305Abc101J;
extern T0*ms469_305Abc101I;
extern T0*ms469_305Abc101H;
extern T0*ms469_305Abc101G;
extern T0*ms469_305Abc101F;
extern T0*ms469_305Abc101E;
extern T0*ms469_305Abc101D;
extern T0*ms469_305Abc101C;
extern T0*ms469_305Abc101B;
extern T0*ms469_305Abc101A;
extern T0*ms29_17422Abc29A;
extern T0*ms97_109Abc97A;
extern T0*ms97_6159594Abc97A;
extern T0*ms101_78646Abc101A;
extern T0*ms97_9073Abc97D;
extern T0*ms97_9073Abc97C;
extern T0*ms91_745978733Abc91A;
extern T0*ms750_1400894751Abc750A;
extern T0*ms97_9073Abc97B;
extern T0*ms97_9073Abc97A;
extern T0*ms96_1194472660Abc96A;
extern T0*ms101_16782Abc101A;
extern T0*ms101_16782Abc101B;
extern T0*ms101_16782Abc101C;
extern T0*ms608_380343Abc608A;
extern T0*ms29_534Abc29A;
extern T0*ms101_215791Abc101A;
extern T0*ms620_591Abc622A;
extern T0*ms101_637467090Abc101A;
extern T0*ms614_6411Abc614A;
extern T0*ms113_1974940930Abc113A;
extern T0*ms280_1224218969Abc280A;
extern T0*ms784_486352305Abc784A;
extern T0*ms620_591Abc620A;
extern T0*ms31_2248290Abc31A;
extern T0*ms29_76691Abc476A;
extern T0*ms113_113009969Abc113A;
extern T0*ms29_1644425991Abc29A;
extern T0*ms614_1174230416Abc614A;
extern T0*ms614_1174230416Abc614B;
extern T0*ms614_1174230416Abc614C;
extern T0*ms613_905827712Abc613A;
extern T0*ms614_1174230416Abc614D;
extern T0*ms614_1174230416Abc614E;
extern T0*ms614_1174230416Abc614F;
extern T0*ms30_396356Abc606A;
extern T0*ms29_280482649Abc29A;
extern T0*ms615_129654140Abc615B;
extern T0*ms615_129654140Abc615A;
extern T0*ms29_1574640467Abc29A;
extern T0*ms101_12201Abc101A;
extern T0*ms101_106460275Abc101A;
extern T0*ms101_257Abc101A;
extern T0*ms101_257Abc101B;
extern T0*ms101_437780Abc101A;
extern T0*ms614_162020Abc614A;
extern T0*ms615_29126717Abc615A;
extern T0*ms614_1340573954Abc614A;
extern T0*ms101_1565Abc101D;
extern T0*ms101_1565Abc101C;
extern T0*ms615_2670Abc615A;
extern T0*ms101_1565Abc101B;
extern T0*ms101_1565Abc101A;
extern T0*ms591_80771Abc591A;
extern T0*ms101_15351Abc101A;
extern T0*ms101_15351Abc101B;
extern T0*ms554_724183788Abc554A;
extern T0*ms29_55041141Abc29A;
extern T0*ms29_55041091Abc29A;
extern T0*ms90_1861857328Abc90A;
extern T0*ms782_413927315Abc782A;
extern T0*ms447_46Abc539A;
extern T0*ms29_728963476Abc29A;
extern T0*ms608_1952787551Abc608A;
extern T0*ms97_10937305Abc97A;
extern T0*ms613_1193180751Abc613A;
extern T0*ms101_33425Abc101A;
extern T0*ms101_33425Abc101B;
extern T0*ms613_197159Abc613A;
extern T0*ms101_1624663341Abc101A;
extern T0*ms101_1624663341Abc101B;
extern T0*ms613_197159Abc614A;
extern T0*ms608_180128Abc608A;
extern T0*ms608_180128Abc608B;
extern T0*ms784_2136427942Abc784A;
extern T0*ms30_396356Abc591A;
extern T0*ms31_385751Abc31A;
extern T0*ms97_1494914262Abc97A;
extern T0*ms591_156962Abc591A;
extern T0*ms614_1206509635Abc614A;
extern T0*ms96_2029530601Abc96A;
extern T0*ms608_1175100011Abc608A;
extern T0*ms112_397Abc112A;
extern T0*ms784_244523906Abc784A;
extern T0*ms590_1646Abc590A;
extern T0*ms590_1646Abc590B;
extern T0*ms101_2417Abc101A;
extern T0*ms29_267647687Abc29A;
extern T0*ms606_506Abc606A;
extern T0*ms101_277Abc101A;
extern T0*ms101_282Abc101A;
extern T0*ms101_277Abc101B;
extern T0*ms101_277Abc101C;
extern T0*ms101_277Abc101D;
extern T0*ms101_277Abc101E;
extern T0*ms101_277Abc101F;
extern T0*ms101_277Abc101G;
extern T0*ms628_1691484858Abc628A;
extern T0*ms278_12376Abc29A;
extern T0*ms101_1327517381Abc101A;
extern T0*ms784_1265395998Abc784A;
extern T0*ms591_46337Abc591A;
extern T0*ms614_6396Abc614A;
extern T0*ms608_2022635Abc608A;
extern T0*ms615_177459204Abc615A;
extern T0*ms614_104084395Abc614B;
extern T0*ms615_177459204Abc615B;
extern T0*ms614_104084395Abc614A;
extern T0*ms101_2072467813Abc101A;
extern T0*ms29_55040391Abc29A;
extern T0*ms728_1398420907Abc728A;
extern T0*ms29_94407393Abc29A;
extern T0*ms591_386819Abc591A;
extern T0*ms785_992457137Abc785A;
extern T0*ms613_10322525Abc784A;
extern T0*ms614_10430693Abc614A;
extern T0*ms606_1298Abc606A;
extern T0*ms606_1298Abc606B;
extern T0*ms29_201970799Abc29A;
extern T0*ms113_203714719Abc113A;
extern T0*ms615_59Abc615A;
extern T0*ms101_44Abc101A;
extern T0*ms29_37186806Abc29A;
extern T0*ms31_385751Abc267A;
extern T0*ms101_41Abc606A;
extern T0*ms527_456083848Abc527A;
extern T0*ms29_16639Abc29A;
extern T0*ms30_937397683Abc30A;
extern T0*ms30_3601Abc465A;
extern T0*ms97_9222Abc97A;
extern T0*ms101_37095Abc101A;
extern T0*ms101_41Abc608A;
extern T0*ms280_200Abc591A;
extern T0*ms101_41Abc608B;
extern T0*ms101_41Abc608C;
extern T0*ms93_589Abc93A;
extern T0*ms614_46980416Abc614A;
extern T0*ms97_76405Abc97A;
extern T0*ms101_41Abc614A;
extern T0*ms101_41Abc614B;
extern T0*ms97_62380794Abc97A;
extern T0*ms782_2097247Abc782A;
extern T0*ms101_1059359695Abc101A;
extern T0*ms726_241Abc614A;
extern T0*ms726_241Abc614B;
extern T0*ms101_1901889757Abc101A;
extern T0*ms29_567319806Abc29A;
extern T0*ms358_1485100899Abc358A;
extern T0*ms267_1737556726Abc267A;
extern T0*ms614_9794360Abc614A;
extern T0*ms101_1082664800Abc101A;
extern T0*ms620_476Abc620A;
extern T0*ms30_89771Abc30A;
extern T0*ms96_408537579Abc96A;
extern T0*ms96_445497083Abc96A;
extern T0*ms614_325Abc614A;
extern T0*ms29_506823435Abc29A;
extern T0*ms29_61Abc392A;
extern T0*ms101_1582839830Abc101A;
extern T0*ms559_255Abc591A;
extern T0*ms606_21020045Abc614A;
extern T0*ms554_671Abc101B;
extern T0*ms554_671Abc101A;
extern T0*ms614_511943145Abc614A;
extern T0*ms29_61Abc29A;
extern T0*ms101_437715Abc101A;
extern T0*ms784_2121801775Abc784A;
extern T0*ms606_21020045Abc606A;
extern T0*ms613_1403828457Abc613A;
extern T0*ms101_17507Abc101A;
extern T0*ms280_4479182Abc101A;
extern T0*ms101_49152444Abc613A;
extern T0*ms552_146251545Abc552A;
extern T0*ms784_1111960899Abc784A;
extern T0*ms658_1760457965Abc658A;
extern T0*ms677_861846863Abc677A;
extern T0*ms29_3421Abc29A;
extern T0*ms113_809686569Abc113A;
extern T0*ms101_14005Abc101A;
extern T0*ms101_14005Abc101B;
extern T0*ms606_1446625Abc606A;
extern T0*ms29_201970776Abc29A;
extern T0*ms620_17916Abc620A;
extern T0*ms97_2075119688Abc97A;
extern T0*ms101_22971612Abc101A;
extern T0*ms614_255Abc614B;
extern T0*ms614_255Abc614A;
extern T0*ms559_255Abc559A;
extern T0*ms413_1288915017Abc101A;
extern T0*ms620_17916Abc622A;
extern T0*ms29_16616Abc29A;
extern T0*ms613_52555395Abc613A;
extern T0*ms784_737599544Abc784A;
extern T0*ms101_12331Abc101A;
extern T0*ms613_444775459Abc613A;
extern T0*ms90_696478167Abc90A;
extern T0*ms614_537910373Abc614A;
extern T0*ms89_9897510Abc89A;
extern T0*ms784_384078512Abc784A;
extern T0*ms590_1646Abc784A;
extern T0*ms363_78082Abc363A;
extern T0*ms590_1646Abc784B;
extern T0*ms29_567319829Abc29A;
extern T0*ms89_4492176Abc101A;
extern T0*ms366_2126200255Abc101A;
extern T0*ms30_16630Abc30A;
extern T0*ms113_3556890Abc113A;
extern T0*ms614_195246Abc614A;
extern T0*ms726_241Abc726A;
extern T0*ms29_2054549840Abc29A;
extern T0*ms726_241Abc726B;
extern T0*ms615_813409Abc615A;
extern T0*ms101_249Abc785A;
extern T0*ms29_1594034Abc29A;
extern T0*ms608_252339Abc608A;
extern T0*ms608_252339Abc608B;
extern T0*ms608_252339Abc608C;
extern T0*ms608_1341914655Abc608A;
extern T0*ms267_452889Abc267A;
extern T0*ms447_46Abc767A;
extern T0*ms101_1773201687Abc101A;
extern T0*ms603_4571007Abc603A;
extern T0*ms112_2947Abc112A;
extern T0*ms96_327902Abc278A;
extern T0*ms447_46Abc769A;
extern T0*ms96_327902Abc278B;
extern T0*ms383_529996976Abc383A;
extern T0*ms29_52347889Abc29A;
extern T0*ms96_921818688Abc96A;
extern T0*ms101_5367889Abc101A;
extern T0*ms613_1994331Abc613A;
extern T0*ms363_202031759Abc555A;
extern T0*ms267_1689176777Abc267A;
extern T0*ms29_61Abc608A;
extern T0*ms101_16487Abc782A;
extern T0*ms101_16487Abc782B;
extern T0*ms29_78150Abc29A;
extern T0*ms101_16487Abc782C;
extern T0*ms785_14464Abc785A;
extern T0*ms785_14464Abc785B;
extern T0*ms726_858562Abc726A;
extern T0*ms101_77412Abc608A;
extern T0*ms101_77412Abc608B;
extern T0*ms101_77412Abc608C;
extern T0*ms101_77412Abc608D;
extern T0*ms29_10945665Abc29A;
extern T0*ms29_2038667775Abc29A;
extern T0*ms617_138425Abc617B;
extern T0*ms590_926003101Abc590A;
extern T0*ms617_138425Abc617A;
extern T0*ms29_261093457Abc29A;
extern T0*ms365_7506001Abc365A;
extern T0*ms31_2141685Abc31A;
extern T0*ms101_77412Abc617A;
extern T0*ms97_9121Abc97A;
extern T0*ms603_4571032Abc603A;
extern T0*ms559_1500847347Abc559A;
extern T0*ms101_586511651Abc101A;
extern T0*ms29_14150Abc29A;
extern T0*ms89_439136Abc89A;
extern T0*ms613_280766651Abc613A;
extern T0*ms614_1586596820Abc614A;
extern T0*ms614_1586596820Abc614B;
extern T0*ms101_1901755Abc101A;
extern T0*ms614_1586596820Abc615A;
extern T0*ms101_1295Abc101A;
extern T0*ms29_451899881Abc29A;
extern T0*ms101_1564992795Abc101A;
extern T0*ms763_1121854Abc763A;
extern T0*ms591_3212Abc591A;
extern T0*ms475_180503525Abc475A;
extern T0*ms97_1626Abc97B;
extern T0*ms97_1626Abc97A;
extern T0*ms101_283387313Abc101A;
extern T0*ms614_1553763390Abc614A;
extern T0*ms101_451157Abc591A;
extern T0*ms89_4235Abc89A;
extern T0*ms96_1265Abc96A;
extern T0*ms29_591417242Abc29A;
extern T0*ms615_32860Abc615A;
extern T0*ms784_618166083Abc784A;
extern T0*ms101_81256Abc101A;
extern T0*ms29_1375414302Abc29A;
extern T0*ms101_1330Abc107A;
extern T0*ms29_87541Abc29A;
extern T0*ms606_7225250Abc606A;
extern T0*ms614_1116064705Abc614A;
extern T0*ms97_1247935972Abc97A;
extern T0*ms101_20552830Abc101A;
extern T0*ms101_1330Abc101L;
extern T0*ms101_1330Abc101K;
extern T0*ms614_9954400Abc614A;
extern T0*ms101_1330Abc101J;
extern T0*ms101_1330Abc101I;
extern T0*ms101_1330Abc101H;
extern T0*ms101_1330Abc101G;
extern T0*ms101_1330Abc101F;
extern T0*ms101_1330Abc101E;
extern T0*ms101_1330Abc101D;
extern T0*ms101_1728206941Abc101A;
extern T0*ms101_1330Abc101C;
extern T0*ms608_2065182209Abc608A;
extern T0*ms784_2051940780Abc784A;
extern T0*ms101_1330Abc101B;
extern T0*ms101_1330Abc101A;
extern T0*ms101_2189840Abc101A;
extern T0*ms29_3472Abc29A;
extern T0*ms784_931143030Abc784A;
extern T0*ms101_451157Abc613A;
extern T0*ms101_893005Abc101A;
extern T0*ms25_85614Abc282A;
extern T0*ms29_50246319Abc29A;
extern T0*ms101_8359055Abc101A;
extern T0*ms608_23451005Abc608A;
extern T0*ms726_351Abc726A;
extern T0*ms784_27909038Abc784A;
extern T0*ms608_3175Abc608A;
extern T0*ms784_1497878015Abc784A;
extern T0*ms608_3175Abc608B;
extern T0*ms608_3175Abc614A;
extern T0*ms101_2041682Abc101A;
extern T0*ms101_2041682Abc101B;
extern T0*ms784_1007239Abc784A;
extern T0*ms101_2041682Abc101C;
extern T0*ms784_1242450095Abc784A;
extern T0*ms101_2041682Abc101D;
extern T0*ms101_2041682Abc101E;
extern T0*ms852_1935504882Abc852A;
extern T0*ms608_3175Abc615A;
extern T0*ms591_26975293Abc591A;
extern T0*ms101_245Abc101A;
extern T0*ms784_1985327250Abc784A;
extern T0*ms614_116864219Abc614A;
extern T0*ms101_277Cbc101A;
extern T0*ms784_97510Abc784A;
extern T0*ms86_1861287086Abc86A;
extern T0*ms89_599810839Abc89A;
extern T0*ms101_1418906530Abc101A;
extern T0*ms89_4750778Abc89A;
extern T0*ms613_1824264277Abc613A;
extern T0*ms101_78646Abc608A;
extern T0*ms101_16782Abc613A;
extern T0*ms101_2038260346Abc101A;
extern T0*ms615_1942608409Abc615A;
extern T0*ms784_291421585Abc784A;
extern T0*ms464_34086Abc464A;
extern T0*ms30_17176Abc30A;
extern T0*ms363_202031759Abc363A;
extern T0*ms101_411134193Abc101A;
extern T0*ms614_2217200Abc614A;
extern T0*ms84_1838187926Abc84A;
extern T0*ms101_1724182721Abc101A;
extern T0*ms615_1155996628Abc615A;
extern T0*ms345_1492212881Abc340A;
extern T0*ms29_1192911276Abc29A;
extern T0*ms465_380590Abc465A;
extern T0*ms447_46Abc95A;
extern T0*ms101_1435285930Abc101A;
extern T0*ms345_1492212881Abc338A;
extern T0*ms101_257Abc552A;
extern T0*ms101_257Abc552B;
extern T0*ms101_257Abc552C;
extern T0*ms613_398948Abc613A;
extern T0*ms95_97543221Abc95A;
extern T0*ms97_9220Abc97A;
extern T0*ms101_257Abc603A;
extern T0*ms97_1361085152Abc97A;
extern T0*ms101_257Abc603B;
extern T0*ms29_1483884743Abc29A;
extern T0*ms101_257Abc603C;
extern T0*ms30_1509818Abc30A;
extern T0*ms101_257Abc603D;
extern T0*ms345_1492212881Abc345A;
extern T0*ms101_257Abc603E;
extern T0*ms101_257Abc603F;
extern T0*ms97_186217457Abc97A;
extern T0*ms613_1869700848Abc613A;
extern T0*ms97_99Abc97A;
extern T0*ms101_257Abc603G;
extern T0*ms101_257Abc603H;
extern T0*ms101_257Abc603I;
extern T0*ms29_279523519Abc29A;
extern T0*ms782_1777096676Abc782A;
extern T0*ms101_5164112Abc101A;
extern T0*ms101_257Abc606A;
extern T0*ms101_257Abc606B;
extern T0*ms96_10Abc96B;
extern T0*ms96_10Abc96A;
extern T0*ms31_78495Abc31A;
extern T0*ms101_16782Abc591A;
extern T0*ms621_90792Abc621A;
extern T0*ms101_257Abc608A;
extern T0*ms101_16782Abc591B;
extern T0*ms101_16782Abc591C;
extern T0*ms90_174945438Abc90A;
extern T0*ms97_1058443417Abc97A;
extern T0*ms101_1339521386Abc101A;
extern T0*ms29_197002151Abc29A;
extern T0*ms608_48939847Abc608A;
extern T0*ms608_48939847Abc608B;
extern T0*ms331_1060258809Abc331A;
extern T0*ms29_2067995Abc29A;
extern T0*ms772_1854402277Abc772A;
extern T0*ms591_430519127Abc591A;
extern T0*ms465_3196Abc465A;
extern T0*ms30_51843716Abc418A;
extern T0*ms97_830570470Abc97A;
extern T0*ms413_1288915017Abc413A;
extern T0*ms323_864187036Abc323A;
extern T0*ms608_1936367907Abc608A;
extern T0*ms31_336Abc31A;
extern T0*ms267_90141Abc267A;
extern T0*ms29_312005144Abc29A;
extern T0*ms29_438300Abc29A;
extern T0*ms101_889346373Abc101A;
extern T0*ms784_77562923Abc784A;
extern T0*ms591_4999725Abc591A;
extern T0*ms558_742356033Abc558A;
extern T0*ms101_277Abc552A;
extern T0*ms29_619776399Abc29A;
extern T0*ms96_604558099Abc96A;
extern T0*ms728_849265556Abc728A;
extern T0*ms606_506Abc101B;
extern T0*ms606_506Abc101A;
extern T0*ms30_251171752Abc30A;
extern T0*ms614_78629Abc614A;
extern T0*ms614_78629Abc614B;
extern T0*ms101_277Abc606A;
extern T0*ms101_277Abc606B;
extern T0*ms30_427898753Abc30A;
extern T0*ms101_257Abc591A;
extern T0*ms101_257Abc591B;
extern T0*ms613_1246644455Abc613A;
extern T0*ms29_1286698901Abc29A;
extern T0*ms101_277Abc608A;
extern T0*ms97_0Abc852E;
extern T0*ms97_0Abc852D;
extern T0*ms29_30191860Abc29A;
extern T0*ms97_0Abc852C;
extern T0*ms97_0Abc852B;
extern T0*ms97_0Abc852A;
extern T0*ms89_180894Abc89A;
extern T0*ms97_3169Abc97A;
extern T0*ms101_2103819988Abc101A;
extern T0*ms324_1981041429Abc324A;
extern T0*ms591_4996600Abc591A;
extern T0*ms97_218174Abc97A;
extern T0*ms97_217674Abc97A;
extern T0*ms101_1994596535Abc101A;
extern T0*ms101_490869799Abc101A;
extern T0*ms78_685Abc78A;
extern T0*ms101_444175272Abc101A;
extern T0*ms591_5720Abc591A;
extern T0*ms96_385188989Abc96B;
extern T0*ms97_0Abc791E;
extern T0*ms96_385188989Abc96A;
extern T0*ms97_0Abc791D;
extern T0*ms784_680177517Abc784A;
extern T0*ms97_0Abc791C;
extern T0*ms97_0Abc791B;
extern T0*ms97_0Abc791A;
extern T0*ms622_2394Abc622A;
extern T0*ms97_0Abc790A;
extern T0*ms101_1312728230Abc101A;
extern T0*ms31_2191641Abc101A;
extern T0*ms96_1463938603Abc96A;
extern T0*ms30_17176Abc95A;
extern T0*ms614_83277Abc614A;
extern T0*ms101_37095Abc603A;
extern T0*ms97_689Abc97A;
extern T0*ms614_134878499Abc614A;
extern T0*ms29_2067759348Abc29A;
extern T0*ms340_1306325004Abc340A;
extern T0*ms89_194Abc101A;
extern T0*ms96_427937988Abc96A;
extern T0*ms267_2108992007Abc267A;
extern T0*ms101_277Abc591A;
extern T0*ms363_44462444Abc363A;
extern T0*ms101_277Abc591B;
extern T0*ms101_1173628471Abc101A;
extern T0*ms97_0Abc768A;
extern T0*ms30_2234341Abc460A;
extern T0*ms29_197002174Abc29A;
extern T0*ms101_985140858Abc101A;
extern T0*ms791_1959331451Abc791A;
extern T0*ms613_16927Abc613A;
extern T0*ms461_384465Abc615A;
extern T0*ms614_245384155Abc614A;
extern T0*ms90_446380143Abc90A;
extern T0*ms608_750Abc591A;
extern T0*ms461_384465Abc614A;
extern T0*ms29_48856070Abc29A;
extern T0*ms613_159025018Abc613A;
extern T0*ms590_1511378937Abc590A;
extern T0*ms89_54634669Abc89A;
extern T0*ms267_1955866577Abc267A;
extern T0*ms613_1328320695Abc613A;
extern T0*ms30_54418471Abc30A;
extern T0*ms101_1826935309Abc101A;
extern T0*ms29_16686Abc29A;
extern T0*ms101_1844536619Abc101A;
extern T0*ms101_1853640928Abc101A;
extern T0*ms784_5839580Abc784A;
extern T0*ms29_10377643Abc29A;
extern T0*ms608_3175Abc784A;
extern T0*ms101_42279221Abc101A;
extern T0*ms608_3175Abc785A;
extern T0*ms469_29585Abc469A;
extern T0*ms608_3175Abc786A;
extern T0*ms101_1645835456Abc101A;
extern T0*ms101_3430Abc591B;
extern T0*ms101_3430Abc591A;
extern T0*ms31_336Abc97A;
extern T0*ms101_4631170Abc101A;
extern T0*ms28_331Abc424A;
extern T0*ms29_3501Abc29A;
extern T0*ms608_750Abc608A;
extern T0*ms608_1124563501Abc608A;
extern T0*ms84_8198176Abc437A;
extern T0*ms425_1382Abc425A;
extern T0*ms97_0Abc741A;
extern T0*ms101_49152444Abc101A;
extern T0*ms101_4692662Abc101A;
extern T0*ms617_1068122514Abc617A;
extern T0*ms97_0Abc679C;
extern T0*ms97_0Abc679B;
extern T0*ms97_0Abc679A;
extern T0*ms614_247Abc614A;
extern T0*ms603_185443Abc603A;
extern T0*ms603_185438Abc603A;
extern T0*ms608_3760Abc101A;
extern T0*ms97_0Abc728B;
extern T0*ms30_17221Abc556A;
extern T0*ms29_1418282620Abc29A;
extern T0*ms97_0Abc728A;
extern T0*ms591_1426Abc591A;
extern T0*ms101_1917882Abc101A;
extern T0*ms97_0Abc677A;
extern T0*ms29_47Abc101A;
extern T0*ms618_2187411Abc618A;
extern T0*ms331_1001314405Abc331A;
extern T0*ms97_0Abc725A;
extern T0*ms101_3430Abc559A;
extern T0*ms97_0Abc674B;
extern T0*ms97_1223801083Abc97A;
extern T0*ms97_0Abc674A;
extern T0*ms413_1288915017Abc613A;
extern T0*ms782_1414Abc782A;
extern T0*ms73_522142839Abc73B;
extern T0*ms73_522142839Abc73A;
extern T0*ms101_531983658Abc101A;
extern T0*ms344_1771711260Abc344A;
extern T0*ms424_597973944Abc424A;
extern T0*ms784_998144220Abc784A;
extern T0*ms30_59251Abc30A;
extern T0*ms613_1203432441Abc613A;
extern T0*ms591_1387812168Abc591A;
extern T0*ms101_12331Abc614A;
extern T0*ms101_2123070311Abc101A;
extern T0*ms101_12331Abc614B;
extern T0*ms791_1847764413Abc791A;
extern T0*ms626_265537649Abc626A;
extern T0*ms101_2883Abc101A;
extern T0*ms29_80694Abc29A;
extern T0*ms96_1737672775Abc96A;
extern T0*ms461_384465Abc461A;
extern T0*ms782_699Abc782A;
extern T0*ms278_1185293475Abc278A;
extern T0*ms278_1185293475Abc278B;
extern T0*ms587_257Abc587A;
extern T0*ms97_19761224Abc97A;
extern T0*ms101_12331Abc618A;
extern T0*ms84_439490016Abc84A;
extern T0*ms97_240Abc267A;
extern T0*ms95_23085765Abc95A;
extern T0*ms97_561720547Abc97A;
extern T0*ms101_383570Abc101A;
extern T0*ms603_185458Abc603A;
extern T0*ms603_185463Abc603A;
extern T0*ms30_9909665Abc30A;
extern T0*ms97_240Abc264A;
extern T0*ms73_1761241425Abc73A;
extern T0*ms96_1783880762Abc96A;
extern T0*ms29_9676326Abc29A;
extern T0*ms29_185934055Abc29A;
extern T0*ms29_371Abc29A;
extern T0*ms358_1626899946Abc725A;
extern T0*ms606_184795Abc606A;
extern T0*ms784_6830Abc784A;
extern T0*ms29_1680885744Abc29A;
extern T0*ms784_110557057Abc784A;
extern T0*ms29_282Abc767A;
extern T0*ms614_653639191Abc614A;
extern T0*ms29_3474Abc29A;
extern T0*ms113_210310269Abc113A;
extern T0*ms590_205124Abc590A;
extern T0*ms97_0Abc628A;
extern T0*ms603_810433Abc603A;
extern T0*ms362_5787Abc362A;
extern T0*ms415_77Abc415A;
extern T0*ms89_407741255Abc89A;
extern T0*ms280_1661812564Abc280A;
extern T0*ms101_54734511Abc101A;
extern T0*ms101_1284Abc614B;
extern T0*ms101_1284Abc614A;
extern T0*ms29_572288431Abc29A;
extern T0*ms101_1284Abc613B;
extern T0*ms101_1284Abc613A;
extern T0*ms101_1460025642Abc101A;
extern T0*ms101_36778611Abc101A;
extern T0*ms101_1284Abc606A;
extern T0*ms101_1284Abc605C;
extern T0*ms608_352968782Abc608A;
extern T0*ms101_1284Abc605B;
extern T0*ms101_1284Abc605A;
extern T0*ms97_1772235Abc97A;
extern T0*ms784_6755Abc784B;
extern T0*ms614_887295984Abc614B;
extern T0*ms603_4570857Abc603A;
extern T0*ms603_4570907Abc603A;
extern T0*ms784_6755Abc784A;
extern T0*ms614_887295984Abc614A;
extern T0*ms554_168Abc554A;
extern T0*ms101_561301605Abc101A;
extern T0*ms101_1234811086Abc101A;
extern T0*ms784_2092663259Abc784A;
extern T0*ms29_3669Abc29A;
extern T0*ms784_33875Abc784A;
extern T0*ms784_25822456Abc784B;
extern T0*ms476_76659Abc476A;
extern T0*ms784_25822456Abc784A;
extern T0*ms620_293Abc620A;
extern T0*ms372_5382Abc372A;
extern T0*ms113_3556890Abc676A;
extern T0*ms30_17221Abc375A;
extern T0*ms101_280139425Abc101A;
extern T0*ms29_591414963Abc29A;
extern T0*ms591_1575353618Abc591A;
extern T0*ms101_1591358844Abc101A;
extern T0*ms363_181352Abc363A;
extern T0*ms101_1994813154Abc101A;
extern T0*ms101_4980205Abc101A;
extern T0*ms97_0Abc544B;
extern T0*ms97_0Abc544A;
extern T0*ms97_1431838787Abc97A;
extern T0*ms89_18036Abc89A;
extern T0*ms608_54714119Abc608A;
extern T0*ms101_1009317511Abc101A;
extern T0*ms97_0Abc529A;
extern T0*ms97_0Abc528B;
extern T0*ms603_4570932Abc603A;
extern T0*ms603_4570882Abc603A;
extern T0*ms97_0Abc528A;
extern T0*ms97_851047233Abc97A;
extern T0*ms29_2174354Abc29A;
extern T0*ms97_39617954Abc97A;
extern T0*ms30_479921113Abc30A;
extern T0*ms101_15589Abc101A;
extern T0*ms852_387651299Abc852B;
extern T0*ms852_387651299Abc852A;
extern T0*ms267_817932306Abc267A;
extern T0*ms614_1900Abc614A;
extern T0*ms518_287Abc590A;
extern T0*ms614_1900Abc614B;
extern T0*ms558_985967445Abc558A;
extern T0*ms84_8198176Abc84A;
extern T0*ms97_45436Abc97A;
extern T0*ms101_451157Abc101C;
extern T0*ms101_451157Abc101B;
extern T0*ms558_302501127Abc558A;
extern T0*ms101_451157Abc101A;
extern T0*ms608_2251910Abc608A;
extern T0*ms608_2251910Abc608B;
extern T0*ms101_1308400309Abc101A;
extern T0*ms784_784300160Abc784A;
extern T0*ms30_820292Abc30A;
extern T0*ms29_572288454Abc29A;
extern T0*ms96_1574136045Abc96A;
extern T0*ms30_78490Abc30A;
extern T0*ms784_1648235130Abc784A;
extern T0*ms101_726227573Abc101A;
extern T0*ms101_245Abc605A;
extern T0*ms29_47Abc29A;
extern T0*ms89_1733505988Abc89A;
extern T0*ms101_245Abc606A;
extern T0*ms101_245Abc606B;
extern T0*ms101_245Abc606C;
extern T0*ms608_1888091524Abc608A;
extern T0*ms101_245Abc606D;
extern T0*ms30_14036Abc30A;
extern T0*ms101_625Abc101A;
extern T0*ms97_2077353217Abc97A;
extern T0*ms101_1565125654Abc101A;
extern T0*ms608_1181502Abc608A;
extern T0*ms784_1341105285Abc784A;
extern T0*ms97_3494Abc97A;
extern T0*ms30_8054609Abc772A;
extern T0*ms30_16761Abc30A;
extern T0*ms97_240Abc113B;
extern T0*ms97_240Abc113A;
extern T0*ms366_278Abc366A;
extern T0*ms101_522691310Abc101A;
extern T0*ms101_2753Abc101A;
extern T0*ms96_1535001676Abc96A;
extern T0*ms614_419Abc614B;
extern T0*ms614_419Abc614A;
extern T0*ms97_932412928Abc617A;
extern T0*ms606_2187584Abc606A;
extern T0*ms31_89216Abc31A;
extern T0*ms113_322Abc113A;
extern T0*ms29_7748406Abc29A;
extern T0*ms29_1682815431Abc29A;
extern T0*ms89_1933Abc89A;
extern T0*ms608_244699380Abc608A;
extern T0*ms608_244699380Abc608B;
extern T0*ms591_1185483839Abc591A;
extern T0*ms608_244699380Abc608C;
extern T0*ms608_244699380Abc608D;
extern T0*ms608_244699380Abc608E;
extern T0*ms608_1291760099Abc608A;
extern T0*ms96_218672210Abc96A;
extern T0*ms101_1968768303Abc101A;
extern T0*ms615_3181Abc615A;
extern T0*ms30_1988096Abc30A;
extern T0*ms389_29037Abc389A;
extern T0*ms784_28263330Abc784A;
extern T0*ms614_34510Abc614A;
extern T0*ms90_175744241Abc90A;
extern T0*ms29_2104Abc29A;
extern T0*ms101_1852104762Abc101A;
extern T0*ms97_0Abc424C;
extern T0*ms97_0Abc424B;
extern T0*ms29_447584Abc29A;
extern T0*ms97_0Abc424A;
extern T0*ms97_3294Abc97A;
extern T0*ms617_1956008156Abc617A;
extern T0*ms363_732402575Abc363A;
extern T0*ms425_1382Abc106A;
extern T0*ms591_180709512Abc591A;
extern T0*ms101_273443870Abc101A;
extern T0*ms101_40Abc101A;
extern T0*ms29_1095772782Abc29A;
extern T0*ms101_40Abc101B;
extern T0*ms29_1297432701Abc29A;
extern T0*ms591_1269Abc591A;
extern T0*ms588_619166512Abc588A;
extern T0*ms97_0Abc363A;
extern T0*ms518_287Abc518A;
extern T0*ms97_2109537640Abc97D;
extern T0*ms97_2109537640Abc97C;
extern T0*ms96_1066764899Abc96A;
extern T0*ms97_2109537640Abc97B;
extern T0*ms97_2109537640Abc97A;
extern T0*ms84_2123229206Abc84A;
extern T0*ms30_3175Abc30A;
extern T0*ms96_292482Abc84A;
extern T0*ms280_1831619428Abc280A;
extern T0*ms96_866669263Abc96A;
extern T0*ms29_550709268Abc29A;
extern T0*ms29_1427Abc29A;
extern T0*ms29_878996813Abc29A;
extern T0*ms363_2870Abc363A;
extern T0*ms97_3094Abc97A;
extern T0*ms606_580292587Abc606A;
extern T0*ms29_175767198Abc29A;
extern T0*ms101_4620546Abc101A;
extern T0*ms30_17715Abc394A;
extern T0*ms407_1085830094Abc407A;
extern T0*ms617_1245850444Abc617A;
extern T0*ms29_349117293Abc29A;
extern T0*ms614_1671063525Abc614B;
extern T0*ms614_1671063525Abc614A;
extern T0*ms97_0Abc278B;
extern T0*ms97_8884Abc97B;
extern T0*ms97_0Abc278A;
extern T0*ms97_8884Abc97A;
extern T0*ms97_9107Abc97A;
extern T0*ms358_1626899946Abc358A;
extern T0*ms278_838840612Abc278A;
extern T0*ms97_1331737400Abc97A;
extern T0*ms29_218Abc29A;
extern T0*ms613_89821Abc613A;
extern T0*ms29_586229245Abc29A;
extern T0*ms678_46245Abc678A;
extern T0*ms785_1506490209Abc785A;
extern T0*ms614_15020Abc614A;
extern T0*ms101_389675Abc101A;
extern T0*ms614_15020Abc614B;
extern T0*ms614_15020Abc614C;
extern T0*ms614_15020Abc614D;
extern T0*ms614_854330615Abc614A;
extern T0*ms97_0Abc267B;
extern T0*ms614_15020Abc614E;
extern T0*ms97_0Abc267A;
extern T0*ms614_15020Abc614F;
extern T0*ms614_15020Abc614G;
extern T0*ms89_1631593164Abc89A;
extern T0*ms29_2504Abc29A;
extern T0*ms614_1726920051Abc614A;
extern T0*ms101_11086084Abc101B;
extern T0*ms101_11086084Abc101A;
extern T0*ms101_1203674198Abc101A;
extern T0*ms101_4620481Abc101A;
extern T0*ms84_672350142Abc84A;
extern T0*ms90_1578831409Abc90A;
extern T0*ms389_29037Abc608A;
extern T0*ms30_402346Abc30A;
extern T0*ms101_218061703Abc101A;
extern T0*ms606_1406782500Abc606A;
extern T0*ms29_337331Abc29A;
extern T0*ms615_1719326284Abc615A;
extern T0*ms30_400652Abc30A;
extern T0*ms101_1271Bbc614D;
extern T0*ms591_1484470448Abc591A;
extern T0*ms101_1271Bbc614C;
extern T0*ms101_1271Bbc614B;
extern T0*ms29_440571Abc29A;
extern T0*ms101_1271Bbc614A;
extern T0*ms613_1407Abc613A;
extern T0*ms101_56845112Abc101A;
extern T0*ms613_189437896Abc613A;
extern T0*ms101_1271Bbc613A;
extern T0*ms30_78591Abc30A;
extern T0*ms101_1271Bbc606A;
extern T0*ms30_17715Abc352A;
extern T0*ms101_10666295Abc101A;
extern T0*ms101_1160736641Abc101A;
extern T0*ms31_2020550321Abc31A;
extern T0*ms340_767649523Abc340A;
extern T0*ms29_1530432238Abc29A;
extern T0*ms29_76691Abc29A;
extern T0*ms96_1174466439Abc96A;
extern T0*ms29_573080478Abc29A;
extern T0*ms97_1744Abc97A;
extern T0*ms784_46525Abc784A;
extern T0*ms278_1133285999Abc278A;
extern T0*ms614_1679636650Abc614B;
extern T0*ms614_1679636650Abc614A;
extern T0*ms608_1923566548Abc608A;
extern T0*ms31_594Abc31A;
extern T0*ms97_447734Abc97A;
extern T0*ms96_1365578385Abc96A;
extern T0*ms30_1223234252Abc30A;
extern T0*ms101_2145444338Abc101A;
extern T0*ms587_11952Abc587A;
extern T0*ms280_188916891Abc280A;
extern T0*ms608_3760Abc608A;
extern T0*ms101_1844536619Abc591A;
extern T0*ms726_78209Abc726A;
extern T0*ms608_400650Abc608A;
extern T0*ms29_240810599Abc726A;
extern T0*ms591_706329Abc591A;
extern T0*ms101_3430Abc101B;
extern T0*ms101_3430Abc101A;
extern T0*ms29_201970793Abc29A;
extern T0*ms614_106047655Abc614A;
extern T0*ms784_525205114Abc784A;
extern T0*ms101_1316373138Abc101A;
extern T0*ms101_6877Abc101A;
extern T0*ms784_1069766146Abc784A;
extern T0*ms97_298Abc97A;
extern T0*ms266_319940936Abc266D;
extern T0*ms266_319940936Abc266C;
extern T0*ms371_3147Abc371A;
extern T0*ms266_319940936Abc266B;
extern T0*ms274_15195Abc274A;
extern T0*ms266_319940936Abc266A;
extern T0*ms608_2024156039Abc608A;
extern T0*ms784_1069766146Abc786A;
extern T0*ms113_322Abc413A;
extern T0*ms93_660Abc93A;
extern T0*ms614_31455Abc614A;
extern T0*ms29_124Abc29A;
extern T0*ms591_657822788Abc591A;
extern T0*ms30_90408Abc30A;
extern T0*ms29_1223936132Abc29A;
extern T0*ms29_1549680Abc29A;
extern T0*ms544_1185594Abc544A;
extern T0*ms615_965636096Abc615A;
extern T0*ms852_1942892277Abc852A;
extern T0*ms96_262Abc96A;
extern T0*ms113_322Abc424A;
extern T0*ms101_1858528797Abc101A;
extern T0*ms29_424430Abc29A;
extern T0*ms615_534333098Abc615A;
extern T0*ms463_218Abc463A;
extern T0*ms29_41849945Abc29A;
extern T0*ms113_322Abc425A;
extern T0*ms784_1012357115Abc784A;
extern T0*ms448_2015374870Abc448A;
extern T0*ms90_1923039443Abc90A;
extern T0*ms97_270309168Abc97A;
extern T0*ms29_112335826Abc29A;
extern T0*ms591_826425832Abc591C;
extern T0*ms591_826425832Abc591B;
extern T0*ms591_826425832Abc591A;
extern T0*ms97_603Abc97A;
extern T0*ms113_322Abc386A;
extern T0*ms784_1279738389Abc784A;
extern T0*ms614_10895Abc614A;
extern T0*ms29_839855894Abc29A;
extern T0*ms614_8291Abc614A;
extern T0*ms786_1295032451Abc786A;
extern T0*ms614_8291Abc614B;
extern T0*ms614_8291Abc614C;
extern T0*ms614_8291Abc614D;
extern T0*ms29_45Abc29A;
extern T0*ms101_4049151Abc101A;
extern T0*ms763_324Abc97A;
extern T0*ms786_1411018665Abc786A;
extern T0*ms784_598811726Abc784A;
extern T0*ms31_594Abc97A;
extern T0*ms101_7720290Abc101A;
extern T0*ms338_242535516Abc338A;
extern T0*ms101_1284Abc101B;
extern T0*ms101_1284Abc101A;
extern T0*ms554_168Abc101A;
extern T0*ms614_304601115Abc614A;
extern T0*ms30_3415Abc485A;
extern T0*ms113_322Abc449A;
extern T0*ms30_18090Abc30A;
extern T0*ms113_1635864124Abc113A;
extern T0*ms511_360Abc614B;
extern T0*ms608_180037Abc608A;
extern T0*ms511_360Abc614A;
extern T0*ms608_180037Abc608B;
extern T0*ms97_0Abc101C;
extern T0*ms97_0Abc101B;
extern T0*ms89_4492176Abc89A;
extern T0*ms97_0Abc101A;
extern T0*ms96_601041072Abc96A;
extern T0*ms396_29662Abc396A;
extern T0*ms591_129254700Abc591A;
extern T0*ms615_1773508175Abc615A;
extern T0*ms616_54686040Abc616A;
extern T0*ms614_579867211Abc614A;
extern T0*ms30_3349Abc30A;
extern T0*ms591_505232755Abc591A;
extern T0*ms606_230Abc606A;
extern T0*ms96_1206593669Abc96A;
extern T0*ms615_1062582514Abc615A;
extern T0*ms613_2077255577Abc613A;
extern T0*ms29_1735712398Abc29A;
extern T0*ms614_167916Abc614B;
extern T0*ms29_203589551Abc29A;
extern T0*ms614_167916Abc614A;
extern T0*ms606_36137368Abc606A;
extern T0*ms608_379993Abc608A;
extern T0*ms101_1264Abc101A;
extern T0*ms30_16264Abc30A;
extern T0*ms614_525503499Abc614A;
extern T0*ms113_1711985232Abc676A;
extern T0*ms29_42134669Abc475A;
extern T0*ms29_80109Abc29A;
extern T0*ms101_1530032908Abc101A;
extern T0*ms101_1530032908Abc101B;
extern T0*ms615_2122389958Abc615A;
extern T0*ms101_1530032908Abc101C;
extern T0*ms279_87520Abc628A;
extern T0*ms280_2064444Abc280A;
extern T0*ms101_1530032908Abc101D;
extern T0*ms280_2064444Abc274A;
extern T0*ms29_1578334651Abc29A;
extern T0*ms527_520647979Abc527A;
extern T0*ms591_26975282Abc591A;
extern T0*ms613_38305571Abc613A;
extern T0*ms107_1568216255Abc107A;
extern T0*ms29_88048Abc29A;
extern T0*ms97_7878Abc97A;
extern T0*ms358_1485085274Abc358A;
extern T0*ms89_2018315248Abc89A;
extern T0*ms97_2139128753Abc97A;
extern T0*ms615_23692781Abc615A;
extern T0*ms606_205Abc606A;
extern T0*ms30_437070Abc30A;
extern T0*ms29_669Abc29A;
extern T0*ms614_6425Abc614A;
extern T0*ms89_124311631Abc89A;
extern T0*ms468_2009909053Abc468A;
extern T0*ms29_55041151Abc29A;
extern T0*ms30_3415Abc591A;
extern T0*ms97_683870135Abc97A;
extern T0*ms614_2138778683Abc614A;
extern T0*ms29_1419919903Abc29A;
extern T0*ms29_3460Abc29A;
extern T0*ms626_1664721281Abc626A;
extern T0*ms784_1973244310Abc784A;
extern T0*ms280_927785894Abc280A;
extern T0*ms31_87180Abc31A;
extern T0*ms97_1438Abc97A;
extern T0*ms113_322Abc608A;
extern T0*ms101_32869Abc101A;
extern T0*ms511_360Abc511A;
extern T0*ms31_17498Abc31A;
extern T0*ms30_401994Abc30A;
extern T0*ms101_113036818Abc101A;
extern T0*ms30_2185421Abc30A;
extern T0*ms101_697705640Abc101C;
extern T0*ms101_697705640Abc101B;
extern T0*ms101_697705640Abc101A;
extern T0*ms608_693716559Abc608A;
extern T0*ms785_692716864Abc785A;
extern T0*ms324_311661671Abc324A;
extern T0*ms267_1977886Abc267A;
extern T0*ms28_329Abc678A;
extern T0*ms28_329Abc678B;
extern T0*ms28_329Abc678C;
extern T0*ms113_1662662954Abc113A;
extern T0*ms608_1261705Abc608A;
extern T0*ms29_94Abc29A;
extern T0*ms465_449661Abc465A;
extern T0*ms113_354654986Abc113A;
extern T0*ms29_552Abc29A;
extern T0*ms101_36951Abc101A;
extern T0*ms617_1150927957Abc617A;
extern T0*ms90_175744316Abc90A;
extern T0*ms101_149822297Abc101A;
extern T0*ms591_5284Abc591A;
extern T0*ms97_932412928Abc97A;
extern T0*ms106_270Abc106A;
extern T0*ms30_1939265372Abc30A;
extern T0*ms106_270Abc106B;
extern T0*ms591_259Abc591A;
extern T0*ms106_270Abc106C;
extern T0*ms113_322Abc637A;
extern T0*ms89_79251Abc89A;
extern T0*ms615_2110Abc615A;
extern T0*ms31_16177Abc31A;
extern T0*ms614_296Abc615A;
extern T0*ms614_296Abc614A;
extern T0*ms852_1942675017Abc852A;
extern T0*ms101_40Abc606A;
extern T0*ms97_327Abc97A;
extern T0*ms784_44739Abc784A;
extern T0*ms614_77773Abc614A;
extern T0*ms30_1690381566Abc30A;
extern T0*ms772_602797481Abc772A;
extern T0*ms101_2022630Abc101A;
extern T0*ms29_54688766Abc29A;
extern T0*ms591_1212159Abc591A;
extern T0*ms101_21391495Abc101A;
extern T0*ms29_1831158645Abc29A;
extern T0*ms29_240810599Abc29A;
extern T0*ms97_0Abc97S;
extern T0*ms101_1540494783Abc101A;
extern T0*ms30_414461Abc30A;
extern T0*ms97_0Abc97R;
extern T0*ms101_1476Abc101A;
extern T0*ms97_0Abc97Q;
extern T0*ms97_0Abc97P;
extern T0*ms97_0Abc97O;
extern T0*ms97_0Abc97N;
extern T0*ms97_0Abc97M;
extern T0*ms101_6355Abc101A;
extern T0*ms97_0Abc97L;
extern T0*ms97_0Abc97K;
extern T0*ms97_0Abc97J;
extern T0*ms97_0Abc97I;
extern T0*ms784_1831440704Abc784A;
extern T0*ms97_0Abc97H;
extern T0*ms97_0Abc97G;
extern T0*ms97_0Abc97F;
extern T0*ms97_0Abc97E;
extern T0*ms97_0Abc97D;
extern T0*ms97_0Abc97C;
extern T0*ms97_0Abc97B;
extern T0*ms97_0Abc97A;
extern T0*ms101_1836282258Abc101A;
extern T0*ms464_1961687Abc464A;
extern T0*ms95_1616517694Abc95A;
extern T0*ms97_0Abc96A;
extern T0*ms591_20240284Abc591A;
extern T0*ms29_180965447Abc29A;
extern T0*ms101_2055072316Abc101A;
extern T0*ms617_84Abc617A;
extern T0*ms101_10739979Abc101A;
extern T0*ms96_215Abc673A;
extern T0*ms28_329Abc28A;
extern T0*ms97_0Abc89A;
extern T0*ms28_334Abc28A;
extern T0*ms90_1700247488Abc90A;
extern T0*ms29_954385774Abc29A;
extern T0*ms101_441192857Abc101A;
extern T0*ms101_7918258Abc101A;
extern T0*ms101_1981256377Abc101A;
extern T0*ms97_0Abc91A;
extern T0*ms113_322Abc681A;
extern T0*ms784_15405Abc784A;
extern T0*ms113_322Abc681B;
extern T0*ms97_69851Abc97A;
extern T0*ms97_69851Abc97B;
extern T0*ms614_111269879Abc614A;
extern T0*ms101_1988895671Abc101A;
extern T0*ms101_1988895671Abc101B;
extern T0*ms97_0Abc78A;
extern T0*ms617_1216329562Abc617A;
extern T0*ms617_1216329562Abc617B;
extern T0*ms29_761722990Abc29A;
extern T0*ms784_7374Abc784A;
extern T0*ms626_1901947715Abc626A;
extern T0*ms101_389672Abc101A;
extern T0*ms396_902517583Abc349A;
extern T0*ms96_1378502623Abc96B;
extern T0*ms96_1378502623Abc96A;
extern T0*ms591_68284Abc591A;
extern T0*ms90_175744666Abc90A;
extern T0*ms96_646243744Abc96A;
extern T0*ms617_8436Abc617C;
extern T0*ms28_329Abc852A;
extern T0*ms28_334Abc852A;
extern T0*ms617_8436Abc617B;
extern T0*ms28_329Abc852B;
extern T0*ms28_334Abc852B;
extern T0*ms101_3457Abc101A;
extern T0*ms617_8436Abc617A;
extern T0*ms101_1682814572Abc101A;
extern T0*ms363_3337Abc363A;
extern T0*ms552_3557Abc552A;
extern T0*ms591_208313786Abc591A;
extern T0*ms608_550508910Abc608A;
extern T0*ms30_2185421Abc658A;
extern T0*ms785_27492334Abc785A;
extern T0*ms614_870841390Abc614B;
extern T0*ms614_870841390Abc614A;
extern T0*ms101_114Abc101A;
extern T0*ms97_8976Abc97A;
extern T0*ms31_2191641Abc31A;
extern T0*ms97_530877013Abc97A;
extern T0*ms469_123Abc469A;
extern T0*ms101_308580Abc101A;
extern T0*ms608_105Abc608A;
extern T0*ms29_126Abc29A;
extern T0*ms29_84881Abc29A;
extern T0*ms101_533301931Abc101A;
extern T0*ms591_436987Abc591A;
extern T0*ms852_1439959996Abc852A;
extern T0*ms786_730579755Abc786A;
extern T0*ms591_1115628985Abc591A;
extern T0*ms96_295542551Abc96A;
extern T0*ms101_1271Bbc101A;
extern T0*ms25_1950832492Abc25A;
extern T0*ms606_23186700Abc606A;
extern T0*ms101_726728775Abc101A;
extern T0*ms30_16942Abc30A;
extern T0*ms784_47598300Abc784A;
extern T0*ms101_1364588829Abc101A;
extern T0*ms614_252669317Abc614A;
extern T0*ms29_180965424Abc29A;
extern T0*ms396_902517583Abc387A;
extern T0*ms608_32175Abc608A;
extern T0*ms613_259021955Abc613A;
extern T0*ms525_2014364610Abc525A;
extern T0*ms280_7207Abc728A;
extern T0*ms30_2233396Abc30A;
extern T0*ms30_10703002Abc30A;
extern T0*ms280_7207Abc681B;
extern T0*ms280_7207Abc681A;
extern T0*ms279_87520Abc279B;
extern T0*ms90_543076045Abc90A;
extern T0*ms279_87520Abc279A;
extern T0*ms90_543076045Abc90B;
extern T0*ms396_902517583Abc396A;
extern T0*ms30_77350Abc30A;
extern T0*ms613_1374304640Abc613A;
extern T0*ms29_43Abc29A;
extern T0*ms29_38Abc29A;
extern T0*ms101_1934139Abc101A;
extern T0*ms101_1934139Abc101B;
extern T0*ms101_1934139Abc101C;
extern T0*ms101_209121Abc101A;
extern T0*ms29_60Abc608A;
extern T0*ms622_399591Abc622A;
extern T0*ms786_1682659883Abc786A;
extern T0*ms608_169510Abc608A;
extern T0*ms97_15721Abc97A;
extern T0*ms101_392938270Abc101A;
extern T0*ms784_61699Abc784A;
extern T0*ms101_2545Abc101A;
extern T0*ms784_61699Abc784B;
extern T0*ms396_29662Abc101A;
extern T0*ms101_1964848975Abc101A;
extern T0*ms101_204Abc101A;
extern T0*ms101_8880Abc101A;
extern T0*ms97_5578901Abc97A;
extern T0*ms89_331100035Abc89A;
extern T0*ms101_526Abc101A;
extern T0*ms772_65332Abc772A;
extern T0*ms101_1911279888Abc101A;
extern T0*ms673_1043Abc673A;
extern T0*ms97_207986277Abc97A;
extern T0*ms29_77832Abc29A;
extern T0*ms784_1173325215Abc784A;
extern T0*ms591_2028521226Abc591A;
extern T0*ms29_170256464Abc29A;
extern T0*ms30_88336Abc30A;
extern T0*ms591_1111279623Abc591A;
extern T0*ms463_1917908900Abc463A;
extern T0*ms613_1240206596Abc613A;
extern T0*ms101_1450568746Abc101A;
extern T0*ms29_324411Abc29A;
extern T0*ms622_448205Abc622A;
extern T0*ms511_372Abc614B;
extern T0*ms511_372Abc614A;
extern T0*ms101_351488799Abc101A;
extern T0*ms613_40031469Abc613A;
extern T0*ms29_279656751Abc29A;
extern T0*ms591_759184012Abc591A;
extern T0*ms363_4488096Abc363A;
extern T0*ms784_171955Abc784A;
extern T0*ms89_1587734026Abc89A;
extern T0*ms772_1932458562Abc772A;
extern T0*ms101_988839165Abc101A;
extern T0*ms106_270Abc415A;
extern T0*ms29_185934072Abc29A;
extern T0*ms613_1197879602Abc613A;
extern T0*ms782_81437Abc782A;
extern T0*ms591_1367040625Abc591A;
extern T0*ms30_661Abc30A;
extern T0*ms96_215Abc96A;
extern T0*ms101_506210947Abc101A;
extern T0*ms96_215Abc96B;
extern T0*ms89_2047201942Abc89A;
extern T0*ms29_55924644Abc29A;
extern T0*ms674_1047Abc674A;
extern T0*ms30_17715Abc30A;
extern T0*ms29_1501191Abc29A;
extern T0*ms591_283801480Abc591A;
extern T0*ms608_1631421108Abc608A;
extern T0*ms101_2382Abc591A;
extern T0*ms30_77350Abc371A;
extern T0*ms89_1011636926Abc89A;
extern T0*ms784_407207Abc784A;
extern T0*ms101_523400916Abc101A;
extern T0*ms615_529853775Abc615A;
extern T0*ms97_448859Abc97A;
extern T0*ms558_1476287022Abc558A;
extern T0*ms614_153655Abc614A;
extern T0*ms613_1384921237Abc613A;
extern T0*ms617_5313505Abc617A;
extern T0*ms617_5313505Abc617B;
extern T0*ms613_49680837Abc613A;
extern T0*ms101_941548611Abc101A;
extern T0*ms101_941548611Abc101B;
extern T0*ms101_941548611Abc101C;
extern T0*ms29_48958735Abc29A;
extern T0*ms96_215Abc363A;
extern T0*ms101_2382Abc620H;
extern T0*ms101_2382Abc620G;
extern T0*ms101_2382Abc620F;
extern T0*ms25_1525604536Abc25A;
extern T0*ms101_2382Abc620E;
extern T0*ms29_9712276Abc29A;
extern T0*ms101_2382Abc620D;
extern T0*ms591_4434071Abc591A;
extern T0*ms101_2382Abc620C;
extern T0*ms101_2382Abc620B;
extern T0*ms101_2382Abc620A;
extern T0*ms29_1639475718Abc29A;
extern T0*ms30_16942Abc460B;
extern T0*ms113_27561173Abc113A;
extern T0*ms30_16942Abc460A;
extern T0*ms608_117385886Abc608A;
extern T0*ms30_17221Abc30A;
extern T0*ms97_2440Abc97A;
extern T0*ms101_2382Abc613A;
extern T0*ms511_372Abc511A;
extern T0*ms784_54686284Abc784A;
extern T0*ms30_212160365Abc30A;
extern T0*ms29_49076823Abc29A;
extern T0*ms608_1965730Abc608A;
extern T0*ms608_1965730Abc608B;
extern T0*ms559_1710309Abc559A;
extern T0*ms29_1979951Abc29A;
extern T0*ms404_835850355Abc404A;
extern T0*ms101_862271166Abc101A;
extern T0*ms29_1202672333Abc29A;
extern T0*ms97_334Abc97A;
extern T0*ms31_1777434714Abc31A;
extern T0*ms101_2382Abc552A;
extern T0*ms29_15448Abc29A;
extern T0*ms590_605650769Abc590A;
extern T0*ms29_296Abc392A;
extern T0*ms544_32450971Abc544A;
extern T0*ms101_273430505Abc101A;
extern T0*ms30_436911Abc557A;
extern T0*ms617_5313530Abc617A;
extern T0*ms101_1273572186Abc101A;
extern T0*ms101_1471782099Abc101A;
extern T0*ms29_9713026Abc29A;
extern T0*ms606_1285Abc606A;
extern T0*ms30_9790205Abc640A;
extern T0*ms591_247Abc591A;
extern T0*ms614_6810Abc614A;
extern T0*ms30_1975394Abc30A;
extern T0*ms614_6810Abc614B;
extern T0*ms96_1162901343Abc96A;
extern T0*ms267_305465997Abc267A;
extern T0*ms101_1136523103Abc101A;
extern T0*ms591_1566831588Abc591A;
extern T0*ms97_395994Abc97A;
extern T0*ms606_1285Abc615A;
extern T0*ms101_341357508Abc101A;
extern T0*ms30_3085Abc30A;
extern T0*ms278_411001267Abc278A;
extern T0*ms29_572288437Abc29A;
extern T0*ms101_284Abc101A;
extern T0*ms101_1220584686Abc101A;
extern T0*ms29_548331507Abc29A;
extern T0*ms101_273430530Abc101A;
extern T0*ms29_64Abc29A;
extern T0*ms101_273430530Abc101B;
extern T0*ms101_1170250908Abc101A;
extern T0*ms101_47278Abc101A;
extern T0*ms101_228498053Abc101A;
extern T0*ms101_1493Abc101A;
extern T0*ms614_340514Abc614A;
extern T0*ms89_49203356Abc89A;
extern T0*ms359_1686701Abc359A;
extern T0*ms101_724500276Abc101A;
extern T0*ms29_247239028Abc29A;
extern T0*ms29_1947419Abc29A;
extern T0*ms587_1152812249Abc587A;
extern T0*ms29_447851Abc29A;
extern T0*ms614_37173080Abc614A;
extern T0*ms614_2118444283Abc614A;
extern T0*ms608_206626Abc608A;
extern T0*ms614_670Abc614B;
extern T0*ms29_1937220099Abc29A;
extern T0*ms614_670Abc614A;
extern T0*ms29_1944903Abc29A;
extern T0*ms101_1206795525Abc101A;
extern T0*ms101_36951Abc607A;
extern T0*ms90_332623945Abc90A;
extern T0*ms613_1994852Abc613A;
extern T0*ms613_1994852Abc613B;
extern T0*ms30_10876026Abc30A;
extern T0*ms613_1994852Abc613C;
extern T0*ms101_1130602126Abc101A;
extern T0*ms29_39154229Abc29A;
extern T0*ms544_1747846Abc544A;
extern T0*ms113_1711985232Abc113A;
extern T0*ms615_388821092Abc615A;
extern T0*ms101_1642367158Abc101A;
extern T0*ms101_1642367158Abc101B;
extern T0*ms101_1642367158Abc101C;
extern T0*ms101_1642367158Abc101D;
extern T0*ms101_1642367158Abc101E;
extern T0*ms591_1728089446Abc591A;
extern T0*ms615_1431664982Abc615A;
extern T0*ms267_139303084Abc30A;
extern T0*ms622_2395Abc622A;
extern T0*ms101_12188Abc101A;
extern T0*ms608_28032126Abc608D;
extern T0*ms608_28032126Abc608C;
extern T0*ms608_28032126Abc608B;
extern T0*ms101_1295Bbc608B;
extern T0*ms608_28032126Abc608A;
extern T0*ms606_7227375Abc606A;
extern T0*ms101_1295Bbc608A;
extern T0*ms101_1295Bbc558A;
extern T0*ms101_1946737844Abc101A;
extern T0*ms591_560761477Abc591A;
extern T0*ms101_511465169Abc101A;
extern T0*ms613_1231257120Abc613A;
extern T0*ms784_6614Abc784A;
extern T0*ms620_474Abc620A;
extern T0*ms96_1483967746Abc96A;
extern T0*ms559_1290234494Abc559A;
extern T0*ms97_1335Abc97A;
extern T0*ms90_348041349Abc90A;
extern T0*ms465_413651Abc465A;
extern T0*ms97_240Abc89A;
extern T0*ms615_91Abc615A;
extern T0*ms606_162019Abc606A;
extern T0*ms614_17743865Abc614A;
extern T0*ms614_17743865Abc614B;
extern T0*ms29_1206543966Abc29A;
extern T0*ms97_240Abc97A;
extern T0*ms113_1430004157Abc113A;
extern T0*ms29_1300046706Abc29A;
extern T0*ms101_1110850242Abc101A;
extern T0*ms617_646768902Abc617A;
extern T0*ms29_1395184171Abc29A;
extern T0*ms591_1694771411Abc591A;
extern T0*ms591_1694771411Abc591B;
extern T0*ms101_802495724Abc101A;
extern T0*ms101_1586354711Abc101A;
extern T0*ms101_120095614Abc101A;
extern T0*ms89_12362Abc30A;
extern T0*ms101_365905049Abc101A;
extern T0*ms30_640Abc30A;
extern T0*ms96_5615Abc96A;
extern T0*ms588_161665Abc588A;
extern T0*ms280_7207Abc270A;
extern T0*ms89_2001191Abc89A;
extern T0*ms84_620670284Abc84A;
extern T0*ms101_1307483215Abc101A;
extern T0*ms614_1671074150Abc614B;
extern T0*ms614_1671074150Abc614A;
extern T0*ms786_576790349Abc786A;
extern T0*ms97_592781506Abc97A;
extern T0*ms97_1067454155Abc97A;
extern T0*ms93_1449185201Abc93A;
extern T0*ms591_2054563574Abc591A;
extern T0*ms29_705019679Abc29A;
extern T0*ms478_672729595Abc478A;
extern T0*ms608_380218Abc608A;
extern T0*ms608_380168Abc608A;
extern T0*ms464_1577658176Abc464A;
extern T0*ms614_437573617Abc614A;
extern T0*ms101_401124480Abc101A;
extern T0*ms29_1115958189Abc29A;
extern T0*ms784_7296Abc784A;
extern T0*ms101_1793244543Abc101A;
extern T0*ms617_90405963Abc617A;
extern T0*ms29_859431564Abc29A;
extern T0*ms30_16001Abc30A;
extern T0*ms363_18257Abc363A;
extern T0*ms30_87466Abc30A;
extern T0*ms29_43Abc615A;
extern T0*ms97_2833Abc97A;
extern T0*ms29_43Abc615B;
extern T0*ms30_78002Abc418B;
extern T0*ms30_78002Abc418A;
extern T0*ms606_920950Abc606A;
extern T0*ms101_824324978Abc101A;
extern T0*ms101_1754886761Abc101A;
extern T0*ms614_842552Abc614A;
extern T0*ms97_50863580Abc97A;
extern T0*ms30_10648581Abc425A;
extern T0*ms29_880412606Abc29A;
extern T0*ms614_884813300Abc614A;
extern T0*ms30_10648581Abc372A;
extern T0*ms30_76226Abc30A;
extern T0*ms97_8801Abc97A;
extern T0*ms608_25900Abc608A;
extern T0*ms267_416541Abc267A;
extern T0*ms613_54714979Abc613A;
extern T0*ms608_840791Abc608A;
extern T0*ms527_902076231Abc527A;
extern T0*ms101_6559Abc101B;
extern T0*ms101_6559Abc101A;
extern T0*ms772_1000694404Abc772A;
extern T0*ms29_361Abc29A;
extern T0*ms113_210141519Abc113A;
extern T0*ms558_11381817Abc588A;
extern T0*ms101_397592212Abc101A;
extern T0*ms653_1257368965Abc653A;
extern T0*ms591_2142146116Abc591A;
extern T0*ms614_535Abc614A;
extern T0*ms89_12362Abc89A;
extern T0*ms340_1186844731Abc340A;
extern T0*ms614_32650Abc614A;
extern T0*ms614_32650Abc614B;
extern T0*ms93_1880881887Abc93A;
extern T0*ms101_1040899642Abc101A;
extern T0*ms29_1607595572Abc29A;
extern T0*ms97_17494489Abc97A;
extern T0*ms96_10Abc101A;
extern T0*ms552_2007779419Abc552A;
extern T0*ms96_10Abc101B;
extern T0*ms614_162070Abc614A;
extern T0*ms614_1338608648Abc614A;
extern T0*ms615_1102979958Abc615A;
extern T0*ms785_41300Abc785A;
extern T0*ms96_10Abc105A;
extern T0*ms558_11381817Abc558A;
extern T0*ms784_526175446Abc784A;
extern T0*ms89_2047202317Abc89A;
extern T0*ms89_2047202317Abc89B;
extern T0*ms782_130382376Abc782A;
extern T0*ms590_1199620901Abc590A;
extern T0*ms101_323348966Abc101A;
extern T0*ms617_124454155Abc617A;
extern T0*ms620_294Abc620A;
extern T0*ms617_300665Abc617A;
extern T0*ms108_300594Abc89A;
extern T0*ms101_1164920984Abc101A;
extern T0*ms29_1297876698Abc29A;
extern T0*ms608_264Abc608D;
extern T0*ms30_10208843Abc371A;
extern T0*ms608_264Abc608C;
extern T0*ms608_264Abc608B;
extern T0*ms101_526Abc618A;
extern T0*ms608_259Abc608A;
extern T0*ms608_264Abc608A;
extern T0*ms89_2141291014Abc89A;
extern T0*ms614_42916Abc614A;
extern T0*ms614_42916Abc614B;
extern T0*ms97_341Abc97A;
extern T0*ms101_227Abc101A;
extern T0*ms784_101Abc784A;
extern T0*ms784_479982486Abc784B;
extern T0*ms784_479982486Abc784A;
extern T0*ms679_559Abc679A;
extern T0*ms679_559Abc679B;
extern T0*ms90_1038536453Abc90A;
extern T0*ms97_262628264Abc97A;
extern T0*ms96_195Abc96A;
extern T0*ms463_522818189Abc463A;
extern T0*ms101_526Abc591A;
extern T0*ms613_101227749Abc613A;
extern T0*ms97_2178Abc97A;
extern T0*ms97_143937264Abc97A;
extern T0*ms614_15533Abc614A;
extern T0*ms280_60894Abc280A;
extern T0*ms30_69805Abc30A;
extern T0*ms614_6995Abc614A;
extern T0*ms101_997623147Abc101A;
extern T0*ms606_7224500Abc606A;
extern T0*ms101_781060556Abc101A;
extern T0*ms614_204519611Abc614A;
extern T0*ms29_1209184326Abc29A;
extern T0*ms468_1753Abc468A;
extern T0*ms558_244Abc558B;
extern T0*ms558_244Abc558A;
extern T0*ms784_3209Abc784A;
extern T0*ms29_62Abc29A;
extern T0*ms30_1168210079Abc30A;
extern T0*ms726_16139Abc726A;
extern T0*ms101_2075Abc101A;
extern T0*ms782_2082029949Abc782A;
extern T0*ms101_207160501Abc101A;
extern T0*ms101_114Abc784A;
extern T0*ms606_112304676Abc606A;
extern T0*ms29_1744612358Abc29A;
extern T0*ms606_2187585Abc606A;
extern T0*ms782_1126647264Abc782A;
extern T0*ms29_1501191Abc365A;
extern T0*ms445_114137597Abc445A;
extern T0*ms25_1461786092Abc25A;
extern T0*ms674_1452Abc674A;
extern T0*ms101_2382Abc101A;
extern T0*ms784_1523807481Abc784A;
extern T0*ms101_317Abc101A;
extern T0*ms614_162010Abc615A;
extern T0*ms101_272Abc101A;
extern T0*ms558_1747685533Abc558A;
extern T0*ms614_162010Abc614A;
extern T0*ms89_611Abc648A;
extern T0*ms96_485115581Abc96A;
extern T0*ms101_308542101Abc101A;
extern T0*ms89_611Abc645A;
extern T0*ms101_561947515Abc101A;
extern T0*ms29_243411981Abc29A;
extern T0*ms29_1603529235Abc29A;
extern T0*ms101_1195084695Abc101A;
extern T0*ms591_10937200Abc591A;
extern T0*ms101_1065942137Abc101A;
extern T0*ms784_69352117Abc784A;
extern T0*ms784_69352117Abc784B;
extern T0*ms101_1572014572Abc101A;
extern T0*ms591_8475Abc591A;
extern T0*ms97_1255802680Abc97A;
extern T0*ms29_2098363273Abc29A;
extern T0*ms591_242108838Abc591A;
extern T0*ms29_1744399653Abc29A;
extern T0*ms101_1630601156Abc101A;
extern T0*ms30_661Abc360A;
extern T0*ms29_827429162Abc29A;
extern T0*ms96_298390Abc96A;
extern T0*ms31_1994621Abc31A;
extern T0*ms113_195766720Abc113A;
extern T0*ms101_1042003640Abc101A;
extern T0*ms29_90544Abc29A;
extern T0*ms469_1832Abc469A;
extern T0*ms267_376816512Abc267A;
extern T0*ms590_619030689Abc590A;
extern T0*ms30_10208843Abc30A;
extern T0*ms101_273431355Abc101A;
extern T0*ms101_273431355Abc101B;
extern T0*ms29_55040341Abc29A;
extern T0*ms270_1136866084Abc270A;
extern T0*ms101_284Abc559A;
extern T0*ms784_1288623074Abc784A;
extern T0*ms614_1651828280Abc614A;
extern T0*ms107_899910547Abc107A;
extern T0*ms30_1730514379Abc30A;
extern T0*ms82_1554312113Abc82A;
extern T0*ms31_388005040Abc31A;
extern T0*ms591_1992825354Abc591A;
extern T0*ms101_284Abc617A;
extern T0*ms101_5395053Abc101A;
extern T0*ms101_5395053Abc101B;
extern T0*ms26_1090Abc113A;
extern T0*ms403_1719402393Abc403A;
extern T0*ms101_5395053Abc101C;
extern T0*ms26_1090Abc113B;
extern T0*ms26_1090Abc113C;
extern T0*ms26_1090Abc113D;
extern T0*ms96_388205767Abc96A;
extern T0*ms101_1350760769Abc101A;
extern T0*ms605_230Abc614E;
extern T0*ms97_8889Abc97A;
extern T0*ms605_230Abc614D;
extern T0*ms605_230Abc614C;
extern T0*ms605_230Abc614B;
extern T0*ms264_1587749191Abc264A;
extern T0*ms605_230Abc614A;
extern T0*ms591_1426099398Abc591A;
extern T0*ms30_3415Abc30A;
extern T0*ms29_33120277Abc29A;
extern T0*ms30_10990481Abc30A;
extern T0*ms605_230Abc605A;
extern T0*ms784_236525Abc784A;
extern T0*ms591_1032053803Abc591A;
extern T0*ms101_284Abc591A;
extern T0*ms91_618869258Abc91A;
extern T0*ms105_69115705Abc105A;
extern T0*ms101_426087775Abc101A;
extern T0*ms101_1295Bbc101A;
extern T0*ms90_1226144723Abc90A;
extern T0*ms101_228498053Abc591A;
extern T0*ms620_471Abc620A;
extern T0*ms29_53339Abc29A;
extern T0*ms591_832670Abc591A;
extern T0*ms620_471Abc614A;
extern T0*ms29_42134669Abc29A;
extern T0*ms113_44975894Abc113A;
extern T0*ms101_950675891Abc101A;
extern T0*ms101_33475Abc101A;
extern T0*ms90_432335312Abc90A;
extern T0*ms31_10714216Abc31A;
extern T0*ms389_376Abc726A;
extern T0*ms614_265Abc614B;
extern T0*ms614_265Abc614A;
extern T0*ms617_41131Abc617A;
extern T0*ms464_852437Abc464A;
extern T0*ms90_1836169859Abc90A;
extern T0*ms608_1060489498Abc608A;
extern T0*ms95_580488532Abc95A;
extern T0*ms101_585944489Abc101A;
extern T0*ms784_1396798042Abc784A;
extern T0*ms97_373286592Abc97A;
extern T0*ms101_382Abc101A;
extern T0*ms101_382Abc101B;
extern T0*ms784_775406525Abc784A;
extern T0*ms280_300Abc608A;
extern T0*ms101_2060090728Abc101A;
extern T0*ms784_3209Abc615A;
extern T0*ms30_670Abc30A;
extern T0*ms97_13028Abc97A;
extern T0*ms29_7095298Abc29A;
extern T0*ms30_2073386Abc358A;
extern T0*ms30_2073386Abc358B;
extern T0*ms101_900404594Abc101A;
extern T0*ms280_300Abc617A;
extern T0*ms280_2082988666Abc280A;
extern T0*ms29_1673348567Abc29A;
extern T0*ms614_9980719Abc614B;
extern T0*ms614_9980719Abc614A;
extern T0*ms26_63Abc26A;
extern T0*ms25_1325879523Abc25A;
extern T0*ms554_13424808Abc554A;
extern T0*ms608_4179775Abc608A;
extern T0*ms366_360Abc101A;
extern T0*ms591_491029751Abc591A;
extern T0*ms614_160146Abc614B;
extern T0*ms614_160146Abc614A;
extern T0*ms608_366Abc608A;
extern T0*ms608_1832703325Abc608A;
extern T0*ms608_366Abc606B;
extern T0*ms608_366Abc606A;
extern T0*ms101_660780608Abc101A;
extern T0*ms608_6305Abc608A;
extern T0*ms590_340114884Abc590A;
extern T0*ms30_1747646688Abc30A;
extern T0*ms101_860532685Abc101A;
extern T0*ms101_719604853Abc101A;
extern T0*ms101_277Bbc101A;
extern T0*ms608_6305Abc614A;
extern T0*ms784_26635163Abc784A;
extern T0*ms101_958964069Abc101A;
extern T0*ms614_168532Abc614A;
extern T0*ms101_1661632742Abc101A;
extern T0*ms29_9529116Abc29A;
extern T0*ms101_1240218271Abc101A;
extern T0*ms101_495363549Abc101A;
extern T0*ms97_84381Abc97A;
extern T0*ms97_51699930Abc97A;
extern T0*ms784_90782Abc784A;
extern T0*ms784_90782Abc784B;
extern T0*ms617_1113554587Abc617A;
extern T0*ms784_90782Abc784C;
extern T0*ms784_90782Abc784D;
extern T0*ms101_8260Abc101A;
extern T0*ms29_577213499Abc29A;
extern T0*ms613_249330648Abc613A;
extern T0*ms101_738771309Abc101A;
extern T0*ms591_1125599189Abc591A;
extern T0*ms101_1377391529Abc101A;
extern T0*ms101_772432310Abc101A;
extern T0*ms784_1772045883Abc784A;
extern T0*ms96_170061979Abc96A;
extern T0*ms30_1473988901Abc30A;
extern T0*ms89_23410Abc89A;
extern T0*ms25_1889925553Abc25A;
extern T0*ms617_754574290Abc617A;
extern T0*ms31_914215870Abc31A;
extern T0*ms29_567319812Abc29A;
extern T0*ms613_614557109Abc613A;
extern T0*ms852_1760616840Abc852A;
extern T0*ms614_45355Abc614A;
extern T0*ms101_284Abc784A;
extern T0*ms101_284Abc784B;
extern T0*ms101_284Abc784C;
extern T0*ms30_265093627Abc30A;
extern T0*ms591_2111741Abc591A;
extern T0*ms101_284Abc784D;
extern T0*ms725_89481Abc608A;
extern T0*ms30_945182441Abc30A;
extern T0*ms608_504830035Abc608A;
extern T0*ms784_1927425Abc784A;
extern T0*ms613_689812670Abc613A;
extern T0*ms675_1499315956Abc675A;
extern T0*ms603_5395074Abc603A;
extern T0*ms614_933501Abc614A;
extern T0*ms552_38182Abc552A;
extern T0*ms29_60Abc29A;
extern T0*ms29_1856946950Abc29A;
extern T0*ms29_636Abc29A;
extern T0*ms101_1982839385Abc101A;
extern T0*ms606_36126743Abc606A;
extern T0*ms96_1836299930Abc96A;
extern T0*ms267_2100317873Abc267A;
extern T0*ms491_1083118122Abc491A;
extern T0*ms615_804085Abc615A;
extern T0*ms615_804085Abc615B;
extern T0*ms617_5279655Abc617A;
extern T0*ms101_374291339Abc101A;
extern T0*ms613_49917876Abc613A;
extern T0*ms606_36122993Abc606A;
extern T0*ms613_35343969Abc613A;
extern T0*ms101_240Abc101A;
extern T0*ms606_226Abc608B;
extern T0*ms606_226Abc608A;
extern T0*ms603_4571057Abc603A;
extern T0*ms606_226Abc606B;
extern T0*ms101_2039472678Abc101A;
extern T0*ms606_226Abc606A;
extern T0*ms608_80037Abc617B;
extern T0*ms591_585895143Abc591A;
extern T0*ms608_80037Abc617A;
extern T0*ms267_1091711046Abc267A;
extern T0*ms591_246Abc101A;
extern T0*ms591_246Abc101B;
extern T0*ms677_355003Abc677A;
extern T0*ms614_1530Abc614A;
extern T0*ms31_10554609Abc31A;
extern T0*ms29_1447702Abc29A;
extern T0*ms29_197002168Abc29A;
extern T0*ms608_80037Abc608A;
extern T0*ms101_934Abc101A;
extern T0*ms97_2009849Abc97A;
extern T0*ms615_269141588Abc615A;
extern T0*ms101_27063164Abc101A;
extern T0*ms614_244793715Abc614B;
extern T0*ms614_244793715Abc614A;
extern T0*ms101_1154403080Abc101A;
extern T0*ms608_236Abc608A;
extern T0*ms101_2109816196Abc101B;
extern T0*ms26_1090Abc26A;
extern T0*ms101_2109816196Abc101A;
extern T0*ms558_1208522276Abc558A;
extern T0*ms725_89481Abc725A;
extern T0*ms608_236Abc606A;
extern T0*ms101_1065652086Abc101A;
extern T0*ms279_740Abc279A;
extern T0*ms279_740Abc279B;
extern T0*ms101_227Abc591A;
extern T0*ms614_2996Abc614A;
extern T0*ms614_2996Abc614B;
extern T0*ms608_1115076Abc608A;
extern T0*ms101_227Abc591B;
extern T0*ms97_2109537640Abc678B;
extern T0*ms614_2996Abc614C;
extern T0*ms97_2109537640Abc678A;
extern T0*ms101_1197714671Abc101A;
extern T0*ms614_2996Abc614D;
extern T0*ms101_1838958244Abc101A;
extern T0*ms617_32176Abc617A;
extern T0*ms101_2096892436Abc101A;
extern T0*ms101_273430505Abc97A;
extern T0*ms107_1797674551Abc107A;
extern T0*ms97_1775Abc97A;
extern T0*ms614_5654700Abc614A;
extern T0*ms97_297Abc852A;
extern T0*ms614_520388145Abc614B;
extern T0*ms614_520388145Abc614A;
extern T0*ms101_48520827Abc101A;
extern T0*ms30_11251026Abc30A;
extern T0*ms608_521905705Abc608A;
extern T0*ms101_7869Abc614G;
extern T0*ms101_7869Abc614F;
extern T0*ms101_7869Abc614E;
extern T0*ms101_7869Abc614D;
extern T0*ms101_7869Abc614C;
extern T0*ms101_7869Abc614B;
extern T0*ms101_7869Abc614A;
extern T0*ms101_1492394528Abc101A;
extern T0*ms101_3475Abc591C;
extern T0*ms101_7869Abc613A;
extern T0*ms90_744085684Abc90A;
extern T0*ms29_220Abc29A;
extern T0*ms101_1746979137Abc101A;
extern T0*ms101_3475Abc591B;
extern T0*ms101_3475Abc591A;
extern T0*ms29_1498845794Abc29A;
extern T0*ms101_7869Abc606B;
extern T0*ms101_7869Abc606A;
extern T0*ms29_1247Abc29A;
extern T0*ms90_85511833Abc90A;
extern T0*ms97_129391217Abc97A;
extern T0*ms29_253393261Abc29A;
extern T0*ms614_25969530Abc614A;
extern T0*ms267_767646015Abc267A;
extern T0*ms614_32456Abc614A;
extern T0*ms101_419316052Abc101A;
extern T0*ms389_5912Abc389A;
extern T0*ms608_16510Abc784A;
extern T0*ms366_360Abc366A;
extern T0*ms558_1476281050Abc558A;
extern T0*ms101_984785217Abc101A;
extern T0*ms101_1737592965Abc101A;
extern T0*ms101_30942Abc101A;
extern T0*ms782_742356016Abc782A;
extern T0*ms28_8897Abc28A;
extern T0*ms606_1097836905Abc606B;
extern T0*ms606_1097836905Abc606A;
extern T0*ms614_77767Abc614A;
extern T0*ms89_52979396Abc89A;
extern T0*ms267_1476966395Abc267A;
extern T0*ms101_644847010Abc608A;
extern T0*ms614_1824713404Abc614A;
extern T0*ms97_539873441Abc97A;
extern T0*ms101_1680956616Abc101A;
extern T0*ms363_1809213019Abc363A;
extern T0*ms786_958639438Abc786A;
extern T0*ms617_7006Abc617A;
extern T0*ms101_57150800Abc101A;
extern T0*ms608_1348915394Abc608A;
extern T0*ms280_10926944Abc280A;
extern T0*ms267_527202963Abc267A;
extern T0*ms96_1379717706Abc96A;
extern T0*ms112_287218105Abc112A;
extern T0*ms280_10926944Abc274A;
extern T0*ms29_2035472654Abc29A;
extern T0*ms97_3069Abc97A;
extern T0*ms26_1090Abc97A;
extern T0*ms26_1090Abc97B;
extern T0*ms101_1618833880Abc101A;
extern T0*ms97_120239233Abc97A;
extern T0*ms29_39002989Abc29A;
extern T0*ms30_264667428Abc30A;
extern T0*ms544_193194Abc544A;
extern T0*ms784_8624Abc784A;
extern T0*ms101_1743948446Abc101A;
extern T0*ms101_355630820Abc101A;
extern T0*ms101_5395053Abc604A;
extern T0*ms101_5395053Abc604B;
extern T0*ms101_273431355Abc559A;
extern T0*ms101_5395053Abc604C;
extern T0*ms554_5515Abc554A;
extern T0*ms29_7704337Abc29A;
extern T0*ms101_5395053Abc604D;
extern T0*ms101_5395053Abc604E;
extern T0*ms324_977955761Abc324A;
extern T0*ms101_5395053Abc604F;
extern T0*ms101_5395053Abc604G;
extern T0*ms606_167166Abc606A;
extern T0*ms101_5395053Abc604H;
extern T0*ms30_1992063831Abc30A;
extern T0*ms591_1489891655Abc591A;
extern T0*ms101_5395053Abc604I;
extern T0*ms101_5395053Abc604J;
extern T0*ms101_5395053Abc606A;
extern T0*ms363_35157672Abc363A;
extern T0*ms101_273431355Abc617A;
extern T0*ms30_3073Abc30A;
extern T0*ms360_1360462097Abc360A;
extern T0*ms613_453998Abc613A;
extern T0*ms614_4638080Abc614A;
extern T0*ms101_36460172Abc101A;
extern T0*ms101_1672511676Abc101A;
extern T0*ms114_570Abc114A;
extern T0*ms114_570Abc109A;
extern T0*ms114_570Abc114B;
extern T0*ms101_1919660703Abc101A;
extern T0*ms613_6550Abc613A;
extern T0*ms613_6550Abc608A;
extern T0*ms29_13194Abc29A;
extern T0*ms614_8485Abc614A;
extern T0*ms614_8485Abc614B;
extern T0*ms113_1071750288Abc113A;
extern T0*ms30_600Abc30A;
extern T0*ms30_3175Abc106A;
extern T0*ms614_6534Abc614A;
extern T0*ms591_9589368Abc591A;
extern T0*ms101_2237652Abc101A;
extern T0*ms603_23647157Abc603A;
extern T0*ms614_6534Abc615A;
extern T0*ms457_898426Abc457A;
extern T0*ms89_50040236Abc89B;
extern T0*ms89_50040236Abc89A;
extern T0*ms29_1739790308Abc29A;
extern T0*ms591_173055Abc591A;
extern T0*ms30_78263Abc470B;
extern T0*ms101_850522083Abc101A;
extern T0*ms101_273431355Abc591A;
extern T0*ms30_78263Abc470A;
extern T0*ms101_273431355Abc591B;
extern T0*ms101_273431355Abc591C;
extern T0*ms101_273431355Abc591D;
extern T0*ms97_99Abc852A;
extern T0*ms97_99Abc852B;
extern T0*ms101_77Abc101A;
extern T0*ms29_1553736287Abc29A;
extern T0*ms603_185428Abc603A;
extern T0*ms558_565060278Abc558A;
extern T0*ms97_8991Abc97B;
extern T0*ms113_349372Abc113A;
extern T0*ms97_8991Abc97A;
extern T0*ms113_2537Abc113A;
extern T0*ms424_299Abc424A;
extern T0*ms389_5912Abc608A;
extern T0*ms591_1642168697Abc591A;
extern T0*ms614_108351709Abc614A;
extern T0*ms101_5395053Abc591A;
extern T0*ms606_1188262106Abc606A;
extern T0*ms96_1225577982Abc96A;
extern T0*ms101_339308075Abc101A;
extern T0*ms25_1852009437Abc25A;
extern T0*ms30_3645Abc30A;
extern T0*ms30_3595Abc30A;
extern T0*ms29_50778415Abc29A;
extern T0*ms617_2117730851Abc617A;
extern T0*ms101_2142659303Abc101A;
extern T0*ms101_17480Abc101A;
extern T0*ms101_17480Abc101B;
extern T0*ms101_1201497496Abc101A;
extern T0*ms29_55926626Abc29A;
extern T0*ms101_382Abc608A;
extern T0*ms591_558682149Abc591A;
extern T0*ms101_382Abc608B;
extern T0*ms101_382Abc608C;
extern T0*ms101_3393Abc101A;
extern T0*ms101_162838175Abc101A;
extern T0*ms267_929353692Abc267A;
extern T0*ms101_162838175Abc101B;
extern T0*ms101_162838175Abc101C;
extern T0*ms784_687744958Abc784A;
extern T0*ms29_65574Abc437A;
extern T0*ms101_1580612071Abc101A;
extern T0*ms97_15828Abc97A;
extern T0*ms101_18131599Abc591A;
extern T0*ms558_15019Abc558A;
extern T0*ms614_714188879Abc614A;
extern T0*ms603_185453Abc603A;
extern T0*ms603_185448Abc603A;
extern T0*ms559_237Abc559A;
extern T0*ms591_472574902Abc591A;
extern T0*ms26_1090Abc676A;
extern T0*ms366_360Abc608A;
extern T0*ms31_234165132Abc31A;
extern T0*ms614_1214258443Abc614A;
extern T0*ms614_829308144Abc614A;
extern T0*ms89_18150Abc101A;
extern T0*ms89_18150Abc101B;
extern T0*ms782_306811962Abc782A;
extern T0*ms101_1417Abc101A;
extern T0*ms590_197373672Abc590A;
extern T0*ms590_197373672Abc590B;
extern T0*ms101_382Abc591A;
extern T0*ms101_382Abc591B;
extern T0*ms608_4766225Abc608A;
extern T0*ms101_382Abc591C;
extern T0*ms559_11241768Abc559A;
extern T0*ms90_256559978Abc90A;
extern T0*ms614_6946Abc614A;
extern T0*ms614_6946Abc614B;
extern T0*ms603_1312Abc603A;
extern T0*ms113_44975894Abc676A;
extern T0*ms29_89510Abc29A;
extern T0*ms784_1058430701Abc784A;
extern T0*ms26_579450289Abc26A;
extern T0*ms267_208962844Abc267A;
extern T0*ms603_185468Abc603A;
extern T0*ms784_1058430701Abc784B;
extern T0*ms608_16510Abc608A;
extern T0*ms608_958274895Abc608A;
extern T0*ms101_932172292Abc101A;
extern T0*ms97_7809Abc97A;
extern T0*ms29_48672249Abc29A;
extern T0*ms603_1312Abc614A;
extern T0*ms101_431043495Abc101D;
extern T0*ms613_6655Abc613A;
extern T0*ms101_431043495Abc101C;
extern T0*ms608_440120430Abc608A;
extern T0*ms90_92397395Abc90A;
extern T0*ms363_1317154036Abc363A;
extern T0*ms101_431043495Abc101B;
extern T0*ms101_431043495Abc101A;
extern T0*ms613_6655Abc614A;
extern T0*ms96_1265Abc278A;
extern T0*ms559_481249030Abc559A;
extern T0*ms101_499425548Abc101A;
extern T0*ms107_584218374Abc107A;
extern T0*ms29_2246041Abc29A;
extern T0*ms445_22861847Abc445A;
extern T0*ms101_240Abc464A;
extern T0*ms784_52067Abc784A;
extern T0*ms784_377Abc784B;
extern T0*ms784_377Abc784A;
extern T0*ms101_46350Abc101A;
extern T0*ms30_2234341Abc30A;
extern T0*ms606_570Abc606A;
extern T0*ms613_942808765Abc613A;
extern T0*ms101_700572143Abc101A;
extern T0*ms465_55156846Abc465A;
extern T0*ms97_301Abc97A;
extern T0*ms614_351281Abc614A;
extern T0*ms97_759424351Abc97A;
extern T0*ms101_6455Abc591A;
extern T0*ms473_2088401Abc473A;
extern T0*ms30_3601Abc30A;
extern T0*ms30_2065491Abc30A;
extern T0*ms97_6687Abc97B;
extern T0*ms97_6687Abc97A;
extern T0*ms101_6330Abc852A;
extern T0*ms29_1554777Abc29A;
extern T0*ms101_5395053Abc782A;
extern T0*ms101_5395053Abc782B;
extern T0*ms29_79341Abc29A;
extern T0*ms613_49806180Abc613A;
extern T0*ms101_5395053Abc782C;
extern T0*ms30_436196Abc30A;
extern T0*ms614_1679626025Abc614B;
extern T0*ms109_2120987577Abc109A;
extern T0*ms614_1679626025Abc614A;
extern T0*ms772_68224Abc772A;
extern T0*ms29_3075Abc29A;
extern T0*ms591_404651Abc591A;
extern T0*ms91_42698349Abc91A;
extern T0*ms591_1246790712Abc591A;
extern T0*ms340_646901709Abc340A;
extern T0*ms29_207673231Abc29A;
extern T0*ms784_2021999449Abc784A;
extern T0*ms784_2021999449Abc784B;
extern T0*ms614_1840Abc614A;
extern T0*ms614_1840Abc614B;
extern T0*ms97_1115301Abc97A;
extern T0*ms464_1809088081Abc464A;
extern T0*ms101_6455Abc615C;
extern T0*ms101_6455Abc615B;
extern T0*ms101_6455Abc615A;
extern T0*ms267_1553744164Abc267A;
extern T0*ms101_6455Abc614B;
extern T0*ms101_6455Abc559B;
extern T0*ms101_6455Abc614A;
extern T0*ms101_6455Abc559A;
extern T0*ms613_1428771266Abc613A;
extern T0*ms96_1889118664Abc96A;
extern T0*ms280_878860Abc280A;
extern T0*ms97_1319327951Abc97A;
extern T0*ms101_6455Abc613A;
extern T0*ms613_15915Abc613A;
extern T0*ms91_1656731300Abc91A;
extern T0*ms30_16264Abc460A;
extern T0*ms101_240Abc605A;
extern T0*ms101_1136118256Abc101A;
extern T0*ms101_240Abc605B;
extern T0*ms29_167970159Abc29A;
extern T0*ms101_240Abc605C;
extern T0*ms101_240Abc605D;
extern T0*ms614_1263916320Abc614A;
extern T0*ms101_240Abc605E;
extern T0*ms29_217Abc29A;
extern T0*ms101_240Abc606A;
extern T0*ms101_240Abc606B;
extern T0*ms101_240Abc606C;
extern T0*ms29_275488632Abc29A;
extern T0*ms608_1553642381Abc608A;
extern T0*ms101_240Abc614A;
extern T0*ms101_240Abc614B;
extern T0*ms101_240Abc614C;
extern T0*ms591_246Abc605A;
extern T0*ms101_240Abc614D;
extern T0*ms614_4680700Abc614A;
extern T0*ms101_240Abc614E;
extern T0*ms608_48939825Abc608A;
extern T0*ms97_5525574Abc97A;
extern T0*ms591_3912034Abc591A;
extern T0*ms591_246Abc606A;
extern T0*ms591_246Abc606B;
extern T0*ms784_834589410Abc784A;
extern T0*ms614_19199275Abc614A;
extern T0*ms591_246Abc606C;
extern T0*ms591_246Abc606D;
extern T0*ms101_2115846852Abc101A;
extern T0*ms591_246Abc606E;
extern T0*ms591_246Abc606F;
extern T0*ms591_246Abc606G;
extern T0*ms29_2218105Abc29A;
extern T0*ms29_80416Abc29A;
extern T0*ms591_246Abc608A;
extern T0*ms591_246Abc614A;
extern T0*ms591_246Abc614B;
extern T0*ms591_246Abc614C;
extern T0*ms591_246Abc614D;
extern T0*ms101_163413385Abc101A;
extern T0*ms591_246Abc614E;
extern T0*ms591_246Abc614F;
extern T0*ms101_1723513855Abc101A;
extern T0*ms591_246Abc614G;
extern T0*ms30_3175Abc358A;
extern T0*ms591_246Abc614H;
extern T0*ms101_1723513855Abc101B;
extern T0*ms267_216Abc89A;
extern T0*ms101_1723513855Abc101C;
extern T0*ms591_246Abc614I;
extern T0*ms101_1723513855Abc101D;
extern T0*ms101_325655889Abc101A;
extern T0*ms591_246Abc614J;
extern T0*ms591_246Abc614K;
extern T0*ms591_246Abc614L;
extern T0*ms465_3496Abc465A;
extern T0*ms30_10049231Abc30A;
extern T0*ms591_246Abc614M;
extern T0*ms591_246Abc614N;
extern T0*ms614_1124779458Abc614A;
extern T0*ms591_246Abc614O;
extern T0*ms591_246Abc614P;
extern T0*ms591_246Abc614Q;
extern T0*ms591_246Abc614R;
extern T0*ms26_941571923Abc26A;
extern T0*ms591_246Abc614S;
extern T0*ms591_246Abc614T;
extern T0*ms591_246Abc614U;
extern T0*ms591_246Abc614V;
extern T0*ms591_246Abc614W;
extern T0*ms591_246Abc614X;
extern T0*ms591_246Abc614Y;
extern T0*ms101_1772404517Abc614A;
extern T0*ms30_78263Abc30A;
extern T0*ms591_246Abc614Z;
extern T0*ms30_3175Abc372A;
extern T0*ms30_627Abc407A;
extern T0*ms30_3175Abc418A;
extern T0*ms591_246Abc614a;
extern T0*ms29_185934049Abc29A;
extern T0*ms591_246Abc614b;
extern T0*ms591_246Abc614c;
extern T0*ms591_246Abc614d;
extern T0*ms591_246Abc614e;
extern T0*ms539_276Abc769A;
extern T0*ms591_246Abc614f;
extern T0*ms591_246Abc614g;
extern T0*ms101_1772404517Abc606B;
extern T0*ms591_246Abc614h;
extern T0*ms591_2187619Abc606A;
extern T0*ms101_1772404517Abc606A;
extern T0*ms591_246Abc614i;
extern T0*ms544_1096544670Abc544A;
extern T0*ms591_246Abc614j;
extern T0*ms30_3175Abc425A;
extern T0*ms591_246Abc614k;
extern T0*ms101_475921520Abc101A;
extern T0*ms101_635Abc101A;
extern T0*ms591_246Abc614l;
extern T0*ms101_635Abc101B;
extern T0*ms591_126319331Abc591A;
extern T0*ms539_276Abc767A;
extern T0*ms101_1253959973Abc101A;
extern T0*ms603_4570957Abc603A;
extern T0*ms31_267875778Abc31A;
extern T0*ms101_1601653158Abc101B;
extern T0*ms101_1601653158Abc101A;
extern T0*ms613_158634393Abc613A;
extern T0*ms608_6575105Abc608A;
extern T0*ms89_1778077539Abc89A;
extern T0*ms591_246Abc591A;
extern T0*ms782_614Abc784D;
extern T0*ms782_614Abc784C;
extern T0*ms782_614Abc784B;
extern T0*ms782_614Abc784A;
extern T0*ms30_479922190Abc30A;
extern T0*ms30_1223234252Abc267A;
extern T0*ms784_915251302Abc784A;
extern T0*ms28_331Abc28A;
extern T0*ms782_614Abc782B;
extern T0*ms782_614Abc782A;
extern T0*ms29_911175911Abc29A;
extern T0*ms559_33316Abc559A;
extern T0*ms614_234933541Abc614A;
extern T0*ms544_28418819Abc544A;
extern T0*ms101_175857472Abc101A;
extern T0*ms463_10559665Abc463A;
extern T0*ms30_3175Abc394A;
extern T0*ms29_65574Abc29A;
extern T0*ms101_1404852998Abc101A;
extern T0*ms366_561523426Abc366A;
extern T0*ms784_73472312Abc784A;
extern T0*ms30_627Abc393A;
extern T0*ms784_73472312Abc784B;
extern T0*ms30_627Abc394A;
extern T0*ms591_2187619Abc591A;
extern T0*ms96_542094038Abc96A;
extern T0*ms30_3175Abc460A;
extern T0*ms606_15629Abc606A;
extern T0*ms30_56255230Abc30A;
extern T0*ms603_4570982Abc603A;
extern T0*ms101_7869Abc101A;
extern T0*ms784_1040644265Abc784A;
extern T0*ms267_374877Abc267A;
extern T0*ms791_277Abc791A;
extern T0*ms604_7454Abc604A;
extern T0*ms101_1816632501Abc101A;
extern T0*ms30_3175Abc470A;
extern T0*ms614_33291Abc614A;
extern T0*ms614_476433922Abc614A;
extern T0*ms614_33291Abc614B;
extern T0*ms784_365929075Abc784A;
extern T0*ms614_33291Abc614C;
extern T0*ms101_122027336Abc101A;
extern T0*ms97_297Abc97A;
extern T0*ms97_402Abc97A;
extern T0*ms539_276Abc724A;
extern T0*ms97_674Abc97A;
extern T0*ms29_1680926299Abc29A;
extern T0*ms463_1331532446Abc852B;
extern T0*ms463_1331532446Abc852A;
extern T0*ms614_1096165867Abc614B;
extern T0*ms101_148900Abc101A;
extern T0*ms614_1096165867Abc614A;
extern T0*ms101_2237652Abc464A;
extern T0*ms90_1581369567Abc90A;
extern T0*ms615_105695965Abc615A;
extern T0*ms614_1605175681Abc614A;
extern T0*ms590_2039095413Abc590A;
extern T0*ms101_1238750212Abc101A;
extern T0*ms90_1452518781Abc90A;
extern T0*ms29_1671553525Abc29A;
extern T0*ms591_674382779Abc591A;
extern T0*ms30_75797981Abc30A;
extern T0*ms784_1574324912Abc784A;
extern T0*ms101_644847010Abc101A;
extern T0*ms97_415107Abc97A;
extern T0*ms101_3475Abc101A;
extern T0*ms30_78263Abc89A;
extern T0*ms608_162095Abc608A;
extern T0*ms282_624587783Abc282A;
extern T0*ms101_2630Abc591A;
extern T0*ms784_604Abc784B;
extern T0*ms784_604Abc784A;
extern T0*ms590_565069653Abc590A;
extern T0*ms606_7233618Abc606A;
extern T0*ms101_2115332211Abc101A;
extern T0*ms101_588411932Abc101A;
extern T0*ms95_1152235958Abc95A;
extern T0*ms97_180Abc89A;
extern T0*ms29_36193081Abc29A;
extern T0*ms29_2090604340Abc29A;
extern T0*ms615_68406039Abc615B;
extern T0*ms615_68406039Abc615A;
extern T0*ms614_83345Abc614A;
extern T0*ms101_6330Abc613A;
extern T0*ms587_8545Abc587A;
extern T0*ms591_1676Abc591A;
extern T0*ms784_1196941282Abc784A;
extern T0*ms784_2142119302Abc784A;
extern T0*ms331_25373399Abc331A;
extern T0*ms101_2630Abc615A;
extern T0*ms101_107312226Abc101A;
extern T0*ms96_2114217978Abc96A;
extern T0*ms614_234855416Abc614A;
extern T0*ms90_175744691Abc90A;
extern T0*ms615_1280Abc615A;
extern T0*ms615_1280Abc615B;
extern T0*ms614_802840Abc614B;
extern T0*ms97_91157Abc97A;
extern T0*ms614_802840Abc614A;
extern T0*ms101_179423058Abc101A;
extern T0*ms101_2087300232Abc101A;
extern T0*ms608_312808564Abc608A;
extern T0*ms89_188494264Abc89A;
extern T0*ms29_2187464Abc29A;
extern T0*ms89_2176510Abc89A;
extern T0*ms728_263008962Abc728A;
extern T0*ms606_345Abc614A;
extern T0*ms590_1809907567Abc590A;
extern T0*ms97_721564652Abc97A;
extern T0*ms606_345Abc606A;
extern T0*ms591_6580Abc591A;
extern T0*ms559_51582255Abc559A;
extern T0*ms591_2301Abc591A;
extern T0*ms267_698011541Abc267A;
extern T0*ms591_43730Abc591A;
extern T0*ms608_7118Abc608A;
extern T0*ms29_1549703Abc29A;
extern T0*ms588_565063403Abc589A;
extern T0*ms90_74239Abc90A;
extern T0*ms588_565063403Abc588A;
extern T0*ms96_1814748872Abc96A;
extern T0*ms784_1651Abc784A;
extern T0*ms728_1613492996Abc728A;
extern T0*ms554_1046299075Abc554A;
extern T0*ms614_8885Abc614A;
extern T0*ms101_1290234339Abc101A;
extern T0*ms96_1610926534Abc96A;
extern T0*ms614_39831Abc614A;
extern T0*ms278_360205908Abc278A;
extern T0*ms30_10648581Abc30A;
extern T0*ms278_360205908Abc278B;
extern T0*ms615_29107967Abc615A;
extern T0*ms29_421505Abc29A;
extern T0*ms539_276Abc539A;
extern T0*ms29_18110Abc29A;
extern T0*ms29_88049Abc29A;
extern T0*ms613_6271Abc613A;
extern T0*ms615_35966Abc615A;
extern T0*ms591_2187432Abc591A;
extern T0*ms591_2187432Abc591B;
extern T0*ms29_296Abc29A;
extern T0*ms30_18090Abc352A;
extern T0*ms267_2085574777Abc267A;
extern T0*ms30_2073386Abc30A;
extern T0*ms95_1442714837Abc95A;
extern T0*ms101_1483072174Abc101A;
extern T0*ms614_87090Abc614A;
extern T0*ms606_3485Abc606A;
extern T0*ms89_1109293176Abc89A;
extern T0*ms96_1865554673Abc96A;
extern T0*ms89_18150Abc621A;
extern T0*ms97_301485Abc97A;
extern T0*ms101_162838175Abc591A;
extern T0*ms608_1307328870Abc608A;
extern T0*ms101_18131599Abc101A;
extern T0*ms101_32080Abc101A;
extern T0*ms591_82Abc591A;
extern T0*ms30_82570Abc30A;
extern T0*ms559_3920780Abc559A;
extern T0*ms614_1709245815Abc614A;
extern T0*ms608_279959115Abc608A;
extern T0*ms101_1271Abc591A;
extern T0*ms96_231762379Abc96A;
extern T0*ms613_1549077634Abc613A;
extern T0*ms30_48390502Abc30A;
extern T0*ms591_60837Abc591A;
extern T0*ms613_118716790Abc613A;
extern T0*ms31_2246326Abc31A;
extern T0*ms465_83406Abc465A;
extern T0*ms30_408086Abc30A;
extern T0*ms89_18150Abc591A;
extern T0*ms26_1042405932Abc26A;
extern T0*ms89_18150Abc591B;
extern T0*ms89_18150Abc591C;
extern T0*ms587_1971245Abc587A;
extern T0*ms89_18150Abc591D;
extern T0*ms89_18150Abc591E;
extern T0*ms680_161074567Abc680A;
extern T0*ms89_18150Abc587A;
extern T0*ms89_18150Abc591F;
extern T0*ms89_18150Abc587B;
extern T0*ms25_1767481079Abc25A;
extern T0*ms525_927498134Abc525A;
extern T0*ms784_744114Abc784A;
extern T0*ms96_1131876546Abc96A;
extern T0*ms26_7779Abc26A;
extern T0*ms97_59731Abc97A;
extern T0*ms97_1663868Abc97A;
extern T0*ms30_8054609Abc30A;
extern T0*ms614_308542874Abc614A;
extern T0*ms101_1604142009Abc101A;
extern T0*ms620_295Abc620A;
extern T0*ms615_2102695Abc615A;
extern T0*ms26_118Abc26A;
extern T0*ms591_1664036235Abc591A;
extern T0*ms852_482960256Abc852A;
extern T0*ms93_1880881887Abc604A;
extern T0*ms96_689013605Abc96A;
extern T0*ms97_326Abc97A;
extern T0*ms107_253892190Abc107A;
extern T0*ms852_302Abc852A;
extern T0*ms465_18186Abc465A;
extern T0*ms591_46733806Abc591A;
extern T0*ms30_3249Abc30A;
extern T0*ms89_1289042164Abc89A;
extern T0*ms591_1949908058Abc591A;
extern T0*ms90_181806522Abc90A;
extern T0*ms29_1673345408Abc29A;
extern T0*ms29_1549697Abc29A;
extern T0*ms360_41841490Abc360A;
extern T0*ms30_51843716Abc30A;
extern T0*ms608_809795Abc614B;
extern T0*ms608_809795Abc614A;
extern T0*ms29_240810604Abc726A;
extern T0*ms784_160930Abc784A;
extern T0*ms463_10559665Abc852A;
extern T0*ms608_809795Abc608A;
extern T0*ms463_10559665Abc852B;
extern T0*ms29_14150Abc391A;
extern T0*ms613_411283072Abc613A;
extern T0*ms608_809795Abc606A;
extern T0*ms26_142550Abc26A;
extern T0*ms469_1088102843Abc469A;
extern T0*ms463_58Abc463A;
extern T0*ms591_948421114Abc591A;
extern T0*ms614_1671077900Abc614B;
extern T0*ms614_1671077900Abc614A;
extern T0*ms29_1597390874Abc29A;
extern T0*ms101_251Abc101A;
extern T0*ms101_251Abc101B;
extern T0*ms101_251Abc101C;
extern T0*ms613_1757386798Abc613A;
extern T0*ms90_116346440Abc90A;
extern T0*ms101_6455Abc101A;
extern T0*ms101_23988287Abc101A;
extern T0*ms608_4425Abc608A;
extern T0*ms763_324Abc763A;
extern T0*ms518_80251Abc518A;
extern T0*ms615_946895Abc615A;
extern T0*ms615_946895Abc615B;
extern T0*ms101_1533928773Abc101A;
extern T0*ms101_1102979933Abc615A;
extern T0*ms101_9130Abc784A;
extern T0*ms613_1637595774Abc613A;
extern T0*ms463_1331532446Abc463A;
extern T0*ms280_1750778Abc280A;
extern T0*ms591_567426438Abc591A;
extern T0*ms613_1087364605Abc613A;
extern T0*ms349_327Abc349A;
extern T0*ms101_1957408550Abc101A;
extern T0*ms852_10220290Abc852B;
extern T0*ms852_10220290Abc852A;
extern T0*ms614_427390771Abc614A;
extern T0*ms274_15370Abc274A;
extern T0*ms30_9790205Abc30A;
extern T0*ms614_475042348Abc614A;
extern T0*ms29_698215697Abc29A;
extern T0*ms96_1242126608Abc96A;
extern T0*ms784_1843146228Abc784A;
extern T0*ms29_1157Abc29A;
extern T0*ms90_2004339522Abc90A;
extern T0*ms90_175744216Abc90A;
extern T0*ms615_28273584Abc615A;
extern T0*ms106_128358027Abc106A;
extern T0*ms101_1772404517Abc101C;
extern T0*ms101_1772404517Abc101B;
extern T0*ms101_1772404517Abc101A;
extern T0*ms30_640Abc372A;
extern T0*ms617_1659544035Abc617A;
extern T0*ms29_424424Abc29A;
extern T0*ms786_585110409Abc786A;
extern T0*ms591_254Abc591A;
extern T0*ms29_180965430Abc29A;
extern T0*ms30_56927287Abc30A;
extern T0*ms29_51915068Abc29A;
extern T0*ms101_635Abc608A;
extern T0*ms101_635Abc608B;
extern T0*ms784_1396Abc784A;
extern T0*ms101_635Abc608C;
extern T0*ms30_640Abc425A;
extern T0*ms101_635Abc608D;
extern T0*ms101_635Abc608E;
extern T0*ms101_635Abc614A;
extern T0*ms101_635Abc608F;
extern T0*ms101_635Abc614B;
extern T0*ms101_635Abc608G;
extern T0*ms614_60405Abc614A;
extern T0*ms101_635Abc608H;
extern T0*ms29_1339128Abc29A;
extern T0*ms101_2101369329Abc101A;
extern T0*ms101_635Abc617A;
extern T0*ms101_635Abc617B;
extern T0*ms97_69601Abc97A;
extern T0*ms608_380065Abc608A;
extern T0*ms101_1881374985Abc101A;
extern T0*ms101_1965252672Abc101A;
extern T0*ms30_90408Abc460A;
extern T0*ms784_1739163321Abc784A;
extern T0*ms101_1377208779Abc101D;
extern T0*ms101_1377208779Abc101C;
extern T0*ms101_1377208779Abc101B;
extern T0*ms101_1377208779Abc101A;
extern T0*ms25_85614Abc25A;
extern T0*ms89_437331Abc89A;
extern T0*ms30_627Abc30A;
extern T0*ms30_407540Abc30A;
extern T0*ms29_55040401Abc29A;
extern T0*ms29_840111968Abc29A;
extern T0*ms591_1485929081Abc591A;
extern T0*ms101_635Abc591A;
T0*se_ms(int c,char*e);
T0*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void se_msi10(void);
void se_msi11(void);
void se_msi12(void);
void se_msi13(void);
void se_msi14(void);
void se_msi15(void);
void se_msi16(void);
void se_msi17(void);
void se_msi18(void);
void se_msi19(void);
void se_msi20(void);
void se_msi21(void);
void se_msi22(void);
void se_msi23(void);
void se_msi24(void);
void se_msi25(void);
void se_msi26(void);
void se_msi27(void);
void se_msi28(void);
void se_msi29(void);
void se_msi30(void);
void se_msi31(void);
void se_msi32(void);
void se_msi33(void);
void se_msi34(void);
void se_msi35(void);
void se_msi36(void);
void se_msi37(void);
void se_msi38(void);
void se_msi39(void);
void se_msi40(void);
void se_msi41(void);
void se_msi42(void);
void se_msi43(void);
void se_msi44(void);
void se_msi45(void);
void se_msi46(void);
void se_msi47(void);
void se_msi48(void);
void se_msi49(void);
void se_msi50(void);
void se_msi51(void);
void se_msi52(void);
void se_msi53(void);
void se_msi54(void);
void se_msi55(void);
void se_msi56(void);
void se_msi57(void);
void se_msi58(void);
void se_msi59(void);
void se_msi60(void);
void se_msi61(void);
void se_msi62(void);
void manifest_string_mark1(void);
void manifest_string_mark2(void);
void manifest_string_mark3(void);
void manifest_string_mark4(void);
void manifest_string_mark5(void);
void manifest_string_mark6(void);
void manifest_string_mark7(void);
void manifest_string_mark8(void);
void manifest_string_mark9(void);
void manifest_string_mark10(void);
void manifest_string_mark11(void);
void once_function_mark(void);
void gc_start(void);
typedef struct B25 gc25;
struct B25{T25 object;union {void*flag;gc25*next;} header;};
extern gc25*store25;
extern int store_left25;
extern fsoc*store_chunk25;
extern gc25*gc_free25;
typedef struct B97 gc97;
struct B97{T97 object;union {void*flag;gc97*next;} header;};
extern gc97*store97;
extern int store_left97;
extern fsoc*store_chunk97;
extern gc97*gc_free97;
typedef struct B851 gc851;
struct B851{T851 object;union {void*flag;gc851*next;} header;};
extern gc851*store851;
extern int store_left851;
extern fsoc*store_chunk851;
extern gc851*gc_free851;
typedef struct B89 gc89;
struct B89{T89 object;union {void*flag;gc89*next;} header;};
extern gc89*store89;
extern int store_left89;
extern fsoc*store_chunk89;
extern gc89*gc_free89;
typedef struct B113 gc113;
struct B113{T113 object;union {void*flag;gc113*next;} header;};
extern gc113*store113;
extern int store_left113;
extern fsoc*store_chunk113;
extern gc113*gc_free113;
typedef struct B267 gc267;
struct B267{T267 object;union {void*flag;gc267*next;} header;};
extern gc267*store267;
extern int store_left267;
extern fsoc*store_chunk267;
extern gc267*gc_free267;
typedef struct B101 gc101;
struct B101{T101 object;union {void*flag;gc101*next;} header;};
extern gc101*store101;
extern int store_left101;
extern fsoc*store_chunk101;
extern gc101*gc_free101;
typedef struct B96 gc96;
struct B96{T96 object;union {void*flag;gc96*next;} header;};
extern gc96*store96;
extern int store_left96;
extern fsoc*store_chunk96;
extern gc96*gc_free96;
typedef struct B278 gc278;
struct B278{T278 object;union {void*flag;gc278*next;} header;};
extern gc278*store278;
extern int store_left278;
extern fsoc*store_chunk278;
extern gc278*gc_free278;
typedef struct B264 gc264;
struct B264{T264 object;union {void*flag;gc264*next;} header;};
extern gc264*store264;
extern int store_left264;
extern fsoc*store_chunk264;
extern gc264*gc_free264;
typedef struct B7 gc7;
struct B7{T7 object;union {void*flag;gc7*next;} header;};
extern gc7*store7;
extern int store_left7;
extern fsoc*store_chunk7;
extern gc7*gc_free7;
extern na_env na_env9;
typedef struct B613 gc613;
struct B613{T613 object;union {void*flag;gc613*next;} header;};
extern gc613*store613;
extern int store_left613;
extern fsoc*store_chunk613;
extern gc613*gc_free613;
typedef struct B859 gc859;
struct B859{T859 object;union {void*flag;gc859*next;} header;};
extern gc859*store859;
extern int store_left859;
extern fsoc*store_chunk859;
extern gc859*gc_free859;
typedef struct B73 gc73;
struct B73{T73 object;union {void*flag;gc73*next;} header;};
extern gc73*store73;
extern int store_left73;
extern fsoc*store_chunk73;
extern gc73*gc_free73;
typedef struct B860 gc860;
struct B860{T860 object;union {void*flag;gc860*next;} header;};
extern gc860*store860;
extern int store_left860;
extern fsoc*store_chunk860;
extern gc860*gc_free860;
typedef struct B280 gc280;
struct B280{T280 object;union {void*flag;gc280*next;} header;};
extern gc280*store280;
extern int store_left280;
extern fsoc*store_chunk280;
extern gc280*gc_free280;
typedef struct B63 gc63;
struct B63{T63 object;union {void*flag;gc63*next;} header;};
extern gc63*store63;
extern int store_left63;
extern fsoc*store_chunk63;
extern gc63*gc_free63;
typedef struct B861 gc861;
struct B861{T861 object;union {void*flag;gc861*next;} header;};
extern gc861*store861;
extern int store_left861;
extern fsoc*store_chunk861;
extern gc861*gc_free861;
typedef struct B531 gc531;
struct B531{T531 object;union {void*flag;gc531*next;} header;};
extern gc531*store531;
extern int store_left531;
extern fsoc*store_chunk531;
extern gc531*gc_free531;
typedef struct B535 gc535;
struct B535{T535 object;union {void*flag;gc535*next;} header;};
extern gc535*store535;
extern int store_left535;
extern fsoc*store_chunk535;
extern gc535*gc_free535;
typedef struct B536 gc536;
struct B536{T536 object;union {void*flag;gc536*next;} header;};
extern gc536*store536;
extern int store_left536;
extern fsoc*store_chunk536;
extern gc536*gc_free536;
typedef struct B537 gc537;
struct B537{T537 object;union {void*flag;gc537*next;} header;};
extern gc537*store537;
extern int store_left537;
extern fsoc*store_chunk537;
extern gc537*gc_free537;
typedef struct B538 gc538;
struct B538{T538 object;union {void*flag;gc538*next;} header;};
extern gc538*store538;
extern int store_left538;
extern fsoc*store_chunk538;
extern gc538*gc_free538;
typedef struct B539 gc539;
struct B539{T539 object;union {void*flag;gc539*next;} header;};
extern gc539*store539;
extern int store_left539;
extern fsoc*store_chunk539;
extern gc539*gc_free539;
typedef struct B862 gc862;
struct B862{T862 object;union {void*flag;gc862*next;} header;};
extern gc862*store862;
extern int store_left862;
extern fsoc*store_chunk862;
extern gc862*gc_free862;
typedef struct B863 gc863;
struct B863{T863 object;union {void*flag;gc863*next;} header;};
extern gc863*store863;
extern int store_left863;
extern fsoc*store_chunk863;
extern gc863*gc_free863;
typedef struct B87 gc87;
struct B87{T87 object;union {void*flag;gc87*next;} header;};
extern gc87*store87;
extern int store_left87;
extern fsoc*store_chunk87;
extern gc87*gc_free87;
typedef struct B530 gc530;
struct B530{T530 object;union {void*flag;gc530*next;} header;};
extern gc530*store530;
extern int store_left530;
extern fsoc*store_chunk530;
extern gc530*gc_free530;
typedef struct B447 gc447;
struct B447{T447 object;union {void*flag;gc447*next;} header;};
extern gc447*store447;
extern int store_left447;
extern fsoc*store_chunk447;
extern gc447*gc_free447;
typedef struct B446 gc446;
struct B446{T446 object;union {void*flag;gc446*next;} header;};
extern gc446*store446;
extern int store_left446;
extern fsoc*store_chunk446;
extern gc446*gc_free446;
typedef struct B65 gc65;
struct B65{T65 object;union {void*flag;gc65*next;} header;};
extern gc65*store65;
extern int store_left65;
extern fsoc*store_chunk65;
extern gc65*gc_free65;
typedef struct B44 gc44;
struct B44{T44 object;union {void*flag;gc44*next;} header;};
extern gc44*store44;
extern int store_left44;
extern fsoc*store_chunk44;
extern gc44*gc_free44;
typedef struct B864 gc864;
struct B864{T864 object;union {void*flag;gc864*next;} header;};
extern gc864*store864;
extern int store_left864;
extern fsoc*store_chunk864;
extern gc864*gc_free864;
typedef struct B92 gc92;
struct B92{T92 object;union {void*flag;gc92*next;} header;};
extern gc92*store92;
extern int store_left92;
extern fsoc*store_chunk92;
extern gc92*gc_free92;
typedef struct B108 gc108;
struct B108{T108 object;union {void*flag;gc108*next;} header;};
extern gc108*store108;
extern int store_left108;
extern fsoc*store_chunk108;
extern gc108*gc_free108;
typedef struct B675 gc675;
struct B675{T675 object;union {void*flag;gc675*next;} header;};
extern gc675*store675;
extern int store_left675;
extern fsoc*store_chunk675;
extern gc675*gc_free675;
typedef struct B679 gc679;
struct B679{T679 object;union {void*flag;gc679*next;} header;};
extern gc679*store679;
extern int store_left679;
extern fsoc*store_chunk679;
extern gc679*gc_free679;
typedef struct B677 gc677;
struct B677{T677 object;union {void*flag;gc677*next;} header;};
extern gc677*store677;
extern int store_left677;
extern fsoc*store_chunk677;
extern gc677*gc_free677;
typedef struct B540 gc540;
struct B540{T540 object;union {void*flag;gc540*next;} header;};
extern gc540*store540;
extern int store_left540;
extern fsoc*store_chunk540;
extern gc540*gc_free540;
typedef struct B680 gc680;
struct B680{T680 object;union {void*flag;gc680*next;} header;};
extern gc680*store680;
extern int store_left680;
extern fsoc*store_chunk680;
extern gc680*gc_free680;
typedef struct B415 gc415;
struct B415{T415 object;union {void*flag;gc415*next;} header;};
extern gc415*store415;
extern int store_left415;
extern fsoc*store_chunk415;
extern gc415*gc_free415;
typedef struct B865 gc865;
struct B865{T865 object;union {void*flag;gc865*next;} header;};
extern gc865*store865;
extern int store_left865;
extern fsoc*store_chunk865;
extern gc865*gc_free865;
typedef struct B294 gc294;
struct B294{T294 object;union {void*flag;gc294*next;} header;};
extern gc294*store294;
extern int store_left294;
extern fsoc*store_chunk294;
extern gc294*gc_free294;
typedef struct B866 gc866;
struct B866{T866 object;union {void*flag;gc866*next;} header;};
extern gc866*store866;
extern int store_left866;
extern fsoc*store_chunk866;
extern gc866*gc_free866;
typedef struct B424 gc424;
struct B424{T424 object;union {void*flag;gc424*next;} header;};
extern gc424*store424;
extern int store_left424;
extern fsoc*store_chunk424;
extern gc424*gc_free424;
typedef struct B558 gc558;
struct B558{T558 object;union {void*flag;gc558*next;} header;};
extern gc558*store558;
extern int store_left558;
extern fsoc*store_chunk558;
extern gc558*gc_free558;
typedef struct B588 gc588;
struct B588{T588 object;union {void*flag;gc588*next;} header;};
extern gc588*store588;
extern int store_left588;
extern fsoc*store_chunk588;
extern gc588*gc_free588;
typedef struct B589 gc589;
struct B589{T589 object;union {void*flag;gc589*next;} header;};
extern gc589*store589;
extern int store_left589;
extern fsoc*store_chunk589;
extern gc589*gc_free589;
typedef struct B590 gc590;
struct B590{T590 object;union {void*flag;gc590*next;} header;};
extern gc590*store590;
extern int store_left590;
extern fsoc*store_chunk590;
extern gc590*gc_free590;
typedef struct B591 gc591;
struct B591{T591 object;union {void*flag;gc591*next;} header;};
extern gc591*store591;
extern int store_left591;
extern fsoc*store_chunk591;
extern gc591*gc_free591;
typedef struct B603 gc603;
struct B603{T603 object;union {void*flag;gc603*next;} header;};
extern gc603*store603;
extern int store_left603;
extern fsoc*store_chunk603;
extern gc603*gc_free603;
typedef struct B604 gc604;
struct B604{T604 object;union {void*flag;gc604*next;} header;};
extern gc604*store604;
extern int store_left604;
extern fsoc*store_chunk604;
extern gc604*gc_free604;
typedef struct B605 gc605;
struct B605{T605 object;union {void*flag;gc605*next;} header;};
extern gc605*store605;
extern int store_left605;
extern fsoc*store_chunk605;
extern gc605*gc_free605;
typedef struct B607 gc607;
struct B607{T607 object;union {void*flag;gc607*next;} header;};
extern gc607*store607;
extern int store_left607;
extern fsoc*store_chunk607;
extern gc607*gc_free607;
typedef struct B608 gc608;
struct B608{T608 object;union {void*flag;gc608*next;} header;};
extern gc608*store608;
extern int store_left608;
extern fsoc*store_chunk608;
extern gc608*gc_free608;
typedef struct B612 gc612;
struct B612{T612 object;union {void*flag;gc612*next;} header;};
extern gc612*store612;
extern int store_left612;
extern fsoc*store_chunk612;
extern gc612*gc_free612;
typedef struct B614 gc614;
struct B614{T614 object;union {void*flag;gc614*next;} header;};
extern gc614*store614;
extern int store_left614;
extern fsoc*store_chunk614;
extern gc614*gc_free614;
typedef struct B615 gc615;
struct B615{T615 object;union {void*flag;gc615*next;} header;};
extern gc615*store615;
extern int store_left615;
extern fsoc*store_chunk615;
extern gc615*gc_free615;
typedef struct B616 gc616;
struct B616{T616 object;union {void*flag;gc616*next;} header;};
extern gc616*store616;
extern int store_left616;
extern fsoc*store_chunk616;
extern gc616*gc_free616;
typedef struct B617 gc617;
struct B617{T617 object;union {void*flag;gc617*next;} header;};
extern gc617*store617;
extern int store_left617;
extern fsoc*store_chunk617;
extern gc617*gc_free617;
typedef struct B618 gc618;
struct B618{T618 object;union {void*flag;gc618*next;} header;};
extern gc618*store618;
extern int store_left618;
extern fsoc*store_chunk618;
extern gc618*gc_free618;
typedef struct B619 gc619;
struct B619{T619 object;union {void*flag;gc619*next;} header;};
extern gc619*store619;
extern int store_left619;
extern fsoc*store_chunk619;
extern gc619*gc_free619;
typedef struct B621 gc621;
struct B621{T621 object;union {void*flag;gc621*next;} header;};
extern gc621*store621;
extern int store_left621;
extern fsoc*store_chunk621;
extern gc621*gc_free621;
typedef struct B620 gc620;
struct B620{T620 object;union {void*flag;gc620*next;} header;};
extern gc620*store620;
extern int store_left620;
extern fsoc*store_chunk620;
extern gc620*gc_free620;
typedef struct B622 gc622;
struct B622{T622 object;union {void*flag;gc622*next;} header;};
extern gc622*store622;
extern int store_left622;
extern fsoc*store_chunk622;
extern gc622*gc_free622;
typedef struct B623 gc623;
struct B623{T623 object;union {void*flag;gc623*next;} header;};
extern gc623*store623;
extern int store_left623;
extern fsoc*store_chunk623;
extern gc623*gc_free623;
typedef struct B624 gc624;
struct B624{T624 object;union {void*flag;gc624*next;} header;};
extern gc624*store624;
extern int store_left624;
extern fsoc*store_chunk624;
extern gc624*gc_free624;
typedef struct B867 gc867;
struct B867{T867 object;union {void*flag;gc867*next;} header;};
extern gc867*store867;
extern int store_left867;
extern fsoc*store_chunk867;
extern gc867*gc_free867;
typedef struct B625 gc625;
struct B625{T625 object;union {void*flag;gc625*next;} header;};
extern gc625*store625;
extern int store_left625;
extern fsoc*store_chunk625;
extern gc625*gc_free625;
typedef struct B868 gc868;
struct B868{T868 object;union {void*flag;gc868*next;} header;};
extern gc868*store868;
extern int store_left868;
extern fsoc*store_chunk868;
extern gc868*gc_free868;
typedef struct B869 gc869;
struct B869{T869 object;union {void*flag;gc869*next;} header;};
extern gc869*store869;
extern int store_left869;
extern fsoc*store_chunk869;
extern gc869*gc_free869;
typedef struct B363 gc363;
struct B363{T363 object;union {void*flag;gc363*next;} header;};
extern gc363*store363;
extern int store_left363;
extern fsoc*store_chunk363;
extern gc363*gc_free363;
typedef struct B82 gc82;
struct B82{T82 object;union {void*flag;gc82*next;} header;};
extern gc82*store82;
extern int store_left82;
extern fsoc*store_chunk82;
extern gc82*gc_free82;
typedef struct B84 gc84;
struct B84{T84 object;union {void*flag;gc84*next;} header;};
extern gc84*store84;
extern int store_left84;
extern fsoc*store_chunk84;
extern gc84*gc_free84;
typedef struct B870 gc870;
struct B870{T870 object;union {void*flag;gc870*next;} header;};
extern gc870*store870;
extern int store_left870;
extern fsoc*store_chunk870;
extern gc870*gc_free870;
typedef struct B871 gc871;
struct B871{T871 object;union {void*flag;gc871*next;} header;};
extern gc871*store871;
extern int store_left871;
extern fsoc*store_chunk871;
extern gc871*gc_free871;
typedef struct B872 gc872;
struct B872{T872 object;union {void*flag;gc872*next;} header;};
extern gc872*store872;
extern int store_left872;
extern fsoc*store_chunk872;
extern gc872*gc_free872;
typedef struct B270 gc270;
struct B270{T270 object;union {void*flag;gc270*next;} header;};
extern gc270*store270;
extern int store_left270;
extern fsoc*store_chunk270;
extern gc270*gc_free270;
typedef struct B76 gc76;
struct B76{T76 object;union {void*flag;gc76*next;} header;};
extern gc76*store76;
extern int store_left76;
extern fsoc*store_chunk76;
extern gc76*gc_free76;
typedef struct B527 gc527;
struct B527{T527 object;union {void*flag;gc527*next;} header;};
extern gc527*store527;
extern int store_left527;
extern fsoc*store_chunk527;
extern gc527*gc_free527;
typedef struct B874 gc874;
struct B874{T874 object;union {void*flag;gc874*next;} header;};
extern gc874*store874;
extern int store_left874;
extern fsoc*store_chunk874;
extern gc874*gc_free874;
typedef struct B324 gc324;
struct B324{T324 object;union {void*flag;gc324*next;} header;};
extern gc324*store324;
extern int store_left324;
extern fsoc*store_chunk324;
extern gc324*gc_free324;
typedef struct B95 gc95;
struct B95{T95 object;union {void*flag;gc95*next;} header;};
extern gc95*store95;
extern int store_left95;
extern fsoc*store_chunk95;
extern gc95*gc_free95;
typedef struct B93 gc93;
struct B93{T93 object;union {void*flag;gc93*next;} header;};
extern gc93*store93;
extern int store_left93;
extern fsoc*store_chunk93;
extern gc93*gc_free93;
typedef struct B99 gc99;
struct B99{T99 object;union {void*flag;gc99*next;} header;};
extern gc99*store99;
extern int store_left99;
extern fsoc*store_chunk99;
extern gc99*gc_free99;
typedef struct B112 gc112;
struct B112{T112 object;union {void*flag;gc112*next;} header;};
extern gc112*store112;
extern int store_left112;
extern fsoc*store_chunk112;
extern gc112*gc_free112;
typedef struct B109 gc109;
struct B109{T109 object;union {void*flag;gc109*next;} header;};
extern gc109*store109;
extern int store_left109;
extern fsoc*store_chunk109;
extern gc109*gc_free109;
typedef struct B114 gc114;
struct B114{T114 object;union {void*flag;gc114*next;} header;};
extern gc114*store114;
extern int store_left114;
extern fsoc*store_chunk114;
extern gc114*gc_free114;
typedef struct B78 gc78;
struct B78{T78 object;union {void*flag;gc78*next;} header;};
extern gc78*store78;
extern int store_left78;
extern fsoc*store_chunk78;
extern gc78*gc_free78;
typedef struct B433 gc433;
struct B433{T433 object;union {void*flag;gc433*next;} header;};
extern gc433*store433;
extern int store_left433;
extern fsoc*store_chunk433;
extern gc433*gc_free433;
typedef struct B876 gc876;
struct B876{T876 object;union {void*flag;gc876*next;} header;};
extern gc876*store876;
extern int store_left876;
extern fsoc*store_chunk876;
extern gc876*gc_free876;
typedef struct B877 gc877;
struct B877{T877 object;union {void*flag;gc877*next;} header;};
extern gc877*store877;
extern int store_left877;
extern fsoc*store_chunk877;
extern gc877*gc_free877;
typedef struct B105 gc105;
struct B105{T105 object;union {void*flag;gc105*next;} header;};
extern gc105*store105;
extern int store_left105;
extern fsoc*store_chunk105;
extern gc105*gc_free105;
typedef struct B428 gc428;
struct B428{T428 object;union {void*flag;gc428*next;} header;};
extern gc428*store428;
extern int store_left428;
extern fsoc*store_chunk428;
extern gc428*gc_free428;
typedef struct B880 gc880;
struct B880{T880 object;union {void*flag;gc880*next;} header;};
extern gc880*store880;
extern int store_left880;
extern fsoc*store_chunk880;
extern gc880*gc_free880;
typedef struct B881 gc881;
struct B881{T881 object;union {void*flag;gc881*next;} header;};
extern gc881*store881;
extern int store_left881;
extern fsoc*store_chunk881;
extern gc881*gc_free881;
typedef struct B882 gc882;
struct B882{T882 object;union {void*flag;gc882*next;} header;};
extern gc882*store882;
extern int store_left882;
extern fsoc*store_chunk882;
extern gc882*gc_free882;
typedef struct B782 gc782;
struct B782{T782 object;union {void*flag;gc782*next;} header;};
extern gc782*store782;
extern int store_left782;
extern fsoc*store_chunk782;
extern gc782*gc_free782;
typedef struct B784 gc784;
struct B784{T784 object;union {void*flag;gc784*next;} header;};
extern gc784*store784;
extern int store_left784;
extern fsoc*store_chunk784;
extern gc784*gc_free784;
typedef struct B785 gc785;
struct B785{T785 object;union {void*flag;gc785*next;} header;};
extern gc785*store785;
extern int store_left785;
extern fsoc*store_chunk785;
extern gc785*gc_free785;
typedef struct B786 gc786;
struct B786{T786 object;union {void*flag;gc786*next;} header;};
extern gc786*store786;
extern int store_left786;
extern fsoc*store_chunk786;
extern gc786*gc_free786;
typedef struct B787 gc787;
struct B787{T787 object;union {void*flag;gc787*next;} header;};
extern gc787*store787;
extern int store_left787;
extern fsoc*store_chunk787;
extern gc787*gc_free787;
extern na_env na_env884;
typedef struct B323 gc323;
struct B323{T323 object;union {void*flag;gc323*next;} header;};
extern gc323*store323;
extern int store_left323;
extern fsoc*store_chunk323;
extern gc323*gc_free323;
typedef struct B886 gc886;
struct B886{T886 object;union {void*flag;gc886*next;} header;};
extern gc886*store886;
extern int store_left886;
extern fsoc*store_chunk886;
extern gc886*gc_free886;
typedef struct B887 gc887;
struct B887{T887 object;union {void*flag;gc887*next;} header;};
extern gc887*store887;
extern int store_left887;
extern fsoc*store_chunk887;
extern gc887*gc_free887;
typedef struct B771 gc771;
struct B771{T771 object;union {void*flag;gc771*next;} header;};
extern gc771*store771;
extern int store_left771;
extern fsoc*store_chunk771;
extern gc771*gc_free771;
typedef struct B772 gc772;
struct B772{T772 object;union {void*flag;gc772*next;} header;};
extern gc772*store772;
extern int store_left772;
extern fsoc*store_chunk772;
extern gc772*gc_free772;
typedef struct B891 gc891;
struct B891{T891 object;union {void*flag;gc891*next;} header;};
extern gc891*store891;
extern int store_left891;
extern fsoc*store_chunk891;
extern gc891*gc_free891;
typedef struct B892 gc892;
struct B892{T892 object;union {void*flag;gc892*next;} header;};
extern gc892*store892;
extern int store_left892;
extern fsoc*store_chunk892;
extern gc892*gc_free892;
typedef struct B303 gc303;
struct B303{T303 object;union {void*flag;gc303*next;} header;};
extern gc303*store303;
extern int store_left303;
extern fsoc*store_chunk303;
extern gc303*gc_free303;
typedef struct B893 gc893;
struct B893{T893 object;union {void*flag;gc893*next;} header;};
extern gc893*store893;
extern int store_left893;
extern fsoc*store_chunk893;
extern gc893*gc_free893;
typedef struct B896 gc896;
struct B896{T896 object;union {void*flag;gc896*next;} header;};
extern gc896*store896;
extern int store_left896;
extern fsoc*store_chunk896;
extern gc896*gc_free896;
extern na_env na_env897;
typedef struct B898 gc898;
struct B898{T898 object;union {void*flag;gc898*next;} header;};
extern gc898*store898;
extern int store_left898;
extern fsoc*store_chunk898;
extern gc898*gc_free898;
typedef struct B899 gc899;
struct B899{T899 object;union {void*flag;gc899*next;} header;};
extern gc899*store899;
extern int store_left899;
extern fsoc*store_chunk899;
extern gc899*gc_free899;
typedef struct B900 gc900;
struct B900{T900 object;union {void*flag;gc900*next;} header;};
extern gc900*store900;
extern int store_left900;
extern fsoc*store_chunk900;
extern gc900*gc_free900;
typedef struct B901 gc901;
struct B901{T901 object;union {void*flag;gc901*next;} header;};
extern gc901*store901;
extern int store_left901;
extern fsoc*store_chunk901;
extern gc901*gc_free901;
typedef struct B274 gc274;
struct B274{T274 object;union {void*flag;gc274*next;} header;};
extern gc274*store274;
extern int store_left274;
extern fsoc*store_chunk274;
extern gc274*gc_free274;
extern na_env na_env902;
typedef struct B905 gc905;
struct B905{T905 object;union {void*flag;gc905*next;} header;};
extern gc905*store905;
extern int store_left905;
extern fsoc*store_chunk905;
extern gc905*gc_free905;
typedef struct B91 gc91;
struct B91{T91 object;union {void*flag;gc91*next;} header;};
extern gc91*store91;
extern int store_left91;
extern fsoc*store_chunk91;
extern gc91*gc_free91;
extern na_env na_env906;
extern na_env na_env907;
typedef struct B908 gc908;
struct B908{T908 object;union {void*flag;gc908*next;} header;};
extern gc908*store908;
extern int store_left908;
extern fsoc*store_chunk908;
extern gc908*gc_free908;
typedef struct B741 gc741;
struct B741{T741 object;union {void*flag;gc741*next;} header;};
extern gc741*store741;
extern int store_left741;
extern fsoc*store_chunk741;
extern gc741*gc_free741;
typedef struct B791 gc791;
struct B791{T791 object;union {void*flag;gc791*next;} header;};
extern gc791*store791;
extern int store_left791;
extern fsoc*store_chunk791;
extern gc791*gc_free791;
typedef struct B910 gc910;
struct B910{T910 object;union {void*flag;gc910*next;} header;};
extern gc910*store910;
extern int store_left910;
extern fsoc*store_chunk910;
extern gc910*gc_free910;
extern na_env na_env911;
typedef struct B912 gc912;
struct B912{T912 object;union {void*flag;gc912*next;} header;};
extern gc912*store912;
extern int store_left912;
extern fsoc*store_chunk912;
extern gc912*gc_free912;
typedef struct B914 gc914;
struct B914{T914 object;union {void*flag;gc914*next;} header;};
extern gc914*store914;
extern int store_left914;
extern fsoc*store_chunk914;
extern gc914*gc_free914;
typedef struct B916 gc916;
struct B916{T916 object;union {void*flag;gc916*next;} header;};
extern gc916*store916;
extern int store_left916;
extern fsoc*store_chunk916;
extern gc916*gc_free916;
typedef struct B743 gc743;
struct B743{T743 object;union {void*flag;gc743*next;} header;};
extern gc743*store743;
extern int store_left743;
extern fsoc*store_chunk743;
extern gc743*gc_free743;
typedef struct B919 gc919;
struct B919{T919 object;union {void*flag;gc919*next;} header;};
extern gc919*store919;
extern int store_left919;
extern fsoc*store_chunk919;
extern gc919*gc_free919;
typedef struct B444 gc444;
struct B444{T444 object;union {void*flag;gc444*next;} header;};
extern gc444*store444;
extern int store_left444;
extern fsoc*store_chunk444;
extern gc444*gc_free444;
typedef struct B421 gc421;
struct B421{T421 object;union {void*flag;gc421*next;} header;};
extern gc421*store421;
extern int store_left421;
extern fsoc*store_chunk421;
extern gc421*gc_free421;
typedef struct B375 gc375;
struct B375{T375 object;union {void*flag;gc375*next;} header;};
extern gc375*store375;
extern int store_left375;
extern fsoc*store_chunk375;
extern gc375*gc_free375;
typedef struct B427 gc427;
struct B427{T427 object;union {void*flag;gc427*next;} header;};
extern gc427*store427;
extern int store_left427;
extern fsoc*store_chunk427;
extern gc427*gc_free427;
typedef struct B436 gc436;
struct B436{T436 object;union {void*flag;gc436*next;} header;};
extern gc436*store436;
extern int store_left436;
extern fsoc*store_chunk436;
extern gc436*gc_free436;
typedef struct B478 gc478;
struct B478{T478 object;union {void*flag;gc478*next;} header;};
extern gc478*store478;
extern int store_left478;
extern fsoc*store_chunk478;
extern gc478*gc_free478;
typedef struct B488 gc488;
struct B488{T488 object;union {void*flag;gc488*next;} header;};
extern gc488*store488;
extern int store_left488;
extern fsoc*store_chunk488;
extern gc488*gc_free488;
typedef struct B490 gc490;
struct B490{T490 object;union {void*flag;gc490*next;} header;};
extern gc490*store490;
extern int store_left490;
extern fsoc*store_chunk490;
extern gc490*gc_free490;
typedef struct B349 gc349;
struct B349{T349 object;union {void*flag;gc349*next;} header;};
extern gc349*store349;
extern int store_left349;
extern fsoc*store_chunk349;
extern gc349*gc_free349;
typedef struct B106 gc106;
struct B106{T106 object;union {void*flag;gc106*next;} header;};
extern gc106*store106;
extern int store_left106;
extern fsoc*store_chunk106;
extern gc106*gc_free106;
typedef struct B491 gc491;
struct B491{T491 object;union {void*flag;gc491*next;} header;};
extern gc491*store491;
extern int store_left491;
extern fsoc*store_chunk491;
extern gc491*gc_free491;
typedef struct B440 gc440;
struct B440{T440 object;union {void*flag;gc440*next;} header;};
extern gc440*store440;
extern int store_left440;
extern fsoc*store_chunk440;
extern gc440*gc_free440;
typedef struct B403 gc403;
struct B403{T403 object;union {void*flag;gc403*next;} header;};
extern gc403*store403;
extern int store_left403;
extern fsoc*store_chunk403;
extern gc403*gc_free403;
typedef struct B376 gc376;
struct B376{T376 object;union {void*flag;gc376*next;} header;};
extern gc376*store376;
extern int store_left376;
extern fsoc*store_chunk376;
extern gc376*gc_free376;
typedef struct B431 gc431;
struct B431{T431 object;union {void*flag;gc431*next;} header;};
extern gc431*store431;
extern int store_left431;
extern fsoc*store_chunk431;
extern gc431*gc_free431;
typedef struct B402 gc402;
struct B402{T402 object;union {void*flag;gc402*next;} header;};
extern gc402*store402;
extern int store_left402;
extern fsoc*store_chunk402;
extern gc402*gc_free402;
typedef struct B429 gc429;
struct B429{T429 object;union {void*flag;gc429*next;} header;};
extern gc429*store429;
extern int store_left429;
extern fsoc*store_chunk429;
extern gc429*gc_free429;
typedef struct B398 gc398;
struct B398{T398 object;union {void*flag;gc398*next;} header;};
extern gc398*store398;
extern int store_left398;
extern fsoc*store_chunk398;
extern gc398*gc_free398;
typedef struct B432 gc432;
struct B432{T432 object;union {void*flag;gc432*next;} header;};
extern gc432*store432;
extern int store_left432;
extern fsoc*store_chunk432;
extern gc432*gc_free432;
typedef struct B430 gc430;
struct B430{T430 object;union {void*flag;gc430*next;} header;};
extern gc430*store430;
extern int store_left430;
extern fsoc*store_chunk430;
extern gc430*gc_free430;
typedef struct B437 gc437;
struct B437{T437 object;union {void*flag;gc437*next;} header;};
extern gc437*store437;
extern int store_left437;
extern fsoc*store_chunk437;
extern gc437*gc_free437;
typedef struct B434 gc434;
struct B434{T434 object;union {void*flag;gc434*next;} header;};
extern gc434*store434;
extern int store_left434;
extern fsoc*store_chunk434;
extern gc434*gc_free434;
typedef struct B438 gc438;
struct B438{T438 object;union {void*flag;gc438*next;} header;};
extern gc438*store438;
extern int store_left438;
extern fsoc*store_chunk438;
extern gc438*gc_free438;
typedef struct B441 gc441;
struct B441{T441 object;union {void*flag;gc441*next;} header;};
extern gc441*store441;
extern int store_left441;
extern fsoc*store_chunk441;
extern gc441*gc_free441;
typedef struct B266 gc266;
struct B266{T266 object;union {void*flag;gc266*next;} header;};
extern gc266*store266;
extern int store_left266;
extern fsoc*store_chunk266;
extern gc266*gc_free266;
typedef struct B461 gc461;
struct B461{T461 object;union {void*flag;gc461*next;} header;};
extern gc461*store461;
extern int store_left461;
extern fsoc*store_chunk461;
extern gc461*gc_free461;
typedef struct B463 gc463;
struct B463{T463 object;union {void*flag;gc463*next;} header;};
extern gc463*store463;
extern int store_left463;
extern fsoc*store_chunk463;
extern gc463*gc_free463;
typedef struct B464 gc464;
struct B464{T464 object;union {void*flag;gc464*next;} header;};
extern gc464*store464;
extern int store_left464;
extern fsoc*store_chunk464;
extern gc464*gc_free464;
typedef struct B465 gc465;
struct B465{T465 object;union {void*flag;gc465*next;} header;};
extern gc465*store465;
extern int store_left465;
extern fsoc*store_chunk465;
extern gc465*gc_free465;
typedef struct B466 gc466;
struct B466{T466 object;union {void*flag;gc466*next;} header;};
extern gc466*store466;
extern int store_left466;
extern fsoc*store_chunk466;
extern gc466*gc_free466;
typedef struct B416 gc416;
struct B416{T416 object;union {void*flag;gc416*next;} header;};
extern gc416*store416;
extern int store_left416;
extern fsoc*store_chunk416;
extern gc416*gc_free416;
typedef struct B920 gc920;
struct B920{T920 object;union {void*flag;gc920*next;} header;};
extern gc920*store920;
extern int store_left920;
extern fsoc*store_chunk920;
extern gc920*gc_free920;
typedef struct B273 gc273;
struct B273{T273 object;union {void*flag;gc273*next;} header;};
extern gc273*store273;
extern int store_left273;
extern fsoc*store_chunk273;
extern gc273*gc_free273;
typedef struct B471 gc471;
struct B471{T471 object;union {void*flag;gc471*next;} header;};
extern gc471*store471;
extern int store_left471;
extern fsoc*store_chunk471;
extern gc471*gc_free471;
typedef struct B921 gc921;
struct B921{T921 object;union {void*flag;gc921*next;} header;};
extern gc921*store921;
extern int store_left921;
extern fsoc*store_chunk921;
extern gc921*gc_free921;
typedef struct B511 gc511;
struct B511{T511 object;union {void*flag;gc511*next;} header;};
extern gc511*store511;
extern int store_left511;
extern fsoc*store_chunk511;
extern gc511*gc_free511;
typedef struct B480 gc480;
struct B480{T480 object;union {void*flag;gc480*next;} header;};
extern gc480*store480;
extern int store_left480;
extern fsoc*store_chunk480;
extern gc480*gc_free480;
typedef struct B396 gc396;
struct B396{T396 object;union {void*flag;gc396*next;} header;};
extern gc396*store396;
extern int store_left396;
extern fsoc*store_chunk396;
extern gc396*gc_free396;
typedef struct B467 gc467;
struct B467{T467 object;union {void*flag;gc467*next;} header;};
extern gc467*store467;
extern int store_left467;
extern fsoc*store_chunk467;
extern gc467*gc_free467;
typedef struct B366 gc366;
struct B366{T366 object;union {void*flag;gc366*next;} header;};
extern gc366*store366;
extern int store_left366;
extern fsoc*store_chunk366;
extern gc366*gc_free366;
typedef struct B468 gc468;
struct B468{T468 object;union {void*flag;gc468*next;} header;};
extern gc468*store468;
extern int store_left468;
extern fsoc*store_chunk468;
extern gc468*gc_free468;
typedef struct B469 gc469;
struct B469{T469 object;union {void*flag;gc469*next;} header;};
extern gc469*store469;
extern int store_left469;
extern fsoc*store_chunk469;
extern gc469*gc_free469;
typedef struct B334 gc334;
struct B334{T334 object;union {void*flag;gc334*next;} header;};
extern gc334*store334;
extern int store_left334;
extern fsoc*store_chunk334;
extern gc334*gc_free334;
typedef struct B343 gc343;
struct B343{T343 object;union {void*flag;gc343*next;} header;};
extern gc343*store343;
extern int store_left343;
extern fsoc*store_chunk343;
extern gc343*gc_free343;
typedef struct B346 gc346;
struct B346{T346 object;union {void*flag;gc346*next;} header;};
extern gc346*store346;
extern int store_left346;
extern fsoc*store_chunk346;
extern gc346*gc_free346;
typedef struct B348 gc348;
struct B348{T348 object;union {void*flag;gc348*next;} header;};
extern gc348*store348;
extern int store_left348;
extern fsoc*store_chunk348;
extern gc348*gc_free348;
typedef struct B337 gc337;
struct B337{T337 object;union {void*flag;gc337*next;} header;};
extern gc337*store337;
extern int store_left337;
extern fsoc*store_chunk337;
extern gc337*gc_free337;
typedef struct B341 gc341;
struct B341{T341 object;union {void*flag;gc341*next;} header;};
extern gc341*store341;
extern int store_left341;
extern fsoc*store_chunk341;
extern gc341*gc_free341;
typedef struct B342 gc342;
struct B342{T342 object;union {void*flag;gc342*next;} header;};
extern gc342*store342;
extern int store_left342;
extern fsoc*store_chunk342;
extern gc342*gc_free342;
typedef struct B482 gc482;
struct B482{T482 object;union {void*flag;gc482*next;} header;};
extern gc482*store482;
extern int store_left482;
extern fsoc*store_chunk482;
extern gc482*gc_free482;
typedef struct B483 gc483;
struct B483{T483 object;union {void*flag;gc483*next;} header;};
extern gc483*store483;
extern int store_left483;
extern fsoc*store_chunk483;
extern gc483*gc_free483;
typedef struct B484 gc484;
struct B484{T484 object;union {void*flag;gc484*next;} header;};
extern gc484*store484;
extern int store_left484;
extern fsoc*store_chunk484;
extern gc484*gc_free484;
typedef struct B473 gc473;
struct B473{T473 object;union {void*flag;gc473*next;} header;};
extern gc473*store473;
extern int store_left473;
extern fsoc*store_chunk473;
extern gc473*gc_free473;
typedef struct B380 gc380;
struct B380{T380 object;union {void*flag;gc380*next;} header;};
extern gc380*store380;
extern int store_left380;
extern fsoc*store_chunk380;
extern gc380*gc_free380;
typedef struct B451 gc451;
struct B451{T451 object;union {void*flag;gc451*next;} header;};
extern gc451*store451;
extern int store_left451;
extern fsoc*store_chunk451;
extern gc451*gc_free451;
typedef struct B457 gc457;
struct B457{T457 object;union {void*flag;gc457*next;} header;};
extern gc457*store457;
extern int store_left457;
extern fsoc*store_chunk457;
extern gc457*gc_free457;
typedef struct B474 gc474;
struct B474{T474 object;union {void*flag;gc474*next;} header;};
extern gc474*store474;
extern int store_left474;
extern fsoc*store_chunk474;
extern gc474*gc_free474;
typedef struct B508 gc508;
struct B508{T508 object;union {void*flag;gc508*next;} header;};
extern gc508*store508;
extern int store_left508;
extern fsoc*store_chunk508;
extern gc508*gc_free508;
typedef struct B509 gc509;
struct B509{T509 object;union {void*flag;gc509*next;} header;};
extern gc509*store509;
extern int store_left509;
extern fsoc*store_chunk509;
extern gc509*gc_free509;
typedef struct B922 gc922;
struct B922{T922 object;union {void*flag;gc922*next;} header;};
extern gc922*store922;
extern int store_left922;
extern fsoc*store_chunk922;
extern gc922*gc_free922;
typedef struct B923 gc923;
struct B923{T923 object;union {void*flag;gc923*next;} header;};
extern gc923*store923;
extern int store_left923;
extern fsoc*store_chunk923;
extern gc923*gc_free923;
typedef struct B448 gc448;
struct B448{T448 object;union {void*flag;gc448*next;} header;};
extern gc448*store448;
extern int store_left448;
extern fsoc*store_chunk448;
extern gc448*gc_free448;
typedef struct B449 gc449;
struct B449{T449 object;union {void*flag;gc449*next;} header;};
extern gc449*store449;
extern int store_left449;
extern fsoc*store_chunk449;
extern gc449*gc_free449;
typedef struct B924 gc924;
struct B924{T924 object;union {void*flag;gc924*next;} header;};
extern gc924*store924;
extern int store_left924;
extern fsoc*store_chunk924;
extern gc924*gc_free924;
typedef struct B386 gc386;
struct B386{T386 object;union {void*flag;gc386*next;} header;};
extern gc386*store386;
extern int store_left386;
extern fsoc*store_chunk386;
extern gc386*gc_free386;
typedef struct B925 gc925;
struct B925{T925 object;union {void*flag;gc925*next;} header;};
extern gc925*store925;
extern int store_left925;
extern fsoc*store_chunk925;
extern gc925*gc_free925;
typedef struct B658 gc658;
struct B658{T658 object;union {void*flag;gc658*next;} header;};
extern gc658*store658;
extern int store_left658;
extern fsoc*store_chunk658;
extern gc658*gc_free658;
typedef struct B926 gc926;
struct B926{T926 object;union {void*flag;gc926*next;} header;};
extern gc926*store926;
extern int store_left926;
extern fsoc*store_chunk926;
extern gc926*gc_free926;
typedef struct B413 gc413;
struct B413{T413 object;union {void*flag;gc413*next;} header;};
extern gc413*store413;
extern int store_left413;
extern fsoc*store_chunk413;
extern gc413*gc_free413;
typedef struct B383 gc383;
struct B383{T383 object;union {void*flag;gc383*next;} header;};
extern gc383*store383;
extern int store_left383;
extern fsoc*store_chunk383;
extern gc383*gc_free383;
typedef struct B927 gc927;
struct B927{T927 object;union {void*flag;gc927*next;} header;};
extern gc927*store927;
extern int store_left927;
extern fsoc*store_chunk927;
extern gc927*gc_free927;
typedef struct B387 gc387;
struct B387{T387 object;union {void*flag;gc387*next;} header;};
extern gc387*store387;
extern int store_left387;
extern fsoc*store_chunk387;
extern gc387*gc_free387;
typedef struct B443 gc443;
struct B443{T443 object;union {void*flag;gc443*next;} header;};
extern gc443*store443;
extern int store_left443;
extern fsoc*store_chunk443;
extern gc443*gc_free443;
typedef struct B510 gc510;
struct B510{T510 object;union {void*flag;gc510*next;} header;};
extern gc510*store510;
extern int store_left510;
extern fsoc*store_chunk510;
extern gc510*gc_free510;
typedef struct B928 gc928;
struct B928{T928 object;union {void*flag;gc928*next;} header;};
extern gc928*store928;
extern int store_left928;
extern fsoc*store_chunk928;
extern gc928*gc_free928;
typedef struct B470 gc470;
struct B470{T470 object;union {void*flag;gc470*next;} header;};
extern gc470*store470;
extern int store_left470;
extern fsoc*store_chunk470;
extern gc470*gc_free470;
typedef struct B407 gc407;
struct B407{T407 object;union {void*flag;gc407*next;} header;};
extern gc407*store407;
extern int store_left407;
extern fsoc*store_chunk407;
extern gc407*gc_free407;
typedef struct B393 gc393;
struct B393{T393 object;union {void*flag;gc393*next;} header;};
extern gc393*store393;
extern int store_left393;
extern fsoc*store_chunk393;
extern gc393*gc_free393;
typedef struct B929 gc929;
struct B929{T929 object;union {void*flag;gc929*next;} header;};
extern gc929*store929;
extern int store_left929;
extern fsoc*store_chunk929;
extern gc929*gc_free929;
typedef struct B352 gc352;
struct B352{T352 object;union {void*flag;gc352*next;} header;};
extern gc352*store352;
extern int store_left352;
extern fsoc*store_chunk352;
extern gc352*gc_free352;
typedef struct B364 gc364;
struct B364{T364 object;union {void*flag;gc364*next;} header;};
extern gc364*store364;
extern int store_left364;
extern fsoc*store_chunk364;
extern gc364*gc_free364;
typedef struct B357 gc357;
struct B357{T357 object;union {void*flag;gc357*next;} header;};
extern gc357*store357;
extern int store_left357;
extern fsoc*store_chunk357;
extern gc357*gc_free357;
typedef struct B472 gc472;
struct B472{T472 object;union {void*flag;gc472*next;} header;};
extern gc472*store472;
extern int store_left472;
extern fsoc*store_chunk472;
extern gc472*gc_free472;
typedef struct B418 gc418;
struct B418{T418 object;union {void*flag;gc418*next;} header;};
extern gc418*store418;
extern int store_left418;
extern fsoc*store_chunk418;
extern gc418*gc_free418;
typedef struct B459 gc459;
struct B459{T459 object;union {void*flag;gc459*next;} header;};
extern gc459*store459;
extern int store_left459;
extern fsoc*store_chunk459;
extern gc459*gc_free459;
typedef struct B460 gc460;
struct B460{T460 object;union {void*flag;gc460*next;} header;};
extern gc460*store460;
extern int store_left460;
extern fsoc*store_chunk460;
extern gc460*gc_free460;
typedef struct B359 gc359;
struct B359{T359 object;union {void*flag;gc359*next;} header;};
extern gc359*store359;
extern int store_left359;
extern fsoc*store_chunk359;
extern gc359*gc_free359;
typedef struct B399 gc399;
struct B399{T399 object;union {void*flag;gc399*next;} header;};
extern gc399*store399;
extern int store_left399;
extern fsoc*store_chunk399;
extern gc399*gc_free399;
typedef struct B458 gc458;
struct B458{T458 object;union {void*flag;gc458*next;} header;};
extern gc458*store458;
extern int store_left458;
extern fsoc*store_chunk458;
extern gc458*gc_free458;
typedef struct B487 gc487;
struct B487{T487 object;union {void*flag;gc487*next;} header;};
extern gc487*store487;
extern int store_left487;
extern fsoc*store_chunk487;
extern gc487*gc_free487;
typedef struct B477 gc477;
struct B477{T477 object;union {void*flag;gc477*next;} header;};
extern gc477*store477;
extern int store_left477;
extern fsoc*store_chunk477;
extern gc477*gc_free477;
typedef struct B362 gc362;
struct B362{T362 object;union {void*flag;gc362*next;} header;};
extern gc362*store362;
extern int store_left362;
extern fsoc*store_chunk362;
extern gc362*gc_free362;
typedef struct B389 gc389;
struct B389{T389 object;union {void*flag;gc389*next;} header;};
extern gc389*store389;
extern int store_left389;
extern fsoc*store_chunk389;
extern gc389*gc_free389;
typedef struct B454 gc454;
struct B454{T454 object;union {void*flag;gc454*next;} header;};
extern gc454*store454;
extern int store_left454;
extern fsoc*store_chunk454;
extern gc454*gc_free454;
typedef struct B390 gc390;
struct B390{T390 object;union {void*flag;gc390*next;} header;};
extern gc390*store390;
extern int store_left390;
extern fsoc*store_chunk390;
extern gc390*gc_free390;
typedef struct B653 gc653;
struct B653{T653 object;union {void*flag;gc653*next;} header;};
extern gc653*store653;
extern int store_left653;
extern fsoc*store_chunk653;
extern gc653*gc_free653;
typedef struct B476 gc476;
struct B476{T476 object;union {void*flag;gc476*next;} header;};
extern gc476*store476;
extern int store_left476;
extern fsoc*store_chunk476;
extern gc476*gc_free476;
typedef struct B391 gc391;
struct B391{T391 object;union {void*flag;gc391*next;} header;};
extern gc391*store391;
extern int store_left391;
extern fsoc*store_chunk391;
extern gc391*gc_free391;
typedef struct B485 gc485;
struct B485{T485 object;union {void*flag;gc485*next;} header;};
extern gc485*store485;
extern int store_left485;
extern fsoc*store_chunk485;
extern gc485*gc_free485;
typedef struct B507 gc507;
struct B507{T507 object;union {void*flag;gc507*next;} header;};
extern gc507*store507;
extern int store_left507;
extern fsoc*store_chunk507;
extern gc507*gc_free507;
typedef struct B506 gc506;
struct B506{T506 object;union {void*flag;gc506*next;} header;};
extern gc506*store506;
extern int store_left506;
extern fsoc*store_chunk506;
extern gc506*gc_free506;
typedef struct B502 gc502;
struct B502{T502 object;union {void*flag;gc502*next;} header;};
extern gc502*store502;
extern int store_left502;
extern fsoc*store_chunk502;
extern gc502*gc_free502;
typedef struct B503 gc503;
struct B503{T503 object;union {void*flag;gc503*next;} header;};
extern gc503*store503;
extern int store_left503;
extern fsoc*store_chunk503;
extern gc503*gc_free503;
typedef struct B504 gc504;
struct B504{T504 object;union {void*flag;gc504*next;} header;};
extern gc504*store504;
extern int store_left504;
extern fsoc*store_chunk504;
extern gc504*gc_free504;
typedef struct B505 gc505;
struct B505{T505 object;union {void*flag;gc505*next;} header;};
extern gc505*store505;
extern int store_left505;
extern fsoc*store_chunk505;
extern gc505*gc_free505;
typedef struct B501 gc501;
struct B501{T501 object;union {void*flag;gc501*next;} header;};
extern gc501*store501;
extern int store_left501;
extern fsoc*store_chunk501;
extern gc501*gc_free501;
typedef struct B369 gc369;
struct B369{T369 object;union {void*flag;gc369*next;} header;};
extern gc369*store369;
extern int store_left369;
extern fsoc*store_chunk369;
extern gc369*gc_free369;
typedef struct B392 gc392;
struct B392{T392 object;union {void*flag;gc392*next;} header;};
extern gc392*store392;
extern int store_left392;
extern fsoc*store_chunk392;
extern gc392*gc_free392;
typedef struct B497 gc497;
struct B497{T497 object;union {void*flag;gc497*next;} header;};
extern gc497*store497;
extern int store_left497;
extern fsoc*store_chunk497;
extern gc497*gc_free497;
typedef struct B498 gc498;
struct B498{T498 object;union {void*flag;gc498*next;} header;};
extern gc498*store498;
extern int store_left498;
extern fsoc*store_chunk498;
extern gc498*gc_free498;
typedef struct B499 gc499;
struct B499{T499 object;union {void*flag;gc499*next;} header;};
extern gc499*store499;
extern int store_left499;
extern fsoc*store_chunk499;
extern gc499*gc_free499;
typedef struct B500 gc500;
struct B500{T500 object;union {void*flag;gc500*next;} header;};
extern gc500*store500;
extern int store_left500;
extern fsoc*store_chunk500;
extern gc500*gc_free500;
typedef struct B397 gc397;
struct B397{T397 object;union {void*flag;gc397*next;} header;};
extern gc397*store397;
extern int store_left397;
extern fsoc*store_chunk397;
extern gc397*gc_free397;
typedef struct B496 gc496;
struct B496{T496 object;union {void*flag;gc496*next;} header;};
extern gc496*store496;
extern int store_left496;
extern fsoc*store_chunk496;
extern gc496*gc_free496;
typedef struct B493 gc493;
struct B493{T493 object;union {void*flag;gc493*next;} header;};
extern gc493*store493;
extern int store_left493;
extern fsoc*store_chunk493;
extern gc493*gc_free493;
typedef struct B494 gc494;
struct B494{T494 object;union {void*flag;gc494*next;} header;};
extern gc494*store494;
extern int store_left494;
extern fsoc*store_chunk494;
extern gc494*gc_free494;
typedef struct B495 gc495;
struct B495{T495 object;union {void*flag;gc495*next;} header;};
extern gc495*store495;
extern int store_left495;
extern fsoc*store_chunk495;
extern gc495*gc_free495;
typedef struct B492 gc492;
struct B492{T492 object;union {void*flag;gc492*next;} header;};
extern gc492*store492;
extern int store_left492;
extern fsoc*store_chunk492;
extern gc492*gc_free492;
typedef struct B452 gc452;
struct B452{T452 object;union {void*flag;gc452*next;} header;};
extern gc452*store452;
extern int store_left452;
extern fsoc*store_chunk452;
extern gc452*gc_free452;
typedef struct B453 gc453;
struct B453{T453 object;union {void*flag;gc453*next;} header;};
extern gc453*store453;
extern int store_left453;
extern fsoc*store_chunk453;
extern gc453*gc_free453;
typedef struct B486 gc486;
struct B486{T486 object;union {void*flag;gc486*next;} header;};
extern gc486*store486;
extern int store_left486;
extern fsoc*store_chunk486;
extern gc486*gc_free486;
typedef struct B279 gc279;
struct B279{T279 object;union {void*flag;gc279*next;} header;};
extern gc279*store279;
extern int store_left279;
extern fsoc*store_chunk279;
extern gc279*gc_free279;
typedef struct B456 gc456;
struct B456{T456 object;union {void*flag;gc456*next;} header;};
extern gc456*store456;
extern int store_left456;
extern fsoc*store_chunk456;
extern gc456*gc_free456;
typedef struct B455 gc455;
struct B455{T455 object;union {void*flag;gc455*next;} header;};
extern gc455*store455;
extern int store_left455;
extern fsoc*store_chunk455;
extern gc455*gc_free455;
typedef struct B930 gc930;
struct B930{T930 object;union {void*flag;gc930*next;} header;};
extern gc930*store930;
extern int store_left930;
extern fsoc*store_chunk930;
extern gc930*gc_free930;
typedef struct B414 gc414;
struct B414{T414 object;union {void*flag;gc414*next;} header;};
extern gc414*store414;
extern int store_left414;
extern fsoc*store_chunk414;
extern gc414*gc_free414;
typedef struct B423 gc423;
struct B423{T423 object;union {void*flag;gc423*next;} header;};
extern gc423*store423;
extern int store_left423;
extern fsoc*store_chunk423;
extern gc423*gc_free423;
typedef struct B742 gc742;
struct B742{T742 object;union {void*flag;gc742*next;} header;};
extern gc742*store742;
extern int store_left742;
extern fsoc*store_chunk742;
extern gc742*gc_free742;
typedef struct B450 gc450;
struct B450{T450 object;union {void*flag;gc450*next;} header;};
extern gc450*store450;
extern int store_left450;
extern fsoc*store_chunk450;
extern gc450*gc_free450;
typedef struct B353 gc353;
struct B353{T353 object;union {void*flag;gc353*next;} header;};
extern gc353*store353;
extern int store_left353;
extern fsoc*store_chunk353;
extern gc353*gc_free353;
typedef struct B405 gc405;
struct B405{T405 object;union {void*flag;gc405*next;} header;};
extern gc405*store405;
extern int store_left405;
extern fsoc*store_chunk405;
extern gc405*gc_free405;
typedef struct B388 gc388;
struct B388{T388 object;union {void*flag;gc388*next;} header;};
extern gc388*store388;
extern int store_left388;
extern fsoc*store_chunk388;
extern gc388*gc_free388;
typedef struct B931 gc931;
struct B931{T931 object;union {void*flag;gc931*next;} header;};
extern gc931*store931;
extern int store_left931;
extern fsoc*store_chunk931;
extern gc931*gc_free931;
typedef struct B932 gc932;
struct B932{T932 object;union {void*flag;gc932*next;} header;};
extern gc932*store932;
extern int store_left932;
extern fsoc*store_chunk932;
extern gc932*gc_free932;
typedef struct B933 gc933;
struct B933{T933 object;union {void*flag;gc933*next;} header;};
extern gc933*store933;
extern int store_left933;
extern fsoc*store_chunk933;
extern gc933*gc_free933;
typedef struct B934 gc934;
struct B934{T934 object;union {void*flag;gc934*next;} header;};
extern gc934*store934;
extern int store_left934;
extern fsoc*store_chunk934;
extern gc934*gc_free934;
extern na_env na_env935;
extern na_env na_env936;
extern na_env na_env937;
typedef struct B938 gc938;
struct B938{T938 object;union {void*flag;gc938*next;} header;};
extern gc938*store938;
extern int store_left938;
extern fsoc*store_chunk938;
extern gc938*gc_free938;
typedef struct B525 gc525;
struct B525{T525 object;union {void*flag;gc525*next;} header;};
extern gc525*store525;
extern int store_left525;
extern fsoc*store_chunk525;
extern gc525*gc_free525;
typedef struct B939 gc939;
struct B939{T939 object;union {void*flag;gc939*next;} header;};
extern gc939*store939;
extern int store_left939;
extern fsoc*store_chunk939;
extern gc939*gc_free939;
typedef struct B941 gc941;
struct B941{T941 object;union {void*flag;gc941*next;} header;};
extern gc941*store941;
extern int store_left941;
extern fsoc*store_chunk941;
extern gc941*gc_free941;
typedef struct B425 gc425;
struct B425{T425 object;union {void*flag;gc425*next;} header;};
extern gc425*store425;
extern int store_left425;
extern fsoc*store_chunk425;
extern gc425*gc_free425;
typedef struct B417 gc417;
struct B417{T417 object;union {void*flag;gc417*next;} header;};
extern gc417*store417;
extern int store_left417;
extern fsoc*store_chunk417;
extern gc417*gc_free417;

#define gc_mark942(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark945(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B947 gc947;
struct B947{T947 object;union {void*flag;gc947*next;} header;};
extern gc947*store947;
extern int store_left947;
extern fsoc*store_chunk947;
extern gc947*gc_free947;
typedef struct B948 gc948;
struct B948{T948 object;union {void*flag;gc948*next;} header;};
extern gc948*store948;
extern int store_left948;
extern fsoc*store_chunk948;
extern gc948*gc_free948;
typedef struct B445 gc445;
struct B445{T445 object;union {void*flag;gc445*next;} header;};
extern gc445*store445;
extern int store_left445;
extern fsoc*store_chunk445;
extern gc445*gc_free445;
typedef struct B422 gc422;
struct B422{T422 object;union {void*flag;gc422*next;} header;};
extern gc422*store422;
extern int store_left422;
extern fsoc*store_chunk422;
extern gc422*gc_free422;
typedef struct B442 gc442;
struct B442{T442 object;union {void*flag;gc442*next;} header;};
extern gc442*store442;
extern int store_left442;
extern fsoc*store_chunk442;
extern gc442*gc_free442;
typedef struct B949 gc949;
struct B949{T949 object;union {void*flag;gc949*next;} header;};
extern gc949*store949;
extern int store_left949;
extern fsoc*store_chunk949;
extern gc949*gc_free949;
typedef struct B420 gc420;
struct B420{T420 object;union {void*flag;gc420*next;} header;};
extern gc420*store420;
extern int store_left420;
extern fsoc*store_chunk420;
extern gc420*gc_free420;
typedef struct B950 gc950;
struct B950{T950 object;union {void*flag;gc950*next;} header;};
extern gc950*store950;
extern int store_left950;
extern fsoc*store_chunk950;
extern gc950*gc_free950;
extern na_env na_env951;
typedef struct B952 gc952;
struct B952{T952 object;union {void*flag;gc952*next;} header;};
extern gc952*store952;
extern int store_left952;
extern fsoc*store_chunk952;
extern gc952*gc_free952;
typedef struct B953 gc953;
struct B953{T953 object;union {void*flag;gc953*next;} header;};
extern gc953*store953;
extern int store_left953;
extern fsoc*store_chunk953;
extern gc953*gc_free953;
extern na_env na_env954;
typedef struct B955 gc955;
struct B955{T955 object;union {void*flag;gc955*next;} header;};
extern gc955*store955;
extern int store_left955;
extern fsoc*store_chunk955;
extern gc955*gc_free955;
extern na_env na_env956;
typedef struct B957 gc957;
struct B957{T957 object;union {void*flag;gc957*next;} header;};
extern gc957*store957;
extern int store_left957;
extern fsoc*store_chunk957;
extern gc957*gc_free957;
typedef struct B958 gc958;
struct B958{T958 object;union {void*flag;gc958*next;} header;};
extern gc958*store958;
extern int store_left958;
extern fsoc*store_chunk958;
extern gc958*gc_free958;
typedef struct B959 gc959;
struct B959{T959 object;union {void*flag;gc959*next;} header;};
extern gc959*store959;
extern int store_left959;
extern fsoc*store_chunk959;
extern gc959*gc_free959;
typedef struct B962 gc962;
struct B962{T962 object;union {void*flag;gc962*next;} header;};
extern gc962*store962;
extern int store_left962;
extern fsoc*store_chunk962;
extern gc962*gc_free962;
typedef struct B963 gc963;
struct B963{T963 object;union {void*flag;gc963*next;} header;};
extern gc963*store963;
extern int store_left963;
extern fsoc*store_chunk963;
extern gc963*gc_free963;
typedef struct B964 gc964;
struct B964{T964 object;union {void*flag;gc964*next;} header;};
extern gc964*store964;
extern int store_left964;
extern fsoc*store_chunk964;
extern gc964*gc_free964;
typedef struct B965 gc965;
struct B965{T965 object;union {void*flag;gc965*next;} header;};
extern gc965*store965;
extern int store_left965;
extern fsoc*store_chunk965;
extern gc965*gc_free965;
typedef struct B966 gc966;
struct B966{T966 object;union {void*flag;gc966*next;} header;};
extern gc966*store966;
extern int store_left966;
extern fsoc*store_chunk966;
extern gc966*gc_free966;
typedef struct B967 gc967;
struct B967{T967 object;union {void*flag;gc967*next;} header;};
extern gc967*store967;
extern int store_left967;
extern fsoc*store_chunk967;
extern gc967*gc_free967;
typedef struct B518 gc518;
struct B518{T518 object;union {void*flag;gc518*next;} header;};
extern gc518*store518;
extern int store_left518;
extern fsoc*store_chunk518;
extern gc518*gc_free518;
typedef struct B969 gc969;
struct B969{T969 object;union {void*flag;gc969*next;} header;};
extern gc969*store969;
extern int store_left969;
extern fsoc*store_chunk969;
extern gc969*gc_free969;
typedef struct B973 gc973;
struct B973{T973 object;union {void*flag;gc973*next;} header;};
extern gc973*store973;
extern int store_left973;
extern fsoc*store_chunk973;
extern gc973*gc_free973;
typedef struct B974 gc974;
struct B974{T974 object;union {void*flag;gc974*next;} header;};
extern gc974*store974;
extern int store_left974;
extern fsoc*store_chunk974;
extern gc974*gc_free974;
typedef struct B975 gc975;
struct B975{T975 object;union {void*flag;gc975*next;} header;};
extern gc975*store975;
extern int store_left975;
extern fsoc*store_chunk975;
extern gc975*gc_free975;
typedef struct B976 gc976;
struct B976{T976 object;union {void*flag;gc976*next;} header;};
extern gc976*store976;
extern int store_left976;
extern fsoc*store_chunk976;
extern gc976*gc_free976;
typedef struct B977 gc977;
struct B977{T977 object;union {void*flag;gc977*next;} header;};
extern gc977*store977;
extern int store_left977;
extern fsoc*store_chunk977;
extern gc977*gc_free977;
typedef struct B520 gc520;
struct B520{T520 object;union {void*flag;gc520*next;} header;};
extern gc520*store520;
extern int store_left520;
extern fsoc*store_chunk520;
extern gc520*gc_free520;
typedef struct B978 gc978;
struct B978{T978 object;union {void*flag;gc978*next;} header;};
extern gc978*store978;
extern int store_left978;
extern fsoc*store_chunk978;
extern gc978*gc_free978;
typedef struct B979 gc979;
struct B979{T979 object;union {void*flag;gc979*next;} header;};
extern gc979*store979;
extern int store_left979;
extern fsoc*store_chunk979;
extern gc979*gc_free979;
typedef struct B553 gc553;
struct B553{T553 object;union {void*flag;gc553*next;} header;};
extern gc553*store553;
extern int store_left553;
extern fsoc*store_chunk553;
extern gc553*gc_free553;
typedef struct B981 gc981;
struct B981{T981 object;union {void*flag;gc981*next;} header;};
extern gc981*store981;
extern int store_left981;
extern fsoc*store_chunk981;
extern gc981*gc_free981;
typedef struct B982 gc982;
struct B982{T982 object;union {void*flag;gc982*next;} header;};
extern gc982*store982;
extern int store_left982;
extern fsoc*store_chunk982;
extern gc982*gc_free982;
typedef struct B983 gc983;
struct B983{T983 object;union {void*flag;gc983*next;} header;};
extern gc983*store983;
extern int store_left983;
extern fsoc*store_chunk983;
extern gc983*gc_free983;
typedef struct B395 gc395;
struct B395{T395 object;union {void*flag;gc395*next;} header;};
extern gc395*store395;
extern int store_left395;
extern fsoc*store_chunk395;
extern gc395*gc_free395;
extern na_env na_env984;
typedef struct B985 gc985;
struct B985{T985 object;union {void*flag;gc985*next;} header;};
extern gc985*store985;
extern int store_left985;
extern fsoc*store_chunk985;
extern gc985*gc_free985;
typedef struct B986 gc986;
struct B986{T986 object;union {void*flag;gc986*next;} header;};
extern gc986*store986;
extern int store_left986;
extern fsoc*store_chunk986;
extern gc986*gc_free986;
extern na_env na_env987;
typedef struct B988 gc988;
struct B988{T988 object;union {void*flag;gc988*next;} header;};
extern gc988*store988;
extern int store_left988;
extern fsoc*store_chunk988;
extern gc988*gc_free988;
typedef struct B989 gc989;
struct B989{T989 object;union {void*flag;gc989*next;} header;};
extern gc989*store989;
extern int store_left989;
extern fsoc*store_chunk989;
extern gc989*gc_free989;
typedef struct B628 gc628;
struct B628{T628 object;union {void*flag;gc628*next;} header;};
extern gc628*store628;
extern int store_left628;
extern fsoc*store_chunk628;
extern gc628*gc_free628;
typedef struct B990 gc990;
struct B990{T990 object;union {void*flag;gc990*next;} header;};
extern gc990*store990;
extern int store_left990;
extern fsoc*store_chunk990;
extern gc990*gc_free990;
typedef struct B991 gc991;
struct B991{T991 object;union {void*flag;gc991*next;} header;};
extern gc991*store991;
extern int store_left991;
extern fsoc*store_chunk991;
extern gc991*gc_free991;
typedef struct B992 gc992;
struct B992{T992 object;union {void*flag;gc992*next;} header;};
extern gc992*store992;
extern int store_left992;
extern fsoc*store_chunk992;
extern gc992*gc_free992;
typedef struct B993 gc993;
struct B993{T993 object;union {void*flag;gc993*next;} header;};
extern gc993*store993;
extern int store_left993;
extern fsoc*store_chunk993;
extern gc993*gc_free993;
typedef struct B998 gc998;
struct B998{T998 object;union {void*flag;gc998*next;} header;};
extern gc998*store998;
extern int store_left998;
extern fsoc*store_chunk998;
extern gc998*gc_free998;
typedef struct B999 gc999;
struct B999{T999 object;union {void*flag;gc999*next;} header;};
extern gc999*store999;
extern int store_left999;
extern fsoc*store_chunk999;
extern gc999*gc_free999;
typedef struct B1000 gc1000;
struct B1000{T1000 object;union {void*flag;gc1000*next;} header;};
extern gc1000*store1000;
extern int store_left1000;
extern fsoc*store_chunk1000;
extern gc1000*gc_free1000;
typedef struct B1001 gc1001;
struct B1001{T1001 object;union {void*flag;gc1001*next;} header;};
extern gc1001*store1001;
extern int store_left1001;
extern fsoc*store_chunk1001;
extern gc1001*gc_free1001;
typedef struct B1002 gc1002;
struct B1002{T1002 object;union {void*flag;gc1002*next;} header;};
extern gc1002*store1002;
extern int store_left1002;
extern fsoc*store_chunk1002;
extern gc1002*gc_free1002;
typedef struct B1003 gc1003;
struct B1003{T1003 object;union {void*flag;gc1003*next;} header;};
extern gc1003*store1003;
extern int store_left1003;
extern fsoc*store_chunk1003;
extern gc1003*gc_free1003;
extern na_env na_env1004;
typedef struct B1005 gc1005;
struct B1005{T1005 object;union {void*flag;gc1005*next;} header;};
extern gc1005*store1005;
extern int store_left1005;
extern fsoc*store_chunk1005;
extern gc1005*gc_free1005;
typedef struct B1006 gc1006;
struct B1006{T1006 object;union {void*flag;gc1006*next;} header;};
extern gc1006*store1006;
extern int store_left1006;
extern fsoc*store_chunk1006;
extern gc1006*gc_free1006;
extern na_env na_env1007;
extern na_env na_env1008;
typedef struct B1009 gc1009;
struct B1009{T1009 object;union {void*flag;gc1009*next;} header;};
extern gc1009*store1009;
extern int store_left1009;
extern fsoc*store_chunk1009;
extern gc1009*gc_free1009;
typedef struct B1012 gc1012;
struct B1012{T1012 object;union {void*flag;gc1012*next;} header;};
extern gc1012*store1012;
extern int store_left1012;
extern fsoc*store_chunk1012;
extern gc1012*gc_free1012;
typedef struct B1013 gc1013;
struct B1013{T1013 object;union {void*flag;gc1013*next;} header;};
extern gc1013*store1013;
extern int store_left1013;
extern fsoc*store_chunk1013;
extern gc1013*gc_free1013;
typedef struct B1014 gc1014;
struct B1014{T1014 object;union {void*flag;gc1014*next;} header;};
extern gc1014*store1014;
extern int store_left1014;
extern fsoc*store_chunk1014;
extern gc1014*gc_free1014;
typedef struct B401 gc401;
struct B401{T401 object;union {void*flag;gc401*next;} header;};
extern gc401*store401;
extern int store_left401;
extern fsoc*store_chunk401;
extern gc401*gc_free401;
typedef struct B1015 gc1015;
struct B1015{T1015 object;union {void*flag;gc1015*next;} header;};
extern gc1015*store1015;
extern int store_left1015;
extern fsoc*store_chunk1015;
extern gc1015*gc_free1015;
typedef struct B554 gc554;
struct B554{T554 object;union {void*flag;gc554*next;} header;};
extern gc554*store554;
extern int store_left554;
extern fsoc*store_chunk554;
extern gc554*gc_free554;
typedef struct B1016 gc1016;
struct B1016{T1016 object;union {void*flag;gc1016*next;} header;};
extern gc1016*store1016;
extern int store_left1016;
extern fsoc*store_chunk1016;
extern gc1016*gc_free1016;
typedef struct B1017 gc1017;
struct B1017{T1017 object;union {void*flag;gc1017*next;} header;};
extern gc1017*store1017;
extern int store_left1017;
extern fsoc*store_chunk1017;
extern gc1017*gc_free1017;
extern na_env na_env1018;
extern na_env na_env1019;
typedef struct B1020 gc1020;
struct B1020{T1020 object;union {void*flag;gc1020*next;} header;};
extern gc1020*store1020;
extern int store_left1020;
extern fsoc*store_chunk1020;
extern gc1020*gc_free1020;
typedef struct B1021 gc1021;
struct B1021{T1021 object;union {void*flag;gc1021*next;} header;};
extern gc1021*store1021;
extern int store_left1021;
extern fsoc*store_chunk1021;
extern gc1021*gc_free1021;
extern na_env na_env1023;
typedef struct B1024 gc1024;
struct B1024{T1024 object;union {void*flag;gc1024*next;} header;};
extern gc1024*store1024;
extern int store_left1024;
extern fsoc*store_chunk1024;
extern gc1024*gc_free1024;
typedef struct B1025 gc1025;
struct B1025{T1025 object;union {void*flag;gc1025*next;} header;};
extern gc1025*store1025;
extern int store_left1025;
extern fsoc*store_chunk1025;
extern gc1025*gc_free1025;
extern na_env na_env1026;
typedef struct B1027 gc1027;
struct B1027{T1027 object;union {void*flag;gc1027*next;} header;};
extern gc1027*store1027;
extern int store_left1027;
extern fsoc*store_chunk1027;
extern gc1027*gc_free1027;
extern na_env na_env1029;
extern na_env na_env1030;
extern na_env na_env1031;
typedef struct B1032 gc1032;
struct B1032{T1032 object;union {void*flag;gc1032*next;} header;};
extern gc1032*store1032;
extern int store_left1032;
extern fsoc*store_chunk1032;
extern gc1032*gc_free1032;
typedef struct B1033 gc1033;
struct B1033{T1033 object;union {void*flag;gc1033*next;} header;};
extern gc1033*store1033;
extern int store_left1033;
extern fsoc*store_chunk1033;
extern gc1033*gc_free1033;
typedef struct B513 gc513;
struct B513{T513 object;union {void*flag;gc513*next;} header;};
extern gc513*store513;
extern int store_left513;
extern fsoc*store_chunk513;
extern gc513*gc_free513;
typedef struct B1035 gc1035;
struct B1035{T1035 object;union {void*flag;gc1035*next;} header;};
extern gc1035*store1035;
extern int store_left1035;
extern fsoc*store_chunk1035;
extern gc1035*gc_free1035;
typedef struct B767 gc767;
struct B767{T767 object;union {void*flag;gc767*next;} header;};
extern gc767*store767;
extern int store_left767;
extern fsoc*store_chunk767;
extern gc767*gc_free767;
typedef struct B1037 gc1037;
struct B1037{T1037 object;union {void*flag;gc1037*next;} header;};
extern gc1037*store1037;
extern int store_left1037;
extern fsoc*store_chunk1037;
extern gc1037*gc_free1037;
typedef struct B1038 gc1038;
struct B1038{T1038 object;union {void*flag;gc1038*next;} header;};
extern gc1038*store1038;
extern int store_left1038;
extern fsoc*store_chunk1038;
extern gc1038*gc_free1038;
typedef struct B1039 gc1039;
struct B1039{T1039 object;union {void*flag;gc1039*next;} header;};
extern gc1039*store1039;
extern int store_left1039;
extern fsoc*store_chunk1039;
extern gc1039*gc_free1039;
typedef struct B1040 gc1040;
struct B1040{T1040 object;union {void*flag;gc1040*next;} header;};
extern gc1040*store1040;
extern int store_left1040;
extern fsoc*store_chunk1040;
extern gc1040*gc_free1040;
extern na_env na_env1041;
typedef struct B1042 gc1042;
struct B1042{T1042 object;union {void*flag;gc1042*next;} header;};
extern gc1042*store1042;
extern int store_left1042;
extern fsoc*store_chunk1042;
extern gc1042*gc_free1042;
typedef struct B1043 gc1043;
struct B1043{T1043 object;union {void*flag;gc1043*next;} header;};
extern gc1043*store1043;
extern int store_left1043;
extern fsoc*store_chunk1043;
extern gc1043*gc_free1043;
extern na_env na_env1044;
extern na_env na_env1045;
typedef struct B1046 gc1046;
struct B1046{T1046 object;union {void*flag;gc1046*next;} header;};
extern gc1046*store1046;
extern int store_left1046;
extern fsoc*store_chunk1046;
extern gc1046*gc_free1046;
typedef struct B1047 gc1047;
struct B1047{T1047 object;union {void*flag;gc1047*next;} header;};
extern gc1047*store1047;
extern int store_left1047;
extern fsoc*store_chunk1047;
extern gc1047*gc_free1047;
typedef struct B1048 gc1048;
struct B1048{T1048 object;union {void*flag;gc1048*next;} header;};
extern gc1048*store1048;
extern int store_left1048;
extern fsoc*store_chunk1048;
extern gc1048*gc_free1048;
typedef struct B1049 gc1049;
struct B1049{T1049 object;union {void*flag;gc1049*next;} header;};
extern gc1049*store1049;
extern int store_left1049;
extern fsoc*store_chunk1049;
extern gc1049*gc_free1049;
extern na_env na_env1050;
typedef struct B1051 gc1051;
struct B1051{T1051 object;union {void*flag;gc1051*next;} header;};
extern gc1051*store1051;
extern int store_left1051;
extern fsoc*store_chunk1051;
extern gc1051*gc_free1051;
extern na_env na_env1052;
typedef struct B636 gc636;
struct B636{T636 object;union {void*flag;gc636*next;} header;};
extern gc636*store636;
extern int store_left636;
extern fsoc*store_chunk636;
extern gc636*gc_free636;
typedef struct B644 gc644;
struct B644{T644 object;union {void*flag;gc644*next;} header;};
extern gc644*store644;
extern int store_left644;
extern fsoc*store_chunk644;
extern gc644*gc_free644;
typedef struct B555 gc555;
struct B555{T555 object;union {void*flag;gc555*next;} header;};
extern gc555*store555;
extern int store_left555;
extern fsoc*store_chunk555;
extern gc555*gc_free555;
typedef struct B649 gc649;
struct B649{T649 object;union {void*flag;gc649*next;} header;};
extern gc649*store649;
extern int store_left649;
extern fsoc*store_chunk649;
extern gc649*gc_free649;
typedef struct B646 gc646;
struct B646{T646 object;union {void*flag;gc646*next;} header;};
extern gc646*store646;
extern int store_left646;
extern fsoc*store_chunk646;
extern gc646*gc_free646;
typedef struct B647 gc647;
struct B647{T647 object;union {void*flag;gc647*next;} header;};
extern gc647*store647;
extern int store_left647;
extern fsoc*store_chunk647;
extern gc647*gc_free647;
typedef struct B642 gc642;
struct B642{T642 object;union {void*flag;gc642*next;} header;};
extern gc642*store642;
extern int store_left642;
extern fsoc*store_chunk642;
extern gc642*gc_free642;
typedef struct B645 gc645;
struct B645{T645 object;union {void*flag;gc645*next;} header;};
extern gc645*store645;
extern int store_left645;
extern fsoc*store_chunk645;
extern gc645*gc_free645;
typedef struct B643 gc643;
struct B643{T643 object;union {void*flag;gc643*next;} header;};
extern gc643*store643;
extern int store_left643;
extern fsoc*store_chunk643;
extern gc643*gc_free643;
typedef struct B648 gc648;
struct B648{T648 object;union {void*flag;gc648*next;} header;};
extern gc648*store648;
extern int store_left648;
extern fsoc*store_chunk648;
extern gc648*gc_free648;
typedef struct B639 gc639;
struct B639{T639 object;union {void*flag;gc639*next;} header;};
extern gc639*store639;
extern int store_left639;
extern fsoc*store_chunk639;
extern gc639*gc_free639;
typedef struct B638 gc638;
struct B638{T638 object;union {void*flag;gc638*next;} header;};
extern gc638*store638;
extern int store_left638;
extern fsoc*store_chunk638;
extern gc638*gc_free638;
typedef struct B641 gc641;
struct B641{T641 object;union {void*flag;gc641*next;} header;};
extern gc641*store641;
extern int store_left641;
extern fsoc*store_chunk641;
extern gc641*gc_free641;
typedef struct B1053 gc1053;
struct B1053{T1053 object;union {void*flag;gc1053*next;} header;};
extern gc1053*store1053;
extern int store_left1053;
extern fsoc*store_chunk1053;
extern gc1053*gc_free1053;
typedef struct B1054 gc1054;
struct B1054{T1054 object;union {void*flag;gc1054*next;} header;};
extern gc1054*store1054;
extern int store_left1054;
extern fsoc*store_chunk1054;
extern gc1054*gc_free1054;
typedef struct B1055 gc1055;
struct B1055{T1055 object;union {void*flag;gc1055*next;} header;};
extern gc1055*store1055;
extern int store_left1055;
extern fsoc*store_chunk1055;
extern gc1055*gc_free1055;
extern na_env na_env1056;
typedef struct B683 gc683;
struct B683{T683 object;union {void*flag;gc683*next;} header;};
extern gc683*store683;
extern int store_left683;
extern fsoc*store_chunk683;
extern gc683*gc_free683;
extern na_env na_env1057;
typedef struct B1058 gc1058;
struct B1058{T1058 object;union {void*flag;gc1058*next;} header;};
extern gc1058*store1058;
extern int store_left1058;
extern fsoc*store_chunk1058;
extern gc1058*gc_free1058;
extern na_env na_env1059;
extern na_env na_env1060;
extern na_env na_env1061;
extern na_env na_env1062;
typedef struct B1063 gc1063;
struct B1063{T1063 object;union {void*flag;gc1063*next;} header;};
extern gc1063*store1063;
extern int store_left1063;
extern fsoc*store_chunk1063;
extern gc1063*gc_free1063;
extern na_env na_env1064;
extern na_env na_env1065;
extern na_env na_env1066;
typedef struct B1067 gc1067;
struct B1067{T1067 object;union {void*flag;gc1067*next;} header;};
extern gc1067*store1067;
extern int store_left1067;
extern fsoc*store_chunk1067;
extern gc1067*gc_free1067;
extern na_env na_env1068;
typedef struct B724 gc724;
struct B724{T724 object;union {void*flag;gc724*next;} header;};
extern gc724*store724;
extern int store_left724;
extern fsoc*store_chunk724;
extern gc724*gc_free724;
typedef struct B1069 gc1069;
struct B1069{T1069 object;union {void*flag;gc1069*next;} header;};
extern gc1069*store1069;
extern int store_left1069;
extern fsoc*store_chunk1069;
extern gc1069*gc_free1069;
typedef struct B374 gc374;
struct B374{T374 object;union {void*flag;gc374*next;} header;};
extern gc374*store374;
extern int store_left374;
extern fsoc*store_chunk374;
extern gc374*gc_free374;
typedef struct B670 gc670;
struct B670{T670 object;union {void*flag;gc670*next;} header;};
extern gc670*store670;
extern int store_left670;
extern fsoc*store_chunk670;
extern gc670*gc_free670;
typedef struct B661 gc661;
struct B661{T661 object;union {void*flag;gc661*next;} header;};
extern gc661*store661;
extern int store_left661;
extern fsoc*store_chunk661;
extern gc661*gc_free661;
typedef struct B1070 gc1070;
struct B1070{T1070 object;union {void*flag;gc1070*next;} header;};
extern gc1070*store1070;
extern int store_left1070;
extern fsoc*store_chunk1070;
extern gc1070*gc_free1070;
typedef struct B1071 gc1071;
struct B1071{T1071 object;union {void*flag;gc1071*next;} header;};
extern gc1071*store1071;
extern int store_left1071;
extern fsoc*store_chunk1071;
extern gc1071*gc_free1071;
typedef struct B666 gc666;
struct B666{T666 object;union {void*flag;gc666*next;} header;};
extern gc666*store666;
extern int store_left666;
extern fsoc*store_chunk666;
extern gc666*gc_free666;
typedef struct B1072 gc1072;
struct B1072{T1072 object;union {void*flag;gc1072*next;} header;};
extern gc1072*store1072;
extern int store_left1072;
extern fsoc*store_chunk1072;
extern gc1072*gc_free1072;
typedef struct B1073 gc1073;
struct B1073{T1073 object;union {void*flag;gc1073*next;} header;};
extern gc1073*store1073;
extern int store_left1073;
extern fsoc*store_chunk1073;
extern gc1073*gc_free1073;
typedef struct B1074 gc1074;
struct B1074{T1074 object;union {void*flag;gc1074*next;} header;};
extern gc1074*store1074;
extern int store_left1074;
extern fsoc*store_chunk1074;
extern gc1074*gc_free1074;
extern na_env na_env1076;
extern na_env na_env1077;
typedef struct B1078 gc1078;
struct B1078{T1078 object;union {void*flag;gc1078*next;} header;};
extern gc1078*store1078;
extern int store_left1078;
extern fsoc*store_chunk1078;
extern gc1078*gc_free1078;
typedef struct B1079 gc1079;
struct B1079{T1079 object;union {void*flag;gc1079*next;} header;};
extern gc1079*store1079;
extern int store_left1079;
extern fsoc*store_chunk1079;
extern gc1079*gc_free1079;
extern na_env na_env1080;
typedef struct B1081 gc1081;
struct B1081{T1081 object;union {void*flag;gc1081*next;} header;};
extern gc1081*store1081;
extern int store_left1081;
extern fsoc*store_chunk1081;
extern gc1081*gc_free1081;
typedef struct B1082 gc1082;
struct B1082{T1082 object;union {void*flag;gc1082*next;} header;};
extern gc1082*store1082;
extern int store_left1082;
extern fsoc*store_chunk1082;
extern gc1082*gc_free1082;
extern na_env na_env1083;
extern na_env na_env1086;
extern na_env na_env1087;
extern na_env na_env1088;
extern na_env na_env1089;
typedef struct B1090 gc1090;
struct B1090{T1090 object;union {void*flag;gc1090*next;} header;};
extern gc1090*store1090;
extern int store_left1090;
extern fsoc*store_chunk1090;
extern gc1090*gc_free1090;
typedef struct B1091 gc1091;
struct B1091{T1091 object;union {void*flag;gc1091*next;} header;};
extern gc1091*store1091;
extern int store_left1091;
extern fsoc*store_chunk1091;
extern gc1091*gc_free1091;
typedef struct B1092 gc1092;
struct B1092{T1092 object;union {void*flag;gc1092*next;} header;};
extern gc1092*store1092;
extern int store_left1092;
extern fsoc*store_chunk1092;
extern gc1092*gc_free1092;
typedef struct B1093 gc1093;
struct B1093{T1093 object;union {void*flag;gc1093*next;} header;};
extern gc1093*store1093;
extern int store_left1093;
extern fsoc*store_chunk1093;
extern gc1093*gc_free1093;
typedef struct B1094 gc1094;
struct B1094{T1094 object;union {void*flag;gc1094*next;} header;};
extern gc1094*store1094;
extern int store_left1094;
extern fsoc*store_chunk1094;
extern gc1094*gc_free1094;
typedef struct B1095 gc1095;
struct B1095{T1095 object;union {void*flag;gc1095*next;} header;};
extern gc1095*store1095;
extern int store_left1095;
extern fsoc*store_chunk1095;
extern gc1095*gc_free1095;
extern na_env na_env1096;
typedef struct B1097 gc1097;
struct B1097{T1097 object;union {void*flag;gc1097*next;} header;};
extern gc1097*store1097;
extern int store_left1097;
extern fsoc*store_chunk1097;
extern gc1097*gc_free1097;
extern na_env na_env1098;
typedef struct B1099 gc1099;
struct B1099{T1099 object;union {void*flag;gc1099*next;} header;};
extern gc1099*store1099;
extern int store_left1099;
extern fsoc*store_chunk1099;
extern gc1099*gc_free1099;
typedef struct B1100 gc1100;
struct B1100{T1100 object;union {void*flag;gc1100*next;} header;};
extern gc1100*store1100;
extern int store_left1100;
extern fsoc*store_chunk1100;
extern gc1100*gc_free1100;
typedef struct B1101 gc1101;
struct B1101{T1101 object;union {void*flag;gc1101*next;} header;};
extern gc1101*store1101;
extern int store_left1101;
extern fsoc*store_chunk1101;
extern gc1101*gc_free1101;
extern na_env na_env1102;
typedef struct B1103 gc1103;
struct B1103{T1103 object;union {void*flag;gc1103*next;} header;};
extern gc1103*store1103;
extern int store_left1103;
extern fsoc*store_chunk1103;
extern gc1103*gc_free1103;
typedef struct B1105 gc1105;
struct B1105{T1105 object;union {void*flag;gc1105*next;} header;};
extern gc1105*store1105;
extern int store_left1105;
extern fsoc*store_chunk1105;
extern gc1105*gc_free1105;
typedef struct B1106 gc1106;
struct B1106{T1106 object;union {void*flag;gc1106*next;} header;};
extern gc1106*store1106;
extern int store_left1106;
extern fsoc*store_chunk1106;
extern gc1106*gc_free1106;
typedef struct B1107 gc1107;
struct B1107{T1107 object;union {void*flag;gc1107*next;} header;};
extern gc1107*store1107;
extern int store_left1107;
extern fsoc*store_chunk1107;
extern gc1107*gc_free1107;
extern na_env na_env1108;
extern na_env na_env1109;
extern na_env na_env1110;
extern na_env na_env1111;
typedef struct B1112 gc1112;
struct B1112{T1112 object;union {void*flag;gc1112*next;} header;};
extern gc1112*store1112;
extern int store_left1112;
extern fsoc*store_chunk1112;
extern gc1112*gc_free1112;
typedef struct B1113 gc1113;
struct B1113{T1113 object;union {void*flag;gc1113*next;} header;};
extern gc1113*store1113;
extern int store_left1113;
extern fsoc*store_chunk1113;
extern gc1113*gc_free1113;
extern na_env na_env1114;
extern na_env na_env1116;
typedef struct B1117 gc1117;
struct B1117{T1117 object;union {void*flag;gc1117*next;} header;};
extern gc1117*store1117;
extern int store_left1117;
extern fsoc*store_chunk1117;
extern gc1117*gc_free1117;
typedef struct B1118 gc1118;
struct B1118{T1118 object;union {void*flag;gc1118*next;} header;};
extern gc1118*store1118;
extern int store_left1118;
extern fsoc*store_chunk1118;
extern gc1118*gc_free1118;
typedef struct B1119 gc1119;
struct B1119{T1119 object;union {void*flag;gc1119*next;} header;};
extern gc1119*store1119;
extern int store_left1119;
extern fsoc*store_chunk1119;
extern gc1119*gc_free1119;
typedef struct B1120 gc1120;
struct B1120{T1120 object;union {void*flag;gc1120*next;} header;};
extern gc1120*store1120;
extern int store_left1120;
extern fsoc*store_chunk1120;
extern gc1120*gc_free1120;
extern na_env na_env1121;
extern na_env na_env1122;
typedef struct B1123 gc1123;
struct B1123{T1123 object;union {void*flag;gc1123*next;} header;};
extern gc1123*store1123;
extern int store_left1123;
extern fsoc*store_chunk1123;
extern gc1123*gc_free1123;
typedef struct B1124 gc1124;
struct B1124{T1124 object;union {void*flag;gc1124*next;} header;};
extern gc1124*store1124;
extern int store_left1124;
extern fsoc*store_chunk1124;
extern gc1124*gc_free1124;
typedef struct B1125 gc1125;
struct B1125{T1125 object;union {void*flag;gc1125*next;} header;};
extern gc1125*store1125;
extern int store_left1125;
extern fsoc*store_chunk1125;
extern gc1125*gc_free1125;
typedef struct B1126 gc1126;
struct B1126{T1126 object;union {void*flag;gc1126*next;} header;};
extern gc1126*store1126;
extern int store_left1126;
extern fsoc*store_chunk1126;
extern gc1126*gc_free1126;
extern na_env na_env1127;
extern na_env na_env1128;
typedef struct B1129 gc1129;
struct B1129{T1129 object;union {void*flag;gc1129*next;} header;};
extern gc1129*store1129;
extern int store_left1129;
extern fsoc*store_chunk1129;
extern gc1129*gc_free1129;
typedef struct B1130 gc1130;
struct B1130{T1130 object;union {void*flag;gc1130*next;} header;};
extern gc1130*store1130;
extern int store_left1130;
extern fsoc*store_chunk1130;
extern gc1130*gc_free1130;
extern na_env na_env1131;
typedef struct B1132 gc1132;
struct B1132{T1132 object;union {void*flag;gc1132*next;} header;};
extern gc1132*store1132;
extern int store_left1132;
extern fsoc*store_chunk1132;
extern gc1132*gc_free1132;
typedef struct B1133 gc1133;
struct B1133{T1133 object;union {void*flag;gc1133*next;} header;};
extern gc1133*store1133;
extern int store_left1133;
extern fsoc*store_chunk1133;
extern gc1133*gc_free1133;
extern na_env na_env1134;
extern na_env na_env1135;
typedef struct B1136 gc1136;
struct B1136{T1136 object;union {void*flag;gc1136*next;} header;};
extern gc1136*store1136;
extern int store_left1136;
extern fsoc*store_chunk1136;
extern gc1136*gc_free1136;
typedef struct B1137 gc1137;
struct B1137{T1137 object;union {void*flag;gc1137*next;} header;};
extern gc1137*store1137;
extern int store_left1137;
extern fsoc*store_chunk1137;
extern gc1137*gc_free1137;
typedef struct B1138 gc1138;
struct B1138{T1138 object;union {void*flag;gc1138*next;} header;};
extern gc1138*store1138;
extern int store_left1138;
extern fsoc*store_chunk1138;
extern gc1138*gc_free1138;
extern na_env na_env1139;
typedef struct B1140 gc1140;
struct B1140{T1140 object;union {void*flag;gc1140*next;} header;};
extern gc1140*store1140;
extern int store_left1140;
extern fsoc*store_chunk1140;
extern gc1140*gc_free1140;
extern na_env na_env1141;
typedef struct B408 gc408;
struct B408{T408 object;union {void*flag;gc408*next;} header;};
extern gc408*store408;
extern int store_left408;
extern fsoc*store_chunk408;
extern gc408*gc_free408;
typedef struct B725 gc725;
struct B725{T725 object;union {void*flag;gc725*next;} header;};
extern gc725*store725;
extern int store_left725;
extern fsoc*store_chunk725;
extern gc725*gc_free725;
extern na_env na_env1142;
typedef struct B1143 gc1143;
struct B1143{T1143 object;union {void*flag;gc1143*next;} header;};
extern gc1143*store1143;
extern int store_left1143;
extern fsoc*store_chunk1143;
extern gc1143*gc_free1143;
typedef struct B1144 gc1144;
struct B1144{T1144 object;union {void*flag;gc1144*next;} header;};
extern gc1144*store1144;
extern int store_left1144;
extern fsoc*store_chunk1144;
extern gc1144*gc_free1144;
extern na_env na_env1145;
typedef struct B1146 gc1146;
struct B1146{T1146 object;union {void*flag;gc1146*next;} header;};
extern gc1146*store1146;
extern int store_left1146;
extern fsoc*store_chunk1146;
extern gc1146*gc_free1146;
typedef struct B1147 gc1147;
struct B1147{T1147 object;union {void*flag;gc1147*next;} header;};
extern gc1147*store1147;
extern int store_left1147;
extern fsoc*store_chunk1147;
extern gc1147*gc_free1147;
extern na_env na_env1148;
extern na_env na_env1149;
typedef struct B1150 gc1150;
struct B1150{T1150 object;union {void*flag;gc1150*next;} header;};
extern gc1150*store1150;
extern int store_left1150;
extern fsoc*store_chunk1150;
extern gc1150*gc_free1150;
typedef struct B1151 gc1151;
struct B1151{T1151 object;union {void*flag;gc1151*next;} header;};
extern gc1151*store1151;
extern int store_left1151;
extern fsoc*store_chunk1151;
extern gc1151*gc_free1151;
typedef struct B1152 gc1152;
struct B1152{T1152 object;union {void*flag;gc1152*next;} header;};
extern gc1152*store1152;
extern int store_left1152;
extern fsoc*store_chunk1152;
extern gc1152*gc_free1152;
typedef struct B1153 gc1153;
struct B1153{T1153 object;union {void*flag;gc1153*next;} header;};
extern gc1153*store1153;
extern int store_left1153;
extern fsoc*store_chunk1153;
extern gc1153*gc_free1153;
extern na_env na_env1154;
typedef struct B1155 gc1155;
struct B1155{T1155 object;union {void*flag;gc1155*next;} header;};
extern gc1155*store1155;
extern int store_left1155;
extern fsoc*store_chunk1155;
extern gc1155*gc_free1155;
typedef struct B1156 gc1156;
struct B1156{T1156 object;union {void*flag;gc1156*next;} header;};
extern gc1156*store1156;
extern int store_left1156;
extern fsoc*store_chunk1156;
extern gc1156*gc_free1156;
extern na_env na_env1157;
extern na_env na_env1158;
extern na_env na_env1159;
typedef struct B1160 gc1160;
struct B1160{T1160 object;union {void*flag;gc1160*next;} header;};
extern gc1160*store1160;
extern int store_left1160;
extern fsoc*store_chunk1160;
extern gc1160*gc_free1160;
typedef struct B1161 gc1161;
struct B1161{T1161 object;union {void*flag;gc1161*next;} header;};
extern gc1161*store1161;
extern int store_left1161;
extern fsoc*store_chunk1161;
extern gc1161*gc_free1161;
extern na_env na_env1162;
extern na_env na_env1163;
extern na_env na_env1164;
typedef struct B351 gc351;
struct B351{T351 object;union {void*flag;gc351*next;} header;};
extern gc351*store351;
extern int store_left351;
extern fsoc*store_chunk351;
extern gc351*gc_free351;
typedef struct B1165 gc1165;
struct B1165{T1165 object;union {void*flag;gc1165*next;} header;};
extern gc1165*store1165;
extern int store_left1165;
extern fsoc*store_chunk1165;
extern gc1165*gc_free1165;
extern na_env na_env1166;
typedef struct B1167 gc1167;
struct B1167{T1167 object;union {void*flag;gc1167*next;} header;};
extern gc1167*store1167;
extern int store_left1167;
extern fsoc*store_chunk1167;
extern gc1167*gc_free1167;
extern na_env na_env1168;
typedef struct B1169 gc1169;
struct B1169{T1169 object;union {void*flag;gc1169*next;} header;};
extern gc1169*store1169;
extern int store_left1169;
extern fsoc*store_chunk1169;
extern gc1169*gc_free1169;
extern na_env na_env1170;
extern na_env na_env1171;
typedef struct B1172 gc1172;
struct B1172{T1172 object;union {void*flag;gc1172*next;} header;};
extern gc1172*store1172;
extern int store_left1172;
extern fsoc*store_chunk1172;
extern gc1172*gc_free1172;
typedef struct B1173 gc1173;
struct B1173{T1173 object;union {void*flag;gc1173*next;} header;};
extern gc1173*store1173;
extern int store_left1173;
extern fsoc*store_chunk1173;
extern gc1173*gc_free1173;
typedef struct B1175 gc1175;
struct B1175{T1175 object;union {void*flag;gc1175*next;} header;};
extern gc1175*store1175;
extern int store_left1175;
extern fsoc*store_chunk1175;
extern gc1175*gc_free1175;
typedef struct B763 gc763;
struct B763{T763 object;union {void*flag;gc763*next;} header;};
extern gc763*store763;
extern int store_left763;
extern fsoc*store_chunk763;
extern gc763*gc_free763;
typedef struct B764 gc764;
struct B764{T764 object;union {void*flag;gc764*next;} header;};
extern gc764*store764;
extern int store_left764;
extern fsoc*store_chunk764;
extern gc764*gc_free764;
typedef struct B765 gc765;
struct B765{T765 object;union {void*flag;gc765*next;} header;};
extern gc765*store765;
extern int store_left765;
extern fsoc*store_chunk765;
extern gc765*gc_free765;
typedef struct B760 gc760;
struct B760{T760 object;union {void*flag;gc760*next;} header;};
extern gc760*store760;
extern int store_left760;
extern fsoc*store_chunk760;
extern gc760*gc_free760;
typedef struct B761 gc761;
struct B761{T761 object;union {void*flag;gc761*next;} header;};
extern gc761*store761;
extern int store_left761;
extern fsoc*store_chunk761;
extern gc761*gc_free761;
typedef struct B762 gc762;
struct B762{T762 object;union {void*flag;gc762*next;} header;};
extern gc762*store762;
extern int store_left762;
extern fsoc*store_chunk762;
extern gc762*gc_free762;
typedef struct B1176 gc1176;
struct B1176{T1176 object;union {void*flag;gc1176*next;} header;};
extern gc1176*store1176;
extern int store_left1176;
extern fsoc*store_chunk1176;
extern gc1176*gc_free1176;
typedef struct B1178 gc1178;
struct B1178{T1178 object;union {void*flag;gc1178*next;} header;};
extern gc1178*store1178;
extern int store_left1178;
extern fsoc*store_chunk1178;
extern gc1178*gc_free1178;
extern na_env na_env1179;
typedef struct B1180 gc1180;
struct B1180{T1180 object;union {void*flag;gc1180*next;} header;};
extern gc1180*store1180;
extern int store_left1180;
extern fsoc*store_chunk1180;
extern gc1180*gc_free1180;
extern na_env na_env1181;
typedef struct B1182 gc1182;
struct B1182{T1182 object;union {void*flag;gc1182*next;} header;};
extern gc1182*store1182;
extern int store_left1182;
extern fsoc*store_chunk1182;
extern gc1182*gc_free1182;
typedef struct B1183 gc1183;
struct B1183{T1183 object;union {void*flag;gc1183*next;} header;};
extern gc1183*store1183;
extern int store_left1183;
extern fsoc*store_chunk1183;
extern gc1183*gc_free1183;
extern na_env na_env1184;
extern na_env na_env1185;
typedef struct B1186 gc1186;
struct B1186{T1186 object;union {void*flag;gc1186*next;} header;};
extern gc1186*store1186;
extern int store_left1186;
extern fsoc*store_chunk1186;
extern gc1186*gc_free1186;
typedef struct B1187 gc1187;
struct B1187{T1187 object;union {void*flag;gc1187*next;} header;};
extern gc1187*store1187;
extern int store_left1187;
extern fsoc*store_chunk1187;
extern gc1187*gc_free1187;
extern na_env na_env1188;
typedef struct B1189 gc1189;
struct B1189{T1189 object;union {void*flag;gc1189*next;} header;};
extern gc1189*store1189;
extern int store_left1189;
extern fsoc*store_chunk1189;
extern gc1189*gc_free1189;
typedef struct B1190 gc1190;
struct B1190{T1190 object;union {void*flag;gc1190*next;} header;};
extern gc1190*store1190;
extern int store_left1190;
extern fsoc*store_chunk1190;
extern gc1190*gc_free1190;
extern na_env na_env1191;
typedef struct B1192 gc1192;
struct B1192{T1192 object;union {void*flag;gc1192*next;} header;};
extern gc1192*store1192;
extern int store_left1192;
extern fsoc*store_chunk1192;
extern gc1192*gc_free1192;
typedef struct B1193 gc1193;
struct B1193{T1193 object;union {void*flag;gc1193*next;} header;};
extern gc1193*store1193;
extern int store_left1193;
extern fsoc*store_chunk1193;
extern gc1193*gc_free1193;
extern na_env na_env1194;
typedef struct B1195 gc1195;
struct B1195{T1195 object;union {void*flag;gc1195*next;} header;};
extern gc1195*store1195;
extern int store_left1195;
extern fsoc*store_chunk1195;
extern gc1195*gc_free1195;
typedef struct B1196 gc1196;
struct B1196{T1196 object;union {void*flag;gc1196*next;} header;};
extern gc1196*store1196;
extern int store_left1196;
extern fsoc*store_chunk1196;
extern gc1196*gc_free1196;
typedef struct B1197 gc1197;
struct B1197{T1197 object;union {void*flag;gc1197*next;} header;};
extern gc1197*store1197;
extern int store_left1197;
extern fsoc*store_chunk1197;
extern gc1197*gc_free1197;
extern na_env na_env1198;
extern na_env na_env1199;
extern na_env na_env1200;
extern na_env na_env1201;
extern na_env na_env1202;
extern na_env na_env1203;
typedef struct B1204 gc1204;
struct B1204{T1204 object;union {void*flag;gc1204*next;} header;};
extern gc1204*store1204;
extern int store_left1204;
extern fsoc*store_chunk1204;
extern gc1204*gc_free1204;
extern na_env na_env1205;
extern na_env na_env1206;
typedef struct B1207 gc1207;
struct B1207{T1207 object;union {void*flag;gc1207*next;} header;};
extern gc1207*store1207;
extern int store_left1207;
extern fsoc*store_chunk1207;
extern gc1207*gc_free1207;
typedef struct B1208 gc1208;
struct B1208{T1208 object;union {void*flag;gc1208*next;} header;};
extern gc1208*store1208;
extern int store_left1208;
extern fsoc*store_chunk1208;
extern gc1208*gc_free1208;
extern na_env na_env1209;
extern na_env na_env1210;
extern na_env na_env1211;
extern na_env na_env1212;
extern na_env na_env1213;
typedef struct B1214 gc1214;
struct B1214{T1214 object;union {void*flag;gc1214*next;} header;};
extern gc1214*store1214;
extern int store_left1214;
extern fsoc*store_chunk1214;
extern gc1214*gc_free1214;
typedef struct B1215 gc1215;
struct B1215{T1215 object;union {void*flag;gc1215*next;} header;};
extern gc1215*store1215;
extern int store_left1215;
extern fsoc*store_chunk1215;
extern gc1215*gc_free1215;
typedef struct B815 gc815;
struct B815{T815 object;union {void*flag;gc815*next;} header;};
extern gc815*store815;
extern int store_left815;
extern fsoc*store_chunk815;
extern gc815*gc_free815;
extern na_env na_env1216;
typedef struct B1217 gc1217;
struct B1217{T1217 object;union {void*flag;gc1217*next;} header;};
extern gc1217*store1217;
extern int store_left1217;
extern fsoc*store_chunk1217;
extern gc1217*gc_free1217;
typedef struct B1218 gc1218;
struct B1218{T1218 object;union {void*flag;gc1218*next;} header;};
extern gc1218*store1218;
extern int store_left1218;
extern fsoc*store_chunk1218;
extern gc1218*gc_free1218;
typedef struct B1219 gc1219;
struct B1219{T1219 object;union {void*flag;gc1219*next;} header;};
extern gc1219*store1219;
extern int store_left1219;
extern fsoc*store_chunk1219;
extern gc1219*gc_free1219;
typedef struct B1220 gc1220;
struct B1220{T1220 object;union {void*flag;gc1220*next;} header;};
extern gc1220*store1220;
extern int store_left1220;
extern fsoc*store_chunk1220;
extern gc1220*gc_free1220;
extern na_env na_env1221;
typedef struct B1222 gc1222;
struct B1222{T1222 object;union {void*flag;gc1222*next;} header;};
extern gc1222*store1222;
extern int store_left1222;
extern fsoc*store_chunk1222;
extern gc1222*gc_free1222;
extern na_env na_env1223;
typedef struct B1224 gc1224;
struct B1224{T1224 object;union {void*flag;gc1224*next;} header;};
extern gc1224*store1224;
extern int store_left1224;
extern fsoc*store_chunk1224;
extern gc1224*gc_free1224;
typedef struct B1225 gc1225;
struct B1225{T1225 object;union {void*flag;gc1225*next;} header;};
extern gc1225*store1225;
extern int store_left1225;
extern fsoc*store_chunk1225;
extern gc1225*gc_free1225;
extern na_env na_env1226;
typedef struct B332 gc332;
struct B332{T332 object;union {void*flag;gc332*next;} header;};
extern gc332*store332;
extern int store_left332;
extern fsoc*store_chunk332;
extern gc332*gc_free332;
typedef struct B1227 gc1227;
struct B1227{T1227 object;union {void*flag;gc1227*next;} header;};
extern gc1227*store1227;
extern int store_left1227;
extern fsoc*store_chunk1227;
extern gc1227*gc_free1227;
typedef struct B1228 gc1228;
struct B1228{T1228 object;union {void*flag;gc1228*next;} header;};
extern gc1228*store1228;
extern int store_left1228;
extern fsoc*store_chunk1228;
extern gc1228*gc_free1228;
typedef struct B1229 gc1229;
struct B1229{T1229 object;union {void*flag;gc1229*next;} header;};
extern gc1229*store1229;
extern int store_left1229;
extern fsoc*store_chunk1229;
extern gc1229*gc_free1229;
typedef struct B1230 gc1230;
struct B1230{T1230 object;union {void*flag;gc1230*next;} header;};
extern gc1230*store1230;
extern int store_left1230;
extern fsoc*store_chunk1230;
extern gc1230*gc_free1230;
typedef struct B1232 gc1232;
struct B1232{T1232 object;union {void*flag;gc1232*next;} header;};
extern gc1232*store1232;
extern int store_left1232;
extern fsoc*store_chunk1232;
extern gc1232*gc_free1232;
extern na_env na_env1233;
typedef struct B1234 gc1234;
struct B1234{T1234 object;union {void*flag;gc1234*next;} header;};
extern gc1234*store1234;
extern int store_left1234;
extern fsoc*store_chunk1234;
extern gc1234*gc_free1234;
typedef struct B1235 gc1235;
struct B1235{T1235 object;union {void*flag;gc1235*next;} header;};
extern gc1235*store1235;
extern int store_left1235;
extern fsoc*store_chunk1235;
extern gc1235*gc_free1235;
extern na_env na_env1236;
typedef struct B1237 gc1237;
struct B1237{T1237 object;union {void*flag;gc1237*next;} header;};
extern gc1237*store1237;
extern int store_left1237;
extern fsoc*store_chunk1237;
extern gc1237*gc_free1237;
extern na_env na_env1238;
typedef struct B1241 gc1241;
struct B1241{T1241 object;union {void*flag;gc1241*next;} header;};
extern gc1241*store1241;
extern int store_left1241;
extern fsoc*store_chunk1241;
extern gc1241*gc_free1241;
typedef struct B1242 gc1242;
struct B1242{T1242 object;union {void*flag;gc1242*next;} header;};
extern gc1242*store1242;
extern int store_left1242;
extern fsoc*store_chunk1242;
extern gc1242*gc_free1242;
typedef struct B1243 gc1243;
struct B1243{T1243 object;union {void*flag;gc1243*next;} header;};
extern gc1243*store1243;
extern int store_left1243;
extern fsoc*store_chunk1243;
extern gc1243*gc_free1243;
typedef struct B1244 gc1244;
struct B1244{T1244 object;union {void*flag;gc1244*next;} header;};
extern gc1244*store1244;
extern int store_left1244;
extern fsoc*store_chunk1244;
extern gc1244*gc_free1244;
typedef struct B1245 gc1245;
struct B1245{T1245 object;union {void*flag;gc1245*next;} header;};
extern gc1245*store1245;
extern int store_left1245;
extern fsoc*store_chunk1245;
extern gc1245*gc_free1245;
typedef struct B1248 gc1248;
struct B1248{T1248 object;union {void*flag;gc1248*next;} header;};
extern gc1248*store1248;
extern int store_left1248;
extern fsoc*store_chunk1248;
extern gc1248*gc_free1248;
typedef struct B1249 gc1249;
struct B1249{T1249 object;union {void*flag;gc1249*next;} header;};
extern gc1249*store1249;
extern int store_left1249;
extern fsoc*store_chunk1249;
extern gc1249*gc_free1249;
typedef struct B1250 gc1250;
struct B1250{T1250 object;union {void*flag;gc1250*next;} header;};
extern gc1250*store1250;
extern int store_left1250;
extern fsoc*store_chunk1250;
extern gc1250*gc_free1250;
typedef struct B1251 gc1251;
struct B1251{T1251 object;union {void*flag;gc1251*next;} header;};
extern gc1251*store1251;
extern int store_left1251;
extern fsoc*store_chunk1251;
extern gc1251*gc_free1251;
extern na_env na_env1252;
extern na_env na_env1253;
typedef struct B1254 gc1254;
struct B1254{T1254 object;union {void*flag;gc1254*next;} header;};
extern gc1254*store1254;
extern int store_left1254;
extern fsoc*store_chunk1254;
extern gc1254*gc_free1254;
typedef struct B1255 gc1255;
struct B1255{T1255 object;union {void*flag;gc1255*next;} header;};
extern gc1255*store1255;
extern int store_left1255;
extern fsoc*store_chunk1255;
extern gc1255*gc_free1255;
extern na_env na_env1256;
typedef struct B34 gc34;
struct B34{T34 object;union {void*flag;gc34*next;} header;};
extern gc34*store34;
extern int store_left34;
extern fsoc*store_chunk34;
extern gc34*gc_free34;
typedef struct B769 gc769;
struct B769{T769 object;union {void*flag;gc769*next;} header;};
extern gc769*store769;
extern int store_left769;
extern fsoc*store_chunk769;
extern gc769*gc_free769;
typedef struct B654 gc654;
struct B654{T654 object;union {void*flag;gc654*next;} header;};
extern gc654*store654;
extern int store_left654;
extern fsoc*store_chunk654;
extern gc654*gc_free654;

#define gc_mark1259(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1261 gc1261;
struct B1261{T1261 object;union {void*flag;gc1261*next;} header;};
extern gc1261*store1261;
extern int store_left1261;
extern fsoc*store_chunk1261;
extern gc1261*gc_free1261;
typedef struct B1263 gc1263;
struct B1263{T1263 object;union {void*flag;gc1263*next;} header;};
extern gc1263*store1263;
extern int store_left1263;
extern fsoc*store_chunk1263;
extern gc1263*gc_free1263;
typedef struct B1266 gc1266;
struct B1266{T1266 object;union {void*flag;gc1266*next;} header;};
extern gc1266*store1266;
extern int store_left1266;
extern fsoc*store_chunk1266;
extern gc1266*gc_free1266;
typedef struct B660 gc660;
struct B660{T660 object;union {void*flag;gc660*next;} header;};
extern gc660*store660;
extern int store_left660;
extern fsoc*store_chunk660;
extern gc660*gc_free660;
typedef struct B663 gc663;
struct B663{T663 object;union {void*flag;gc663*next;} header;};
extern gc663*store663;
extern int store_left663;
extern fsoc*store_chunk663;
extern gc663*gc_free663;
typedef struct B664 gc664;
struct B664{T664 object;union {void*flag;gc664*next;} header;};
extern gc664*store664;
extern int store_left664;
extern fsoc*store_chunk664;
extern gc664*gc_free664;
typedef struct B667 gc667;
struct B667{T667 object;union {void*flag;gc667*next;} header;};
extern gc667*store667;
extern int store_left667;
extern fsoc*store_chunk667;
extern gc667*gc_free667;
typedef struct B669 gc669;
struct B669{T669 object;union {void*flag;gc669*next;} header;};
extern gc669*store669;
extern int store_left669;
extern fsoc*store_chunk669;
extern gc669*gc_free669;
typedef struct B662 gc662;
struct B662{T662 object;union {void*flag;gc662*next;} header;};
extern gc662*store662;
extern int store_left662;
extern fsoc*store_chunk662;
extern gc662*gc_free662;
typedef struct B657 gc657;
struct B657{T657 object;union {void*flag;gc657*next;} header;};
extern gc657*store657;
extern int store_left657;
extern fsoc*store_chunk657;
extern gc657*gc_free657;
typedef struct B668 gc668;
struct B668{T668 object;union {void*flag;gc668*next;} header;};
extern gc668*store668;
extern int store_left668;
extern fsoc*store_chunk668;
extern gc668*gc_free668;
typedef struct B650 gc650;
struct B650{T650 object;union {void*flag;gc650*next;} header;};
extern gc650*store650;
extern int store_left650;
extern fsoc*store_chunk650;
extern gc650*gc_free650;
typedef struct B1267 gc1267;
struct B1267{T1267 object;union {void*flag;gc1267*next;} header;};
extern gc1267*store1267;
extern int store_left1267;
extern fsoc*store_chunk1267;
extern gc1267*gc_free1267;
typedef struct B1268 gc1268;
struct B1268{T1268 object;union {void*flag;gc1268*next;} header;};
extern gc1268*store1268;
extern int store_left1268;
extern fsoc*store_chunk1268;
extern gc1268*gc_free1268;
typedef struct B519 gc519;
struct B519{T519 object;union {void*flag;gc519*next;} header;};
extern gc519*store519;
extern int store_left519;
extern fsoc*store_chunk519;
extern gc519*gc_free519;
typedef struct B1269 gc1269;
struct B1269{T1269 object;union {void*flag;gc1269*next;} header;};
extern gc1269*store1269;
extern int store_left1269;
extern fsoc*store_chunk1269;
extern gc1269*gc_free1269;
typedef struct B671 gc671;
struct B671{T671 object;union {void*flag;gc671*next;} header;};
extern gc671*store671;
extern int store_left671;
extern fsoc*store_chunk671;
extern gc671*gc_free671;
typedef struct B659 gc659;
struct B659{T659 object;union {void*flag;gc659*next;} header;};
extern gc659*store659;
extern int store_left659;
extern fsoc*store_chunk659;
extern gc659*gc_free659;
typedef struct B655 gc655;
struct B655{T655 object;union {void*flag;gc655*next;} header;};
extern gc655*store655;
extern int store_left655;
extern fsoc*store_chunk655;
extern gc655*gc_free655;
typedef struct B1270 gc1270;
struct B1270{T1270 object;union {void*flag;gc1270*next;} header;};
extern gc1270*store1270;
extern int store_left1270;
extern fsoc*store_chunk1270;
extern gc1270*gc_free1270;
typedef struct B1271 gc1271;
struct B1271{T1271 object;union {void*flag;gc1271*next;} header;};
extern gc1271*store1271;
extern int store_left1271;
extern fsoc*store_chunk1271;
extern gc1271*gc_free1271;
typedef struct B1272 gc1272;
struct B1272{T1272 object;union {void*flag;gc1272*next;} header;};
extern gc1272*store1272;
extern int store_left1272;
extern fsoc*store_chunk1272;
extern gc1272*gc_free1272;
typedef struct B1273 gc1273;
struct B1273{T1273 object;union {void*flag;gc1273*next;} header;};
extern gc1273*store1273;
extern int store_left1273;
extern fsoc*store_chunk1273;
extern gc1273*gc_free1273;
typedef struct B1274 gc1274;
struct B1274{T1274 object;union {void*flag;gc1274*next;} header;};
extern gc1274*store1274;
extern int store_left1274;
extern fsoc*store_chunk1274;
extern gc1274*gc_free1274;
extern na_env na_env1275;
typedef struct B1280 gc1280;
struct B1280{T1280 object;union {void*flag;gc1280*next;} header;};
extern gc1280*store1280;
extern int store_left1280;
extern fsoc*store_chunk1280;
extern gc1280*gc_free1280;
typedef struct B522 gc522;
struct B522{T522 object;union {void*flag;gc522*next;} header;};
extern gc522*store522;
extern int store_left522;
extern fsoc*store_chunk522;
extern gc522*gc_free522;
typedef struct B116 gc116;
struct B116{T116 object;union {void*flag;gc116*next;} header;};
extern gc116*store116;
extern int store_left116;
extern fsoc*store_chunk116;
extern gc116*gc_free116;
typedef struct B726 gc726;
struct B726{T726 object;union {void*flag;gc726*next;} header;};
extern gc726*store726;
extern int store_left726;
extern fsoc*store_chunk726;
extern gc726*gc_free726;
typedef struct B731 gc731;
struct B731{T731 object;union {void*flag;gc731*next;} header;};
extern gc731*store731;
extern int store_left731;
extern fsoc*store_chunk731;
extern gc731*gc_free731;
typedef struct B107 gc107;
struct B107{T107 object;union {void*flag;gc107*next;} header;};
extern gc107*store107;
extern int store_left107;
extern fsoc*store_chunk107;
extern gc107*gc_free107;
typedef struct B1282 gc1282;
struct B1282{T1282 object;union {void*flag;gc1282*next;} header;};
extern gc1282*store1282;
extern int store_left1282;
extern fsoc*store_chunk1282;
extern gc1282*gc_free1282;
typedef struct B409 gc409;
struct B409{T409 object;union {void*flag;gc409*next;} header;};
extern gc409*store409;
extern int store_left409;
extern fsoc*store_chunk409;
extern gc409*gc_free409;
typedef struct B406 gc406;
struct B406{T406 object;union {void*flag;gc406*next;} header;};
extern gc406*store406;
extern int store_left406;
extern fsoc*store_chunk406;
extern gc406*gc_free406;
typedef struct B361 gc361;
struct B361{T361 object;union {void*flag;gc361*next;} header;};
extern gc361*store361;
extern int store_left361;
extern fsoc*store_chunk361;
extern gc361*gc_free361;
typedef struct B777 gc777;
struct B777{T777 object;union {void*flag;gc777*next;} header;};
extern gc777*store777;
extern int store_left777;
extern fsoc*store_chunk777;
extern gc777*gc_free777;
typedef struct B633 gc633;
struct B633{T633 object;union {void*flag;gc633*next;} header;};
extern gc633*store633;
extern int store_left633;
extern fsoc*store_chunk633;
extern gc633*gc_free633;
typedef struct B779 gc779;
struct B779{T779 object;union {void*flag;gc779*next;} header;};
extern gc779*store779;
extern int store_left779;
extern fsoc*store_chunk779;
extern gc779*gc_free779;
typedef struct B755 gc755;
struct B755{T755 object;union {void*flag;gc755*next;} header;};
extern gc755*store755;
extern int store_left755;
extern fsoc*store_chunk755;
extern gc755*gc_free755;
typedef struct B526 gc526;
struct B526{T526 object;union {void*flag;gc526*next;} header;};
extern gc526*store526;
extern int store_left526;
extern fsoc*store_chunk526;
extern gc526*gc_free526;
typedef struct B778 gc778;
struct B778{T778 object;union {void*flag;gc778*next;} header;};
extern gc778*store778;
extern int store_left778;
extern fsoc*store_chunk778;
extern gc778*gc_free778;
typedef struct B632 gc632;
struct B632{T632 object;union {void*flag;gc632*next;} header;};
extern gc632*store632;
extern int store_left632;
extern fsoc*store_chunk632;
extern gc632*gc_free632;
typedef struct B1283 gc1283;
struct B1283{T1283 object;union {void*flag;gc1283*next;} header;};
extern gc1283*store1283;
extern int store_left1283;
extern fsoc*store_chunk1283;
extern gc1283*gc_free1283;
typedef struct B818 gc818;
struct B818{T818 object;union {void*flag;gc818*next;} header;};
extern gc818*store818;
extern int store_left818;
extern fsoc*store_chunk818;
extern gc818*gc_free818;
typedef struct B820 gc820;
struct B820{T820 object;union {void*flag;gc820*next;} header;};
extern gc820*store820;
extern int store_left820;
extern fsoc*store_chunk820;
extern gc820*gc_free820;
typedef struct B821 gc821;
struct B821{T821 object;union {void*flag;gc821*next;} header;};
extern gc821*store821;
extern int store_left821;
extern fsoc*store_chunk821;
extern gc821*gc_free821;
typedef struct B822 gc822;
struct B822{T822 object;union {void*flag;gc822*next;} header;};
extern gc822*store822;
extern int store_left822;
extern fsoc*store_chunk822;
extern gc822*gc_free822;
extern na_env na_env1284;
typedef struct B1285 gc1285;
struct B1285{T1285 object;union {void*flag;gc1285*next;} header;};
extern gc1285*store1285;
extern int store_left1285;
extern fsoc*store_chunk1285;
extern gc1285*gc_free1285;
typedef struct B1286 gc1286;
struct B1286{T1286 object;union {void*flag;gc1286*next;} header;};
extern gc1286*store1286;
extern int store_left1286;
extern fsoc*store_chunk1286;
extern gc1286*gc_free1286;
typedef struct B1287 gc1287;
struct B1287{T1287 object;union {void*flag;gc1287*next;} header;};
extern gc1287*store1287;
extern int store_left1287;
extern fsoc*store_chunk1287;
extern gc1287*gc_free1287;
typedef struct B1288 gc1288;
struct B1288{T1288 object;union {void*flag;gc1288*next;} header;};
extern gc1288*store1288;
extern int store_left1288;
extern fsoc*store_chunk1288;
extern gc1288*gc_free1288;
extern na_env na_env1289;
typedef struct B1290 gc1290;
struct B1290{T1290 object;union {void*flag;gc1290*next;} header;};
extern gc1290*store1290;
extern int store_left1290;
extern fsoc*store_chunk1290;
extern gc1290*gc_free1290;
typedef struct B1291 gc1291;
struct B1291{T1291 object;union {void*flag;gc1291*next;} header;};
extern gc1291*store1291;
extern int store_left1291;
extern fsoc*store_chunk1291;
extern gc1291*gc_free1291;
extern na_env na_env1292;
typedef struct B1293 gc1293;
struct B1293{T1293 object;union {void*flag;gc1293*next;} header;};
extern gc1293*store1293;
extern int store_left1293;
extern fsoc*store_chunk1293;
extern gc1293*gc_free1293;
typedef struct B1294 gc1294;
struct B1294{T1294 object;union {void*flag;gc1294*next;} header;};
extern gc1294*store1294;
extern int store_left1294;
extern fsoc*store_chunk1294;
extern gc1294*gc_free1294;
typedef struct B1297 gc1297;
struct B1297{T1297 object;union {void*flag;gc1297*next;} header;};
extern gc1297*store1297;
extern int store_left1297;
extern fsoc*store_chunk1297;
extern gc1297*gc_free1297;
typedef struct B1298 gc1298;
struct B1298{T1298 object;union {void*flag;gc1298*next;} header;};
extern gc1298*store1298;
extern int store_left1298;
extern fsoc*store_chunk1298;
extern gc1298*gc_free1298;
extern na_env na_env1299;
typedef struct B665 gc665;
struct B665{T665 object;union {void*flag;gc665*next;} header;};
extern gc665*store665;
extern int store_left665;
extern fsoc*store_chunk665;
extern gc665*gc_free665;
extern na_env na_env1300;
extern na_env na_env1301;
typedef struct B701 gc701;
struct B701{T701 object;union {void*flag;gc701*next;} header;};
extern gc701*store701;
extern int store_left701;
extern fsoc*store_chunk701;
extern gc701*gc_free701;
extern na_env na_env1302;
typedef struct B1303 gc1303;
struct B1303{T1303 object;union {void*flag;gc1303*next;} header;};
extern gc1303*store1303;
extern int store_left1303;
extern fsoc*store_chunk1303;
extern gc1303*gc_free1303;
typedef struct B1304 gc1304;
struct B1304{T1304 object;union {void*flag;gc1304*next;} header;};
extern gc1304*store1304;
extern int store_left1304;
extern fsoc*store_chunk1304;
extern gc1304*gc_free1304;
extern na_env na_env1305;
extern na_env na_env1306;
extern na_env na_env1307;
extern na_env na_env1308;
typedef struct B1310 gc1310;
struct B1310{T1310 object;union {void*flag;gc1310*next;} header;};
extern gc1310*store1310;
extern int store_left1310;
extern fsoc*store_chunk1310;
extern gc1310*gc_free1310;
typedef struct B1311 gc1311;
struct B1311{T1311 object;union {void*flag;gc1311*next;} header;};
extern gc1311*store1311;
extern int store_left1311;
extern fsoc*store_chunk1311;
extern gc1311*gc_free1311;
extern na_env na_env1312;
typedef struct B852 gc852;
struct B852{T852 object;union {void*flag;gc852*next;} header;};
extern gc852*store852;
extern int store_left852;
extern fsoc*store_chunk852;
extern gc852*gc_free852;
typedef struct B626 gc626;
struct B626{T626 object;union {void*flag;gc626*next;} header;};
extern gc626*store626;
extern int store_left626;
extern fsoc*store_chunk626;
extern gc626*gc_free626;
typedef struct B552 gc552;
struct B552{T552 object;union {void*flag;gc552*next;} header;};
extern gc552*store552;
extern int store_left552;
extern fsoc*store_chunk552;
extern gc552*gc_free552;

#define gc_mark1313(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1315(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1317(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1319(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1321(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1323(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1325 gc1325;
struct B1325{T1325 object;union {void*flag;gc1325*next;} header;};
extern gc1325*store1325;
extern int store_left1325;
extern fsoc*store_chunk1325;
extern gc1325*gc_free1325;
typedef struct B1326 gc1326;
struct B1326{T1326 object;union {void*flag;gc1326*next;} header;};
extern gc1326*store1326;
extern int store_left1326;
extern fsoc*store_chunk1326;
extern gc1326*gc_free1326;
typedef struct B546 gc546;
struct B546{T546 object;union {void*flag;gc546*next;} header;};
extern gc546*store546;
extern int store_left546;
extern fsoc*store_chunk546;
extern gc546*gc_free546;
typedef struct B547 gc547;
struct B547{T547 object;union {void*flag;gc547*next;} header;};
extern gc547*store547;
extern int store_left547;
extern fsoc*store_chunk547;
extern gc547*gc_free547;
typedef struct B548 gc548;
struct B548{T548 object;union {void*flag;gc548*next;} header;};
extern gc548*store548;
extern int store_left548;
extern fsoc*store_chunk548;
extern gc548*gc_free548;
typedef struct B549 gc549;
struct B549{T549 object;union {void*flag;gc549*next;} header;};
extern gc549*store549;
extern int store_left549;
extern fsoc*store_chunk549;
extern gc549*gc_free549;
typedef struct B550 gc550;
struct B550{T550 object;union {void*flag;gc550*next;} header;};
extern gc550*store550;
extern int store_left550;
extern fsoc*store_chunk550;
extern gc550*gc_free550;
typedef struct B551 gc551;
struct B551{T551 object;union {void*flag;gc551*next;} header;};
extern gc551*store551;
extern int store_left551;
extern fsoc*store_chunk551;
extern gc551*gc_free551;

#define gc_mark1329(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1332 gc1332;
struct B1332{T1332 object;union {void*flag;gc1332*next;} header;};
extern gc1332*store1332;
extern int store_left1332;
extern fsoc*store_chunk1332;
extern gc1332*gc_free1332;
typedef struct B1336 gc1336;
struct B1336{T1336 object;union {void*flag;gc1336*next;} header;};
extern gc1336*store1336;
extern int store_left1336;
extern fsoc*store_chunk1336;
extern gc1336*gc_free1336;
typedef struct B790 gc790;
struct B790{T790 object;union {void*flag;gc790*next;} header;};
extern gc790*store790;
extern int store_left790;
extern fsoc*store_chunk790;
extern gc790*gc_free790;
typedef struct B1338 gc1338;
struct B1338{T1338 object;union {void*flag;gc1338*next;} header;};
extern gc1338*store1338;
extern int store_left1338;
extern fsoc*store_chunk1338;
extern gc1338*gc_free1338;

#define gc_mark1339(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B788 gc788;
struct B788{T788 object;union {void*flag;gc788*next;} header;};
extern gc788*store788;
extern int store_left788;
extern fsoc*store_chunk788;
extern gc788*gc_free788;
typedef struct B1344 gc1344;
struct B1344{T1344 object;union {void*flag;gc1344*next;} header;};
extern gc1344*store1344;
extern int store_left1344;
extern fsoc*store_chunk1344;
extern gc1344*gc_free1344;
typedef struct B1345 gc1345;
struct B1345{T1345 object;union {void*flag;gc1345*next;} header;};
extern gc1345*store1345;
extern int store_left1345;
extern fsoc*store_chunk1345;
extern gc1345*gc_free1345;
typedef struct B706 gc706;
struct B706{T706 object;union {void*flag;gc706*next;} header;};
extern gc706*store706;
extern int store_left706;
extern fsoc*store_chunk706;
extern gc706*gc_free706;
typedef struct B1346 gc1346;
struct B1346{T1346 object;union {void*flag;gc1346*next;} header;};
extern gc1346*store1346;
extern int store_left1346;
extern fsoc*store_chunk1346;
extern gc1346*gc_free1346;
extern na_env na_env1347;
extern na_env na_env1348;
extern na_env na_env1349;
typedef struct B1350 gc1350;
struct B1350{T1350 object;union {void*flag;gc1350*next;} header;};
extern gc1350*store1350;
extern int store_left1350;
extern fsoc*store_chunk1350;
extern gc1350*gc_free1350;
typedef struct B1351 gc1351;
struct B1351{T1351 object;union {void*flag;gc1351*next;} header;};
extern gc1351*store1351;
extern int store_left1351;
extern fsoc*store_chunk1351;
extern gc1351*gc_free1351;
extern na_env na_env1352;
typedef struct B1353 gc1353;
struct B1353{T1353 object;union {void*flag;gc1353*next;} header;};
extern gc1353*store1353;
extern int store_left1353;
extern fsoc*store_chunk1353;
extern gc1353*gc_free1353;
extern na_env na_env1354;
typedef struct B703 gc703;
struct B703{T703 object;union {void*flag;gc703*next;} header;};
extern gc703*store703;
extern int store_left703;
extern fsoc*store_chunk703;
extern gc703*gc_free703;
extern na_env na_env1355;
extern na_env na_env1356;
typedef struct B1357 gc1357;
struct B1357{T1357 object;union {void*flag;gc1357*next;} header;};
extern gc1357*store1357;
extern int store_left1357;
extern fsoc*store_chunk1357;
extern gc1357*gc_free1357;
typedef struct B1358 gc1358;
struct B1358{T1358 object;union {void*flag;gc1358*next;} header;};
extern gc1358*store1358;
extern int store_left1358;
extern fsoc*store_chunk1358;
extern gc1358*gc_free1358;

#define gc_mark1360(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1363(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1366(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1368(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1371 gc1371;
struct B1371{T1371 object;union {void*flag;gc1371*next;} header;};
extern gc1371*store1371;
extern int store_left1371;
extern fsoc*store_chunk1371;
extern gc1371*gc_free1371;
typedef struct B776 gc776;
struct B776{T776 object;union {void*flag;gc776*next;} header;};
extern gc776*store776;
extern int store_left776;
extern fsoc*store_chunk776;
extern gc776*gc_free776;
typedef struct B1372 gc1372;
struct B1372{T1372 object;union {void*flag;gc1372*next;} header;};
extern gc1372*store1372;
extern int store_left1372;
extern fsoc*store_chunk1372;
extern gc1372*gc_free1372;
typedef struct B774 gc774;
struct B774{T774 object;union {void*flag;gc774*next;} header;};
extern gc774*store774;
extern int store_left774;
extern fsoc*store_chunk774;
extern gc774*gc_free774;
typedef struct B1375 gc1375;
struct B1375{T1375 object;union {void*flag;gc1375*next;} header;};
extern gc1375*store1375;
extern int store_left1375;
extern fsoc*store_chunk1375;
extern gc1375*gc_free1375;
extern na_env na_env1376;
typedef struct B1377 gc1377;
struct B1377{T1377 object;union {void*flag;gc1377*next;} header;};
extern gc1377*store1377;
extern int store_left1377;
extern fsoc*store_chunk1377;
extern gc1377*gc_free1377;
typedef struct B1378 gc1378;
struct B1378{T1378 object;union {void*flag;gc1378*next;} header;};
extern gc1378*store1378;
extern int store_left1378;
extern fsoc*store_chunk1378;
extern gc1378*gc_free1378;
void gc_sweep25(fsoc*c);
void gc_mark25(T25*o);
void gc_align_mark25(fsoc*c,gc25*p);
extern fsoc H25;
T25*new25(void);
void gc_sweep97(fsoc*c);
void gc_mark97(T97*o);
void gc_align_mark97(fsoc*c,gc97*p);
extern fsoc H97;
T97*new97(void);
void gc_sweep851(fsoc*c);
void gc_mark851(T851*o);
void gc_align_mark851(fsoc*c,gc851*p);
extern fsoc H851;
T851*new851(void);
void gc_sweep89(fsoc*c);
void gc_mark89(T89*o);
void gc_align_mark89(fsoc*c,gc89*p);
extern fsoc H89;
T89*new89(void);
void gc_sweep113(fsoc*c);
void gc_mark113(T113*o);
void gc_align_mark113(fsoc*c,gc113*p);
extern fsoc H113;
T113*new113(void);
void gc_sweep267(fsoc*c);
void gc_mark267(T267*o);
void gc_align_mark267(fsoc*c,gc267*p);
extern fsoc H267;
T267*new267(void);
void gc_sweep101(fsoc*c);
void gc_mark101(T101*o);
void gc_align_mark101(fsoc*c,gc101*p);
extern fsoc H101;
T101*new101(void);
void gc_sweep96(fsoc*c);
void gc_mark96(T96*o);
void gc_align_mark96(fsoc*c,gc96*p);
extern fsoc H96;
T96*new96(void);
void gc_sweep278(fsoc*c);
void gc_mark278(T278*o);
void gc_align_mark278(fsoc*c,gc278*p);
extern fsoc H278;
T278*new278(void);
void gc_sweep264(fsoc*c);
void gc_mark264(T264*o);
void gc_align_mark264(fsoc*c,gc264*p);
extern fsoc H264;
T264*new264(void);
void gc_sweep7(fsoc*c);
void gc_mark7(T7*o);
void gc_align_mark7(fsoc*c,gc7*p);
extern fsoc H7;
T7*new7(void);
void gc_mark9(T9 o);
T9 new9(unsigned int size);
void gc_sweep613(fsoc*c);
void gc_mark613(T613*o);
void gc_align_mark613(fsoc*c,gc613*p);
extern fsoc H613;
T613*new613(void);
void gc_sweep859(fsoc*c);
void gc_mark859(T859*o);
void gc_align_mark859(fsoc*c,gc859*p);
extern fsoc H859;
T859*new859(void);
void gc_sweep73(fsoc*c);
void gc_mark73(T73*o);
void gc_align_mark73(fsoc*c,gc73*p);
extern fsoc H73;
T73*new73(void);
void gc_sweep860(fsoc*c);
void gc_mark860(T860*o);
void gc_align_mark860(fsoc*c,gc860*p);
extern fsoc H860;
T860*new860(void);
void gc_sweep280(fsoc*c);
void gc_mark280(T280*o);
void gc_align_mark280(fsoc*c,gc280*p);
extern fsoc H280;
T280*new280(void);
void gc_sweep63(fsoc*c);
void gc_mark63(T63*o);
void gc_align_mark63(fsoc*c,gc63*p);
extern fsoc H63;
T63*new63(void);
void gc_sweep861(fsoc*c);
void gc_mark861(T861*o);
void gc_align_mark861(fsoc*c,gc861*p);
extern fsoc H861;
T861*new861(void);
void gc_sweep531(fsoc*c);
void gc_mark531(T531*o);
void gc_align_mark531(fsoc*c,gc531*p);
extern fsoc H531;
T531*new531(void);
void gc_sweep535(fsoc*c);
void gc_mark535(T535*o);
void gc_align_mark535(fsoc*c,gc535*p);
extern fsoc H535;
T535*new535(void);
void gc_sweep536(fsoc*c);
void gc_mark536(T536*o);
void gc_align_mark536(fsoc*c,gc536*p);
extern fsoc H536;
T536*new536(void);
void gc_sweep537(fsoc*c);
void gc_mark537(T537*o);
void gc_align_mark537(fsoc*c,gc537*p);
extern fsoc H537;
T537*new537(void);
void gc_sweep538(fsoc*c);
void gc_mark538(T538*o);
void gc_align_mark538(fsoc*c,gc538*p);
extern fsoc H538;
T538*new538(void);
void gc_sweep539(fsoc*c);
void gc_mark539(T539*o);
void gc_align_mark539(fsoc*c,gc539*p);
extern fsoc H539;
T539*new539(void);
void gc_sweep862(fsoc*c);
void gc_mark862(T862*o);
void gc_align_mark862(fsoc*c,gc862*p);
extern fsoc H862;
T862*new862(void);
void gc_sweep863(fsoc*c);
void gc_mark863(T863*o);
void gc_align_mark863(fsoc*c,gc863*p);
extern fsoc H863;
T863*new863(void);
void gc_sweep87(fsoc*c);
void gc_mark87(T87*o);
void gc_align_mark87(fsoc*c,gc87*p);
extern fsoc H87;
T87*new87(void);
void gc_sweep530(fsoc*c);
void gc_mark530(T530*o);
void gc_align_mark530(fsoc*c,gc530*p);
extern fsoc H530;
T530*new530(void);
void gc_sweep447(fsoc*c);
void gc_mark447(T447*o);
void gc_align_mark447(fsoc*c,gc447*p);
extern fsoc H447;
T447*new447(void);
void gc_sweep446(fsoc*c);
void gc_mark446(T446*o);
void gc_align_mark446(fsoc*c,gc446*p);
extern fsoc H446;
T446*new446(void);
void gc_sweep65(fsoc*c);
void gc_mark65(T65*o);
void gc_align_mark65(fsoc*c,gc65*p);
extern fsoc H65;
T65*new65(void);
void gc_sweep44(fsoc*c);
void gc_mark44(T44*o);
void gc_align_mark44(fsoc*c,gc44*p);
extern fsoc H44;
T44*new44(void);
void gc_sweep864(fsoc*c);
void gc_mark864(T864*o);
void gc_align_mark864(fsoc*c,gc864*p);
extern fsoc H864;
T864*new864(void);
void gc_sweep92(fsoc*c);
void gc_mark92(T92*o);
void gc_align_mark92(fsoc*c,gc92*p);
extern fsoc H92;
T92*new92(void);
void gc_sweep108(fsoc*c);
void gc_mark108(T108*o);
void gc_align_mark108(fsoc*c,gc108*p);
extern fsoc H108;
T108*new108(void);
void gc_sweep675(fsoc*c);
void gc_mark675(T675*o);
void gc_align_mark675(fsoc*c,gc675*p);
extern fsoc H675;
T675*new675(void);
void gc_sweep679(fsoc*c);
void gc_mark679(T679*o);
void gc_align_mark679(fsoc*c,gc679*p);
extern fsoc H679;
T679*new679(void);
void gc_sweep677(fsoc*c);
void gc_mark677(T677*o);
void gc_align_mark677(fsoc*c,gc677*p);
extern fsoc H677;
T677*new677(void);
void gc_sweep540(fsoc*c);
void gc_mark540(T540*o);
void gc_align_mark540(fsoc*c,gc540*p);
extern fsoc H540;
T540*new540(void);
void gc_sweep680(fsoc*c);
void gc_mark680(T680*o);
void gc_align_mark680(fsoc*c,gc680*p);
extern fsoc H680;
T680*new680(void);
void gc_sweep415(fsoc*c);
void gc_mark415(T415*o);
void gc_align_mark415(fsoc*c,gc415*p);
extern fsoc H415;
T415*new415(void);
void gc_sweep865(fsoc*c);
void gc_mark865(T865*o);
void gc_align_mark865(fsoc*c,gc865*p);
extern fsoc H865;
T865*new865(void);
void gc_sweep294(fsoc*c);
void gc_mark294(T294*o);
void gc_align_mark294(fsoc*c,gc294*p);
extern fsoc H294;
T294*new294(void);
void gc_sweep866(fsoc*c);
void gc_mark866(T866*o);
void gc_align_mark866(fsoc*c,gc866*p);
extern fsoc H866;
T866*new866(void);
void gc_sweep424(fsoc*c);
void gc_mark424(T424*o);
void gc_align_mark424(fsoc*c,gc424*p);
extern fsoc H424;
T424*new424(void);
void gc_mark750(T750*o);
void gc_sweep558(fsoc*c);
void gc_mark558(T558*o);
void gc_align_mark558(fsoc*c,gc558*p);
extern fsoc H558;
T558*new558(void);
void gc_sweep588(fsoc*c);
void gc_mark588(T588*o);
void gc_align_mark588(fsoc*c,gc588*p);
extern fsoc H588;
T588*new588(void);
void gc_sweep589(fsoc*c);
void gc_mark589(T589*o);
void gc_align_mark589(fsoc*c,gc589*p);
extern fsoc H589;
T589*new589(void);
void gc_sweep590(fsoc*c);
void gc_mark590(T590*o);
void gc_align_mark590(fsoc*c,gc590*p);
extern fsoc H590;
T590*new590(void);
void gc_sweep591(fsoc*c);
void gc_mark591(T591*o);
void gc_align_mark591(fsoc*c,gc591*p);
extern fsoc H591;
T591*new591(void);
void gc_sweep603(fsoc*c);
void gc_mark603(T603*o);
void gc_align_mark603(fsoc*c,gc603*p);
extern fsoc H603;
T603*new603(void);
void gc_sweep604(fsoc*c);
void gc_mark604(T604*o);
void gc_align_mark604(fsoc*c,gc604*p);
extern fsoc H604;
T604*new604(void);
void gc_sweep605(fsoc*c);
void gc_mark605(T605*o);
void gc_align_mark605(fsoc*c,gc605*p);
extern fsoc H605;
T605*new605(void);
void gc_sweep607(fsoc*c);
void gc_mark607(T607*o);
void gc_align_mark607(fsoc*c,gc607*p);
extern fsoc H607;
T607*new607(void);
void gc_sweep608(fsoc*c);
void gc_mark608(T608*o);
void gc_align_mark608(fsoc*c,gc608*p);
extern fsoc H608;
T608*new608(void);
void gc_sweep612(fsoc*c);
void gc_mark612(T612*o);
void gc_align_mark612(fsoc*c,gc612*p);
extern fsoc H612;
T612*new612(void);
void gc_sweep614(fsoc*c);
void gc_mark614(T614*o);
void gc_align_mark614(fsoc*c,gc614*p);
extern fsoc H614;
T614*new614(void);
void gc_sweep615(fsoc*c);
void gc_mark615(T615*o);
void gc_align_mark615(fsoc*c,gc615*p);
extern fsoc H615;
T615*new615(void);
void gc_sweep616(fsoc*c);
void gc_mark616(T616*o);
void gc_align_mark616(fsoc*c,gc616*p);
extern fsoc H616;
T616*new616(void);
void gc_sweep617(fsoc*c);
void gc_mark617(T617*o);
void gc_align_mark617(fsoc*c,gc617*p);
extern fsoc H617;
T617*new617(void);
void gc_sweep618(fsoc*c);
void gc_mark618(T618*o);
void gc_align_mark618(fsoc*c,gc618*p);
extern fsoc H618;
T618*new618(void);
void gc_sweep619(fsoc*c);
void gc_mark619(T619*o);
void gc_align_mark619(fsoc*c,gc619*p);
extern fsoc H619;
T619*new619(void);
void gc_sweep621(fsoc*c);
void gc_mark621(T621*o);
void gc_align_mark621(fsoc*c,gc621*p);
extern fsoc H621;
T621*new621(void);
void gc_sweep620(fsoc*c);
void gc_mark620(T620*o);
void gc_align_mark620(fsoc*c,gc620*p);
extern fsoc H620;
T620*new620(void);
void gc_sweep622(fsoc*c);
void gc_mark622(T622*o);
void gc_align_mark622(fsoc*c,gc622*p);
extern fsoc H622;
T622*new622(void);
void gc_sweep623(fsoc*c);
void gc_mark623(T623*o);
void gc_align_mark623(fsoc*c,gc623*p);
extern fsoc H623;
T623*new623(void);
void gc_sweep624(fsoc*c);
void gc_mark624(T624*o);
void gc_align_mark624(fsoc*c,gc624*p);
extern fsoc H624;
T624*new624(void);
void gc_sweep867(fsoc*c);
void gc_mark867(T867*o);
void gc_align_mark867(fsoc*c,gc867*p);
extern fsoc H867;
T867*new867(void);
void gc_sweep625(fsoc*c);
void gc_mark625(T625*o);
void gc_align_mark625(fsoc*c,gc625*p);
extern fsoc H625;
T625*new625(void);
void gc_sweep868(fsoc*c);
void gc_mark868(T868*o);
void gc_align_mark868(fsoc*c,gc868*p);
extern fsoc H868;
T868*new868(void);
void gc_sweep869(fsoc*c);
void gc_mark869(T869*o);
void gc_align_mark869(fsoc*c,gc869*p);
extern fsoc H869;
T869*new869(void);
void gc_sweep363(fsoc*c);
void gc_mark363(T363*o);
void gc_align_mark363(fsoc*c,gc363*p);
extern fsoc H363;
T363*new363(void);
void gc_sweep82(fsoc*c);
void gc_mark82(T82*o);
void gc_align_mark82(fsoc*c,gc82*p);
extern fsoc H82;
T82*new82(void);
void gc_sweep84(fsoc*c);
void gc_mark84(T84*o);
void gc_align_mark84(fsoc*c,gc84*p);
extern fsoc H84;
T84*new84(void);
void gc_sweep870(fsoc*c);
void gc_mark870(T870*o);
void gc_align_mark870(fsoc*c,gc870*p);
extern fsoc H870;
T870*new870(void);
void gc_sweep871(fsoc*c);
void gc_mark871(T871*o);
void gc_align_mark871(fsoc*c,gc871*p);
extern fsoc H871;
T871*new871(void);
void gc_sweep872(fsoc*c);
void gc_mark872(T872*o);
void gc_align_mark872(fsoc*c,gc872*p);
extern fsoc H872;
T872*new872(void);
void gc_sweep270(fsoc*c);
void gc_mark270(T270*o);
void gc_align_mark270(fsoc*c,gc270*p);
extern fsoc H270;
T270*new270(void);
void gc_sweep76(fsoc*c);
void gc_mark76(T76*o);
void gc_align_mark76(fsoc*c,gc76*p);
extern fsoc H76;
T76*new76(void);
void gc_sweep527(fsoc*c);
void gc_mark527(T527*o);
void gc_align_mark527(fsoc*c,gc527*p);
extern fsoc H527;
T527*new527(void);
void gc_sweep874(fsoc*c);
void gc_mark874(T874*o);
void gc_align_mark874(fsoc*c,gc874*p);
extern fsoc H874;
T874*new874(void);
void gc_sweep324(fsoc*c);
void gc_mark324(T324*o);
void gc_align_mark324(fsoc*c,gc324*p);
extern fsoc H324;
T324*new324(void);
void gc_sweep95(fsoc*c);
void gc_mark95(T95*o);
void gc_align_mark95(fsoc*c,gc95*p);
extern fsoc H95;
T95*new95(void);
void gc_sweep93(fsoc*c);
void gc_mark93(T93*o);
void gc_align_mark93(fsoc*c,gc93*p);
extern fsoc H93;
T93*new93(void);
void gc_sweep99(fsoc*c);
void gc_mark99(T99*o);
void gc_align_mark99(fsoc*c,gc99*p);
extern fsoc H99;
T99*new99(void);
void gc_sweep112(fsoc*c);
void gc_mark112(T112*o);
void gc_align_mark112(fsoc*c,gc112*p);
extern fsoc H112;
T112*new112(void);
void gc_sweep109(fsoc*c);
void gc_mark109(T109*o);
void gc_align_mark109(fsoc*c,gc109*p);
extern fsoc H109;
T109*new109(void);
void gc_sweep114(fsoc*c);
void gc_mark114(T114*o);
void gc_align_mark114(fsoc*c,gc114*p);
extern fsoc H114;
T114*new114(void);
void gc_sweep78(fsoc*c);
void gc_mark78(T78*o);
void gc_align_mark78(fsoc*c,gc78*p);
extern fsoc H78;
T78*new78(void);
void gc_sweep433(fsoc*c);
void gc_mark433(T433*o);
void gc_align_mark433(fsoc*c,gc433*p);
extern fsoc H433;
T433*new433(void);
void gc_sweep876(fsoc*c);
void gc_mark876(T876*o);
void gc_align_mark876(fsoc*c,gc876*p);
extern fsoc H876;
T876*new876(void);
void gc_sweep877(fsoc*c);
void gc_mark877(T877*o);
void gc_align_mark877(fsoc*c,gc877*p);
extern fsoc H877;
T877*new877(void);
void gc_sweep105(fsoc*c);
void gc_mark105(T105*o);
void gc_align_mark105(fsoc*c,gc105*p);
extern fsoc H105;
T105*new105(void);
void gc_sweep428(fsoc*c);
void gc_mark428(T428*o);
void gc_align_mark428(fsoc*c,gc428*p);
extern fsoc H428;
T428*new428(void);
void gc_sweep880(fsoc*c);
void gc_mark880(T880*o);
void gc_align_mark880(fsoc*c,gc880*p);
extern fsoc H880;
T880*new880(void);
void gc_sweep881(fsoc*c);
void gc_mark881(T881*o);
void gc_align_mark881(fsoc*c,gc881*p);
extern fsoc H881;
T881*new881(void);
void gc_sweep882(fsoc*c);
void gc_mark882(T882*o);
void gc_align_mark882(fsoc*c,gc882*p);
extern fsoc H882;
T882*new882(void);
void gc_sweep782(fsoc*c);
void gc_mark782(T782*o);
void gc_align_mark782(fsoc*c,gc782*p);
extern fsoc H782;
T782*new782(void);
void gc_sweep784(fsoc*c);
void gc_mark784(T784*o);
void gc_align_mark784(fsoc*c,gc784*p);
extern fsoc H784;
T784*new784(void);
void gc_sweep785(fsoc*c);
void gc_mark785(T785*o);
void gc_align_mark785(fsoc*c,gc785*p);
extern fsoc H785;
T785*new785(void);
void gc_sweep786(fsoc*c);
void gc_mark786(T786*o);
void gc_align_mark786(fsoc*c,gc786*p);
extern fsoc H786;
T786*new786(void);
void gc_sweep787(fsoc*c);
void gc_mark787(T787*o);
void gc_align_mark787(fsoc*c,gc787*p);
extern fsoc H787;
T787*new787(void);
void gc_mark884(T884 o);
T884 new884(unsigned int size);
void gc_sweep323(fsoc*c);
void gc_mark323(T323*o);
void gc_align_mark323(fsoc*c,gc323*p);
extern fsoc H323;
T323*new323(void);
void gc_sweep886(fsoc*c);
void gc_mark886(T886*o);
void gc_align_mark886(fsoc*c,gc886*p);
extern fsoc H886;
T886*new886(void);
void gc_sweep887(fsoc*c);
void gc_mark887(T887*o);
void gc_align_mark887(fsoc*c,gc887*p);
extern fsoc H887;
T887*new887(void);
void gc_sweep771(fsoc*c);
void gc_mark771(T771*o);
void gc_align_mark771(fsoc*c,gc771*p);
extern fsoc H771;
T771*new771(void);
void gc_sweep772(fsoc*c);
void gc_mark772(T772*o);
void gc_align_mark772(fsoc*c,gc772*p);
extern fsoc H772;
T772*new772(void);
void gc_sweep891(fsoc*c);
void gc_mark891(T891*o);
void gc_align_mark891(fsoc*c,gc891*p);
extern fsoc H891;
T891*new891(void);
void gc_sweep892(fsoc*c);
void gc_mark892(T892*o);
void gc_align_mark892(fsoc*c,gc892*p);
extern fsoc H892;
T892*new892(void);
void gc_sweep303(fsoc*c);
void gc_mark303(T303*o);
void gc_align_mark303(fsoc*c,gc303*p);
extern fsoc H303;
T303*new303(void);
void gc_sweep893(fsoc*c);
void gc_mark893(T893*o);
void gc_align_mark893(fsoc*c,gc893*p);
extern fsoc H893;
T893*new893(void);
void gc_sweep896(fsoc*c);
void gc_update_weak_ref_item896(T896* wr);
void gc_mark896(T896*o);
void gc_align_mark896(fsoc*c,gc896*p);
extern fsoc H896;
T896*new896(void);
void gc_mark897(T897 o);
T897 new897(unsigned int size);
void gc_sweep898(fsoc*c);
void gc_update_weak_ref_item898(T898* wr);
void gc_mark898(T898*o);
void gc_align_mark898(fsoc*c,gc898*p);
extern fsoc H898;
T898*new898(void);
void gc_sweep899(fsoc*c);
void gc_mark899(T899*o);
void gc_align_mark899(fsoc*c,gc899*p);
extern fsoc H899;
T899*new899(void);
void gc_sweep900(fsoc*c);
void gc_mark900(T900*o);
void gc_align_mark900(fsoc*c,gc900*p);
extern fsoc H900;
T900*new900(void);
void gc_sweep901(fsoc*c);
void gc_mark901(T901*o);
void gc_align_mark901(fsoc*c,gc901*p);
extern fsoc H901;
T901*new901(void);
void gc_sweep274(fsoc*c);
void gc_mark274(T274*o);
void gc_align_mark274(fsoc*c,gc274*p);
extern fsoc H274;
T274*new274(void);
void gc_mark902(T902 o);
T902 new902(unsigned int size);
void gc_sweep905(fsoc*c);
void gc_mark905(T905*o);
void gc_align_mark905(fsoc*c,gc905*p);
extern fsoc H905;
T905*new905(void);
void gc_sweep91(fsoc*c);
void gc_mark91(T91*o);
void gc_align_mark91(fsoc*c,gc91*p);
extern fsoc H91;
T91*new91(void);
void gc_mark906(T906 o);
T906 new906(unsigned int size);
void gc_mark907(T907 o);
T907 new907(unsigned int size);
void gc_sweep908(fsoc*c);
void gc_mark908(T908*o);
void gc_align_mark908(fsoc*c,gc908*p);
extern fsoc H908;
T908*new908(void);
void gc_sweep741(fsoc*c);
void gc_mark741(T741*o);
void gc_align_mark741(fsoc*c,gc741*p);
extern fsoc H741;
T741*new741(void);
void gc_sweep791(fsoc*c);
void gc_mark791(T791*o);
void gc_align_mark791(fsoc*c,gc791*p);
extern fsoc H791;
T791*new791(void);
void gc_sweep910(fsoc*c);
void gc_mark910(T910*o);
void gc_align_mark910(fsoc*c,gc910*p);
extern fsoc H910;
T910*new910(void);
void gc_mark911(T911 o);
T911 new911(unsigned int size);
void gc_sweep912(fsoc*c);
void gc_mark912(T912*o);
void gc_align_mark912(fsoc*c,gc912*p);
extern fsoc H912;
T912*new912(void);
void gc_sweep914(fsoc*c);
void gc_mark914(T914*o);
void gc_align_mark914(fsoc*c,gc914*p);
extern fsoc H914;
T914*new914(void);
void gc_sweep916(fsoc*c);
void gc_mark916(T916*o);
void gc_align_mark916(fsoc*c,gc916*p);
extern fsoc H916;
T916*new916(void);
void gc_sweep743(fsoc*c);
void gc_mark743(T743*o);
void gc_align_mark743(fsoc*c,gc743*p);
extern fsoc H743;
T743*new743(void);
void gc_sweep919(fsoc*c);
void gc_mark919(T919*o);
void gc_align_mark919(fsoc*c,gc919*p);
extern fsoc H919;
T919*new919(void);
void gc_sweep444(fsoc*c);
void gc_mark444(T444*o);
void gc_align_mark444(fsoc*c,gc444*p);
extern fsoc H444;
T444*new444(void);
void gc_sweep421(fsoc*c);
void gc_mark421(T421*o);
void gc_align_mark421(fsoc*c,gc421*p);
extern fsoc H421;
T421*new421(void);
void gc_sweep375(fsoc*c);
void gc_mark375(T375*o);
void gc_align_mark375(fsoc*c,gc375*p);
extern fsoc H375;
T375*new375(void);
void gc_sweep427(fsoc*c);
void gc_mark427(T427*o);
void gc_align_mark427(fsoc*c,gc427*p);
extern fsoc H427;
T427*new427(void);
void gc_sweep436(fsoc*c);
void gc_mark436(T436*o);
void gc_align_mark436(fsoc*c,gc436*p);
extern fsoc H436;
T436*new436(void);
void gc_sweep478(fsoc*c);
void gc_mark478(T478*o);
void gc_align_mark478(fsoc*c,gc478*p);
extern fsoc H478;
T478*new478(void);
void gc_sweep488(fsoc*c);
void gc_mark488(T488*o);
void gc_align_mark488(fsoc*c,gc488*p);
extern fsoc H488;
T488*new488(void);
void gc_sweep490(fsoc*c);
void gc_mark490(T490*o);
void gc_align_mark490(fsoc*c,gc490*p);
extern fsoc H490;
T490*new490(void);
void gc_sweep349(fsoc*c);
void gc_mark349(T349*o);
void gc_align_mark349(fsoc*c,gc349*p);
extern fsoc H349;
T349*new349(void);
void gc_sweep106(fsoc*c);
void gc_mark106(T106*o);
void gc_align_mark106(fsoc*c,gc106*p);
extern fsoc H106;
T106*new106(void);
void gc_sweep491(fsoc*c);
void gc_mark491(T491*o);
void gc_align_mark491(fsoc*c,gc491*p);
extern fsoc H491;
T491*new491(void);
void gc_sweep440(fsoc*c);
void gc_mark440(T440*o);
void gc_align_mark440(fsoc*c,gc440*p);
extern fsoc H440;
T440*new440(void);
void gc_sweep403(fsoc*c);
void gc_mark403(T403*o);
void gc_align_mark403(fsoc*c,gc403*p);
extern fsoc H403;
T403*new403(void);
void gc_sweep376(fsoc*c);
void gc_mark376(T376*o);
void gc_align_mark376(fsoc*c,gc376*p);
extern fsoc H376;
T376*new376(void);
void gc_sweep431(fsoc*c);
void gc_mark431(T431*o);
void gc_align_mark431(fsoc*c,gc431*p);
extern fsoc H431;
T431*new431(void);
void gc_sweep402(fsoc*c);
void gc_mark402(T402*o);
void gc_align_mark402(fsoc*c,gc402*p);
extern fsoc H402;
T402*new402(void);
void gc_sweep429(fsoc*c);
void gc_mark429(T429*o);
void gc_align_mark429(fsoc*c,gc429*p);
extern fsoc H429;
T429*new429(void);
void gc_sweep398(fsoc*c);
void gc_mark398(T398*o);
void gc_align_mark398(fsoc*c,gc398*p);
extern fsoc H398;
T398*new398(void);
void gc_sweep432(fsoc*c);
void gc_mark432(T432*o);
void gc_align_mark432(fsoc*c,gc432*p);
extern fsoc H432;
T432*new432(void);
void gc_sweep430(fsoc*c);
void gc_mark430(T430*o);
void gc_align_mark430(fsoc*c,gc430*p);
extern fsoc H430;
T430*new430(void);
void gc_sweep437(fsoc*c);
void gc_mark437(T437*o);
void gc_align_mark437(fsoc*c,gc437*p);
extern fsoc H437;
T437*new437(void);
void gc_sweep434(fsoc*c);
void gc_mark434(T434*o);
void gc_align_mark434(fsoc*c,gc434*p);
extern fsoc H434;
T434*new434(void);
void gc_sweep438(fsoc*c);
void gc_mark438(T438*o);
void gc_align_mark438(fsoc*c,gc438*p);
extern fsoc H438;
T438*new438(void);
void gc_sweep441(fsoc*c);
void gc_mark441(T441*o);
void gc_align_mark441(fsoc*c,gc441*p);
extern fsoc H441;
T441*new441(void);
void gc_sweep266(fsoc*c);
void gc_mark266(T266*o);
void gc_align_mark266(fsoc*c,gc266*p);
extern fsoc H266;
T266*new266(void);
void gc_sweep461(fsoc*c);
void gc_mark461(T461*o);
void gc_align_mark461(fsoc*c,gc461*p);
extern fsoc H461;
T461*new461(void);
void gc_sweep463(fsoc*c);
void gc_mark463(T463*o);
void gc_align_mark463(fsoc*c,gc463*p);
extern fsoc H463;
T463*new463(void);
void gc_sweep464(fsoc*c);
void gc_mark464(T464*o);
void gc_align_mark464(fsoc*c,gc464*p);
extern fsoc H464;
T464*new464(void);
void gc_sweep465(fsoc*c);
void gc_mark465(T465*o);
void gc_align_mark465(fsoc*c,gc465*p);
extern fsoc H465;
T465*new465(void);
void gc_sweep466(fsoc*c);
void gc_mark466(T466*o);
void gc_align_mark466(fsoc*c,gc466*p);
extern fsoc H466;
T466*new466(void);
void gc_sweep416(fsoc*c);
void gc_mark416(T416*o);
void gc_align_mark416(fsoc*c,gc416*p);
extern fsoc H416;
T416*new416(void);
void gc_sweep920(fsoc*c);
void gc_mark920(T920*o);
void gc_align_mark920(fsoc*c,gc920*p);
extern fsoc H920;
T920*new920(void);
void gc_sweep273(fsoc*c);
void gc_mark273(T273*o);
void gc_align_mark273(fsoc*c,gc273*p);
extern fsoc H273;
T273*new273(void);
void gc_sweep471(fsoc*c);
void gc_mark471(T471*o);
void gc_align_mark471(fsoc*c,gc471*p);
extern fsoc H471;
T471*new471(void);
void gc_sweep921(fsoc*c);
void gc_mark921(T921*o);
void gc_align_mark921(fsoc*c,gc921*p);
extern fsoc H921;
T921*new921(void);
void gc_sweep511(fsoc*c);
void gc_mark511(T511*o);
void gc_align_mark511(fsoc*c,gc511*p);
extern fsoc H511;
T511*new511(void);
void gc_sweep480(fsoc*c);
void gc_mark480(T480*o);
void gc_align_mark480(fsoc*c,gc480*p);
extern fsoc H480;
T480*new480(void);
void gc_sweep396(fsoc*c);
void gc_mark396(T396*o);
void gc_align_mark396(fsoc*c,gc396*p);
extern fsoc H396;
T396*new396(void);
void gc_sweep467(fsoc*c);
void gc_mark467(T467*o);
void gc_align_mark467(fsoc*c,gc467*p);
extern fsoc H467;
T467*new467(void);
void gc_sweep366(fsoc*c);
void gc_mark366(T366*o);
void gc_align_mark366(fsoc*c,gc366*p);
extern fsoc H366;
T366*new366(void);
void gc_sweep468(fsoc*c);
void gc_mark468(T468*o);
void gc_align_mark468(fsoc*c,gc468*p);
extern fsoc H468;
T468*new468(void);
void gc_sweep469(fsoc*c);
void gc_mark469(T469*o);
void gc_align_mark469(fsoc*c,gc469*p);
extern fsoc H469;
T469*new469(void);
void gc_sweep334(fsoc*c);
void gc_mark334(T334*o);
void gc_align_mark334(fsoc*c,gc334*p);
extern fsoc H334;
T334*new334(void);
void gc_sweep343(fsoc*c);
void gc_mark343(T343*o);
void gc_align_mark343(fsoc*c,gc343*p);
extern fsoc H343;
T343*new343(void);
void gc_sweep346(fsoc*c);
void gc_mark346(T346*o);
void gc_align_mark346(fsoc*c,gc346*p);
extern fsoc H346;
T346*new346(void);
void gc_sweep348(fsoc*c);
void gc_mark348(T348*o);
void gc_align_mark348(fsoc*c,gc348*p);
extern fsoc H348;
T348*new348(void);
void gc_sweep337(fsoc*c);
void gc_mark337(T337*o);
void gc_align_mark337(fsoc*c,gc337*p);
extern fsoc H337;
T337*new337(void);
void gc_sweep341(fsoc*c);
void gc_mark341(T341*o);
void gc_align_mark341(fsoc*c,gc341*p);
extern fsoc H341;
T341*new341(void);
void gc_sweep342(fsoc*c);
void gc_mark342(T342*o);
void gc_align_mark342(fsoc*c,gc342*p);
extern fsoc H342;
T342*new342(void);
void gc_sweep482(fsoc*c);
void gc_mark482(T482*o);
void gc_align_mark482(fsoc*c,gc482*p);
extern fsoc H482;
T482*new482(void);
void gc_sweep483(fsoc*c);
void gc_mark483(T483*o);
void gc_align_mark483(fsoc*c,gc483*p);
extern fsoc H483;
T483*new483(void);
void gc_sweep484(fsoc*c);
void gc_mark484(T484*o);
void gc_align_mark484(fsoc*c,gc484*p);
extern fsoc H484;
T484*new484(void);
void gc_sweep473(fsoc*c);
void gc_mark473(T473*o);
void gc_align_mark473(fsoc*c,gc473*p);
extern fsoc H473;
T473*new473(void);
void gc_sweep380(fsoc*c);
void gc_mark380(T380*o);
void gc_align_mark380(fsoc*c,gc380*p);
extern fsoc H380;
T380*new380(void);
void gc_sweep451(fsoc*c);
void gc_mark451(T451*o);
void gc_align_mark451(fsoc*c,gc451*p);
extern fsoc H451;
T451*new451(void);
void gc_sweep457(fsoc*c);
void gc_mark457(T457*o);
void gc_align_mark457(fsoc*c,gc457*p);
extern fsoc H457;
T457*new457(void);
void gc_sweep474(fsoc*c);
void gc_mark474(T474*o);
void gc_align_mark474(fsoc*c,gc474*p);
extern fsoc H474;
T474*new474(void);
void gc_sweep508(fsoc*c);
void gc_mark508(T508*o);
void gc_align_mark508(fsoc*c,gc508*p);
extern fsoc H508;
T508*new508(void);
void gc_sweep509(fsoc*c);
void gc_mark509(T509*o);
void gc_align_mark509(fsoc*c,gc509*p);
extern fsoc H509;
T509*new509(void);
void gc_sweep922(fsoc*c);
void gc_mark922(T922*o);
void gc_align_mark922(fsoc*c,gc922*p);
extern fsoc H922;
T922*new922(void);
void gc_sweep923(fsoc*c);
void gc_mark923(T923*o);
void gc_align_mark923(fsoc*c,gc923*p);
extern fsoc H923;
T923*new923(void);
void gc_sweep448(fsoc*c);
void gc_mark448(T448*o);
void gc_align_mark448(fsoc*c,gc448*p);
extern fsoc H448;
T448*new448(void);
void gc_sweep449(fsoc*c);
void gc_mark449(T449*o);
void gc_align_mark449(fsoc*c,gc449*p);
extern fsoc H449;
T449*new449(void);
void gc_sweep924(fsoc*c);
void gc_mark924(T924*o);
void gc_align_mark924(fsoc*c,gc924*p);
extern fsoc H924;
T924*new924(void);
void gc_sweep386(fsoc*c);
void gc_mark386(T386*o);
void gc_align_mark386(fsoc*c,gc386*p);
extern fsoc H386;
T386*new386(void);
void gc_sweep925(fsoc*c);
void gc_mark925(T925*o);
void gc_align_mark925(fsoc*c,gc925*p);
extern fsoc H925;
T925*new925(void);
void gc_sweep658(fsoc*c);
void gc_mark658(T658*o);
void gc_align_mark658(fsoc*c,gc658*p);
extern fsoc H658;
T658*new658(void);
void gc_sweep926(fsoc*c);
void gc_mark926(T926*o);
void gc_align_mark926(fsoc*c,gc926*p);
extern fsoc H926;
T926*new926(void);
void gc_sweep413(fsoc*c);
void gc_mark413(T413*o);
void gc_align_mark413(fsoc*c,gc413*p);
extern fsoc H413;
T413*new413(void);
void gc_sweep383(fsoc*c);
void gc_mark383(T383*o);
void gc_align_mark383(fsoc*c,gc383*p);
extern fsoc H383;
T383*new383(void);
void gc_sweep927(fsoc*c);
void gc_mark927(T927*o);
void gc_align_mark927(fsoc*c,gc927*p);
extern fsoc H927;
T927*new927(void);
void gc_sweep387(fsoc*c);
void gc_mark387(T387*o);
void gc_align_mark387(fsoc*c,gc387*p);
extern fsoc H387;
T387*new387(void);
void gc_sweep443(fsoc*c);
void gc_mark443(T443*o);
void gc_align_mark443(fsoc*c,gc443*p);
extern fsoc H443;
T443*new443(void);
void gc_sweep510(fsoc*c);
void gc_mark510(T510*o);
void gc_align_mark510(fsoc*c,gc510*p);
extern fsoc H510;
T510*new510(void);
void gc_sweep928(fsoc*c);
void gc_mark928(T928*o);
void gc_align_mark928(fsoc*c,gc928*p);
extern fsoc H928;
T928*new928(void);
void gc_sweep470(fsoc*c);
void gc_mark470(T470*o);
void gc_align_mark470(fsoc*c,gc470*p);
extern fsoc H470;
T470*new470(void);
void gc_sweep407(fsoc*c);
void gc_mark407(T407*o);
void gc_align_mark407(fsoc*c,gc407*p);
extern fsoc H407;
T407*new407(void);
void gc_sweep393(fsoc*c);
void gc_mark393(T393*o);
void gc_align_mark393(fsoc*c,gc393*p);
extern fsoc H393;
T393*new393(void);
void gc_sweep929(fsoc*c);
void gc_mark929(T929*o);
void gc_align_mark929(fsoc*c,gc929*p);
extern fsoc H929;
T929*new929(void);
void gc_sweep352(fsoc*c);
void gc_mark352(T352*o);
void gc_align_mark352(fsoc*c,gc352*p);
extern fsoc H352;
T352*new352(void);
void gc_sweep364(fsoc*c);
void gc_mark364(T364*o);
void gc_align_mark364(fsoc*c,gc364*p);
extern fsoc H364;
T364*new364(void);
void gc_sweep357(fsoc*c);
void gc_mark357(T357*o);
void gc_align_mark357(fsoc*c,gc357*p);
extern fsoc H357;
T357*new357(void);
void gc_sweep472(fsoc*c);
void gc_mark472(T472*o);
void gc_align_mark472(fsoc*c,gc472*p);
extern fsoc H472;
T472*new472(void);
void gc_sweep418(fsoc*c);
void gc_mark418(T418*o);
void gc_align_mark418(fsoc*c,gc418*p);
extern fsoc H418;
T418*new418(void);
void gc_sweep459(fsoc*c);
void gc_mark459(T459*o);
void gc_align_mark459(fsoc*c,gc459*p);
extern fsoc H459;
T459*new459(void);
void gc_sweep460(fsoc*c);
void gc_mark460(T460*o);
void gc_align_mark460(fsoc*c,gc460*p);
extern fsoc H460;
T460*new460(void);
void gc_sweep359(fsoc*c);
void gc_mark359(T359*o);
void gc_align_mark359(fsoc*c,gc359*p);
extern fsoc H359;
T359*new359(void);
void gc_sweep399(fsoc*c);
void gc_mark399(T399*o);
void gc_align_mark399(fsoc*c,gc399*p);
extern fsoc H399;
T399*new399(void);
void gc_sweep458(fsoc*c);
void gc_mark458(T458*o);
void gc_align_mark458(fsoc*c,gc458*p);
extern fsoc H458;
T458*new458(void);
void gc_sweep487(fsoc*c);
void gc_mark487(T487*o);
void gc_align_mark487(fsoc*c,gc487*p);
extern fsoc H487;
T487*new487(void);
void gc_sweep477(fsoc*c);
void gc_mark477(T477*o);
void gc_align_mark477(fsoc*c,gc477*p);
extern fsoc H477;
T477*new477(void);
void gc_sweep362(fsoc*c);
void gc_mark362(T362*o);
void gc_align_mark362(fsoc*c,gc362*p);
extern fsoc H362;
T362*new362(void);
void gc_sweep389(fsoc*c);
void gc_mark389(T389*o);
void gc_align_mark389(fsoc*c,gc389*p);
extern fsoc H389;
T389*new389(void);
void gc_sweep454(fsoc*c);
void gc_mark454(T454*o);
void gc_align_mark454(fsoc*c,gc454*p);
extern fsoc H454;
T454*new454(void);
void gc_sweep390(fsoc*c);
void gc_mark390(T390*o);
void gc_align_mark390(fsoc*c,gc390*p);
extern fsoc H390;
T390*new390(void);
void gc_sweep653(fsoc*c);
void gc_mark653(T653*o);
void gc_align_mark653(fsoc*c,gc653*p);
extern fsoc H653;
T653*new653(void);
void gc_sweep476(fsoc*c);
void gc_mark476(T476*o);
void gc_align_mark476(fsoc*c,gc476*p);
extern fsoc H476;
T476*new476(void);
void gc_sweep391(fsoc*c);
void gc_mark391(T391*o);
void gc_align_mark391(fsoc*c,gc391*p);
extern fsoc H391;
T391*new391(void);
void gc_sweep485(fsoc*c);
void gc_mark485(T485*o);
void gc_align_mark485(fsoc*c,gc485*p);
extern fsoc H485;
T485*new485(void);
void gc_sweep507(fsoc*c);
void gc_mark507(T507*o);
void gc_align_mark507(fsoc*c,gc507*p);
extern fsoc H507;
T507*new507(void);
void gc_sweep506(fsoc*c);
void gc_mark506(T506*o);
void gc_align_mark506(fsoc*c,gc506*p);
extern fsoc H506;
T506*new506(void);
void gc_sweep502(fsoc*c);
void gc_mark502(T502*o);
void gc_align_mark502(fsoc*c,gc502*p);
extern fsoc H502;
T502*new502(void);
void gc_sweep503(fsoc*c);
void gc_mark503(T503*o);
void gc_align_mark503(fsoc*c,gc503*p);
extern fsoc H503;
T503*new503(void);
void gc_sweep504(fsoc*c);
void gc_mark504(T504*o);
void gc_align_mark504(fsoc*c,gc504*p);
extern fsoc H504;
T504*new504(void);
void gc_sweep505(fsoc*c);
void gc_mark505(T505*o);
void gc_align_mark505(fsoc*c,gc505*p);
extern fsoc H505;
T505*new505(void);
void gc_sweep501(fsoc*c);
void gc_mark501(T501*o);
void gc_align_mark501(fsoc*c,gc501*p);
extern fsoc H501;
T501*new501(void);
void gc_sweep369(fsoc*c);
void gc_mark369(T369*o);
void gc_align_mark369(fsoc*c,gc369*p);
extern fsoc H369;
T369*new369(void);
void gc_sweep392(fsoc*c);
void gc_mark392(T392*o);
void gc_align_mark392(fsoc*c,gc392*p);
extern fsoc H392;
T392*new392(void);
void gc_sweep497(fsoc*c);
void gc_mark497(T497*o);
void gc_align_mark497(fsoc*c,gc497*p);
extern fsoc H497;
T497*new497(void);
void gc_sweep498(fsoc*c);
void gc_mark498(T498*o);
void gc_align_mark498(fsoc*c,gc498*p);
extern fsoc H498;
T498*new498(void);
void gc_sweep499(fsoc*c);
void gc_mark499(T499*o);
void gc_align_mark499(fsoc*c,gc499*p);
extern fsoc H499;
T499*new499(void);
void gc_sweep500(fsoc*c);
void gc_mark500(T500*o);
void gc_align_mark500(fsoc*c,gc500*p);
extern fsoc H500;
T500*new500(void);
void gc_sweep397(fsoc*c);
void gc_mark397(T397*o);
void gc_align_mark397(fsoc*c,gc397*p);
extern fsoc H397;
T397*new397(void);
void gc_sweep496(fsoc*c);
void gc_mark496(T496*o);
void gc_align_mark496(fsoc*c,gc496*p);
extern fsoc H496;
T496*new496(void);
void gc_sweep493(fsoc*c);
void gc_mark493(T493*o);
void gc_align_mark493(fsoc*c,gc493*p);
extern fsoc H493;
T493*new493(void);
void gc_sweep494(fsoc*c);
void gc_mark494(T494*o);
void gc_align_mark494(fsoc*c,gc494*p);
extern fsoc H494;
T494*new494(void);
void gc_sweep495(fsoc*c);
void gc_mark495(T495*o);
void gc_align_mark495(fsoc*c,gc495*p);
extern fsoc H495;
T495*new495(void);
void gc_sweep492(fsoc*c);
void gc_mark492(T492*o);
void gc_align_mark492(fsoc*c,gc492*p);
extern fsoc H492;
T492*new492(void);
void gc_sweep452(fsoc*c);
void gc_mark452(T452*o);
void gc_align_mark452(fsoc*c,gc452*p);
extern fsoc H452;
T452*new452(void);
void gc_sweep453(fsoc*c);
void gc_mark453(T453*o);
void gc_align_mark453(fsoc*c,gc453*p);
extern fsoc H453;
T453*new453(void);
void gc_sweep486(fsoc*c);
void gc_mark486(T486*o);
void gc_align_mark486(fsoc*c,gc486*p);
extern fsoc H486;
T486*new486(void);
void gc_sweep279(fsoc*c);
void gc_mark279(T279*o);
void gc_align_mark279(fsoc*c,gc279*p);
extern fsoc H279;
T279*new279(void);
void gc_sweep456(fsoc*c);
void gc_mark456(T456*o);
void gc_align_mark456(fsoc*c,gc456*p);
extern fsoc H456;
T456*new456(void);
void gc_sweep455(fsoc*c);
void gc_mark455(T455*o);
void gc_align_mark455(fsoc*c,gc455*p);
extern fsoc H455;
T455*new455(void);
void gc_sweep930(fsoc*c);
void gc_mark930(T930*o);
void gc_align_mark930(fsoc*c,gc930*p);
extern fsoc H930;
T930*new930(void);
void gc_sweep414(fsoc*c);
void gc_mark414(T414*o);
void gc_align_mark414(fsoc*c,gc414*p);
extern fsoc H414;
T414*new414(void);
void gc_sweep423(fsoc*c);
void gc_mark423(T423*o);
void gc_align_mark423(fsoc*c,gc423*p);
extern fsoc H423;
T423*new423(void);
void gc_sweep742(fsoc*c);
void gc_mark742(T742*o);
void gc_align_mark742(fsoc*c,gc742*p);
extern fsoc H742;
T742*new742(void);
void gc_sweep450(fsoc*c);
void gc_mark450(T450*o);
void gc_align_mark450(fsoc*c,gc450*p);
extern fsoc H450;
T450*new450(void);
void gc_sweep353(fsoc*c);
void gc_mark353(T353*o);
void gc_align_mark353(fsoc*c,gc353*p);
extern fsoc H353;
T353*new353(void);
void gc_sweep405(fsoc*c);
void gc_mark405(T405*o);
void gc_align_mark405(fsoc*c,gc405*p);
extern fsoc H405;
T405*new405(void);
void gc_sweep388(fsoc*c);
void gc_mark388(T388*o);
void gc_align_mark388(fsoc*c,gc388*p);
extern fsoc H388;
T388*new388(void);
void gc_sweep931(fsoc*c);
void gc_mark931(T931*o);
void gc_align_mark931(fsoc*c,gc931*p);
extern fsoc H931;
T931*new931(void);
void gc_sweep932(fsoc*c);
void gc_mark932(T932*o);
void gc_align_mark932(fsoc*c,gc932*p);
extern fsoc H932;
T932*new932(void);
void gc_sweep933(fsoc*c);
void gc_update_weak_ref_item933(T933* wr);
void gc_mark933(T933*o);
void gc_align_mark933(fsoc*c,gc933*p);
extern fsoc H933;
T933*new933(void);
void gc_sweep934(fsoc*c);
void gc_mark934(T934*o);
void gc_align_mark934(fsoc*c,gc934*p);
extern fsoc H934;
T934*new934(void);
void gc_mark935(T935 o);
T935 new935(unsigned int size);
void gc_mark936(T936 o);
T936 new936(unsigned int size);
void gc_mark937(T937 o);
T937 new937(unsigned int size);
void gc_sweep938(fsoc*c);
void gc_mark938(T938*o);
void gc_align_mark938(fsoc*c,gc938*p);
extern fsoc H938;
T938*new938(void);
void gc_sweep525(fsoc*c);
void gc_mark525(T525*o);
void gc_align_mark525(fsoc*c,gc525*p);
extern fsoc H525;
T525*new525(void);
void gc_sweep939(fsoc*c);
void gc_mark939(T939*o);
void gc_align_mark939(fsoc*c,gc939*p);
extern fsoc H939;
T939*new939(void);
void gc_sweep941(fsoc*c);
void gc_mark941(T941*o);
void gc_align_mark941(fsoc*c,gc941*p);
extern fsoc H941;
T941*new941(void);
void gc_sweep425(fsoc*c);
void gc_mark425(T425*o);
void gc_align_mark425(fsoc*c,gc425*p);
extern fsoc H425;
T425*new425(void);
void gc_sweep417(fsoc*c);
void gc_mark417(T417*o);
void gc_align_mark417(fsoc*c,gc417*p);
extern fsoc H417;
T417*new417(void);
void gc_sweep947(fsoc*c);
void gc_mark947(T947*o);
void gc_align_mark947(fsoc*c,gc947*p);
extern fsoc H947;
T947*new947(void);
void gc_sweep948(fsoc*c);
void gc_mark948(T948*o);
void gc_align_mark948(fsoc*c,gc948*p);
extern fsoc H948;
T948*new948(void);
void gc_sweep445(fsoc*c);
void gc_mark445(T445*o);
void gc_align_mark445(fsoc*c,gc445*p);
extern fsoc H445;
T445*new445(void);
void gc_sweep422(fsoc*c);
void gc_mark422(T422*o);
void gc_align_mark422(fsoc*c,gc422*p);
extern fsoc H422;
T422*new422(void);
void gc_sweep442(fsoc*c);
void gc_mark442(T442*o);
void gc_align_mark442(fsoc*c,gc442*p);
extern fsoc H442;
T442*new442(void);
void gc_sweep949(fsoc*c);
void gc_mark949(T949*o);
void gc_align_mark949(fsoc*c,gc949*p);
extern fsoc H949;
T949*new949(void);
void gc_sweep420(fsoc*c);
void gc_mark420(T420*o);
void gc_align_mark420(fsoc*c,gc420*p);
extern fsoc H420;
T420*new420(void);
void gc_sweep950(fsoc*c);
void gc_mark950(T950*o);
void gc_align_mark950(fsoc*c,gc950*p);
extern fsoc H950;
T950*new950(void);
void gc_mark951(T951 o);
T951 new951(unsigned int size);
void gc_sweep952(fsoc*c);
void gc_update_weak_ref_item952(T952* wr);
void gc_mark952(T952*o);
void gc_align_mark952(fsoc*c,gc952*p);
extern fsoc H952;
T952*new952(void);
void gc_sweep953(fsoc*c);
void gc_mark953(T953*o);
void gc_align_mark953(fsoc*c,gc953*p);
extern fsoc H953;
T953*new953(void);
void gc_mark954(T954 o);
T954 new954(unsigned int size);
void gc_sweep955(fsoc*c);
void gc_update_weak_ref_item955(T955* wr);
void gc_mark955(T955*o);
void gc_align_mark955(fsoc*c,gc955*p);
extern fsoc H955;
T955*new955(void);
void gc_mark956(T956 o);
T956 new956(unsigned int size);
void gc_sweep957(fsoc*c);
void gc_mark957(T957*o);
void gc_align_mark957(fsoc*c,gc957*p);
extern fsoc H957;
T957*new957(void);
void gc_sweep958(fsoc*c);
void gc_mark958(T958*o);
void gc_align_mark958(fsoc*c,gc958*p);
extern fsoc H958;
T958*new958(void);
void gc_sweep959(fsoc*c);
void gc_mark959(T959*o);
void gc_align_mark959(fsoc*c,gc959*p);
extern fsoc H959;
T959*new959(void);
void gc_sweep962(fsoc*c);
void gc_mark962(T962*o);
void gc_align_mark962(fsoc*c,gc962*p);
extern fsoc H962;
T962*new962(void);
void gc_sweep963(fsoc*c);
void gc_mark963(T963*o);
void gc_align_mark963(fsoc*c,gc963*p);
extern fsoc H963;
T963*new963(void);
void gc_sweep964(fsoc*c);
void gc_mark964(T964*o);
void gc_align_mark964(fsoc*c,gc964*p);
extern fsoc H964;
T964*new964(void);
void gc_sweep965(fsoc*c);
void gc_mark965(T965*o);
void gc_align_mark965(fsoc*c,gc965*p);
extern fsoc H965;
T965*new965(void);
void gc_sweep966(fsoc*c);
void gc_mark966(T966*o);
void gc_align_mark966(fsoc*c,gc966*p);
extern fsoc H966;
T966*new966(void);
void gc_sweep967(fsoc*c);
void gc_mark967(T967*o);
void gc_align_mark967(fsoc*c,gc967*p);
extern fsoc H967;
T967*new967(void);
void gc_sweep518(fsoc*c);
void gc_mark518(T518*o);
void gc_align_mark518(fsoc*c,gc518*p);
extern fsoc H518;
T518*new518(void);
void gc_sweep969(fsoc*c);
void gc_mark969(T969*o);
void gc_align_mark969(fsoc*c,gc969*p);
extern fsoc H969;
T969*new969(void);
void gc_sweep973(fsoc*c);
void gc_mark973(T973*o);
void gc_align_mark973(fsoc*c,gc973*p);
extern fsoc H973;
T973*new973(void);
void gc_sweep974(fsoc*c);
void gc_mark974(T974*o);
void gc_align_mark974(fsoc*c,gc974*p);
extern fsoc H974;
T974*new974(void);
void gc_sweep975(fsoc*c);
void gc_mark975(T975*o);
void gc_align_mark975(fsoc*c,gc975*p);
extern fsoc H975;
T975*new975(void);
void gc_sweep976(fsoc*c);
void gc_mark976(T976*o);
void gc_align_mark976(fsoc*c,gc976*p);
extern fsoc H976;
T976*new976(void);
void gc_sweep977(fsoc*c);
void gc_mark977(T977*o);
void gc_align_mark977(fsoc*c,gc977*p);
extern fsoc H977;
T977*new977(void);
void gc_sweep520(fsoc*c);
void gc_mark520(T520*o);
void gc_align_mark520(fsoc*c,gc520*p);
extern fsoc H520;
T520*new520(void);
void gc_sweep978(fsoc*c);
void gc_mark978(T978*o);
void gc_align_mark978(fsoc*c,gc978*p);
extern fsoc H978;
T978*new978(void);
void gc_sweep979(fsoc*c);
void gc_mark979(T979*o);
void gc_align_mark979(fsoc*c,gc979*p);
extern fsoc H979;
T979*new979(void);
void gc_sweep553(fsoc*c);
void gc_mark553(T553*o);
void gc_align_mark553(fsoc*c,gc553*p);
extern fsoc H553;
T553*new553(void);
void gc_sweep981(fsoc*c);
void gc_mark981(T981*o);
void gc_align_mark981(fsoc*c,gc981*p);
extern fsoc H981;
T981*new981(void);
void gc_sweep982(fsoc*c);
void gc_mark982(T982*o);
void gc_align_mark982(fsoc*c,gc982*p);
extern fsoc H982;
T982*new982(void);
void gc_sweep983(fsoc*c);
void gc_mark983(T983*o);
void gc_align_mark983(fsoc*c,gc983*p);
extern fsoc H983;
T983*new983(void);
void gc_sweep395(fsoc*c);
void gc_mark395(T395*o);
void gc_align_mark395(fsoc*c,gc395*p);
extern fsoc H395;
T395*new395(void);
void gc_mark984(T984 o);
T984 new984(unsigned int size);
void gc_sweep985(fsoc*c);
void gc_update_weak_ref_item985(T985* wr);
void gc_mark985(T985*o);
void gc_align_mark985(fsoc*c,gc985*p);
extern fsoc H985;
T985*new985(void);
void gc_sweep986(fsoc*c);
void gc_mark986(T986*o);
void gc_align_mark986(fsoc*c,gc986*p);
extern fsoc H986;
T986*new986(void);
void gc_mark987(T987 o);
T987 new987(unsigned int size);
void gc_sweep988(fsoc*c);
void gc_mark988(T988*o);
void gc_align_mark988(fsoc*c,gc988*p);
extern fsoc H988;
T988*new988(void);
void gc_sweep989(fsoc*c);
void gc_mark989(T989*o);
void gc_align_mark989(fsoc*c,gc989*p);
extern fsoc H989;
T989*new989(void);
void gc_sweep628(fsoc*c);
void gc_mark628(T628*o);
void gc_align_mark628(fsoc*c,gc628*p);
extern fsoc H628;
T628*new628(void);
void gc_sweep990(fsoc*c);
void gc_mark990(T990*o);
void gc_align_mark990(fsoc*c,gc990*p);
extern fsoc H990;
T990*new990(void);
void gc_sweep991(fsoc*c);
void gc_mark991(T991*o);
void gc_align_mark991(fsoc*c,gc991*p);
extern fsoc H991;
T991*new991(void);
void gc_sweep992(fsoc*c);
void gc_mark992(T992*o);
void gc_align_mark992(fsoc*c,gc992*p);
extern fsoc H992;
T992*new992(void);
void gc_mark330(T330*o);
void gc_sweep993(fsoc*c);
void gc_mark993(T993*o);
void gc_align_mark993(fsoc*c,gc993*p);
extern fsoc H993;
T993*new993(void);
void gc_sweep998(fsoc*c);
void gc_mark998(T998*o);
void gc_align_mark998(fsoc*c,gc998*p);
extern fsoc H998;
T998*new998(void);
void gc_sweep999(fsoc*c);
void gc_mark999(T999*o);
void gc_align_mark999(fsoc*c,gc999*p);
extern fsoc H999;
T999*new999(void);
void gc_sweep1000(fsoc*c);
void gc_mark1000(T1000*o);
void gc_align_mark1000(fsoc*c,gc1000*p);
extern fsoc H1000;
T1000*new1000(void);
void gc_sweep1001(fsoc*c);
void gc_mark1001(T1001*o);
void gc_align_mark1001(fsoc*c,gc1001*p);
extern fsoc H1001;
T1001*new1001(void);
void gc_sweep1002(fsoc*c);
void gc_update_weak_ref_item1002(T1002* wr);
void gc_mark1002(T1002*o);
void gc_align_mark1002(fsoc*c,gc1002*p);
extern fsoc H1002;
T1002*new1002(void);
void gc_sweep1003(fsoc*c);
void gc_mark1003(T1003*o);
void gc_align_mark1003(fsoc*c,gc1003*p);
extern fsoc H1003;
T1003*new1003(void);
void gc_mark1004(T1004 o);
T1004 new1004(unsigned int size);
void gc_sweep1005(fsoc*c);
void gc_update_weak_ref_item1005(T1005* wr);
void gc_mark1005(T1005*o);
void gc_align_mark1005(fsoc*c,gc1005*p);
extern fsoc H1005;
T1005*new1005(void);
void gc_sweep1006(fsoc*c);
void gc_mark1006(T1006*o);
void gc_align_mark1006(fsoc*c,gc1006*p);
extern fsoc H1006;
T1006*new1006(void);
void gc_mark1007(T1007 o);
T1007 new1007(unsigned int size);
void gc_mark1008(T1008 o);
T1008 new1008(unsigned int size);
void gc_sweep1009(fsoc*c);
void gc_mark1009(T1009*o);
void gc_align_mark1009(fsoc*c,gc1009*p);
extern fsoc H1009;
T1009*new1009(void);
void gc_sweep1012(fsoc*c);
void gc_update_weak_ref_item1012(T1012* wr);
void gc_mark1012(T1012*o);
void gc_align_mark1012(fsoc*c,gc1012*p);
extern fsoc H1012;
T1012*new1012(void);
void gc_sweep1013(fsoc*c);
void gc_mark1013(T1013*o);
void gc_align_mark1013(fsoc*c,gc1013*p);
extern fsoc H1013;
T1013*new1013(void);
void gc_sweep1014(fsoc*c);
void gc_mark1014(T1014*o);
void gc_align_mark1014(fsoc*c,gc1014*p);
extern fsoc H1014;
T1014*new1014(void);
void gc_sweep401(fsoc*c);
void gc_mark401(T401*o);
void gc_align_mark401(fsoc*c,gc401*p);
extern fsoc H401;
T401*new401(void);
void gc_sweep1015(fsoc*c);
void gc_mark1015(T1015*o);
void gc_align_mark1015(fsoc*c,gc1015*p);
extern fsoc H1015;
T1015*new1015(void);
void gc_sweep554(fsoc*c);
void gc_mark554(T554*o);
void gc_align_mark554(fsoc*c,gc554*p);
extern fsoc H554;
T554*new554(void);
void gc_sweep1016(fsoc*c);
void gc_update_weak_ref_item1016(T1016* wr);
void gc_mark1016(T1016*o);
void gc_align_mark1016(fsoc*c,gc1016*p);
extern fsoc H1016;
T1016*new1016(void);
void gc_sweep1017(fsoc*c);
void gc_mark1017(T1017*o);
void gc_align_mark1017(fsoc*c,gc1017*p);
extern fsoc H1017;
T1017*new1017(void);
void gc_mark1018(T1018 o);
T1018 new1018(unsigned int size);
void gc_mark1019(T1019 o);
T1019 new1019(unsigned int size);
void gc_sweep1020(fsoc*c);
void gc_mark1020(T1020*o);
void gc_align_mark1020(fsoc*c,gc1020*p);
extern fsoc H1020;
T1020*new1020(void);
void gc_sweep1021(fsoc*c);
void gc_mark1021(T1021*o);
void gc_align_mark1021(fsoc*c,gc1021*p);
extern fsoc H1021;
T1021*new1021(void);
void gc_mark1023(T1023 o);
T1023 new1023(unsigned int size);
void gc_sweep1024(fsoc*c);
void gc_mark1024(T1024*o);
void gc_align_mark1024(fsoc*c,gc1024*p);
extern fsoc H1024;
T1024*new1024(void);
void gc_sweep1025(fsoc*c);
void gc_update_weak_ref_item1025(T1025* wr);
void gc_mark1025(T1025*o);
void gc_align_mark1025(fsoc*c,gc1025*p);
extern fsoc H1025;
T1025*new1025(void);
void gc_mark1026(T1026 o);
T1026 new1026(unsigned int size);
void gc_sweep1027(fsoc*c);
void gc_mark1027(T1027*o);
void gc_align_mark1027(fsoc*c,gc1027*p);
extern fsoc H1027;
T1027*new1027(void);
void gc_mark1029(T1029 o);
T1029 new1029(unsigned int size);
void gc_mark1030(T1030 o);
T1030 new1030(unsigned int size);
void gc_mark1031(T1031 o);
T1031 new1031(unsigned int size);
void gc_sweep1032(fsoc*c);
void gc_mark1032(T1032*o);
void gc_align_mark1032(fsoc*c,gc1032*p);
extern fsoc H1032;
T1032*new1032(void);
void gc_sweep1033(fsoc*c);
void gc_mark1033(T1033*o);
void gc_align_mark1033(fsoc*c,gc1033*p);
extern fsoc H1033;
T1033*new1033(void);
void gc_mark517(T517*o);
void gc_sweep513(fsoc*c);
void gc_mark513(T513*o);
void gc_align_mark513(fsoc*c,gc513*p);
extern fsoc H513;
T513*new513(void);
void gc_sweep1035(fsoc*c);
void gc_mark1035(T1035*o);
void gc_align_mark1035(fsoc*c,gc1035*p);
extern fsoc H1035;
T1035*new1035(void);
void gc_sweep767(fsoc*c);
void gc_mark767(T767*o);
void gc_align_mark767(fsoc*c,gc767*p);
extern fsoc H767;
T767*new767(void);
void gc_sweep1037(fsoc*c);
void gc_mark1037(T1037*o);
void gc_align_mark1037(fsoc*c,gc1037*p);
extern fsoc H1037;
T1037*new1037(void);
void gc_sweep1038(fsoc*c);
void gc_mark1038(T1038*o);
void gc_align_mark1038(fsoc*c,gc1038*p);
extern fsoc H1038;
T1038*new1038(void);
void gc_sweep1039(fsoc*c);
void gc_update_weak_ref_item1039(T1039* wr);
void gc_mark1039(T1039*o);
void gc_align_mark1039(fsoc*c,gc1039*p);
extern fsoc H1039;
T1039*new1039(void);
void gc_sweep1040(fsoc*c);
void gc_mark1040(T1040*o);
void gc_align_mark1040(fsoc*c,gc1040*p);
extern fsoc H1040;
T1040*new1040(void);
void gc_mark1041(T1041 o);
T1041 new1041(unsigned int size);
void gc_sweep1042(fsoc*c);
void gc_update_weak_ref_item1042(T1042* wr);
void gc_mark1042(T1042*o);
void gc_align_mark1042(fsoc*c,gc1042*p);
extern fsoc H1042;
T1042*new1042(void);
void gc_sweep1043(fsoc*c);
void gc_mark1043(T1043*o);
void gc_align_mark1043(fsoc*c,gc1043*p);
extern fsoc H1043;
T1043*new1043(void);
void gc_mark1044(T1044 o);
T1044 new1044(unsigned int size);
void gc_mark1045(T1045 o);
T1045 new1045(unsigned int size);
void gc_sweep1046(fsoc*c);
void gc_mark1046(T1046*o);
void gc_align_mark1046(fsoc*c,gc1046*p);
extern fsoc H1046;
T1046*new1046(void);
void gc_sweep1047(fsoc*c);
void gc_update_weak_ref_item1047(T1047* wr);
void gc_mark1047(T1047*o);
void gc_align_mark1047(fsoc*c,gc1047*p);
extern fsoc H1047;
T1047*new1047(void);
void gc_sweep1048(fsoc*c);
void gc_update_weak_ref_item1048(T1048* wr);
void gc_mark1048(T1048*o);
void gc_align_mark1048(fsoc*c,gc1048*p);
extern fsoc H1048;
T1048*new1048(void);
void gc_sweep1049(fsoc*c);
void gc_mark1049(T1049*o);
void gc_align_mark1049(fsoc*c,gc1049*p);
extern fsoc H1049;
T1049*new1049(void);
void gc_mark1050(T1050 o);
T1050 new1050(unsigned int size);
void gc_sweep1051(fsoc*c);
void gc_mark1051(T1051*o);
void gc_align_mark1051(fsoc*c,gc1051*p);
extern fsoc H1051;
T1051*new1051(void);
void gc_mark1052(T1052 o);
T1052 new1052(unsigned int size);
void gc_sweep636(fsoc*c);
void gc_mark636(T636*o);
void gc_align_mark636(fsoc*c,gc636*p);
extern fsoc H636;
T636*new636(void);
void gc_sweep644(fsoc*c);
void gc_mark644(T644*o);
void gc_align_mark644(fsoc*c,gc644*p);
extern fsoc H644;
T644*new644(void);
void gc_sweep555(fsoc*c);
void gc_mark555(T555*o);
void gc_align_mark555(fsoc*c,gc555*p);
extern fsoc H555;
T555*new555(void);
void gc_sweep649(fsoc*c);
void gc_mark649(T649*o);
void gc_align_mark649(fsoc*c,gc649*p);
extern fsoc H649;
T649*new649(void);
void gc_sweep646(fsoc*c);
void gc_mark646(T646*o);
void gc_align_mark646(fsoc*c,gc646*p);
extern fsoc H646;
T646*new646(void);
void gc_sweep647(fsoc*c);
void gc_mark647(T647*o);
void gc_align_mark647(fsoc*c,gc647*p);
extern fsoc H647;
T647*new647(void);
void gc_sweep642(fsoc*c);
void gc_mark642(T642*o);
void gc_align_mark642(fsoc*c,gc642*p);
extern fsoc H642;
T642*new642(void);
void gc_sweep645(fsoc*c);
void gc_mark645(T645*o);
void gc_align_mark645(fsoc*c,gc645*p);
extern fsoc H645;
T645*new645(void);
void gc_sweep643(fsoc*c);
void gc_mark643(T643*o);
void gc_align_mark643(fsoc*c,gc643*p);
extern fsoc H643;
T643*new643(void);
void gc_sweep648(fsoc*c);
void gc_mark648(T648*o);
void gc_align_mark648(fsoc*c,gc648*p);
extern fsoc H648;
T648*new648(void);
void gc_sweep639(fsoc*c);
void gc_mark639(T639*o);
void gc_align_mark639(fsoc*c,gc639*p);
extern fsoc H639;
T639*new639(void);
void gc_sweep638(fsoc*c);
void gc_mark638(T638*o);
void gc_align_mark638(fsoc*c,gc638*p);
extern fsoc H638;
T638*new638(void);
void gc_sweep641(fsoc*c);
void gc_mark641(T641*o);
void gc_align_mark641(fsoc*c,gc641*p);
extern fsoc H641;
T641*new641(void);
void gc_sweep1053(fsoc*c);
void gc_mark1053(T1053*o);
void gc_align_mark1053(fsoc*c,gc1053*p);
extern fsoc H1053;
T1053*new1053(void);
void gc_sweep1054(fsoc*c);
void gc_mark1054(T1054*o);
void gc_align_mark1054(fsoc*c,gc1054*p);
extern fsoc H1054;
T1054*new1054(void);
void gc_sweep1055(fsoc*c);
void gc_mark1055(T1055*o);
void gc_align_mark1055(fsoc*c,gc1055*p);
extern fsoc H1055;
T1055*new1055(void);
void gc_mark1056(T1056 o);
T1056 new1056(unsigned int size);
void gc_sweep683(fsoc*c);
void gc_mark683(T683*o);
void gc_align_mark683(fsoc*c,gc683*p);
extern fsoc H683;
T683*new683(void);
void gc_mark1057(T1057 o);
T1057 new1057(unsigned int size);
void gc_sweep1058(fsoc*c);
void gc_mark1058(T1058*o);
void gc_align_mark1058(fsoc*c,gc1058*p);
extern fsoc H1058;
T1058*new1058(void);
void gc_mark1059(T1059 o);
T1059 new1059(unsigned int size);
void gc_mark1060(T1060 o);
T1060 new1060(unsigned int size);
void gc_mark1061(T1061 o);
T1061 new1061(unsigned int size);
void gc_mark1062(T1062 o);
T1062 new1062(unsigned int size);
void gc_sweep1063(fsoc*c);
void gc_mark1063(T1063*o);
void gc_align_mark1063(fsoc*c,gc1063*p);
extern fsoc H1063;
T1063*new1063(void);
void gc_mark1064(T1064 o);
T1064 new1064(unsigned int size);
void gc_mark1065(T1065 o);
T1065 new1065(unsigned int size);
void gc_mark1066(T1066 o);
T1066 new1066(unsigned int size);
void gc_sweep1067(fsoc*c);
void gc_mark1067(T1067*o);
void gc_align_mark1067(fsoc*c,gc1067*p);
extern fsoc H1067;
T1067*new1067(void);
void gc_mark1068(T1068 o);
T1068 new1068(unsigned int size);
void gc_sweep724(fsoc*c);
void gc_mark724(T724*o);
void gc_align_mark724(fsoc*c,gc724*p);
extern fsoc H724;
T724*new724(void);
void gc_sweep1069(fsoc*c);
void gc_mark1069(T1069*o);
void gc_align_mark1069(fsoc*c,gc1069*p);
extern fsoc H1069;
T1069*new1069(void);
void gc_sweep374(fsoc*c);
void gc_mark374(T374*o);
void gc_align_mark374(fsoc*c,gc374*p);
extern fsoc H374;
T374*new374(void);
void gc_sweep670(fsoc*c);
void gc_mark670(T670*o);
void gc_align_mark670(fsoc*c,gc670*p);
extern fsoc H670;
T670*new670(void);
void gc_sweep661(fsoc*c);
void gc_mark661(T661*o);
void gc_align_mark661(fsoc*c,gc661*p);
extern fsoc H661;
T661*new661(void);
void gc_sweep1070(fsoc*c);
void gc_mark1070(T1070*o);
void gc_align_mark1070(fsoc*c,gc1070*p);
extern fsoc H1070;
T1070*new1070(void);
void gc_sweep1071(fsoc*c);
void gc_mark1071(T1071*o);
void gc_align_mark1071(fsoc*c,gc1071*p);
extern fsoc H1071;
T1071*new1071(void);
void gc_sweep666(fsoc*c);
void gc_mark666(T666*o);
void gc_align_mark666(fsoc*c,gc666*p);
extern fsoc H666;
T666*new666(void);
void gc_sweep1072(fsoc*c);
void gc_mark1072(T1072*o);
void gc_align_mark1072(fsoc*c,gc1072*p);
extern fsoc H1072;
T1072*new1072(void);
void gc_sweep1073(fsoc*c);
void gc_mark1073(T1073*o);
void gc_align_mark1073(fsoc*c,gc1073*p);
extern fsoc H1073;
T1073*new1073(void);
void gc_sweep1074(fsoc*c);
void gc_mark1074(T1074*o);
void gc_align_mark1074(fsoc*c,gc1074*p);
extern fsoc H1074;
T1074*new1074(void);
void gc_mark1076(T1076 o);
T1076 new1076(unsigned int size);
void gc_mark1077(T1077 o);
T1077 new1077(unsigned int size);
void gc_sweep1078(fsoc*c);
void gc_mark1078(T1078*o);
void gc_align_mark1078(fsoc*c,gc1078*p);
extern fsoc H1078;
T1078*new1078(void);
void gc_sweep1079(fsoc*c);
void gc_update_weak_ref_item1079(T1079* wr);
void gc_mark1079(T1079*o);
void gc_align_mark1079(fsoc*c,gc1079*p);
extern fsoc H1079;
T1079*new1079(void);
void gc_mark1080(T1080 o);
T1080 new1080(unsigned int size);
void gc_sweep1081(fsoc*c);
void gc_update_weak_ref_item1081(T1081* wr);
void gc_mark1081(T1081*o);
void gc_align_mark1081(fsoc*c,gc1081*p);
extern fsoc H1081;
T1081*new1081(void);
void gc_sweep1082(fsoc*c);
void gc_mark1082(T1082*o);
void gc_align_mark1082(fsoc*c,gc1082*p);
extern fsoc H1082;
T1082*new1082(void);
void gc_mark1083(T1083 o);
T1083 new1083(unsigned int size);
void gc_mark1086(T1086 o);
T1086 new1086(unsigned int size);
void gc_mark1087(T1087 o);
T1087 new1087(unsigned int size);
void gc_mark1088(T1088 o);
T1088 new1088(unsigned int size);
void gc_mark1089(T1089 o);
T1089 new1089(unsigned int size);
void gc_sweep1090(fsoc*c);
void gc_mark1090(T1090*o);
void gc_align_mark1090(fsoc*c,gc1090*p);
extern fsoc H1090;
T1090*new1090(void);
void gc_sweep1091(fsoc*c);
void gc_update_weak_ref_item1091(T1091* wr);
void gc_mark1091(T1091*o);
void gc_align_mark1091(fsoc*c,gc1091*p);
extern fsoc H1091;
T1091*new1091(void);
void gc_sweep1092(fsoc*c);
void gc_mark1092(T1092*o);
void gc_align_mark1092(fsoc*c,gc1092*p);
extern fsoc H1092;
T1092*new1092(void);
void gc_sweep1093(fsoc*c);
void gc_mark1093(T1093*o);
void gc_align_mark1093(fsoc*c,gc1093*p);
extern fsoc H1093;
T1093*new1093(void);
void gc_sweep1094(fsoc*c);
void gc_update_weak_ref_item1094(T1094* wr);
void gc_mark1094(T1094*o);
void gc_align_mark1094(fsoc*c,gc1094*p);
extern fsoc H1094;
T1094*new1094(void);
void gc_sweep1095(fsoc*c);
void gc_mark1095(T1095*o);
void gc_align_mark1095(fsoc*c,gc1095*p);
extern fsoc H1095;
T1095*new1095(void);
void gc_mark1096(T1096 o);
T1096 new1096(unsigned int size);
void gc_sweep1097(fsoc*c);
void gc_mark1097(T1097*o);
void gc_align_mark1097(fsoc*c,gc1097*p);
extern fsoc H1097;
T1097*new1097(void);
void gc_mark1098(T1098 o);
T1098 new1098(unsigned int size);
void gc_sweep1099(fsoc*c);
void gc_mark1099(T1099*o);
void gc_align_mark1099(fsoc*c,gc1099*p);
extern fsoc H1099;
T1099*new1099(void);
void gc_sweep1100(fsoc*c);
void gc_update_weak_ref_item1100(T1100* wr);
void gc_mark1100(T1100*o);
void gc_align_mark1100(fsoc*c,gc1100*p);
extern fsoc H1100;
T1100*new1100(void);
void gc_sweep1101(fsoc*c);
void gc_mark1101(T1101*o);
void gc_align_mark1101(fsoc*c,gc1101*p);
extern fsoc H1101;
T1101*new1101(void);
void gc_mark1102(T1102 o);
T1102 new1102(unsigned int size);
void gc_sweep1103(fsoc*c);
void gc_mark1103(T1103*o);
void gc_align_mark1103(fsoc*c,gc1103*p);
extern fsoc H1103;
T1103*new1103(void);
void gc_sweep1105(fsoc*c);
void gc_update_weak_ref_item1105(T1105* wr);
void gc_mark1105(T1105*o);
void gc_align_mark1105(fsoc*c,gc1105*p);
extern fsoc H1105;
T1105*new1105(void);
void gc_sweep1106(fsoc*c);
void gc_update_weak_ref_item1106(T1106* wr);
void gc_mark1106(T1106*o);
void gc_align_mark1106(fsoc*c,gc1106*p);
extern fsoc H1106;
T1106*new1106(void);
void gc_sweep1107(fsoc*c);
void gc_mark1107(T1107*o);
void gc_align_mark1107(fsoc*c,gc1107*p);
extern fsoc H1107;
T1107*new1107(void);
void gc_mark1108(T1108 o);
T1108 new1108(unsigned int size);
void gc_mark1109(T1109 o);
T1109 new1109(unsigned int size);
void gc_mark1110(T1110 o);
T1110 new1110(unsigned int size);
void gc_mark1111(T1111 o);
T1111 new1111(unsigned int size);
void gc_sweep1112(fsoc*c);
void gc_mark1112(T1112*o);
void gc_align_mark1112(fsoc*c,gc1112*p);
extern fsoc H1112;
T1112*new1112(void);
void gc_sweep1113(fsoc*c);
void gc_update_weak_ref_item1113(T1113* wr);
void gc_mark1113(T1113*o);
void gc_align_mark1113(fsoc*c,gc1113*p);
extern fsoc H1113;
T1113*new1113(void);
void gc_mark1114(T1114 o);
T1114 new1114(unsigned int size);
void gc_mark1116(T1116 o);
T1116 new1116(unsigned int size);
void gc_sweep1117(fsoc*c);
void gc_mark1117(T1117*o);
void gc_align_mark1117(fsoc*c,gc1117*p);
extern fsoc H1117;
T1117*new1117(void);
void gc_sweep1118(fsoc*c);
void gc_update_weak_ref_item1118(T1118* wr);
void gc_mark1118(T1118*o);
void gc_align_mark1118(fsoc*c,gc1118*p);
extern fsoc H1118;
T1118*new1118(void);
void gc_sweep1119(fsoc*c);
void gc_update_weak_ref_item1119(T1119* wr);
void gc_mark1119(T1119*o);
void gc_align_mark1119(fsoc*c,gc1119*p);
extern fsoc H1119;
T1119*new1119(void);
void gc_sweep1120(fsoc*c);
void gc_mark1120(T1120*o);
void gc_align_mark1120(fsoc*c,gc1120*p);
extern fsoc H1120;
T1120*new1120(void);
void gc_mark1121(T1121 o);
T1121 new1121(unsigned int size);
void gc_mark1122(T1122 o);
T1122 new1122(unsigned int size);
void gc_sweep1123(fsoc*c);
void gc_mark1123(T1123*o);
void gc_align_mark1123(fsoc*c,gc1123*p);
extern fsoc H1123;
T1123*new1123(void);
void gc_sweep1124(fsoc*c);
void gc_update_weak_ref_item1124(T1124* wr);
void gc_mark1124(T1124*o);
void gc_align_mark1124(fsoc*c,gc1124*p);
extern fsoc H1124;
T1124*new1124(void);
void gc_sweep1125(fsoc*c);
void gc_update_weak_ref_item1125(T1125* wr);
void gc_mark1125(T1125*o);
void gc_align_mark1125(fsoc*c,gc1125*p);
extern fsoc H1125;
T1125*new1125(void);
void gc_sweep1126(fsoc*c);
void gc_mark1126(T1126*o);
void gc_align_mark1126(fsoc*c,gc1126*p);
extern fsoc H1126;
T1126*new1126(void);
void gc_mark1127(T1127 o);
T1127 new1127(unsigned int size);
void gc_mark1128(T1128 o);
T1128 new1128(unsigned int size);
void gc_sweep1129(fsoc*c);
void gc_mark1129(T1129*o);
void gc_align_mark1129(fsoc*c,gc1129*p);
extern fsoc H1129;
T1129*new1129(void);
void gc_sweep1130(fsoc*c);
void gc_update_weak_ref_item1130(T1130* wr);
void gc_mark1130(T1130*o);
void gc_align_mark1130(fsoc*c,gc1130*p);
extern fsoc H1130;
T1130*new1130(void);
void gc_mark1131(T1131 o);
T1131 new1131(unsigned int size);
void gc_sweep1132(fsoc*c);
void gc_mark1132(T1132*o);
void gc_align_mark1132(fsoc*c,gc1132*p);
extern fsoc H1132;
T1132*new1132(void);
void gc_sweep1133(fsoc*c);
void gc_update_weak_ref_item1133(T1133* wr);
void gc_mark1133(T1133*o);
void gc_align_mark1133(fsoc*c,gc1133*p);
extern fsoc H1133;
T1133*new1133(void);
void gc_mark1134(T1134 o);
T1134 new1134(unsigned int size);
void gc_mark1135(T1135 o);
T1135 new1135(unsigned int size);
void gc_sweep1136(fsoc*c);
void gc_mark1136(T1136*o);
void gc_align_mark1136(fsoc*c,gc1136*p);
extern fsoc H1136;
T1136*new1136(void);
void gc_sweep1137(fsoc*c);
void gc_update_weak_ref_item1137(T1137* wr);
void gc_mark1137(T1137*o);
void gc_align_mark1137(fsoc*c,gc1137*p);
extern fsoc H1137;
T1137*new1137(void);
void gc_sweep1138(fsoc*c);
void gc_mark1138(T1138*o);
void gc_align_mark1138(fsoc*c,gc1138*p);
extern fsoc H1138;
T1138*new1138(void);
void gc_mark1139(T1139 o);
T1139 new1139(unsigned int size);
void gc_sweep1140(fsoc*c);
void gc_update_weak_ref_item1140(T1140* wr);
void gc_mark1140(T1140*o);
void gc_align_mark1140(fsoc*c,gc1140*p);
extern fsoc H1140;
T1140*new1140(void);
void gc_mark1141(T1141 o);
T1141 new1141(unsigned int size);
void gc_sweep408(fsoc*c);
void gc_mark408(T408*o);
void gc_align_mark408(fsoc*c,gc408*p);
extern fsoc H408;
T408*new408(void);
void gc_sweep725(fsoc*c);
void gc_mark725(T725*o);
void gc_align_mark725(fsoc*c,gc725*p);
extern fsoc H725;
T725*new725(void);
void gc_mark1142(T1142 o);
T1142 new1142(unsigned int size);
void gc_sweep1143(fsoc*c);
void gc_mark1143(T1143*o);
void gc_align_mark1143(fsoc*c,gc1143*p);
extern fsoc H1143;
T1143*new1143(void);
void gc_sweep1144(fsoc*c);
void gc_update_weak_ref_item1144(T1144* wr);
void gc_mark1144(T1144*o);
void gc_align_mark1144(fsoc*c,gc1144*p);
extern fsoc H1144;
T1144*new1144(void);
void gc_mark1145(T1145 o);
T1145 new1145(unsigned int size);
void gc_sweep1146(fsoc*c);
void gc_update_weak_ref_item1146(T1146* wr);
void gc_mark1146(T1146*o);
void gc_align_mark1146(fsoc*c,gc1146*p);
extern fsoc H1146;
T1146*new1146(void);
void gc_sweep1147(fsoc*c);
void gc_mark1147(T1147*o);
void gc_align_mark1147(fsoc*c,gc1147*p);
extern fsoc H1147;
T1147*new1147(void);
void gc_mark1148(T1148 o);
T1148 new1148(unsigned int size);
void gc_mark1149(T1149 o);
T1149 new1149(unsigned int size);
void gc_sweep1150(fsoc*c);
void gc_mark1150(T1150*o);
void gc_align_mark1150(fsoc*c,gc1150*p);
extern fsoc H1150;
T1150*new1150(void);
void gc_sweep1151(fsoc*c);
void gc_update_weak_ref_item1151(T1151* wr);
void gc_mark1151(T1151*o);
void gc_align_mark1151(fsoc*c,gc1151*p);
extern fsoc H1151;
T1151*new1151(void);
void gc_sweep1152(fsoc*c);
void gc_update_weak_ref_item1152(T1152* wr);
void gc_mark1152(T1152*o);
void gc_align_mark1152(fsoc*c,gc1152*p);
extern fsoc H1152;
T1152*new1152(void);
void gc_sweep1153(fsoc*c);
void gc_mark1153(T1153*o);
void gc_align_mark1153(fsoc*c,gc1153*p);
extern fsoc H1153;
T1153*new1153(void);
void gc_mark1154(T1154 o);
T1154 new1154(unsigned int size);
void gc_sweep1155(fsoc*c);
void gc_update_weak_ref_item1155(T1155* wr);
void gc_mark1155(T1155*o);
void gc_align_mark1155(fsoc*c,gc1155*p);
extern fsoc H1155;
T1155*new1155(void);
void gc_sweep1156(fsoc*c);
void gc_mark1156(T1156*o);
void gc_align_mark1156(fsoc*c,gc1156*p);
extern fsoc H1156;
T1156*new1156(void);
void gc_mark1157(T1157 o);
T1157 new1157(unsigned int size);
void gc_mark1158(T1158 o);
T1158 new1158(unsigned int size);
void gc_mark1159(T1159 o);
T1159 new1159(unsigned int size);
void gc_sweep1160(fsoc*c);
void gc_update_weak_ref_item1160(T1160* wr);
void gc_mark1160(T1160*o);
void gc_align_mark1160(fsoc*c,gc1160*p);
extern fsoc H1160;
T1160*new1160(void);
void gc_sweep1161(fsoc*c);
void gc_mark1161(T1161*o);
void gc_align_mark1161(fsoc*c,gc1161*p);
extern fsoc H1161;
T1161*new1161(void);
void gc_mark1162(T1162 o);
T1162 new1162(unsigned int size);
void gc_mark1163(T1163 o);
T1163 new1163(unsigned int size);
void gc_mark1164(T1164 o);
T1164 new1164(unsigned int size);
void gc_sweep351(fsoc*c);
void gc_mark351(T351*o);
void gc_align_mark351(fsoc*c,gc351*p);
extern fsoc H351;
T351*new351(void);
void gc_sweep1165(fsoc*c);
void gc_mark1165(T1165*o);
void gc_align_mark1165(fsoc*c,gc1165*p);
extern fsoc H1165;
T1165*new1165(void);
void gc_mark1166(T1166 o);
T1166 new1166(unsigned int size);
void gc_sweep1167(fsoc*c);
void gc_mark1167(T1167*o);
void gc_align_mark1167(fsoc*c,gc1167*p);
extern fsoc H1167;
T1167*new1167(void);
void gc_mark1168(T1168 o);
T1168 new1168(unsigned int size);
void gc_sweep1169(fsoc*c);
void gc_update_weak_ref_item1169(T1169* wr);
void gc_mark1169(T1169*o);
void gc_align_mark1169(fsoc*c,gc1169*p);
extern fsoc H1169;
T1169*new1169(void);
void gc_mark1170(T1170 o);
T1170 new1170(unsigned int size);
void gc_mark1171(T1171 o);
T1171 new1171(unsigned int size);
void gc_sweep1172(fsoc*c);
void gc_mark1172(T1172*o);
void gc_align_mark1172(fsoc*c,gc1172*p);
extern fsoc H1172;
T1172*new1172(void);
void gc_sweep1173(fsoc*c);
void gc_mark1173(T1173*o);
void gc_align_mark1173(fsoc*c,gc1173*p);
extern fsoc H1173;
T1173*new1173(void);
void gc_sweep1175(fsoc*c);
void gc_update_weak_ref_item1175(T1175* wr);
void gc_mark1175(T1175*o);
void gc_align_mark1175(fsoc*c,gc1175*p);
extern fsoc H1175;
T1175*new1175(void);
void gc_sweep763(fsoc*c);
void gc_mark763(T763*o);
void gc_align_mark763(fsoc*c,gc763*p);
extern fsoc H763;
T763*new763(void);
void gc_sweep764(fsoc*c);
void gc_mark764(T764*o);
void gc_align_mark764(fsoc*c,gc764*p);
extern fsoc H764;
T764*new764(void);
void gc_sweep765(fsoc*c);
void gc_mark765(T765*o);
void gc_align_mark765(fsoc*c,gc765*p);
extern fsoc H765;
T765*new765(void);
void gc_sweep760(fsoc*c);
void gc_mark760(T760*o);
void gc_align_mark760(fsoc*c,gc760*p);
extern fsoc H760;
T760*new760(void);
void gc_sweep761(fsoc*c);
void gc_mark761(T761*o);
void gc_align_mark761(fsoc*c,gc761*p);
extern fsoc H761;
T761*new761(void);
void gc_sweep762(fsoc*c);
void gc_mark762(T762*o);
void gc_align_mark762(fsoc*c,gc762*p);
extern fsoc H762;
T762*new762(void);
void gc_sweep1176(fsoc*c);
void gc_mark1176(T1176*o);
void gc_align_mark1176(fsoc*c,gc1176*p);
extern fsoc H1176;
T1176*new1176(void);
void gc_mark758(T758*o);
void gc_sweep1178(fsoc*c);
void gc_mark1178(T1178*o);
void gc_align_mark1178(fsoc*c,gc1178*p);
extern fsoc H1178;
T1178*new1178(void);
void gc_mark1179(T1179 o);
T1179 new1179(unsigned int size);
void gc_sweep1180(fsoc*c);
void gc_update_weak_ref_item1180(T1180* wr);
void gc_mark1180(T1180*o);
void gc_align_mark1180(fsoc*c,gc1180*p);
extern fsoc H1180;
T1180*new1180(void);
void gc_mark1181(T1181 o);
T1181 new1181(unsigned int size);
void gc_sweep1182(fsoc*c);
void gc_update_weak_ref_item1182(T1182* wr);
void gc_mark1182(T1182*o);
void gc_align_mark1182(fsoc*c,gc1182*p);
extern fsoc H1182;
T1182*new1182(void);
void gc_sweep1183(fsoc*c);
void gc_mark1183(T1183*o);
void gc_align_mark1183(fsoc*c,gc1183*p);
extern fsoc H1183;
T1183*new1183(void);
void gc_mark1184(T1184 o);
T1184 new1184(unsigned int size);
void gc_mark1185(T1185 o);
T1185 new1185(unsigned int size);
void gc_sweep1186(fsoc*c);
void gc_mark1186(T1186*o);
void gc_align_mark1186(fsoc*c,gc1186*p);
extern fsoc H1186;
T1186*new1186(void);
void gc_sweep1187(fsoc*c);
void gc_update_weak_ref_item1187(T1187* wr);
void gc_mark1187(T1187*o);
void gc_align_mark1187(fsoc*c,gc1187*p);
extern fsoc H1187;
T1187*new1187(void);
void gc_mark1188(T1188 o);
T1188 new1188(unsigned int size);
void gc_sweep1189(fsoc*c);
void gc_update_weak_ref_item1189(T1189* wr);
void gc_mark1189(T1189*o);
void gc_align_mark1189(fsoc*c,gc1189*p);
extern fsoc H1189;
T1189*new1189(void);
void gc_sweep1190(fsoc*c);
void gc_mark1190(T1190*o);
void gc_align_mark1190(fsoc*c,gc1190*p);
extern fsoc H1190;
T1190*new1190(void);
void gc_mark1191(T1191 o);
T1191 new1191(unsigned int size);
void gc_sweep1192(fsoc*c);
void gc_update_weak_ref_item1192(T1192* wr);
void gc_mark1192(T1192*o);
void gc_align_mark1192(fsoc*c,gc1192*p);
extern fsoc H1192;
T1192*new1192(void);
void gc_sweep1193(fsoc*c);
void gc_mark1193(T1193*o);
void gc_align_mark1193(fsoc*c,gc1193*p);
extern fsoc H1193;
T1193*new1193(void);
void gc_mark1194(T1194 o);
T1194 new1194(unsigned int size);
void gc_sweep1195(fsoc*c);
void gc_mark1195(T1195*o);
void gc_align_mark1195(fsoc*c,gc1195*p);
extern fsoc H1195;
T1195*new1195(void);
void gc_sweep1196(fsoc*c);
void gc_update_weak_ref_item1196(T1196* wr);
void gc_mark1196(T1196*o);
void gc_align_mark1196(fsoc*c,gc1196*p);
extern fsoc H1196;
T1196*new1196(void);
void gc_sweep1197(fsoc*c);
void gc_mark1197(T1197*o);
void gc_align_mark1197(fsoc*c,gc1197*p);
extern fsoc H1197;
T1197*new1197(void);
void gc_mark1198(T1198 o);
T1198 new1198(unsigned int size);
void gc_mark1199(T1199 o);
T1199 new1199(unsigned int size);
void gc_mark1200(T1200 o);
T1200 new1200(unsigned int size);
void gc_mark1201(T1201 o);
T1201 new1201(unsigned int size);
void gc_mark1202(T1202 o);
T1202 new1202(unsigned int size);
void gc_mark1203(T1203 o);
T1203 new1203(unsigned int size);
void gc_sweep1204(fsoc*c);
void gc_mark1204(T1204*o);
void gc_align_mark1204(fsoc*c,gc1204*p);
extern fsoc H1204;
T1204*new1204(void);
void gc_mark1205(T1205 o);
T1205 new1205(unsigned int size);
void gc_mark1206(T1206 o);
T1206 new1206(unsigned int size);
void gc_sweep1207(fsoc*c);
void gc_update_weak_ref_item1207(T1207* wr);
void gc_mark1207(T1207*o);
void gc_align_mark1207(fsoc*c,gc1207*p);
extern fsoc H1207;
T1207*new1207(void);
void gc_sweep1208(fsoc*c);
void gc_mark1208(T1208*o);
void gc_align_mark1208(fsoc*c,gc1208*p);
extern fsoc H1208;
T1208*new1208(void);
void gc_mark1209(T1209 o);
T1209 new1209(unsigned int size);
void gc_mark1210(T1210 o);
T1210 new1210(unsigned int size);
void gc_mark1211(T1211 o);
T1211 new1211(unsigned int size);
void gc_mark1212(T1212 o);
T1212 new1212(unsigned int size);
void gc_mark1213(T1213 o);
T1213 new1213(unsigned int size);
void gc_sweep1214(fsoc*c);
void gc_mark1214(T1214*o);
void gc_align_mark1214(fsoc*c,gc1214*p);
extern fsoc H1214;
T1214*new1214(void);
void gc_sweep1215(fsoc*c);
void gc_update_weak_ref_item1215(T1215* wr);
void gc_mark1215(T1215*o);
void gc_align_mark1215(fsoc*c,gc1215*p);
extern fsoc H1215;
T1215*new1215(void);
void gc_sweep815(fsoc*c);
void gc_mark815(T815*o);
void gc_align_mark815(fsoc*c,gc815*p);
extern fsoc H815;
T815*new815(void);
void gc_mark1216(T1216 o);
T1216 new1216(unsigned int size);
void gc_sweep1217(fsoc*c);
void gc_mark1217(T1217*o);
void gc_align_mark1217(fsoc*c,gc1217*p);
extern fsoc H1217;
T1217*new1217(void);
void gc_sweep1218(fsoc*c);
void gc_update_weak_ref_item1218(T1218* wr);
void gc_mark1218(T1218*o);
void gc_align_mark1218(fsoc*c,gc1218*p);
extern fsoc H1218;
T1218*new1218(void);
void gc_sweep1219(fsoc*c);
void gc_mark1219(T1219*o);
void gc_align_mark1219(fsoc*c,gc1219*p);
extern fsoc H1219;
T1219*new1219(void);
void gc_sweep1220(fsoc*c);
void gc_mark1220(T1220*o);
void gc_align_mark1220(fsoc*c,gc1220*p);
extern fsoc H1220;
T1220*new1220(void);
void gc_mark1221(T1221 o);
T1221 new1221(unsigned int size);
void gc_sweep1222(fsoc*c);
void gc_update_weak_ref_item1222(T1222* wr);
void gc_mark1222(T1222*o);
void gc_align_mark1222(fsoc*c,gc1222*p);
extern fsoc H1222;
T1222*new1222(void);
void gc_mark1223(T1223 o);
T1223 new1223(unsigned int size);
void gc_sweep1224(fsoc*c);
void gc_update_weak_ref_item1224(T1224* wr);
void gc_mark1224(T1224*o);
void gc_align_mark1224(fsoc*c,gc1224*p);
extern fsoc H1224;
T1224*new1224(void);
void gc_sweep1225(fsoc*c);
void gc_mark1225(T1225*o);
void gc_align_mark1225(fsoc*c,gc1225*p);
extern fsoc H1225;
T1225*new1225(void);
void gc_mark1226(T1226 o);
T1226 new1226(unsigned int size);
void gc_sweep332(fsoc*c);
void gc_mark332(T332*o);
void gc_align_mark332(fsoc*c,gc332*p);
extern fsoc H332;
T332*new332(void);
void gc_sweep1227(fsoc*c);
void gc_mark1227(T1227*o);
void gc_align_mark1227(fsoc*c,gc1227*p);
extern fsoc H1227;
T1227*new1227(void);
void gc_sweep1228(fsoc*c);
void gc_mark1228(T1228*o);
void gc_align_mark1228(fsoc*c,gc1228*p);
extern fsoc H1228;
T1228*new1228(void);
void gc_sweep1229(fsoc*c);
void gc_mark1229(T1229*o);
void gc_align_mark1229(fsoc*c,gc1229*p);
extern fsoc H1229;
T1229*new1229(void);
void gc_sweep1230(fsoc*c);
void gc_mark1230(T1230*o);
void gc_align_mark1230(fsoc*c,gc1230*p);
extern fsoc H1230;
T1230*new1230(void);
void gc_sweep1232(fsoc*c);
void gc_mark1232(T1232*o);
void gc_align_mark1232(fsoc*c,gc1232*p);
extern fsoc H1232;
T1232*new1232(void);
void gc_mark1233(T1233 o);
T1233 new1233(unsigned int size);
void gc_sweep1234(fsoc*c);
void gc_update_weak_ref_item1234(T1234* wr);
void gc_mark1234(T1234*o);
void gc_align_mark1234(fsoc*c,gc1234*p);
extern fsoc H1234;
T1234*new1234(void);
void gc_sweep1235(fsoc*c);
void gc_mark1235(T1235*o);
void gc_align_mark1235(fsoc*c,gc1235*p);
extern fsoc H1235;
T1235*new1235(void);
void gc_mark1236(T1236 o);
T1236 new1236(unsigned int size);
void gc_sweep1237(fsoc*c);
void gc_update_weak_ref_item1237(T1237* wr);
void gc_mark1237(T1237*o);
void gc_align_mark1237(fsoc*c,gc1237*p);
extern fsoc H1237;
T1237*new1237(void);
void gc_mark1238(T1238 o);
T1238 new1238(unsigned int size);
void gc_sweep1241(fsoc*c);
void gc_update_weak_ref_item1241(T1241* wr);
void gc_mark1241(T1241*o);
void gc_align_mark1241(fsoc*c,gc1241*p);
extern fsoc H1241;
T1241*new1241(void);
void gc_sweep1242(fsoc*c);
void gc_mark1242(T1242*o);
void gc_align_mark1242(fsoc*c,gc1242*p);
extern fsoc H1242;
T1242*new1242(void);
void gc_sweep1243(fsoc*c);
void gc_mark1243(T1243*o);
void gc_align_mark1243(fsoc*c,gc1243*p);
extern fsoc H1243;
T1243*new1243(void);
void gc_sweep1244(fsoc*c);
void gc_mark1244(T1244*o);
void gc_align_mark1244(fsoc*c,gc1244*p);
extern fsoc H1244;
T1244*new1244(void);
void gc_sweep1245(fsoc*c);
void gc_mark1245(T1245*o);
void gc_align_mark1245(fsoc*c,gc1245*p);
extern fsoc H1245;
T1245*new1245(void);
void gc_sweep1248(fsoc*c);
void gc_update_weak_ref_item1248(T1248* wr);
void gc_mark1248(T1248*o);
void gc_align_mark1248(fsoc*c,gc1248*p);
extern fsoc H1248;
T1248*new1248(void);
void gc_sweep1249(fsoc*c);
void gc_mark1249(T1249*o);
void gc_align_mark1249(fsoc*c,gc1249*p);
extern fsoc H1249;
T1249*new1249(void);
void gc_sweep1250(fsoc*c);
void gc_update_weak_ref_item1250(T1250* wr);
void gc_mark1250(T1250*o);
void gc_align_mark1250(fsoc*c,gc1250*p);
extern fsoc H1250;
T1250*new1250(void);
void gc_sweep1251(fsoc*c);
void gc_mark1251(T1251*o);
void gc_align_mark1251(fsoc*c,gc1251*p);
extern fsoc H1251;
T1251*new1251(void);
void gc_mark1252(T1252 o);
T1252 new1252(unsigned int size);
void gc_mark1253(T1253 o);
T1253 new1253(unsigned int size);
void gc_sweep1254(fsoc*c);
void gc_update_weak_ref_item1254(T1254* wr);
void gc_mark1254(T1254*o);
void gc_align_mark1254(fsoc*c,gc1254*p);
extern fsoc H1254;
T1254*new1254(void);
void gc_sweep1255(fsoc*c);
void gc_mark1255(T1255*o);
void gc_align_mark1255(fsoc*c,gc1255*p);
extern fsoc H1255;
T1255*new1255(void);
void gc_mark1256(T1256 o);
T1256 new1256(unsigned int size);
void gc_sweep34(fsoc*c);
void gc_mark34(T34*o);
void gc_align_mark34(fsoc*c,gc34*p);
extern fsoc H34;
T34*new34(void);
void gc_sweep769(fsoc*c);
void gc_mark769(T769*o);
void gc_align_mark769(fsoc*c,gc769*p);
extern fsoc H769;
T769*new769(void);
void gc_mark728(T728*o);
void gc_sweep654(fsoc*c);
void gc_mark654(T654*o);
void gc_align_mark654(fsoc*c,gc654*p);
extern fsoc H654;
T654*new654(void);
void gc_sweep1261(fsoc*c);
void gc_mark1261(T1261*o);
void gc_align_mark1261(fsoc*c,gc1261*p);
extern fsoc H1261;
T1261*new1261(void);
void gc_sweep1263(fsoc*c);
void gc_mark1263(T1263*o);
void gc_align_mark1263(fsoc*c,gc1263*p);
extern fsoc H1263;
T1263*new1263(void);
void gc_sweep1266(fsoc*c);
void gc_mark1266(T1266*o);
void gc_align_mark1266(fsoc*c,gc1266*p);
extern fsoc H1266;
T1266*new1266(void);
void gc_sweep660(fsoc*c);
void gc_mark660(T660*o);
void gc_align_mark660(fsoc*c,gc660*p);
extern fsoc H660;
T660*new660(void);
void gc_sweep663(fsoc*c);
void gc_mark663(T663*o);
void gc_align_mark663(fsoc*c,gc663*p);
extern fsoc H663;
T663*new663(void);
void gc_sweep664(fsoc*c);
void gc_mark664(T664*o);
void gc_align_mark664(fsoc*c,gc664*p);
extern fsoc H664;
T664*new664(void);
void gc_sweep667(fsoc*c);
void gc_mark667(T667*o);
void gc_align_mark667(fsoc*c,gc667*p);
extern fsoc H667;
T667*new667(void);
void gc_sweep669(fsoc*c);
void gc_mark669(T669*o);
void gc_align_mark669(fsoc*c,gc669*p);
extern fsoc H669;
T669*new669(void);
void gc_sweep662(fsoc*c);
void gc_mark662(T662*o);
void gc_align_mark662(fsoc*c,gc662*p);
extern fsoc H662;
T662*new662(void);
void gc_sweep657(fsoc*c);
void gc_mark657(T657*o);
void gc_align_mark657(fsoc*c,gc657*p);
extern fsoc H657;
T657*new657(void);
void gc_sweep668(fsoc*c);
void gc_mark668(T668*o);
void gc_align_mark668(fsoc*c,gc668*p);
extern fsoc H668;
T668*new668(void);
void gc_sweep650(fsoc*c);
void gc_mark650(T650*o);
void gc_align_mark650(fsoc*c,gc650*p);
extern fsoc H650;
T650*new650(void);
void gc_sweep1267(fsoc*c);
void gc_mark1267(T1267*o);
void gc_align_mark1267(fsoc*c,gc1267*p);
extern fsoc H1267;
T1267*new1267(void);
void gc_sweep1268(fsoc*c);
void gc_mark1268(T1268*o);
void gc_align_mark1268(fsoc*c,gc1268*p);
extern fsoc H1268;
T1268*new1268(void);
void gc_sweep519(fsoc*c);
void gc_mark519(T519*o);
void gc_align_mark519(fsoc*c,gc519*p);
extern fsoc H519;
T519*new519(void);
void gc_sweep1269(fsoc*c);
void gc_mark1269(T1269*o);
void gc_align_mark1269(fsoc*c,gc1269*p);
extern fsoc H1269;
T1269*new1269(void);
void gc_sweep671(fsoc*c);
void gc_mark671(T671*o);
void gc_align_mark671(fsoc*c,gc671*p);
extern fsoc H671;
T671*new671(void);
void gc_sweep659(fsoc*c);
void gc_mark659(T659*o);
void gc_align_mark659(fsoc*c,gc659*p);
extern fsoc H659;
T659*new659(void);
void gc_sweep655(fsoc*c);
void gc_mark655(T655*o);
void gc_align_mark655(fsoc*c,gc655*p);
extern fsoc H655;
T655*new655(void);
void gc_sweep1270(fsoc*c);
void gc_mark1270(T1270*o);
void gc_align_mark1270(fsoc*c,gc1270*p);
extern fsoc H1270;
T1270*new1270(void);
void gc_sweep1271(fsoc*c);
void gc_mark1271(T1271*o);
void gc_align_mark1271(fsoc*c,gc1271*p);
extern fsoc H1271;
T1271*new1271(void);
void gc_sweep1272(fsoc*c);
void gc_mark1272(T1272*o);
void gc_align_mark1272(fsoc*c,gc1272*p);
extern fsoc H1272;
T1272*new1272(void);
void gc_sweep1273(fsoc*c);
void gc_mark1273(T1273*o);
void gc_align_mark1273(fsoc*c,gc1273*p);
extern fsoc H1273;
T1273*new1273(void);
void gc_sweep1274(fsoc*c);
void gc_mark1274(T1274*o);
void gc_align_mark1274(fsoc*c,gc1274*p);
extern fsoc H1274;
T1274*new1274(void);
void gc_mark1275(T1275 o);
T1275 new1275(unsigned int size);
void gc_sweep1280(fsoc*c);
void gc_mark1280(T1280*o);
void gc_align_mark1280(fsoc*c,gc1280*p);
extern fsoc H1280;
T1280*new1280(void);
void gc_sweep522(fsoc*c);
void gc_mark522(T522*o);
void gc_align_mark522(fsoc*c,gc522*p);
extern fsoc H522;
T522*new522(void);
void gc_sweep116(fsoc*c);
void gc_mark116(T116*o);
void gc_align_mark116(fsoc*c,gc116*p);
extern fsoc H116;
T116*new116(void);
void gc_sweep726(fsoc*c);
void gc_mark726(T726*o);
void gc_align_mark726(fsoc*c,gc726*p);
extern fsoc H726;
T726*new726(void);
void gc_sweep731(fsoc*c);
void gc_mark731(T731*o);
void gc_align_mark731(fsoc*c,gc731*p);
extern fsoc H731;
T731*new731(void);
void gc_sweep107(fsoc*c);
void gc_mark107(T107*o);
void gc_align_mark107(fsoc*c,gc107*p);
extern fsoc H107;
T107*new107(void);
void gc_sweep1282(fsoc*c);
void gc_mark1282(T1282*o);
void gc_align_mark1282(fsoc*c,gc1282*p);
extern fsoc H1282;
T1282*new1282(void);
void gc_sweep409(fsoc*c);
void gc_mark409(T409*o);
void gc_align_mark409(fsoc*c,gc409*p);
extern fsoc H409;
T409*new409(void);
void gc_sweep406(fsoc*c);
void gc_mark406(T406*o);
void gc_align_mark406(fsoc*c,gc406*p);
extern fsoc H406;
T406*new406(void);
void gc_sweep361(fsoc*c);
void gc_mark361(T361*o);
void gc_align_mark361(fsoc*c,gc361*p);
extern fsoc H361;
T361*new361(void);
void gc_sweep777(fsoc*c);
void gc_mark777(T777*o);
void gc_align_mark777(fsoc*c,gc777*p);
extern fsoc H777;
T777*new777(void);
void gc_sweep633(fsoc*c);
void gc_mark633(T633*o);
void gc_align_mark633(fsoc*c,gc633*p);
extern fsoc H633;
T633*new633(void);
void gc_sweep779(fsoc*c);
void gc_mark779(T779*o);
void gc_align_mark779(fsoc*c,gc779*p);
extern fsoc H779;
T779*new779(void);
void gc_sweep755(fsoc*c);
void gc_mark755(T755*o);
void gc_align_mark755(fsoc*c,gc755*p);
extern fsoc H755;
T755*new755(void);
void gc_sweep526(fsoc*c);
void gc_mark526(T526*o);
void gc_align_mark526(fsoc*c,gc526*p);
extern fsoc H526;
T526*new526(void);
void gc_sweep778(fsoc*c);
void gc_mark778(T778*o);
void gc_align_mark778(fsoc*c,gc778*p);
extern fsoc H778;
T778*new778(void);
void gc_sweep632(fsoc*c);
void gc_mark632(T632*o);
void gc_align_mark632(fsoc*c,gc632*p);
extern fsoc H632;
T632*new632(void);
void gc_sweep1283(fsoc*c);
void gc_mark1283(T1283*o);
void gc_align_mark1283(fsoc*c,gc1283*p);
extern fsoc H1283;
T1283*new1283(void);
void gc_sweep818(fsoc*c);
void gc_mark818(T818*o);
void gc_align_mark818(fsoc*c,gc818*p);
extern fsoc H818;
T818*new818(void);
void gc_sweep820(fsoc*c);
void gc_mark820(T820*o);
void gc_align_mark820(fsoc*c,gc820*p);
extern fsoc H820;
T820*new820(void);
void gc_sweep821(fsoc*c);
void gc_mark821(T821*o);
void gc_align_mark821(fsoc*c,gc821*p);
extern fsoc H821;
T821*new821(void);
void gc_sweep822(fsoc*c);
void gc_mark822(T822*o);
void gc_align_mark822(fsoc*c,gc822*p);
extern fsoc H822;
T822*new822(void);
void gc_mark1284(T1284 o);
T1284 new1284(unsigned int size);
void gc_sweep1285(fsoc*c);
void gc_mark1285(T1285*o);
void gc_align_mark1285(fsoc*c,gc1285*p);
extern fsoc H1285;
T1285*new1285(void);
void gc_sweep1286(fsoc*c);
void gc_update_weak_ref_item1286(T1286* wr);
void gc_mark1286(T1286*o);
void gc_align_mark1286(fsoc*c,gc1286*p);
extern fsoc H1286;
T1286*new1286(void);
void gc_sweep1287(fsoc*c);
void gc_update_weak_ref_item1287(T1287* wr);
void gc_mark1287(T1287*o);
void gc_align_mark1287(fsoc*c,gc1287*p);
extern fsoc H1287;
T1287*new1287(void);
void gc_sweep1288(fsoc*c);
void gc_mark1288(T1288*o);
void gc_align_mark1288(fsoc*c,gc1288*p);
extern fsoc H1288;
T1288*new1288(void);
void gc_mark1289(T1289 o);
T1289 new1289(unsigned int size);
void gc_sweep1290(fsoc*c);
void gc_update_weak_ref_item1290(T1290* wr);
void gc_mark1290(T1290*o);
void gc_align_mark1290(fsoc*c,gc1290*p);
extern fsoc H1290;
T1290*new1290(void);
void gc_sweep1291(fsoc*c);
void gc_mark1291(T1291*o);
void gc_align_mark1291(fsoc*c,gc1291*p);
extern fsoc H1291;
T1291*new1291(void);
void gc_mark1292(T1292 o);
T1292 new1292(unsigned int size);
void gc_sweep1293(fsoc*c);
void gc_mark1293(T1293*o);
void gc_align_mark1293(fsoc*c,gc1293*p);
extern fsoc H1293;
T1293*new1293(void);
void gc_sweep1294(fsoc*c);
void gc_mark1294(T1294*o);
void gc_align_mark1294(fsoc*c,gc1294*p);
extern fsoc H1294;
T1294*new1294(void);
void gc_sweep1297(fsoc*c);
void gc_update_weak_ref_item1297(T1297* wr);
void gc_mark1297(T1297*o);
void gc_align_mark1297(fsoc*c,gc1297*p);
extern fsoc H1297;
T1297*new1297(void);
void gc_sweep1298(fsoc*c);
void gc_mark1298(T1298*o);
void gc_align_mark1298(fsoc*c,gc1298*p);
extern fsoc H1298;
T1298*new1298(void);
void gc_mark1299(T1299 o);
T1299 new1299(unsigned int size);
void gc_sweep665(fsoc*c);
void gc_mark665(T665*o);
void gc_align_mark665(fsoc*c,gc665*p);
extern fsoc H665;
T665*new665(void);
void gc_mark1300(T1300 o);
T1300 new1300(unsigned int size);
void gc_mark1301(T1301 o);
T1301 new1301(unsigned int size);
void gc_sweep701(fsoc*c);
void gc_mark701(T701*o);
void gc_align_mark701(fsoc*c,gc701*p);
extern fsoc H701;
T701*new701(void);
void gc_mark1302(T1302 o);
T1302 new1302(unsigned int size);
void gc_sweep1303(fsoc*c);
void gc_mark1303(T1303*o);
void gc_align_mark1303(fsoc*c,gc1303*p);
extern fsoc H1303;
T1303*new1303(void);
void gc_sweep1304(fsoc*c);
void gc_update_weak_ref_item1304(T1304* wr);
void gc_mark1304(T1304*o);
void gc_align_mark1304(fsoc*c,gc1304*p);
extern fsoc H1304;
T1304*new1304(void);
void gc_mark1305(T1305 o);
T1305 new1305(unsigned int size);
void gc_mark1306(T1306 o);
T1306 new1306(unsigned int size);
void gc_mark1307(T1307 o);
T1307 new1307(unsigned int size);
void gc_mark1308(T1308 o);
T1308 new1308(unsigned int size);
void gc_sweep1310(fsoc*c);
void gc_update_weak_ref_item1310(T1310* wr);
void gc_mark1310(T1310*o);
void gc_align_mark1310(fsoc*c,gc1310*p);
extern fsoc H1310;
T1310*new1310(void);
void gc_sweep1311(fsoc*c);
void gc_mark1311(T1311*o);
void gc_align_mark1311(fsoc*c,gc1311*p);
extern fsoc H1311;
T1311*new1311(void);
void gc_mark1312(T1312 o);
T1312 new1312(unsigned int size);
void gc_sweep852(fsoc*c);
void gc_mark852(T852*o);
void gc_align_mark852(fsoc*c,gc852*p);
extern fsoc H852;
T852*new852(void);
void gc_sweep626(fsoc*c);
void gc_mark626(T626*o);
void gc_align_mark626(fsoc*c,gc626*p);
extern fsoc H626;
T626*new626(void);
void gc_sweep552(fsoc*c);
void gc_mark552(T552*o);
void gc_align_mark552(fsoc*c,gc552*p);
extern fsoc H552;
T552*new552(void);
void gc_sweep1325(fsoc*c);
void gc_mark1325(T1325*o);
void gc_align_mark1325(fsoc*c,gc1325*p);
extern fsoc H1325;
T1325*new1325(void);
void gc_sweep1326(fsoc*c);
void gc_mark1326(T1326*o);
void gc_align_mark1326(fsoc*c,gc1326*p);
extern fsoc H1326;
T1326*new1326(void);
void gc_sweep546(fsoc*c);
void gc_mark546(T546*o);
void gc_align_mark546(fsoc*c,gc546*p);
extern fsoc H546;
T546*new546(void);
void gc_sweep547(fsoc*c);
void gc_mark547(T547*o);
void gc_align_mark547(fsoc*c,gc547*p);
extern fsoc H547;
T547*new547(void);
void gc_sweep548(fsoc*c);
void gc_mark548(T548*o);
void gc_align_mark548(fsoc*c,gc548*p);
extern fsoc H548;
T548*new548(void);
void gc_sweep549(fsoc*c);
void gc_mark549(T549*o);
void gc_align_mark549(fsoc*c,gc549*p);
extern fsoc H549;
T549*new549(void);
void gc_sweep550(fsoc*c);
void gc_mark550(T550*o);
void gc_align_mark550(fsoc*c,gc550*p);
extern fsoc H550;
T550*new550(void);
void gc_sweep551(fsoc*c);
void gc_mark551(T551*o);
void gc_align_mark551(fsoc*c,gc551*p);
extern fsoc H551;
T551*new551(void);
void gc_sweep1332(fsoc*c);
void gc_mark1332(T1332*o);
void gc_align_mark1332(fsoc*c,gc1332*p);
extern fsoc H1332;
T1332*new1332(void);
void gc_sweep1336(fsoc*c);
void gc_mark1336(T1336*o);
void gc_align_mark1336(fsoc*c,gc1336*p);
extern fsoc H1336;
T1336*new1336(void);
void gc_sweep790(fsoc*c);
void gc_mark790(T790*o);
void gc_align_mark790(fsoc*c,gc790*p);
extern fsoc H790;
T790*new790(void);
void gc_sweep1338(fsoc*c);
void gc_mark1338(T1338*o);
void gc_align_mark1338(fsoc*c,gc1338*p);
extern fsoc H1338;
T1338*new1338(void);
void gc_sweep788(fsoc*c);
void gc_mark788(T788*o);
void gc_align_mark788(fsoc*c,gc788*p);
extern fsoc H788;
T788*new788(void);
void gc_sweep1344(fsoc*c);
void gc_mark1344(T1344*o);
void gc_align_mark1344(fsoc*c,gc1344*p);
extern fsoc H1344;
T1344*new1344(void);
void gc_sweep1345(fsoc*c);
void gc_mark1345(T1345*o);
void gc_align_mark1345(fsoc*c,gc1345*p);
extern fsoc H1345;
T1345*new1345(void);
void gc_sweep706(fsoc*c);
void gc_mark706(T706*o);
void gc_align_mark706(fsoc*c,gc706*p);
extern fsoc H706;
T706*new706(void);
void gc_sweep1346(fsoc*c);
void gc_mark1346(T1346*o);
void gc_align_mark1346(fsoc*c,gc1346*p);
extern fsoc H1346;
T1346*new1346(void);
void gc_mark1347(T1347 o);
T1347 new1347(unsigned int size);
void gc_mark1348(T1348 o);
T1348 new1348(unsigned int size);
void gc_mark1349(T1349 o);
T1349 new1349(unsigned int size);
void gc_sweep1350(fsoc*c);
void gc_mark1350(T1350*o);
void gc_align_mark1350(fsoc*c,gc1350*p);
extern fsoc H1350;
T1350*new1350(void);
void gc_sweep1351(fsoc*c);
void gc_mark1351(T1351*o);
void gc_align_mark1351(fsoc*c,gc1351*p);
extern fsoc H1351;
T1351*new1351(void);
void gc_mark1352(T1352 o);
T1352 new1352(unsigned int size);
void gc_sweep1353(fsoc*c);
void gc_update_weak_ref_item1353(T1353* wr);
void gc_mark1353(T1353*o);
void gc_align_mark1353(fsoc*c,gc1353*p);
extern fsoc H1353;
T1353*new1353(void);
void gc_mark1354(T1354 o);
T1354 new1354(unsigned int size);
void gc_sweep703(fsoc*c);
void gc_mark703(T703*o);
void gc_align_mark703(fsoc*c,gc703*p);
extern fsoc H703;
T703*new703(void);
void gc_mark1355(T1355 o);
T1355 new1355(unsigned int size);
void gc_mark1356(T1356 o);
T1356 new1356(unsigned int size);
void gc_sweep1357(fsoc*c);
void gc_mark1357(T1357*o);
void gc_align_mark1357(fsoc*c,gc1357*p);
extern fsoc H1357;
T1357*new1357(void);
void gc_sweep1358(fsoc*c);
void gc_update_weak_ref_item1358(T1358* wr);
void gc_mark1358(T1358*o);
void gc_align_mark1358(fsoc*c,gc1358*p);
extern fsoc H1358;
T1358*new1358(void);
void gc_sweep1371(fsoc*c);
void gc_mark1371(T1371*o);
void gc_align_mark1371(fsoc*c,gc1371*p);
extern fsoc H1371;
T1371*new1371(void);
void gc_sweep776(fsoc*c);
void gc_mark776(T776*o);
void gc_align_mark776(fsoc*c,gc776*p);
extern fsoc H776;
T776*new776(void);
void gc_sweep1372(fsoc*c);
void gc_mark1372(T1372*o);
void gc_align_mark1372(fsoc*c,gc1372*p);
extern fsoc H1372;
T1372*new1372(void);
void gc_sweep774(fsoc*c);
void gc_mark774(T774*o);
void gc_align_mark774(fsoc*c,gc774*p);
extern fsoc H774;
T774*new774(void);
void gc_sweep1375(fsoc*c);
void gc_mark1375(T1375*o);
void gc_align_mark1375(fsoc*c,gc1375*p);
extern fsoc H1375;
T1375*new1375(void);
void gc_mark1376(T1376 o);
T1376 new1376(unsigned int size);
void gc_sweep1377(fsoc*c);
void gc_mark1377(T1377*o);
void gc_align_mark1377(fsoc*c,gc1377*p);
extern fsoc H1377;
T1377*new1377(void);
void gc_sweep1378(fsoc*c);
void gc_update_weak_ref_item1378(T1378* wr);
void gc_mark1378(T1378*o);
void gc_align_mark1378(fsoc*c,gc1378*p);
extern fsoc H1378;
T1378*new1378(void);
void Xgc_mark360(T0*o);
void Xgc_mark674(T0*o);
void Xgc_mark335(T0*o);
void Xgc_mark384(T0*o);
void Xgc_mark382(T0*o);
void Xgc_mark371(T0*o);
void Xgc_mark326(T0*o);
void Xgc_mark336(T0*o);
void Xgc_mark331(T0*o);
void Xgc_mark543(T0*o);
void Xgc_mark373(T0*o);
void Xgc_mark339(T0*o);
void Xgc_mark545(T0*o);
void Xgc_mark533(T0*o);
void Xgc_mark759(T0*o);
void Xgc_mark46(T0*o);
void Xgc_mark676(T0*o);
void Xgc_mark673(T0*o);
void Xgc_mark399(T0*o);
void Xgc_mark895(T0*o);
void Xgc_mark1034(T0*o);
void Xgc_mark462(T0*o);
void Xgc_mark338(T0*o);
void Xgc_mark924(T0*o);
void Xgc_mark418(T0*o);
void Xgc_mark345(T0*o);
void Xgc_mark381(T0*o);
void Xgc_mark368(T0*o);
void Xgc_mark1011(T0*o);
void Xgc_mark1174(T0*o);
void Xgc_mark36(T0*o);
void Xgc_mark347(T0*o);
void Xgc_mark637(T0*o);
void Xgc_mark640(T0*o);
void Xgc_mark515(T0*o);
void Xgc_mark411(T0*o);
extern T25*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 1379
extern T7*g[];
extern T7*t[];
extern int se_strucT[];
void se_atexit(void);
void initialize_eiffel_runtime(int argc,char*argv[]);
int main(int argc,char*argv[]);
T0* se_manifest999(T2 initial_lower,int argc,...);
T0* se_manifest876(T2 initial_lower,int argc,...);
T0* se_manifest925(T2 initial_lower,int argc,...);
T0* se_manifest859(int argc,...);
T0* se_manifest1283(int argc,...);
T0* se_manifest1000(T2 initial_lower,int argc,...);
T0* se_manifest882(int argc,...);
T0* se_manifest974(int argc,...);
int at_374__373(T0* expression);
int at_791__674(T0* expression);
int at_637__331(T0* expression);
int at_ATTRIBUTE__331(T0* expression);
int at_648__331(T0* expression);
int at_555__331(T0* expression);
int at_643__331(T0* expression);
int at_425__331(T0* expression);
int at_645__331(T0* expression);
int at_638__331(T0* expression);
int at_646__331(T0* expression);
int at_451__381(T0* expression);
int at_357__339(T0* expression);
int at_390__339(T0* expression);
int at_415__339(T0* expression);
int at_362__339(T0* expression);
int at_654__339(T0* expression);
int at_755__326(T0* expression);
int at_401__326(T0* expression);
int at_303__48(T0* expression);
int at_339__336(T0* expression);
int at_670__336(T0* expression);
int at_338__336(T0* expression);
int at_390__336(T0* expression);
int at_345__336(T0* expression);
int at_399__336(T0* expression);
int at_335__336(T0* expression);
int at_366__368(T0* expression);
int at_532__533(T0* expression);
int at_536__533(T0* expression);
int at_538__533(T0* expression);
int at_535__533(T0* expression);
int at_531__533(T0* expression);
int at_537__533(T0* expression);
int at_539__533(T0* expression);
int at_491__360(T0* expression);
int at_430__360(T0* expression);
int at_402__360(T0* expression);
int at_464__462(T0* expression);
int at_388__335(T0* expression);
int at_451__335(T0* expression);
int at_468__335(T0* expression);
int at_519__335(T0* expression);
int at_345__335(T0* expression);
int at_520__335(T0* expression);
int at_467__335(T0* expression);
int at_457__335(T0* expression);
int at_508__335(T0* expression);
int at_380__335(T0* expression);
int at_366__335(T0* expression);
int at_381__335(T0* expression);
int at_375__335(T0* expression);
int at_668__335(T0* expression);

#ifdef __cplusplus
}
#endif
