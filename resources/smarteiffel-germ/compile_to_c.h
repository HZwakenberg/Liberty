#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by Liberty Eiffel The GNU Eiffel Compiler, Eiffel tools and libraries
Release 2013.02 (LibertyEiffel revival)
Copyright (C), 1994-2002 - INRIA - LORIA - ESIAL UHP Nancy 1 - FRANCE
Copyright (C), 2003-2005 - INRIA - LORIA - IUT Charlemagne Nancy 2 - FRANCE
D.COLNET, P.RIBET, C.ADRIAN, V.CROIZIER F.MERIZEN

Copyright (C), 2011-2013 - C.ADRIAN
http://liberty-eiffel.blogspot.com
https://github.com/LibertyEiffel/Liberty
                        C Compiler options used: -pipe -Os
*/

/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
  This file (SmartEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/

#ifndef _BASE_H
#define _BASE_H

#if defined(_MSC_VER) && (_MSC_VER >= 1400)       /* VC8+ */
# ifndef _CRT_SECURE_NO_DEPRECATE
#  define _CRT_SECURE_NO_DEPRECATE
# endif
# ifndef _CRT_NONSTDC_NO_DEPRECATE
#  define _CRT_NONSTDC_NO_DEPRECATE
# endif
#endif   /* VC8+ */

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  include <unistd.h>
#endif
#if !defined(WIN32) && \
       (defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#  define WIN32 1
#endif
#ifdef WIN32
#  include <windows.h>
#else
#  ifndef O_RDONLY
#    include <sys/file.h>
#  endif
#  ifndef O_RDONLY
#    define O_RDONLY 0000
#  endif
#endif

#if defined(_MSC_VER) && (_MSC_VER < 1600) /* MSVC older than v10 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "I64d"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c
#  define INT64_C(c) c ## i64
#elif defined(__WATCOMC__) && (__WATCOMC__ <= 1220) /* WATCOM 12.2 or lower */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "I64Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__FreeBSD__) && (__FreeBSD__ < 5) /* FreeBSD before 5.0 */ && !defined (_SYS_INTTYPES_H_)
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#elif defined(__CYGWIN__) && defined(__BIT_TYPES_DEFINED__) /* Cygwin defines intxx_t in sys/types.h instead of inttypes.h */
#  include <cygwin/version.h>
#  if defined(CYGWIN_VERSION_DLL_MAJOR) && (CYGWIN_VERSION_DLL_MAJOR<1005)
typedef unsigned char uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
#  endif
#elif defined(SASC)
#    error("Too old SAS/C compiler, sorry.");
#elif defined(__SASC__)
#  if (__SASC__ < 750 ) /*  SAS/C before 7.50 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#  endif
#else
#  include <inttypes.h>
#  if !defined(INT8_MAX) && defined(INT16_MAX)
/* int8_t is not mandatory */
typedef int_least8_t int8_t;
#  endif
#endif

#if !defined(PRId16)
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "lld"
#elif !defined(PRId8)
#  define PRId8 "d"
#endif
#if !defined(INT16_C)
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## LL
#elif !defined(INT8_C)
#  define INT8_C(c) c
#endif
#if !defined(INT16_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#  define INT8_MAX (INT8_C(127))
#  define INT16_MIN (-INT16_C(32767)-1)
#  define INT16_MAX (INT16_C(32767))
#  define INT32_MIN (-INT32_C(2147483647)-1)
#  define INT32_MAX (INT32_C(2147483647))
#  define INT64_MIN (-INT64_C(9223372036854775807)-1)
#  define INT64_MAX (INT64_C(9223372036854775807))
#elif !defined(INT8_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#endif


/*
  Endian stuff
*/
#if defined(BSD) && (BSD >= 199103)
#  include <machine/endian.h>
#elif defined(__alpha__) || defined(__alpha) || defined(_M_ALPHA)
/* bi-endian processor, current mode should be find in machine/endian.h file */
#  include <machine/endian.h>
#elif defined(linux)
#  include <endian.h>
#endif



#if !defined(BYTE_ORDER) && defined(__BYTE_ORDER)
#  define BYTE_ORDER      __BYTE_ORDER
#endif

#if !defined(LITTLE_ENDIAN) && defined(__LITTLE_ENDIAN)
#  define LITTLE_ENDIAN      __LITTLE_ENDIAN
#endif

#if !defined(BIG_ENDIAN) && defined(__BIG_ENDIAN)
#  define BIG_ENDIAN      __BIG_ENDIAN
#endif

#if !defined(LITTLE_ENDIAN)
#  define LITTLE_ENDIAN   1234    /* LSB first (vax, pc) */
#endif
#if !defined(BIG_ENDIAN)
#  define BIG_ENDIAN      4321    /* MSB first (IBM, net) */
#endif
#if !defined(PDP_ENDIAN)
#  define PDP_ENDIAN      3412    /* LSB first in word, MSW first in long */
#endif

#if !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_RIGHT)
#  define BYTE_ORDER      LITTLE_ENDIAN
#elif !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_LEFT)
#  define BYTE_ORDER      BIG_ENDIAN
#elif !defined(BYTE_ORDER)

/* ARM */
#  if defined(__ARMEL__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(__ARMEB__)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__arm__)
#    error "ARMs are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* HP RISC */
#  if defined(__hppa__) || defined(__hppa) || defined(__hp9000) || \
      defined(__hp9000s300) || defined(hp9000s300) || \
      defined(__hp9000s700) || defined(hp9000s700) || \
      defined(__hp9000s800) || defined(hp9000s800) || defined(hp9000s820)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* IBM */
#  if defined(ibm032) || defined(ibm370) || defined(_IBMR2) || \
      defined(IBM370) || defined(__MVS__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Intel x86 */
#  if defined(i386) || defined(__i386__) || defined(__i386) || \
      defined(_M_IX86) || defined(_X86_) || defined(__THW_INTEL) || \
      defined(sun386)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Intel Itanium */
#  if defined(__ia64__) || defined(_IA64) || defined(__IA64__) || \
      defined(_M_IA64)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Nationnal Semiconductor 32000 serie */
#  if  defined(ns32000)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Motorola 68000 */
#  if defined(mc68000) || defined(is68k) || defined(macII) || defined(m68k)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* MIPS */
#  if defined(MIPSEL) || defined(_MIPSEL)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(MIPSEB) || defined(_MIPSEB)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__mips__) || defined(__mips) || defined(__MIPS__)
#    error "MIPS are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* Power PC */
/* this processor is bi-endian, how to know if little-endian is set? */
#  if defined(__powerpc) || defined(__powerpc__) || defined(__POWERPC__) || \
      defined(__ppc__) || defined(__ppc) || defined(_M_PPC) || \
      defined(__PPC) || defined(__PPC__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Pyramid 9810 */
#  if defined(pyr)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* RS/6000 */
#  if defined(__THW_RS6000) || defined(_IBMR2) || defined(_POWER) || \
      defined(_ARCH_PWR) || defined(_ARCH_PWR2)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* SPARC */
#  if defined(__sparc__) || defined(sparc) || defined(__sparc)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* CCI Tahoe */
#  if defined(tahoe)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* VAX */
#  if defined(vax) || defined(VAX) || defined(__vax__) || defined(_vax_) || \
      defined(__vax) || defined(__VAX)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* ELATE is a virtual OS with a little endian Virtual Processor */
#  if defined(__ELATE__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous little endian */
#  if defined(wrltitan)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous big endian */
#  if defined(apollo) || defined(__convex__) || defined(_CRAY) || defined(sel)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif
#endif


#if !defined(BYTE_ORDER)
#  error "Unknown byte order. Add your system in above macros once you know your system type. Please drop an e-mail to SmartEiffel@loria.fr"
#endif
#if (BYTE_ORDER != BIG_ENDIAN && BYTE_ORDER != LITTLE_ENDIAN)
#  error "Only little-endian and big-endian are valid at this time. Please drop an e-mail to SmartEiffel@loria.fr"
#endif


/*
  Byte swapping stuff
*/
extern void copy_swap_16(const uint16_t *src, uint16_t *dest, int count);


/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#  define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#  define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.

   NOTE: with gcc, -ansi is used for SmartEiffel generated files EXCEPT in
   -no_split mode. ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#  define JMP_BUF    sigjmp_buf
#  define SETJMP(x)  sigsetjmp( (x), 1)
#  define LONGJMP    siglongjmp
#else
#  define JMP_BUF    jmp_buf
#  define SETJMP(x)  setjmp( (x) )
#  define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER_8 is #1:
*/
typedef int8_t T1;
#define EIF_INTEGER_8 T1
#define M1 (INT8_C(0))
#define EIF_INTEGER_8_BITS (CHAR_BIT)
#define EIF_MINIMUM_INTEGER_8 (INT8_MIN)
#define EIF_MAXIMUM_INTEGER_8 (INT8_MAX)

/*
  Eiffel type INTEGER_16 is #10:
*/
typedef int16_t T10;
#define EIF_INTEGER_16 T10
#define M10 (INT16_C(0))
#define EIF_INTEGER_16_BITS (CHAR_BIT*sizeof(T10t))
#define EIF_MINIMUM_INTEGER_16 (INT16_MIN) /*-32768*/
#define EIF_MAXIMUM_INTEGER_16 (INT16_MAX) /*+32767*/

/*
  Eiffel type INTEGER or INTEGER_32 is #2:
*/
typedef int32_t T2;
#define EIF_INTEGER T2
#define EIF_INTEGER_32 T2
#define M2 (INT32_C(0))
#define EIF_INTEGER_BITS ((T2)(CHAR_BIT*sizeof(T2)))
#define EIF_INTEGER_32_BITS EIF_INTEGER_BITS
#define EIF_MINIMUM_INTEGER (INT32_MIN)
#define EIF_MAXIMUM_INTEGER (INT32_MAX)

/*
  Eiffel type INTEGER_64 is #11:
*/
typedef int64_t T11;
#define EIF_INTEGER_64 T11
#define M11 (INT64_C(0))
#define EIF_INTEGER_64_BITS (CHAR_BIT*sizeof(T11))
#define EIF_MINIMUM_INTEGER_64 (INT64_MIN)
#define EIF_MAXIMUM_INTEGER_64 (INT64_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T10)(x))
#define T3to_integer(x) ((signed char)(x))
#define T3to_integer_8(x) ((signed char)(x))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL_32 is #4:
*/
typedef float T4;
typedef T4 real32_t;
#define EIF_REAL_32 T4
#define M4 (0.0)
#define EIF_MINIMUM_REAL_32 (-(FLT_MAX))
#define EIF_MAXIMUM_REAL_32 (FLT_MAX)

/*
  Eiffel type REAL or REAL_64 is #5:
*/
typedef double T5;
typedef T5 real64_t;
#define EIF_REAL T5
#define EIF_REAL_64 T5
#define M5 (0.0)
#define EIF_MINIMUM_REAL_64 (-(DBL_MAX))
#define EIF_MINIMUM_REAL (EIF_MINIMUM_REAL_64)
#define EIF_MAXIMUM_REAL_64 (DBL_MAX)
#define EIF_MAXIMUM_REAL (EIF_MAXIMUM_REAL_64)

/*
  Eiffel type REAL_EXTENDED is #12:
*/
typedef long double T12;
typedef T12 real_extended_t;
#define EIF_REAL_EXTENDED T12
#define EIF_REAL_128 T12
#define M12 (0.0)
#define EIF_MINIMUM_REAL_EXTENDED (-(DBL_MAX))
#define EIF_MAXIMUM_REAL_EXTENDED (DBL_MAX)

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
/* Sometimes, NULL is defined as 0 */
#define M8 ((void*)NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ
#define EIF_ANY EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void* src, size_t size);

/*
   die method.
 */
void se_die(int code);

/*
    Runtime hooks. They allow different runtime modules to be quite independant. In time, they will also allow
    thread-safe operations.

    Currently known modules:
      - boost
      - no_check
      - sedb
      - gc
      - print stack
      - profile
      - plugins

    However, currently only profile uses this method. It will be extended to other modules later.

    The currently defined hooks are described in the enum below (the names should be self-explanatory).
 */
typedef enum {
  SE_HANDLE_EXCEPTION_SET, /* called when an exception handler is set, prior to SETJMP */
  SE_HANDLE_EXCEPTION_CLEAR, /* called when a feature with an exception handler normally returns */
  SE_HANDLE_EXCEPTION_THROWN, /* called when an exception is thrown, prior to the LONGJMP */
  SE_HANDLE_ENTER_GC, /* called when gc_start() begins */
  SE_HANDLE_EXIT_GC, /* called when gc_start() ends */
  SE_HANDLE_ENTER_PRINT_STACK, /* called when se_print_run_time_stack() begins */
  SE_HANDLE_EXIT_PRINT_STACK, /* called when se_print_run_time_stack() ends */
  SE_HANDLE_NO_MORE_MEMORY, /* called by se_alloc() and co */
  SE_HANDLE_SEDB_BREAK, /* called when sedb stops the program */
  SE_HANDLE_SEDB_CONTINUE, /* called when sedb continues the program */
  SE_HANDLE_RUNTIME_ERROR, /* called when a runtime error is raised and not caught by an exception. Cannot be raised in boost mode. */
  SE_HANDLE_DIE_WITH_CODE, /* called when the program is stopped by the die_with_code feature. The data points to the int code. */
  SE_HANDLE_NORMAL_EXIT /* called when the program correctly terminates. The data is null. */
} se_handler_action_t;

extern int handlers_count;
typedef void se_runtime_handler_t(se_handler_action_t action, void*data);
void register_handler(se_runtime_handler_t*handler);
void _handle(se_handler_action_t action, void*data);

#define handle(action,data) do{if(handlers_count>0)_handle(action,data);}while(0)

#endif /* #ifndef _BASE_H */
#define SE_BOOST 1
#define SE_GC_LIB 1
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#include <errno.h>

#define text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define io_fclose(p) (fclose((FILE*)(p)))
#define io_flush(p) (fflush((FILE*)(p)))
#define io_getc(f) (getc(((FILE*)(f))))
#define io_putc(b, f) (putc((b),((FILE*)(f))))
#define io_ungetc(b, f) (ungetc((b), (FILE*)(f)))
#define io_fread(b, n, f) (fread((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_fwrite(b, n, f) (fwrite((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_feof(f) (feof(((FILE*)(f))))
#define io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define io_remove(f) (remove(((char*)(f))))
#define io_fseek(f, o) (fseek((FILE*)(f),(o),SEEK_SET))
#define io_ftell(f) ((EIF_INTEGER_64)ftell((FILE*)(f)))

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  define read_stdin(b, s) (read(STDIN_FILENO, b, s))
#else
   extern int read_stdin(EIF_CHARACTER *buffer, int size);
#endif

extern void io_copy(char*source, char*target);
extern int io_file_exists(char*source);
extern int io_same_physical_file(char*path1,char*path2);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define pointer_hash_code(p) (((unsigned int)(unsigned long)(p))>>1)
#define pointer_to_natural_32(p) ((unsigned int) (p))
#define pointer_to_any(p) ((T0*)(p))
#define pointer_plus(p, o) (((char*)(p))+o)
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define mbi_unsigned_32_to_integer_64(x) (((int64_t)((uint32_t)(x))))
#define mbi_unsigned_less_than(a,b) ((((uint32_t)(a)) < ((uint32_t)(b))))
#define mbi_unsigned_greater_than(a,b) ((((uint32_t)(a)) > ((uint32_t)(b))))
#define mbi_unsigned_greater_or_equal(a,b) ((((uint32_t)(a)) >= ((uint32_t)(b))))
#define mbi_storage_at(s, n) (((s)+(n)))
EIF_BOOLEAN mbi_inc (int32_t *p);
EIF_BOOLEAN mbi_add (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_add_with_inc (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_dec (int32_t *p);
EIF_BOOLEAN mbi_subtract (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_subtract_with_dec (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply_with_add (int32_t a, int32_t b, int32_t c, int32_t *p);
EIF_INTEGER mbi_multiply_with_2_add (int32_t a, int32_t b, int32_t c, int32_t d, int32_t *p);
EIF_INTEGER mbi_divide (int32_t a, int32_t b, int32_t d, int32_t *r);



/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_exec_system_none  0
#define basic_exec_system_posix 1
#define basic_exec_system_win32 2

/***************************
 * Common macros and types *
 * basic_exec_xxx          *
 ***************************/

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE || defined  __APPLE__

/*#  include <unistd.h> done in base.h */
/*#  include <sys/types.h> done in base.h */
#include <sys/wait.h>

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  pid_t id; /* the launched child process id */
  int running; /* true if the process is running */
  int child; /* true if the process is the child itself (useful for duplicate) */
  int status; /* the status of the child process if finished */
};

extern char** environ;

#define basic_exec_id(data) (((se_exec_data_t*)data)->id)
#define basic_exec_is_child(data) (((se_exec_data_t*)data)->child)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)
#define basic_exec_alloc_pipe() (calloc(2, sizeof(int)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)(pipe(p)>=0))
#define basic_exec_system basic_exec_system_posix

#elif defined WIN32
/*#  include <windows.h> done in base.h */

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  PROCESS_INFORMATION process_information;
  int running;
  DWORD status;
};

#define basic_exec_id(data) (((se_exec_data_t*)data)->process_information.dwProcessId)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)

#define basic_exec_alloc_pipe() (calloc(2, sizeof(HANDLE)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_system basic_exec_system_win32

extern EIF_BOOLEAN basic_exec_init_pipe(HANDLE*p);

#else
/* Dummy implementation that always reports an error back to the Eiffel side */
typedef int se_exec_data_t;

#define basic_exec_id(data) (-1)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (0)

#define basic_exec_alloc_pipe() (NULL)
#define basic_exec_free_pipe(p) /* dummy */
#define basic_exec_alloc_data() ((se_exec_data_t*)NULL)
#define basic_exec_free_data(p) /* dummy */
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)0)
#define basic_exec_system basic_exec_system_none

#endif

/***********************************
 * Prototypes for common functions *
 * basic_exec_xxx                  *
 ***********************************/

extern EIF_BOOLEAN basic_exec_is_finished(se_exec_data_t*data);
extern void basic_exec_wait(se_exec_data_t*data);
extern void basic_exec_cleanup(se_exec_data_t*data, int status);

/*************************************************
 * Posix-specific function prototypes and macros *
 * basic_exec_posix_xxx                          *
 *************************************************/

extern EIF_BOOLEAN basic_exec_posix_execute(se_exec_data_t*data, char*prog, char**args, EIF_BOOLEAN keep_env, char**add_env, int*in_fd, int*out_fd, int*err_fd);
extern EIF_INTEGER basic_exec_posix_get_character (EIF_INTEGER fd);
extern void basic_exec_posix_put_character(EIF_INTEGER fd, EIF_CHARACTER c);
extern void basic_exec_posix_wait_any(se_exec_data_t*data);
extern void basic_exec_posix_any_finished(se_exec_data_t*data);

#if basic_exec_system == basic_exec_system_posix
#define basic_exec_posix_flush(fd) (fsync(fd))
#define basic_exec_posix_close(fd) (close(fd))
#define basic_exec_posix_kill(data, sig) (kill((data)->id, (sig)))
#define basic_exec_posix_get_in_descriptor(pipe) (((int*)pipe)[0])
#define basic_exec_posix_get_out_descriptor(pipe) (((int*)pipe)[1])
#else
#define basic_exec_posix_flush(fd) /* dummy */
#define basic_exec_posix_close(fd) /* dummy */
#define basic_exec_posix_kill(data, sig) /* dummy */
#define basic_exec_posix_get_in_descriptor(pipe) 0
#define basic_exec_posix_get_out_descriptor(pipe) 0
#endif

/*************************************************
 * Win32-specific function prototypes and macros *
 * basic_exec_win32_xxx                          *
 *************************************************/

#if basic_exec_system == basic_exec_system_win32
#define basic_exec_win32_flush(h) FlushFileBuffers((HANDLE)h)
#define basic_exec_win32_close(h) CloseHandle((HANDLE)h)
#define basic_exec_win32_handle(data) ((int)((se_exec_data_t*)data)->process_information.hProcess)
#define basic_exec_win32_maximum_wait (MAXIMUM_WAIT_OBJECTS)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, HANDLE*in_h, HANDLE*out_h, HANDLE*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(HANDLE h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (HANDLE h);
#define basic_exec_win32_get_in_handle(pipe) (((HANDLE*)pipe)[0])
#define basic_exec_win32_get_out_handle(pipe) (((HANDLE*)pipe)[1])
#else
#define basic_exec_win32_flush(h) /* dummy */
#define basic_exec_win32_close(h) /* dummy */
#define basic_exec_win32_handle(data) (0)
#define basic_exec_win32_maximum_wait (0)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, void*in_h, void*out_h, void*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(void*handles, int count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(void*handles, int count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(void*h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (void*h);
#define basic_exec_win32_get_in_handle(pipe) NULL
#define basic_exec_win32_get_out_handle(pipe) NULL
#endif
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <dirent.h>
#endif
#ifndef WIN32
#  include <unistd.h>
#endif

EIF_POINTER directory_open(EIF_POINTER path);
EIF_POINTER directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN directory_close(EIF_POINTER dirstream);
#define directory_current_working_directory (directory_cwd())
EIF_POINTER directory_cwd(void);
EIF_BOOLEAN directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN directory_rmdir(EIF_POINTER directory_path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/

EIF_INTEGER fstat_st_size(EIF_POINTER path);
EIF_INTEGER_64 fstat_st_mtime(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_file(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_dir(EIF_POINTER path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <sys/time.h>
#endif

extern EIF_INTEGER basic_microsecond_microsecond;
extern EIF_INTEGER_64 basic_microsecond_time;
#define basic_microsecond_update (_basic_microsecond_update())
void _basic_microsecond_update(void);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define sprintf_pointer(buffer, pointer) sprintf((char*)(buffer),"%p",pointer)
void sprintf_real_64(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real64_t r);
void sprintf_real_extended(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real_extended_t r);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_getenv(v) (getenv((char*)v))
/* C Header Pass 1: */
typedef union _se_agent se_agent;
typedef struct _se_agent0 se_agent0;
typedef struct S25 T25;
typedef int T275;
typedef struct S101 T101;
typedef void*T965;
typedef struct S93 T93;
typedef struct S113 T113;
typedef struct S263 T263;
typedef struct S104 T104;
typedef struct S100 T100;
typedef struct S271 T271;
typedef void*T261;
typedef struct S7 T7;
typedef struct S611 T611;
typedef struct S995 T995;
typedef int T630;
typedef struct S77 T77;
typedef struct S996 T996;
typedef int T274;
typedef struct S273 T273;
typedef int T542;
typedef struct S527 T527;
typedef struct S71 T71;
typedef struct S997 T997;
typedef struct S529 T529;
typedef struct S533 T533;
typedef struct S534 T534;
typedef struct S535 T535;
typedef struct S536 T536;
typedef struct S537 T537;
typedef struct S998 T998;
typedef struct S999 T999;
typedef struct S91 T91;
typedef struct S528 T528;
typedef struct S446 T446;
typedef struct S445 T445;
typedef struct S73 T73;
typedef struct S62 T62;
typedef struct S1000 T1000;
typedef struct S96 T96;
typedef struct S110 T110;
typedef struct S672 T672;
typedef struct S676 T676;
typedef struct S674 T674;
typedef struct S538 T538;
typedef struct S668 T668;
typedef struct S332 T332;
typedef struct S414 T414;
typedef struct S1001 T1001;
typedef struct S309 T309;
typedef struct S671 T671;
typedef struct S1002 T1002;
typedef struct S423 T423;
typedef struct S747 T747;
typedef struct S556 T556;
typedef struct S586 T586;
typedef struct S587 T587;
typedef struct S588 T588;
typedef struct S589 T589;
typedef struct S601 T601;
typedef struct S602 T602;
typedef struct S603 T603;
typedef struct S605 T605;
typedef struct S606 T606;
typedef struct S610 T610;
typedef struct S612 T612;
typedef struct S613 T613;
typedef struct S614 T614;
typedef struct S615 T615;
typedef struct S616 T616;
typedef struct S617 T617;
typedef struct S619 T619;
typedef struct S618 T618;
typedef struct S620 T620;
typedef struct S621 T621;
typedef struct S622 T622;
typedef struct S1003 T1003;
typedef void*T623;
typedef struct S1004 T1004;
typedef struct S1005 T1005;
typedef struct S362 T362;
typedef struct S86 T86;
typedef struct S88 T88;
typedef struct S1006 T1006;
typedef struct S1007 T1007;
typedef struct S1008 T1008;
typedef struct S266 T266;
typedef struct S80 T80;
typedef struct S525 T525;
typedef struct S1010 T1010;
typedef struct S322 T322;
typedef void*T99;
typedef struct S97 T97;
typedef void*T103;
typedef void*T112;
typedef struct S111 T111;
typedef void*T114;
typedef struct S82 T82;
typedef struct S432 T432;
typedef struct S1012 T1012;
typedef struct S1013 T1013;
typedef struct S107 T107;
typedef struct S427 T427;
typedef struct S1016 T1016;
typedef int T683;
typedef struct S1017 T1017;
typedef struct S1018 T1018;
typedef struct S778 T778;
typedef struct S780 T780;
typedef struct S781 T781;
typedef struct S782 T782;
typedef struct S783 T783;
typedef struct S321 T321;
typedef struct S1022 T1022;
typedef struct S1023 T1023;
typedef int T1024;
typedef struct S766 T766;
typedef int T1026;
typedef struct S767 T767;
typedef struct S1027 T1027;
typedef struct S1028 T1028;
typedef struct S52 T52;
typedef struct S1029 T1029;
typedef struct S1030 T1030;
typedef struct S283 T283;
typedef struct S1031 T1031;
typedef struct S1034 T1034;
typedef struct S1036 T1036;
typedef struct S1037 T1037;
typedef struct S1038 T1038;
typedef struct S1039 T1039;
typedef struct S270 T270;
typedef int T1041;
typedef struct S1043 T1043;
typedef struct S95 T95;
typedef struct S1046 T1046;
typedef struct S738 T738;
typedef struct S785 T785;
typedef struct S1048 T1048;
typedef struct S1050 T1050;
typedef struct S1052 T1052;
typedef struct S1054 T1054;
typedef struct S740 T740;
typedef struct S465 T465;
typedef struct S1057 T1057;
typedef struct S443 T443;
typedef struct S420 T420;
typedef struct S374 T374;
typedef struct S426 T426;
typedef struct S435 T435;
typedef struct S478 T478;
typedef struct S488 T488;
typedef struct S490 T490;
typedef struct S348 T348;
typedef struct S108 T108;
typedef struct S491 T491;
typedef struct S439 T439;
typedef struct S402 T402;
typedef struct S375 T375;
typedef struct S430 T430;
typedef struct S401 T401;
typedef struct S428 T428;
typedef struct S397 T397;
typedef struct S431 T431;
typedef struct S429 T429;
typedef struct S436 T436;
typedef struct S433 T433;
typedef struct S437 T437;
typedef struct S440 T440;
typedef struct S262 T262;
typedef struct S460 T460;
typedef struct S462 T462;
typedef struct S463 T463;
typedef struct S464 T464;
typedef struct S415 T415;
typedef struct S1058 T1058;
typedef struct S269 T269;
typedef struct S471 T471;
typedef struct S1059 T1059;
typedef struct S511 T511;
typedef struct S480 T480;
typedef struct S395 T395;
typedef struct S467 T467;
typedef struct S365 T365;
typedef struct S468 T468;
typedef struct S469 T469;
typedef struct S333 T333;
typedef struct S342 T342;
typedef struct S345 T345;
typedef struct S347 T347;
typedef struct S336 T336;
typedef struct S340 T340;
typedef struct S341 T341;
typedef struct S482 T482;
typedef struct S483 T483;
typedef struct S484 T484;
typedef struct S473 T473;
typedef struct S379 T379;
typedef struct S450 T450;
typedef struct S456 T456;
typedef struct S474 T474;
typedef struct S508 T508;
typedef struct S509 T509;
typedef struct S1060 T1060;
typedef struct S1061 T1061;
typedef struct S447 T447;
typedef struct S448 T448;
typedef struct S1062 T1062;
typedef struct S385 T385;
typedef struct S1063 T1063;
typedef struct S654 T654;
typedef struct S1064 T1064;
typedef struct S412 T412;
typedef struct S382 T382;
typedef struct S1065 T1065;
typedef struct S386 T386;
typedef struct S442 T442;
typedef struct S510 T510;
typedef struct S1066 T1066;
typedef struct S470 T470;
typedef struct S406 T406;
typedef struct S392 T392;
typedef struct S1067 T1067;
typedef struct S351 T351;
typedef struct S363 T363;
typedef struct S356 T356;
typedef struct S472 T472;
typedef struct S417 T417;
typedef struct S458 T458;
typedef struct S459 T459;
typedef struct S358 T358;
typedef struct S398 T398;
typedef struct S457 T457;
typedef struct S487 T487;
typedef struct S477 T477;
typedef struct S361 T361;
typedef struct S388 T388;
typedef struct S453 T453;
typedef struct S389 T389;
typedef struct S649 T649;
typedef struct S476 T476;
typedef struct S390 T390;
typedef struct S485 T485;
typedef struct S507 T507;
typedef struct S506 T506;
typedef struct S502 T502;
typedef struct S503 T503;
typedef struct S504 T504;
typedef struct S505 T505;
typedef struct S501 T501;
typedef struct S368 T368;
typedef struct S391 T391;
typedef struct S497 T497;
typedef struct S498 T498;
typedef struct S499 T499;
typedef struct S500 T500;
typedef struct S396 T396;
typedef struct S496 T496;
typedef struct S493 T493;
typedef struct S494 T494;
typedef struct S495 T495;
typedef struct S492 T492;
typedef struct S451 T451;
typedef struct S452 T452;
typedef struct S486 T486;
typedef struct S272 T272;
typedef struct S455 T455;
typedef struct S454 T454;
typedef struct S1068 T1068;
typedef struct S413 T413;
typedef struct S422 T422;
typedef struct S739 T739;
typedef struct S449 T449;
typedef struct S352 T352;
typedef struct S404 T404;
typedef struct S387 T387;
typedef struct S1069 T1069;
typedef struct S1070 T1070;
typedef struct S1071 T1071;
typedef struct S1072 T1072;
typedef struct S1076 T1076;
typedef struct S523 T523;
typedef struct S1077 T1077;
typedef struct S1079 T1079;
typedef struct S424 T424;
typedef struct S416 T416;
typedef T0 T1080;
typedef T0 T1083;
typedef struct S1085 T1085;
typedef struct S1086 T1086;
typedef struct S444 T444;
typedef struct S421 T421;
typedef struct S441 T441;
typedef struct S1087 T1087;
typedef struct S419 T419;
typedef struct S1088 T1088;
typedef struct S1090 T1090;
typedef struct S1091 T1091;
typedef struct S1093 T1093;
typedef struct S1095 T1095;
typedef struct S1098 T1098;
typedef struct S1099 T1099;
typedef struct S1102 T1102;
typedef struct S1103 T1103;
typedef struct S1104 T1104;
typedef struct S1105 T1105;
typedef struct S1106 T1106;
typedef struct S1107 T1107;
typedef struct S516 T516;
typedef struct S1109 T1109;
typedef struct S1113 T1113;
typedef struct S1114 T1114;
typedef struct S1115 T1115;
typedef struct S1116 T1116;
typedef struct S1117 T1117;
typedef struct S518 T518;
typedef struct S1118 T1118;
typedef struct S1119 T1119;
typedef struct S551 T551;
typedef struct S1121 T1121;
typedef struct S1122 T1122;
typedef struct S1123 T1123;
typedef struct S394 T394;
typedef struct S1125 T1125;
typedef struct S1126 T1126;
typedef struct S1128 T1128;
typedef struct S1129 T1129;
typedef struct S625 T625;
typedef struct S1130 T1130;
typedef struct S1131 T1131;
typedef struct S1132 T1132;
typedef struct S329 T329;
typedef struct S1133 T1133;
typedef struct S1138 T1138;
typedef struct S1139 T1139;
typedef struct S1140 T1140;
typedef struct S1141 T1141;
typedef struct S1142 T1142;
typedef struct S1143 T1143;
typedef struct S1145 T1145;
typedef struct S1146 T1146;
typedef struct S1149 T1149;
typedef struct S1152 T1152;
typedef struct S1153 T1153;
typedef struct S1154 T1154;
typedef struct S400 T400;
typedef struct S1155 T1155;
typedef struct S552 T552;
typedef struct S1156 T1156;
typedef struct S1157 T1157;
typedef struct S1160 T1160;
typedef struct S1161 T1161;
typedef struct S1163 T1163;
typedef struct S301 T301;
typedef int T703;
typedef struct S1166 T1166;
typedef struct S1167 T1167;
typedef struct S1169 T1169;
typedef struct S1174 T1174;
typedef struct S1175 T1175;
typedef struct S515 T515;
typedef struct S1177 T1177;
typedef struct S762 T762;
typedef struct S1179 T1179;
typedef struct S1180 T1180;
typedef struct S1181 T1181;
typedef struct S1182 T1182;
typedef struct S1184 T1184;
typedef struct S1185 T1185;
typedef struct S1188 T1188;
typedef struct S1189 T1189;
typedef struct S1190 T1190;
typedef struct S1191 T1191;
typedef struct S1193 T1193;
typedef struct S686 T686;
typedef struct S632 T632;
typedef struct S640 T640;
typedef struct S553 T553;
typedef struct S645 T645;
typedef struct S642 T642;
typedef struct S643 T643;
typedef struct S638 T638;
typedef struct S641 T641;
typedef struct S639 T639;
typedef struct S644 T644;
typedef struct S635 T635;
typedef struct S634 T634;
typedef struct S637 T637;
typedef struct S1195 T1195;
typedef struct S1196 T1196;
typedef struct S1197 T1197;
typedef struct S678 T678;
typedef struct S1204 T1204;
typedef struct S1208 T1208;
typedef struct S721 T721;
typedef struct S1210 T1210;
typedef struct S373 T373;
typedef struct S666 T666;
typedef struct S657 T657;
typedef struct S1211 T1211;
typedef struct S1212 T1212;
typedef struct S662 T662;
typedef struct S1213 T1213;
typedef struct S1214 T1214;
typedef struct S1215 T1215;
typedef struct S1219 T1219;
typedef struct S1220 T1220;
typedef struct S1222 T1222;
typedef struct S1223 T1223;
typedef struct S1231 T1231;
typedef struct S1232 T1232;
typedef struct S1233 T1233;
typedef struct S1234 T1234;
typedef struct S1235 T1235;
typedef struct S1236 T1236;
typedef struct S1238 T1238;
typedef struct S1240 T1240;
typedef struct S1241 T1241;
typedef struct S1245 T1245;
typedef struct S1247 T1247;
typedef struct S1249 T1249;
typedef struct S1250 T1250;
typedef struct S1251 T1251;
typedef struct S1256 T1256;
typedef struct S1257 T1257;
typedef struct S1261 T1261;
typedef struct S1262 T1262;
typedef struct S1263 T1263;
typedef struct S1264 T1264;
typedef struct S1267 T1267;
typedef struct S1268 T1268;
typedef struct S1269 T1269;
typedef struct S1270 T1270;
typedef struct S1273 T1273;
typedef struct S1274 T1274;
typedef struct S1276 T1276;
typedef struct S1277 T1277;
typedef struct S1280 T1280;
typedef struct S1281 T1281;
typedef struct S1282 T1282;
typedef struct S1284 T1284;
typedef struct S407 T407;
typedef struct S722 T722;
typedef struct S1287 T1287;
typedef struct S1288 T1288;
typedef struct S1290 T1290;
typedef struct S1291 T1291;
typedef struct S1294 T1294;
typedef struct S1295 T1295;
typedef struct S1296 T1296;
typedef struct S1297 T1297;
typedef struct S1299 T1299;
typedef struct S1300 T1300;
typedef struct S1304 T1304;
typedef struct S1305 T1305;
typedef struct S350 T350;
typedef struct S1309 T1309;
typedef struct S1311 T1311;
typedef struct S1313 T1313;
typedef struct S1315 T1315;
typedef struct S1318 T1318;
typedef struct S1319 T1319;
typedef struct S1321 T1321;
typedef struct S758 T758;
typedef struct S759 T759;
typedef struct S760 T760;
typedef struct S755 T755;
typedef struct S756 T756;
typedef struct S757 T757;
typedef struct S1322 T1322;
typedef struct S1324 T1324;
typedef struct S1326 T1326;
typedef struct S1327 T1327;
typedef struct S1330 T1330;
typedef struct S1331 T1331;
typedef struct S1333 T1333;
typedef struct S1334 T1334;
typedef struct S1336 T1336;
typedef struct S1337 T1337;
typedef struct S1339 T1339;
typedef struct S1345 T1345;
typedef struct S1348 T1348;
typedef struct S1349 T1349;
typedef struct S1355 T1355;
typedef struct S1356 T1356;
typedef struct S811 T811;
typedef struct S1358 T1358;
typedef struct S1359 T1359;
typedef struct S1360 T1360;
typedef struct S1361 T1361;
typedef struct S1363 T1363;
typedef struct S1364 T1364;
typedef struct S331 T331;
typedef struct S1366 T1366;
typedef struct S1367 T1367;
typedef struct S1368 T1368;
typedef struct S1369 T1369;
typedef struct S1371 T1371;
typedef struct S1373 T1373;
typedef struct S1374 T1374;
typedef struct S1376 T1376;
typedef struct S1380 T1380;
typedef struct S1381 T1381;
typedef struct S1382 T1382;
typedef struct S1383 T1383;
typedef struct S1384 T1384;
typedef struct S1387 T1387;
typedef struct S1388 T1388;
typedef struct S1389 T1389;
typedef struct S1390 T1390;
typedef struct S1393 T1393;
typedef struct S1394 T1394;
typedef struct S54 T54;
typedef struct S764 T764;
typedef int T1396;
typedef struct S725 T725;
typedef struct S650 T650;
typedef T0 T1398;
typedef struct S1400 T1400;
typedef struct S1401 T1401;
typedef struct S1403 T1403;
typedef struct S1406 T1406;
typedef struct S656 T656;
typedef struct S659 T659;
typedef struct S660 T660;
typedef struct S663 T663;
typedef struct S665 T665;
typedef struct S658 T658;
typedef struct S653 T653;
typedef struct S664 T664;
typedef struct S646 T646;
typedef int T323;
typedef struct S1407 T1407;
typedef struct S1408 T1408;
typedef struct S517 T517;
typedef struct S1409 T1409;
typedef struct S667 T667;
typedef struct S655 T655;
typedef struct S651 T651;
typedef struct S1410 T1410;
typedef struct S1411 T1411;
typedef struct S1412 T1412;
typedef int T296;
typedef struct S1413 T1413;
typedef struct S1414 T1414;
typedef struct S1420 T1420;
typedef struct S520 T520;
typedef struct S115 T115;
typedef struct S723 T723;
typedef struct S728 T728;
typedef struct S109 T109;
typedef struct S1422 T1422;
typedef struct S408 T408;
typedef struct S405 T405;
typedef struct S360 T360;
typedef struct S773 T773;
typedef struct S629 T629;
typedef struct S775 T775;
typedef struct S772 T772;
typedef struct S524 T524;
typedef struct S774 T774;
typedef struct S628 T628;
typedef struct S1423 T1423;
typedef struct S813 T813;
typedef struct S815 T815;
typedef struct S816 T816;
typedef struct S817 T817;
typedef struct S1424 T1424;
typedef struct S1426 T1426;
typedef struct S1428 T1428;
typedef struct S1429 T1429;
typedef struct S1430 T1430;
typedef struct S1431 T1431;
typedef struct S1433 T1433;
typedef struct S1434 T1434;
typedef struct S1436 T1436;
typedef struct S1437 T1437;
typedef struct S1440 T1440;
typedef struct S1441 T1441;
typedef struct S661 T661;
typedef struct S693 T693;
typedef struct S1446 T1446;
typedef struct S1447 T1447;
typedef int T1452;
typedef struct S1453 T1453;
typedef struct S1454 T1454;
typedef struct S966 T966;
typedef struct S624 T624;
typedef struct S550 T550;
typedef T0 T1456;
typedef T0 T1458;
typedef T0 T1460;
typedef T0 T1462;
typedef T0 T1464;
typedef T0 T1466;
typedef struct S1468 T1468;
typedef struct S1469 T1469;
typedef struct S544 T544;
typedef struct S545 T545;
typedef struct S546 T546;
typedef struct S547 T547;
typedef struct S548 T548;
typedef struct S549 T549;
typedef int T1470;
typedef T0 T1472;
typedef struct S1475 T1475;
typedef struct S1479 T1479;
typedef int T1480;
typedef struct S787 T787;
typedef struct S1481 T1481;
typedef T0 T1482;
typedef struct S784 T784;
typedef struct S1487 T1487;
typedef struct S1488 T1488;
typedef struct S698 T698;
typedef struct S1489 T1489;
typedef struct S1493 T1493;
typedef struct S1494 T1494;
typedef struct S1496 T1496;
typedef struct S695 T695;
typedef struct S1500 T1500;
typedef struct S1501 T1501;
typedef T0 T1503;
typedef T0 T1506;
typedef T0 T1509;
typedef T0 T1511;
typedef struct S1514 T1514;
typedef struct S771 T771;
typedef struct S1515 T1515;
typedef struct S769 T769;
typedef int T1517;
typedef struct S1518 T1518;
typedef struct S1520 T1520;
typedef struct S1521 T1521;
/* C Header Pass 2: */
typedef T3*T9;
#define M9 NULL
typedef T0**T1020;
#define M1020 NULL
typedef T0**T1035;
#define M1035 NULL
typedef T0**T1040;
#define M1040 NULL
typedef T0**T1044;
#define M1044 NULL
typedef T10*T1045;
#define M1045 NULL
typedef T0**T1049;
#define M1049 NULL
typedef T0**T1073;
#define M1073 NULL
typedef T0**T1074;
#define M1074 NULL
typedef T0**T1075;
#define M1075 NULL
typedef T0**T1089;
#define M1089 NULL
typedef T0**T1092;
#define M1092 NULL
typedef T2*T1094;
#define M1094 NULL
typedef T0**T1124;
#define M1124 NULL
typedef T0**T1127;
#define M1127 NULL
typedef T0**T1144;
#define M1144 NULL
typedef T0**T1147;
#define M1147 NULL
typedef T0**T1148;
#define M1148 NULL
typedef T0**T1158;
#define M1158 NULL
typedef T332*T1159;
#define M1159 NULL
typedef T0**T1165;
#define M1165 NULL
typedef T0**T1168;
#define M1168 NULL
typedef T0**T1171;
#define M1171 NULL
typedef T0**T1172;
#define M1172 NULL
typedef T0**T1173;
#define M1173 NULL
typedef T0**T1183;
#define M1183 NULL
typedef T0**T1186;
#define M1186 NULL
typedef T0**T1187;
#define M1187 NULL
typedef T0**T1192;
#define M1192 NULL
typedef T0**T1194;
#define M1194 NULL
typedef T0**T1198;
#define M1198 NULL
typedef T0**T1199;
#define M1199 NULL
typedef T0**T1200;
#define M1200 NULL
typedef T0**T1201;
#define M1201 NULL
typedef T0**T1202;
#define M1202 NULL
typedef T0**T1203;
#define M1203 NULL
typedef T0**T1205;
#define M1205 NULL
typedef T0**T1206;
#define M1206 NULL
typedef T0**T1207;
#define M1207 NULL
typedef T0**T1209;
#define M1209 NULL
typedef T0**T1217;
#define M1217 NULL
typedef T0**T1218;
#define M1218 NULL
typedef T0**T1221;
#define M1221 NULL
typedef T0**T1224;
#define M1224 NULL
typedef T0**T1227;
#define M1227 NULL
typedef T0**T1228;
#define M1228 NULL
typedef T0**T1229;
#define M1229 NULL
typedef T0**T1230;
#define M1230 NULL
typedef T0**T1237;
#define M1237 NULL
typedef T0**T1239;
#define M1239 NULL
typedef T0**T1246;
#define M1246 NULL
typedef T0**T1252;
#define M1252 NULL
typedef T0**T1253;
#define M1253 NULL
typedef T0**T1254;
#define M1254 NULL
typedef T0**T1255;
#define M1255 NULL
typedef T0**T1258;
#define M1258 NULL
typedef T0**T1260;
#define M1260 NULL
typedef T0**T1265;
#define M1265 NULL
typedef T0**T1266;
#define M1266 NULL
typedef T0**T1271;
#define M1271 NULL
typedef T0**T1272;
#define M1272 NULL
typedef T0**T1275;
#define M1275 NULL
typedef T0**T1278;
#define M1278 NULL
typedef T0**T1279;
#define M1279 NULL
typedef T0**T1283;
#define M1283 NULL
typedef T0**T1285;
#define M1285 NULL
typedef T0**T1286;
#define M1286 NULL
typedef T0**T1289;
#define M1289 NULL
typedef T0**T1292;
#define M1292 NULL
typedef T0**T1293;
#define M1293 NULL
typedef T0**T1298;
#define M1298 NULL
typedef T0**T1301;
#define M1301 NULL
typedef T0**T1302;
#define M1302 NULL
typedef T1*T1303;
#define M1303 NULL
typedef T0**T1306;
#define M1306 NULL
typedef T0**T1307;
#define M1307 NULL
typedef T0**T1308;
#define M1308 NULL
typedef T0**T1310;
#define M1310 NULL
typedef T0**T1312;
#define M1312 NULL
typedef T301*T1314;
#define M1314 NULL
typedef T0**T1316;
#define M1316 NULL
typedef T0**T1317;
#define M1317 NULL
typedef T0**T1323;
#define M1323 NULL
typedef T0**T1325;
#define M1325 NULL
typedef T0**T1328;
#define M1328 NULL
typedef T0**T1329;
#define M1329 NULL
typedef T0**T1332;
#define M1332 NULL
typedef T0**T1335;
#define M1335 NULL
typedef T0**T1338;
#define M1338 NULL
typedef T0**T1340;
#define M1340 NULL
typedef T0**T1341;
#define M1341 NULL
typedef T0**T1342;
#define M1342 NULL
typedef T0**T1343;
#define M1343 NULL
typedef T0**T1344;
#define M1344 NULL
typedef T0**T1346;
#define M1346 NULL
typedef T0**T1347;
#define M1347 NULL
typedef T0**T1350;
#define M1350 NULL
typedef T0**T1351;
#define M1351 NULL
typedef T0**T1352;
#define M1352 NULL
typedef T0**T1353;
#define M1353 NULL
typedef T0**T1354;
#define M1354 NULL
typedef T0**T1357;
#define M1357 NULL
typedef T0**T1362;
#define M1362 NULL
typedef T0**T1365;
#define M1365 NULL
typedef T0**T1372;
#define M1372 NULL
typedef T0**T1375;
#define M1375 NULL
typedef T0**T1377;
#define M1377 NULL
typedef T0**T1391;
#define M1391 NULL
typedef T0**T1392;
#define M1392 NULL
typedef T0**T1395;
#define M1395 NULL
typedef T0**T1415;
#define M1415 NULL
typedef T0**T1425;
#define M1425 NULL
typedef T0**T1427;
#define M1427 NULL
typedef T0**T1432;
#define M1432 NULL
typedef T0**T1435;
#define M1435 NULL
typedef T0**T1442;
#define M1442 NULL
typedef T0**T1443;
#define M1443 NULL
typedef T0**T1444;
#define M1444 NULL
typedef T0**T1445;
#define M1445 NULL
typedef T0**T1448;
#define M1448 NULL
typedef T0**T1449;
#define M1449 NULL
typedef T8*T1450;
#define M1450 NULL
typedef T0**T1451;
#define M1451 NULL
typedef T0**T1455;
#define M1455 NULL
typedef T0**T1490;
#define M1490 NULL
typedef T0**T1491;
#define M1491 NULL
typedef T0**T1492;
#define M1492 NULL
typedef T0**T1495;
#define M1495 NULL
typedef T0**T1497;
#define M1497 NULL
typedef T0**T1498;
#define M1498 NULL
typedef T0**T1499;
#define M1499 NULL
typedef T0**T1519;
#define M1519 NULL
/* C Header Pass 2: */
struct S527{T8 _current_entry;T8 _directory_stream;};
int se_cmpT527(T527* o1,T527* o2);
struct S332{T2 _mangling;};
int se_cmpT332(T332* o1,T332* o2);
struct S671{int _file_tools;};
int se_cmpT671(T671* o1,T671* o2);
struct S747{T0* _hashed_string_memory;T2 _column;T2 _line;};
int se_cmpT747(T747* o1,T747* o2);
extern T1024 M1024;
extern T1026 M1026;
extern T1041 M1041;
struct S686{T11 _time_memory;};
int se_cmpT686(T686* o1,T686* o2);
struct S465{T2 _microsecond;T686 _time;};
int se_cmpT465(T465* o1,T465* o2);
struct S329{T2 _hash_code;T0* _feature_name;T0* _class_name;};
int se_cmpT329(T329* o1,T329* o2);
struct S301{T0* _item_memory;T2 _capacity;};
int se_cmpT301(T301* o1,T301* o2);
struct S515{T6 _direct_error;T6 _direct_output;T6 _direct_input;T0* _group;T6 _keep_environment;};
int se_cmpT515(T515* o1,T515* o2);
extern T1396 M1396;
struct S725{T2 _first_error_character;T2 _first_error_index;T0* _first_error;};
int se_cmpT725(T725* o1,T725* o2);
extern T1452 M1452;
extern T1470 M1470;
extern T1480 M1480;
extern T1517 M1517;
/* C Header Pass 4: */
struct S25{T0* _level_flag;T6 _version_flag;T6 _help_flag;};
extern T25 M25;
extern T275 M275;
struct S101{T0* _plugin_factory;T0* _plugins;T0* _config_loadpath_names;T0* _config_loadpath_files;T0* _extra_loadpath_files;T6 _c_mode_has_explicit_linker_path_or_option;T0* _smarteiffel_options;T0* _ace_linker_options;T0* _ace_compiler_options;T0* _cpp_strip_path;T0* _cpp_linker_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T2 _c_compiler_mode;T0* _c_compiler;T6 _is_alternate_c_mode;T527 _basic_directory;T0* _is_unix_like;T0* _is_win_like;T6 _no_strip;T0* _short_directory;T0* _bin_directory;T0* _sys_directory;T0* _config;T0* _seconf;T0* _system_flavor;T0* _system_name;};
extern T101 M101;
extern T965 M965;
struct S93{T0* _tmp_feature;T2 _eiffel_parser_stamp;T2 _inline_agent_counter;T0* _last_tag_mark;T0* _last_parent_edge;T0* _last_instruction;T0* _last_formal_generic_type_mark;T0* _last_feature_name_list;T0* _last_feature_name;T0* _last_feature_declaration;T0* _last_class_name;T0* _last_type_mark;T0* _last_expression;T6 _ok;T0* _local_vars;T0* _arguments;T0* _formal_generic_list;T6 _tuple_flag;T6 _inside_rescue_flag;T6 _inside_ensure_flag;T6 _inside_function_flag;T0* _last_class_text;T0* _cluster;T10 _current_id;T11 _total_time;T6 _is_running;T6 _no_style_warning;T6 _no_rescue;T747 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _column;T2 _line;};
extern T93 M93;
struct S113{T0* _output_path;T0* _error_stream;T0* _output_stream;T2 _output_state;T6 _is_verbose;};
extern T113 M113;
struct S263{T6 _sedb_flag;T0* _root_procedure_name_memory;T0* _splitter;T2 _default_assertion_level;T6 _default_trace;T2 _highest_encountered_level;T6 _clean;T6 _precompile_header;T6 _relax;T6 _profile;T6 _high_memory_compiler;T6 _manifest_string_trace;T6 _safety_check;T6 _no_main;T6 _flat_check;T0* _executable_name;T0* _file_path;T0* _default_debug_keys;T747 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T263 M263;
struct S104{T0* _once_mark_list;T0* _registered_natives;T6 _has_c_plus_plus;T0* _include_memory;T6 _executable_is_up_to_date;T0* _out_h;T6 _assignment_evobt;T6 _in_assignment;T2 _function_count_in_file;T6 _assertion_checks_disabled;T2 _pending_c_function_counter;T6 _pending_c_function;T0* _native_array_collector;T0* _native_need_wrapper;T0* _need_struct;T0* _va_arg_type;T0* _argument_type;T0* _result_type;T0* _target_type;T0* _introspection_display;T0* _introspection_function;T0* _native_c_definition;T0* _native_procedure_mapper;T0* _native_function_mapper;T0* _gc_handler;T0* _compound_expression_compiler;T0* _code_compiler;T0* _arg_mapper;T0* _target_mapper;T0* _initializer;T0* _mapper;T0* _live_type_compiler;T0* _header_pass_4;T0* _header_pass_3;T0* _header_pass_2;T0* _header_pass_1;T0* _unused_contexts;T2 _top;T2 _real_function_count;T2 _real_procedure_count;T2 _precursor_routine_count;T2 _function_count;T2 _procedure_count;};
extern T104 M104;
struct S100{int _live_type_sorter;T0* _live_type_map_;T2 _inspect_when_merge_counter;T0* _polymorphic_distribution;T2 _void_target_function_call_count;T2 _void_target_procedure_call_count;T2 _polymorphic_function_call_count;T2 _polymorphic_procedure_call_count;T2 _expanded_target_function_call_count;T2 _expanded_target_procedure_call_count;T2 _monomorphic_function_call_count;T2 _monomorphic_procedure_call_count;T0* _type_real_extended_memory;T0* _type_real_64_memory;T0* _type_real_32_memory;T0* _type_natural_64_memory;T0* _type_natural_32_memory;T0* _type_natural_16_memory;T0* _type_natural_8_memory;T0* _type_integer_64_memory;T0* _type_integer_32_memory;T0* _type_integer_16_memory;T0* _type_integer_8_memory;T0* _type_pointer_memory;T0* _type_unicode_string_memory;T0* _type_native_array_character_memory;T0* _type_string_memory;T0* _type_character_memory;T0* _type_boolean_memory;T0* _type_any_memory;T0* _specializing_feature_local_var_list;T2 _se_atexit_id;T0* _se_atexit_stamp;T6 _simplify_done;T2 _magic_count;T0* _agent_switches;T0* _agent_creations;T0* _class_invariants;T0* _run_features;T0* _root_procedure;T6 _deep_twin_used;T6 _generator_used;T6 _generating_type_used;T6 _no_id;T6 _pretty_flag;T6 _short_or_class_check_flag;};
extern T100 M100;
struct S271{T10 _min_id;T10 _max_id;};
extern T271 M271;
extern T261 M261;
struct S7{Tid id;T6 _has_storage_signature;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;T2 _generation;};
extern T7 M7;
struct S611{T6 _dispose_flag;T0* _need_mark;T0* _before_mark_compiler;T0* _info_compiler;T0* _functions_compiler;T0* _header_compiler;T6 _info_flag;T6 _is_off;};
extern T611 M611;
struct S995{Tid id;T2 _upper;T2 _capacity;T1020 _storage;T2 _generation;};
extern T995 M995;
extern T630 M630;
struct S77{T0* _cecil_files;T2 _state;};
extern T77 M77;
struct S996{T0* _item;};
extern T996 M996;
extern T274 M274;
struct S273{T6 _no_warning;T2 _warning_counter;T2 _error_counter;};
extern T273 M273;
extern T542 M542;
extern T527 M527;
struct S71{Tid id;};
extern T71 M71;
struct S997{Tid id;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1035 _buckets;T2 _generation;};
extern T997 M997;
struct S529{Tid id;T0* _destination_notation;T0* _current_path;};
extern T529 M529;
struct S533{Tid id;T0* _destination_notation;T0* _current_path;};
extern T533 M533;
struct S534{Tid id;};
extern T534 M534;
struct S535{Tid id;};
extern T535 M535;
struct S536{Tid id;};
extern T536 M536;
struct S537{Tid id;};
extern T537 M537;
struct S998{T0* _item;};
extern T998 M998;
struct S999{T6 _item;};
extern T999 M999;
struct S91{T2 _capacity;T2 _buffer_position;T2 _buffer_size;T6 _end_reached;T9 _buffer;T8 _input_stream;T3 _filtered_last_character;T6 _end_of_input;T0* _filter;T0* _path;};
extern T91 M91;
struct S528{T0* _smarteiffel_options;T0* _cpp_linker_options;T0* _cpp_compiler_options;T0* _cpp_linker_path;T0* _cpp_strip_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_linker_options;T0* _c_compiler_options;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T0* _c_compiler;};
extern T528 M528;
struct S446{T6 _busy;T0* _names;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _obsolete_mark;T0* _header_comment;T0* _type;T0* _arguments;};
extern T446 M446;
struct S445{Tid id;T8 _output_stream;T2 _capacity;T2 _buffer_position;T9 _buffer;T11 _flushed_character_count;T0* _filter;T0* _path;};
extern T445 M445;
struct S73{Tid id;T0* _filter;};
extern T73 M73;
struct S62{Tid id;T2 _capacity;T9 _buffer;T2 _buffer_position;T0* _filter;};
extern T62 M62;
struct S1000{T2 _upper;T2 _capacity;T1040 _storage;T2 _generation;};
extern T1000 M1000;
struct S96{T2 _hash_code;T0* _to_string;};
extern T96 M96;
struct S110{T0* _text;T2 _count;T0* _cluster;T0* _hashed_path;};
extern T110 M110;
struct S672{Tid id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T672 M672;
struct S676{Tid id;int _sorter;T0* _ids;T0* _suffixes;T2 _count;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T676 M676;
struct S674{Tid id;T2 _split_id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T674 M674;
struct S538{T0* _name_list;int _collection_sorter;T6 _exists;T0* _path;T0* _name;T527 _basic_directory;};
extern T538 M538;
struct S668{Tid id;T0* _classeses;T527 _basic_directory;T2 _distance;T0* _parent;};
extern T668 M668;
extern T332 M332;
struct S414{Tid id;T0* _list;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T414 M414;
struct S1001{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1020 _storage;T2 _generation;};
extern T1001 M1001;
struct S309{T0* _low_surrogate_values;T0* _low_surrogate_indexes;T2 _capacity;T2 _count;T1045 _storage;T2 _generation;};
extern T309 M309;
extern T671 M671;
struct S1002{T2 _upper;T2 _capacity;T1049 _storage;T2 _generation;};
extern T1002 M1002;
struct S423{T0* _pool;T0* _type_dictionary;T0* _exclude_list;T0* _include_list;T0* _option_trace;T0* _option_debug_keys;T0* _option_assertion_level;T3 _default_trace;T2 _default_assertion_level;T0* _directory_path;T0* _name;T0* _class_text_map;T0* _tree;T0* _default_debug_keys;};
extern T423 M423;
extern T747 M747;
struct S556{Tid id;T0* _compiled;};
extern T556 M556;
struct S586{Tid id;T0* _compiled;};
extern T586 M586;
struct S587{Tid id;T0* _compiled;};
extern T587 M587;
struct S588{Tid id;T0* _compiled;};
extern T588 M588;
struct S589{Tid id;T0* _compiled;};
extern T589 M589;
struct S601{Tid id;};
extern T601 M601;
struct S602{Tid id;};
extern T602 M602;
struct S603{Tid id;T0* _target_formal_type;T0* _type;};
extern T603 M603;
struct S605{Tid id;T0* _type;};
extern T605 M605;
struct S606{Tid id;T0* _type;};
extern T606 M606;
struct S610{Tid id;T0* _continue;T0* _finish;T0* _type;};
extern T610 M610;
struct S612{Tid id;T0* _name;T0* _bcn;T0* _type_of_current;T0* _rf8;};
extern T612 M612;
struct S613{Tid id;T0* _rf7;T0* _name;T0* _bcn;T0* _type_of_current;};
extern T613 M613;
struct S614{Tid id;T0* _external_routine_memory;T0* _rf8;T0* _rf7;};
extern T614 M614;
struct S615{Tid id;T6 _put_else;};
extern T615 M615;
struct S616{Tid id;T6 _put_coma;};
extern T616 M616;
struct S617{Tid id;};
extern T617 M617;
struct S619{Tid id;};
extern T619 M619;
struct S618{Tid id;};
extern T618 M618;
struct S620{Tid id;};
extern T620 M620;
struct S621{Tid id;T6 _flag;};
extern T621 M621;
struct S622{Tid id;T0* _name;T0* _type_of_current;T6 _flag;};
extern T622 M622;
struct S1003{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1073 _buckets;T2 _generation;};
extern T1003 M1003;
extern T623 M623;
struct S1004{T2 _upper;T2 _capacity;T1074 _storage;T2 _generation;};
extern T1004 M1004;
struct S1005{T2 _upper;T2 _capacity;T1075 _storage;T2 _generation;};
extern T1005 M1005;
struct S362{Tid id;T0* _writable_attributes_mem;T0* _default_create_run_feature_memory;T0* _to_internals_stamp;T6 _create_blank_internals_used;T0* _create_blank_internals_instruction;T1 _collect_is_deep_equal_status;T6 _collecting_deep_twin;T0* _structure_signature_memory;T0* _actual_clients_;T0* _memory_dispose_stamp;T0* _default_create_stamp;T2 _tagged_memory;T2 _generating_type_level;T6 _has_been_collected;T6 _is_collecting;T0* _precursor_run_features;T0* _precursor_classes;T0* _create_function_list;T0* _live_features;T2 _hash_code;T0* _run_time_set;T6 _at_run_time;T2 _id;T0* _class_text_name;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _type;T0* _tagged_data_map;};
extern T362 M362;
struct S86{T6 _has_tried_to_load;T0* _class_text_memory;T2 _hash_code;T0* _to_string;T0* _hashed_name;T332 _start_position;};
extern T86 M86;
struct S88{Tid id;T0* _insert_inherit_test_memory_cache;T6 _creation_list_check_done;T2 _assertion_level;T0* _declaration_type_of_like_current_memory;T0* _feature_dictionary;T0* _check_expanded_with_flag;T0* _external_type;T2 _hash_code;T6 _sedb_trace;T0* _end_comment;T0* _class_invariant;T0* _feature_clause_list;T0* _creation_clause_list;T0* _parent_lists;T0* _obsolete_mark;T0* _heading_comment2;T0* _formal_generic_list;T0* _name;T6 _is_expanded;T6 _is_deferred;T0* _heading_comment1;T0* _index_list;T0* _cluster;T0* _path;T10 _id;T0* _tagged_data_map;};
extern T88 M88;
struct S1006{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1089 _buckets;T2 _generation;};
extern T1006 M1006;
struct S1007{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1092 _buckets;T2 _generation;};
extern T1007 M1007;
struct S1008{T2 _upper;T2 _capacity;T1094 _storage;T2 _generation;};
extern T1008 M1008;
struct S266{T0* _insert_inherit_test_memory_cache;T0* _address_of_memory2;T0* _address_of_memory1;T0* _temporary_simple_feature_name;T0* _writable_attributes_memory;T0* _feature_stamps;T0* _external_type;T6 _is_deferred;T0* _class_invariant;T2 _hash_code;T0* _private_generic_list;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _live_type;T6 _default_rescue_collected;T0* _default_rescue_compound;T0* _children_edge_load;T0* _parents_edge_load;T6 _mark;T0* _children_edge;T0* _parents_edge;T0* _children;T0* _parents;T0* _item;};
extern T266 M266;
struct S80{T0* _run_features;T0* _rename_down_child_feature_stamp;T0* _rename_down_edge;T0* _rename_down_child_class;T0* _rename_down_context_class;T0* _rename_up_parent_feature_stamp;T0* _rename_up_edge;T0* _rename_up_parent_class;T0* _rename_up_context_class;T0* _anonymous_features;T0* _roots;T2 _hash_code;T0* _name;};
extern T80 M80;
struct S525{T6 _inlining_dynamic_dispatch_done;T6 _collecting_done;T0* _specializing_type_memory;T2 _safety_check_state;T2 _phase;};
extern T525 M525;
struct S1010{T2 _lower;T2 _upper;T2 _capacity;T1094 _storage;T2 _generation;};
extern T1010 M1010;
struct S322{T2 _sedb_counter;T0* _current_context;T2 _context_level;T0* _code_stack;};
extern T322 M322;
extern T99 M99;
struct S97{T0* _se_ums_;T0* _unicode_string_type;T0* _unicode_string_manifest_initialize_stamp;T6 _first_unicode_manifest_string_collected_flag;T6 _first_manifest_string_collected_flag;};
extern T97 M97;
extern T103 M103;
extern T112 M112;
struct S111{T6 _agent_creation_collected_flag;};
extern T111 M111;
extern T114 M114;
struct S82{T0* _native_array_internals_from_generating_type_args;T332 _native_array_internals_from_generating_type_position;T332 _internals_from_generating_type_position;T6 _has_capacity;T6 _can_twin;T0* _native_array_element_type;T0* _target_type;T0* _new_type;T0* _external_routine;T0* _type_internals_handler;};
extern T82 M82;
struct S432{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T432 M432;
struct S1012{T2 _lower;T2 _upper;T2 _capacity;T1124 _storage;T2 _generation;};
extern T1012 M1012;
struct S1013{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1127 _buckets;T2 _generation;};
extern T1013 M1013;
struct S107{T0* _insert_seeds;T0* _seeds;T0* _insert_problem_seeds;T0* _seeds_of_current_feature;T0* _insert_seeds_of_current_feature;T0* _feature_stamps_memory;T0* _features_dictionary;T0* _free;T0* _features;T0* _feature_stamp;T1 _state;T2 _waiting_type;T0* _current_mixer;T6 _specialize_2_in_progress;T0* _pending_list;T0* _specialize_2_list;T0* _current_fn;T0* _context_type;};
extern T107 M107;
struct S427{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T427 M427;
struct S1016{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1144 _buckets;T2 _generation;};
extern T1016 M1016;
extern T683 M683;
struct S1017{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1147 _buckets;T2 _generation;};
extern T1017 M1017;
struct S1018{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1148 _buckets;T2 _generation;};
extern T1018 M1018;
struct S778{Tid id;};
extern T778 M778;
struct S780{Tid id;T0* _wa_cycle;T0* _wa_cyclic_buf;T0* _wa_buf;};
extern T780 M780;
struct S781{Tid id;};
extern T781 M781;
struct S782{Tid id;};
extern T782 M782;
struct S783{Tid id;T6 _flag;};
extern T783 M783;
struct S321{T0* _entries;T0* _path_h;T0* _path;};
extern T321 M321;
struct S1022{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1158 _buckets;T2 _generation;};
extern T1022 M1022;
struct S1023{T2 _upper;T2 _capacity;T1159 _storage;T2 _generation;};
extern T1023 M1023;
struct S766{Tid id;T0* _config;};
extern T766 M766;
struct S767{Tid id;T0* _my_path;T0* _my_c_modes;T0* _my_tools;T0* _my_loadpaths;T0* _my_environment;T2 _jobs;T0* _flavor;T0* _os;T0* _short;T0* _sys;T0* _bin;};
extern T767 M767;
struct S1027{T2 _upper;T2 _capacity;T1020 _storage;T2 _generation;};
extern T1027 M1027;
struct S1028{T0* _item;};
extern T1028 M1028;
struct S52{int _items_comparator;T0* _strings;T301 _recycling_item;};
extern T52 M52;
struct S1029{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1165 _buckets;T2 _generation;};
extern T1029 M1029;
struct S1030{T2 _upper;T2 _capacity;T1168 _storage;T2 _generation;};
extern T1030 M1030;
struct S283{Tid id;T0* _original;T0* _holders;T6 _is_interned;T6 _immutable;T2 _hash_code;T6 _has_storage_signature;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;};
extern T283 M283;
struct S1031{T0* _next;T0* _key;T0* _item;};
extern T1031 M1031;
struct S1034{Tid id;T0* _item;};
extern T1034 M1034;
struct S1036{Tid id;T0* _item;};
extern T1036 M1036;
struct S1037{T0* _next;T0* _key;T0* _item;};
extern T1037 M1037;
struct S1038{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1171 _buckets;T2 _generation;};
extern T1038 M1038;
struct S1039{T2 _upper;T2 _capacity;T1172 _storage;T2 _generation;};
extern T1039 M1039;
struct S270{T0* _name;T332 _start_position;T2 _name_type;};
extern T270 M270;
struct S1043{T2 _upper;T2 _capacity;T1173 _storage;T2 _generation;};
extern T1043 M1043;
struct S95{T0* _sections;T0* _default_section;T0* _last_key;T0* _last_section;T6 _expand_execute;T6 _expand_var;T10 _id;T6 _is_invalid;T0* _file_path;T747 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T95 M95;
struct S1046{T2 _upper;T2 _capacity;T1045 _storage;T2 _generation;};
extern T1046 M1046;
struct S738{Tid id;T0* _path;T0* _name;T0* _cluster;T0* _classeses;T527 _basic_directory;T2 _distance;T0* _parent;};
extern T738 M738;
struct S785{Tid id;T0* _path;T0* _name;T0* _classeses;T527 _basic_directory;T2 _distance;T0* _parent;};
extern T785 M785;
struct S1048{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1183 _buckets;T2 _generation;};
extern T1048 M1048;
struct S1050{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1186 _buckets;T2 _generation;};
extern T1050 M1050;
struct S1052{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1187 _buckets;T2 _generation;};
extern T1052 M1052;
struct S1054{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1192 _buckets;T2 _generation;};
extern T1054 M1054;
struct S740{T0* _cluster;T0* _classes;};
extern T740 M740;
extern T465 M465;
struct S1057{T2 _upper;T2 _capacity;T1194 _storage;T2 _generation;};
extern T1057 M1057;
struct S443{T6 _is_inline_agent;T332 _sedb_trace_before_exit;T0* _obsolete_mark;T0* _header_comment;T0* _anonymous_feature;T0* _result_type;T0* _arguments;T0* _names;T0* _feature_clause;};
extern T443 M443;
struct S420{T0* _list;T0* _tag;};
extern T420 M420;
struct S374{Tid id;T2 _hash_code_memory;T0* _source_view;T0* _once_variable;T0* _initial_storage_id;T0* _alias_link;T0* _unicode_string;T0* _to_string;T6 _unicode_flag;T6 _once_flag;T332 _start_position;};
extern T374 M374;
struct S426{T6 _no_generic_constraint_flag;T0* _list;T332 _start_position;};
extern T426 M426;
struct S435{T2 _rank;T0* _constraint;T0* _name;};
extern T435 M435;
struct S478{Tid id;T2 _rank;T0* _formal_generic_arg;T0* _formal_name;T6 _already_checking;T0* _written_name;T0* _class_text_memory;};
extern T478 M478;
struct S488{Tid id;T332 _start_position;T0* _class_text_memory;};
extern T488 M488;
struct S490{Tid id;T0* _feature_stamp_memory;T0* _declaration_type;T0* _written_name;T0* _like_what;T332 _start_position;T0* _class_text_memory;};
extern T490 M490;
struct S348{Tid id;T0* _flat_list;T0* _list;};
extern T348 M348;
struct S108{T2 _mode;T6 _semi_colon_flag;};
extern T108 M108;
struct S491{Tid id;T6 _like_argument_computing;T0* _type_marks_memory;T0* _written_name;T0* _like_what;T332 _start_position;T0* _class_text_memory;};
extern T491 M491;
struct S439{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T439 M439;
struct S402{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T402 M402;
struct S375{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T375 M375;
struct S430{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T430 M430;
struct S401{Tid id;T2 _bit_count_memory;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T401 M401;
struct S428{Tid id;T2 _bit_count;T0* _class_text_name;T0* _class_text_memory;};
extern T428 M428;
struct S397{Tid id;T0* _type_memory;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T397 M397;
struct S431{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T431 M431;
struct S429{Tid id;T2 _bit_count;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T429 M429;
struct S436{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T436 M436;
struct S433{Tid id;T0* _type_memory;T0* _class_text_name;T0* _class_text_memory;};
extern T433 M433;
struct S437{Tid id;T2 _pretty_code;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T437 M437;
struct S440{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T440 M440;
struct S262{T2 _idx;T2 _count;T0* _to_string;T0* _manifest_string;};
extern T262 M262;
struct S460{Tid id;T0* _external_tag;};
extern T460 M460;
struct S462{Tid id;T0* _alias_data;T2 _hash_code;T0* _plugin;T0* _feature_name;T0* _external_tag;};
extern T462 M462;
struct S463{Tid id;T0* _rf8_memory;T0* _rf7_memory;T0* _external_tag;};
extern T463 M463;
struct S464{Tid id;T6 _c_inline;T0* _signature;T2 _access_mode;T0* _type;T0* _access;T0* _struct;T6 _macro;T6 _parsing_done;T6 _need_prototype;T0* _external_tag;};
extern T464 M464;
struct S415{T0* _alias_tag;T0* _native;T332 _start_position;T0* _default_value;T0* _type_name;};
extern T415 M415;
struct S1058{T2 _upper;T2 _capacity;T1198 _storage;T2 _generation;};
extern T1058 M1058;
struct S269{T0* _comment;T0* _redefine_list;T0* _undefine_list;T0* _export_list;T0* _rename_list;T6 _is_insert_member;T0* _parent_lists;T0* _class_text_name;T0* _class_text;T0* _type_mark;};
extern T269 M269;
struct S471{T0* _old_name;T0* _new_name;};
extern T471 M471;
struct S1059{T2 _upper;T2 _capacity;T1199 _storage;T2 _generation;};
extern T1059 M1059;
struct S511{Tid id;T0* _list;T332 _start_position;};
extern T511 M511;
struct S480{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T480 M480;
struct S395{Tid id;T0* _right_side;T0* _left_writable;T0* _left_type_mark;};
extern T395 M395;
struct S467{Tid id;T0* _resolved_memory;T2 _rank;T0* _curly_type;T332 _start_position;};
extern T467 M467;
struct S365{Tid id;T0* _pretty_view;T0* _result_type_memory;T2 _size;T11 _value_memory;T332 _start_position;};
extern T365 M365;
struct S468{Tid id;T0* _normalized_memory;T0* _result_type;T0* _pretty_view;T332 _start_position;};
extern T468 M468;
struct S469{Tid id;T332 _irregular_position;T0* _manifest_put_feature_stamp;T0* _manifest_make_feature_stamp;T0* _created_type;T2 _semicolon_count;T0* _item_list;T0* _optional_arguments;T0* _type_mark;T332 _start_position;};
extern T469 M469;
struct S333{T0* _remainder;T0* _first_one;};
extern T333 M333;
struct S342{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T342 M342;
struct S345{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T345 M345;
struct S347{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T347 M347;
struct S336{Tid id;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T336 M336;
struct S340{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T340 M340;
struct S341{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T341 M341;
struct S482{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T482 M482;
struct S483{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T483 M483;
struct S484{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T484 M484;
struct S473{Tid id;T0* _create_expression;T0* _effective_arg_list;T332 _start_position;};
extern T473 M473;
struct S379{Tid id;T332 _start_position;};
extern T379 M379;
struct S450{Tid id;T332 _start_position;};
extern T450 M450;
struct S456{Tid id;T0* _pretty_view;T3 _value;T332 _start_position;};
extern T456 M456;
struct S474{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T332 _start_position;};
extern T474 M474;
struct S508{Tid id;T0* _declaration_type_memory;T0* _explicit_type_mark;T332 _start_position;};
extern T508 M508;
struct S509{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T332 _start_position;};
extern T509 M509;
struct S1060{T2 _upper;T2 _capacity;T1200 _storage;T2 _generation;};
extern T1060 M1060;
struct S1061{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1201 _storage;T2 _generation;};
extern T1061 M1061;
struct S447{Tid id;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T332 _start_position;};
extern T447 M447;
struct S448{Tid id;T0* _name_list;};
extern T448 M448;
struct S1062{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1202 _storage;T2 _generation;};
extern T1062 M1062;
struct S385{Tid id;T0* _name;};
extern T385 M385;
struct S1063{T2 _lower;T2 _upper;T2 _capacity;T1203 _storage;T2 _generation;};
extern T1063 M1063;
struct S654{Tid id;T0* _direct_parents_require;T0* _local_require;T6 _is_require_else;T2 _eiffel_parser_stamp;};
extern T654 M654;
struct S1064{T2 _upper;T2 _capacity;T1205 _storage;T2 _generation;};
extern T1064 M1064;
struct S412{Tid id;T0* _source_view;T0* _comment;T0* _expression;T0* _tag;};
extern T412 M412;
struct S382{Tid id;T2 _live_reference_counter;T2 _parsing_reference_counter;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T332 _start_position;};
extern T382 M382;
struct S1065{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1206 _storage;T2 _generation;};
extern T1065 M1065;
struct S386{Tid id;T0* _flat_list;T0* _list;};
extern T386 M386;
struct S442{T0* _remainder;T0* _first;};
extern T442 M442;
struct S510{Tid id;T0* _assertion_list;T2 _eiffel_parser_stamp;};
extern T510 M510;
struct S1066{T2 _upper;T2 _capacity;T1207 _storage;T2 _generation;};
extern T1066 M1066;
struct S470{Tid id;T0* _compound;T0* _key_list;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T470 M470;
struct S406{Tid id;T0* _then_compound;T0* _expression;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T406 M406;
struct S392{Tid id;T0* _else_compound;T0* _elseif_list;T0* _then_compound;T0* _expression;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T392 M392;
struct S1067{T2 _upper;T2 _capacity;T1209 _storage;T2 _generation;};
extern T1067 M1067;
struct S351{Tid id;T0* _dispatch_live_type;T0* _strip_condition;T0* _values;T0* _list;T0* _condition_live_type;T0* _compound;T0* _header_comment;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T351 M351;
struct S363{Tid id;T0* _declaration_type;T332 _start_position;};
extern T363 M363;
struct S356{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T332 _else_position;T0* _when_list;T0* _expression;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T356 M356;
struct S472{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T332 _else_position;T0* _when_list;T0* _expression;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T472 M472;
struct S417{Tid id;T0* _list;T0* _header_comment;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T417 M417;
struct S458{Tid id;T0* _expression;T0* _comment2;T0* _tag;T0* _comment1;};
extern T458 M458;
struct S459{Tid id;T0* _loop_body;T0* _until_expression;T0* _loop_variant;T0* _loop_invariant;T0* _initialize;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T459 M459;
struct S358{Tid id;T0* _once_function;T0* _enclosing_function;T0* _written_declaration_type_mark;T0* _type_mark_memory;T0* _declaration_type;T332 _start_position;};
extern T358 M358;
struct S398{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T398 M398;
struct S457{Tid id;T332 _start_position;T0* _c_code;T6 _is_c_inline_c;T2 _eiffel_parser_stamp;};
extern T457 M457;
struct S487{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T487 M487;
struct S477{Tid id;T0* _declaration_type;T332 _start_position;};
extern T477 M477;
struct S361{Tid id;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T361 M361;
struct S388{Tid id;T6 _forced_flag;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T388 M388;
struct S453{Tid id;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T453 M453;
struct S389{Tid id;T0* _list;T2 _eiffel_parser_stamp;};
extern T389 M389;
struct S649{Tid id;T6 _is_ensure_then;T0* _list;T0* _header_comment;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T649 M649;
struct S476{Tid id;T0* _feature_stamp;T0* _inline_feature;T0* _resolved_memory;T0* _closed_operand_list;T0* _open_operand_list;T0* _code;T0* _original_function_call;T332 _start_position;};
extern T476 M476;
struct S390{Tid id;T332 _start_position;};
extern T390 M390;
struct S485{Tid id;T0* _expression;T332 _start_position;T0* _tagged_data_map;};
extern T485 M485;
struct S507{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T507 M507;
struct S506{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T506 M506;
struct S502{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T502 M502;
struct S503{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T503 M503;
struct S504{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T504 M504;
struct S505{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T505 M505;
struct S501{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T501 M501;
struct S368{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T368 M368;
struct S391{Tid id;T0* _right_side;T0* _left_side;T332 _operator_position;T6 _eq_flag;};
extern T391 M391;
struct S497{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T497 M497;
struct S498{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T498 M498;
struct S499{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T499 M499;
struct S500{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T500 M500;
struct S396{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T396 M396;
struct S496{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T496 M496;
struct S493{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T493 M493;
struct S494{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T494 M494;
struct S495{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T495 M495;
struct S492{Tid id;T0* _arguments;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T492 M492;
struct S451{Tid id;T0* _comment;T0* _expression;};
extern T451 M451;
struct S452{Tid id;T0* _calling_code;T0* _feature_stamp;T0* _target_type;T0* _feature_name;T0* _local_name;};
extern T452 M452;
struct S486{T0* _remainder;T0* _first;};
extern T486 M486;
struct S272{T0* _eiffel_view_memory;T0* _class_name_list;T332 _start_position;};
extern T272 M272;
struct S455{T0* _permissions;T0* _items;T0* _for_all;T332 _start_position;};
extern T455 M455;
struct S454{T0* _list;T0* _clients;};
extern T454 M454;
struct S1068{T2 _lower;T2 _upper;T2 _capacity;T1217 _storage;T2 _generation;};
extern T1068 M1068;
struct S413{T0* _procedure_list;T0* _comment;T0* _clients;T332 _start_position;};
extern T413 M413;
struct S422{T0* _list;T0* _class_text;T0* _comment;T0* _clients;};
extern T422 M422;
struct S739{T0* _path;T0* _cluster;T0* _class_name;};
extern T739 M739;
struct S449{T332 _start_position;T0* _hashed_name;};
extern T449 M449;
struct S352{Tid id;T0* _formal_arg_list;T0* _declaration_type;T2 _rank;T332 _start_position;};
extern T352 M352;
struct S404{Tid id;T0* _declaration_type;T0* _written_declaration_type_mark;T0* _feature_stamp;T0* _feature_name;};
extern T404 M404;
struct S387{Tid id;T0* _local_var_list;T0* _written_declaration_type_mark;T0* _declaration_type;T2 _rank;T332 _start_position;};
extern T387 M387;
struct S1069{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1218 _buckets;T2 _generation;};
extern T1069 M1069;
struct S1070{T2 _upper;T2 _capacity;T1221 _storage;T2 _generation;};
extern T1070 M1070;
struct S1071{Tid id;T0* _item;};
extern T1071 M1071;
struct S1072{T0* _next;T0* _key;T0* _item;};
extern T1072 M1072;
struct S1076{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1224 _buckets;T2 _generation;};
extern T1076 M1076;
struct S523{T0* _sorted;T0* _set;T0* _owner;};
extern T523 M523;
struct S1077{T2 _lower;T2 _upper;T2 _capacity;T1227 _storage;T2 _generation;};
extern T1077 M1077;
struct S1079{T2 _upper;T2 _capacity;T1228 _storage;T2 _generation;};
extern T1079 M1079;
struct S424{Tid id;T2 _rank;T0* _end_comment;T0* _specialized_feature_stamp;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T424 M424;
struct S416{Tid id;T0* _list;T0* _header_comment;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T416 M416;
struct S1085{T2 _upper;T2 _capacity;T1229 _storage;T2 _generation;};
extern T1085 M1085;
struct S1086{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1230 _buckets;T2 _generation;};
extern T1086 M1086;
struct S444{T0* _insert_list;T0* _inherit_list;T6 _default_insert_any_added_flag;T0* _insert_comment;T0* _inherit_comment;T0* _class_text;};
extern T444 M444;
struct S421{T0* _list;};
extern T421 M421;
struct S441{T0* _list;};
extern T441 M441;
struct S1087{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1237 _buckets;T2 _generation;};
extern T1087 M1087;
struct S419{T0* _list;};
extern T419 M419;
struct S1088{T0* _next;T0* _key;T0* _item;};
extern T1088 M1088;
struct S1090{Tid id;T0* _item;};
extern T1090 M1090;
struct S1091{T0* _next;T0* _key;T0* _item;};
extern T1091 M1091;
struct S1093{Tid id;T0* _item;};
extern T1093 M1093;
struct S1095{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1239 _buckets;T2 _generation;};
extern T1095 M1095;
struct S1098{T2 _upper;T2 _capacity;T1227 _storage;T2 _generation;};
extern T1098 M1098;
struct S1099{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _capacity;T1246 _val_buckets;T1246 _key_buckets;T2 _count;T2 _generation;};
extern T1099 M1099;
struct S1102{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1252 _buckets;T2 _generation;};
extern T1102 M1102;
struct S1103{T2 _upper;T2 _capacity;T1044 _storage;T2 _generation;};
extern T1103 M1103;
struct S1104{T2 _upper;T2 _capacity;T1253 _storage;T2 _generation;};
extern T1104 M1104;
struct S1105{T2 _upper;T2 _capacity;T1254 _storage;T2 _generation;};
extern T1105 M1105;
struct S1106{T2 _upper;T2 _capacity;T1255 _storage;T2 _generation;};
extern T1106 M1106;
struct S1107{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1258 _buckets;T2 _generation;};
extern T1107 M1107;
struct S516{T0* _destination_graph_nodes;T2 _hash_code;T0* _source_type;};
extern T516 M516;
struct S1109{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1260 _buckets;T2 _generation;};
extern T1109 M1109;
struct S1113{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1265 _buckets;T2 _generation;};
extern T1113 M1113;
struct S1114{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1266 _buckets;T2 _generation;};
extern T1114 M1114;
struct S1115{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1271 _buckets;T2 _generation;};
extern T1115 M1115;
struct S1116{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1272 _buckets;T2 _generation;};
extern T1116 M1116;
struct S1117{T2 _upper;T2 _capacity;T1275 _storage;T2 _generation;};
extern T1117 M1117;
struct S518{Tid id;T0* _context_type;T0* _feature_stamp;T0* _dynamic_type;};
extern T518 M518;
struct S1118{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1278 _buckets;T2 _generation;};
extern T1118 M1118;
struct S1119{T2 _upper;T2 _capacity;T1415 _storage;T2 _generation;};
extern T1119 M1119;
struct S551{T0* _agent_type;T0* _signature;};
extern T551 M551;
struct S1121{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1279 _buckets;T2 _generation;};
extern T1121 M1121;
struct S1122{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1283 _buckets;T2 _generation;};
extern T1122 M1122;
struct S1123{T2 _upper;T2 _capacity;T1285 _storage;T2 _generation;};
extern T1123 M1123;
struct S394{Tid id;T0* _result_type;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T394 M394;
struct S1125{Tid id;T0* _item;};
extern T1125 M1125;
struct S1126{T0* _next;T0* _key;T0* _item;};
extern T1126 M1126;
struct S1128{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1286 _buckets;T2 _generation;};
extern T1128 M1128;
struct S1129{T2 _upper;T2 _capacity;T1289 _storage;T2 _generation;};
extern T1129 M1129;
struct S625{T6 _local_definition;T6 _signature_ready;T0* _body_inherit;T0* _body_type;T0* _body_feature;T0* _build_definition;T0* _parents_edges;T0* _parents_type;T0* _parents_af;T0* _feature_name;T1 _computing_result_type;};
extern T625 M625;
struct S1130{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1292 _buckets;T2 _generation;};
extern T1130 M1130;
struct S1131{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1227 _storage;T2 _generation;};
extern T1131 M1131;
struct S1132{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1293 _buckets;T2 _generation;};
extern T1132 M1132;
extern T329 M329;
struct S1133{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1298 _buckets;T2 _generation;};
extern T1133 M1133;
struct S1138{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1301 _buckets;T2 _generation;};
extern T1138 M1138;
struct S1139{T2 _lower;T2 _upper;T2 _capacity;T1302 _storage;T2 _generation;};
extern T1139 M1139;
struct S1140{T2 _lower;T2 _upper;T2 _capacity;T1303 _storage;T2 _generation;};
extern T1140 M1140;
struct S1141{T2 _upper;T2 _capacity;T1229 _storage;T2 _generation;};
extern T1141 M1141;
struct S1142{Tid id;T0* _item;};
extern T1142 M1142;
struct S1143{T0* _next;T0* _key;T0* _item;};
extern T1143 M1143;
struct S1145{Tid id;T0* _item;};
extern T1145 M1145;
struct S1146{T0* _next;T0* _key;T10 _item;};
extern T1146 M1146;
struct S1149{T0* _next;T0* _item;};
extern T1149 M1149;
struct S1152{Tid id;T0* _item;};
extern T1152 M1152;
struct S1153{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1306 _buckets;T2 _generation;};
extern T1153 M1153;
struct S1154{T2 _upper;T2 _capacity;T1307 _storage;T2 _generation;};
extern T1154 M1154;
struct S400{Tid id;T0* _ensure_assertion;T0* _require_assertion;T2 _order;T0* _result_type;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T400 M400;
struct S1155{T2 _upper;T2 _capacity;T1308 _storage;T2 _generation;};
extern T1155 M1155;
struct S552{T0* _target_type;T0* _code;T6 _is_creation;T0* _feature_name;T0* _target_type_mark;T0* _c_name;};
extern T552 M552;
struct S1156{Tid id;T0* _item;};
extern T1156 M1156;
struct S1157{T0* _next;T0* _key;T0* _item;};
extern T1157 M1157;
struct S1160{T2 _upper;T2 _capacity;T1310 _storage;T2 _generation;};
extern T1160 M1160;
struct S1161{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1312 _buckets;T2 _generation;};
extern T1161 M1161;
struct S1163{T2 _upper;T2 _capacity;T1314 _storage;T2 _generation;};
extern T1163 M1163;
extern T301 M301;
extern T703 M703;
struct S1166{T0* _next;T2 _key;T0* _item;};
extern T1166 M1166;
struct S1167{Tid id;T0* _item;};
extern T1167 M1167;
struct S1169{T2 _upper;T2 _capacity;T1316 _storage;T2 _generation;};
extern T1169 M1169;
struct S1174{T0* _ordered_keys;T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1317 _buckets;T2 _generation;};
extern T1174 M1174;
struct S1175{Tid id;T0* _ordered_keys;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1035 _buckets;T2 _generation;};
extern T1175 M1175;
extern T515 M515;
struct S1177{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1323 _buckets;T2 _generation;};
extern T1177 M1177;
struct S762{Tid id;T0* _to_string;};
extern T762 M762;
struct S1179{T2 _upper;T2 _capacity;T1325 _storage;T2 _generation;};
extern T1179 M1179;
struct S1180{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1328 _buckets;T2 _generation;};
extern T1180 M1180;
struct S1181{Tid id;T0* _item;};
extern T1181 M1181;
struct S1182{T0* _next;T0* _key;T0* _item;};
extern T1182 M1182;
struct S1184{Tid id;T0* _item;};
extern T1184 M1184;
struct S1185{T0* _next;T0* _key;T0* _item;};
extern T1185 M1185;
struct S1188{T0* _next;T0* _item;};
extern T1188 M1188;
struct S1189{Tid id;T0* _item;};
extern T1189 M1189;
struct S1190{Tid id;T0* _item;};
extern T1190 M1190;
struct S1191{T0* _next;T0* _key;T2 _item;};
extern T1191 M1191;
struct S1193{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1329 _buckets;T2 _generation;};
extern T1193 M1193;
extern T686 M686;
struct S632{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T632 M632;
struct S640{Tid id;T2 _rank;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T640 M640;
struct S553{Tid id;T0* _result_type;T0* _inline_result;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T553 M553;
struct S645{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T645 M645;
struct S642{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T642 M642;
struct S643{Tid id;T0* _result_type;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T643 M643;
struct S638{Tid id;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T638 M638;
struct S641{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T641 M641;
struct S639{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T639 M639;
struct S644{Tid id;T0* _result_type;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T644 M644;
struct S635{Tid id;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T635 M635;
struct S634{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T634 M634;
struct S637{Tid id;T0* _value_memory;T2 _rank;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T637 M637;
struct S1195{T2 _lower;T2 _upper;T2 _capacity;T1332 _storage;T2 _generation;};
extern T1195 M1195;
struct S1196{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1335 _buckets;T2 _generation;};
extern T1196 M1196;
struct S1197{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1338 _buckets;T2 _generation;};
extern T1197 M1197;
struct S678{T0* _list;};
extern T678 M678;
struct S1204{T2 _upper;T2 _capacity;T1340 _storage;T2 _generation;};
extern T1204 M1204;
struct S1208{T2 _upper;T2 _capacity;T1341 _storage;T2 _generation;};
extern T1208 M1208;
struct S721{Tid id;T0* _lower_manifest_expression;T0* _upper_manifest_expression;T0* _upper;T0* _lower;};
extern T721 M721;
struct S1210{T2 _upper;T2 _capacity;T1342 _storage;T2 _generation;};
extern T1210 M1210;
struct S373{Tid id;T0* _manifest_expression;T0* _expression;};
extern T373 M373;
struct S666{Tid id;T0* _list;};
extern T666 M666;
struct S657{Tid id;T0* _declaration_type;T0* _type_mark;T0* _writable;};
extern T657 M657;
struct S1211{T2 _upper;T2 _capacity;T1343 _storage;T2 _generation;};
extern T1211 M1211;
struct S1212{T2 _upper;T2 _capacity;T1344 _storage;T2 _generation;};
extern T1212 M1212;
struct S662{Tid id;T6 _inside_agent_launcher_flag;T0* _capture_memory;T2 _rank;T0* _original_capture;T332 _start_position;};
extern T662 M662;
struct S1213{T2 _upper;T2 _capacity;T1346 _storage;T2 _generation;};
extern T1213 M1213;
struct S1214{T2 _upper;T2 _capacity;T1347 _storage;T2 _generation;};
extern T1214 M1214;
struct S1215{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1350 _buckets;T2 _generation;};
extern T1215 M1215;
struct S1219{T0* _next;T0* _item;};
extern T1219 M1219;
struct S1220{Tid id;T0* _item;};
extern T1220 M1220;
struct S1222{Tid id;T0* _item;};
extern T1222 M1222;
struct S1223{T0* _next;T0* _key;T0* _item;};
extern T1223 M1223;
struct S1231{T0* _next;T0* _key;T1 _item;};
extern T1231 M1231;
struct S1232{Tid id;T0* _item;};
extern T1232 M1232;
struct S1233{T2 _upper;T2 _capacity;T1351 _storage;T2 _generation;};
extern T1233 M1233;
struct S1234{T2 _upper;T2 _capacity;T1352 _storage;T2 _generation;};
extern T1234 M1234;
struct S1235{Tid id;T0* _item;};
extern T1235 M1235;
struct S1236{T0* _next;T0* _key;T0* _item;};
extern T1236 M1236;
struct S1238{T2 _lower;T2 _upper;T2 _capacity;T1353 _storage;T2 _generation;};
extern T1238 M1238;
struct S1240{T0* _next;T0* _key;T1 _item;};
extern T1240 M1240;
struct S1241{Tid id;T0* _item;};
extern T1241 M1241;
struct S1245{T0* _next_val;T0* _next_key;T0* _key;T0* _val;};
extern T1245 M1245;
struct S1247{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1354 _buckets;T2 _generation;};
extern T1247 M1247;
struct S1249{T0* _item;};
extern T1249 M1249;
struct S1250{Tid id;T0* _item;};
extern T1250 M1250;
struct S1251{T0* _next;T0* _key;T0* _item;};
extern T1251 M1251;
struct S1256{T0* _next;T0* _key;T0* _item;};
extern T1256 M1256;
struct S1257{Tid id;T0* _item;};
extern T1257 M1257;
struct S1261{T0* _next;T0* _item;};
extern T1261 M1261;
struct S1262{Tid id;T0* _item;};
extern T1262 M1262;
struct S1263{Tid id;T0* _item;};
extern T1263 M1263;
struct S1264{T0* _next;T0* _key;T0* _item;};
extern T1264 M1264;
struct S1267{T0* _next;T0* _item;};
extern T1267 M1267;
struct S1268{Tid id;T0* _item;};
extern T1268 M1268;
struct S1269{Tid id;T0* _item;};
extern T1269 M1269;
struct S1270{T0* _next;T0* _key;T0* _item;};
extern T1270 M1270;
struct S1273{T0* _next;T0* _item;};
extern T1273 M1273;
struct S1274{Tid id;T0* _item;};
extern T1274 M1274;
struct S1276{T0* _next;T0* _key;T0* _item;};
extern T1276 M1276;
struct S1277{Tid id;T0* _item;};
extern T1277 M1277;
struct S1280{T0* _next;T0* _item;};
extern T1280 M1280;
struct S1281{Tid id;T0* _item;};
extern T1281 M1281;
struct S1282{T0* _next;T0* _key;T0* _item;};
extern T1282 M1282;
struct S1284{Tid id;T0* _item;};
extern T1284 M1284;
struct S407{Tid id;T0* _compound;T2 _eiffel_parser_stamp;};
extern T407 M407;
struct S722{T332 _empty_position;T0* _headers;T0* _string_pool;};
extern T722 M722;
struct S1287{T0* _next;T0* _key;T0* _item;};
extern T1287 M1287;
struct S1288{Tid id;T0* _item;};
extern T1288 M1288;
struct S1290{Tid id;T0* _item;};
extern T1290 M1290;
struct S1291{T0* _next;T0* _key;T0* _item;};
extern T1291 M1291;
struct S1294{T0* _next;T329 _item;};
extern T1294 M1294;
struct S1295{Tid id;T0* _item;};
extern T1295 M1295;
struct S1296{Tid id;T0* _item;};
extern T1296 M1296;
struct S1297{T0* _next;T329 _key;T0* _item;};
extern T1297 M1297;
struct S1299{Tid id;T0* _item;};
extern T1299 M1299;
struct S1300{T0* _next;T0* _key;T0* _item;};
extern T1300 M1300;
struct S1304{Tid id;T0* _item;};
extern T1304 M1304;
struct S1305{T0* _next;T0* _key;T0* _item;};
extern T1305 M1305;
struct S350{Tid id;T2 _rank;T332 _start_position;T0* _result_type;T0* _declaration_type;};
extern T350 M350;
struct S1309{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1357 _buckets;T2 _generation;};
extern T1309 M1309;
struct S1311{T0* _next;T0* _key;T0* _item;};
extern T1311 M1311;
struct S1313{Tid id;T0* _item;};
extern T1313 M1313;
struct S1315{T0* _item;};
extern T1315 M1315;
struct S1318{T0* _next;T0* _key;T0* _item;};
extern T1318 M1318;
struct S1319{Tid id;T2 _generation;T2 _item_index;T0* _traversable;};
extern T1319 M1319;
struct S1321{Tid id;T0* _item;};
extern T1321 M1321;
struct S758{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T758 M758;
struct S759{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T759 M759;
struct S760{Tid id;T0* _group;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T760 M760;
struct S755{Tid id;T8 _data;T0* _id_map;};
extern T755 M755;
struct S756{Tid id;T8 _data;T6 _handle_list_dirty;T0* _handle_map;};
extern T756 M756;
struct S757{Tid id;};
extern T757 M757;
struct S1322{T0* _next;T0* _key;T0* _item;};
extern T1322 M1322;
struct S1324{Tid id;T0* _item;};
extern T1324 M1324;
struct S1326{Tid id;T0* _item;};
extern T1326 M1326;
struct S1327{T0* _next;T0* _key;T0* _item;};
extern T1327 M1327;
struct S1330{T0* _next;T0* _key;T0* _item;};
extern T1330 M1330;
struct S1331{Tid id;T0* _item;};
extern T1331 M1331;
struct S1333{Tid id;T0* _item;};
extern T1333 M1333;
struct S1334{T0* _next;T0* _key;T0* _item;};
extern T1334 M1334;
struct S1336{Tid id;T0* _item;};
extern T1336 M1336;
struct S1337{T0* _next;T0* _key;T0* _item;};
extern T1337 M1337;
struct S1339{T2 _upper;T2 _capacity;T1362 _storage;T2 _generation;};
extern T1339 M1339;
struct S1345{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1365 _buckets;T2 _generation;};
extern T1345 M1345;
struct S1348{Tid id;T0* _item;};
extern T1348 M1348;
struct S1349{T0* _next;T0* _key;T0* _item;};
extern T1349 M1349;
struct S1355{T0* _next;T0* _key;T0* _item;};
extern T1355 M1355;
struct S1356{Tid id;T0* _item;};
extern T1356 M1356;
struct S811{T0* _transitions;T0* _headers;T0* _tag_state;T2 _empty_idx;T2 _id;T2 _maxstate;T6 _has_empty;};
extern T811 M811;
struct S1358{T0* _next;T0* _item;};
extern T1358 M1358;
struct S1359{Tid id;T0* _item;};
extern T1359 M1359;
struct S1360{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1372 _buckets;T2 _generation;};
extern T1360 M1360;
struct S1361{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1375 _buckets;T2 _generation;};
extern T1361 M1361;
struct S1363{Tid id;T0* _item;};
extern T1363 M1363;
struct S1364{T0* _next;T0* _key;T0* _item;};
extern T1364 M1364;
struct S331{T2 _item;};
extern T331 M331;
struct S1366{T2 _upper;T2 _capacity;T1377 _storage;T2 _generation;};
extern T1366 M1366;
struct S1367{T0* _free_nodes;T0* _mem_lnk;T2 _mem_idx;T0* _last_link;T0* _first_link;T2 _upper;T2 _generation;};
extern T1367 M1367;
struct S1368{T2 _item_2;T3 _item_1;};
extern T1368 M1368;
struct S1369{T2 _value_memory;T0* _lost_nodes;T6 _map_dirty;T0* _map;T2 _key_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1369 M1369;
struct S1371{T0* _next;T2 _key;T0* _item;};
extern T1371 M1371;
struct S1373{Tid id;T0* _item;};
extern T1373 M1373;
struct S1374{T0* _next;T2 _key;T0* _item;};
extern T1374 M1374;
struct S1376{Tid id;T0* _item;};
extern T1376 M1376;
struct S1380{T0* _item;};
extern T1380 M1380;
struct S1381{T0* _next;T0* _item;};
extern T1381 M1381;
struct S1382{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1391 _buckets;T2 _generation;};
extern T1382 M1382;
struct S1383{T2 _upper;T2 _capacity;T1392 _storage;T2 _generation;};
extern T1383 M1383;
struct S1384{T2 _value;T2 _balance;T2 _key;T0* _right;T0* _left;int _safe_equal_key;};
extern T1384 M1384;
struct S1387{T0* _item;};
extern T1387 M1387;
struct S1388{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1395 _buckets;T2 _generation;};
extern T1388 M1388;
struct S1389{Tid id;T0* _item;};
extern T1389 M1389;
struct S1390{T0* _next;T0* _key;T0* _item;};
extern T1390 M1390;
struct S1393{Tid id;T0* _item;};
extern T1393 M1393;
struct S1394{T0* _next;T0* _key;T0* _item;};
extern T1394 M1394;
struct S54{T2 _capacity;T9 _buffer;T0* _filter;};
extern T54 M54;
struct S764{Tid id;T6 _valid_cache;T0* _to_string_cache;T3 _drive;T0* _path;};
extern T764 M764;
extern T725 M725;
struct S650{Tid id;T3 _info_code;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T650 M650;
struct S1400{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1425 _buckets;T2 _generation;};
extern T1400 M1400;
struct S1401{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1427 _buckets;T2 _generation;};
extern T1401 M1401;
struct S1403{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1432 _buckets;T2 _generation;};
extern T1403 M1403;
struct S1406{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1435 _buckets;T2 _generation;};
extern T1406 M1406;
struct S656{Tid id;T0* _dynamic_type;T0* _side_effect_free_expression;};
extern T656 M656;
struct S659{Tid id;T0* _target_type;T0* _target;T0* _tagged_data_map;};
extern T659 M659;
struct S660{Tid id;T0* _live_type;T0* _dynamic_dispatch_temporary1;};
extern T660 M660;
struct S663{Tid id;T0* _target_type;T0* _feature_stamp;T332 _start_position;};
extern T663 M663;
struct S665{Tid id;T0* _dynamic_dispatch_temporary1;};
extern T665 M665;
struct S658{Tid id;T0* _tag;T6 _collect_flag;T0* _original_expression;T332 _start_position;T0* _tagged_data_map;};
extern T658 M658;
struct S653{Tid id;T0* _expression;T2 _eiffel_parser_stamp;};
extern T653 M653;
struct S664{Tid id;T0* _type_mark;T332 _start_position;};
extern T664 M664;
struct S646{Tid id;T2 _error_code;T0* _error_message;T332 _start_position;T2 _eiffel_parser_stamp;int _exceptions;};
extern T646 M646;
extern T323 M323;
struct S1407{T2 _upper;T2 _capacity;T1415 _storage;T2 _generation;};
extern T1407 M1407;
struct S1408{T0* _lost_nodes;T6 _map_dirty;T0* _map;T332 _item_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1408 M1408;
struct S517{Tid id;T0* _expression_type;T0* _expression;T0* _resolved_memory;};
extern T517 M517;
struct S1409{T2 _upper;T2 _capacity;T1442 _storage;T2 _generation;};
extern T1409 M1409;
struct S667{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _target;T0* _agent_type;};
extern T667 M667;
struct S655{Tid id;T0* _target_type;T0* _feature_stamp;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T655 M655;
struct S651{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _agent_type;T2 _eiffel_parser_stamp;T0* _target;};
extern T651 M651;
struct S1410{T0* _item;};
extern T1410 M1410;
struct S1411{T2 _upper;T2 _capacity;T1443 _storage;T2 _generation;};
extern T1411 M1411;
struct S1412{T2 _upper;T2 _capacity;T1444 _storage;T2 _generation;};
extern T1412 M1412;
extern T296 M296;
struct S1413{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1445 _buckets;T2 _generation;};
extern T1413 M1413;
struct S1414{T2 _upper;T2 _capacity;T1448 _storage;T2 _generation;};
extern T1414 M1414;
struct S1420{T2 _upper;T2 _capacity;T1449 _storage;T2 _generation;};
extern T1420 M1420;
struct S520{T0* _code;};
extern T520 M520;
struct S115{Tid id;T6 _can_be_dropped_flag;T6 _precomputable;};
extern T115 M115;
struct S723{Tid id;T6 _trace_result;T0* _trace;T0* _type;};
extern T723 M723;
struct S728{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T728 M728;
struct S109{T6 _used;};
extern T109 M109;
struct S1422{T2 _lower;T2 _upper;T2 _capacity;T1253 _storage;T2 _generation;};
extern T1422 M1422;
struct S408{Tid id;T0* _declaration_type_memory;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T408 M408;
struct S405{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T332 _start_position;T2 _eiffel_parser_stamp;};
extern T405 M405;
struct S360{Tid id;T3 _array_name;T0* _target_type;T332 _start_position;};
extern T360 M360;
struct S773{Tid id;T0* _result_type;T0* _value;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T773 M773;
struct S629{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T629 M629;
struct S775{Tid id;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T775 M775;
struct S772{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T772 M772;
struct S524{Tid id;T6 _side_effect_free_flag;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T524 M524;
struct S774{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T774 M774;
struct S628{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T628 M628;
struct S1423{T2 _upper;T2 _capacity;T1450 _storage;T2 _generation;};
extern T1423 M1423;
struct S813{Tid id;T0* _process;T2 _filtered_descriptor;T6 _is_connected;T8 _pipe;};
extern T813 M813;
struct S815{Tid id;T0* _process;T2 _filtered_descriptor;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T815 M815;
struct S816{Tid id;T8 _handle;T0* _process;T6 _is_connected;T8 _pipe;};
extern T816 M816;
struct S817{Tid id;T8 _handle;T0* _process;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T817 M817;
struct S1424{T0* _next;T0* _key;T0* _item;};
extern T1424 M1424;
struct S1426{Tid id;T0* _item;};
extern T1426 M1426;
struct S1428{T0* _next;T0* _item;};
extern T1428 M1428;
struct S1429{Tid id;T0* _item;};
extern T1429 M1429;
struct S1430{Tid id;T0* _item;};
extern T1430 M1430;
struct S1431{T0* _next;T0* _key;T0* _item;};
extern T1431 M1431;
struct S1433{Tid id;T0* _item;};
extern T1433 M1433;
struct S1434{T0* _next;T0* _key;T0* _item;};
extern T1434 M1434;
struct S1436{T2 _upper;T2 _capacity;T1451 _storage;T2 _generation;};
extern T1436 M1436;
struct S1437{T2 _balance;T332 _item;T0* _right;T0* _left;int _safe_equal;};
extern T1437 M1437;
struct S1440{T0* _item;};
extern T1440 M1440;
struct S1441{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1455 _buckets;T2 _generation;};
extern T1441 M1441;
struct S661{Tid id;T0* _list;T332 _start_position;};
extern T661 M661;
struct S693{Tid id;T11 _value;};
extern T693 M693;
struct S1446{T0* _next;T0* _item;};
extern T1446 M1446;
struct S1447{Tid id;T0* _item;};
extern T1447 M1447;
struct S1453{Tid id;T0* _item;};
extern T1453 M1453;
struct S1454{T0* _next;T0* _key;T0* _item;};
extern T1454 M1454;
struct S966{T0* _c_auto_init_plugin_deps_name;T0* _c_auto_init_plugin_deps_location;T0* _c_auto_init_function_name;T0* _c_compiler_options;T0* _c_linker_options;T0* _c_library_paths;T0* _c_libraries;T0* _c_header_paths;T0* _c_headers;T0* _c_sources;T332 _start_position;T6 _is_included;T6 _auto_init_done;T527 _bd;T0* _path;T0* _name;T2 _hash_code;};
extern T966 M966;
struct S624{T2 _declared_tmp_counter;};
extern T624 M624;
struct S550{T0* _type;T0* _doc_tag;T2 _number;T2 _eiffel_parser_stamp;};
extern T550 M550;
struct S1468{T2 _upper;T2 _capacity;T1490 _storage;T2 _generation;};
extern T1468 M1468;
struct S1469{T2 _lower;T2 _upper;T2 _capacity;T1491 _storage;T2 _generation;};
extern T1469 M1469;
struct S544{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T544 M544;
struct S545{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T545 M545;
struct S546{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T546 M546;
struct S547{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T547 M547;
struct S548{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T548 M548;
struct S549{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T549 M549;
struct S1475{T2 _upper;T2 _capacity;T1492 _storage;T2 _generation;};
extern T1475 M1475;
struct S1479{Tid id;T2 _generation;T2 _item_index;T0* _dictionary;};
extern T1479 M1479;
struct S787{Tid id;T2 _count;T2 _index;};
extern T787 M787;
struct S1481{T2 _lower;T2 _upper;T2 _capacity;T1307 _storage;T2 _generation;};
extern T1481 M1481;
struct S784{Tid id;T6 _item;};
extern T784 M784;
struct S1487{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1495 _buckets;T2 _generation;};
extern T1487 M1487;
struct S1488{T2 _upper;T2 _capacity;T1497 _storage;T2 _generation;};
extern T1488 M1488;
struct S698{T6 _negative;T2 _offset;T2 _integer_length;T2 _capacity;T1094 _storage;};
extern T698 M698;
struct S1489{T2 _upper;T2 _capacity;T1498 _storage;T2 _generation;};
extern T1489 M1489;
struct S1493{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1499 _buckets;T2 _generation;};
extern T1493 M1493;
struct S1494{T0* _next;T0* _key;T0* _item;};
extern T1494 M1494;
struct S1496{Tid id;T0* _item;};
extern T1496 M1496;
struct S695{Tid id;T1094 _storage;T2 _capacity;T6 _negative;};
extern T695 M695;
struct S1500{T0* _next;T0* _key;T0* _item;};
extern T1500 M1500;
struct S1501{Tid id;T0* _item;};
extern T1501 M1501;
struct S1514{T2 _upper;T2 _capacity;T1199 _storage;T2 _generation;};
extern T1514 M1514;
struct S771{Tid id;T0* _item;};
extern T771 M771;
struct S1515{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1519 _buckets;T2 _generation;};
extern T1515 M1515;
struct S769{Tid id;T2 _item;};
extern T769 M769;
struct S1518{T2 _upper;T2 _capacity;T9 _storage;T2 _generation;};
extern T1518 M1518;
struct S1520{T0* _next;T2 _key;T0* _item;};
extern T1520 M1520;
struct S1521{Tid id;T0* _item;};
extern T1521 M1521;
extern char*s339_1195446850A;
extern char*s101_0A;
extern char*s104_1418906530A;
extern char*s29_424424A;
extern char*s612_25969530A;
extern char*s100_10A;
extern char*s29_424430A;
extern char*s361_1114345928A;
extern char*s625_1983193131A;
extern char*s26_199827552A;
extern char*s104_1564992795A;
extern char*s612_59375621A;
extern char*s104_1772404517A;
extern char*s413_772854717A;
extern char*s93_1078639380A;
extern char*s93_1138390195A;
extern char*s104_523400916A;
extern char*s104_12331A;
extern char*s589_1880914324A;
extern char*s93_34A;
extern char*s29_38A;
extern char*s104_40A;
extern char*s104_41A;
extern char*s604_7233618A;
extern char*s29_42A;
extern char*s29_43A;
extern char*s104_44A;
extern char*s104_36951A;
extern char*s29_45A;
extern char*s446_46A;
extern char*s29_47A;
extern char*s602_48A;
extern char*s25_1889925553A;
extern char*s113_1071750288A;
extern char*s404_532898088A;
extern char*s589_1664036235A;
extern char*s462_58A;
extern char*s589_1023028228A;
extern char*s613_59A;
extern char*s29_60A;
extern char*s29_61A;
extern char*s612_2017590A;
extern char*s29_62A;
extern char*s26_63A;
extern char*s767_1883030297A;
extern char*s29_64A;
extern char*s95_1684808173A;
extern char*s615_1216329562A;
extern char*s93_67A;
extern char*s93_1268871407A;
extern char*s612_219498506A;
extern char*s26_1202957293A;
extern char*s30_212160365A;
extern char*s606_80037A;
extern char*s271_12376A;
extern char*s107_325166540A;
extern char*s104_77A;
extern char*s414_77A;
extern char*s785_79A;
extern char*s104_1206795525A;
extern char*s104_441192857A;
extern char*s589_82A;
extern char*s778_306811962A;
extern char*s780_1665297219A;
extern char*s104_1645835456A;
extern char*s615_84A;
extern char*s104_2189840A;
extern char*s101_301485A;
extern char*s104_392938270A;
extern char*s589_585895143A;
extern char*s613_91A;
extern char*s93_1656587411A;
extern char*s104_93A;
extern char*s29_94A;
extern char*s93_916596A;
extern char*s785_2008215484A;
extern char*s101_99A;
extern char*s780_101A;
extern char*s263_376816512A;
extern char*s104_273430505A;
extern char*s611_158634393A;
extern char*s26_104A;
extern char*s606_105A;
extern char*s101_109A;
extern char*s423_178490A;
extern char*s29_112335826A;
extern char*s104_114A;
extern char*s88_772983982A;
extern char*s550_1399364920A;
extern char*s26_118A;
extern char*s611_6271A;
extern char*s469_123A;
extern char*s29_124A;
extern char*s29_126A;
extern char*s104_273430530A;
extern char*s104_391886489A;
extern char*s357_1485085274A;
extern char*s388_1089483711A;
extern char*s612_579867211A;
extern char*s93_629850238A;
extern char*s104_1629400044A;
extern char*s29_80109A;
extern char*s606_252339A;
extern char*s107_612971904A;
extern char*s423_202915491A;
extern char*s386_446205995A;
extern char*s606_6305A;
extern char*s93_280897875A;
extern char*s394_1324593410A;
extern char*s30_1473988901A;
extern char*s552_168A;
extern char*s412_145102259A;
extern char*s93_339436953A;
extern char*s101_539873441A;
extern char*s104_1853640928A;
extern char*s446_1876110531A;
extern char*s93_470853074A;
extern char*s104_6330A;
extern char*s101_180A;
extern char*s104_116813823A;
extern char*s104_1368099455A;
extern char*s104_30942A;
extern char*s104_37095A;
extern char*s780_61699A;
extern char*s30_436911A;
extern char*s606_1341914655A;
extern char*s94_1604340919A;
extern char*s263_1341859296A;
extern char*s625_42706587A;
extern char*s93_194A;
extern char*s100_195A;
extern char*s104_475921520A;
extern char*s588_619030689A;
extern char*s273_200A;
extern char*s606_117385886A;
extern char*s104_6355A;
extern char*s104_204A;
extern char*s604_205A;
extern char*s99_580488532A;
extern char*s780_212314278A;
extern char*s93_639285944A;
extern char*s406_1085830094A;
extern char*s100_215A;
extern char*s374_905138318A;
extern char*s263_216A;
extern char*s323_2070057757A;
extern char*s29_217A;
extern char*s462_218A;
extern char*s29_218A;
extern char*s612_160146A;
extern char*s104_993675817A;
extern char*s29_220A;
extern char*s93_873294598A;
extern char*s29_54688766A;
extern char*s612_4638080A;
extern char*s604_226A;
extern char*s93_1922692108A;
extern char*s104_227A;
extern char*s263_1302880443A;
extern char*s323_1306325004A;
extern char*s104_585944489A;
extern char*s603_230A;
extern char*s604_230A;
extern char*s606_236A;
extern char*s557_237A;
extern char*s104_240A;
extern char*s101_240A;
extern char*s723_241A;
extern char*s93_241A;
extern char*s604_36137368A;
extern char*s556_244A;
extern char*s612_6396A;
extern char*s104_245A;
extern char*s589_246A;
extern char*s589_247A;
extern char*s612_247A;
extern char*s29_1682815431A;
extern char*s104_249A;
extern char*s104_251A;
extern char*s88_251A;
extern char*s273_252A;
extern char*s589_254A;
extern char*s612_255A;
extern char*s557_255A;
extern char*s100_542094038A;
extern char*s585_257A;
extern char*s104_257A;
extern char*s603_258A;
extern char*s589_259A;
extern char*s606_259A;
extern char*s612_6411A;
extern char*s100_262A;
extern char*s30_10703002A;
extern char*s104_1312728230A;
extern char*s606_264A;
extern char*s612_265A;
extern char*s604_184795A;
extern char*s589_436987A;
extern char*s437_1428348580A;
extern char*s108_270A;
extern char*s394_190952A;
extern char*s412_271A;
extern char*s104_272A;
extern char*s612_6425A;
extern char*s604_1097836905A;
extern char*s589_274A;
extern char*s94_116346440A;
extern char*s104_1017947719A;
extern char*s537_276A;
extern char*s104_277B;
extern char*s104_277C;
extern char*s104_277A;
extern char*s785_277A;
extern char*s365_278A;
extern char*s100_1255776138A;
extern char*s100_1131876546A;
extern char*s104_282A;
extern char*s29_282A;
extern char*s104_284B;
extern char*s104_284A;
extern char*s516_287A;
extern char*s516_80251A;
extern char*s618_293A;
extern char*s618_294A;
extern char*s469_594795843A;
extern char*s618_295A;
extern char*s612_296A;
extern char*s29_296A;
extern char*s101_297A;
extern char*s606_244699380A;
extern char*s101_298A;
extern char*s423_299A;
extern char*s273_300A;
extern char*s101_301A;
extern char*s966_302A;
extern char*s104_6455A;
extern char*s469_305A;
extern char*s104_1754886761A;
extern char*s104_317A;
extern char*s29_406284A;
extern char*s29_42134669A;
extern char*s413_325449730A;
extern char*s104_1238750212A;
extern char*s269_90592250A;
extern char*s93_1088075316A;
extern char*s113_322A;
extern char*s611_35343969A;
extern char*s758_324A;
extern char*s612_325A;
extern char*s101_326A;
extern char*s589_327A;
extern char*s611_197159A;
extern char*s101_327A;
extern char*s348_327A;
extern char*s28_329A;
extern char*s557_1710309A;
extern char*s28_331A;
extern char*s104_10739979A;
extern char*s589_815493762A;
extern char*s101_333A;
extern char*s101_334A;
extern char*s28_334A;
extern char*s107_107193812A;
extern char*s31_336A;
extern char*s552_142931125A;
extern char*s101_340A;
extern char*s101_341A;
extern char*s104_881278717A;
extern char*s604_345A;
extern char*s29_1501191A;
extern char*s463_348A;
extern char*s30_437070A;
extern char*s723_351A;
extern char*s109_1568216255A;
extern char*s100_36611104A;
extern char*s29_1578334651A;
extern char*s652_301503927A;
extern char*s511_360A;
extern char*s365_360A;
extern char*s29_361A;
extern char*s399_1136256141A;
extern char*s462_2140868216A;
extern char*s615_754574290A;
extern char*s606_366A;
extern char*s588_775396A;
extern char*s94_1700247488A;
extern char*s29_371A;
extern char*s511_372A;
extern char*s388_376A;
extern char*s780_377A;
extern char*s104_379A;
extern char*s29_548214405A;
extern char*s456_898426A;
extern char*s101_1561265653A;
extern char*s104_175857472A;
extern char*s104_382A;
extern char*s612_6534A;
extern char*s588_197373672A;
extern char*s101_62728285A;
extern char*s604_1639500234A;
extern char*s112_397A;
extern char*s611_6550A;
extern char*s446_1962655329A;
extern char*s101_402A;
extern char*s589_2054563574A;
extern char*s391_1442631340A;
extern char*s30_9909665A;
extern char*s104_6559A;
extern char*s780_1748680500A;
extern char*s93_1011636926A;
extern char*s612_1340573954A;
extern char*s589_1484470448A;
extern char*s589_1212159A;
extern char*s93_1733505988A;
extern char*s104_1601653158A;
extern char*s612_419A;
extern char*s348_892535123A;
extern char*s588_1809907567A;
extern char*s104_1957408550A;
extern char*s104_781060556A;
extern char*s104_726728775A;
extern char*s413_1604599495A;
extern char*s399_343527626A;
extern char*s94_74239A;
extern char*s589_6580A;
extern char*s372_1808265259A;
extern char*s585_86545A;
extern char*s423_205111678A;
extern char*s94_696478167A;
extern char*s266_38905513A;
extern char*s446_1604408825A;
extern char*s625_1447552176A;
extern char*s29_1603529235A;
extern char*s780_526175446A;
extern char*s29_80416A;
extern char*s104_1793244543A;
extern char*s29_878996813A;
extern char*s100_408537579A;
extern char*s104_10666295A;
extern char*s104_339308075A;
extern char*s394_1297676933A;
extern char*s780_6614A;
extern char*s323_1489034545A;
extern char*s966_1935504882A;
extern char*s104_471A;
extern char*s618_471A;
extern char*s652_1084920002A;
extern char*s618_474A;
extern char*s414_1240817101A;
extern char*s618_476A;
extern char*s101_1192507148A;
extern char*s29_1639475718A;
extern char*s613_529853775A;
extern char*s657_1937147216A;
extern char*s100_1459577427A;
extern char*s423_397816412A;
extern char*s101_1721407046A;
extern char*s463_1577658176A;
extern char*s589_283801480A;
extern char*s625_1655357614A;
extern char*s764_498A;
extern char*s30_2073386A;
extern char*s93_2117894368A;
extern char*s93_924385084A;
extern char*s611_6655A;
extern char*s26_613587359A;
extern char*s604_506A;
extern char*s104_215791A;
extern char*s606_1181502A;
extern char*s966_1942892277A;
extern char*s93_1524784203A;
extern char*s104_365905049A;
extern char*s458_334725631A;
extern char*s767_1000694404A;
extern char*s330_25373399A;
extern char*s104_526A;
extern char*s394_889865702A;
extern char*s29_534A;
extern char*s612_535A;
extern char*s101_6687A;
extern char*s483_2057854492A;
extern char*s104_932172292A;
extern char*s93_955638361A;
extern char*s93_9897510A;
extern char*s30_10315778A;
extern char*s29_552A;
extern char*s462_1490203324A;
extern char*s25_833055089A;
extern char*s104_1906398440A;
extern char*s104_1901889757A;
extern char*s111_557A;
extern char*s780_25822456A;
extern char*s676_559A;
extern char*s93_1471861047A;
extern char*s606_550508910A;
extern char*s30_1532343833A;
extern char*s767_68224A;
extern char*s361_1744510279A;
extern char*s273_22396357A;
extern char*s604_570A;
extern char*s114_570A;
extern char*s606_1832703325A;
extern char*s30_54418471A;
extern char*s93_1228072329A;
extern char*s104_1988895671A;
extern char*s557_166654A;
extern char*s263_1476966395A;
extern char*s104_1290234339A;
extern char*s93_1961160815A;
extern char*s391_1037594318A;
extern char*s93_751585121A;
extern char*s30_2233396A;
extern char*s26_1724187394A;
extern char*s30_48390502A;
extern char*s97_589A;
extern char*s618_591A;
extern char*s101_2077353217A;
extern char*s263_2132072515A;
extern char*s31_594A;
extern char*s29_9713026A;
extern char*s29_36193081A;
extern char*s503_2080244194A;
extern char*s30_600A;
extern char*s94_1317175740A;
extern char*s100_1463938603A;
extern char*s101_603A;
extern char*s780_6755A;
extern char*s780_604A;
extern char*s93_1207921682A;
extern char*s100_801894175A;
extern char*s435_1773450779A;
extern char*s93_437331A;
extern char*s399_1260488135A;
extern char*s93_611A;
extern char*s29_548331507A;
extern char*s778_614A;
extern char*s611_185146A;
extern char*s104_1419097826A;
extern char*s100_427937988A;
extern char*s101_179868158A;
extern char*s612_475042348A;
extern char*s423_620A;
extern char*s589_68284A;
extern char*s104_625A;
extern char*s104_5395053A;
extern char*s30_627A;
extern char*s606_693716559A;
extern char*s113_354654986A;
extern char*s29_51915068A;
extern char*s107_1661847054A;
extern char*s94_85511833A;
extern char*s604_1367878466A;
extern char*s104_635A;
extern char*s29_636A;
extern char*s90_1861287086A;
extern char*s464_449661A;
extern char*s30_640A;
extern char*s606_2251910A;
extern char*s601_5395074A;
extern char*s100_1174466439A;
extern char*s104_651A;
extern char*s30_1690381566A;
extern char*s29_1744399653A;
extern char*s612_6810A;
extern char*s97_660A;
extern char*s30_661A;
extern char*s99_97543221A;
extern char*s601_4570857A;
extern char*s606_1175100011A;
extern char*s29_669A;
extern char*s612_670A;
extern char*s30_670A;
extern char*s552_671A;
extern char*s26_525197655A;
extern char*s589_43730A;
extern char*s393_925886099A;
extern char*s612_351281A;
extern char*s101_674A;
extern char*s93_1135641353A;
extern char*s780_6830A;
extern char*s625_378711602A;
extern char*s101_1087245292A;
extern char*s82_685A;
extern char*s101_686A;
extern char*s101_689A;
extern char*s104_1713607783A;
extern char*s100_1828403897A;
extern char*s611_1824264277A;
extern char*s611_905827712A;
extern char*s778_699A;
extern char*s612_31455A;
extern char*s586_619166512A;
extern char*s589_228498053A;
extern char*s269_875060418A;
extern char*s29_1115958189A;
extern char*s29_1206543966A;
extern char*s601_4570907A;
extern char*s25_1325879523A;
extern char*s625_1197649626A;
extern char*s93_316863332A;
extern char*s589_10937200A;
extern char*s104_6877A;
extern char*s101_13028A;
extern char*s29_80694A;
extern char*s557_1290234494A;
extern char*s95_1385667261A;
extern char*s29_849712179A;
extern char*s601_4570932A;
extern char*s272_740A;
extern char*s611_101227749A;
extern char*s606_744A;
extern char*s101_1772235A;
extern char*s606_750A;
extern char*s606_1261705A;
extern char*s671_1601130656A;
extern char*s100_1460051321A;
extern char*s263_527202963A;
extern char*s104_1195084695A;
extern char*s394_613384625A;
extern char*s550_2007779419A;
extern char*s101_643573734A;
extern char*s469_589832448A;
extern char*s611_40031469A;
extern char*s601_4570957A;
extern char*s613_68406039A;
extern char*s780_5161461A;
extern char*s606_644847010A;
extern char*s29_567319806A;
extern char*s606_1124563501A;
extern char*s105_6926A;
extern char*s101_51699930A;
extern char*s388_7867907A;
extern char*s29_1597390874A;
extern char*s29_567319812A;
extern char*s104_7720290A;
extern char*s601_4570982A;
extern char*s109_899910547A;
extern char*s780_2092663259A;
extern char*s612_6946A;
extern char*s104_1994813154A;
extern char*s29_567319829A;
extern char*s413_282823780A;
extern char*s612_1824713404A;
extern char*s29_9676326A;
extern char*s588_926003101A;
extern char*s589_80771A;
extern char*s263_1091711046A;
extern char*s612_6965A;
extern char*s601_4571007A;
extern char*s29_1671553525A;
extern char*s104_1981256377A;
extern char*s101_10937305A;
extern char*s589_173055A;
extern char*s464_55156846A;
extern char*s93_52979396A;
extern char*s491_1083118122A;
extern char*s606_400650A;
extern char*s606_86950A;
extern char*s30_400652A;
extern char*s612_427390771A;
extern char*s263_1707020207A;
extern char*s601_4571032A;
extern char*s589_345908476A;
extern char*s612_6995A;
extern char*s88_142319A;
extern char*s30_11251026A;
extern char*s413_170383550A;
extern char*s615_7006A;
extern char*s101_373286592A;
extern char*s93_1275558331A;
extern char*s601_4571057A;
extern char*s93_888875725A;
extern char*s780_1648235130A;
extern char*s29_1498845794A;
extern char*s462_1331532446A;
extern char*s391_1769582063A;
extern char*s612_7025A;
extern char*s780_1288623074A;
extern char*s478_672729595A;
extern char*s782_730579755A;
extern char*s263_1130154866A;
extern char*s394_923532A;
extern char*s966_7037A;
extern char*s100_1814748872A;
extern char*s330_345225764A;
extern char*s606_1291760099A;
extern char*s29_80854A;
extern char*s29_13194A;
extern char*s266_1820580025A;
extern char*s612_1689502217A;
extern char*s601_185428A;
extern char*s30_10193105A;
extern char*s28_831708366A;
extern char*s113_1972884945A;
extern char*s29_10377643A;
extern char*s601_185438A;
extern char*s101_703496930A;
extern char*s782_1295032451A;
extern char*s100_604558099A;
extern char*s601_185443A;
extern char*s652_501491947A;
extern char*s601_185448A;
extern char*s100_1786429697A;
extern char*s394_1552156565A;
extern char*s601_185453A;
extern char*s30_1975394A;
extern char*s29_1594034A;
extern char*s29_2246041A;
extern char*s601_185458A;
extern char*s780_1012357115A;
extern char*s601_185463A;
extern char*s262_51017327A;
extern char*s104_934A;
extern char*s362_1809213019A;
extern char*s30_1839765037A;
extern char*s601_185468A;
extern char*s101_830570470A;
extern char*s557_481249030A;
extern char*s721_495673125A;
extern char*s107_1752297822A;
extern char*s104_1642367158A;
extern char*s104_273431355A;
extern char*s263_708319A;
extern char*s780_915251302A;
extern char*s426_171706123A;
extern char*s101_50863580A;
extern char*s542_1747846A;
extern char*s606_7118A;
extern char*s29_1607595572A;
extern char*s625_557767498A;
extern char*s30_1992063831A;
extern char*s490_1962243783A;
extern char*s104_207160501A;
extern char*s615_124454155A;
extern char*s469_1496963692A;
extern char*s606_54714119A;
extern char*s612_87090A;
extern char*s104_1586448448A;
extern char*s780_77282146A;
extern char*s612_185515A;
extern char*s437_540477054A;
extern char*s77_1761241425A;
extern char*s104_1500500537A;
extern char*s104_437715A;
extern char*s93_1587734026A;
extern char*s780_160930A;
extern char*s93_1703575813A;
extern char*s615_160937A;
extern char*s263_89867121A;
extern char*s394_205616643A;
extern char*s104_514187710A;
extern char*s441_1615634978A;
extern char*s93_2080029331A;
extern char*s101_851047233A;
extern char*s104_1346694814A;
extern char*s100_1365578385A;
extern char*s93_1090616383A;
extern char*s104_308580A;
extern char*s100_713806135A;
extern char*s339_646901709A;
extern char*s93_1581435442A;
extern char*s440_743946038A;
extern char*s669_1043A;
extern char*s101_17494489A;
extern char*s670_1047A;
extern char*s273_7207A;
extern char*s30_10876026A;
extern char*s104_437780A;
extern char*s93_1380562254A;
extern char*s625_1092806174A;
extern char*s402_1719402393A;
extern char*s99_23085765A;
extern char*s104_1102979933A;
extern char*s780_1574324912A;
extern char*s31_87180A;
extern char*s88_439490016A;
extern char*s100_385188989A;
extern char*s93_1934613587A;
extern char*s104_965818786A;
extern char*s467_68732A;
extern char*s263_208962844A;
extern char*s93_2091587115A;
extern char*s26_142550A;
extern char*s104_4620481A;
extern char*s472_7232A;
extern char*s394_156630152A;
extern char*s604_167166A;
extern char*s25_2096409513A;
extern char*s26_1090A;
extern char*s613_1102979958A;
extern char*s542_1027113524A;
extern char*s606_1348915394A;
extern char*s104_1901755A;
extern char*s604_580292587A;
extern char*s452_99702656A;
extern char*s100_1839715989A;
extern char*s556_302501127A;
extern char*s446_1630520481A;
extern char*s785_1101A;
extern char*s455_1554555636A;
extern char*s394_1277330071A;
extern char*s104_893005A;
extern char*s780_2136427942A;
extern char*s469_1034900711A;
extern char*s423_1112A;
extern char*s93_1617443474A;
extern char*s104_588411932A;
extern char*s511_1330923746A;
extern char*s88_1121A;
extern char*s357_327012886A;
extern char*s93_1717397235A;
extern char*s93_1003875089A;
extern char*s31_2141685A;
extern char*s604_1446625A;
extern char*s339_1759986771A;
extern char*s104_4620546A;
extern char*s780_7296A;
extern char*s523_927498134A;
extern char*s611_10322525A;
extern char*s404_1099750743A;
extern char*s612_1628970485A;
extern char*s271_1133285999A;
extern char*s29_1157A;
extern char*s322_1981041429A;
extern char*s104_273443870A;
extern char*s585_7317A;
extern char*s104_1350760769A;
extern char*s100_1535001676A;
extern char*s611_419443A;
extern char*s458_1867518592A;
extern char*s101_1964046235A;
extern char*s394_905382A;
extern char*s104_1142598643A;
extern char*s263_305465997A;
extern char*s29_1944903A;
extern char*s425_235492225A;
extern char*s29_55040341A;
extern char*s542_28418819A;
extern char*s30_10648581A;
extern char*s373_1552710436A;
extern char*s93_1819737650A;
extern char*s100_1206593669A;
extern char*s13_1210A;
extern char*s31_2246326A;
extern char*s101_1215A;
extern char*s263_767646015A;
extern char*s266_1641573945A;
extern char*s104_1839365502A;
extern char*s104_1319581398A;
extern char*s29_9529116A;
extern char*s604_11300605A;
extern char*s780_7374A;
extern char*s606_1923566548A;
extern char*s113_1430004157A;
extern char*s612_1671074150A;
extern char*s394_1324951230A;
extern char*s28_1897129554A;
extern char*s273_188916891A;
extern char*s93_155929078A;
extern char*s100_646243744A;
extern char*s29_276937706A;
extern char*s29_1235A;
extern char*s93_911265735A;
extern char*s604_1240A;
extern char*s780_407207A;
extern char*s413_1700082283A;
extern char*s612_520388145A;
extern char*s29_55040391A;
extern char*s612_704592146A;
extern char*s29_1247A;
extern char*s455_1377394679A;
extern char*s372_1088174660A;
extern char*s93_445001496A;
extern char*s611_52555395A;
extern char*s26_513843490A;
extern char*s29_55040401A;
extern char*s104_499425548A;
extern char*s273_4479182A;
extern char*s589_1485929081A;
extern char*s29_2067995A;
extern char*s612_870841390A;
extern char*s104_1919660703A;
extern char*s104_1264A;
extern char*s100_1265A;
extern char*s589_1269A;
extern char*s104_1271B;
extern char*s104_1271A;
extern char*s88_74133124A;
extern char*s104_148900A;
extern char*s550_38182A;
extern char*s589_182255408A;
extern char*s613_1431664982A;
extern char*s613_1280A;
extern char*s104_1284A;
extern char*s604_1285A;
extern char*s613_1291A;
extern char*s101_932412928A;
extern char*s657_1083579905A;
extern char*s104_81256A;
extern char*s104_1295B;
extern char*s104_1295A;
extern char*s606_25900A;
extern char*s604_1298A;
extern char*s423_1642232185A;
extern char*s446_1952642401A;
extern char*s606_685204250A;
extern char*s602_7454A;
extern char*s601_1312A;
extern char*s321_855586967A;
extern char*s30_1988096A;
extern char*s589_7475A;
extern char*s29_747962924A;
extern char*s104_32080A;
extern char*s525_902076231A;
extern char*s333_10414970A;
extern char*s358_1686701A;
extern char*s30_945182441A;
extern char*s104_1330A;
extern char*s780_26635163A;
extern char*s29_1245671098A;
extern char*s101_1335A;
extern char*s397_13637A;
extern char*s93_2097430832A;
extern char*s94_140920753A;
extern char*s589_37202594A;
extern char*s469_412142950A;
extern char*s413_1304837581A;
extern char*s30_87466A;
extern char*s104_411134193A;
extern char*s269_413151726A;
extern char*s266_1136866084A;
extern char*s615_1068122514A;
extern char*s611_2077255577A;
extern char*s612_116864219A;
extern char*s413_1081673178A;
extern char*s471_869266852A;
extern char*s330_590983311A;
extern char*s424_1382A;
extern char*s361_762122588A;
extern char*s263_139303084A;
extern char*s589_2028521226A;
extern char*s94_996106634A;
extern char*s93_1910692676A;
extern char*s93_1466196812A;
extern char*s780_1396A;
extern char*s104_1618833880A;
extern char*s625_1846931416A;
extern char*s263_86060043A;
extern char*s966_1807195960A;
extern char*s550_7557A;
extern char*s395_1127350535A;
extern char*s272_87520A;
extern char*s611_1407A;
extern char*s611_1994331A;
extern char*s394_1705796732A;
extern char*s778_1414A;
extern char*s94_181806522A;
extern char*s104_1417A;
extern char*s606_32175A;
extern char*s615_32176A;
extern char*s625_39109479A;
extern char*s399_1732344459A;
extern char*s93_2110077371A;
extern char*s589_1426A;
extern char*s29_87541A;
extern char*s29_1427A;
extern char*s113_210310269A;
extern char*s111_489233515A;
extern char*s357_1459510708A;
extern char*s399_1382321814A;
extern char*s613_29107967A;
extern char*s104_1540494783A;
extern char*s101_1438A;
extern char*s104_2087300232A;
extern char*s606_1445A;
extern char*s612_1124779458A;
extern char*s26_941571923A;
extern char*s670_1452A;
extern char*s344_1440516445A;
extern char*s114_150325744A;
extern char*s490_90494969A;
extern char*s263_1689176777A;
extern char*s100_940489362A;
extern char*s104_1924772383A;
extern char*s589_1246790712A;
extern char*s462_486705491A;
extern char*s778_81437A;
extern char*s104_1476A;
extern char*s613_813409A;
extern char*s429_1478A;
extern char*s104_188283590A;
extern char*s606_1307328870A;
extern char*s330_934695142A;
extern char*s104_1273572186A;
extern char*s26_579450289A;
extern char*s93_54634669A;
extern char*s588_340114884A;
extern char*s104_1493A;
extern char*s29_1375414302A;
extern char*s93_1744209811A;
extern char*s104_13801A;
extern char*s104_586511651A;
extern char*s678_511703191A;
extern char*s780_479982486A;
extern char*s104_1404852998A;
extern char*s388_35382059A;
extern char*s93_49203356A;
extern char*s104_2142659303A;
extern char*s394_2480364A;
extern char*s388_354065377A;
extern char*s107_582925635A;
extern char*s93_2047201942A;
extern char*s93_1909979286A;
extern char*s113_1680762272A;
extern char*s29_880412606A;
extern char*s30_2234341A;
extern char*s263_1709309070A;
extern char*s101_1102814319A;
extern char*s612_1530A;
extern char*s93_833080669A;
extern char*s611_49806180A;
extern char*s612_1679636650A;
extern char*s464_413651A;
extern char*s780_129037214A;
extern char*s29_279656751A;
extern char*s394_2480394A;
extern char*s93_962885232A;
extern char*s29_859431564A;
extern char*s104_490869799A;
extern char*s93_791727511A;
extern char*s104_1164920984A;
extern char*s93_2099054905A;
extern char*s652_643795973A;
extern char*s589_1111954737A;
extern char*s30_1957581A;
extern char*s263_1553744164A;
extern char*s104_1565A;
extern char*s612_511943145A;
extern char*s93_2037548A;
extern char*s589_491029751A;
extern char*s780_1111960899A;
extern char*s104_1471782099A;
extern char*s93_955584028A;
extern char*s30_407540A;
extern char*s29_438300A;
extern char*s337_242535516A;
extern char*s93_1666553531A;
extern char*s611_1203432441A;
extern char*s606_283285900A;
extern char*s104_1661632742A;
extern char*s611_2006740748A;
extern char*s29_761722990A;
extern char*s469_1319735562A;
extern char*s93_1208507031A;
extern char*s589_1185483839A;
extern char*s104_341357508A;
extern char*s113_3556890A;
extern char*s94_1038536453A;
extern char*s588_1191155066A;
extern char*s101_2011772281A;
extern char*s29_185934049A;
extern char*s101_1626A;
extern char*s394_2480479A;
extern char*s29_185934055A;
extern char*s26_7779A;
extern char*s93_2055333675A;
extern char*s104_1607940692A;
extern char*s104_860532685A;
extern char*s101_2139128753A;
extern char*s611_1783951564A;
extern char*s30_1532344910A;
extern char*s29_619776399A;
extern char*s30_479921113A;
extern char*s462_522818189A;
extern char*s785_1644A;
extern char*s29_185934072A;
extern char*s613_32400A;
extern char*s589_1923813010A;
extern char*s588_1646A;
extern char*s455_2141380032A;
extern char*s93_1254996328A;
extern char*s780_687744958A;
extern char*s606_1650A;
extern char*s780_1651A;
extern char*s413_265238926A;
extern char*s101_7809A;
extern char*s606_180037A;
extern char*s585_386149138A;
extern char*s93_401981819A;
extern char*s104_1164208A;
extern char*s552_1046299075A;
extern char*s780_349661420A;
extern char*s589_1676A;
extern char*s29_1326673961A;
extern char*s612_32435A;
extern char*s780_44739A;
extern char*s93_1668608056A;
extern char*s31_1994621A;
extern char*s93_1289042164A;
extern char*s612_32456A;
extern char*s104_1946737844A;
extern char*s104_14005A;
extern char*s104_192841706A;
extern char*s394_1337425939A;
extern char*s107_1875884480A;
extern char*s435_1110386385A;
extern char*s104_7869A;
extern char*s273_2082988666A;
extern char*s101_7878A;
extern char*s606_1727A;
extern char*s404_183516812A;
extern char*s612_1586596820A;
extern char*s613_29126717A;
extern char*s30_14036A;
extern char*s29_55926626A;
extern char*s104_48520827A;
extern char*s606_1060489498A;
extern char*s586_161665A;
extern char*s413_1857191624A;
extern char*s109_1797674551A;
extern char*s101_1744A;
extern char*s606_1115076A;
extern char*s606_180128A;
extern char*s93_941240074A;
extern char*s263_608446371A;
extern char*s468_1753A;
extern char*s469_112048371A;
extern char*s104_1852104762A;
extern char*s552_22612837A;
extern char*s104_1765A;
extern char*s399_176104896A;
extern char*s365_1712194128A;
extern char*s94_256559978A;
extern char*s399_1458557644A;
extern char*s88_1052333303A;
extern char*s93_1296817101A;
extern char*s101_1775A;
extern char*s93_376006259A;
extern char*s104_1364588829A;
extern char*s364_7506001A;
extern char*s104_36778611A;
extern char*s93_970900228A;
extern char*s586_565063403A;
extern char*s446_2108232434A;
extern char*s104_308542101A;
extern char*s104_4049151A;
extern char*s780_1523807481A;
extern char*s483_920757291A;
extern char*s388_1801A;
extern char*s625_1658151484A;
extern char*s93_1917483795A;
extern char*s104_1630601156A;
extern char*s100_89019087A;
extern char*s30_2185421A;
extern char*s30_251171752A;
extern char*s93_1778077539A;
extern char*s29_312005144A;
extern char*s93_1665385073A;
extern char*s343_1771711260A;
extern char*s542_1826A;
extern char*s114_75639A;
extern char*s469_1832A;
extern char*s611_54714979A;
extern char*s612_1651828280A;
extern char*s330_1813679543A;
extern char*s612_1214258443A;
extern char*s612_167916A;
extern char*s612_1840A;
extern char*s612_108351709A;
extern char*s29_94407393A;
extern char*s29_14150A;
extern char*s780_32605A;
extern char*s93_50040236A;
extern char*s104_1154403080A;
extern char*s462_1468725331A;
extern char*s104_426087775A;
extern char*s104_57150800A;
extern char*s93_1021024803A;
extern char*s780_47598300A;
extern char*s266_1188332009A;
extern char*s93_603076667A;
extern char*s613_534333098A;
extern char*s780_692075493A;
extern char*s104_107312226A;
extern char*s446_90390825A;
extern char*s104_267478119A;
extern char*s31_2191641A;
extern char*s588_565069653A;
extern char*s613_2001063662A;
extern char*s93_2047202317A;
extern char*s612_32650A;
extern char*s104_438660461A;
extern char*s93_502181838A;
extern char*s93_307717976A;
extern char*s100_327902A;
extern char*s612_1900A;
extern char*s612_10089540A;
extern char*s93_1938643327A;
extern char*s104_1580612071A;
extern char*s556_1747685533A;
extern char*s29_735034101A;
extern char*s93_376006384A;
extern char*s29_50778415A;
extern char*s589_505232755A;
extern char*s604_36126743A;
extern char*s104_7918258A;
extern char*s778_413927315A;
extern char*s271_1185293475A;
extern char*s611_1994852A;
extern char*s29_1530432238A;
extern char*s612_5654700A;
extern char*s612_887295984A;
extern char*s93_2061122069A;
extern char*s93_945201499A;
extern char*s93_1933A;
extern char*s552_992810240A;
extern char*s29_88048A;
extern char*s104_950675891A;
extern char*s29_88049A;
extern char*s611_942808765A;
extern char*s93_246527867A;
extern char*s101_69601A;
extern char*s29_55041091A;
extern char*s93_4492176A;
extern char*s93_119995654A;
extern char*s589_2111741A;
extern char*s780_27909038A;
extern char*s29_36200588A;
extern char*s552_724183788A;
extern char*s101_683870135A;
extern char*s29_261093457A;
extern char*s469_909851733A;
extern char*s93_1991246741A;
extern char*s29_1286698901A;
extern char*s93_1505459217A;
extern char*s93_1421116705A;
extern char*s612_9794360A;
extern char*s101_1115301A;
extern char*s93_124992A;
extern char*s589_2072064738A;
extern char*s29_1680885744A;
extern char*s101_5525574A;
extern char*s780_525205114A;
extern char*s104_11086084A;
extern char*s589_4996600A;
extern char*s93_676728857A;
extern char*s30_451011A;
extern char*s612_86195952A;
extern char*s29_55041141A;
extern char*s107_1127406485A;
extern char*s100_2029530601A;
extern char*s104_1492394528A;
extern char*s29_55041151A;
extern char*s612_19199275A;
extern char*s113_1711985232A;
extern char*s588_2039095413A;
extern char*s93_1284361566A;
extern char*s100_1378502623A;
extern char*s391_729510616A;
extern char*s606_28032126A;
extern char*s469_1646704683A;
extern char*s104_1965252672A;
extern char*s780_2121801775A;
extern char*s604_161951A;
extern char*s266_1281353746A;
extern char*s104_772432310A;
extern char*s266_169314461A;
extern char*s323_971287994A;
extern char*s29_586229245A;
extern char*s612_484454800A;
extern char*s615_1150927957A;
extern char*s29_1395184171A;
extern char*s612_10089690A;
extern char*s104_1307483215A;
extern char*s100_891552598A;
extern char*s104_1724182721A;
extern char*s612_476433922A;
extern char*s100_1145029170A;
extern char*s94_446380143A;
extern char*s589_826425832A;
extern char*s604_21020045A;
extern char*s612_9954400A;
extern char*s101_186217457A;
extern char*s612_162010A;
extern char*s104_1656195746A;
extern char*s100_1483967746A;
extern char*s388_1747372019A;
extern char*s604_162019A;
extern char*s612_162020A;
extern char*s615_5279655A;
extern char*s395_1993565801A;
extern char*s104_506210947A;
extern char*s29_1300046706A;
extern char*s29_2104A;
extern char*s613_32860A;
extern char*s104_8260A;
extern char*s613_2110A;
extern char*s26_1042405932A;
extern char*s104_32869A;
extern char*s93_2001191A;
extern char*s589_1032053803A;
extern char*s469_1427483140A;
extern char*s322_977955761A;
extern char*s30_408086A;
extern char*s104_531983658A;
extern char*s30_251916328A;
extern char*s93_1176245553A;
extern char*s88_1781104140A;
extern char*s101_57487A;
extern char*s104_451157A;
extern char*s612_8291A;
extern char*s588_205124A;
extern char*s468_2009909053A;
extern char*s612_162070A;
extern char*s30_69805A;
extern char*s615_1113554587A;
extern char*s104_389672A;
extern char*s104_389675A;
extern char*s780_1927425A;
extern char*s781_14464A;
extern char*s362_202031759A;
extern char*s93_2051403723A;
extern char*s606_162095A;
extern char*s612_2138778683A;
extern char*s266_32926A;
extern char*s113_461074983A;
extern char*s394_900982204A;
extern char*s101_2178A;
extern char*s30_401994A;
extern char*s31_2020550321A;
extern char*s29_2035472654A;
extern char*s966_482960256A;
extern char*s101_69851A;
extern char*s104_1826935309A;
extern char*s30_2032026A;
extern char*s612_1726920051A;
extern char*s30_264667428A;
extern char*s104_351488799A;
extern char*s93_4750778A;
extern char*s104_383570A;
extern char*s612_340514A;
extern char*s612_1240185282A;
extern char*s30_820292A;
extern char*s107_1585514726A;
extern char*s589_1637927398A;
extern char*s263_698011541A;
extern char*s382_529996976A;
extern char*s107_1297180456A;
extern char*s29_1447702A;
extern char*s101_1255802680A;
extern char*s511_922867504A;
extern char*s30_88336A;
extern char*s93_599810839A;
extern char*s588_1112927266A;
extern char*s29_840111968A;
extern char*s469_115013643A;
extern char*s612_234933541A;
extern char*s28_1181006553A;
extern char*s93_1979873830A;
extern char*s93_1023251859A;
extern char*s722_2114672999A;
extern char*s394_442652821A;
extern char*s100_601041072A;
extern char*s413_797085749A;
extern char*s29_1297432701A;
extern char*s780_5839580A;
extern char*s29_2067759348A;
extern char*s589_832670A;
extern char*s615_8436A;
extern char*s423_408035024A;
extern char*s625_1679625106A;
extern char*s321_864187036A;
extern char*s613_1155996628A;
extern char*s29_1209184326A;
extern char*s93_700613496A;
extern char*s612_45355A;
extern char*s615_1245850444A;
extern char*s589_2301A;
extern char*s93_1689577436A;
extern char*s29_1604515261A;
extern char*s612_1096165867A;
extern char*s93_860582570A;
extern char*s612_245384155A;
extern char*s104_1816632501A;
extern char*s107_1811139659A;
extern char*s29_728963476A;
extern char*s29_9647090A;
extern char*s589_8475A;
extern char*s93_28789007A;
extern char*s101_395994A;
extern char*s612_8485A;
extern char*s26_546635553A;
extern char*s612_1553763390A;
extern char*s104_20552830A;
extern char*s624_1664721281A;
extern char*s93_1752914319A;
extern char*s93_2020913390A;
extern char*s30_414461A;
extern char*s589_1426099398A;
extern char*s93_156243902A;
extern char*s603_1476205446A;
extern char*s606_1936367907A;
extern char*s263_1955866577A;
extern char*s624_1025503229A;
extern char*s442_914877497A;
extern char*s612_244793715A;
extern char*s359_1360462097A;
extern char*s758_1121854A;
extern char*s330_2084982239A;
extern char*s29_175767198A;
extern char*s625_1238684603A;
extern char*s101_45436A;
extern char*s780_737599544A;
extern char*s104_419316052A;
extern char*s104_2382A;
extern char*s88_1452647150A;
extern char*s359_41841490A;
extern char*s101_217674A;
extern char*s104_149822297A;
extern char*s585_1359151955A;
extern char*s585_8545A;
extern char*s620_2394A;
extern char*s104_2395A;
extern char*s589_126319331A;
extern char*s620_2395A;
extern char*s93_1478844272A;
extern char*s93_1223700793A;
extern char*s93_529554293A;
extern char*s273_63912A;
extern char*s93_2117988535A;
extern char*s100_2114217978A;
extern char*s104_1327517381A;
extern char*s606_2065182209A;
extern char*s104_1530032908A;
extern char*s391_1222747401A;
extern char*s263_2070822678A;
extern char*s30_76226A;
extern char*s93_439136A;
extern char*s104_2417A;
extern char*s423_146113272A;
extern char*s612_714188879A;
extern char*s88_2123229206A;
extern char*s263_763815152A;
extern char*s263_957054969A;
extern char*s475_180503525A;
extern char*s101_2440A;
extern char*s263_556698697A;
extern char*s101_6159594A;
extern char*s113_1974940930A;
extern char*s612_168532A;
extern char*s615_1956008156A;
extern char*s94_274238642A;
extern char*s29_2090604340A;
extern char*s29_591414963A;
extern char*s105_1753572602A;
extern char*s556_11381817A;
extern char*s606_48939825A;
extern char*s94_332623945A;
extern char*s780_8624A;
extern char*s394_282345691A;
extern char*s611_1119207694A;
extern char*s611_118716790A;
extern char*s606_48939847A;
extern char*s93_554066118A;
extern char*s93_1439398002A;
extern char*s462_1917908900A;
extern char*s93_1193216533A;
extern char*s606_279959115A;
extern char*s93_277837020A;
extern char*s29_2504A;
extern char*s95_1656731300A;
extern char*s611_49917876A;
extern char*s542_193194A;
extern char*s101_207986277A;
extern char*s93_180894A;
extern char*s275_1477688005A;
extern char*s323_1777506207A;
extern char*s30_402346A;
extern char*s612_33291A;
extern char*s113_2537A;
extern char*s93_761631659A;
extern char*s365_2126200255A;
extern char*s109_584218374A;
extern char*s104_2545A;
extern char*s589_1575353618A;
extern char*s557_33316A;
extern char*s612_308542874A;
extern char*s778_2082029949A;
extern char*s674_2565A;
extern char*s625_1711825865A;
extern char*s93_1909918820A;
extern char*s29_744845610A;
extern char*s394_1670460393A;
extern char*s612_2571A;
extern char*s589_1489891655A;
extern char*s391_1182157125A;
extern char*s612_37173080A;
extern char*s557_3920780A;
extern char*s101_76405A;
extern char*s107_305596576A;
extern char*s104_1361175839A;
extern char*s263_22915075A;
extern char*s104_218061703A;
extern char*s101_98806116A;
extern char*s30_82570A;
extern char*s611_411283072A;
extern char*s93_1731250773A;
extern char*s28_1194182360A;
extern char*s93_1564737054A;
extern char*s26_8771A;
extern char*s611_689812670A;
extern char*s94_894954671A;
extern char*s552_950159899A;
extern char*s93_2992013A;
extern char*s104_2630A;
extern char*s30_114085235A;
extern char*s101_1247935972A;
extern char*s104_1308400309A;
extern char*s613_1773508175A;
extern char*s101_8801A;
extern char*s612_524787520A;
extern char*s101_530877013A;
extern char*s446_789877170A;
extern char*s93_1098712729A;
extern char*s612_1116064705A;
extern char*s446_783418632A;
extern char*s613_2670A;
extern char*s104_33425A;
extern char*s361_292944046A;
extern char*s780_1069766146A;
extern char*s29_88795A;
extern char*s785_480414235A;
extern char*s100_1572647306A;
extern char*s782_585110409A;
extern char*s104_1082664800A;
extern char*s110_138929174A;
extern char*s612_1263916320A;
extern char*s26_1010347497A;
extern char*s30_2063276A;
extern char*s29_201970776A;
extern char*s30_396356A;
extern char*s612_1023363018A;
extern char*s462_1089314041A;
extern char*s100_961022639A;
extern char*s29_201970793A;
extern char*s266_2089269822A;
extern char*s29_756809447A;
extern char*s601_23647157A;
extern char*s31_234165132A;
extern char*s29_201970799A;
extern char*s556_15019A;
extern char*s30_479922190A;
extern char*s612_15020A;
extern char*s104_33475A;
extern char*s455_1172758533A;
extern char*s625_1912840703A;
extern char*s104_1934139A;
extern char*s330_1646268668A;
extern char*s104_8880A;
extern char*s101_8884A;
extern char*s612_8885A;
extern char*s525_520647979A;
extern char*s391_112006296A;
extern char*s101_8889A;
extern char*s104_941548611A;
extern char*s611_1637595774A;
extern char*s28_8897A;
extern char*s93_45224899A;
extern char*s104_162838175A;
extern char*s29_30191860A;
extern char*s104_2753A;
extern char*s780_1341105285A;
extern char*s263_1251030042A;
extern char*s104_900404594A;
extern char*s25_1525604536A;
extern char*s29_1673345408A;
extern char*s29_954385774A;
extern char*s273_10926944A;
extern char*s426_1666936074A;
extern char*s394_2004103151A;
extern char*s88_672350142A;
extern char*s458_946986142A;
extern char*s780_236525A;
extern char*s29_827429162A;
extern char*s780_2142119302A;
extern char*s611_444775459A;
extern char*s322_311661671A;
extern char*s262_758913190A;
extern char*s29_253393261A;
extern char*s104_1040899642A;
extern char*s262_319940936A;
extern char*s30_1509818A;
extern char*s101_8976A;
extern char*s94_1581369567A;
extern char*s93_2137524537A;
extern char*s611_1246644455A;
extern char*s104_1136523103A;
extern char*s101_2833A;
extern char*s413_1529695024A;
extern char*s330_556920526A;
extern char*s423_1026844627A;
extern char*s589_567426438A;
extern char*s101_8991A;
extern char*s612_2217200A;
extern char*s394_1143055473A;
extern char*s101_1331737400A;
extern char*s476_76659A;
extern char*s104_985140858A;
extern char*s263_961330339A;
extern char*s613_177459204A;
extern char*s404_936707889A;
extern char*s107_612334905A;
extern char*s101_1431838787A;
extern char*s780_52067A;
extern char*s397_1721243342A;
extern char*s93_1207880883A;
extern char*s104_400297641A;
extern char*s362_2870A;
extern char*s104_1746979137A;
extern char*s104_1591358844A;
extern char*s29_52347889A;
extern char*s29_76691A;
extern char*s100_1574136045A;
extern char*s321_36115402A;
extern char*s374_527180488A;
extern char*s104_2883A;
extern char*s93_1910823336A;
extern char*s780_618166083A;
extern char*s29_1095772782A;
extern char*s101_218174A;
extern char*s612_907447617A;
extern char*s459_1057882626A;
extern char*s270_15195A;
extern char*s29_869539012A;
extern char*s589_1728089446A;
extern char*s612_1671063525A;
extern char*s77_522142839A;
extern char*s613_965636096A;
extern char*s104_54734511A;
extern char*s625_1691484858A;
extern char*s612_520377520A;
extern char*s29_1574640467A;
extern char*s101_9073A;
extern char*s612_39831A;
extern char*s585_1971245A;
extern char*s323_580435889A;
extern char*s29_48958735A;
extern char*s93_727272566A;
extern char*s95_1377150320A;
extern char*s29_170256464A;
extern char*s93_1953566687A;
extern char*s625_81368369A;
extern char*s275_624587783A;
extern char*s112_2947A;
extern char*s30_8054609A;
extern char*s101_9107A;
extern char*s446_947318471A;
extern char*s101_9121A;
extern char*s362_181352A;
extern char*s100_1737672775A;
extern char*s611_497096041A;
extern char*s966_387651299A;
extern char*s612_2118444283A;
extern char*s104_9130A;
extern char*s763_1182938696A;
extern char*s101_2109537640A;
extern char*s28_2057783129A;
extern char*s589_759184012A;
extern char*s104_374291339A;
extern char*s104_712350300A;
extern char*s101_415107A;
extern char*s93_1775667520A;
extern char*s612_2996A;
extern char*s780_998144220A;
extern char*s104_1582839830A;
extern char*s29_180965424A;
extern char*s362_732402575A;
extern char*s29_180965430A;
extern char*s362_44462444A;
extern char*s104_1281004126A;
extern char*s104_1450568746A;
extern char*s93_188494264A;
extern char*s104_1982839385A;
extern char*s29_180965447A;
extern char*s93_167445550A;
extern char*s29_10945665A;
extern char*s104_3040A;
extern char*s611_1757386798A;
extern char*s94_1708886163A;
extern char*s273_1661812564A;
extern char*s263_2028436769A;
extern char*s104_15351A;
extern char*s625_214672950A;
extern char*s29_2174354A;
extern char*s589_1111279623A;
extern char*s625_1961403182A;
extern char*s615_2117730851A;
extern char*s270_15370A;
extern char*s107_69115705A;
extern char*s101_9220A;
extern char*s101_3069A;
extern char*s269_1492303331A;
extern char*s101_9222A;
extern char*s93_723705127A;
extern char*s30_3073A;
extern char*s29_3075A;
extern char*s93_1922694958A;
extern char*s780_33836A;
extern char*s263_817932306A;
extern char*s107_840703310A;
extern char*s30_3085A;
extern char*s30_51843716A;
extern char*s104_1145546877A;
extern char*s388_1896547075A;
extern char*s462_1014770470A;
extern char*s101_3094A;
extern char*s589_1125599189A;
extern char*s26_546820847A;
extern char*s101_1663868A;
extern char*s31_89216A;
extern char*s615_138425A;
extern char*s780_15405A;
extern char*s460_384465A;
extern char*s94_1923039443A;
extern char*s611_1197879602A;
extern char*s29_1856946950A;
extern char*s29_39154229A;
extern char*s93_370754643A;
extern char*s93_188014584A;
extern char*s100_1066764899A;
extern char*s780_33875A;
extern char*s93_1502870799A;
extern char*s104_1737592965A;
extern char*s93_144939139A;
extern char*s93_1409701608A;
extern char*s611_1087364605A;
extern char*s93_1550836304A;
extern char*s339_1186844731A;
extern char*s413_1134247532A;
extern char*s365_30745830A;
extern char*s104_375072661A;
extern char*s725_849265556A;
extern char*s100_298390A;
extern char*s93_734506354A;
extern char*s101_721564652A;
extern char*s29_15448A;
extern char*s370_3147A;
extern char*s589_26975282A;
extern char*s93_822318035A;
extern char*s104_756717624A;
extern char*s29_207673214A;
extern char*s624_1901947715A;
extern char*s589_26975293A;
extern char*s473_1329824754A;
extern char*s101_3169A;
extern char*s29_207673231A;
extern char*s606_3175A;
extern char*s31_2248290A;
extern char*s30_3175A;
extern char*s612_653639191A;
extern char*s107_938738041A;
extern char*s780_884381655A;
extern char*s613_3181A;
extern char*s589_156962A;
extern char*s675_46245A;
extern char*s94_1452518781A;
extern char*s100_689013605A;
extern char*s263_1389956963A;
extern char*s104_36460172A;
extern char*s29_7095298A;
extern char*s464_3196A;
extern char*s104_323348966A;
extern char*s104_2101369329A;
extern char*s29_280482649A;
extern char*s780_244523906A;
extern char*s780_3209A;
extern char*s612_802840A;
extern char*s612_1679626025A;
extern char*s589_3212A;
extern char*s473_2088401A;
extern char*s606_602573626A;
extern char*s333_97896378A;
extern char*s611_159025018A;
extern char*s101_9366A;
extern char*s93_1898638542A;
extern char*s93_1460213717A;
extern char*s94_92397395A;
extern char*s604_7224500A;
extern char*s612_15533A;
extern char*s93_1452100558A;
extern char*s93_850458948A;
extern char*s93_246399995A;
extern char*s29_421505A;
extern char*s357_336696676A;
extern char*s721_2068836731A;
extern char*s93_1389575653A;
extern char*s469_1088102843A;
extern char*s606_4179775A;
extern char*s107_2035830473A;
extern char*s93_638895319A;
extern char*s323_770157670A;
extern char*s623_80501401A;
extern char*s403_835850355A;
extern char*s589_1610470399A;
extern char*s780_834589410A;
extern char*s589_46337A;
extern char*s263_1811847991A;
extern char*s104_660780608A;
extern char*s29_7704337A;
extern char*s104_15589A;
extern char*s612_1206509635A;
extern char*s101_3291A;
extern char*s101_1346168095A;
extern char*s104_46350A;
extern char*s29_33120277A;
extern char*s611_38305571A;
extern char*s101_3294A;
extern char*s100_1255397791A;
extern char*s104_616198177A;
extern char*s330_70962A;
extern char*s100_1928938448A;
extern char*s104_960414291A;
extern char*s30_1072344038A;
extern char*s93_1725672511A;
extern char*s104_2115332211A;
extern char*s112_287218105A;
extern char*s100_1896793334A;
extern char*s93_2008366323A;
extern char*s612_83277A;
extern char*s266_1897894366A;
extern char*s463_1810101146A;
extern char*s101_3320A;
extern char*s394_276773717A;
extern char*s612_104084395A;
extern char*s552_13424808A;
extern char*s604_15629A;
extern char*s333_83290A;
extern char*s463_34086A;
extern char*s613_105695965A;
extern char*s625_58505493A;
extern char*s93_147793411A;
extern char*s30_1223234252A;
extern char*s446_221949868A;
extern char*s362_3337A;
extern char*s93_1297544492A;
extern char*s611_259021955A;
extern char*s557_1500847347A;
extern char*s101_150382995A;
extern char*s271_360205908A;
extern char*s365_1731781A;
extern char*s93_760340765A;
extern char*s725_1398420907A;
extern char*s613_129654140A;
extern char*s722_89481A;
extern char*s104_511465169A;
extern char*s357_240593583A;
extern char*s357_611824887A;
extern char*s104_3374A;
extern char*s469_192265186A;
extern char*s612_83345A;
extern char*s26_1102047298A;
extern char*s93_1109293176A;
extern char*s100_292482A;
extern char*s29_698215697A;
extern char*s100_763853019A;
extern char*s606_23451005A;
extern char*s104_3393A;
extern char*s399_739187517A;
extern char*s93_883016350A;
extern char*s29_89510A;
extern char*s29_1297876698A;
extern char*s104_42279221A;
extern char*s606_2024156039A;
extern char*s613_1062582514A;
extern char*s263_1977886A;
extern char*s30_3415A;
extern char*s652_22122412A;
extern char*s101_15721A;
extern char*s29_3421A;
extern char*s104_5164112A;
extern char*s612_1338608648A;
extern char*s104_3430A;
extern char*s93_2053250287A;
extern char*s606_169510A;
extern char*s104_1855175789A;
extern char*s101_759424351A;
extern char*s93_2060176323A;
extern char*s464_83406A;
extern char*s29_15751A;
extern char*s97_1449185201A;
extern char*s104_2123070311A;
extern char*s780_1242450095A;
extern char*s93_239621812A;
extern char*s104_3457A;
extern char*s269_1534075159A;
extern char*s391_362752532A;
extern char*s337_1742784741A;
extern char*s357_1485100899A;
extern char*s29_3460A;
extern char*s104_1203674198A;
extern char*s101_1067454155A;
extern char*s780_46525A;
extern char*s29_3472A;
extern char*s101_270309168A;
extern char*s29_3474A;
extern char*s104_3475A;
extern char*s104_2038260346A;
extern char*s966_10220290A;
extern char*s604_3485A;
extern char*s101_592781506A;
extern char*s612_1821634438A;
extern char*s601_22854451A;
extern char*s104_120095614A;
extern char*s29_1418282620A;
extern char*s589_20240284A;
extern char*s101_3494A;
extern char*s104_325655889A;
extern char*s464_3496A;
extern char*s362_1317154036A;
extern char*s395_176211197A;
extern char*s29_3501A;
extern char*s104_1572014572A;
extern char*s357_1626899946A;
extern char*s93_46597328A;
extern char*s93_1631593164A;
extern char*s780_1973244310A;
extern char*s780_1173325215A;
extern char*s109_253892190A;
extern char*s781_27492334A;
extern char*s471_1387816739A;
extern char*s588_1199805276A;
extern char*s395_256961544A;
extern char*s82_3520A;
extern char*s101_15828A;
extern char*s780_1058430701A;
extern char*s104_1728206941A;
extern char*s29_15831A;
extern char*s446_1606367935A;
extern char*s29_1947246A;
extern char*s25_1767481079A;
extern char*s100_1225577982A;
extern char*s93_1522646678A;
extern char*s29_1947251A;
extern char*s30_77350A;
extern char*s93_1931146896A;
extern char*s426_1379248421A;
extern char*s93_201048978A;
extern char*s767_789213750A;
extern char*s781_692716864A;
extern char*s93_1582009998A;
extern char*s615_646768902A;
extern char*s93_1167481808A;
extern char*s672_1499315956A;
extern char*s82_1462938943A;
extern char*s550_3557A;
extern char*s100_2066960994A;
extern char*s104_1965730A;
extern char*s94_176469602A;
extern char*s263_2100317873A;
extern char*s623_936093505A;
extern char*s723_858562A;
extern char*s604_23186700A;
extern char*s613_28273584A;
extern char*s104_357794960A;
extern char*s93_161325869A;
extern char*s612_304601115A;
extern char*s30_3595A;
extern char*s463_852437A;
extern char*s104_77412A;
extern char*s30_3601A;
extern char*s88_1229059519A;
extern char*s104_726227573A;
extern char*s104_434116584A;
extern char*s611_15915A;
extern char*s93_1061217192A;
extern char*s611_1193180751A;
extern char*s86_1554312113A;
extern char*s29_279523519A;
extern char*s263_551231644A;
extern char*s88_620670284A;
extern char*s104_1065652086A;
extern char*s611_1549077634A;
extern char*s606_206626A;
extern char*s30_3645A;
extern char*s614_54686040A;
extern char*s26_1009954795A;
extern char*s104_1723513855A;
extern char*s30_89771A;
extern char*s100_2106290588A;
extern char*s93_1522646803A;
extern char*s29_577213499A;
extern char*s589_1115628985A;
extern char*s93_375534514A;
extern char*s29_3669A;
extern char*s624_1750246116A;
extern char*s588_1199620901A;
extern char*s29_911175911A;
extern char*s606_1631421108A;
extern char*s966_28287A;
extern char*s263_261396584A;
extern char*s29_169371474A;
extern char*s271_1539722017A;
extern char*s30_16001A;
extern char*s104_395316170A;
extern char*s29_1947419A;
extern char*s104_1565125654A;
extern char*s399_581709925A;
extern char*s443_1087076085A;
extern char*s611_89821A;
extern char*s104_1773201687A;
extern char*s88_1914699291A;
extern char*s107_429361964A;
extern char*s93_1453066751A;
extern char*s104_1059359695A;
extern char*s104_56845112A;
extern char*s412_1288915017A;
extern char*s394_1469170081A;
extern char*s785_1635136368A;
extern char*s30_937397683A;
extern char*s330_1524252299A;
extern char*s323_560316788A;
extern char*s29_2218105A;
extern char*s101_89862A;
extern char*s271_411001267A;
extern char*s395_1933023161A;
extern char*s393_1140411454A;
extern char*s29_203589551A;
extern char*s612_9905A;
extern char*s612_34510A;
extern char*s606_3760A;
extern char*s88_510352234A;
extern char*s388_1128496981A;
extern char*s93_407741255A;
extern char*s104_22971612A;
extern char*s722_560556710A;
extern char*s394_944882A;
extern char*s612_437573617A;
extern char*s104_1316373138A;
extern char*s612_2030510390A;
extern char*s404_1931700734A;
extern char*s663_638047023A;
extern char*s263_1737556726A;
extern char*s29_275488632A;
extern char*s263_2044479327A;
extern char*s31_77608A;
extern char*s612_9980719A;
extern char*s113_113009969A;
extern char*s104_122027336A;
extern char*s30_2593373A;
extern char*s455_907165587A;
extern char*s616_2187411A;
extern char*s966_1760616840A;
extern char*s263_1799491166A;
extern char*s423_892969089A;
extern char*s100_1194472660A;
extern char*s93_1943393816A;
extern char*s463_9808515A;
extern char*s767_65332A;
extern char*s589_2187432A;
extern char*s723_16139A;
extern char*s652_1864907075A;
extern char*s94_372047073A;
extern char*s29_440571A;
extern char*s93_2082787810A;
extern char*s100_388205767A;
extern char*s29_1604522960A;
extern char*s273_2064444A;
extern char*s29_2187464A;
extern char*s104_697705640A;
extern char*s271_188525860A;
extern char*s30_49076540A;
extern char*s261_1587749191A;
extern char*s101_143937264A;
extern char*s263_452889A;
extern char*s104_1450791030A;
extern char*s782_1411018665A;
extern char*s413_2134616155A;
extern char*s391_333554149A;
extern char*s104_397592212A;
extern char*s31_16177A;
extern char*s391_461679483A;
extern char*s29_2187483A;
extern char*s557_11241768A;
extern char*s30_59251A;
extern char*s273_1224218969A;
extern char*s780_54686284A;
extern char*s273_1750778A;
extern char*s95_745978733A;
extern char*s780_384078512A;
extern char*s652_191115496A;
extern char*s104_522691310A;
extern char*s99_1442714837A;
extern char*s101_1056930268A;
extern char*s613_2187545A;
extern char*s93_1687580001A;
extern char*s93_1301660112A;
extern char*s104_1136118256A;
extern char*s459_779913846A;
extern char*s361_389128515A;
extern char*s625_7440512A;
extern char*s612_77767A;
extern char*s104_2060090728A;
extern char*s263_641030424A;
extern char*s612_77773A;
extern char*s30_16264A;
extern char*s30_9790205A;
extern char*s556_1476287022A;
extern char*s104_984785217A;
extern char*s93_99041221A;
extern char*s604_7225250A;
extern char*s604_2187584A;
extern char*s604_2187585A;
extern char*s30_265093627A;
extern char*s104_1234811086A;
extern char*s393_435568604A;
extern char*s28_635943583A;
extern char*s94_175744216A;
extern char*s104_700572143A;
extern char*s29_1223936132A;
extern char*s93_331100035A;
extern char*s323_1207039342A;
extern char*s394_511502716A;
extern char*s29_37186806A;
extern char*s785_1847764413A;
extern char*s589_2187619A;
extern char*s606_809795A;
extern char*s362_4488096A;
extern char*s589_208313786A;
extern char*s94_175744241A;
extern char*s29_77832A;
extern char*s263_1667312535A;
extern char*s263_90141A;
extern char*s382_1814961148A;
extern char*s446_161769183A;
extern char*s359_432936020A;
extern char*s104_889346373A;
extern char*s104_4980205A;
extern char*s93_872019014A;
extern char*s107_7612837A;
extern char*s323_41769343A;
extern char*s263_1984169029A;
extern char*s93_1476889913A;
extern char*s104_2039472678A;
extern char*s552_26108906A;
extern char*s29_65574A;
extern char*s104_136593176A;
extern char*s29_197002151A;
extern char*s606_440120430A;
extern char*s104_533301931A;
extern char*s613_388821092A;
extern char*s93_1160088831A;
extern char*s93_902126A;
extern char*s606_2089246593A;
extern char*s612_234855416A;
extern char*s780_2051940780A;
extern char*s29_550709268A;
extern char*s104_253935823A;
extern char*s88_1468715266A;
extern char*s29_197002168A;
extern char*s93_732932648A;
extern char*s589_657822788A;
extern char*s94_1836169859A;
extern char*s30_434665A;
extern char*s94_175744316A;
extern char*s404_626532654A;
extern char*s29_197002174A;
extern char*s463_397949195A;
extern char*s390_1543474532A;
extern char*s104_1099040180A;
extern char*s263_1805205737A;
extern char*s29_573080478A;
extern char*s391_2089449608A;
extern char*s725_1139569132A;
extern char*s101_1832417772A;
extern char*s613_84085A;
extern char*s93_1732402521A;
extern char*s778_742356016A;
extern char*s606_47187A;
extern char*s585_1152812249A;
extern char*s107_1248054333A;
extern char*s29_53339A;
extern char*s26_1335263213A;
extern char*s611_1085305030A;
extern char*s271_838840612A;
extern char*s99_1616517694A;
extern char*s556_1476281050A;
extern char*s556_742356033A;
extern char*s29_49076823A;
extern char*s104_1858528797A;
extern char*s589_1949908058A;
extern char*s104_10940631A;
extern char*s100_218672210A;
extern char*s423_397660162A;
extern char*s26_375350487A;
extern char*s101_1361085152A;
extern char*s611_1403828457A;
extern char*s467_1610077639A;
extern char*s104_16487A;
extern char*s333_731327330A;
extern char*s93_398318341A;
extern char*s94_595894613A;
extern char*s722_2027238465A;
extern char*s93_1174611449A;
extern char*s30_78002A;
extern char*s357_165601417A;
extern char*s725_1927020241A;
extern char*s330_1246984134A;
extern char*s606_16510A;
extern char*s29_1202672333A;
extern char*s93_897447412A;
extern char*s101_19761224A;
extern char*s104_1201497496A;
extern char*s785_1959331451A;
extern char*s780_1990989A;
extern char*s104_5367889A;
extern char*s93_586311386A;
extern char*s589_422487A;
extern char*s104_47278A;
extern char*s93_1093012317A;
extern char*s615_41131A;
extern char*s93_1437345301A;
extern char*s966_2072196164A;
extern char*s29_1744612358A;
extern char*s437_1118729658A;
extern char*s104_2096892436A;
extern char*s615_1659544035A;
extern char*s93_4235A;
extern char*s100_1610926534A;
extern char*s93_1154110220A;
extern char*s262_956361723A;
extern char*s104_1110850242A;
extern char*s104_1377391529A;
extern char*s612_884813300A;
extern char*s612_4881995A;
extern char*s104_1197714671A;
extern char*s606_840791A;
extern char*s94_543076045A;
extern char*s611_280766651A;
extern char*s95_42698349A;
extern char*s675_928596125A;
extern char*s104_246893097A;
extern char*s104_1911279888A;
extern char*s104_163909964A;
extern char*s388_332834879A;
extern char*s362_78082A;
extern char*s101_1223801083A;
extern char*s395_1907958363A;
extern char*s469_94643563A;
extern char*s612_17743770A;
extern char*s104_1964848975A;
extern char*s93_688657949A;
extern char*s780_1772045883A;
extern char*s30_90408A;
extern char*s780_1314337673A;
extern char*s94_1242149539A;
extern char*s29_7748406A;
extern char*s511_840796792A;
extern char*s323_198146473A;
extern char*s93_126038302A;
extern char*s29_16616A;
extern char*s101_2121681051A;
extern char*s604_36122993A;
extern char*s394_1718483009A;
extern char*s30_16630A;
extern char*s93_494839979A;
extern char*s95_1784452489A;
extern char*s30_10208843A;
extern char*s30_56255230A;
extern char*s101_725963810A;
extern char*s29_16639A;
extern char*s29_78150A;
extern char*s437_1888871872A;
extern char*s93_2016523575A;
extern char*s30_1730514379A;
extern char*s485_1879799154A;
extern char*s606_1553642381A;
extern char*s636_1166590709A;
extern char*s780_1396798042A;
extern char*s29_705019679A;
extern char*s29_1339128A;
extern char*s29_451899881A;
extern char*s101_59731A;
extern char*s523_2014364610A;
extern char*s101_39204698A;
extern char*s101_61342149A;
extern char*s462_1979303915A;
extern char*s93_768172015A;
extern char*s612_17743865A;
extern char*s333_416499A;
extern char*s333_416500A;
extern char*s94_1226144723A;
extern char*s357_61858840A;
extern char*s29_16686A;
extern char*s780_1279738389A;
extern char*s351_881547256A;
extern char*s31_385751A;
extern char*s781_41300A;
extern char*s674_355003A;
extern char*s723_78209A;
extern char*s104_561301605A;
extern char*s104_988839165A;
extern char*s365_31214580A;
extern char*s612_106047655A;
extern char*s263_2085574777A;
extern char*s101_84381A;
extern char*s263_416541A;
extern char*s606_4425A;
extern char*s588_1511378937A;
extern char*s29_90544A;
extern char*s104_280139425A;
extern char*s388_29037A;
extern char*s725_888288799A;
extern char*s30_427898753A;
extern char*s606_847125A;
extern char*s612_111269879A;
extern char*s361_1881300092A;
extern char*s330_2084824380A;
extern char*s262_988261007A;
extern char*s104_1240218271A;
extern char*s94_175744666A;
extern char*s676_1085938891A;
extern char*s542_32450971A;
extern char*s604_920950A;
extern char*s30_78263A;
extern char*s606_958274895A;
extern char*s613_804085A;
extern char*s104_561947515A;
extern char*s30_16761A;
extern char*s721_786403659A;
extern char*s93_1559455194A;
extern char*s104_21391495A;
extern char*s94_175744691A;
extern char*s93_1421961899A;
extern char*s344_1479430694A;
extern char*s423_597973944A;
extern char*s104_16782A;
extern char*s30_84443A;
extern char*s668_161074567A;
extern char*s399_182862A;
extern char*s100_1914558593A;
extern char*s100_1450022771A;
extern char*s589_430519127A;
extern char*s93_611217054A;
extern char*s388_138555764A;
extern char*s101_1615398571A;
extern char*s747_1400894751A;
extern char*s97_1880881887A;
extern char*s725_263008962A;
extern char*s29_839855894A;
extern char*s93_1075925125A;
extern char*s93_488830629A;
extern char*s330_2050169721A;
extern char*s612_1174230416A;
extern char*s100_1661328107A;
extern char*s29_2126626A;
extern char*s104_179423058A;
extern char*s100_42846255A;
extern char*s388_1816745449A;
extern char*s462_56907446A;
extern char*s611_614557109A;
extern char*s462_10559665A;
extern char*s556_1208522276A;
extern char*s611_1215177661A;
extern char*s394_1592935176A;
extern char*s29_324411A;
extern char*s29_1739790308A;
extern char*s88_15142174A;
extern char*s104_1483072174A;
extern char*s612_195246A;
extern char*s557_1502207936A;
extern char*s678_1345295929A;
extern char*s101_149455415A;
extern char*s612_1605175681A;
extern char*s100_22271191A;
extern char*s446_375578482A;
extern char*s589_948421114A;
extern char*s589_35330A;
extern char*s107_784841421A;
extern char*s93_107634778A;
extern char*s394_350193314A;
extern char*s613_269141588A;
extern char*s95_1043946153A;
extern char*s101_1515266530A;
extern char*s104_1065942137A;
extern char*s93_104977558A;
extern char*s113_1662662954A;
extern char*s391_401707956A;
extern char*s463_16902A;
extern char*s413_1878889060A;
extern char*s104_18131599A;
extern char*s542_1185594A;
extern char*s780_784300160A;
extern char*s104_355630820A;
extern char*s29_243411981A;
extern char*s29_1419919903A;
extern char*s93_2102385657A;
extern char*s394_211605167A;
extern char*s93_762747069A;
extern char*s101_466551816A;
extern char*s101_2009849A;
extern char*s104_1743948446A;
extern char*s611_16927A;
extern char*s782_1682659883A;
extern char*s780_1007239A;
extern char*s93_2028592127A;
extern char*s88_1838187926A;
extern char*s463_1163823042A;
extern char*s30_16942A;
extern char*s722_989731302A;
extern char*s388_897982986A;
extern char*s100_1783880762A;
extern char*s30_10049231A;
extern char*s606_206419907A;
extern char*s780_931143030A;
extern char*s601_810433A;
extern char*s266_1973946666A;
extern char*s93_1062177790A;
extern char*s966_1994165009A;
extern char*s589_46733806A;
extern char*s266_1838870713A;
extern char*s606_1008067448A;
extern char*s100_485115581A;
extern char*s459_2101296982A;
extern char*s780_90782A;
extern char*s966_1508488213A;
extern char*s606_20481355A;
extern char*s619_90792A;
extern char*s30_78490A;
extern char*s31_78495A;
extern char*s101_146157A;
extern char*s611_1428771266A;
extern char*s333_931579788A;
extern char*s966_1942675017A;
extern char*s612_252669317A;
extern char*s29_41849945A;
extern char*s113_27561173A;
extern char*s104_1533928773A;
extern char*s785_2007377394A;
extern char*s94_1658160521A;
extern char*s104_2104052665A;
extern char*s612_933501A;
extern char*s464_1136691048A;
extern char*s104_1170250908A;
extern char*s362_35157672A;
extern char*s93_1436398529A;
extern char*s29_447584A;
extern char*s93_1414519430A;
extern char*s104_1404148845A;
extern char*s104_958964069A;
extern char*s615_90405963A;
extern char*s471_439056951A;
extern char*s339_767649523A;
extern char*s29_1554777A;
extern char*s13_1216703285A;
extern char*s444_22861847A;
extern char*s104_530940601A;
extern char*s104_724500276A;
extern char*s467_1723490337A;
extern char*s104_2109816196A;
extern char*s29_591417242A;
extern char*s612_10895A;
extern char*s966_1439959996A;
extern char*s357_1094507536A;
extern char*s612_10430693A;
extern char*s100_445497083A;
extern char*s780_176986A;
extern char*s104_997623147A;
extern char*s589_1623721137A;
extern char*s104_2055072316A;
extern char*s101_631091213A;
extern char*s29_1735712398A;
extern char*s780_73472312A;
extern char*s88_625881326A;
extern char*s30_78591A;
extern char*s606_379993A;
extern char*s394_163270777A;
extern char*s365_561523426A;
extern char*s395_1490189105A;
extern char*s330_1060258809A;
extern char*s263_2108992007A;
extern char*s29_1192911276A;
extern char*s93_631447998A;
extern char*s30_10990481A;
extern char*s612_1514442508A;
extern char*s93_1632732392A;
extern char*s29_167970159A;
extern char*s104_1253959973A;
extern char*s556_565060278A;
extern char*s612_78629A;
extern char*s100_1605895597A;
extern char*s95_126291003A;
extern char*s263_1658492806A;
extern char*s29_48856070A;
extern char*s29_1622700141A;
extern char*s589_1694771411A;
extern char*s104_78646A;
extern char*s269_722230651A;
extern char*s589_404651A;
extern char*s606_119389596A;
extern char*s93_844703215A;
extern char*s104_2237652A;
extern char*s26_1364794873A;
extern char*s395_1256137461A;
extern char*s625_1465905014A;
extern char*s95_618869258A;
extern char*s25_1852009437A;
extern char*s94_174945438A;
extern char*s31_1777434714A;
extern char*s93_501268295A;
extern char*s606_380065A;
extern char*s588_605650769A;
extern char*s100_313299890A;
extern char*s93_1950357785A;
extern char*s93_2077708091A;
extern char*s654_1760457965A;
extern char*s104_850522083A;
extern char*s101_447734A;
extern char*s104_824324978A;
extern char*s344_793028699A;
extern char*s399_2007408328A;
extern char*s30_17176A;
extern char*s391_1090404950A;
extern char*s323_1492212881A;
extern char*s671_78239462A;
extern char*s93_2141291014A;
extern char*s625_1548937422A;
extern char*s113_210141519A;
extern char*s30_2065491A;
extern char*s104_27063164A;
extern char*s613_1719326284A;
extern char*s113_349372A;
extern char*s104_106460275A;
extern char*s29_84881A;
extern char*s30_17221A;
extern char*s104_1917882A;
extern char*s388_1424594977A;
extern char*s782_576790349A;
extern char*s101_129391217A;
extern char*s29_2038667775A;
extern char*s721_1762204931A;
extern char*s780_1497878015A;
extern char*s767_1854402277A;
extern char*s93_2127445170A;
extern char*s29_50246319A;
extern char*s263_926093361A;
extern char*s606_1898591066A;
extern char*s104_545118879A;
extern char*s606_380168A;
extern char*s93_23410A;
extern char*s104_508495830A;
extern char*s780_77562923A;
extern char*s446_1790874766A;
extern char*s357_7238542A;
extern char*s93_469031018A;
extern char*s611_453998A;
extern char*s612_1671077900A;
extern char*s606_1952787551A;
extern char*s780_1739163321A;
extern char*s29_447851A;
extern char*s266_689575137A;
extern char*s469_29585A;
extern char*s557_100561530A;
extern char*s29_2098363273A;
extern char*s100_1004555549A;
extern char*s29_349117293A;
extern char*s26_1812938425A;
extern char*s94_1861857328A;
extern char*s625_1541882313A;
extern char*s93_928941315A;
extern char*s100_1836299930A;
extern char*s113_195766720A;
extern char*s93_1680421289A;
extern char*s394_165614527A;
extern char*s29_84969A;
extern char*s589_2142146116A;
extern char*s606_380218A;
extern char*s394_1057872442A;
extern char*s612_204519611A;
extern char*s966_838816886A;
extern char*s107_1998329594A;
extern char*s93_75828399A;
extern char*s104_701821825A;
extern char*s93_1204389280A;
extern char*s423_1628100917A;
extern char*s94_1578831409A;
extern char*s93_1690004585A;
extern char*s780_486352305A;
extern char*s413_1627141371A;
extern char*s31_914215870A;
extern char*s101_1588150185A;
extern char*s101_91157A;
extern char*s767_1932458562A;
extern char*s88_8198176A;
extern char*s612_60405A;
extern char*s446_1875641781A;
extern char*s780_1831440704A;
extern char*s395_29662A;
extern char*s721_1309017823A;
extern char*s263_1453633985A;
extern char*s104_495363549A;
extern char*s611_1240206596A;
extern char*s93_1545228536A;
extern char*s388_277033810A;
extern char*s93_973007162A;
extern char*s101_561720547A;
extern char*s351_197895058A;
extern char*s100_1889118664A;
extern char*s589_1387812168A;
extern char*s373_668815628A;
extern char*s93_2108887750A;
extern char*s29_240810599A;
extern char*s104_2022630A;
extern char*s101_11253A;
extern char*s29_240810604A;
extern char*s606_2022635A;
extern char*s108_128358027A;
extern char*s589_4999725A;
extern char*s93_199494346A;
extern char*s589_706329A;
extern char*s778_1777096676A;
extern char*s612_525503499A;
extern char*s652_143852403A;
extern char*s625_831146693A;
extern char*s29_17422A;
extern char*s29_2054549840A;
extern char*s624_265537649A;
extern char*s606_380343A;
extern char*s652_167300030A;
extern char*s611_1384921237A;
extern char*s780_110557057A;
extern char*s93_922446006A;
extern char*s93_66884963A;
extern char*s104_1581747096A;
extern char*s93_134219969A;
extern char*s26_53561911A;
extern char*s104_471553120A;
extern char*s611_1374304640A;
extern char*s606_504830035A;
extern char*s372_128333478A;
extern char*s101_262628264A;
extern char*s606_1888091524A;
extern char*s463_1809088081A;
extern char*s612_114321512A;
extern char*s93_1701980726A;
extern char*s29_337331A;
extern char*s104_17480A;
extern char*s104_1938991062A;
extern char*s88_1056980719A;
extern char*s104_1680956616A;
extern char*s93_2060540980A;
extern char*s615_5313505A;
extern char*s31_17498A;
extern char*s113_1293738877A;
extern char*s29_1483884743A;
extern char*s556_985967445A;
extern char*s613_2102695A;
extern char*s104_17507A;
extern char*s625_139854341A;
extern char*s93_2176510A;
extern char*s93_552734069A;
extern char*s100_1556970935A;
extern char*s613_35966A;
extern char*s615_5313530A;
extern char*s613_1416678934A;
extern char*s373_492964813A;
extern char*s94_1538234998A;
extern char*s30_306165094A;
extern char*s100_921818688A;
extern char*s394_1505530135A;
extern char*s612_46980416A;
extern char*s780_1843146228A;
extern char*s107_870131842A;
extern char*s104_2072467813A;
extern char*s394_177461A;
extern char*s100_572614135A;
extern char*s269_867234734A;
extern char*s780_97510A;
extern char*s88_445214625A;
extern char*s263_929353692A;
extern char*s511_637371887A;
extern char*s104_1130602126A;
extern char*s589_558682149A;
extern char*s542_11429A;
extern char*s613_23692781A;
extern char*s100_170061979A;
extern char*s611_398948A;
extern char*s589_5284A;
extern char*s611_1231257120A;
extern char*s93_755120513A;
extern char*s502_890319497A;
extern char*s93_2087550139A;
extern char*s589_21632225A;
extern char*s780_775406525A;
extern char*s468_1370872538A;
extern char*s612_520373770A;
extern char*s31_10714216A;
extern char*s620_448205A;
extern char*s612_1836091144A;
extern char*s110_300594A;
extern char*s29_1740332382A;
extern char*s100_1379717706A;
extern char*s29_1644425991A;
extern char*s625_1677586033A;
extern char*s589_4434071A;
extern char*s606_4766225A;
extern char*s399_1119905623A;
extern char*s30_75797981A;
extern char*s611_49680837A;
extern char*s94_744085684A;
extern char*s104_1173628471A;
extern char*s550_146251545A;
extern char*s29_267647687A;
extern char*s464_380590A;
extern char*s391_988692517A;
extern char*s371_5382A;
extern char*s625_2025498932A;
extern char*s93_96053257A;
extern char*s263_17696A;
extern char*s93_1066804080A;
extern char*s93_1062283098A;
extern char*s100_109671582A;
extern char*s273_1831619428A;
extern char*s321_1262756502A;
extern char*s104_444175272A;
extern char*s30_17715A;
extern char*s263_880804011A;
extern char*s615_300665A;
extern char*s330_1001314405A;
extern char*s94_2004339522A;
extern char*s269_92467250A;
extern char*s273_878860A;
extern char*s612_537910373A;
extern char*s93_112999293A;
extern char*s611_30034A;
extern char*s104_1968768303A;
extern char*s93_783329131A;
extern char*s589_180709512A;
extern char*s107_1605047378A;
extern char*s93_1984637890A;
extern char*s104_1435285930A;
extern char*s93_79251A;
extern char*s93_756929053A;
extern char*s93_142936234A;
extern char*s625_21306364A;
extern char*s104_738771309A;
extern char*s100_295542551A;
extern char*s589_386819A;
extern char*s361_22401251A;
extern char*s94_348041349A;
extern char*s104_401124480A;
extern char*s413_1837585965A;
extern char*s589_1642168697A;
extern char*s372_305790140A;
extern char*s589_242108838A;
extern char*s589_56760755A;
extern char*s589_60837A;
extern char*s589_1367040625A;
extern char*s29_1979951A;
extern char*s472_1965077754A;
extern char*s104_471707221A;
extern char*s452_1809998749A;
extern char*s101_17794A;
extern char*s29_386854A;
extern char*s104_1844536619A;
extern char*s93_776600004A;
extern char*s778_1126647264A;
extern char*s370_2014931627A;
extern char*s93_150329797A;
extern char*s104_802495724A;
extern char*s104_719604853A;
extern char*s101_39617954A;
extern char*s101_25704393A;
extern char*s552_5515A;
extern char*s93_397329363A;
extern char*s104_1881374985A;
extern char*s612_134878499A;
extern char*s104_713312393A;
extern char*s93_676769302A;
extern char*s29_79341A;
extern char*s589_882065083A;
extern char*s104_862271166A;
extern char*s273_60894A;
extern char*s29_48672249A;
extern char*s104_23988287A;
extern char*s104_1682814572A;
extern char*s29_572288431A;
extern char*s100_1019367716A;
extern char*s29_572288437A;
extern char*s611_189437896A;
extern char*s394_530141799A;
extern char*s589_560761477A;
extern char*s93_202933204A;
extern char*s29_572288454A;
extern char*s104_1672511676A;
extern char*s100_479236135A;
extern char*s588_5580A;
extern char*s100_1865554673A;
extern char*s93_922212712A;
extern char*s100_1162901343A;
extern char*s781_992457137A;
extern char*s589_674382779A;
extern char*s100_1546692995A;
extern char*s469_1411247976A;
extern char*s104_4692662A;
extern char*s486_2068414678A;
extern char*s606_312808564A;
extern char*s104_1994596535A;
extern char*s618_17916A;
extern char*s100_5615A;
extern char*s104_4631170A;
extern char*s104_1413407004A;
extern char*s29_1680926299A;
extern char*s30_436196A;
extern char*s469_1142240176A;
extern char*s767_602797481A;
extern char*s101_120239233A;
extern char*s780_28263330A;
extern char*s29_506823435A;
extern char*s31_10554609A;
extern char*s263_816126476A;
extern char*s93_2009918711A;
extern char*s674_861846863A;
extern char*s29_39002989A;
extern char*s525_456083848A;
extern char*s25_85614A;
extern char*s606_521905705A;
extern char*s780_291421585A;
extern char*s104_1586354711A;
extern char*s446_865125357A;
extern char*s93_971408488A;
extern char*s100_866669263A;
extern char*s463_1961687A;
extern char*s109_51895507A;
extern char*s113_1635864124A;
extern char*s780_1815688614A;
extern char*s93_210812758A;
extern char*s388_1250079569A;
extern char*s625_1722095007A;
extern char*s413_1333985363A;
extern char*s100_1986489600A;
extern char*s104_2041682A;
extern char*s339_786054293A;
extern char*s589_988243818A;
extern char*s29_1937220099A;
extern char*s589_5720A;
extern char*s612_829308144A;
extern char*s780_598811726A;
extern char*s725_1613492996A;
extern char*s93_18036A;
extern char*s29_247239028A;
extern char*s613_1942608409A;
extern char*s611_41125176A;
extern char*s781_1506490209A;
extern char*s604_1406782500A;
extern char*s780_69352117A;
extern char*s25_425790270A;
extern char*s104_2103819988A;
extern char*s391_1816888147A;
extern char*s93_1694969179A;
extern char*s104_1836282258A;
extern char*s604_1188262106A;
extern char*s93_825716016A;
extern char*s29_1549680A;
extern char*s778_130382376A;
extern char*s462_1848584263A;
extern char*s330_1642968637A;
extern char*s780_1040644265A;
extern char*s104_1042003640A;
extern char*s361_5787A;
extern char*s30_18090A;
extern char*s444_114137597A;
extern char*s613_946895A;
extern char*s388_1721307786A;
extern char*s29_1549697A;
extern char*s104_1352413868A;
extern char*s585_11952A;
extern char*s29_1549703A;
extern char*s100_98784712A;
extern char*s262_1968202785A;
extern char*s29_18110A;
extern char*s104_1063704391A;
extern char*s589_1566831588A;
extern char*s104_1339521386A;
extern char*s263_374877A;
extern char*s780_2021999449A;
extern char*s625_1849347035A;
extern char*s104_1460025642A;
extern char*s780_484169497A;
extern char*s469_14429929A;
extern char*s113_809686569A;
extern char*s606_6575105A;
extern char*s101_18144A;
extern char*s93_18150A;
extern char*s107_290966604A;
extern char*s613_2122389958A;
extern char*s104_1624663341A;
extern char*s93_1320619413A;
extern char*s93_442256615A;
extern char*s604_112304676A;
extern char*s447_2015374870A;
extern char*s589_472574902A;
extern char*s263_1325140408A;
extern char*s780_171955A;
extern char*s31_267875778A;
extern char*s464_18186A;
extern char*s780_1985327250A;
extern char*s780_1196941282A;
extern char*s29_1176378494A;
extern char*s542_1096544670A;
extern char*s113_203714719A;
extern char*s29_55924644A;
extern char*s778_2097247A;
extern char*s111_2120987577A;
extern char*s388_5912A;
extern char*s269_1153312264A;
extern char*s104_163413385A;
extern char*s780_1800342110A;
extern char*s589_1992825354A;
extern char*s612_854330615A;
extern char*s966_1067567332A;
extern char*s29_1673348567A;
extern char*s100_5873980A;
extern char*s620_399591A;
extern char*s88_1539816514A;
extern char*s113_44975894A;
extern char*s30_56927287A;
extern char*s612_1709245815A;
extern char*s612_4680700A;
extern char*s93_518055462A;
extern char*s469_84293096A;
extern char*s29_1831158645A;
extern char*s93_732257893A;
extern char*s606_352968782A;
extern char*s104_49152444A;
extern char*s362_18257A;
extern char*s395_902517583A;
extern char*s623_496139469A;
extern char*s273_927785894A;
extern char*s323_673829558A;
extern char*s351_1664909434A;
extern char*s93_1387339410A;
extern char*s93_445504446A;
extern char*s100_1242126608A;
extern char*s31_10714862A;
extern char*s101_1494914262A;
extern char*s426_983618541A;
extern char*s446_827998241A;
extern char*s611_1869700848A;
extern char*s100_1568923104A;
extern char*s101_448859A;
extern char*s29_1553736287A;
extern char*s780_744114A;
extern char*s93_1575461624A;
extern char*s93_1181926797A;
extern char*s613_531809155A;
extern char*s104_8359055A;
extern char*s93_1978106088A;
extern char*s29_9712276A;
extern char*s611_172080A;
extern char*s615_705408837A;
extern char*s30_1168210079A;
extern char*s612_42916A;
extern char*s25_24284008A;
extern char*s611_249330648A;
extern char*s269_1145998825A;
extern char*s612_842552A;
extern char*s104_431043495A;
extern char*s104_490486762A;
extern char*s93_727903062A;
extern char*s101_165012750A;
extern char*s101_2075119688A;
extern char*s412_306215109A;
extern char*s104_1377208779A;
extern char*s612_153655A;
extern char*s100_212031001A;
extern char*s93_12184A;
extern char*s99_1152235958A;
extern char*s104_1160736641A;
extern char*s104_12188A;
extern char*s104_113036818A;
extern char*s104_12201A;
extern char*s93_34383990A;
extern char*s94_35386613A;
extern char*s441_498169402A;
extern char*s93_1593742473A;
extern char*s93_2018315248A;
extern char*s104_1009317511A;
extern char*s93_124311631A;
extern char*s511_1359629264A;
extern char*s426_1920465143A;
extern char*s668_8777401A;
extern char*s104_1838958244A;
extern char*s93_1962710217A;
extern char*s780_365929075A;
extern char*s782_958639438A;
extern char*s780_680177517A;
extern char*s611_1328320695A;
extern char*s101_5578901A;
extern char*s323_176865800A;
extern char*s604_7227375A;
extern char*s93_431394186A;
extern char*s589_9589368A;
extern char*s31_388005040A;
extern char*s101_1319327951A;
extern char*s625_374042271A;
extern char*s100_3579844A;
extern char*s30_1747646688A;
extern char*s557_51582255A;
extern char*s113_141444A;
extern char*s94_432335312A;
extern char*s780_1265395998A;
extern char*s263_1598804806A;
extern char*s95_356743A;
extern char*s104_209121A;
extern char*s589_338723264A;
extern char*s446_1573210512A;
extern char*s104_1790869799A;
extern char*s589_3912034A;
extern char*s649_1257368965A;
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
#define FSOC_SIZE 8192
#define RSOC_SIZE 32768
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
   This file (SmartEiffel/sys/runtime/gc_lib.h) is automatically included
   when the Garbage Collector is used (default, unless option -no_gc has
   been selected).
*/

#define SE_GC_LIB 1

#define SE_GC_LOW_MEMORY_STRATEGY 0
#define SE_GC_HIGH_MEMORY_STRATEGY 1
#define SE_GC_DEFAULT_MEMORY_STRATEGY 2
extern int se_gc_strategy;


#define RSOH_UNMARKED 15253
#define RSOH_FREE 1
#define RSOH_MARKED 2


#define FSOH_UNMARKED ((void *) 1)
#define FSOH_MARKED   ((void *) 2)

/* To codify the state and the type of some Memory Chunk, we are
   using the following definitions :
*/
#define FSO_FREE_CHUNK  (-2)
#define RSO_FREE_CHUNK  (-1)
#define RSO_USED_CHUNK  ( 0)
#define FSO_STORE_CHUNK ( 1)
#define FSO_USED_CHUNK  ( 2)
#define FREE_CHUNK(x) ((x)<0)

/* Minimum size for a store area in a ReSizable Objects Chunk :
 */
#define RSOC_MIN_STORE 512

/* The default channel used to print -gc_info flag information :
*/
#define SE_GCINFO SE_ERR

extern int collector_counter; /* MEMORY.collector_counter */

typedef struct s_mch mch; /* Memory Chunk Header. */
typedef struct s_fsoc fsoc; /* Fixed Size Objects Chunk. */
typedef union u_rsoh rsoh; /* ReSizable Object Header. */
typedef struct s_fll_rsoh fll_rsoh;
typedef struct s_rsoc rsoc; /* ReSizable Objects Chunk. */
typedef struct s_na_env na_env; /* Native Array ENVironment. */


struct s_mch{
  unsigned int size; /* In number of bytes (actual argument of malloc).*/
  int state_type; /* One value in : RSO_USED_CHUNK,
                     FREE_CHUNK, FSO_STORE_CHUNK, FSO_USED_CHUNK */
  void(*amfp)(mch*,void*); /* Align Mark Function Pointer. */
  void(*swfp)(mch*); /* SWeep Function Pointer. */
};

struct s_fsoc{
  mch header; /* Common header for fsoc and rsoc. */
  fsoc* next; /* The next one when in free list (fsocfl). */
  int count_minus_one;
  double first_object;
};

typedef struct _rso_header rso_header;

struct _rso_header{
    unsigned int size;
    int magic_flag;     /* RSOH_MARKED when used,
			   RSOH_FREE when free,
			   else RSOH_UNMARKED */
};

typedef union u_fso_header fso_header;

union u_fso_header{
  void* flag;
  void* next;/* accurately typed as gcXX* in actual fso headers */
};

union u_rsoh{
  rso_header header;
  double padding;
};

struct s_fll_rsoh {
  rso_header rsoh_field;
  fll_rsoh* nextflol;
};

struct s_rsoc{
  mch header; /* Common header for fsoc and rsoc. */
  unsigned int isize; /* Initial size (at malloc time) to detect split chunks. */
  rsoc* next; /* Next one when in free list (rsocfl) or in na_env->chunk_list. */
  fll_rsoh*free_list_of_large; /* Intra. free list. */
  na_env*nae;
  rsoh first_header;
};

struct s_na_env{
  unsigned int store_left;
  rsoh* store;
  rsoc*store_chunk;
  rsoc*chunk_list; /*List of chunks of that type that have a non-null free_list_of_large*/
  void (*gc_mark)(T0*);
  int space_used;
};

extern void**stack_bottom;
extern mch**gcmt;
extern int gcmt_max;
extern int gcmt_used;
extern int gc_is_off;
extern fsoc* fsocfl;
extern unsigned int fsoc_count;
extern unsigned int rsoc_count;
extern void*gcmt_tail_addr;

void gc_sweep(void);
void gc_mark(void* p);
mch* gc_find_chunk(void* p);
int gc_stack_size(void);
int garbage_delayed(void);
void gc_update_ceils(void);
char*new_na(na_env*nae,unsigned int size);
unsigned int fsocfl_count(void);
unsigned int rsocfl_count(void);
void gc_dispose_before_exit(void);
void mark_stack_and_registers (void);
fsoc* gc_fsoc_get1(void);
fsoc* gc_fsoc_get2(void);

int gc_memory_used(void);
/*The generic se_agent0 definition:*/
struct _se_agent0{
Tid id;
Tid creation_mold_id;
void(*afp)(se_agent*);
void(*gc_mark_agent_mold)(se_agent*);
int(*eq)(se_agent*,se_agent*);
};
extern unsigned int fsoc_count_ceil;
extern unsigned int rsoc_count_ceil;
/*INTEGER_32*/T6 r2in_range(T2 C,T2 a1,T2 a2);
/*INTEGER_32*/T2 r2max(T2 C,T2 a1);
/*INTEGER_32*/T6 r2is_even(T2 C);
/*INTEGER_32*/T2 r2min(T2 C,T2 a1);
/*INTEGER_32*/T2 r2_ix_9292(T2 C,T2 a1);
/*INTEGER_32*/T0* r2to_string(T2 C);
/*INTEGER_32*/T2 r2_ix_4747(T2 C,T2 a1);
/*INTEGER_32*/T3 r2hexadecimal_digit(T2 C);
/*INTEGER_32*/T6 r2is_odd(T2 C);
/*INTEGER_32*/T6 r2bit_test(T2 C,T1 a1);
/*INTEGER_32*/void r2append_in(T2 C,T0* a1);
/*INTEGER_32*/T3 r2decimal_digit(T2 C);
/*INTEGER_32*/void r2to_hexadecimal_in(T2 C,T0* a1);
extern T0*oBC74string_buffer;
extern int fBC74string_buffer;
/*INTEGER_32*/T0* r2string_buffer(void);
/*INTEGER_8*/T1 r1min(T1 C,T1 a1);
/*INTEGER_8*/void r1to_octal_in(T1 C,T0* a1);
/*INTEGER_8*/T3 r1decimal_digit(T1 C);
/*CHARACTER*/T3 r3to_upper(T3 C);
/*CHARACTER*/T6 r3is_digit(T3 C);
/*CHARACTER*/T6 r3in_range(T3 C,T3 a1,T3 a2);
/*CHARACTER*/T1 r3value(T3 C);
/*CHARACTER*/T6 r3is_separator(T3 C);
/*CHARACTER*/T6 r3is_lower(T3 C);
/*CHARACTER*/T1 r3decimal_value(T3 C);
/*CHARACTER*/T1 r3hexadecimal_value(T3 C);
/*CHARACTER*/T3 r3to_lower(T3 C);
/*CHARACTER*/T6 r3is_hexadecimal_digit(T3 C);
/*CHARACTER*/T6 r3_ix_60(T3 C,T3 a1);
/*CHARACTER*/T6 r3same_as(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_letter(T3 C);
/*CHARACTER*/T6 r3_ix_6061(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_upper(T3 C);
/*CHARACTER*/T6 r3_ix_6261(T3 C,T3 a1);
/*BOOLEAN*/T6 r6_ix_and(T6 C,T6 a1);
/*BOOLEAN*/T6 r6_ix_or(T6 C,T6 a1);
/*INTEGER_16*/T6 r10in_range(T10 C,T10 a1,T10 a2);
/*INTEGER_16*/T10 r10max(T10 C,T10 a1);
/*INTEGER_16*/T10 r10min(T10 C,T10 a1);
/*INTEGER_16*/T2 r10to_integer_32(T10 C);
/*INTEGER_16*/void r10append_in(T10 C,T0* a1);
/*INTEGER_16*/T3 r10decimal_digit(T10 C);
/*REAL_64*/void r5append_in_format(T5 C,T0* a1,T2 a2);
extern T9 oBC292sprintf_buffer;
/*INTEGER_64*/T6 r11in_range(T11 C,T11 a1,T11 a2);
/*INTEGER_64*/T6 r11fit_integer_8(T11 C);
/*INTEGER_64*/T0* r11to_number(T11 C);
/*INTEGER_64*/T2 r11high_32(T11 C);
/*INTEGER_64*/T11 r11_ix_9292(T11 C,T11 a1);
/*INTEGER_64*/T6 r11fit_integer_32(T11 C);
/*INTEGER_64*/T6 r11fit_integer_16(T11 C);
/*INTEGER_64*/T0* r11to_string(T11 C);
/*INTEGER_64*/T11 r11_ix_4747(T11 C,T11 a1);
/*INTEGER_64*/T6 r11is_odd(T11 C);
/*INTEGER_64*/void r11append_in(T11 C,T0* a1);
/*INTEGER_64*/T3 r11decimal_digit(T11 C);
/*INTEGER_64*/T11 r11_ix_94(T11 C,T11 a1);
/*INTEGER_64*/T0* r11string_buffer(void);
/*POINTER*/T8 r8_ix_43(T8 C,T2 a1);
/*POINTER*/T2 r8hash_code(T8 C);
/*POINTER*/void r8append_in(T8 C,T0* a1);
extern T0*oBC8string_buffer;
extern int fBC8string_buffer;
/*POINTER*/T0* r8string_buffer(void);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_reverse_index_of(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T9 r9realloc(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_index_of(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_has(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_from(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9move(T9 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear_all(T9 C,T2 a1);
/*NATIVE_ARRAY[CHARACTER]*/void r9set_all_with(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_memcmp(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_slice_from(T9 C,T9 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9slice_fast_occurrences(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/T1020 r1020realloc(T1020 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r1020fast_index_of(T1020 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/void r1020copy_from(T1020 C,T1020 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T6 r1020safe_equal(T0* a1,T0* a2);
/*NATIVE_ARRAY[STRING]*/void r1020clear(T1020 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1020clear_all(T1020 C,T2 a1);
/*NATIVE_ARRAY[STRING]*/void r1020remove(T1020 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1020set_all_with(T1020 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r1020first_index_of(T1020 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1020copy_slice_from(T1020 C,T1020 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r1035clear_all(T1035 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/T1040 r1040realloc(T1040 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1040copy_from(T1040 C,T1040 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1040clear(T1040 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1040clear_all(T1040 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1040copy_slice_from(T1040 C,T1040 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_TEXT]*/T1044 r1044realloc(T1044 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1044copy_from(T1044 C,T1044 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1044clear(T1044 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1044clear_all(T1044 C,T2 a1);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1044copy_slice_from(T1044 C,T1044 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_16]*/T1045 r1045realloc(T1045 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r1045copy_from(T1045 C,T1045 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r1045clear_all(T1045 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_16]*/void r1045copy_slice_from(T1045 C,T1045 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLUSTER]*/T1049 r1049realloc(T1049 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r1049copy_from(T1049 C,T1049 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r1049clear_all(T1049 C,T2 a1);
/*NATIVE_ARRAY[CLUSTER]*/void r1049copy_slice_from(T1049 C,T1049 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r1073clear_all(T1073 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/T1074 r1074realloc(T1074 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1074copy_from(T1074 C,T1074 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1074clear_all(T1074 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1074copy_slice_from(T1074 C,T1074 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/T1075 r1075realloc(T1075 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/T2 r1075fast_index_of(T1075 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1075copy_from(T1075 C,T1075 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1075clear(T1075 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1075clear_all(T1075 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1075copy_slice_from(T1075 C,T1075 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r1089clear_all(T1089 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r1092clear_all(T1092 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/T1094 r1094realloc(T1094 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/T2 r1094fast_index_of(T1094 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094copy_from(T1094 C,T1094 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094move(T1094 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094clear(T1094 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094clear_all(T1094 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094remove(T1094 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094set_all_with(T1094 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1094copy_slice_from(T1094 C,T1094 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE_MARK]*/T1124 r1124realloc(T1124 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1124copy_from(T1124 C,T1124 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1124clear_all(T1124 C,T2 a1);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1124set_all_with(T1124 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1124copy_slice_from(T1124 C,T1124 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r1127clear_all(T1127 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1144clear_all(T1144 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1147clear_all(T1147 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[HASHED_STRING]]*/void r1148clear_all(T1148 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1158clear_all(T1158 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/T1159 r1159realloc(T1159 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1159copy_from(T1159 C,T1159 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1159clear(T1159 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1159clear_all(T1159 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/void r1159copy_slice_from(T1159 C,T1159 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1165clear_all(T1165 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/T1168 r1168realloc(T1168 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/T2 r1168fast_index_of(T1168 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1168copy_from(T1168 C,T1168 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1168clear(T1168 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1168clear_all(T1168 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1168remove(T1168 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1168copy_slice_from(T1168 C,T1168 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1171clear_all(T1171 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/T1172 r1172realloc(T1172 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1172copy_from(T1172 C,T1172 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1172clear(T1172 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1172clear_all(T1172 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1172copy_slice_from(T1172 C,T1172 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASSES]*/T1173 r1173realloc(T1173 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1173copy_from(T1173 C,T1173 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1173clear(T1173 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1173clear_all(T1173 C,T2 a1);
/*NATIVE_ARRAY[CLASSES]*/void r1173copy_slice_from(T1173 C,T1173 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1183clear_all(T1183 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1186clear_all(T1186 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[CLASS_NAME]]*/void r1187clear_all(T1187 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1192clear_all(T1192 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/T1194 r1194realloc(T1194 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1194copy_from(T1194 C,T1194 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1194clear(T1194 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1194clear_all(T1194 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1194copy_slice_from(T1194 C,T1194 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/T1198 r1198realloc(T1198 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/T2 r1198fast_index_of(T1198 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1198copy_from(T1198 C,T1198 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1198clear(T1198 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1198clear_all(T1198 C,T2 a1);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1198remove(T1198 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1198copy_slice_from(T1198 C,T1198 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPRESSION]*/T1199 r1199realloc(T1199 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1199copy_from(T1199 C,T1199 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1199clear(T1199 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1199clear_all(T1199 C,T2 a1);
/*NATIVE_ARRAY[EXPRESSION]*/void r1199copy_slice_from(T1199 C,T1199 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TMP_FEATURE]*/T1200 r1200realloc(T1200 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1200copy_from(T1200 C,T1200 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1200clear(T1200 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1200clear_all(T1200 C,T2 a1);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1200copy_slice_from(T1200 C,T1200 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/T1201 r1201realloc(T1201 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1201copy_from(T1201 C,T1201 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1201clear_all(T1201 C,T2 a1);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1201set_all_with(T1201 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1201copy_slice_from(T1201 C,T1201 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1202clear_all(T1202 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1202set_all_with(T1202 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/T1203 r1203realloc(T1203 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1203copy_from(T1203 C,T1203 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1203clear_all(T1203 C,T2 a1);
/*NATIVE_ARRAY[DECLARATION]*/void r1203set_all_with(T1203 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1203copy_slice_from(T1203 C,T1203 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ASSERTION]*/T1205 r1205realloc(T1205 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1205copy_from(T1205 C,T1205 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1205clear(T1205 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1205clear_all(T1205 C,T2 a1);
/*NATIVE_ARRAY[ASSERTION]*/void r1205copy_slice_from(T1205 C,T1205 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_NAME1]*/T1206 r1206realloc(T1206 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1206copy_from(T1206 C,T1206 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1206clear_all(T1206 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1206set_all_with(T1206 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1206copy_slice_from(T1206 C,T1206 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[MANIFEST_STRING]*/T1207 r1207realloc(T1207 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1207copy_from(T1207 C,T1207 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1207clear(T1207 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1207clear_all(T1207 C,T2 a1);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1207copy_slice_from(T1207 C,T1207 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/T1209 r1209realloc(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1209copy_from(T1209 C,T1209 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1209clear(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1209clear_all(T1209 C,T2 a1);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1209remove(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1209copy_slice_from(T1209 C,T1209 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPORT_ITEM]*/T1217 r1217realloc(T1217 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1217copy_from(T1217 C,T1217 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1217clear_all(T1217 C,T2 a1);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1217set_all_with(T1217 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1217copy_slice_from(T1217 C,T1217 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[LIVE_TYPE]]*/void r1218clear_all(T1218 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T1221 r1221realloc(T1221 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T2 r1221fast_index_of(T1221 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1221copy_from(T1221 C,T1221 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1221clear(T1221 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1221clear_all(T1221 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1221copy_slice_from(T1221 C,T1221 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1224clear_all(T1224 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/T1227 r1227realloc(T1227 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/T2 r1227fast_index_of(T1227 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE]*/void r1227copy_from(T1227 C,T1227 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1227clear(T1227 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1227clear_all(T1227 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/void r1227remove(T1227 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1227set_all_with(T1227 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1227copy_slice_from(T1227 C,T1227 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/T1228 r1228realloc(T1228 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/T2 r1228fast_index_of(T1228 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1228copy_from(T1228 C,T1228 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1228clear(T1228 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1228clear_all(T1228 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1228copy_slice_from(T1228 C,T1228 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T1229 r1229realloc(T1229 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T2 r1229fast_index_of(T1229 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1229copy_from(T1229 C,T1229 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1229clear(T1229 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1229clear_all(T1229 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1229copy_slice_from(T1229 C,T1229 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1230clear_all(T1230 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1237clear_all(T1237 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1239clear_all(T1239 C,T2 a1);
/*NATIVE_ARRAY[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1246clear_all(T1246 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1252clear_all(T1252 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T1253 r1253realloc(T1253 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T2 r1253fast_index_of(T1253 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1253copy_from(T1253 C,T1253 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1253clear(T1253 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1253clear_all(T1253 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1253set_all_with(T1253 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1253copy_slice_from(T1253 C,T1253 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/T1254 r1254realloc(T1254 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1254copy_from(T1254 C,T1254 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1254clear(T1254 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1254clear_all(T1254 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1254copy_slice_from(T1254 C,T1254 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CODE]*/T1255 r1255realloc(T1255 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1255copy_from(T1255 C,T1255 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1255clear(T1255 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1255clear_all(T1255 C,T2 a1);
/*NATIVE_ARRAY[CODE]*/void r1255copy_slice_from(T1255 C,T1255 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1258clear_all(T1258 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[TYPE]]*/void r1260clear_all(T1260 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1265clear_all(T1265 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[STRING]]*/void r1266clear_all(T1266 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1271clear_all(T1271 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1272clear_all(T1272 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T1275 r1275realloc(T1275 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1275fast_index_of(T1275 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1275copy_from(T1275 C,T1275 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1275clear(T1275 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1275clear_all(T1275 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1275copy_slice_from(T1275 C,T1275 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1278clear_all(T1278 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[AGENT_ARGS]]*/void r1279clear_all(T1279 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1283clear_all(T1283 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/T1285 r1285realloc(T1285 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1285copy_from(T1285 C,T1285 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1285clear(T1285 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1285clear_all(T1285 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1285copy_slice_from(T1285 C,T1285 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1286clear_all(T1286 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T1289 r1289realloc(T1289 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1289copy_from(T1289 C,T1289 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1289clear(T1289 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1289clear_all(T1289 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1289copy_slice_from(T1289 C,T1289 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1292clear_all(T1292 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1293clear_all(T1293 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1298clear_all(T1298 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1301clear_all(T1301 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1302clear_all(T1302 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1302set_all_with(T1302 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_8]*/void r1303clear_all(T1303 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_8]*/void r1303set_all_with(T1303 C,T1 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1306clear_all(T1306 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/T1307 r1307realloc(T1307 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1307copy_from(T1307 C,T1307 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1307clear(T1307 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1307clear_all(T1307 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1307set_all_with(T1307 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1307copy_slice_from(T1307 C,T1307 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CECIL_ENTRY]*/T1308 r1308realloc(T1308 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1308copy_from(T1308 C,T1308 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1308clear(T1308 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1308clear_all(T1308 C,T2 a1);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1308copy_slice_from(T1308 C,T1308 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[SE_CONFIG]*/T1310 r1310realloc(T1310 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1310copy_from(T1310 C,T1310 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1310clear_all(T1310 C,T2 a1);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1310copy_slice_from(T1310 C,T1310 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1312clear_all(T1312 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/T1314 r1314realloc(T1314 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1314copy_from(T1314 C,T1314 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1314clear_all(T1314 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1314copy_slice_from(T1314 C,T1314 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T1316 r1316realloc(T1316 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1316copy_from(T1316 C,T1316 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1316clear(T1316 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1316clear_all(T1316 C,T2 a1);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1316copy_slice_from(T1316 C,T1316 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1317clear_all(T1317 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1323clear_all(T1323 C,T2 a1);
/*NATIVE_ARRAY[TEXT_FILE_READ]*/void r1325clear_all(T1325 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1328clear_all(T1328 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1329clear_all(T1329 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/T1332 r1332realloc(T1332 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1332copy_from(T1332 C,T1332 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1332clear_all(T1332 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1332set_all_with(T1332 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1332copy_slice_from(T1332 C,T1332 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1335clear_all(T1335 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1338clear_all(T1338 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/T1340 r1340realloc(T1340 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1340copy_from(T1340 C,T1340 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1340clear(T1340 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1340clear_all(T1340 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1340copy_slice_from(T1340 C,T1340 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[IFTHEN]*/T1341 r1341realloc(T1341 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1341copy_from(T1341 C,T1341 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1341clear(T1341 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1341clear_all(T1341 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1341remove(T1341 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1341remove_first(T1341 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1341copy_slice_from(T1341 C,T1341 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_ITEM]*/T1342 r1342realloc(T1342 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1342copy_from(T1342 C,T1342 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1342clear(T1342 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1342clear_all(T1342 C,T2 a1);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1342copy_slice_from(T1342 C,T1342 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INSTRUCTION]*/T1343 r1343realloc(T1343 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1343copy_from(T1343 C,T1343 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1343clear(T1343 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1343clear_all(T1343 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1343remove_first(T1343 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1343copy_slice_from(T1343 C,T1343 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[OPEN_OPERAND]*/T1344 r1344realloc(T1344 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1344copy_from(T1344 C,T1344 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1344clear(T1344 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1344clear_all(T1344 C,T2 a1);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1344copy_slice_from(T1344 C,T1344 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/T1346 r1346realloc(T1346 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1346copy_from(T1346 C,T1346 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1346clear(T1346 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1346clear_all(T1346 C,T2 a1);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1346copy_slice_from(T1346 C,T1346 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_NAME]*/T1347 r1347realloc(T1347 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1347copy_from(T1347 C,T1347 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1347clear(T1347 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1347clear_all(T1347 C,T2 a1);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1347copy_slice_from(T1347 C,T1347 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1350clear_all(T1350 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/T1351 r1351realloc(T1351 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1351copy_from(T1351 C,T1351 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1351clear(T1351 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1351clear_all(T1351 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1351copy_slice_from(T1351 C,T1351 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/T1352 r1352realloc(T1352 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1352copy_from(T1352 C,T1352 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1352clear(T1352 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1352clear_all(T1352 C,T2 a1);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1352copy_slice_from(T1352 C,T1352 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/T1353 r1353realloc(T1353 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1353copy_from(T1353 C,T1353 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1353clear_all(T1353 C,T2 a1);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1353set_all_with(T1353 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1353copy_slice_from(T1353 C,T1353 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1354clear_all(T1354 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[GRAPH_NODE]]*/void r1357clear_all(T1357 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/T1362 r1362realloc(T1362 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1362copy_from(T1362 C,T1362 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1362clear(T1362 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1362clear_all(T1362 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1362copy_slice_from(T1362 C,T1362 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1365clear_all(T1365 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1372clear_all(T1372 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1375clear_all(T1375 C,T2 a1);
/*NATIVE_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1377clear_all(T1377 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1391clear_all(T1391 C,T2 a1);
/*NATIVE_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1392clear_all(T1392 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1395clear_all(T1395 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/T1415 r1415realloc(T1415 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/T2 r1415fast_index_of(T1415 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1415copy_from(T1415 C,T1415 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1415clear(T1415 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1415clear_all(T1415 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1415copy_slice_from(T1415 C,T1415 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1425clear_all(T1425 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1427clear_all(T1427 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1432clear_all(T1432 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1435clear_all(T1435 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/T1442 r1442realloc(T1442 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1442copy_from(T1442 C,T1442 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1442clear(T1442 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1442clear_all(T1442 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1442copy_slice_from(T1442 C,T1442 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/T1443 r1443realloc(T1443 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1443copy_from(T1443 C,T1443 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1443clear(T1443 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1443clear_all(T1443 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1443copy_slice_from(T1443 C,T1443 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[E_OLD]*/T1444 r1444realloc(T1444 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1444copy_from(T1444 C,T1444 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1444clear(T1444 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1444clear_all(T1444 C,T2 a1);
/*NATIVE_ARRAY[E_OLD]*/void r1444copy_slice_from(T1444 C,T1444 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1445clear_all(T1445 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/T1448 r1448realloc(T1448 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1448copy_from(T1448 C,T1448 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1448clear(T1448 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1448clear_all(T1448 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1448copy_slice_from(T1448 C,T1448 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INLINE_MEMO]*/T1449 r1449realloc(T1449 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1449copy_from(T1449 C,T1449 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1449clear(T1449 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1449clear_all(T1449 C,T2 a1);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1449copy_slice_from(T1449 C,T1449 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[POINTER]*/void r1450clear_all(T1450 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[POSITION]]*/void r1451clear_all(T1451 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1455clear_all(T1455 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/T1490 r1490realloc(T1490 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1490copy_from(T1490 C,T1490 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1490clear(T1490 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1490clear_all(T1490 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1490copy_slice_from(T1490 C,T1490 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T1491 r1491realloc(T1491 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1491copy_from(T1491 C,T1491 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1491move(T1491 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1491clear(T1491 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1491clear_all(T1491 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1491set_all_with(T1491 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1491copy_slice_from(T1491 C,T1491 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/T1492 r1492realloc(T1492 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1492copy_from(T1492 C,T1492 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1492clear(T1492 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1492clear_all(T1492 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1492copy_slice_from(T1492 C,T1492 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1495clear_all(T1495 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/T1497 r1497realloc(T1497 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1497copy_from(T1497 C,T1497 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1497clear(T1497 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1497clear_all(T1497 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1497copy_slice_from(T1497 C,T1497 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/T1498 r1498realloc(T1498 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1498copy_from(T1498 C,T1498 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1498clear(T1498 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1498clear_all(T1498 C,T2 a1);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1498copy_slice_from(T1498 C,T1498 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1499clear_all(T1499 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1519clear_all(T1519 C,T2 a1);
/*STRING*/T2 r7first_index_of(T7* C,T3 a1);
/*STRING*/T0* r7out(T7* C);
/*STRING*/void r7copy(T7* C,T0* a1);
/*STRING*/T0* r7substring(T7* C,T2 a1,T2 a2);
/*STRING*/T2 r7occurrences(T7* C,T3 a1);
/*STRING*/void r7set_storage_signature(T7* C);
/*STRING*/void r7remove_prefix(T7* C,T0* a1);
/*STRING*/T0* r7intern(T7* C);
/*STRING*/T2 r7reverse_index_of(T7* C,T3 a1,T2 a2);
/*STRING*/void r7lock_tagged_out(void);
/*STRING*/void r7remove_first(T7* C);
/*STRING*/T3 r7last(T7* C);
/*STRING*/T2 r7first_substring_index(T7* C,T0* a1);
/*STRING*/void r7remove_suffix(T7* C,T0* a1);
/*STRING*/void r7put(T7* C,T3 a1,T2 a2);
/*STRING*/void r7unlock_tagged_out(void);
/*STRING*/void r7remove_between(T7* C,T2 a1,T2 a2);
/*STRING*/T6 r7is_equal(T7* C,T0* a1);
/*STRING*/void r7insert_character(T7* C,T3 a1,T2 a2);
extern T0*oBC35interned;
extern int fBC35interned;
/*STRING*/T0* r7interned(void);
/*STRING*/T3 r7item(T7* C,T2 a1);
/*STRING*/T0* r7_ix_43(T7* C,T0* a1);
extern T0*oBC35string_buffer;
extern int fBC35string_buffer;
/*STRING*/T0* r7string_buffer(void);
extern T0*oBC35split_buffer;
extern int fBC35split_buffer;
/*STRING*/T0* r7split_buffer(void);
/*STRING*/T0* r7split(T7* C);
/*STRING*/T6 r7valid_index(T7* C,T2 a1);
extern T0*oBC13tagged_out_memory_pool;
extern int fBC13tagged_out_memory_pool;
/*STRING*/T0* r7tagged_out_memory_pool(void);
/*STRING*/void r7append(T7* C,T0* a1);
/*STRING*/void r7print_on(T7* C,T0* a1);
/*STRING*/T6 r7_ix_60(T7* C,T0* a1);
/*STRING*/T6 r7has_substring(T7* C,T0* a1);
/*STRING*/void r7copy_slice_to_native(T7* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*STRING*/T2 r7index_of(T7* C,T3 a1,T2 a2);
/*STRING*/void r7out_in_tagged_out_memory(T7* C);
/*STRING*/void r7make_empty(T7* C);
/*STRING*/void r7slice_copy(T7* C,T2 a1,T0* a2,T2 a3,T2 a4);
/*STRING*/T6 r7has_suffix(T7* C,T0* a1);
/*STRING*/T6 r7is_integer(T7* C);
/*STRING*/void r7remove_tail(T7* C,T2 a1);
/*STRING*/void r7make(T7* C,T2 a1);
/*STRING*/T6 r7has_prefix(T7* C,T0* a1);
/*STRING*/void r7clear_count(T7* C);
/*STRING*/void r7append_string(T7* C,T0* a1);
/*STRING*/void r7make_filled(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove(T7* C,T2 a1);
/*STRING*/void r7append_substring(T7* C,T0* a1,T2 a2,T2 a3);
extern T0*oBC13tagged_out_memories;
extern int fBC13tagged_out_memories;
/*STRING*/T0* r7tagged_out_memories(void);
/*STRING*/void r7extend(T7* C,T3 a1);
/*STRING*/void r7remove_last(T7* C);
/*STRING*/T6 r7has(T7* C,T3 a1);
/*STRING*/void r7keep_head(T7* C,T2 a1);
/*STRING*/T2 r7to_integer(T7* C);
extern T0*oBC13tagged_out_memory_ref;
/*STRING*/void r7fill_with(T7* C,T3 a1);
/*STRING*/void r7extend_unless(T7* C,T3 a1);
/*STRING*/T6 r7same_as(T7* C,T0* a1);
/*STRING*/void r7add_last(T7* C,T3 a1);
/*STRING*/T3 r7first(T7* C);
/*STRING*/void r7shrink(T7* C,T2 a1,T2 a2);
/*STRING*/void r7resize(T7* C,T2 a1);
/*STRING*/void r7to_upper(T7* C);
/*STRING*/T2 r7substring_index(T7* C,T0* a1,T2 a2);
/*STRING*/void r7ensure_capacity(T7* C,T2 a1);
/*STRING*/void r7from_external_copy(T7* C,T8 a1);
/*STRING*/T2 r7computed_hash_code(T7* C);
/*STRING*/T6 r7is_integer_64(T7* C);
/*STRING*/T8 r7to_external(T7* C);
/*STRING*/void r7extend_multiple(T7* C,T3 a1,T2 a2);
/*STRING*/void r7to_lower(T7* C);
/*STRING*/T2 r7last_index_of(T7* C,T3 a1);
/*STRING*/T0* r7twin(T7* C);
/*STRING*/void r7with_capacity(T7* C,T2 a1);
/*STRING*/void r7extend_to_count(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove_head(T7* C,T2 a1);
/*STRING*/void r7next_generation(T7* C);
/*STRING*/T11 r7to_integer_64(T7* C);
/*STRING*/void r7split_in(T7* C,T0* a1);
/*STRING*/void r7swap(T7* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r995swap(T995* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r995make(T995* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r995put(T995* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r995manifest_put(T995* C,T2 a1,T0* a2);
/*FAST_ARRAY[STRING]*/void r995add(T995* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r995move(T995* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING]*/T0* r995new_iterator(T995* C);
/*FAST_ARRAY[STRING]*/T2 r995fast_first_index_of(T995* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r995add_last(T995* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r995mark_native_arrays(T995* C);
/*FAST_ARRAY[STRING]*/void r995clear_count(T995* C);
/*FAST_ARRAY[STRING]*/void r995manifest_make(T995* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r995valid_index(T995* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r995fast_has(T995* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r995from_collection(T995* C,T0* a1);
/*FAST_ARRAY[STRING]*/T2 r995first_index_of(T995* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r995with_capacity(T995* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r995next_generation(T995* C);
/*FAST_ARRAY[STRING]*/T2 r995count(T995* C);
/*FAST_ARRAY[STRING]*/T6 r995has(T995* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/T0* r1000last(T1000* C);
/*FAST_ARRAY[HASHED_STRING]*/void r1000add_last(T1000* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/void r1000mark_native_arrays(T1000* C);
/*FAST_ARRAY[HASHED_STRING]*/void r1000with_capacity(T1000* C,T2 a1);
/*FAST_ARRAY[HASHED_STRING]*/void r1000next_generation(T1000* C);
/*FAST_ARRAY[HASHED_STRING]*/T2 r1000count(T1000* C);
/*ARRAY[STRING]*/void r1001swap(T1001* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/T0* r1001first(T1001* C);
/*ARRAY[STRING]*/void r1001put(T1001* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r1001ensure_capacity_and_bounds(T1001* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r1001add(T1001* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r1001move(T1001* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r1001copy(T1001* C,T0* a1);
/*ARRAY[STRING]*/void r1001add_last(T1001* C,T0* a1);
/*ARRAY[STRING]*/void r1001mark_native_arrays(T1001* C);
/*ARRAY[STRING]*/T0* r1001item(T1001* C,T2 a1);
/*ARRAY[STRING]*/void r1001clear_all(T1001* C);
/*ARRAY[STRING]*/void r1001remove(T1001* C,T2 a1);
/*ARRAY[STRING]*/void r1001clear_count(T1001* C);
/*ARRAY[STRING]*/T6 r1001is_empty(T1001* C);
/*ARRAY[STRING]*/T0* r1001twin(T1001* C);
/*ARRAY[STRING]*/void r1001set_all_with(T1001* C,T0* a1);
/*ARRAY[STRING]*/T6 r1001valid_index(T1001* C,T2 a1);
/*ARRAY[STRING]*/void r1001with_capacity(T1001* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/void r1001next_generation(T1001* C);
/*ARRAY[STRING]*/T2 r1001count(T1001* C);
/*FAST_ARRAY[CLUSTER]*/void r1002make(T1002* C,T2 a1);
/*FAST_ARRAY[CLUSTER]*/T0* r1002first(T1002* C);
/*FAST_ARRAY[CLUSTER]*/void r1002put(T1002* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r1002add(T1002* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r1002move(T1002* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLUSTER]*/void r1002add_last(T1002* C,T0* a1);
/*FAST_ARRAY[CLUSTER]*/void r1002mark_native_arrays(T1002* C);
/*FAST_ARRAY[CLUSTER]*/void r1002clear_count(T1002* C);
/*FAST_ARRAY[CLUSTER]*/T6 r1002is_empty(T1002* C);
/*FAST_ARRAY[CLUSTER]*/void r1002next_generation(T1002* C);
/*FAST_ARRAY[CLUSTER]*/T2 r1002count(T1002* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1004make(T1004* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1004add_last(T1004* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1004mark_native_arrays(T1004* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1004next_generation(T1004* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1004do_all(T1004* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005swap(T1005* C,T2 a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/T0* r1005first(T1005* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005put(T1005* C,T0* a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r1005fast_first_index_of(T1005* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005add_last(T1005* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005mark_native_arrays(T1005* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005clear_count(T1005* C);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r1005valid_index(T1005* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r1005fast_has(T1005* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005with_capacity(T1005* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005next_generation(T1005* C);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r1005count(T1005* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r1005do_all(T1005* C,T0* a1);
/*FAST_ARRAY[INTEGER_32]*/void r1008swap(T1008* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1008make(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T2 r1008first(T1008* C);
/*FAST_ARRAY[INTEGER_32]*/void r1008remove_last(T1008* C);
/*FAST_ARRAY[INTEGER_32]*/void r1008put(T1008* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1008add(T1008* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1008move(T1008* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[INTEGER_32]*/T2 r1008last(T1008* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r1008fast_first_index_of(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1008add_last(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1008remove(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1008clear_count(T1008* C);
/*FAST_ARRAY[INTEGER_32]*/void r1008set_all_with(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r1008valid_index(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r1008fast_has(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1008with_capacity(T1008* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1008next_generation(T1008* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r1008count(T1008* C);
/*ARRAY[INTEGER_32]*/void r1010make(T1010* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1010resize(T1010* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1010put(T1010* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1010ensure_capacity_and_bounds(T1010* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_32]*/void r1010add_last(T1010* C,T2 a1);
/*ARRAY[INTEGER_32]*/T2 r1010item(T1010* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1010clear_all(T1010* C);
/*ARRAY[INTEGER_32]*/void r1010set_all_with(T1010* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1010force(T1010* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/T6 r1010valid_index(T1010* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1010with_capacity(T1010* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1010next_generation(T1010* C);
/*ARRAY[INTEGER_32]*/T2 r1010count(T1010* C);
/*ARRAY[TYPE_MARK]*/void r1012make(T1012* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r1012first(T1012* C);
/*ARRAY[TYPE_MARK]*/void r1012put(T1012* C,T0* a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r1012ensure_capacity_and_bounds(T1012* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE_MARK]*/void r1012manifest_put(T1012* C,T2 a1,T0* a2);
/*ARRAY[TYPE_MARK]*/void r1012copy(T1012* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T0* r1012last(T1012* C);
/*ARRAY[TYPE_MARK]*/void r1012add_last(T1012* C,T0* a1);
/*ARRAY[TYPE_MARK]*/void r1012mark_native_arrays(T1012* C);
/*ARRAY[TYPE_MARK]*/T0* r1012item(T1012* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r1012clear_all(T1012* C);
/*ARRAY[TYPE_MARK]*/void r1012manifest_make(T1012* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r1012twin(T1012* C);
/*ARRAY[TYPE_MARK]*/void r1012set_all_with(T1012* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T6 r1012valid_index(T1012* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r1012with_capacity(T1012* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r1012next_generation(T1012* C);
/*ARRAY[TYPE_MARK]*/T2 r1012count(T1012* C);
/*FAST_ARRAY[POSITION]*/void r1023swap(T1023* C,T2 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T332 r1023first(T1023* C);
/*FAST_ARRAY[POSITION]*/void r1023remove_last(T1023* C);
/*FAST_ARRAY[POSITION]*/void r1023put(T1023* C,T332 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T332 r1023last(T1023* C);
/*FAST_ARRAY[POSITION]*/void r1023add_last(T1023* C,T332 a1);
/*FAST_ARRAY[POSITION]*/void r1023clear_count(T1023* C);
/*FAST_ARRAY[POSITION]*/T6 r1023is_empty(T1023* C);
/*FAST_ARRAY[POSITION]*/void r1023with_capacity(T1023* C,T2 a1);
/*FAST_ARRAY[POSITION]*/void r1023next_generation(T1023* C);
/*FAST_ARRAY[POSITION]*/T2 r1023count(T1023* C);
/*FAST_ARRAY[FIXED_STRING]*/void r1030swap(T1030* C,T2 a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r1030put(T1030* C,T0* a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r1030add_last(T1030* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/T2 r1030fast_first_index_of(T1030* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1030mark_native_arrays(T1030* C);
/*FAST_ARRAY[FIXED_STRING]*/void r1030remove(T1030* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1030with_capacity(T1030* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1030next_generation(T1030* C);
/*FAST_ARRAY[FIXED_STRING]*/T2 r1030count(T1030* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039make(T1039* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/T0* r1039first(T1039* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039put(T1039* C,T0* a1,T2 a2);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039add_last(T1039* C,T0* a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039mark_native_arrays(T1039* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039clear_count(T1039* C);
/*FAST_ARRAY[FEATURE_NAME]*/T6 r1039valid_index(T1039* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039with_capacity(T1039* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1039next_generation(T1039* C);
/*FAST_ARRAY[FEATURE_NAME]*/T2 r1039count(T1039* C);
/*FAST_ARRAY[CLASSES]*/void r1043put(T1043* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r1043add(T1043* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r1043move(T1043* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLASSES]*/void r1043add_last(T1043* C,T0* a1);
/*FAST_ARRAY[CLASSES]*/void r1043mark_native_arrays(T1043* C);
/*FAST_ARRAY[CLASSES]*/T6 r1043is_empty(T1043* C);
/*FAST_ARRAY[CLASSES]*/void r1043with_capacity(T1043* C,T2 a1);
/*FAST_ARRAY[CLASSES]*/void r1043next_generation(T1043* C);
/*FAST_ARRAY[INTEGER_16]*/void r1046make(T1046* C,T2 a1);
/*FAST_ARRAY[INTEGER_16]*/void r1046add_last(T1046* C,T10 a1);
/*FAST_ARRAY[INTEGER_16]*/void r1046next_generation(T1046* C);
/*FAST_ARRAY[INTEGER_16]*/T2 r1046count(T1046* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1057copy(T1057* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1057add_last(T1057* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1057mark_native_arrays(T1057* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1057clear_count(T1057* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T6 r1057is_empty(T1057* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T0* r1057twin(T1057* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1057with_capacity(T1057* C,T2 a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1057next_generation(T1057* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058swap(T1058* C,T2 a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058make(T1058* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1058fast_index_of(T1058* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058put(T1058* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/T0* r1058last(T1058* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1058fast_first_index_of(T1058* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058add_last(T1058* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058mark_native_arrays(T1058* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058remove(T1058* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058clear_count(T1058* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1058is_empty(T1058* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1058valid_index(T1058* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1058fast_has(T1058* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058with_capacity(T1058* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1058next_generation(T1058* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1058count(T1058* C);
/*FAST_ARRAY[EXPRESSION]*/void r1059make(T1059* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/T0* r1059first(T1059* C);
/*FAST_ARRAY[EXPRESSION]*/void r1059put(T1059* C,T0* a1,T2 a2);
/*FAST_ARRAY[EXPRESSION]*/void r1059copy(T1059* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r1059add_last(T1059* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r1059mark_native_arrays(T1059* C);
/*FAST_ARRAY[EXPRESSION]*/T0* r1059twin(T1059* C);
/*FAST_ARRAY[EXPRESSION]*/void r1059with_capacity(T1059* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/void r1059next_generation(T1059* C);
/*FAST_ARRAY[EXPRESSION]*/T2 r1059count(T1059* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1061make(T1061* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/T0* r1061first(T1061* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1061put(T1061* C,T0* a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r1061ensure_capacity_and_bounds(T1061* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARGUMENT_NAME1]*/void r1061add_last(T1061* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1061mark_native_arrays(T1061* C);
/*ARRAY[ARGUMENT_NAME1]*/T0* r1061item(T1061* C,T2 a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1061clear_all(T1061* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1061set_all_with(T1061* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1061from_collection(T1061* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1061with_capacity(T1061* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r1061next_generation(T1061* C);
/*ARRAY[ARGUMENT_NAME1]*/T2 r1061count(T1061* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r1062first(T1062* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062put(T1062* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062ensure_capacity_and_bounds(T1062* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062mark_native_arrays(T1062* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r1062item(T1062* C,T2 a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062clear_all(T1062* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062set_all_with(T1062* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062from_collection(T1062* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062with_capacity(T1062* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1062next_generation(T1062* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T2 r1062count(T1062* C);
/*ARRAY[DECLARATION]*/void r1063make(T1063* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1063put(T1063* C,T0* a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1063ensure_capacity_and_bounds(T1063* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[DECLARATION]*/void r1063manifest_put(T1063* C,T2 a1,T0* a2);
/*ARRAY[DECLARATION]*/void r1063add_last(T1063* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1063mark_native_arrays(T1063* C);
/*ARRAY[DECLARATION]*/T0* r1063item(T1063* C,T2 a1);
/*ARRAY[DECLARATION]*/void r1063clear_all(T1063* C);
/*ARRAY[DECLARATION]*/T6 r1063is_empty(T1063* C);
/*ARRAY[DECLARATION]*/void r1063manifest_make(T1063* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1063set_all_with(T1063* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1063from_collection(T1063* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1063with_capacity(T1063* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1063next_generation(T1063* C);
/*ARRAY[DECLARATION]*/T2 r1063count(T1063* C);
/*FAST_ARRAY[ASSERTION]*/void r1064put(T1064* C,T0* a1,T2 a2);
/*FAST_ARRAY[ASSERTION]*/void r1064copy(T1064* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r1064add_last(T1064* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r1064mark_native_arrays(T1064* C);
/*FAST_ARRAY[ASSERTION]*/void r1064clear_count(T1064* C);
/*FAST_ARRAY[ASSERTION]*/T6 r1064is_empty(T1064* C);
/*FAST_ARRAY[ASSERTION]*/T0* r1064twin(T1064* C);
/*FAST_ARRAY[ASSERTION]*/void r1064with_capacity(T1064* C,T2 a1);
/*FAST_ARRAY[ASSERTION]*/void r1064next_generation(T1064* C);
/*FAST_ARRAY[ASSERTION]*/T2 r1064count(T1064* C);
/*FAST_ARRAY[ASSERTION]*/void r1064do_all(T1064* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1065make(T1065* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/T0* r1065first(T1065* C);
/*ARRAY[LOCAL_NAME1]*/void r1065put(T1065* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r1065ensure_capacity_and_bounds(T1065* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_NAME1]*/void r1065add_last(T1065* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1065mark_native_arrays(T1065* C);
/*ARRAY[LOCAL_NAME1]*/T0* r1065item(T1065* C,T2 a1);
/*ARRAY[LOCAL_NAME1]*/void r1065clear_all(T1065* C);
/*ARRAY[LOCAL_NAME1]*/void r1065set_all_with(T1065* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1065from_collection(T1065* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1065with_capacity(T1065* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r1065next_generation(T1065* C);
/*ARRAY[LOCAL_NAME1]*/T2 r1065count(T1065* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1066add_last(T1066* C,T0* a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1066mark_native_arrays(T1066* C);
/*FAST_ARRAY[MANIFEST_STRING]*/T6 r1066is_empty(T1066* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1066with_capacity(T1066* C,T2 a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1066next_generation(T1066* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067make(T1067* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067swap(T1067* C,T2 a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r1067first(T1067* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067put(T1067* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067copy(T1067* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067add_last(T1067* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067mark_native_arrays(T1067* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067remove(T1067* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067clear_count(T1067* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T6 r1067is_empty(T1067* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r1067twin(T1067* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067remove_tail(T1067* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067with_capacity(T1067* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1067next_generation(T1067* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T2 r1067count(T1067* C);
/*ARRAY[EXPORT_ITEM]*/void r1068put(T1068* C,T0* a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r1068ensure_capacity_and_bounds(T1068* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[EXPORT_ITEM]*/void r1068add_last(T1068* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r1068mark_native_arrays(T1068* C);
/*ARRAY[EXPORT_ITEM]*/T0* r1068item(T1068* C,T2 a1);
/*ARRAY[EXPORT_ITEM]*/void r1068clear_all(T1068* C);
/*ARRAY[EXPORT_ITEM]*/void r1068set_all_with(T1068* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r1068with_capacity(T1068* C,T2 a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r1068next_generation(T1068* C);
/*ARRAY[EXPORT_ITEM]*/T2 r1068count(T1068* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1070add_last(T1070* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T2 r1070fast_first_index_of(T1070* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1070mark_native_arrays(T1070* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r1070valid_index(T1070* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r1070fast_has(T1070* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1070with_capacity(T1070* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1070next_generation(T1070* C);
/*ARRAY[TYPE]*/T0* r1077first(T1077* C);
/*ARRAY[TYPE]*/void r1077put(T1077* C,T0* a1,T2 a2);
/*ARRAY[TYPE]*/void r1077ensure_capacity_and_bounds(T1077* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE]*/void r1077add_last(T1077* C,T0* a1);
/*ARRAY[TYPE]*/void r1077mark_native_arrays(T1077* C);
/*ARRAY[TYPE]*/T0* r1077item(T1077* C,T2 a1);
/*ARRAY[TYPE]*/void r1077clear_all(T1077* C);
/*ARRAY[TYPE]*/void r1077set_all_with(T1077* C,T0* a1);
/*ARRAY[TYPE]*/void r1077with_capacity(T1077* C,T2 a1,T2 a2);
/*ARRAY[TYPE]*/void r1077next_generation(T1077* C);
/*ARRAY[TYPE]*/T2 r1077count(T1077* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r1079add_last(T1079* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r1079fast_first_index_of(T1079* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1079mark_native_arrays(T1079* C);
/*FAST_ARRAY[RUN_FEATURE]*/T6 r1079valid_index(T1079* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1079with_capacity(T1079* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1079next_generation(T1079* C);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r1079count(T1079* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r1079do_all(T1079* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1098make(T1098* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T0* r1098first(T1098* C);
/*FAST_ARRAY[TYPE]*/void r1098resize(T1098* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1098remove_last(T1098* C);
/*FAST_ARRAY[TYPE]*/T0* r1098last(T1098* C);
/*FAST_ARRAY[TYPE]*/T2 r1098fast_first_index_of(T1098* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1098add_last(T1098* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1098mark_native_arrays(T1098* C);
/*FAST_ARRAY[TYPE]*/void r1098remove(T1098* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1098clear_count(T1098* C);
/*FAST_ARRAY[TYPE]*/T6 r1098valid_index(T1098* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T6 r1098fast_has(T1098* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1098with_capacity(T1098* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1098next_generation(T1098* C);
/*FAST_ARRAY[TYPE]*/T2 r1098count(T1098* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r1103add_last(T1103* C,T0* a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r1103mark_native_arrays(T1103* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r1103with_capacity(T1103* C,T2 a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r1103next_generation(T1103* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T2 r1104fast_first_index_of(T1104* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1104add_last(T1104* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1104mark_native_arrays(T1104* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1104is_empty(T1104* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1104valid_index(T1104* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1104fast_has(T1104* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1104with_capacity(T1104* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1104next_generation(T1104* C);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1104do_all(T1104* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1105add_last(T1105* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1105mark_native_arrays(T1105* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T6 r1105valid_index(T1105* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1105with_capacity(T1105* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1105next_generation(T1105* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T2 r1105count(T1105* C);
/*FAST_ARRAY[CODE]*/T0* r1106first(T1106* C);
/*FAST_ARRAY[CODE]*/void r1106remove_last(T1106* C);
/*FAST_ARRAY[CODE]*/void r1106put(T1106* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE]*/void r1106copy(T1106* C,T0* a1);
/*FAST_ARRAY[CODE]*/T0* r1106last(T1106* C);
/*FAST_ARRAY[CODE]*/void r1106add_last(T1106* C,T0* a1);
/*FAST_ARRAY[CODE]*/void r1106mark_native_arrays(T1106* C);
/*FAST_ARRAY[CODE]*/void r1106clear_count(T1106* C);
/*FAST_ARRAY[CODE]*/T6 r1106is_empty(T1106* C);
/*FAST_ARRAY[CODE]*/T0* r1106twin(T1106* C);
/*FAST_ARRAY[CODE]*/void r1106with_capacity(T1106* C,T2 a1);
/*FAST_ARRAY[CODE]*/void r1106next_generation(T1106* C);
/*FAST_ARRAY[CODE]*/T2 r1106count(T1106* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1117add_last(T1117* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1117fast_first_index_of(T1117* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1117mark_native_arrays(T1117* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1117clear_count(T1117* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r1117valid_index(T1117* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r1117fast_has(T1117* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1117with_capacity(T1117* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1117next_generation(T1117* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1117do_all(T1117* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r1119fast_first_index_of(T1119* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1119add_last(T1119* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1119mark_native_arrays(T1119* C);
/*FAST_ARRAY[AGENT_CREATION]*/void r1119clear_count(T1119* C);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r1119valid_index(T1119* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r1119fast_has(T1119* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1119with_capacity(T1119* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1119next_generation(T1119* C);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r1119count(T1119* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1123remove_last(T1123* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T0* r1123last(T1123* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1123add_last(T1123* C,T0* a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1123mark_native_arrays(T1123* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T6 r1123is_empty(T1123* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1123with_capacity(T1123* C,T2 a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1123next_generation(T1123* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1129remove_last(T1129* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T0* r1129last(T1129* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1129add_last(T1129* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1129mark_native_arrays(T1129* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1129clear_count(T1129* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T6 r1129is_empty(T1129* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1129with_capacity(T1129* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1129next_generation(T1129* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139make(T1139* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139ensure_capacity_and_bounds(T1139* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139manifest_put(T1139* C,T2 a1,T0* a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139mark_native_arrays(T1139* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T0* r1139item(T1139* C,T2 a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139clear_all(T1139* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139manifest_make(T1139* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139set_all_with(T1139* C,T0* a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1139next_generation(T1139* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T2 r1139count(T1139* C);
/*ARRAY[INTEGER_8]*/void r1140make(T1140* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1140ensure_capacity_and_bounds(T1140* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_8]*/void r1140manifest_put(T1140* C,T2 a1,T1 a2);
/*ARRAY[INTEGER_8]*/T1 r1140item(T1140* C,T2 a1);
/*ARRAY[INTEGER_8]*/void r1140clear_all(T1140* C);
/*ARRAY[INTEGER_8]*/void r1140manifest_make(T1140* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1140set_all_with(T1140* C,T1 a1);
/*ARRAY[INTEGER_8]*/void r1140next_generation(T1140* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141make(T1141* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1141first(T1141* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141remove_last(T1141* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1141last(T1141* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T2 r1141fast_first_index_of(T1141* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141add_last(T1141* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141mark_native_arrays(T1141* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141clear_count(T1141* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1141is_empty(T1141* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1141valid_index(T1141* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1141fast_has(T1141* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141with_capacity(T1141* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1141next_generation(T1141* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1154add_last(T1154* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1154mark_native_arrays(T1154* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1154clear_count(T1154* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T6 r1154is_empty(T1154* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1154with_capacity(T1154* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1154next_generation(T1154* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T2 r1154count(T1154* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1155add_last(T1155* C,T0* a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1155mark_native_arrays(T1155* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1155with_capacity(T1155* C,T2 a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1155next_generation(T1155* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1155do_all(T1155* C,T0* a1);
/*FAST_ARRAY[SE_CONFIG]*/void r1160make(T1160* C,T2 a1);
/*FAST_ARRAY[SE_CONFIG]*/void r1160add_last(T1160* C,T0* a1);
/*FAST_ARRAY[SE_CONFIG]*/void r1160mark_native_arrays(T1160* C);
/*FAST_ARRAY[SE_CONFIG]*/T6 r1160is_empty(T1160* C);
/*FAST_ARRAY[SE_CONFIG]*/void r1160next_generation(T1160* C);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1163make(T1163* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1163put(T1163* C,T301 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1163add(T1163* C,T301 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1163move(T1163* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1163add_last(T1163* C,T301 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1163is_empty(T1163* C);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1163valid_index(T1163* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1163next_generation(T1163* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1169remove_last(T1169* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T0* r1169last(T1169* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1169add_last(T1169* C,T0* a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1169mark_native_arrays(T1169* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T6 r1169is_empty(T1169* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1169with_capacity(T1169* C,T2 a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1169next_generation(T1169* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1179make(T1179* C,T2 a1);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1179remove_last(T1179* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T0* r1179last(T1179* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1179mark_native_arrays(T1179* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T6 r1179is_empty(T1179* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1179next_generation(T1179* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195put(T1195* C,T0* a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195ensure_capacity_and_bounds(T1195* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195add_last(T1195* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195mark_native_arrays(T1195* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T0* r1195item(T1195* C,T2 a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195clear_all(T1195* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195set_all_with(T1195* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195with_capacity(T1195* C,T2 a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1195next_generation(T1195* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T2 r1195count(T1195* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1204first(T1204* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1204put(T1204* C,T0* a1,T2 a2);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1204copy(T1204* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1204add_last(T1204* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1204mark_native_arrays(T1204* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1204twin(T1204* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1204with_capacity(T1204* C,T2 a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1204next_generation(T1204* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T2 r1204count(T1204* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1208first(T1208* C);
/*FAST_ARRAY[IFTHEN]*/void r1208remove_last(T1208* C);
/*FAST_ARRAY[IFTHEN]*/void r1208put(T1208* C,T0* a1,T2 a2);
/*FAST_ARRAY[IFTHEN]*/void r1208copy(T1208* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/T0* r1208last(T1208* C);
/*FAST_ARRAY[IFTHEN]*/void r1208add_last(T1208* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/void r1208mark_native_arrays(T1208* C);
/*FAST_ARRAY[IFTHEN]*/void r1208remove(T1208* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/T6 r1208is_empty(T1208* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1208twin(T1208* C);
/*FAST_ARRAY[IFTHEN]*/void r1208remove_tail(T1208* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1208with_capacity(T1208* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1208next_generation(T1208* C);
/*FAST_ARRAY[IFTHEN]*/void r1208remove_first(T1208* C);
/*FAST_ARRAY[IFTHEN]*/T2 r1208count(T1208* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1210first(T1210* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210put(T1210* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210copy(T1210* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210add_last(T1210* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210mark_native_arrays(T1210* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210append_traversable(T1210* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/T6 r1210is_empty(T1210* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1210twin(T1210* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210with_capacity(T1210* C,T2 a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1210next_generation(T1210* C);
/*FAST_ARRAY[WHEN_ITEM]*/T2 r1210count(T1210* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1211make(T1211* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1211first(T1211* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1211put(T1211* C,T0* a1,T2 a2);
/*FAST_ARRAY[INSTRUCTION]*/void r1211copy(T1211* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1211last(T1211* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1211add_last(T1211* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1211mark_native_arrays(T1211* C);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1211twin(T1211* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1211with_capacity(T1211* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1211next_generation(T1211* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1211remove_first(T1211* C);
/*FAST_ARRAY[INSTRUCTION]*/T2 r1211count(T1211* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1212put(T1212* C,T0* a1,T2 a2);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1212add_last(T1212* C,T0* a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1212mark_native_arrays(T1212* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1212with_capacity(T1212* C,T2 a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1212next_generation(T1212* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1213add_last(T1213* C,T0* a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1213mark_native_arrays(T1213* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1213with_capacity(T1213* C,T2 a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1213next_generation(T1213* C);
/*FAST_ARRAY[CLASS_NAME]*/void r1214add_last(T1214* C,T0* a1);
/*FAST_ARRAY[CLASS_NAME]*/void r1214mark_native_arrays(T1214* C);
/*FAST_ARRAY[CLASS_NAME]*/void r1214with_capacity(T1214* C,T2 a1);
/*FAST_ARRAY[CLASS_NAME]*/void r1214next_generation(T1214* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1233add_last(T1233* C,T0* a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1233mark_native_arrays(T1233* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1233with_capacity(T1233* C,T2 a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1233next_generation(T1233* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/T0* r1234first(T1234* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1234add_last(T1234* C,T0* a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1234mark_native_arrays(T1234* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1234with_capacity(T1234* C,T2 a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1234next_generation(T1234* C);
/*ARRAY[INDEX_CLAUSE]*/void r1238put(T1238* C,T0* a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1238ensure_capacity_and_bounds(T1238* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INDEX_CLAUSE]*/void r1238add_last(T1238* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1238mark_native_arrays(T1238* C);
/*ARRAY[INDEX_CLAUSE]*/void r1238clear_all(T1238* C);
/*ARRAY[INDEX_CLAUSE]*/void r1238set_all_with(T1238* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1238with_capacity(T1238* C,T2 a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1238next_generation(T1238* C);
/*ARRAY[INDEX_CLAUSE]*/T2 r1238count(T1238* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1339add_last(T1339* C,T0* a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1339mark_native_arrays(T1339* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1339with_capacity(T1339* C,T2 a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1339next_generation(T1339* C);
/*FAST_ARRAY[RENAME_PAIR]*/T2 r1339count(T1339* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1366make(T1366* C,T2 a1);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1366put(T1366* C,T0* a1,T2 a2);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1366mark_native_arrays(T1366* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1366next_generation(T1366* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1383make(T1383* C,T2 a1);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1383mark_native_arrays(T1383* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1383next_generation(T1383* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1409resize(T1409* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1409add_last(T1409* C,T0* a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1409mark_native_arrays(T1409* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1409with_capacity(T1409* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1409next_generation(T1409* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/T2 r1409count(T1409* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1411remove_last(T1411* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1411put(T1411* C,T0* a1,T2 a2);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/T0* r1411last(T1411* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1411add_last(T1411* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1411mark_native_arrays(T1411* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1411with_capacity(T1411* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1411next_generation(T1411* C);
/*FAST_ARRAY[E_OLD]*/void r1412add_last(T1412* C,T0* a1);
/*FAST_ARRAY[E_OLD]*/void r1412mark_native_arrays(T1412* C);
/*FAST_ARRAY[E_OLD]*/void r1412with_capacity(T1412* C,T2 a1);
/*FAST_ARRAY[E_OLD]*/void r1412next_generation(T1412* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1414add_last(T1414* C,T0* a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1414mark_native_arrays(T1414* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1414with_capacity(T1414* C,T2 a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1414next_generation(T1414* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1414do_all(T1414* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1420remove_last(T1420* C);
/*FAST_ARRAY[INLINE_MEMO]*/T0* r1420last(T1420* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1420add_last(T1420* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1420mark_native_arrays(T1420* C);
/*FAST_ARRAY[INLINE_MEMO]*/T6 r1420is_empty(T1420* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1420with_capacity(T1420* C,T2 a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1420next_generation(T1420* C);
/*ARRAY[FEATURE_STAMP]*/void r1422put(T1422* C,T0* a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1422ensure_capacity_and_bounds(T1422* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FEATURE_STAMP]*/void r1422add_last(T1422* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1422mark_native_arrays(T1422* C);
/*ARRAY[FEATURE_STAMP]*/T0* r1422item(T1422* C,T2 a1);
/*ARRAY[FEATURE_STAMP]*/void r1422clear_all(T1422* C);
/*ARRAY[FEATURE_STAMP]*/T6 r1422is_empty(T1422* C);
/*ARRAY[FEATURE_STAMP]*/void r1422set_all_with(T1422* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1422with_capacity(T1422* C,T2 a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1422next_generation(T1422* C);
/*ARRAY[FEATURE_STAMP]*/T2 r1422count(T1422* C);
/*FAST_ARRAY[POINTER]*/void r1423make(T1423* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1423put(T1423* C,T8 a1,T2 a2);
/*FAST_ARRAY[POINTER]*/void r1423manifest_put(T1423* C,T2 a1,T8 a2);
/*FAST_ARRAY[POINTER]*/void r1423manifest_make(T1423* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1423next_generation(T1423* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1436make(T1436* C,T2 a1);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1436mark_native_arrays(T1436* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1436next_generation(T1436* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468make(T1468* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468resize(T1468* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468remove_last(T1468* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468put(T1468* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE_CONTEXT]*/T0* r1468last(T1468* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468add_last(T1468* C,T0* a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468mark_native_arrays(T1468* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T6 r1468is_empty(T1468* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468with_capacity(T1468* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1468next_generation(T1468* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T2 r1468count(T1468* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469make(T1469* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469resize(T1469* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469put(T1469* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469ensure_capacity_and_bounds(T1469* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469add_last(T1469* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469mark_native_arrays(T1469* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T0* r1469item(T1469* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469clear_all(T1469* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469set_all_with(T1469* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469force(T1469* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T6 r1469valid_index(T1469* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1469next_generation(T1469* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T2 r1469count(T1469* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1475add_last(T1475* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1475mark_native_arrays(T1475* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1475with_capacity(T1475* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1475next_generation(T1475* C);
/*ARRAY[RUN_FEATURE_2]*/void r1481swap(T1481* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1481put(T1481* C,T0* a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1481ensure_capacity_and_bounds(T1481* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[RUN_FEATURE_2]*/void r1481add_last(T1481* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1481mark_native_arrays(T1481* C);
/*ARRAY[RUN_FEATURE_2]*/T0* r1481item(T1481* C,T2 a1);
/*ARRAY[RUN_FEATURE_2]*/void r1481clear_all(T1481* C);
/*ARRAY[RUN_FEATURE_2]*/void r1481set_all_with(T1481* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1481with_capacity(T1481* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1481next_generation(T1481* C);
/*ARRAY[RUN_FEATURE_2]*/T2 r1481count(T1481* C);
/*ARRAY[RUN_FEATURE_2]*/void r1481do_all(T1481* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1488add_last(T1488* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1488mark_native_arrays(T1488* C);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1488with_capacity(T1488* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1488next_generation(T1488* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1489add_last(T1489* C,T0* a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1489mark_native_arrays(T1489* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1489with_capacity(T1489* C,T2 a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1489next_generation(T1489* C);
/*FAST_ARRAY[CHARACTER]*/void r1518make(T1518* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1518resize(T1518* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1518put(T1518* C,T3 a1,T2 a2);
/*FAST_ARRAY[CHARACTER]*/void r1518next_generation(T1518* C);
/*FAST_ARRAY[CHARACTER]*/T2 r1518count(T1518* C);
extern T0*oBC285common_free_nodes;
extern int fBC285common_free_nodes;
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997common_free_nodes(void);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997make(T997* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997key(T997* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997put(T997* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997new_node(T997* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997add(T997* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997at(T997* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997set_cache_user(T997* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r997prime_capacity(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997buckets_item(T1035 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r997should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r997key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997reference_at(T997* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r997prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997dispose_node(T997* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997item(T997* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997remove(T997* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997create_with_capacity(T997* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997increase_capacity(T997* C);
/*HASHED_DICTIONARY[STRING,STRING]*/void r997next_generation(T997* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r997hash_code(T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r997has(T997* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r997new_iterator_on_keys(T997* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1003common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1003make(T1003* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1003key(T1003* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1003new_node(T1003* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1003add(T1003* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1003set_cache_user(T1003* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1003prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1003buckets_item(T1073 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r1003should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1003prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1003item(T1003* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1003create_with_capacity(T1003* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1003increase_capacity(T1003* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r1003fast_has(T1003* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1003next_generation(T1003* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1003hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1006common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1006make(T1006* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1006put(T1006* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1006new_node(T1006* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1006prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1006buckets_item(T1089 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r1006should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r1006key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1006reference_at(T1006* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1006prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1006create_with_capacity(T1006* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1006increase_capacity(T1006* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1006next_generation(T1006* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1006hash_code(T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1007common_free_nodes(void);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007make(T1007* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007put(T1007* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1007new_node(T1007* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007add(T1007* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007set_cache_user(T1007* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1007prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1007buckets_item(T1092 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r1007should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r1007key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1007reference_at(T1007* C,T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1007prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1007item(T1007* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007create_with_capacity(T1007* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007increase_capacity(T1007* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1007next_generation(T1007* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1007hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1013make(T1013* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1013common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1013new_node(T1013* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1013add(T1013* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1013prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1013buckets_item(T1127 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r1013should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1013prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1013create_with_capacity(T1013* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1013increase_capacity(T1013* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r1013fast_has(T1013* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1013with_capacity(T1013* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1013next_generation(T1013* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1013hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1013fast_reference_at(T1013* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1016common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1016key(T1016* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1016new_node(T1016* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1016add(T1016* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1016set_cache_user(T1016* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1016prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1016buckets_item(T1144 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r1016should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r1016key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1016reference_at(T1016* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1016prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1016upper(T1016* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1016item(T1016* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1016create_with_capacity(T1016* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1016increase_capacity(T1016* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1016with_capacity(T1016* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1016next_generation(T1016* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1016hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1017common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1017key(T1017* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1017fast_key_at(T1017* C,T10 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1017new_node(T1017* C,T10 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017add(T1017* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017set_cache_user(T1017* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1017prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1017buckets_item(T1147 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r1017should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1017prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r1017item(T1017* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r1017fast_at(T1017* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017create_with_capacity(T1017* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017increase_capacity(T1017* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r1017fast_has(T1017* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017with_capacity(T1017* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017next_generation(T1017* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1017fast_put(T1017* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1017hash_code(T0* a1);
extern T0*oBC327common_free_nodes;
extern int fBC327common_free_nodes;
/*HASHED_SET[HASHED_STRING]*/T0* r1018common_free_nodes(void);
/*HASHED_SET[HASHED_STRING]*/T0* r1018new_node(T1018* C,T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T6 r1018safe_equal(T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/void r1018add(T1018* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/void r1018manifest_put(T1018* C,T2 a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T2 r1018prime_capacity(T2 a1);
/*HASHED_SET[HASHED_STRING]*/T6 r1018should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[HASHED_STRING]*/T0* r1018reference_at(T1018* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/T2 r1018prime_number_ceiling(T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1018manifest_make(T1018* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1018create_with_capacity(T1018* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1018increase_capacity(T1018* C);
/*HASHED_SET[HASHED_STRING]*/void r1018with_capacity(T1018* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1018next_generation(T1018* C);
/*HASHED_SET[HASHED_STRING]*/T2 r1018hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1022common_free_nodes(void);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022make(T1022* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1022key(T1022* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1022new_node(T1022* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022add(T1022* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022set_cache_user(T1022* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1022prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1022buckets_item(T1158 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1022should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1022key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1022prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1022item(T1022* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022create_with_capacity(T1022* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022increase_capacity(T1022* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022next_generation(T1022* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1022hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1022do_all(T1022* C,T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1022has(T1022* C,T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1024quick_sort_region(T0* a1,T2 a2,T2 a3);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1024lt(T332 a1,T332 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1024quick_sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1024lte(T332 a1,T332 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1024sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1024is_sorted(T0* a1);
/*COLLECTION_SORTER[STRING]*/void r1026add(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1026quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[STRING]*/T2 r1026insert_index(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/T6 r1026lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1026quick_sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r1026lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1026sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r1026is_sorted(T0* a1);
/*STACK[STRING]*/void r1027make(T1027* C);
/*STACK[STRING]*/void r1027mark_native_arrays(T1027* C);
/*STACK[STRING]*/void r1027push(T1027* C,T0* a1);
/*STACK[STRING]*/void r1027pop(T1027* C);
/*STACK[STRING]*/T0* r1027top(T1027* C);
/*STACK[STRING]*/void r1027with_capacity(T1027* C,T2 a1);
/*STACK[STRING]*/void r1027next_generation(T1027* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1029common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1029make(T1029* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1029new_node(T1029* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1029add(T1029* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1029prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1029buckets_item(T1165 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r1029should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r1029key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1029reference_at(T1029* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1029prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1029create_with_capacity(T1029* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1029increase_capacity(T1029* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1029next_generation(T1029* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1029hash_code(T2 a1);
/*HASHED_DICTIONARY_NODE[STRING,STRING]*/void r1031make(T1031* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r1034set_item(T1034* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1036set_item(T1036* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1037make(T1037* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1038new_node(T1038* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1038add(T1038* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1038prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1038buckets_item(T1171 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T6 r1038should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1038special_common_dictionary(T1038* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1038prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1038increase_capacity(T1038* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1038next_generation(T1038* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1038hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1038fast_reference_at(T1038* C,T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1041quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1041lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1041quick_sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1041lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1041sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1041is_sorted(T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1048common_free_nodes(void);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1048make(T1048* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1048new_node(T1048* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1048add(T1048* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1048prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1048buckets_item(T1183 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r1048should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r1048key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1048reference_at(T1048* C,T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1048prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1048create_with_capacity(T1048* C,T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1048increase_capacity(T1048* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1048next_generation(T1048* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1048hash_code(T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1050common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1050make(T1050* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1050new_node(T1050* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1050add(T1050* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1050prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1050buckets_item(T1186 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r1050should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r1050key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1050reference_at(T1050* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1050prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1050create_with_capacity(T1050* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1050increase_capacity(T1050* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1050next_generation(T1050* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1050hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T0* r1052common_free_nodes(void);
/*HASHED_SET[CLASS_NAME]*/void r1052make(T1052* C);
/*HASHED_SET[CLASS_NAME]*/T0* r1052new_node(T1052* C,T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/void r1052add(T1052* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1052safe_equal(T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/T2 r1052prime_capacity(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1052should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[CLASS_NAME]*/T2 r1052prime_number_ceiling(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T0* r1052dispose_node(T1052* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/void r1052clear_count(T1052* C);
/*HASHED_SET[CLASS_NAME]*/void r1052create_with_capacity(T1052* C,T2 a1);
/*HASHED_SET[CLASS_NAME]*/void r1052increase_capacity(T1052* C);
/*HASHED_SET[CLASS_NAME]*/void r1052next_generation(T1052* C);
/*HASHED_SET[CLASS_NAME]*/T2 r1052hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1052has(T1052* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1054common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1054make(T1054* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1054put(T1054* C,T2 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1054new_node(T1054* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1054at(T1054* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1054internal_key(T1054* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1054prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1054buckets_item(T1192 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1054should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1054key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1054prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1054create_with_capacity(T1054* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1054increase_capacity(T1054* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1054next_generation(T1054* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1054hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1054has(T1054* C,T0* a1);
/*STACK[TMP_FEATURE]*/void r1060make(T1060* C);
/*STACK[TMP_FEATURE]*/void r1060mark_native_arrays(T1060* C);
/*STACK[TMP_FEATURE]*/void r1060push(T1060* C,T0* a1);
/*STACK[TMP_FEATURE]*/T6 r1060is_empty(T1060* C);
/*STACK[TMP_FEATURE]*/void r1060pop(T1060* C);
/*STACK[TMP_FEATURE]*/T0* r1060top(T1060* C);
/*STACK[TMP_FEATURE]*/void r1060with_capacity(T1060* C,T2 a1);
/*STACK[TMP_FEATURE]*/void r1060next_generation(T1060* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r1069common_free_nodes(void);
/*HASHED_SET[LIVE_TYPE]*/void r1069make(T1069* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r1069new_node(T1069* C,T0* a1,T0* a2);
/*HASHED_SET[LIVE_TYPE]*/void r1069set_cache_user(T1069* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T2 r1069prime_capacity(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T6 r1069should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[LIVE_TYPE]*/T2 r1069prime_number_ceiling(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r1069dispose_node(T1069* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r1069item(T1069* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1069clear_count(T1069* C);
/*HASHED_SET[LIVE_TYPE]*/void r1069create_with_capacity(T1069* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1069increase_capacity(T1069* C);
/*HASHED_SET[LIVE_TYPE]*/T6 r1069fast_has(T1069* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r1069with_capacity(T1069* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1069next_generation(T1069* C);
/*HASHED_SET[LIVE_TYPE]*/T2 r1069hash_code(T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r1069fast_add(T1069* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r1071set_item(T1071* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]*/void r1072make(T1072* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076key(T1076* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076new_node(T1076* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076fast_remove(T1076* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076add(T1076* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076set_cache_user(T1076* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1076prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076buckets_item(T1224 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1076should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1076key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1076prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1076upper(T1076* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076dispose_node(T1076* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076item(T1076* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1076fast_at(T1076* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076remove(T1076* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076clear_count(T1076* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076create_with_capacity(T1076* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076increase_capacity(T1076* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1076fast_has(T1076* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076with_capacity(T1076* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076next_generation(T1076* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1076fast_put(T1076* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1076hash_code(T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1085mark_native_arrays(T1085* C);
/*STACK[ANONYMOUS_FEATURE]*/void r1085push(T1085* C,T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1085pop(T1085* C);
/*STACK[ANONYMOUS_FEATURE]*/T0* r1085top(T1085* C);
/*STACK[ANONYMOUS_FEATURE]*/void r1085with_capacity(T1085* C,T2 a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1085next_generation(T1085* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1086common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1086new_node(T1086* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1086add(T1086* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1086prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1086buckets_item(T1230 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r1086should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1086prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T1 r1086fast_at(T1086* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1086create_with_capacity(T1086* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1086increase_capacity(T1086* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r1086fast_has(T1086* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1086with_capacity(T1086* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1086next_generation(T1086* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1086hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1087make(T1087* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087key(T1087* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087new_node(T1087* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1087add(T1087* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087at(T1087* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1087set_cache_user(T1087* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087internal_key(T1087* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1087prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087buckets_item(T1237 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1087should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1087key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087reference_at(T1087* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1087prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1087item(T1087* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1087create_with_capacity(T1087* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1087increase_capacity(T1087* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1087next_generation(T1087* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1087hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1087has(T1087* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1088make(T1088* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r1090set_item(T1090* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]*/void r1091make(T1091* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r1093set_item(T1093* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1095common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1095new_node(T1095* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1095add(T1095* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1095prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1095buckets_item(T1239 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r1095should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1095prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T1 r1095fast_at(T1095* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1095create_with_capacity(T1095* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1095increase_capacity(T1095* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r1095fast_has(T1095* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1095with_capacity(T1095* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1095next_generation(T1095* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1095hash_code(T0* a1);
extern T0*oBC680common_free_nodes;
extern int fBC680common_free_nodes;
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099common_free_nodes(void);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099key(T1099* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099fast_key_at(T1099* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099new_node(T1099* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1099add(T1099* C,T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1099set_cache_user(T1099* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099internal_key(T1099* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1099prime_capacity(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1099should_increase_capacity(T2 a1,T2 a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1099key_safe_equal(T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099reference_at(T1099* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1099prime_number_ceiling(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1099item(T1099* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1099increase_capacity(T1099* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1099with_capacity(T1099* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1099next_generation(T1099* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1099basic_make(T1099* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1099has(T1099* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1102common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1102new_node(T1102* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1102add(T1102* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1102prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1102buckets_item(T1252 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r1102should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1102prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1102create_with_capacity(T1102* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1102increase_capacity(T1102* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r1102fast_has(T1102* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1102with_capacity(T1102* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1102next_generation(T1102* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1102hash_code(T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1102fast_reference_at(T1102* C,T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1107common_free_nodes(void);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1107new_node(T1107* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1107add(T1107* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1107set_cache_user(T1107* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1107prime_capacity(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1107buckets_item(T1258 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T6 r1107should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1107prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1107item(T1107* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1107create_with_capacity(T1107* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1107increase_capacity(T1107* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1107with_capacity(T1107* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1107next_generation(T1107* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1107hash_code(T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1107fast_reference_at(T1107* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r1109common_free_nodes(void);
/*HASHED_SET[TYPE]*/void r1109make(T1109* C);
/*HASHED_SET[TYPE]*/T0* r1109new_node(T1109* C,T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/T6 r1109safe_equal(T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/void r1109add(T1109* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1109set_cache_user(T1109* C,T2 a1);
/*HASHED_SET[TYPE]*/T2 r1109prime_capacity(T2 a1);
/*HASHED_SET[TYPE]*/T6 r1109should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[TYPE]*/T2 r1109prime_number_ceiling(T2 a1);
/*HASHED_SET[TYPE]*/T0* r1109dispose_node(T1109* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r1109item(T1109* C,T2 a1);
/*HASHED_SET[TYPE]*/void r1109remove(T1109* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1109clear_count(T1109* C);
/*HASHED_SET[TYPE]*/void r1109create_with_capacity(T1109* C,T2 a1);
/*HASHED_SET[TYPE]*/void r1109increase_capacity(T1109* C);
/*HASHED_SET[TYPE]*/void r1109next_generation(T1109* C);
/*HASHED_SET[TYPE]*/T2 r1109hash_code(T0* a1);
/*HASHED_SET[TYPE]*/T6 r1109has(T1109* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1109fast_add(T1109* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1113common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113put(T1113* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1113new_node(T1113* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113set_cache_user(T1113* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1113prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1113buckets_item(T1265 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1113should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1113key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1113prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1113dispose_node(T1113* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1113item(T1113* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113clear_count(T1113* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113create_with_capacity(T1113* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113increase_capacity(T1113* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113with_capacity(T1113* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1113next_generation(T1113* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1113hash_code(T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1113has(T1113* C,T0* a1);
/*HASHED_SET[STRING]*/void r1114make(T1114* C);
/*HASHED_SET[STRING]*/T0* r1114common_free_nodes(void);
/*HASHED_SET[STRING]*/T0* r1114new_node(T1114* C,T0* a1,T0* a2);
/*HASHED_SET[STRING]*/T6 r1114safe_equal(T0* a1,T0* a2);
/*HASHED_SET[STRING]*/void r1114add(T1114* C,T0* a1);
/*HASHED_SET[STRING]*/void r1114manifest_put(T1114* C,T2 a1,T0* a2);
/*HASHED_SET[STRING]*/T2 r1114prime_capacity(T2 a1);
/*HASHED_SET[STRING]*/T6 r1114should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[STRING]*/T2 r1114prime_number_ceiling(T2 a1);
/*HASHED_SET[STRING]*/T0* r1114dispose_node(T1114* C,T0* a1);
/*HASHED_SET[STRING]*/void r1114clear_count(T1114* C);
/*HASHED_SET[STRING]*/void r1114manifest_make(T1114* C,T2 a1);
/*HASHED_SET[STRING]*/void r1114create_with_capacity(T1114* C,T2 a1);
/*HASHED_SET[STRING]*/void r1114increase_capacity(T1114* C);
/*HASHED_SET[STRING]*/T6 r1114fast_has(T1114* C,T0* a1);
/*HASHED_SET[STRING]*/void r1114with_capacity(T1114* C,T2 a1);
/*HASHED_SET[STRING]*/void r1114next_generation(T1114* C);
/*HASHED_SET[STRING]*/T2 r1114hash_code(T0* a1);
/*HASHED_SET[STRING]*/T6 r1114has(T1114* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1115common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115put(T1115* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1115new_node(T1115* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115set_cache_user(T1115* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1115prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1115buckets_item(T1271 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r1115should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r1115key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1115reference_at(T1115* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1115prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1115dispose_node(T1115* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1115item(T1115* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115clear_count(T1115* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115create_with_capacity(T1115* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115increase_capacity(T1115* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115with_capacity(T1115* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1115next_generation(T1115* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1115hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1116common_free_nodes(void);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116make(T1116* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1116new_node(T1116* C,T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r1116safe_equal(T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116add(T1116* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116set_cache_user(T1116* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1116prime_capacity(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r1116should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1116prime_number_ceiling(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1116dispose_node(T1116* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1116item(T1116* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116clear_count(T1116* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116create_with_capacity(T1116* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116increase_capacity(T1116* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116next_generation(T1116* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1116hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1116do_all(T1116* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1118common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1118make(T1118* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1118key(T1118* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1118new_node(T1118* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1118add(T1118* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1118set_cache_user(T1118* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1118prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1118buckets_item(T1278 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r1118should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r1118key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1118reference_at(T1118* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1118prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1118item(T1118* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1118create_with_capacity(T1118* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1118increase_capacity(T1118* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1118next_generation(T1118* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1118hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1121common_free_nodes(void);
/*HASHED_SET[AGENT_ARGS]*/void r1121make(T1121* C);
/*HASHED_SET[AGENT_ARGS]*/T0* r1121new_node(T1121* C,T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/T6 r1121safe_equal(T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/void r1121add(T1121* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/void r1121set_cache_user(T1121* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T2 r1121prime_capacity(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r1121should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[AGENT_ARGS]*/T2 r1121prime_number_ceiling(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1121dispose_node(T1121* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1121item(T1121* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r1121clear_count(T1121* C);
/*HASHED_SET[AGENT_ARGS]*/void r1121create_with_capacity(T1121* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r1121increase_capacity(T1121* C);
/*HASHED_SET[AGENT_ARGS]*/void r1121next_generation(T1121* C);
/*HASHED_SET[AGENT_ARGS]*/T2 r1121hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r1121has(T1121* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122make(T1122* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122key(T1122* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122new_node(T1122* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122set_cache_user(T1122* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1122prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122buckets_item(T1283 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T6 r1122should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1122prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122dispose_node(T1122* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122item(T1122* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122clear_count(T1122* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122create_with_capacity(T1122* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122increase_capacity(T1122* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122next_generation(T1122* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1122fast_put(T1122* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1122hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1122fast_reference_at(T1122* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r1125set_item(T1125* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]*/void r1126make(T1126* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1128common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1128new_node(T1128* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1128add(T1128* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1128set_cache_user(T1128* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1128prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1128buckets_item(T1286 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1128should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1128key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1128reference_at(T1128* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1128prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1128item(T1128* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1128create_with_capacity(T1128* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1128increase_capacity(T1128* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1128with_capacity(T1128* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1128next_generation(T1128* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1128hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1130common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1130new_node(T1130* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1130add(T1130* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1130prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1130buckets_item(T1292 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1130should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1130key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1130reference_at(T1130* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1130prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1130dispose_node(T1130* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1130clear_count(T1130* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1130create_with_capacity(T1130* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1130increase_capacity(T1130* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1130with_capacity(T1130* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1130next_generation(T1130* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1130hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1130has(T1130* C,T0* a1);
/*QUEUE[TYPE]*/T0* r1131first(T1131* C);
/*QUEUE[TYPE]*/void r1131put(T1131* C,T0* a1,T2 a2);
/*QUEUE[TYPE]*/void r1131add(T1131* C,T0* a1);
/*QUEUE[TYPE]*/void r1131move(T1131* C,T2 a1,T2 a2,T2 a3);
/*QUEUE[TYPE]*/void r1131collection_with_capacity(T1131* C,T2 a1,T2 a2);
/*QUEUE[TYPE]*/T2 r1131wrap_point(T1131* C);
/*QUEUE[TYPE]*/void r1131mark_native_arrays(T1131* C);
/*QUEUE[TYPE]*/void r1131make_space_for_one(T1131* C);
/*QUEUE[TYPE]*/void r1131squeeze_bubble(T1131* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*QUEUE[TYPE]*/T0* r1131item(T1131* C,T2 a1);
/*QUEUE[TYPE]*/T2 r1131storage_upper(T1131* C);
/*QUEUE[TYPE]*/void r1131remove(T1131* C);
/*QUEUE[TYPE]*/T6 r1131is_empty(T1131* C);
/*QUEUE[TYPE]*/T6 r1131is_wrapped(T1131* C);
/*QUEUE[TYPE]*/T2 r1131storage_index(T1131* C,T2 a1);
/*QUEUE[TYPE]*/void r1131with_capacity(T1131* C,T2 a1);
/*QUEUE[TYPE]*/void r1131next_generation(T1131* C);
/*QUEUE[TYPE]*/T2 r1131count(T1131* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1132common_free_nodes(void);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132make(T1132* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1132new_node(T1132* C,T329 a1,T0* a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r1132safe_equal(T329 a1,T329 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132add(T1132* C,T329 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132set_cache_user(T1132* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1132prime_capacity(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r1132should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1132prime_number_ceiling(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1132dispose_node(T1132* C,T0* a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T329 r1132item(T1132* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132clear_count(T1132* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132create_with_capacity(T1132* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132increase_capacity(T1132* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1132next_generation(T1132* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1132hash_code(T329 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133make(T1133* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T329 r1133key(T1133* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133put(T1133* C,T0* a1,T329 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133new_node(T1133* C,T0* a1,T329 a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133add(T1133* C,T0* a1,T329 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133at(T1133* C,T329 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133set_cache_user(T1133* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1133prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133buckets_item(T1298 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1133should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1133key_safe_equal(T329 a1,T329 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133reference_at(T1133* C,T329 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1133prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133dispose_node(T1133* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1133item(T1133* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133remove(T1133* C,T329 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133clear_count(T1133* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133create_with_capacity(T1133* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133increase_capacity(T1133* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1133next_generation(T1133* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1133hash_code(T329 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1133has(T1133* C,T329 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1138common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1138new_node(T1138* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1138add(T1138* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1138prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1138buckets_item(T1301 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r1138should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1138prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1138fast_at(T1138* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1138create_with_capacity(T1138* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1138increase_capacity(T1138* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r1138fast_has(T1138* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1138with_capacity(T1138* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1138next_generation(T1138* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1138fast_put(T1138* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1138hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1138fast_reference_at(T1138* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1142set_item(T1142* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1143make(T1143* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1145set_item(T1145* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]*/void r1146make(T1146* C,T10 a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[HASHED_STRING]*/void r1149make(T1149* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[HASHED_STRING]]*/void r1152set_item(T1152* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1153common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1153make(T1153* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1153new_node(T1153* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1153add(T1153* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1153prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1153buckets_item(T1306 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T6 r1153should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1153prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1153create_with_capacity(T1153* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1153increase_capacity(T1153* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1153next_generation(T1153* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1153hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1153fast_reference_at(T1153* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1156set_item(T1156* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]*/void r1157make(T1157* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1161common_free_nodes(void);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1161make(T1161* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1161put(T1161* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1161new_node(T1161* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1161prime_capacity(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1161buckets_item(T1312 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1161should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1161reference_at(T1161* C,T0* a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1161key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1161prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1161create_with_capacity(T1161* C,T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1161increase_capacity(T1161* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1161next_generation(T1161* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1161hash_code(T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1166make(T1166* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1167set_item(T1167* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174common_free_nodes(void);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174make(T1174* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174new_node(T1174* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174add(T1174* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174at(T1174* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1174prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174buckets_item(T1317 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1174should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174reference_at(T1174* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1174key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1174prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174dispose_node(T1174* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174clear_count(T1174* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174create_with_capacity(T1174* C,T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174increase_capacity(T1174* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174next_generation(T1174* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1174hash_code(T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1174new_iterator_on_keys(T1174* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1174has(T1174* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174_P_285_add(T1174* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174_P_285_clear_count(T1174* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1174_P_285_create_with_capacity(T1174* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T1175*create1175make(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175common_free_nodes(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175make(T1175* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175key(T1175* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175put(T1175* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175new_node(T1175* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175add(T1175* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175set_cache_user(T1175* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175at(T1175* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1175prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175buckets_item(T1035 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1175should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1175key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175reference_at(T1175* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1175prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175dispose_node(T1175* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175item(T1175* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175remove(T1175* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175clear_count(T1175* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175create_with_capacity(T1175* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175increase_capacity(T1175* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175next_generation(T1175* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1175hash_code(T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1175new_iterator_on_keys(T1175* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1175has(T1175* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175_P_285_put(T1175* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175_P_285_add(T1175* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175_P_285_clear_count(T1175* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1175_P_285_create_with_capacity(T1175* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1177common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1177make(T1177* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1177key(T1177* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1177new_node(T1177* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1177add(T1177* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1177set_cache_user(T1177* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1177prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1177buckets_item(T1323 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1177should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1177key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1177reference_at(T1177* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1177prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1177item(T1177* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1177create_with_capacity(T1177* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1177increase_capacity(T1177* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1177next_generation(T1177* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1177hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1180common_free_nodes(void);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1180make(T1180* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1180put(T1180* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1180new_node(T1180* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1180prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1180buckets_item(T1328 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1180should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1180key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1180prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1180create_with_capacity(T1180* C,T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1180increase_capacity(T1180* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1180next_generation(T1180* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1180hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1180has(T1180* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1181set_item(T1181* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASSES,STRING]*/void r1182make(T1182* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1184set_item(T1184* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]*/void r1185make(T1185* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[CLASS_NAME]*/void r1188make(T1188* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[CLASS_NAME]]*/void r1189set_item(T1189* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1190set_item(T1190* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]*/void r1191make(T1191* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1193common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1193make(T1193* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1193new_node(T1193* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1193add(T1193* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1193prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1193buckets_item(T1329 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1193should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1193prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1193create_with_capacity(T1193* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1193increase_capacity(T1193* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1193fast_has(T1193* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1193next_generation(T1193* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1193hash_code(T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1193fast_reference_at(T1193* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196make(T1196* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196key(T1196* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196put(T1196* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196new_node(T1196* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196add(T1196* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196set_cache_user(T1196* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196copy(T1196* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1196prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196buckets_item(T1335 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1196should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1196key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1196prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196dispose_node(T1196* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196item(T1196* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196clear_count(T1196* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196twin(T1196* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196create_with_capacity(T1196* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196increase_capacity(T1196* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196with_capacity(T1196* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196next_generation(T1196* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1196fast_put(T1196* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1196hash_code(T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1196fast_reference_at(T1196* C,T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1197common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1197new_node(T1197* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1197prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1197buckets_item(T1338 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T6 r1197should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1197prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1197create_with_capacity(T1197* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1197increase_capacity(T1197* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1197with_capacity(T1197* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1197next_generation(T1197* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1197fast_put(T1197* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1197hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1197fast_reference_at(T1197* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1215common_free_nodes(void);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1215put(T1215* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1215new_node(T1215* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1215add(T1215* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1215internal_key(T1215* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1215prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1215buckets_item(T1350 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1215should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1215key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1215reference_at(T1215* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1215prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1215create_with_capacity(T1215* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1215increase_capacity(T1215* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1215with_capacity(T1215* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1215next_generation(T1215* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1215hash_code(T0* a1);
/*HASHED_SET_NODE[LIVE_TYPE]*/void r1219make(T1219* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[LIVE_TYPE]]*/void r1220set_item(T1220* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1222set_item(T1222* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1223make(T1223* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]*/void r1231make(T1231* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1232set_item(T1232* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1235set_item(T1235* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1236make(T1236* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]*/void r1240make(T1240* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1241set_item(T1241* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1245make(T1245* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1247common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1247make(T1247* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1247new_node(T1247* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1247add(T1247* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1247prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1247buckets_item(T1354 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T6 r1247should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1247prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1247create_with_capacity(T1247* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1247increase_capacity(T1247* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1247next_generation(T1247* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1247hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1247fast_reference_at(T1247* C,T0* a1);
/*WEAK_REFERENCE[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1249set_item(T1249* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1250set_item(T1250* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]*/void r1251make(T1251* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]*/void r1256make(T1256* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1257set_item(T1257* C,T0* a1);
/*HASHED_SET_NODE[TYPE]*/void r1261make(T1261* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[TYPE]]*/void r1262set_item(T1262* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1263set_item(T1263* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]*/void r1264make(T1264* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[STRING]*/void r1267make(T1267* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[STRING]]*/void r1268set_item(T1268* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1269set_item(T1269* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]*/void r1270make(T1270* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[MANIFEST_GENERIC]*/void r1273make(T1273* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1274set_item(T1274* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1276make(T1276* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1277set_item(T1277* C,T0* a1);
/*HASHED_SET_NODE[AGENT_ARGS]*/void r1280make(T1280* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[AGENT_ARGS]]*/void r1281set_item(T1281* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]*/void r1282make(T1282* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1284set_item(T1284* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1287make(T1287* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1288set_item(T1288* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1290set_item(T1290* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1291make(T1291* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]*/void r1294make(T1294* C,T329 a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1295set_item(T1295* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1296set_item(T1296* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1297make(T1297* C,T0* a1,T329 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1299set_item(T1299* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]*/void r1300make(T1300* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1304set_item(T1304* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1305make(T1305* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET[GRAPH_NODE]*/T0* r1309common_free_nodes(void);
/*HASHED_SET[GRAPH_NODE]*/void r1309make(T1309* C);
/*HASHED_SET[GRAPH_NODE]*/T0* r1309new_node(T1309* C,T0* a1,T0* a2);
/*HASHED_SET[GRAPH_NODE]*/void r1309set_cache_user(T1309* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T2 r1309prime_capacity(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T6 r1309should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[GRAPH_NODE]*/T2 r1309prime_number_ceiling(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1309dispose_node(T1309* C,T0* a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1309item(T1309* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1309clear_count(T1309* C);
/*HASHED_SET[GRAPH_NODE]*/void r1309create_with_capacity(T1309* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1309increase_capacity(T1309* C);
/*HASHED_SET[GRAPH_NODE]*/void r1309next_generation(T1309* C);
/*HASHED_SET[GRAPH_NODE]*/T2 r1309hash_code(T0* a1);
/*HASHED_SET[GRAPH_NODE]*/void r1309fast_add(T1309* C,T0* a1);
/*HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]*/void r1311make(T1311* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1313set_item(T1313* C,T0* a1);
/*WEAK_REFERENCE[STRING]*/void r1315set_item(T1315* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1318make(T1318* C,T0* a1,T0* a2,T0* a3);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1319make(T1319* C,T0* a1);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T6 r1319is_off(T1319* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1319next(T1319* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T2 r1319iterable_generation(T1319* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T0* r1319item(T1319* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1319start(T1319* C);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1321set_item(T1321* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLUSTER,STRING]*/void r1322make(T1322* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1324set_item(T1324* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1326set_item(T1326* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]*/void r1327make(T1327* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]*/void r1330make(T1330* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1331set_item(T1331* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1333set_item(T1333* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]*/void r1334make(T1334* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1336set_item(T1336* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]*/void r1337make(T1337* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1345common_free_nodes(void);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1345make(T1345* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1345put(T1345* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1345new_node(T1345* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1345prime_capacity(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1345buckets_item(T1365 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1345should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1345key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1345reference_at(T1345* C,T0* a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1345prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1345create_with_capacity(T1345* C,T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1345increase_capacity(T1345* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1345next_generation(T1345* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1345hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1348set_item(T1348* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]*/void r1349make(T1349* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1355make(T1355* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1356set_item(T1356* C,T0* a1);
/*HASHED_SET_NODE[GRAPH_NODE]*/void r1358make(T1358* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[GRAPH_NODE]]*/void r1359set_item(T1359* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1360common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1360make(T1360* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1360put(T1360* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1360new_node(T1360* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1360prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1360buckets_item(T1372 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1360should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1360key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1360prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1360dispose_node(T1360* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1360remove(T1360* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1360create_with_capacity(T1360* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1360increase_capacity(T1360* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1360next_generation(T1360* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1360hash_code(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1361common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1361make(T1361* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1361put(T1361* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1361new_node(T1361* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1361prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1361buckets_item(T1375 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1361should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1361key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1361prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1361dispose_node(T1361* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1361remove(T1361* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1361create_with_capacity(T1361* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1361increase_capacity(T1361* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1361next_generation(T1361* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1361hash_code(T2 a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1363set_item(T1363* C,T0* a1);
/*HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]*/void r1364make(T1364* C,T0* a1,T0* a2,T0* a3);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T1367*create1367make(void);
extern T0*oBC776common_free_nodes;
extern int fBC776common_free_nodes;
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1367common_free_nodes(void);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1367make(T1367* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1367new_node(T1367* C,T0* a1,T0* a2);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1367go_item(T1367* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1367add_last(T1367* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1367dispose_node(T1367* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1367item(T1367* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1367clear_count(T1367* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1367next_generation(T1367* C);
/*TUPLE[CHARACTER,INTEGER_32]*/T1368*create1368make_2(T3 a1,T2 a2);
/*TUPLE[CHARACTER,INTEGER_32]*/void r1368make_2(T1368* C,T3 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1369a_new_node(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369make(T1369* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1369fast_do_insert(T1369* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369set_value(T1369* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1369new_node(T1369* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369set_value_and_key(T1369* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1369left_grown(T1369* C,T0* a1);
extern T0*oBC837common_lost_nodes;
extern int fBC837common_lost_nodes;
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1369common_lost_nodes(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T2 r1369fast_at(T1369* C,T2 a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1369right_grown(T1369* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369discard_node(T1369* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369clear_count(T1369* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369clear_nodes(T1369* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369next_generation(T1369* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1369fast_put(T1369* C,T2 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T6 r1369ordered(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]*/void r1371make(T1371* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1373set_item(T1373* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]*/void r1374make(T1374* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1376set_item(T1376* C,T0* a1);
/*WEAK_REFERENCE[LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]]*/void r1380set_item(T1380* C,T0* a1);
/*LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]*/void r1381make(T1381* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1382common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1382make(T1382* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1382new_node(T1382* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1382add(T1382* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1382prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1382buckets_item(T1391 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T6 r1382should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1382prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1382create_with_capacity(T1382* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1382increase_capacity(T1382* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1382next_generation(T1382* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1382hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1382fast_reference_at(T1382* C,T0* a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1384rotate_left(T1384* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/void r1384set(T1384* C,T2 a1,T2 a2);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1384rotate_right(T1384* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1384fast_at(T1384* C,T2 a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T6 r1384ordered(T2 a1,T2 a2);
/*WEAK_REFERENCE[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1387set_item(T1387* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1388common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1388make(T1388* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1388new_node(T1388* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1388add(T1388* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1388prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1388buckets_item(T1395 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1388should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1388key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1388reference_at(T1388* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1388prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1388create_with_capacity(T1388* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1388increase_capacity(T1388* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1388next_generation(T1388* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1388hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1389set_item(T1389* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1390make(T1390* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1393set_item(T1393* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1394make(T1394* C,T0* a1,T0* a2,T0* a3);
/*COLLECTION_SORTER[INTEGER_32]*/T2 r1396insert_index(T0* a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1396lt(T2 a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1396lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1400common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1400make(T1400* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1400put(T1400* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1400new_node(T1400* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1400prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1400buckets_item(T1425 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1400should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1400key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1400reference_at(T1400* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1400prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1400fast_at(T1400* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1400create_with_capacity(T1400* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1400increase_capacity(T1400* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1400next_generation(T1400* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1400fast_put(T1400* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1400hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1400fast_reference_at(T1400* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1401common_free_nodes(void);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401make(T1401* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1401new_node(T1401* C,T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1401safe_equal(T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401add(T1401* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401set_cache_user(T1401* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1401prime_capacity(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1401should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1401prime_number_ceiling(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1401dispose_node(T1401* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1401item(T1401* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401clear_count(T1401* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401create_with_capacity(T1401* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401increase_capacity(T1401* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401next_generation(T1401* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1401hash_code(T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1401do_all(T1401* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1403common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1403make(T1403* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1403new_node(T1403* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1403add(T1403* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1403set_cache_user(T1403* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1403prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1403buckets_item(T1432 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1403should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1403key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1403reference_at(T1403* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1403prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1403item(T1403* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1403create_with_capacity(T1403* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1403increase_capacity(T1403* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1403next_generation(T1403* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1403hash_code(T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1406common_free_nodes(void);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1406make(T1406* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1406new_node(T1406* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1406add(T1406* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1406set_cache_user(T1406* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1406prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1406buckets_item(T1435 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1406should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1406key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1406reference_at(T1406* C,T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1406prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1406item(T1406* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1406create_with_capacity(T1406* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1406increase_capacity(T1406* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1406next_generation(T1406* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1406hash_code(T0* a1);
/*STACK[AGENT_CREATION]*/void r1407make(T1407* C);
/*STACK[AGENT_CREATION]*/void r1407mark_native_arrays(T1407* C);
/*STACK[AGENT_CREATION]*/void r1407push(T1407* C,T0* a1);
/*STACK[AGENT_CREATION]*/T6 r1407is_empty(T1407* C);
/*STACK[AGENT_CREATION]*/void r1407pop(T1407* C);
/*STACK[AGENT_CREATION]*/T0* r1407top(T1407* C);
/*STACK[AGENT_CREATION]*/void r1407with_capacity(T1407* C,T2 a1);
/*STACK[AGENT_CREATION]*/void r1407next_generation(T1407* C);
/*AVL_SET[POSITION]*/T0* r1408a_new_node(void);
/*AVL_SET[POSITION]*/void r1408make(T1408* C);
/*AVL_SET[POSITION]*/T0* r1408new_node(T1408* C);
/*AVL_SET[POSITION]*/void r1408add(T1408* C,T332 a1);
/*AVL_SET[POSITION]*/T0* r1408left_grown(T1408* C,T0* a1);
extern T0*oBC717common_lost_nodes;
extern int fBC717common_lost_nodes;
/*AVL_SET[POSITION]*/T0* r1408common_lost_nodes(void);
/*AVL_SET[POSITION]*/void r1408set_item(T1408* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1408do_insert(T1408* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1408right_grown(T1408* C,T0* a1);
/*AVL_SET[POSITION]*/void r1408discard_node(T1408* C,T0* a1);
/*AVL_SET[POSITION]*/void r1408clear_count(T1408* C);
/*AVL_SET[POSITION]*/void r1408clear_nodes(T1408* C,T0* a1);
/*AVL_SET[POSITION]*/void r1408next_generation(T1408* C);
/*AVL_SET[POSITION]*/T6 r1408ordered(T332 a1,T332 a2);
/*AVL_SET[POSITION]*/T6 r1408has(T1408* C,T332 a1);
/*REFERENCE[E_OLD]*/void r1410clear(T1410* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1413common_free_nodes(void);
/*HASHED_SET[FEATURE_STAMP]*/void r1413make(T1413* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1413new_node(T1413* C,T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/void r1413add(T1413* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1413safe_equal(T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1413prime_capacity(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1413should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1413prime_number_ceiling(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1413dispose_node(T1413* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1413clear_count(T1413* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1413create_with_capacity(T1413* C,T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1413increase_capacity(T1413* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1413next_generation(T1413* C);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1413hash_code(T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1413has(T1413* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,TYPE]*/void r1424make(T1424* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1426set_item(T1426* C,T0* a1);
/*HASHED_SET_NODE[NATIVE_PLUG_IN]*/void r1428make(T1428* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1429set_item(T1429* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1430set_item(T1430* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]*/void r1431make(T1431* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1433set_item(T1433* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PLUGIN,STRING]*/void r1434make(T1434* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET_NODE[POSITION]*/T0* r1437rotate_left(T1437* C);
/*AVL_SET_NODE[POSITION]*/void r1437set(T1437* C,T332 a1);
/*AVL_SET_NODE[POSITION]*/T0* r1437rotate_right(T1437* C);
/*AVL_SET_NODE[POSITION]*/T6 r1437ordered(T332 a1,T332 a2);
/*AVL_SET_NODE[POSITION]*/T6 r1437has(T1437* C,T332 a1);
/*WEAK_REFERENCE[AVL_SET_NODE[POSITION]]*/void r1440set_item(T1440* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1441common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1441make(T1441* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1441new_node(T1441* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1441add(T1441* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1441prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1441buckets_item(T1455 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1441should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1441key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1441reference_at(T1441* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1441prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1441create_with_capacity(T1441* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1441increase_capacity(T1441* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1441next_generation(T1441* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1441hash_code(T0* a1);
/*HASHED_SET_NODE[FEATURE_STAMP]*/void r1446make(T1446* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1447set_item(T1447* C,T0* a1);
/*SAFE_EQUAL[POSITION]*/T6 r1452test(T332 a1,T332 a2);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1453set_item(T1453* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1454make(T1454* C,T0* a1,T0* a2,T0* a3);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1470quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1470lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1470quick_sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1470lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1470sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1470is_sorted(T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1479make(T1479* C,T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T6 r1479is_off(T1479* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1479next(T1479* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T2 r1479iterable_generation(T1479* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T0* r1479item(T1479* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1479start(T1479* C);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T2 r1480insert_index(T0* a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1480lt(T2 a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1480lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1487common_free_nodes(void);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1487make(T1487* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1487put(T1487* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1487new_node(T1487* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1487prime_capacity(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1487buckets_item(T1495 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1487should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1487key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1487reference_at(T1487* C,T0* a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1487prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1487create_with_capacity(T1487* C,T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1487increase_capacity(T1487* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1487next_generation(T1487* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1487hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1493common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1493make(T1493* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1493new_node(T1493* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1493add(T1493* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1493prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1493buckets_item(T1499 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T6 r1493should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1493prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1493create_with_capacity(T1493* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1493increase_capacity(T1493* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1493next_generation(T1493* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1493hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1493fast_reference_at(T1493* C,T0* a1);
/*HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]*/void r1494make(T1494* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1496set_item(T1496* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]*/void r1500make(T1500* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1501set_item(T1501* C,T0* a1);
/*STACK[EXPRESSION]*/void r1514make(T1514* C);
/*STACK[EXPRESSION]*/void r1514mark_native_arrays(T1514* C);
/*STACK[EXPRESSION]*/void r1514push(T1514* C,T0* a1);
/*STACK[EXPRESSION]*/void r1514pop(T1514* C);
/*STACK[EXPRESSION]*/T0* r1514top(T1514* C);
/*STACK[EXPRESSION]*/void r1514with_capacity(T1514* C,T2 a1);
/*STACK[EXPRESSION]*/void r1514next_generation(T1514* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1515common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1515make(T1515* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1515new_node(T1515* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1515add(T1515* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1515prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1515buckets_item(T1519 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T6 r1515should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1515prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1515create_with_capacity(T1515* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1515increase_capacity(T1515* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1515next_generation(T1515* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1515hash_code(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1515fast_reference_at(T1515* C,T2 a1);
/*SAFE_EQUAL[INTEGER_32]*/T6 r1517test(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]*/void r1520make(T1520* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1521set_item(T1521* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_version_flag(T25* C,T0* a1);
extern T0*oBC28eiffel_parser;
extern int fBC28eiffel_parser;
/*COMPILE_TO_C*/T0* r25eiffel_parser(void);
/*COMPILE_TO_C*/T6 r25is_output_error_warning_on_flag(T25* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/T6 r25is_no_style_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_version_flag_no_exit(T25* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_relax_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_flat_check_flag(T0* a1);
extern T0*oBC28smart_eiffel;
extern T0*oBC28system_tools;
extern int fBC28system_tools;
/*COMPILE_TO_C*/T0* r25system_tools(void);
/*COMPILE_TO_C*/T6 r25is_cecil_flag(T25* C,T0* a1,T2 a2);
extern T0*oBC27command_arguments;
extern int fBC27command_arguments;
/*COMPILE_TO_C*/T0* r25command_arguments(void);
/*COMPILE_TO_C*/T6 r25ace_file_mode(T25* C);
/*COMPILE_TO_C*/T2 r25argument_count(void);
extern T0*oBC28cpp;
extern int fBC28cpp;
/*COMPILE_TO_C*/T0* r25cpp(void);
/*COMPILE_TO_C*/T6 r25flag_match(T0* a1,T0* a2);
extern T0*oBC28cecil_pool_memory;
/*COMPILE_TO_C*/T6 r25valid_arg_index(T2 a1);
/*COMPILE_TO_C*/T6 r25is_trace_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_o_flag(T25* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/void r25make(T25* C);
/*COMPILE_TO_C*/void r25parse_command_line(T25* C,T2 a1);
extern T0*oBC28echo;
extern int fBC28echo;
/*COMPILE_TO_C*/T0* r25echo(void);
/*COMPILE_TO_C*/T6 r25is_verbose_flag(T0* a1);
/*COMPILE_TO_C*/T0* r25search_for_echo_redirect_flag(T25* C);
extern T0*oBC28string_aliaser;
/*COMPILE_TO_C*/T6 r25is_help_flag(T25* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_no_rescue_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_debug_flag(T0* a1);
extern T0*oBC28ace;
/*COMPILE_TO_C*/T6 r25is_high_memory_compiler(T0* a1);
/*COMPILE_TO_C*/T6 r25is_no_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_safety_check_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_profile(T0* a1);
/*COMPILE_TO_C*/T6 r25is_case_insensitive_flag(T0* a1);
/*COMPILE_TO_C*/T6 r25is_valid_argument_for_ace_mode(T25* C,T0* a1);
/*COMPILE_TO_C*/T6 r25is_manifest_string_trace_flag(T0* a1);
/*COMPILE_TO_C*/void r25search_for_cc_flag(void);
/*COMPILE_TO_C*/T6 r25is_a_compilation_level_flag(T25* C,T0* a1);
extern T0*oBC28id_provider;
extern int fBC28id_provider;
/*COMPILE_TO_C*/T0* r25id_provider(void);
/*COMPILE_TO_C*/void r25search_for_verbose_flag(void);
extern T0*oBC28error_handler;
/*COMPILE_TO_C*/void r25check_for_level(T25* C,T0* a1);
extern int fBC28set_cecil_pool;
/*COMPILE_TO_C*/void r25set_cecil_pool(void);
/*STRING_COMMAND_LINE*/T6 r275is_profile(T0* a1);
/*STRING_COMMAND_LINE*/void r275parse(T0* a1);
extern T0*oBC275command_line_buffer;
extern int fBC275command_line_buffer;
/*STRING_COMMAND_LINE*/T0* r275command_line_buffer(void);
/*STRING_COMMAND_LINE*/T6 r275is_trace_flag(T0* a1);
/*STRING_COMMAND_LINE*/T0* r275echo(void);
/*STRING_COMMAND_LINE*/T0* r275cpp(void);
/*STRING_COMMAND_LINE*/void r275next_option(void);
extern T0*oBC275option_buffer;
extern int fBC275option_buffer;
/*STRING_COMMAND_LINE*/T0* r275option_buffer(void);
/*STRING_COMMAND_LINE*/T0* r275system_tools(void);
/*STRING_COMMAND_LINE*/T6 r275flag_match(T0* a1,T0* a2);
extern T0*oBC101object_suffix;
extern int fBC101object_suffix;
/*SYSTEM_TOOLS*/T0* r101object_suffix(T101* C);
extern T0*oBC101c_mode_memory;
extern int fBC101c_mode_memory;
/*SYSTEM_TOOLS*/T0* r101c_mode_memory(void);
/*SYSTEM_TOOLS*/T0* r101path_h(T101* C);
/*SYSTEM_TOOLS*/T6 r101is_linking_mandatory(void);
/*SYSTEM_TOOLS*/T6 r101is_install(void);
extern T0*oBC28install_memory;
extern T0*oBC101token_buffer;
extern int fBC101token_buffer;
/*SYSTEM_TOOLS*/T0* r101token_buffer(void);
/*SYSTEM_TOOLS*/T0* r101strip_path_or_default(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r101linker_command(T101* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r101plugin(T101* C,T0* a1,T0* a2,T332 a3);
/*SYSTEM_TOOLS*/T0* r101absolute_path(T332 a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r101strip_executable(T101* C);
/*SYSTEM_TOOLS*/void r101main_function_return_type_in(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T6 r101is_c_plus_plus_file_path(T0* a1);
/*SYSTEM_TOOLS*/void r101set_alternate_c_mode(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101environment_variable_substitution(T101* C,T0* a1,T0* a2);
extern int fBC101check_c_plus_plus;
/*SYSTEM_TOOLS*/void r101check_c_plus_plus(T101* C);
extern T0*oBC101compiler_list;
extern int fBC101compiler_list;
/*SYSTEM_TOOLS*/T0* r101compiler_list(void);
/*SYSTEM_TOOLS*/void r101append_if_not_already(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r101verify_system_name(T101* C);
/*SYSTEM_TOOLS*/void r101add_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r101bad_use_exit(T101* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T2 r101nb_errors(void);
/*SYSTEM_TOOLS*/T0* r101linker_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r101set_c_mode(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r101compiler_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r101set_system_name(T101* C,T0* a1);
extern int fBC101add_lib_math;
/*SYSTEM_TOOLS*/void r101add_lib_math(T101* C);
/*SYSTEM_TOOLS*/void r101subdirectory(T101* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T6 r101precompile_header_supported(T101* C);
extern int fBC101set_basic_directory_notation;
/*SYSTEM_TOOLS*/void r101set_basic_directory_notation(T101* C);
/*SYSTEM_TOOLS*/void r101sys_runtime(T101* C,T0* a1,T3 a2);
extern T0*oBC101make_suffix;
extern int fBC101make_suffix;
/*SYSTEM_TOOLS*/T0* r101make_suffix(T101* C);
extern T0*oBC101precompiled_header_suffix;
extern int fBC101precompiled_header_suffix;
/*SYSTEM_TOOLS*/T0* r101precompiled_header_suffix(T101* C);
/*SYSTEM_TOOLS*/T0* r101h_precompiler_command(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101system_name_in(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r101echo(void);
extern T0*oBC101external_lib_paths;
extern int fBC101external_lib_paths;
/*SYSTEM_TOOLS*/T0* r101external_lib_paths(void);
extern T0*oBC28tmp_path;
extern int fBC28tmp_path;
/*SYSTEM_TOOLS*/T0* r101tmp_path(void);
extern int fBC101add_lib_profile;
/*SYSTEM_TOOLS*/void r101add_lib_profile(T101* C);
/*SYSTEM_TOOLS*/void r101add_lib_math_do_it_again(T101* C);
extern int fBC101include_config_loadpaths;
/*SYSTEM_TOOLS*/void r101include_config_loadpaths(T101* C);
extern T6 oBC101Scoptions_exists;
extern int fBC101Scoptions_exists;
/*SYSTEM_TOOLS*/T6 r101Scoptions_exists(void);
/*SYSTEM_TOOLS*/void r101set_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r101add_smarteiffel_c_mode_options(T101* C);
/*SYSTEM_TOOLS*/void r101append_tokens(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r101add_x_suffix(T101* C,T0* a1);
extern T0*oBC101id_file_path;
extern int fBC101id_file_path;
/*SYSTEM_TOOLS*/T0* r101id_file_path(T101* C);
extern T0*oBC13io;
/*SYSTEM_TOOLS*/T0* r101c_compiler_command(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T2 r101extra_arg(T101* C,T0* a1,T2 a2,T0* a3);
/*SYSTEM_TOOLS*/void r101mandatory_sys_runtime(T101* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r101sys_runtime_(T101* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r101add_loadpath_file(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101read_loadpath_files(T101* C);
/*SYSTEM_TOOLS*/void r101add_config_loadpath_file(T101* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r101auto_init_plugins(T101* C);
/*SYSTEM_TOOLS*/void r101add_libraries_from_compiler_options(T101* C);
/*SYSTEM_TOOLS*/void r101add_executable_name(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r101environment(T101* C,T0* a1);
extern T0*oBC28tmp_file_read;
/*SYSTEM_TOOLS*/void r101set_automatic_system_name(T101* C);
/*SYSTEM_TOOLS*/void r101set_c_compiler(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101get_started(T101* C);
/*SYSTEM_TOOLS*/void r101file_path(T101* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r101loaded_plugin(T101* C,T0* a1,T0* a2);
extern T0*oBC101c_plus_plus_compiler_list;
extern int fBC101c_plus_plus_compiler_list;
/*SYSTEM_TOOLS*/T0* r101c_plus_plus_compiler_list(void);
extern int fBC101set_config;
/*SYSTEM_TOOLS*/void r101set_config(T101* C);
/*SYSTEM_TOOLS*/void r101set_default_c_mode(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101append_token(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r101show_compiler_list_then_exit(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101make(T101* C);
/*SYSTEM_TOOLS*/void r101main_function_exit_in(T101* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r101sas_c_compiler_options(T6 a1);
extern T0*oBC101x_suffix;
extern int fBC101x_suffix;
/*SYSTEM_TOOLS*/T0* r101x_suffix(T101* C);
/*SYSTEM_TOOLS*/void r101external_c_files_for_lcc_win32(T101* C,T0* a1);
extern T0*oBC101external_libs;
extern int fBC101external_libs;
/*SYSTEM_TOOLS*/T0* r101external_libs(void);
extern T0*oBC101system_list;
extern int fBC101system_list;
/*SYSTEM_TOOLS*/T0* r101system_list(void);
/*SYSTEM_TOOLS*/void r101add_external_lib_path(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101parent_directory(T101* C,T0* a1);
/*SYSTEM_TOOLS*/void r101add_external_lib(T101* C,T0* a1);
/*C_PLUGIN_FACTORY*/T965*create965(void);
/*C_PLUGIN_FACTORY*/T0* r965new(T332 a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r93a_parent_edge(T93* C,T6 a1);
extern T0*oBC93and_name;
extern int fBC93and_name;
/*EIFFEL_PARSER*/T0* r93and_name(void);
/*EIFFEL_PARSER*/T6 r93a_local_name2(T93* C);
/*EIFFEL_PARSER*/T6 r93a_local_name1(T93* C);
extern T0*oBC94buffer;
extern int fBC94buffer;
/*EIFFEL_PARSER*/T0* r93buffer(void);
/*EIFFEL_PARSER*/T6 r93a_instruction(T93* C);
/*EIFFEL_PARSER*/T0* r93parse_type_mark(T93* C);
/*EIFFEL_PARSER*/void r93a_function_call(T93* C);
/*EIFFEL_PARSER*/void r93a_new_export_list(T93* C);
/*EIFFEL_PARSER*/T6 r93a_conditional(T93* C);
/*EIFFEL_PARSER*/T0* r93connect_to_cecil(T93* C,T0* a1);
/*EIFFEL_PARSER*/T6 r93skip1(T93* C,T3 a1);
/*EIFFEL_PARSER*/T6 r93skip2(T93* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/T6 r93skip3(T93* C,T3 a1,T3 a2,T3 a3);
extern T0*oBC93not_name;
extern int fBC93not_name;
/*EIFFEL_PARSER*/T0* r93not_name(void);
/*EIFFEL_PARSER*/T6 r93a_index_clause(T93* C);
/*EIFFEL_PARSER*/T6 r93a_keyword_true(T93* C);
extern T0*oBC93minus_name;
extern int fBC93minus_name;
/*EIFFEL_PARSER*/T0* r93minus_name(void);
/*EIFFEL_PARSER*/T0* r93a_external(T93* C);
/*EIFFEL_PARSER*/void r93next_char(T93* C);
/*EIFFEL_PARSER*/T6 r93a_base_class_name_inside_client_list(T93* C);
/*EIFFEL_PARSER*/T0* r93a_external_specification(T93* C);
/*EIFFEL_PARSER*/T0* r93parse_feature_name(T93* C);
/*EIFFEL_PARSER*/T6 r93a_inspect(T93* C);
/*EIFFEL_PARSER*/T6 r93a_prefix(T93* C);
extern T0*oBC93implies_name;
extern int fBC93implies_name;
/*EIFFEL_PARSER*/T0* r93implies_name(void);
/*EIFFEL_PARSER*/void r93a_indexing(T93* C);
/*EIFFEL_PARSER*/T6 r93a_free_operator_usage(T93* C,T6 a1);
/*EIFFEL_PARSER*/T6 r93a_free_operator_definition(T93* C,T6 a1);
/*EIFFEL_PARSER*/T0* r93get_comment(T93* C);
/*EIFFEL_PARSER*/void r93echo_num(T11 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r93a_keyword_false(T93* C);
/*EIFFEL_PARSER*/void r93integer_overflow_error(T93* C,T2 a1,T2 a2,T0* a3);
/*EIFFEL_PARSER*/T6 r93a_keyword_void(T93* C);
/*EIFFEL_PARSER*/T0* r93parse_c_name(T93* C);
extern T0*oBC93inline_agents;
extern int fBC93inline_agents;
/*EIFFEL_PARSER*/T0* r93inline_agents(void);
extern T6 oBC93no_static_simplify;
extern int fBC93no_static_simplify;
/*EIFFEL_PARSER*/T6 r93no_static_simplify(void);
/*EIFFEL_PARSER*/T6 r93a_rename_pair(T93* C);
/*EIFFEL_PARSER*/void r93error_handler_append_info_about_feature_name(void);
/*EIFFEL_PARSER*/void r93void_current_comparison_check_(T0* a1,T0* a2);
/*EIFFEL_PARSER*/void r93a_procedure_call(T93* C);
/*EIFFEL_PARSER*/T6 r93a_class_name(T93* C);
/*EIFFEL_PARSER*/T6 r93a_keyword_precursor(T93* C);
/*EIFFEL_PARSER*/T6 r93a_writable(T93* C);
/*EIFFEL_PARSER*/void r93void_current_comparison_check(T0* a1,T0* a2);
extern T0*oBC93a_assertion_buffer;
extern int fBC93a_assertion_buffer;
/*EIFFEL_PARSER*/T0* r93a_assertion_buffer(void);
extern T0*oBC93gt_name;
extern int fBC93gt_name;
/*EIFFEL_PARSER*/T0* r93gt_name(void);
/*EIFFEL_PARSER*/void r93inside_function_precursor_check(T93* C,T0* a1);
extern T0*oBC28or_else_name;
extern int fBC28or_else_name;
/*EIFFEL_PARSER*/T0* r93or_else_name(void);
/*EIFFEL_PARSER*/void r93no_void_after_elseif_check(T0* a1);
/*EIFFEL_PARSER*/T6 r93a_binary(T93* C,T332 a1);
extern T0*oBC94lcs;
extern int fBC94lcs;
/*EIFFEL_PARSER*/T0* r93lcs(void);
/*EIFFEL_PARSER*/T2 r93a_when_part(T93* C,T2 a1,T0* a2);
extern T0*oBC93unused_tmp_features;
extern int fBC93unused_tmp_features;
/*EIFFEL_PARSER*/T0* r93unused_tmp_features(void);
/*EIFFEL_PARSER*/void r93show_nb_errors(void);
/*EIFFEL_PARSER*/void r93a_feature_clause(T93* C);
/*EIFFEL_PARSER*/void r93unknown_external_language(T0* a1);
/*EIFFEL_PARSER*/T0* r93to_call(T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r93a_infix(T93* C);
/*EIFFEL_PARSER*/T6 r93a_keyword_result(T93* C);
extern T0*oBC93ge_name;
extern int fBC93ge_name;
/*EIFFEL_PARSER*/T0* r93ge_name(void);
/*EIFFEL_PARSER*/T6 r93an_allowed_expression_in_when_of_inspect(T93* C);
/*EIFFEL_PARSER*/T332 r93current_position(T93* C);
/*EIFFEL_PARSER*/T6 r93a_feature_name_list(T93* C);
/*EIFFEL_PARSER*/void r93a_r10(T93* C,T6 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC93muls_name;
extern int fBC93muls_name;
/*EIFFEL_PARSER*/T0* r93muls_name(void);
extern T0*oBC93sharp_muls_name;
extern int fBC93sharp_muls_name;
/*EIFFEL_PARSER*/T0* r93sharp_muls_name(void);
/*EIFFEL_PARSER*/void r93create_infix_prefix(T93* C,T6 a1,T2 a2,T2 a3);
/*EIFFEL_PARSER*/void r93show_nb_warnings(void);
/*EIFFEL_PARSER*/void r93a_base_class_name1(T93* C);
/*EIFFEL_PARSER*/T6 r93a_check(T93* C);
/*EIFFEL_PARSER*/T6 r93a_feature_name(T93* C);
/*EIFFEL_PARSER*/T6 r93a_character_constant(T93* C,T1 a1);
/*EIFFEL_PARSER*/T6 r93a_manifest_string(T93* C,T6 a1);
/*EIFFEL_PARSER*/T6 r93a_loop(T93* C);
/*EIFFEL_PARSER*/T6 r93a_index_value(T93* C);
/*EIFFEL_PARSER*/T0* r93a_precursor_type_mark(T93* C,T332 a1);
/*EIFFEL_PARSER*/T0* r93a_actuals(T93* C);
/*EIFFEL_PARSER*/T0* r93a_external_name(T93* C);
extern T0*oBC93pow_name;
extern int fBC93pow_name;
/*EIFFEL_PARSER*/T0* r93pow_name(void);
/*EIFFEL_PARSER*/T6 r93a_manifest_or_type_test(T93* C,T1 a1);
/*EIFFEL_PARSER*/void r93echo_information(T93* C);
/*EIFFEL_PARSER*/T0* r93echo(void);
/*EIFFEL_PARSER*/void r93go_back_at(T93* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r93a_address_of(T93* C);
/*EIFFEL_PARSER*/T6 r93a_feature_declaration(T93* C);
/*EIFFEL_PARSER*/T6 r93a_formal_generic_type_mark(T93* C);
/*EIFFEL_PARSER*/T6 r93a_keyword_current(T93* C);
/*EIFFEL_PARSER*/T0* r93a_routine_body(T93* C);
/*EIFFEL_PARSER*/T2 r93nb_warnings(void);
/*EIFFEL_PARSER*/T6 r93a_static_type_mark(T93* C);
/*EIFFEL_PARSER*/T332 r93pos(T93* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T0* r93a_routine(T93* C);
/*EIFFEL_PARSER*/void r93a_class_declaration(T93* C);
/*EIFFEL_PARSER*/T6 r93a_expression(T93* C);
extern T0*oBC93slash_slash_name;
extern int fBC93slash_slash_name;
/*EIFFEL_PARSER*/T0* r93slash_slash_name(void);
/*EIFFEL_PARSER*/T0* r93mandatory_writable(T93* C);
extern T0*oBC28parser_buffer;
extern int fBC28parser_buffer;
/*EIFFEL_PARSER*/T0* r93parser_buffer(void);
/*EIFFEL_PARSER*/T6 r93a_e1(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e2(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e3(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e4(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e5(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e6(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e7(T93* C);
/*EIFFEL_PARSER*/void r93a_rename_list(T93* C);
/*EIFFEL_PARSER*/T0* r93a_clients(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e8(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e9(T93* C);
extern T0*oBC93faof;
extern int fBC93faof;
/*EIFFEL_PARSER*/T0* r93faof(void);
/*EIFFEL_PARSER*/T6 r93a_assignment_or_procedure_call(T93* C);
extern T0*oBC28mini_buffer;
/*EIFFEL_PARSER*/T6 r93a_c_inline_c(T93* C);
/*EIFFEL_PARSER*/void r93no_void_check(T0* a1,T0* a2);
/*EIFFEL_PARSER*/T6 r93a_c_inline_h(T93* C);
extern T0*oBC94unicode_string_buffer;
extern int fBC94unicode_string_buffer;
/*EIFFEL_PARSER*/T0* r93unicode_string_buffer(void);
/*EIFFEL_PARSER*/T6 r93a_keyword(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_parent_list(T93* C);
/*EIFFEL_PARSER*/T0* r93to_proc_call(T93* C,T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T0* r93analyse_class(T93* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/T0* r93a_then_compound(T93* C);
/*EIFFEL_PARSER*/T2 r93nb_errors(void);
/*EIFFEL_PARSER*/void r93a_r1(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r2(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r3(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r4(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r5(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r6(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r7(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_r8(T93* C,T0* a1);
/*EIFFEL_PARSER*/T6 r93a_retry(T93* C);
/*EIFFEL_PARSER*/void r93make(T93* C);
/*EIFFEL_PARSER*/void r93anchored_creation_check(T0* a1);
/*EIFFEL_PARSER*/T6 r93a_create_expression(T93* C);
extern T0*oBC93or_name;
extern int fBC93or_name;
/*EIFFEL_PARSER*/T0* r93or_name(void);
/*EIFFEL_PARSER*/T6 r93a_debug(T93* C);
/*EIFFEL_PARSER*/void r93err_exp(T332 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/T0* r93a_inline_agent(T93* C);
/*EIFFEL_PARSER*/void r93show_nb(T2 a1,T0* a2);
/*EIFFEL_PARSER*/void r93a_formal_arg_list(T93* C);
/*EIFFEL_PARSER*/T6 r93a_boolean_constant(T93* C);
/*EIFFEL_PARSER*/void r93a_creation_clause(T93* C,T332 a1);
/*EIFFEL_PARSER*/T0* r93id_provider(void);
extern T0*oBC93plus_name;
extern int fBC93plus_name;
/*EIFFEL_PARSER*/T0* r93plus_name(void);
/*EIFFEL_PARSER*/T6 r93a_ordinary_feature_name_or_local_name(T93* C);
extern T0*oBC93backslash_backslash_name;
extern int fBC93backslash_backslash_name;
/*EIFFEL_PARSER*/T0* r93backslash_backslash_name(void);
extern T0*oBC93sharp_plus_name;
extern int fBC93sharp_plus_name;
/*EIFFEL_PARSER*/T0* r93sharp_plus_name(void);
/*EIFFEL_PARSER*/T0* r93analyse_buffer(T93* C);
/*EIFFEL_PARSER*/T0* r93a_assertion(T93* C);
extern T0*oBC28omitted_client_list;
/*EIFFEL_PARSER*/T0* r93expression_with_comment(T93* C,T0* a1);
/*EIFFEL_PARSER*/void r93a_local_var_list(T93* C);
/*EIFFEL_PARSER*/T6 r93a_non_allowed_very_strange_identifier(T93* C);
/*EIFFEL_PARSER*/T6 r93a_old_creation(T93* C);
/*EIFFEL_PARSER*/T6 r93a_tag_mark(T93* C);
/*EIFFEL_PARSER*/T6 r93a_create_instruction(T93* C);
extern T0*oBC93xor_name;
extern int fBC93xor_name;
/*EIFFEL_PARSER*/T0* r93xor_name(void);
/*EIFFEL_PARSER*/T6 r93a_possibly_frozen_feature_name(T93* C);
extern T0*oBC93lt_name;
extern int fBC93lt_name;
/*EIFFEL_PARSER*/T0* r93lt_name(void);
/*EIFFEL_PARSER*/T6 r93parse_cecil_is_creation(T93* C);
extern T0*oBC93slash_name;
extern int fBC93slash_name;
/*EIFFEL_PARSER*/T0* r93slash_name(void);
/*EIFFEL_PARSER*/T6 r93a_base_class_name(T93* C);
extern T0*oBC93sharp_minus_name;
extern int fBC93sharp_minus_name;
/*EIFFEL_PARSER*/T0* r93sharp_minus_name(void);
extern T0*oBC28and_then_name;
extern int fBC28and_then_name;
/*EIFFEL_PARSER*/T0* r93and_then_name(void);
/*EIFFEL_PARSER*/T0* r93a_compound1(T93* C);
/*EIFFEL_PARSER*/T0* r93a_compound2(T93* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/void r93a_formal_generic_list(T93* C);
/*EIFFEL_PARSER*/void r93disconnect(T93* C);
extern T0*oBC93le_name;
extern int fBC93le_name;
/*EIFFEL_PARSER*/T0* r93le_name(void);
/*EIFFEL_PARSER*/T6 r93a_type_mark(T93* C);
/*EIFFEL_PARSER*/T6 r93a_e10(T93* C);
/*EIFFEL_PARSER*/void r93show_total_time(T93* C);
/*EIFFEL_PARSER*/void r93manifest_just_after_a_dot(T93* C,T3 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/void r93update_last_manifest_string(T93* C,T332 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*EIFFEL_PARSER*/void r93unused_once_warning_check(T93* C);
/*EIFFEL_PARSER*/T6 r93skip1unless2(T93* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/void r93valid_parent_edge_type_check(T0* a1);
/*EIFFEL_PARSER*/void r93skip_comments(T93* C);
/*EIFFEL_PARSER*/void r93just_after_a_dot(T93* C,T6 a1,T0* a2);
/*EIFFEL_PARSER*/T6 r93a_unary(T93* C);
/*EIFFEL_PARSER*/T6 r93a_argument(T93* C);
/*EIFFEL_PARSER*/T0* r93static_simplify(T0* a1);
/*ECHO*/void r113put_line(T113* C,T0* a1);
/*ECHO*/void r113make(T113* C);
/*ECHO*/void r113tfr_connect_or_exit(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113before_exit_close(T113* C);
/*ECHO*/void r113w_put_string(T113* C,T0* a1);
/*ECHO*/void r113file_renaming(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113tfr_connect(T113* C,T0* a1,T0* a2);
extern T0*oBC13std_output;
extern int fBC13std_output;
/*ECHO*/T0* r113std_output(void);
/*ECHO*/void r113print_count(T113* C,T0* a1,T2 a2);
/*ECHO*/T0* r113getenv(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113tfw_connect(T113* C,T0* a1,T0* a2);
/*ECHO*/void r113w_put_character(T113* C,T3 a1);
/*ECHO*/void r113put_new_line(T113* C);
/*ECHO*/void r113put_string(T113* C,T0* a1);
/*ECHO*/T0* r113system_tools(void);
/*ECHO*/void r113put_real_format(T113* C,T5 a1,T2 a2);
/*ECHO*/void r113put_integer(T113* C,T2 a1);
extern T0*oBC13std_error;
/*ECHO*/void r113file_removing(T113* C,T0* a1);
/*ECHO*/void r113w_put_integer(T113* C,T2 a1);
/*ECHO*/void r113redirect_output_on(T113* C,T0* a1);
/*ECHO*/void r113put_character(T113* C,T3 a1);
/*ACE*/T332 r263current_position(T263* C);
/*ACE*/T0* r263cecil_pool(void);
extern T0*oBC263clusters_;
extern int fBC263clusters_;
/*ACE*/T0* r263clusters_(void);
/*ACE*/T0* r263cpp(void);
/*ACE*/void r263go_back_at(T263* C,T2 a1,T2 a2);
/*ACE*/T6 r263no_check(T263* C);
/*ACE*/T2 r263class_text_count(void);
extern T0*oBC263root_class_names;
extern int fBC263root_class_names;
/*ACE*/T0* r263root_class_names(void);
/*ACE*/T6 r263all_check(T263* C);
/*ACE*/T0* r263buffer(void);
/*ACE*/T0* r263a_string(T263* C);
/*ACE*/T6 r263a_manifest_string(T263* C,T6 a1);
/*ACE*/void r263fatal_error_in(T263* C,T0* a1);
/*ACE*/void r263parse_include(T263* C);
/*ACE*/void r263set_highest_encountered_level(T263* C,T2 a1);
/*ACE*/T0* r263a_identifier(T263* C);
/*ACE*/T0* r263class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T0* r263a_debug_key(T263* C);
/*ACE*/T0* r263a_split_key(T263* C);
/*ACE*/T6 r263a_cluster_clause_list(T263* C);
/*ACE*/void r263add_loadpath(T0* a1,T0* a2,T2 a3,T6 a4);
/*ACE*/T6 r263a_keyword(T263* C,T0* a1);
/*ACE*/T0* r263a_cecil_file(T263* C);
/*ACE*/void r263skip_comments(T263* C);
/*ACE*/void r263set_root_class_name_using(T0* a1);
extern T0*oBC263pov_classes;
extern int fBC263pov_classes;
/*ACE*/T0* r263pov_classes(void);
/*ACE*/T6 r263a_option_in_cluster_properties(T263* C);
/*ACE*/T6 r263default_debug(T263* C,T0* a1);
extern T0*oBC263no_pov_classes;
extern int fBC263no_pov_classes;
/*ACE*/T0* r263no_pov_classes(void);
/*ACE*/void r263may_expand_var(T263* C);
/*ACE*/T0* r263parser_buffer(void);
/*ACE*/void r263new_universe_entry(T2 a1,T0* a2,T0* a3);
/*ACE*/void r263a_generate(T263* C);
/*ACE*/T0* r263root_class_name(void);
/*ACE*/T6 r263require_check(T263* C);
/*ACE*/void r263set_default_trace(T263* C);
/*ACE*/void r263set_debug_check(T263* C);
/*ACE*/T0* r263echo(void);
/*ACE*/T6 r263skip1(T263* C,T3 a1);
/*ACE*/void r263view_in(T263* C,T0* a1);
/*ACE*/T0* r263class_name_using(T0* a1);
/*ACE*/T0* r263system_tools(void);
/*ACE*/void r263next_char(T263* C);
extern T0*oBC28is_launcher_memory;
/*ACE*/T0* r263cluster_of(T0* a1,T6 a2);
/*ACE*/T0* r263lcs(void);
/*ACE*/T6 r263trace_of(T263* C,T0* a1);
/*ACE*/T2 r263a_assertion_level(T263* C);
/*ACE*/T6 r263is_debug_checked(T263* C,T0* a1,T0* a2);
/*ACE*/T6 r263a_yes_no_all(T263* C);
/*ACE*/T0* r263find_class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T2 r263cluster_count(void);
/*ACE*/void r263add_default_debug_key(T263* C,T0* a1);
/*ACE*/T6 r263is_launcher(void);
/*ACE*/T0* r263level_name(T2 a1);
/*ACE*/void r263analyse_ace_file(T263* C,T0* a1);
/*ACE*/void r263set_no_split(T263* C,T6 a1);
/*ACE*/void r263set_split(T263* C,T0* a1);
/*ACE*/void r263a_external(T263* C);
/*ACE*/T0* r263best_cluster_of(T0* a1,T0* a2,T6 a3,T0* a4);
/*ACE*/T6 r263ensure_check(T263* C);
/*ACE*/T0* r263unicode_string_buffer(void);
/*ACE*/void r263a_cluster_mark(T263* C);
extern T0*oBC263universe;
extern int fBC263universe;
/*ACE*/T0* r263universe(void);
extern T0*oBC263distances_;
extern int fBC263distances_;
/*ACE*/T0* r263distances_(void);
/*ACE*/void r263set_default_level(T263* C);
/*ACE*/void r263set_command_line_debug(T263* C);
/*ACE*/T0* r263eiffel_parser(void);
/*ACE*/void r263get_started(T263* C);
/*ACE*/T6 r263a_system_level_defaults(T263* C);
/*ACE*/void r263set_default_c_mode(T263* C);
/*ACE*/void r263a_cluster_properties(T263* C);
/*ACE*/T6 r263a_class_name(T263* C);
extern T0*oBC263new_clusters;
extern int fBC263new_clusters;
/*ACE*/T0* r263new_clusters(void);
/*ACE*/void r263command_line_parsed(T263* C,T0* a1);
/*ACE*/T0* r263root_procedure_name(T263* C);
/*ACE*/T332 r263pos(T2 a1,T2 a2);
/*ACE*/T6 r263match_debug_keys(T0* a1,T0* a2);
/*ACE*/T2 r263assertion_level_of(T263* C,T0* a1);
/*ACE*/T6 r263sedb(T263* C);
/*ACE*/T6 r263a_cluster_clause(T263* C);
typedef struct _se_agenT104f104l4025c31 se_agenT104f104l4025c31;
struct _se_agenT104f104l4025c31{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l4025c31*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l4025c31*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT104f104l4025c31(T0* closed_C,T0* closed_a1);
void gc_mark_agenT104f104l4025c31(se_agenT104f104l4025c31*u);
typedef struct _se_agenT104f104l4014c28 se_agenT104f104l4014c28;
struct _se_agenT104f104l4014c28{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l4014c28*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l4014c28*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT104f104l4014c28(T0* closed_C);
void gc_mark_agenT104f104l4014c28(se_agenT104f104l4014c28*u);
typedef struct _se_agenT104f104l3785c47 se_agenT104f104l3785c47;
struct _se_agenT104f104l3785c47{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l3785c47*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l3785c47*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT104f104l3785c47(T0* closed_C);
void gc_mark_agenT104f104l3785c47(se_agenT104f104l3785c47*u);
typedef struct _se_agenT104f104l618c22 se_agenT104f104l618c22;
struct _se_agenT104f104l618c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l618c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l618c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT104f104l618c22(void);
void gc_mark_agenT104f104l618c22(se_agenT104f104l618c22*u);
typedef struct _se_agenT104f104l674c22 se_agenT104f104l674c22;
struct _se_agenT104f104l674c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l674c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l674c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT104f104l674c22(void);
void gc_mark_agenT104f104l674c22(se_agenT104f104l674c22*u);
typedef struct _se_agenT104f104l3804c55 se_agenT104f104l3804c55;
struct _se_agenT104f104l3804c55{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l3804c55*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l3804c55*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a2;};
/*agent creation*/T0*agenT104f104l3804c55(T0* closed_C,T0* closed_a2);
void gc_mark_agenT104f104l3804c55(se_agenT104f104l3804c55*u);
typedef struct _se_agenT104f104l3597c39 se_agenT104f104l3597c39;
struct _se_agenT104f104l3597c39{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l3597c39*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l3597c39*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT104f104l3597c39(T0* closed_C);
void gc_mark_agenT104f104l3597c39(se_agenT104f104l3597c39*u);
typedef struct _se_agenT104f104l3514c38 se_agenT104f104l3514c38;
struct _se_agenT104f104l3514c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT104f104l3514c38*,T0*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l3514c38*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT104f104l3514c38(T0* closed_C);
void gc_mark_agenT104f104l3514c38(se_agenT104f104l3514c38*u);
/*C_PRETTY_PRINTER*/T0* r104cecil_pool(void);
extern T0*oBC104c_code;
extern int fBC104c_code;
/*C_PRETTY_PRINTER*/T0* r104c_code(void);
extern T0*oBC104defined_agent_creation;
extern int fBC104defined_agent_creation;
/*C_PRETTY_PRINTER*/T0* r104defined_agent_creation(void);
/*C_PRETTY_PRINTER*/T0* r104stack_top(T104* C);
/*C_PRETTY_PRINTER*/void r104put_target_as_target(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104c_plus_plus_register(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104print_argument(T2 a1);
/*C_PRETTY_PRINTER*/T6 r104manifest_string_trace(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T2 r104class_invariant_call_opening(T104* C,T0* a1,T6 a2);
/*C_PRETTY_PRINTER*/void r104target_position_in_error_handler(T104* C);
/*C_PRETTY_PRINTER*/void r104put_arguments(T104* C,T2 a1);
/*C_PRETTY_PRINTER*/void r104c_test_o_flag(T0* a1);
/*C_PRETTY_PRINTER*/void r104print_local(T0* a1);
/*C_PRETTY_PRINTER*/void r104initialize_size_table(T104* C);
/*C_PRETTY_PRINTER*/void r104split_c_file_now(T104* C,T2 a1);
/*C_PRETTY_PRINTER*/void r104put_monomorphic_or_void_call(T104* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r104inspect_local_compile_to_c(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104c_define_assignment_test_functions(T104* C);
/*C_PRETTY_PRINTER*/T0* r104reserve_context(T104* C,T2 a1);
/*C_PRETTY_PRINTER*/T0* r104run_features(void);
/*C_PRETTY_PRINTER*/T6 r104target_cannot_be_dropped(T104* C);
/*C_PRETTY_PRINTER*/void r104get_started(T104* C);
extern T0*oBC104path_make;
extern int fBC104path_make;
/*C_PRETTY_PRINTER*/T0* r104path_make(void);
/*C_PRETTY_PRINTER*/void r104c_test_o_flag_recursion(T0* a1);
/*C_PRETTY_PRINTER*/void r104define_agent_launcher_heading(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104se_evobt(T104* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r104cpp(void);
/*C_PRETTY_PRINTER*/void r104compile_routines(T104* C);
/*C_PRETTY_PRINTER*/void r104set_dump_stack_top_for(T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r104put_c_inline_h(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/T0* r104tmp_path(void);
/*C_PRETTY_PRINTER*/T6 r104agent_pool_has_only_one_case_for(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104put_file(T104* C,T0* a1,T0* a2);
extern T0*oBC28live_type_extra_collectors;
extern int fBC28live_type_extra_collectors;
/*C_PRETTY_PRINTER*/T0* r104live_type_extra_collectors(void);
/*C_PRETTY_PRINTER*/void r104cecil_define_users_for_file(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104initialize_generating_type(void);
/*C_PRETTY_PRINTER*/T0* r104agent_switches(void);
/*C_PRETTY_PRINTER*/void r104stop_recursive_assertion_opening(T6 a1);
/*C_PRETTY_PRINTER*/void r104add_first_include(T0* a1);
/*C_PRETTY_PRINTER*/void r104cecil_define_users_for_entry(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104put_target_generating_type(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104class_invariant_call_closing(T2 a1,T6 a2);
extern T0*oBC105context_stack;
extern int fBC105context_stack;
/*C_PRETTY_PRINTER*/T0* r104context_stack(void);
/*C_PRETTY_PRINTER*/void r104current_class_invariant(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104push_create_expression(T104* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r104add_include(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104recompilation_comment(T0* a1);
/*C_PRETTY_PRINTER*/void r104macro_def(T104* C,T0* a1,T2 a2);
/*C_PRETTY_PRINTER*/void r104sys_runtime_h_and_c(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104se_ms_c_call_in(T0* a1,T0* a2);
extern T0*oBC104pending_c_function_body;
extern int fBC104pending_c_function_body;
/*C_PRETTY_PRINTER*/T0* r104pending_c_function_body(void);
/*C_PRETTY_PRINTER*/void r104start_profile(T0* a1);
/*C_PRETTY_PRINTER*/void r104c_register(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104prepare_c_function(T104* C);
/*C_PRETTY_PRINTER*/void r104c_frame_descriptor_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104va_type_in(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r104class_invariants(void);
/*C_PRETTY_PRINTER*/void r104initialize_path_table(T104* C);
/*C_PRETTY_PRINTER*/void r104define_initialize_eiffel_runtime(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104c_test_o_flag_introspect(T0* a1);
/*C_PRETTY_PRINTER*/void r104initialize_generator(void);
/*C_PRETTY_PRINTER*/void r104inspect_local_type(T0* a1);
/*C_PRETTY_PRINTER*/void r104begin_c_file(T104* C);
/*C_PRETTY_PRINTER*/void r104stop_recursive_assertion_closing(T6 a1);
/*C_PRETTY_PRINTER*/void r104push_inside_some_wrapper(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104right_hand_side_can_only_be_void(void);
/*C_PRETTY_PRINTER*/void r104check_assertion(T104* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/T0* r104live_type_map(void);
/*C_PRETTY_PRINTER*/void r104put_target_as_value(T104* C);
/*C_PRETTY_PRINTER*/void r104c_define1_manifest_string_pool(T104* C);
/*C_PRETTY_PRINTER*/void r104put_error0(T0* a1);
/*C_PRETTY_PRINTER*/void r104end_c_file(void);
/*C_PRETTY_PRINTER*/void r104begin_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T6 r104arguments_cannot_be_dropped(T104* C);
/*C_PRETTY_PRINTER*/void r104add_extra_collectors(T104* C);
extern T0*oBC104internal_c_local_stamps_stack;
extern int fBC104internal_c_local_stamps_stack;
/*C_PRETTY_PRINTER*/T0* r104internal_c_local_stamps_stack(void);
/*C_PRETTY_PRINTER*/void r104connect_cecil_out_h(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104customize_runtime(T104* C);
/*C_PRETTY_PRINTER*/void r104really_define_c_main(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104push_direct(T104* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC104pending_c_function_signature;
extern int fBC104pending_c_function_signature;
/*C_PRETTY_PRINTER*/T0* r104pending_c_function_signature(void);
/*C_PRETTY_PRINTER*/void r104cecil_define(T104* C);
/*C_PRETTY_PRINTER*/T6 r104once_flag(T104* C,T0* a1);
extern T0*oBC104internal_c_local_list;
/*C_PRETTY_PRINTER*/void r104string_to_c_code(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104show_profile(void);
/*C_PRETTY_PRINTER*/void r104common_put_target(T104* C);
/*C_PRETTY_PRINTER*/void r104free_context(T104* C,T0* a1);
extern T0*oBC104out_make;
extern int fBC104out_make;
/*C_PRETTY_PRINTER*/T0* r104out_make(void);
extern T0*oBC104inspect_local_stack;
extern int fBC104inspect_local_stack;
/*C_PRETTY_PRINTER*/T0* r104inspect_local_stack(void);
/*C_PRETTY_PRINTER*/void r104put_position(T332 a1);
/*C_PRETTY_PRINTER*/void r104write_out_h_buffer(T104* C);
/*C_PRETTY_PRINTER*/void r104incr_real_procedure_count(T104* C);
/*C_PRETTY_PRINTER*/void r104echo_information(T104* C);
/*C_PRETTY_PRINTER*/void r104c_code_for_precomputable_routines(T104* C);
/*C_PRETTY_PRINTER*/void r104variant_check(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r104echo(void);
/*C_PRETTY_PRINTER*/void r104write_out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r104c_define_manifest_generic_functions(T104* C);
extern T0*oBC28manifest_string_pool;
/*C_PRETTY_PRINTER*/T6 r104use_c_function_call_for_attribute_read(T104* C);
/*C_PRETTY_PRINTER*/void r104put_ith_argument(T104* C,T2 a1);
/*C_PRETTY_PRINTER*/void r104add_include_on(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104push_create_instruction(T104* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r104pop(T104* C);
/*C_PRETTY_PRINTER*/void r104se_string(T0* a1);
/*C_PRETTY_PRINTER*/void r104put_trace_switch(T104* C);
/*C_PRETTY_PRINTER*/void r104c_code_for_precomputable_routine(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104external_prototype_in(T104* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r104pending_c_function_lock_local(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104args_compile_to_c_ith(T104* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*C_PRETTY_PRINTER*/void r104define_main(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104incr_procedure_count(T104* C);
extern T0*oBC28agent_pool;
/*C_PRETTY_PRINTER*/T6 r104cannot_drop_all(T104* C);
/*C_PRETTY_PRINTER*/void r104push_precursor(T104* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r104agent_pool_switch_in(T104* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r104c_define_o_flag(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104incr_real_function_count(T104* C);
/*C_PRETTY_PRINTER*/void r104put_object_size(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104start_profile_class_invariant(T0* a1);
extern T0*oBC104out_c_buffer;
extern int fBC104out_c_buffer;
/*C_PRETTY_PRINTER*/T0* r104out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r104put_direct(T104* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r104c_define_for_native_array(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104c_pre_compute_once_function(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104incr_function_count(T104* C);
/*C_PRETTY_PRINTER*/void r104put_banner(T0* a1);
/*C_PRETTY_PRINTER*/void r104put_c_file(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104c_define_o_result_for(T104* C,T0* a1);
extern T0*oBC104out_h_buffer;
extern int fBC104out_h_buffer;
/*C_PRETTY_PRINTER*/T0* r104out_h_buffer(void);
/*C_PRETTY_PRINTER*/T2 r104nb_errors(void);
/*C_PRETTY_PRINTER*/void r104stack_overflow(T104* C);
/*C_PRETTY_PRINTER*/void r104h_connect(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104compile(T104* C);
/*C_PRETTY_PRINTER*/void r104customize_agent_pool_runtime_1(T104* C);
/*C_PRETTY_PRINTER*/void r104customize_agent_pool_runtime_2(T104* C);
/*C_PRETTY_PRINTER*/void r104c_declare_local(T104* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r104character_to_c_code(T3 a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104initialize_path_table_of(T0* a1);
/*C_PRETTY_PRINTER*/void r104native_array_to_c_code(T2 a1,T9 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r104c_call_initialize_manifest_strings(void);
/*C_PRETTY_PRINTER*/void r104se_ums_c_call_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104start_profile_agent_switch(T0* a1);
/*C_PRETTY_PRINTER*/void r104make(T104* C);
/*C_PRETTY_PRINTER*/void r104array_access(T3 a1,T2 a2);
/*C_PRETTY_PRINTER*/void r104write_extern_2(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104write_extern_1(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104write_extern_0(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104stack_push(T104* C,T2 a1);
/*C_PRETTY_PRINTER*/void r104common_body_for_se_string_and_se_ms(T104* C,T6 a1);
/*C_PRETTY_PRINTER*/T0* r104out_c(void);
/*C_PRETTY_PRINTER*/void r104write_make_file(T104* C);
/*C_PRETTY_PRINTER*/void r104start_profile_agent_creation(T0* a1);
/*C_PRETTY_PRINTER*/void r104define_extern_tables(T104* C);
/*C_PRETTY_PRINTER*/void r104c_define_for_user_generic(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104start_assignment(T104* C);
/*C_PRETTY_PRINTER*/T0* r104agent_creations(void);
/*C_PRETTY_PRINTER*/T0* r104id_provider(void);
/*C_PRETTY_PRINTER*/T0* r104system_tools(void);
/*C_PRETTY_PRINTER*/void r104prepare_introspection(T104* C);
/*C_PRETTY_PRINTER*/T0* r104need_invariant(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104agent_pool_call_in(T104* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*C_PRETTY_PRINTER*/void r104initialize_profile(void);
/*C_PRETTY_PRINTER*/void r104put_position_comment(T332 a1);
/*C_PRETTY_PRINTER*/void r104inside_twin(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104c_declare_locals(T104* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r104set_live_type(T0* a1);
extern T0*oBC28once_routine_pool;
/*C_PRETTY_PRINTER*/void r104include_register(T104* C,T332 a1,T0* a2);
/*C_PRETTY_PRINTER*/T6 r104c_plus_plus_registered(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104define_agent_launcher_args(T104* C,T0* a1);
extern T0*oBC28assignment_test_pool;
/*C_PRETTY_PRINTER*/void r104initialize_generator_of(T0* a1);
/*C_PRETTY_PRINTER*/void r104put_target_generator(T104* C,T0* a1);
extern T0*oBC104c_inline_h_mem;
extern int fBC104c_inline_h_mem;
/*C_PRETTY_PRINTER*/T0* r104c_inline_h_mem(void);
/*C_PRETTY_PRINTER*/void r104c_variables_for_precomputable_routines(T104* C);
/*C_PRETTY_PRINTER*/void r104c_define_manifest_generic_for(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104dump_pending_c_function(T104* C,T6 a1);
extern T0*oBC104tmp_string;
extern int fBC104tmp_string;
/*C_PRETTY_PRINTER*/T0* r104tmp_string(void);
/*C_PRETTY_PRINTER*/void r104c_plus_plus_definitions(T104* C);
/*C_PRETTY_PRINTER*/void r104c_define_assignment_test_for(T104* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r104put_position_comment_on(T0* a1,T332 a2);
/*C_PRETTY_PRINTER*/void r104c_define2_manifest_string_pool(T104* C);
extern T0*oBC28pretty_printer;
/*C_PRETTY_PRINTER*/void r104write_extern_array_1(T104* C,T0* a1,T2 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r104write_extern_array_2(T104* C,T0* a1,T2 a2);
extern T0*oBC28manifest_generic_pool;
extern T0*oBC28exceptions_handler;
/*C_PRETTY_PRINTER*/void r104put_h_file(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104put_position_in_ds(T332 a1);
extern T0*oBC104path_c;
extern int fBC104path_c;
/*C_PRETTY_PRINTER*/T0* r104path_c(void);
/*C_PRETTY_PRINTER*/void r104end_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T0* r104new_context(T2 a1);
extern T0*oBC104path_h;
extern int fBC104path_h;
/*C_PRETTY_PRINTER*/T0* r104path_h(void);
/*C_PRETTY_PRINTER*/void r104put_position_comment_in(T0* a1,T332 a2);
/*C_PRETTY_PRINTER*/void r104put_sedb_breakpoint(T104* C);
/*C_PRETTY_PRINTER*/void r104c_define_o_result(T104* C,T0* a1);
/*C_PRETTY_PRINTER*/void r104do_write_make_file(T104* C);
typedef struct _se_agenT100f100l345c38 se_agenT100f100l345c38;
struct _se_agenT100f100l345c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT100f100l345c38*,T0*);
void(*gc_mark_agent_mold)(se_agenT100f100l345c38*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT100f100l345c38(void);
void gc_mark_agenT100f100l345c38(se_agenT100f100l345c38*u);
/*SMART_EIFFEL*/void r100polymorphic_procedure_call_count_increment(T100* C,T2 a1);
/*SMART_EIFFEL*/T0* r100old_list_stack_pop(void);
/*SMART_EIFFEL*/void r100id_extra_information(T0* a1,T0* a2,T0* a3);
extern T0*oBC100old_list_stack;
extern int fBC100old_list_stack;
/*SMART_EIFFEL*/T0* r100old_list_stack(void);
/*SMART_EIFFEL*/T0* r100type_real_32(T100* C);
/*SMART_EIFFEL*/T0* r100feature_stamp(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r100cecil_pool(void);
/*SMART_EIFFEL*/void r100register_class_invariant(T100* C,T0* a1);
/*SMART_EIFFEL*/void r100inline_dynamic_dispatch(T100* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r100loaded_class_text(T0* a1);
/*SMART_EIFFEL*/T6 r100is_at_run_time(T0* a1);
/*SMART_EIFFEL*/T0* r100long_type_name(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r100cluster_named(T0* a1);
/*SMART_EIFFEL*/T0* r100type_string(T100* C);
/*SMART_EIFFEL*/T0* r100type_natural_16(T100* C);
/*SMART_EIFFEL*/T0* r100context_feature(void);
/*SMART_EIFFEL*/T0* r100type_natural_32(T100* C);
/*SMART_EIFFEL*/void r100sort_live_type_map(T100* C);
/*SMART_EIFFEL*/void r100very_last_information(void);
/*SMART_EIFFEL*/T2 r100class_text_count(void);
/*SMART_EIFFEL*/T0* r100type_natural_64(T100* C);
/*SMART_EIFFEL*/T0* r100get_type(T0* a1);
/*SMART_EIFFEL*/T0* r100type_internals_handler_if_exists(void);
/*SMART_EIFFEL*/void r100update_polymorphic_distribution(T100* C,T2 a1);
/*SMART_EIFFEL*/void r100expanded_target_function_call_count_increment(T100* C);
/*SMART_EIFFEL*/void r100expanded_target_procedure_call_count_increment(T100* C);
extern T0*oBC100copyright;
extern int fBC100copyright;
/*SMART_EIFFEL*/T0* r100copyright(void);
/*SMART_EIFFEL*/void r100register_run_feature(T100* C,T0* a1);
/*SMART_EIFFEL*/T0* r100create_type(T0* a1);
/*SMART_EIFFEL*/T0* r100type_natural_8(T100* C);
/*SMART_EIFFEL*/T0* r100get_inline_memo(void);
/*SMART_EIFFEL*/void r100parse_include(T0* a1);
/*SMART_EIFFEL*/void r100void_target_procedure_call_count_increment(T100* C);
/*SMART_EIFFEL*/void r100echo_magic_count(T100* C,T0* a1);
/*SMART_EIFFEL*/T0* r100get_type_for_non_generic(T0* a1);
extern T0*oBC100type_dictionary;
extern int fBC100type_dictionary;
/*SMART_EIFFEL*/T0* r100type_dictionary(void);
/*SMART_EIFFEL*/void r100register_old(T0* a1);
/*SMART_EIFFEL*/void r100simplify(T100* C);
/*SMART_EIFFEL*/void r100collect_se_atexit(T100* C,T0* a1);
/*SMART_EIFFEL*/T0* r100type_integer_16(T100* C);
/*SMART_EIFFEL*/T0* r100type_native_array_character(T100* C);
/*SMART_EIFFEL*/T0* r100class_text(T0* a1,T6 a2);
/*SMART_EIFFEL*/T0* r100type_integer_32(T100* C);
extern T0*oBC28se_atexit_name;
extern int fBC28se_atexit_name;
/*SMART_EIFFEL*/T0* r100se_atexit_name(void);
extern T0*oBC100agent_creation_error_trap;
extern int fBC100agent_creation_error_trap;
/*SMART_EIFFEL*/T0* r100agent_creation_error_trap(void);
/*SMART_EIFFEL*/T2 r100nb_errors(void);
extern T0*oBC100manifest_creation_name;
extern int fBC100manifest_creation_name;
/*SMART_EIFFEL*/T0* r100manifest_creation_name(T100* C);
/*SMART_EIFFEL*/T0* r100type_integer_64(T100* C);
/*SMART_EIFFEL*/T0* r100parser_buffer(void);
/*SMART_EIFFEL*/void r100polymorphic_function_call_count_increment(T100* C,T2 a1);
/*SMART_EIFFEL*/void r100register_agent_switch(T100* C,T0* a1);
/*SMART_EIFFEL*/T0* r100type_pointer(T100* C);
/*SMART_EIFFEL*/void r100collect_precomputable(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r100analyze_class(T0* a1,T0* a2);
/*SMART_EIFFEL*/void r100collect_external_function(T0* a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r100collect_local_expanded(T0* a1);
/*SMART_EIFFEL*/void r100monomorphic_function_call_count_increment(T100* C);
/*SMART_EIFFEL*/void r100register_type(T0* a1);
/*SMART_EIFFEL*/T0* r100echo(void);
/*SMART_EIFFEL*/void r100tuple_class_not_found_fatal_error(T0* a1);
/*SMART_EIFFEL*/void r100do_one_collect_cycle(T100* C);
/*SMART_EIFFEL*/void r100customize_runtime(void);
/*SMART_EIFFEL*/void r100simplify_and_optimize(T100* C,T0* a1,T0* a2);
extern T0*oBC100collected_external_functions;
extern int fBC100collected_external_functions;
/*SMART_EIFFEL*/T0* r100collected_external_functions(void);
/*SMART_EIFFEL*/T0* r100cluster_of(T0* a1,T6 a2);
extern T0*oBC100free_inline_memo;
extern int fBC100free_inline_memo;
/*SMART_EIFFEL*/T0* r100free_inline_memo(void);
/*SMART_EIFFEL*/void r100vffd7_fatal_error(T332 a1);
/*SMART_EIFFEL*/void r100covariance_check(T332 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r100argument_count_check(T0* a1,T332 a2,T0* a3,T0* a4);
/*SMART_EIFFEL*/T0* r100collect(T0* a1,T0* a2,T6 a3);
/*SMART_EIFFEL*/void r100show_live_types(T100* C);
/*SMART_EIFFEL*/T0* r100type_unicode_string(T100* C);
/*SMART_EIFFEL*/T6 r100is_ready(void);
/*SMART_EIFFEL*/T6 r100is_tagged(T100* C,T0* a1);
extern T0*oBC28introspection_handler;
/*SMART_EIFFEL*/void r100register_agent_creation(T100* C,T0* a1);
/*SMART_EIFFEL*/void r100collect_deep_features(T100* C);
extern T0*oBC28feature_accumulator;
extern int fBC28feature_accumulator;
/*SMART_EIFFEL*/T0* r100feature_accumulator(void);
/*SMART_EIFFEL*/void r100front_end(T100* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r100type_any(T100* C);
extern T0*oBC100status;
/*SMART_EIFFEL*/T0* r100type_integer_8(T100* C);
/*SMART_EIFFEL*/void r100collect_generic(T0* a1);
/*SMART_EIFFEL*/void r100register_plug_in(T0* a1);
/*SMART_EIFFEL*/void r100monomorphic_procedure_call_count_increment(T100* C);
/*SMART_EIFFEL*/void r100unknown_feature_fatal_error(T0* a1,T0* a2,T0* a3);
extern T0*oBC100memory_dispose_stamp;
extern int fBC100memory_dispose_stamp;
/*SMART_EIFFEL*/T0* r100memory_dispose_stamp(void);
/*SMART_EIFFEL*/T0* r100type_boolean(T100* C);
/*SMART_EIFFEL*/void r100compile(T100* C,T0* a1);
extern T0*oBC100collected_plug_in;
extern int fBC100collected_plug_in;
/*SMART_EIFFEL*/T0* r100collected_plug_in(void);
/*SMART_EIFFEL*/void r100clear_agent_creation_error_trap(T0* a1);
extern T0*oBC100context_feature_stack;
extern int fBC100context_feature_stack;
/*SMART_EIFFEL*/T0* r100context_feature_stack(void);
/*SMART_EIFFEL*/T0* r100eiffel_parser(void);
/*SMART_EIFFEL*/void r100collect_from_root(T100* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/void r100collect_external(T0* a1);
extern T0*oBC100code_accumulator;
extern int fBC100code_accumulator;
/*SMART_EIFFEL*/T0* r100code_accumulator(void);
/*SMART_EIFFEL*/T0* r100type_real_extended(T100* C);
/*SMART_EIFFEL*/void r100void_target_function_call_count_increment(T100* C);
/*SMART_EIFFEL*/void r100echo_polymorphic_inspect_distribution(T100* C,T0* a1);
/*SMART_EIFFEL*/void r100safety_check(T100* C);
extern int fBC100initialize_any_tuple;
/*SMART_EIFFEL*/void r100initialize_any_tuple(void);
/*SMART_EIFFEL*/T6 r100try_agent_creation_error_trap(T0* a1);
/*SMART_EIFFEL*/T0* r100type_character(T100* C);
/*SMART_EIFFEL*/void r100magic_count_increment(T100* C);
/*SMART_EIFFEL*/void r100pop_context(T0* a1);
/*SMART_EIFFEL*/T0* r100collect_one_type(T0* a1,T6 a2);
extern T0*oBC28assignment_handler;
/*SMART_EIFFEL*/void r100inspect_when_merge_counter_increment(T100* C);
/*SMART_EIFFEL*/void r100collect_create(T0* a1);
/*SMART_EIFFEL*/T0* r100simplify_integer_infix_power(T332 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r100collect_constant(T0* a1);
/*SMART_EIFFEL*/T0* r100type_real_64(T100* C);
/*ID_PROVIDER*/void r271make(T271* C);
/*ID_PROVIDER*/T0* r271alias_of(T10 a1);
extern T0*oBC271id_memory;
extern int fBC271id_memory;
/*ID_PROVIDER*/T0* r271id_memory(void);
/*ID_PROVIDER*/T0* r271echo(void);
extern T0*oBC271per_cluster_id_memory;
extern int fBC271per_cluster_id_memory;
/*ID_PROVIDER*/T0* r271per_cluster_id_memory(void);
/*ID_PROVIDER*/T0* r271cluster_id_memory(T0* a1);
/*ID_PROVIDER*/T10 r271high_item(T271* C,T0* a1);
/*ID_PROVIDER*/void r271cluster_id_memory_add(T10 a1,T0* a2,T0* a3);
/*ID_PROVIDER*/T0* r271class_name_of(T0* a1);
/*ID_PROVIDER*/T10 r271item(T271* C,T0* a1,T0* a2);
extern T0*oBC271temporary_type_name;
extern int fBC271temporary_type_name;
/*ID_PROVIDER*/T0* r271temporary_type_name(void);
/*ID_PROVIDER*/void r271disk_save(T271* C);
/*ID_PROVIDER*/T0* r271system_tools(void);
/*ID_PROVIDER*/void r271disk_save_ids(T271* C,T0* a1,T0* a2,T0* a3);
/*ID_PROVIDER*/void r271disk_restore(T271* C);
/*ID_PROVIDER*/void r271id_memory_add(T10 a1,T0* a2,T6 a3);
/*ID_PROVIDER*/T6 r271is_valid_type_mark(T0* a1);
/*STRING_ALIASER*/T6 r261registered_one(T0* a1);
/*STRING_ALIASER*/T0* r261hashed_string(T0* a1);
/*STRING_ALIASER*/T0* r261create_hashed_string(T0* a1);
extern T0*oBC261memory;
extern int fBC261memory;
/*STRING_ALIASER*/T0* r261memory(void);
/*STRING_ALIASER*/T0* r261string(T0* a1);
/*STRING_ALIASER*/void r261echo_information(void);
/*STRING_ALIASER*/T0* r261echo(void);
extern T0*oBC261tuple_name;
extern int fBC261tuple_name;
/*STRING_ALIASER*/T0* r261tuple_name(void);
extern T0*oBC261hashed_string_buffer;
extern int fBC261hashed_string_buffer;
/*STRING_ALIASER*/T0* r261hashed_string_buffer(void);
/*GC_HANDLER*/void r611make(T611* C);
/*GC_HANDLER*/void r611gc_info_before_exit(T611* C);
/*GC_HANDLER*/void r611free_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611compute_ceils(void);
extern T0*oBC611switch_list;
extern int fBC611switch_list;
/*GC_HANDLER*/T0* r611switch_list(void);
/*GC_HANDLER*/void r611initialize_user_expanded_attributes(T0* a1,T0* a2);
/*GC_HANDLER*/void r611info_nb_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611mark_once_routines(T611* C);
/*GC_HANDLER*/T0* r611echo(void);
/*GC_HANDLER*/void r611align_mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611customize_c_runtime(T611* C);
/*GC_HANDLER*/void r611native9_in(T611* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r611na_env_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611c_dicho(T0* a1,T2 a2,T2 a3);
/*GC_HANDLER*/void r611set_info_flag(T611* C);
/*GC_HANDLER*/void r611mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/T0* r611cpp(void);
/*GC_HANDLER*/void r611allocation_of(T611* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r611define_gc_start(T611* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r611agent_pool_gc_info(void);
/*GC_HANDLER*/void r611no_gc(T611* C);
/*GC_HANDLER*/void r611mark_for(T0* a1,T0* a2,T6 a3);
/*GC_HANDLER*/void r611define1(void);
/*GC_HANDLER*/void r611manifest_string_mark_signature(T2 a1);
/*GC_HANDLER*/void r611define2(T611* C);
/*GC_HANDLER*/void r611initialize_runtime(T611* C);
/*GC_HANDLER*/void r611memory_dispose(T611* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r611store_left_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611store_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611store_chunk_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r611define_gc_info(T611* C,T0* a1);
/*GC_HANDLER*/void r611manifest_string_in(T611* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r611just_before_mark(T611* C,T0* a1);
/*GC_HANDLER*/void r611define_manifest_string_mark(void);
/*GC_HANDLER*/void r611switch_for(T0* a1);
/*SYSTEM*/int create630(void);
/*SYSTEM*/T0* r630get_environment_variable(T0* a1);
/*CECIL_POOL*/T77*create77(void);
/*CECIL_POOL*/T0* r77echo(void);
/*CECIL_POOL*/void r77parse_cecil_files(T77* C);
/*CECIL_POOL*/void r77collect(T77* C);
/*CECIL_POOL*/void r77add_cecil_file(T77* C,T0* a1);
/*CECIL_POOL*/void r77inline_dynamic_dispatch(T77* C,T0* a1,T0* a2);
/*CECIL_POOL*/void r77do_all(T77* C,T0* a1);
/*FILE_TOOLS*/int create274(void);
extern T0*oBC274tfr1;
extern T0*oBC274tfr2;
/*FILE_TOOLS*/T6 r274same_files(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r274is_readable(T0* a1);
/*FILE_TOOLS*/T6 r274file_exists(T0* a1);
/*FILE_TOOLS*/void r274delete(T0* a1);
/*FILE_TOOLS*/T6 r274is_empty(T0* a1);
/*FILE_TOOLS*/T6 r274is_file(T0* a1);
/*FILE_TOOLS*/T6 r274is_directory(T0* a1);
/*FILE_TOOLS*/void r274rename_to(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r274same_physical_file(T0* a1,T0* a2);
/*ERROR_HANDLER*/void r273print_as_error(T273* C);
/*ERROR_HANDLER*/void r273put_arrows_into(T0* a1,T0* a2);
/*ERROR_HANDLER*/void r273get_positions_on_same_line(T0* a1);
/*ERROR_HANDLER*/void r273cancel(void);
/*ERROR_HANDLER*/void r273print_spaces(T2 a1);
extern T0*oBC273positions;
extern int fBC273positions;
/*ERROR_HANDLER*/T0* r273positions(void);
/*ERROR_HANDLER*/T0* r273echo(void);
/*ERROR_HANDLER*/void r273add_position(T332 a1);
/*ERROR_HANDLER*/T2 r273detab_line(T0* a1);
/*ERROR_HANDLER*/void r273add_expression(T0* a1);
/*ERROR_HANDLER*/void r273print_as_fatal_error(T273* C);
/*ERROR_HANDLER*/void r273do_print(T0* a1);
/*ERROR_HANDLER*/void r273print_as_warning(T273* C);
/*ERROR_HANDLER*/void r273add_type(T0* a1);
/*ERROR_HANDLER*/void r273add_type_mark(T0* a1);
/*ERROR_HANDLER*/void r273add_context_info(T0* a1);
/*ERROR_HANDLER*/void r273append_integer_64(T11 a1);
/*ERROR_HANDLER*/T6 r273is_empty(void);
/*ERROR_HANDLER*/void r273add_feature_name(T0* a1);
/*ERROR_HANDLER*/void r273crash(T273* C);
/*ERROR_HANDLER*/void r273append_integer(T2 a1);
/*ERROR_HANDLER*/void r273print_as_internal_error(T273* C);
/*ERROR_HANDLER*/void r273print_error_header(T0* a1,T0* a2,T2 a3,T0* a4);
/*ERROR_HANDLER*/void r273display_lines(void);
/*ERROR_HANDLER*/T0* r273get_line(T0* a1,T2 a2);
extern T0*oBC273explanation;
extern int fBC273explanation;
/*ERROR_HANDLER*/T0* r273explanation(void);
/*SERC_FACTORY*/void r542add_to_chain(T0* a1,T0* a2);
extern T0*oBC542config;
extern int fBC542config;
/*SERC_FACTORY*/T0* r542config(void);
extern T0*oBC542seconf_env;
extern int fBC542seconf_env;
/*SERC_FACTORY*/T0* r542seconf_env(void);
extern T0*oBC542userprofile_env;
extern int fBC542userprofile_env;
/*SERC_FACTORY*/T0* r542userprofile_env(void);
/*SERC_FACTORY*/T0* r542system_tools(void);
extern T0*oBC542home_env;
extern int fBC542home_env;
/*SERC_FACTORY*/T0* r542home_env(void);
/*SERC_FACTORY*/T0* r542parser_buffer(void);
/*SERC_FACTORY*/T0* r542env(T0* a1);
/*BASIC_DIRECTORY*/void r527compute_file_path_with(T0* a1,T0* a2);
/*BASIC_DIRECTORY*/T6 r527macintosh_notation(void);
/*BASIC_DIRECTORY*/T6 r527openvms_notation(void);
/*BASIC_DIRECTORY*/void r527compute_parent_directory_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r527unix_notation(void);
/*BASIC_DIRECTORY*/void r527compute_absolute_file_path_with(T0* a1);
/*BASIC_DIRECTORY*/void r527connect_to_current_working_directory(T527* C);
/*BASIC_DIRECTORY*/T6 r527windows_notation(void);
/*BASIC_DIRECTORY*/T6 r527amiga_notation(void);
/*BASIC_DIRECTORY*/void r527set_notation_using(T0* a1);
/*BASIC_DIRECTORY*/void r527compute_short_name_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r527cygwin_notation(void);
extern T0*oBC527last_entry;
extern int fBC527last_entry;
/*BASIC_DIRECTORY*/T0* r527last_entry(void);
/*BASIC_DIRECTORY*/T0* r527current_working_directory(void);
/*BASIC_DIRECTORY*/T0* r527system_notation(void);
/*BASIC_DIRECTORY*/void r527compute_subdirectory_with(T0* a1,T0* a2);
extern int fBC527ensure_system_notation;
/*BASIC_DIRECTORY*/void r527ensure_system_notation(void);
/*BASIC_DIRECTORY*/void r527connect_to(T527* C,T0* a1);
/*BASIC_DIRECTORY*/void r527read_entry(T527* C);
/*BASIC_DIRECTORY*/void r527disconnect(T527* C);
extern T0*oBC527system_notation_buffer;
/*STD_INPUT_OUTPUT*/void r71put_line(T71* C,T0* a1);
extern T0*oBC13std_input;
extern int fBC13std_input;
/*STD_INPUT_OUTPUT*/T0* r71std_input(void);
/*STD_INPUT_OUTPUT*/T0* r71std_output(void);
/*STD_INPUT_OUTPUT*/T6 r71is_connected(void);
/*STD_INPUT_OUTPUT*/void r71put_string(T71* C,T0* a1);
extern T0*oBC65tmp_string;
extern int fBC65tmp_string;
/*STD_INPUT_OUTPUT*/T0* r71tmp_string(void);
/*STD_INPUT_OUTPUT*/void r71put_real_format(T71* C,T5 a1,T2 a2);
/*STD_INPUT_OUTPUT*/void r71put_integer(T71* C,T11 a1);
/*STD_INPUT_OUTPUT*/void r71put_abstract_string(T0* a1);
/*STD_INPUT_OUTPUT*/void r71disconnect(void);
/*STD_INPUT_OUTPUT*/T0* r71as_output_stream(T71* C);
/*UNIX_DIRECTORY_NOTATION*/T529*create529(void);
/*UNIX_DIRECTORY_NOTATION*/void r529to_subpath_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/T0* r529from_path_name(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r529to_subdirectory_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529start_join(T529* C,T0* a1,T2 a2);
/*UNIX_DIRECTORY_NOTATION*/void r529to_root(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529join_element(T529* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r529to_directory_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r529to_short_name_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529to_current_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r529to_file_path_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529from_notation(T529* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529to_absolute_path_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529to_parent_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r529join_directory(T529* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T6 r529is_absolute_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T0* r529to_notation(T529* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r529join_up(T529* C);
/*UNIX_DIRECTORY_NOTATION*/void r529to_default_root(T0* a1);
extern T0*oBC529tmp1;
extern int fBC529tmp1;
/*UNIX_DIRECTORY_NOTATION*/T0* r529tmp1(void);
extern T0*oBC529tmp2;
extern int fBC529tmp2;
/*UNIX_DIRECTORY_NOTATION*/T0* r529tmp2(void);
/*WINDOWS_DIRECTORY_NOTATION*/T533*create533(void);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_subpath_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r533from_path_name(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_subdirectory_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533start_join(T533* C,T0* a1,T2 a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_root(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533join_element(T533* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_directory_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_short_name_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_current_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_file_path_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533from_notation(T533* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_absolute_path_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_parent_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r533join_directory(T533* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T6 r533is_absolute_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r533to_notation(T533* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r533join_up(T533* C);
/*WINDOWS_DIRECTORY_NOTATION*/void r533to_default_root(T0* a1);
extern T0*oBC533tmp1;
extern int fBC533tmp1;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r533tmp1(void);
extern T0*oBC533tmp2;
extern int fBC533tmp2;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r533tmp2(void);
/*MACINTOSH_DIRECTORY_NOTATION*/T534*create534(void);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_subpath_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_subdirectory_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_directory_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_short_name_in(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_current_directory(T534* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_file_path_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534from_notation(T534* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_absolute_path_in(T534* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_parent_directory(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r534is_absolute_path(T534* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T0* r534to_notation(T534* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r534is_valid_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534to_default_root(T534* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534crash(T534* C);
/*MACINTOSH_DIRECTORY_NOTATION*/void r534not_yet_implemented(T534* C);
/*AMIGA_DIRECTORY_NOTATION*/T535*create535(void);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_subpath_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_subdirectory_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_directory_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_short_name_in(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_current_directory(T535* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_file_path_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r535from_notation(T535* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_absolute_path_in(T535* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_parent_directory(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T6 r535is_absolute_path(T535* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T0* r535to_notation(T535* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/T6 r535is_valid_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r535to_default_root(T535* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r535crash(T535* C);
/*AMIGA_DIRECTORY_NOTATION*/void r535not_yet_implemented(T535* C);
/*OPENVMS_DIRECTORY_NOTATION*/T536*create536(void);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_subpath_with(T536* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_subdirectory_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_directory_path(T536* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_short_name_in(T536* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_current_directory(T536* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_file_path_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r536from_notation(T536* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_absolute_path_in(T536* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_parent_directory(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r536is_absolute_path(T536* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T0* r536to_notation(T536* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r536is_valid_path(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r536to_default_root(T536* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r536crash(T536* C);
/*OPENVMS_DIRECTORY_NOTATION*/void r536not_yet_implemented(T536* C);
/*CYGWIN_DIRECTORY_NOTATION*/T537*create537(void);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_subpath_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_subdirectory_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_directory_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_short_name_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_current_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_file_path_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r537from_notation(T537* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_absolute_path_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_parent_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r537is_absolute_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T0* r537to_notation(T537* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r537is_valid_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r537to_default_root(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r537crash(T537* C);
/*CYGWIN_DIRECTORY_NOTATION*/void r537not_yet_implemented(T537* C);
/*TEXT_FILE_READ*/void r91unlock_tagged_out(void);
/*TEXT_FILE_READ*/T0* r91tagged_out_memory_pool(void);
/*TEXT_FILE_READ*/void r91filtered_read_character(T91* C);
/*TEXT_FILE_READ*/void r91lock_tagged_out(void);
/*TEXT_FILE_READ*/void r91filtered_read_line_in(T91* C,T0* a1);
/*TEXT_FILE_READ*/void r91set_path(T91* C,T0* a1);
/*TEXT_FILE_READ*/void r91read_line(T91* C);
/*TEXT_FILE_READ*/void r91fill_buffer(T91* C);
/*TEXT_FILE_READ*/T6 r91same_as(T91* C,T0* a1);
/*TEXT_FILE_READ*/void r91connect_to(T91* C,T0* a1);
extern T0*oBC59last_string;
extern int fBC59last_string;
/*TEXT_FILE_READ*/T0* r91last_string(void);
/*TEXT_FILE_READ*/void r91dispose(T91* C);
/*TEXT_FILE_READ*/void r91disconnect(T91* C);
/*TEXT_FILE_READ*/T0* r91tagged_out_memories(void);
/*SE_C_MODE*/void r528make(T528* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8,T0* a9,T0* a10,T0* a11,T0* a12,T0* a13);
/*TMP_FEATURE*/T0* r446as_character_constant(T446* C,T0* a1);
/*TMP_FEATURE*/T0* r446n(T446* C);
/*TMP_FEATURE*/T0* r446as_once_routine(T446* C);
/*TMP_FEATURE*/T0* r446as_deferred_routine(T446* C);
/*TMP_FEATURE*/void r446constant_attribute_common_checks(T446* C,T0* a1);
/*TMP_FEATURE*/T0* r446as_writable_attribute(T446* C);
/*TMP_FEATURE*/void r446initialize(T446* C);
/*TMP_FEATURE*/T0* r446as_string_constant(T446* C,T0* a1);
/*TMP_FEATURE*/void r446set_require(T446* C,T332 a1,T6 a2,T0* a3,T0* a4);
/*TMP_FEATURE*/T0* r446as_constant(T446* C,T0* a1);
/*TMP_FEATURE*/T0* r446as_procedure_or_function(T446* C);
/*TMP_FEATURE*/T0* r446as_unique_constant(T446* C);
/*TMP_FEATURE*/T0* r446as_external_routine(T446* C,T0* a1,T0* a2);
/*TMP_FEATURE*/T0* r446as_boolean_constant(T446* C,T0* a1);
/*TEXT_FILE_WRITE*/void r445put_line(T445* C,T0* a1);
/*TEXT_FILE_WRITE*/T11 r445character_count(T445* C);
/*TEXT_FILE_WRITE*/void r445make(T445* C);
/*TEXT_FILE_WRITE*/void r445unlock_tagged_out(void);
/*TEXT_FILE_WRITE*/T0* r445tagged_out_memory_pool(void);
/*TEXT_FILE_WRITE*/void r445filtered_put_character(T445* C,T3 a1);
/*TEXT_FILE_WRITE*/void r445lock_tagged_out(void);
/*TEXT_FILE_WRITE*/void r445set_path(T445* C,T0* a1);
/*TEXT_FILE_WRITE*/T6 r445is_connected(T445* C);
/*TEXT_FILE_WRITE*/void r445put_string(T445* C,T0* a1);
/*TEXT_FILE_WRITE*/T0* r445tmp_string(void);
/*TEXT_FILE_WRITE*/void r445put_real_format(T445* C,T5 a1,T2 a2);
/*TEXT_FILE_WRITE*/void r445put_integer(T445* C,T11 a1);
/*TEXT_FILE_WRITE*/void r445connect_to(T445* C,T0* a1);
/*TEXT_FILE_WRITE*/void r445filtered_flush(T445* C);
/*TEXT_FILE_WRITE*/void r445put_abstract_string(T445* C,T0* a1);
/*TEXT_FILE_WRITE*/void r445dispose(T445* C);
/*TEXT_FILE_WRITE*/void r445disconnect(T445* C);
/*TEXT_FILE_WRITE*/T0* r445tagged_out_memories(void);
/*TEXT_FILE_WRITE*/T0* r445as_output_stream(T445* C);
/*TEXT_FILE_WRITE*/void r445write_buffer(T445* C);
/*STD_ERROR*/void r73put_line(T73* C,T0* a1);
/*STD_ERROR*/void r73put_natively_stored_string(T0* a1);
/*STD_ERROR*/T0* r73std_output(void);
/*STD_ERROR*/void r73put_string(T73* C,T0* a1);
/*STD_ERROR*/T0* r73tmp_string(void);
/*STD_ERROR*/void r73put_real_format(T73* C,T5 a1,T2 a2);
/*STD_ERROR*/void r73put_integer(T73* C,T11 a1);
/*STD_ERROR*/void r73filtered_flush(void);
/*STD_ERROR*/T0* r73as_output_stream(T73* C);
/*STD_OUTPUT*/void r62put_line(T62* C,T0* a1);
/*STD_OUTPUT*/void r62make(T62* C);
/*STD_OUTPUT*/void r62filtered_put_character(T62* C,T3 a1);
/*STD_OUTPUT*/void r62put_natively_stored_string(T62* C,T0* a1);
/*STD_OUTPUT*/T0* r62std_output(void);
/*STD_OUTPUT*/void r62flush(T62* C);
/*STD_OUTPUT*/void r62put_string(T62* C,T0* a1);
/*STD_OUTPUT*/T0* r62tmp_string(void);
/*STD_OUTPUT*/void r62put_real_format(T62* C,T5 a1,T2 a2);
/*STD_OUTPUT*/void r62put_integer(T62* C,T11 a1);
/*STD_OUTPUT*/void r62se_atexit(void);
/*STD_OUTPUT*/void r62filtered_flush(T62* C);
/*STD_OUTPUT*/T0* r62as_output_stream(T62* C);
/*STD_OUTPUT*/void r62write_buffer(T62* C);
/*HASHED_STRING*/T6 r96is_equal(T96* C,T0* a1);
/*HASHED_STRING*/void r96make(T96* C,T0* a1,T2 a2);
/*HASHED_STRING*/void r96set(T96* C,T0* a1);
/*HASHED_STRING*/T6 r96is_tuple_related(T96* C);
/*PARSER_BUFFER*/void r110make(T110* C);
/*PARSER_BUFFER*/void r110release(T110* C);
/*PARSER_BUFFER*/void r110load_file(T110* C,T0* a1);
/*PARSER_BUFFER*/T0* r110empty_line_at(T110* C,T2 a1);
/*C_SPLITTER_NO_SPLIT*/void r672make(void);
/*C_SPLITTER_NO_SPLIT*/void r672connect(T672* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/void r672split_now(T672* C);
/*C_SPLITTER_NO_SPLIT*/void r672connect_out_c(T672* C);
/*C_SPLITTER_NO_SPLIT*/T0* r672echo(void);
/*C_SPLITTER_NO_SPLIT*/void r672c_connect(T672* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r672cpp(void);
/*C_SPLITTER_NO_SPLIT*/T0* r672system_tools(void);
extern T0*oBC673out_c;
extern int fBC673out_c;
/*C_SPLITTER_NO_SPLIT*/T0* r672out_c(void);
/*C_SPLITTER_NO_SPLIT*/T6 r672write_make_file(T672* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r672linker_command(T672* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676make(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r676should_split(T676* C,T2 a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676connect(T676* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676split_now(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676connect_out_c(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676echo(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676c_files_suffixes(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T2 r676current_id(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676c_connect(T676* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676cpp(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676current_c_file_suffix(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676tmp_path(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676backup_tfw_connect(T676* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676system_tools(void);
extern T0*oBC675tmp_string;
extern int fBC675tmp_string;
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676tmp_string(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676do_split(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676path_in(T676* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676out_c(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676set_live_type(T676* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676append_suffix(T676* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r676write_make_file(T676* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r676linker_command(T676* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r676_P_673_connect(T676* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r674make(T674* C);
/*C_SPLITTER_LEGACY*/void r674add_objects_(T0* a1,T0* a2,T2 a3,T2 a4);
/*C_SPLITTER_LEGACY*/T6 r674should_split(T674* C,T2 a1);
/*C_SPLITTER_LEGACY*/void r674connect(T674* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r674split_now(T674* C);
/*C_SPLITTER_LEGACY*/void r674connect_out_c(T674* C);
/*C_SPLITTER_LEGACY*/T0* r674echo(void);
/*C_SPLITTER_LEGACY*/T0* r674c_files_suffixes(T674* C);
/*C_SPLITTER_LEGACY*/void r674c_connect(T674* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r674cpp(void);
/*C_SPLITTER_LEGACY*/T0* r674current_c_file_suffix(T674* C);
/*C_SPLITTER_LEGACY*/void r674add_objects(T674* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r674tmp_path(void);
/*C_SPLITTER_LEGACY*/void r674backup_tfw_connect(T674* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r674system_tools(void);
/*C_SPLITTER_LEGACY*/T0* r674tmp_string(void);
/*C_SPLITTER_LEGACY*/void r674do_split(T674* C);
/*C_SPLITTER_LEGACY*/void r674path_in(T674* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_LEGACY*/T0* r674out_c(void);
/*C_SPLITTER_LEGACY*/T6 r674write_make_file(T674* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r674linker_command(T674* C,T0* a1);
/*DIRECTORY*/T0* r538connect_directory(T538* C,T0* a1);
/*DIRECTORY*/void r538scan(T538* C,T0* a1);
/*UNIVERSE*/void r668make(T668* C);
/*UNIVERSE*/void r668add_classes(T668* C,T0* a1);
/*UNIVERSE*/void r668for_all(T668* C,T0* a1);
/*UNIVERSE*/T2 r668cluster_count(T668* C);
extern T0*oBC670classes_notation;
/*UNIVERSE*/T6 r668has_physical_cluster(T668* C,T0* a1);
/*UNIVERSE*/T0* r668echo(void);
/*UNIVERSE*/T0* r668cluster_named(T668* C,T0* a1);
/*UNIVERSE*/T6 r668is_system_path(T668* C,T0* a1);
/*UNIVERSE*/void r668get_started(T668* C,T2 a1);
/*UNIVERSE*/T0* r668system_path_to_classes_path(T668* C,T0* a1);
/*UNIVERSE*/void r668clusters_of(T668* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*UNIVERSE*/void r668add_entry(T668* C,T2 a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*UNIVERSE*/void r668view_in(T668* C,T0* a1);
extern T0*oBC670system_notation;
extern int fBC670system_notation;
/*UNIVERSE*/T0* r668system_notation(T668* C);
/*UNIVERSE*/T2 r668loaded_class_count(T668* C);
/*UNIVERSE*/void r668show_tabs(T2 a1);
/*UNIVERSE*/void r668parse_include(T668* C);
/*UNIVERSE*/T0* r668find_physical_cluster(T668* C,T0* a1);
/*UNIVERSE*/void r668show(T668* C,T2 a1);
/*POSITION*/void r332set(T332* C,T2 a1,T2 a2,T10 a3,T0* a4);
/*POSITION*/T6 r332sedb_trace(T332* C);
/*POSITION*/T6 r332same_line_as(T332* C,T332 a1);
extern T0*oBC28plugin_config;
/*POSITION*/T0* r332path(T332* C);
/*POSITION*/T10 r332id(T332* C);
/*POSITION*/void r332set_in_ace_file(T332* C,T2 a1,T2 a2);
/*POSITION*/T0* r332class_text_name(T332* C);
/*POSITION*/T0* r332id_provider(void);
extern T1044 oBC332class_text_storage;
extern T0*oBC28ini_parser;
/*POSITION*/void r332set_in_ini_file(T332* C,T2 a1,T2 a2,T10 a3);
/*POSITION*/T6 r332_ix_60(T332* C,T332 a1);
/*POSITION*/T0* r332class_text(T332* C);
/*POSITION*/T2 r332column(T332* C);
/*POSITION*/T2 r332line(T332* C);
/*POSITION*/T6 r332before(T332* C,T332 a1);
/*COMMENT*/T0* r414to_expression(T414* C);
/*COMMENT*/void r414make(T414* C,T332 a1,T0* a2);
/*COMMENT*/void r414pretty(T414* C,T2 a1);
/*COMMENT*/T0* r414simplify(T0* a1);
/*COMMENT*/void r414good_end_warning_check(T414* C,T0* a1);
/*COMMENT*/T6 r414is_dummy_feature_end(T414* C,T0* a1);
/*COMMENT*/void r414add_last(T414* C,T0* a1);
/*COMMENT*/void r414append(T414* C,T0* a1);
/*COMMENT*/T6 r414use_current(T0* a1);
/*COMMENT*/T6 r414side_effect_free(T0* a1);
/*COMMENT*/T0* r414inline_dynamic_dispatch(T0* a1,T0* a2);
/*COMMENT*/T2 r414count(T414* C);
/*COMMENT*/T0* r414to_instruction(T414* C);
/*UNICODE_STRING*/void r309make(T309* C,T2 a1);
/*UNICODE_STRING*/void r309make_empty(T309* C);
/*UNICODE_STRING*/T6 r309valid_unicode(T2 a1);
/*UNICODE_STRING*/void r309utf8_character_in(T2 a1,T0* a2);
/*UNICODE_STRING*/void r309extend(T309* C,T2 a1);
/*UNICODE_STRING*/void r309add_last(T309* C,T2 a1);
/*UNICODE_STRING*/T10 r309low_surrogate_value(T309* C,T2 a1);
/*UNICODE_STRING*/T2 r309item(T309* C,T2 a1);
/*UNICODE_STRING*/void r309clear_count(T309* C);
/*UNICODE_STRING*/void r309utf8_encode_in(T309* C,T0* a1);
/*UNICODE_STRING*/void r309next_generation(T309* C);
extern T0*oBC671classes_memory;
extern int fBC671classes_memory;
/*CLASSES_TREE_FACTORY*/T0* r671classes_memory(void);
/*CLASSES_TREE_FACTORY*/T0* r671classes(T671* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
extern T0*oBC671universe;
extern int fBC671universe;
/*CLASSES_TREE_FACTORY*/T0* r671universe(void);
/*CLUSTER*/void r423register_class_text(T423* C,T0* a1);
extern T0*oBC423file_name_buffer;
extern int fBC423file_name_buffer;
/*CLUSTER*/T0* r423file_name_buffer(void);
/*CLUSTER*/void r423exclude_add_last(T423* C,T0* a1);
/*CLUSTER*/void r423include_add_last(T423* C,T0* a1);
/*CLUSTER*/void r423read_classes(T423* C);
/*CLUSTER*/T6 r423trace(T423* C,T0* a1);
/*CLUSTER*/void r423include_parsing(T423* C);
/*CLUSTER*/T0* r423system_tools(void);
/*CLUSTER*/T6 r423debug_check(T423* C,T0* a1,T0* a2);
extern T0*oBC423path_buffer;
extern int fBC423path_buffer;
/*CLUSTER*/T0* r423path_buffer(void);
/*CLUSTER*/T2 r423class_text_count(T423* C);
/*CLUSTER*/void r423add_default_debug_key(T423* C,T0* a1);
/*CLUSTER*/T2 r423assertion_level_of(T423* C,T0* a1);
/*CLUSTER*/T0* r423parser_buffer(void);
/*CLUSTER*/T6 r423parser_buffer_load(T423* C);
/*CLUSTER*/void r423show(T423* C);
/*CLUSTER*/void r423make(T423* C,T0* a1,T0* a2,T0* a3);
/*CLUSTER*/T0* r423echo(void);
/*CLUSTER*/T2 r423loaded_class_count(T423* C);
/*CLUSTER*/void r423init(T423* C,T0* a1,T2 a2);
/*CLUSTER*/T6 r423parser_buffer_for(T423* C,T0* a1,T6 a2);
/*CLUSTER*/T0* r423level_name(T2 a1);
/*CLUSTER*/T6 r423match_debug_keys(T0* a1,T0* a2);
/*CLUSTER*/T6 r423default_trace_or_ace_default_trace(T423* C);
/*CLUSTER*/void r423set_option_assertion_level(T423* C,T0* a1,T2 a2);
/*CLUSTER*/void r423for_all(T423* C,T0* a1);
/*CLUSTER*/T0* r423class_text(T423* C,T0* a1,T6 a2,T6 a3);
/*CLUSTER*/void r423set_default_trace(T423* C,T6 a1);
/*CLUSTER*/void r423add_option_trace(T423* C,T0* a1);
/*CLUSTER*/void r423get_started(T423* C,T2 a1);
/*CLUSTER*/void r423view_in(T423* C,T0* a1);
/*CLUSTER*/T6 r423prepare_parser_buffer_for(T423* C,T0* a1);
/*CLUSTER*/void r423add_option_debug_key(T423* C,T0* a1,T0* a2);
/*TOKEN_BUFFER*/T0* r747to_class_name(T747* C);
/*TOKEN_BUFFER*/T0* r747eiffel_parser(void);
/*TOKEN_BUFFER*/T0* r747to_feature_name(T747* C);
/*TOKEN_BUFFER*/T0* r747to_tag_name(T747* C);
/*TOKEN_BUFFER*/T0* r747to_argument_name1(T747* C);
/*TOKEN_BUFFER*/T0* r747to_argument_name2(T747* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/void r747extend(T3 a1);
/*TOKEN_BUFFER*/T6 r747isa_keyword(void);
/*TOKEN_BUFFER*/T0* r747hashed_string(T747* C);
/*TOKEN_BUFFER*/T332 r747start_position(T747* C);
/*TOKEN_BUFFER*/T0* r747to_manifest_string(T747* C);
/*TOKEN_BUFFER*/T0* r747to_writable_attribute_name(T747* C);
/*TOKEN_BUFFER*/void r747append(T0* a1);
/*TOKEN_BUFFER*/void r747reset(T747* C,T2 a1,T2 a2);
/*TOKEN_BUFFER*/T0* r747to_local_name2(T747* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/T0* r747to_local_name1(T747* C);
typedef struct _se_agenT556f557l25c44 se_agenT556f557l25c44;
struct _se_agenT556f557l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT556f557l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT556f557l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT556f557l25c44(T0* closed_C);
void gc_mark_agenT556f557l25c44(se_agenT556f557l25c44*u);
/*C_HEADER_PASS_1*/void r556make(T556* C);
/*C_HEADER_PASS_1*/void r556compile_live_type(T556* C,T0* a1);
/*C_HEADER_PASS_1*/void r556visit_native_array_type_mark(T556* C,T0* a1);
/*C_HEADER_PASS_1*/void r556visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_1*/void r556standard_c_typedef(T0* a1);
/*C_HEADER_PASS_1*/void r556pre_compile(void);
/*C_HEADER_PASS_1*/void r556visit_agent_type_mark(T0* a1);
/*C_HEADER_PASS_1*/T0* r556cpp(void);
/*C_HEADER_PASS_1*/void r556do_compile(T556* C,T0* a1);
/*C_HEADER_PASS_1*/void r556compile(T556* C);
/*C_HEADER_PASS_1*/void r556flush_out_h(void);
/*C_HEADER_PASS_1*/void r556visit_class_type_mark(T0* a1);
typedef struct _se_agenT586f557l25c44 se_agenT586f557l25c44;
struct _se_agenT586f557l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT586f557l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT586f557l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT586f557l25c44(T0* closed_C);
void gc_mark_agenT586f557l25c44(se_agenT586f557l25c44*u);
/*C_HEADER_PASS_2*/void r586make(T586* C);
/*C_HEADER_PASS_2*/void r586compile_live_type(T586* C,T0* a1);
/*C_HEADER_PASS_2*/void r586visit_native_array_type_mark(T586* C,T0* a1);
/*C_HEADER_PASS_2*/T0* r586cpp(void);
/*C_HEADER_PASS_2*/void r586do_compile(T586* C,T0* a1);
/*C_HEADER_PASS_2*/void r586compile(T586* C);
/*C_HEADER_PASS_2*/void r586native_array_type_in(T0* a1,T0* a2);
/*C_HEADER_PASS_2*/void r586flush_out_h(void);
typedef struct _se_agenT587f587l22c50 se_agenT587f587l22c50;
struct _se_agenT587f587l22c50{Tid id;
int creation_mold_id;
void(*afp)(se_agenT587f587l22c50*,T0*);
void(*gc_mark_agent_mold)(se_agenT587f587l22c50*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT587f587l22c50(T0* closed_C);
void gc_mark_agenT587f587l22c50(se_agenT587f587l22c50*u);
typedef struct _se_agenT587f557l25c44 se_agenT587f557l25c44;
struct _se_agenT587f557l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT587f557l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT587f557l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT587f557l25c44(T0* closed_C);
void gc_mark_agenT587f557l25c44(se_agenT587f557l25c44*u);
/*C_HEADER_PASS_3*/void r587make(T587* C);
/*C_HEADER_PASS_3*/void r587standard_c_object_model(T0* a1);
/*C_HEADER_PASS_3*/void r587compile_expanded(T587* C,T0* a1);
/*C_HEADER_PASS_3*/void r587compile_live_type(T587* C,T0* a1);
/*C_HEADER_PASS_3*/void r587c_object_model_in(T0* a1);
/*C_HEADER_PASS_3*/void r587visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_3*/T0* r587cpp(void);
/*C_HEADER_PASS_3*/void r587do_compile(T587* C,T0* a1);
/*C_HEADER_PASS_3*/void r587compile(T587* C);
/*C_HEADER_PASS_3*/void r587flush_out_h(void);
/*C_HEADER_PASS_3*/void r587standard_c_struct(T0* a1);
/*C_HEADER_PASS_3*/void r587visit_class_type_mark(T0* a1);
typedef struct _se_agenT588f557l25c44 se_agenT588f557l25c44;
struct _se_agenT588f557l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT588f557l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT588f557l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT588f557l25c44(T0* closed_C);
void gc_mark_agenT588f557l25c44(se_agenT588f557l25c44*u);
/*C_HEADER_PASS_4*/void r588visit_empty_tuple_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r588make(T588* C);
/*C_HEADER_PASS_4*/void r588visit_string_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r588standard_c_object_model(T0* a1);
/*C_HEADER_PASS_4*/void r588compile_live_type(T588* C,T0* a1);
/*C_HEADER_PASS_4*/void r588visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r588c_object_model_in(T0* a1);
/*C_HEADER_PASS_4*/void r588visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r588c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r588visit_any_type_mark(T0* a1);
/*C_HEADER_PASS_4*/T0* r588cpp(void);
/*C_HEADER_PASS_4*/void r588do_compile(T588* C,T0* a1);
/*C_HEADER_PASS_4*/void r588compile(T588* C);
/*C_HEADER_PASS_4*/void r588standard_c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r588flush_out_h(void);
/*C_HEADER_PASS_4*/void r588visit_array_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r588standard_c_struct(T0* a1);
/*C_HEADER_PASS_4*/void r588visit_class_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r588visit_non_empty_tuple_type_mark(T0* a1);
typedef struct _se_agenT589f589l77c54 se_agenT589f589l77c54;
struct _se_agenT589f589l77c54{Tid id;
int creation_mold_id;
void(*afp)(se_agenT589f589l77c54*,T0*);
void(*gc_mark_agent_mold)(se_agenT589f589l77c54*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT589f589l77c54(T0* closed_a1);
void gc_mark_agenT589f589l77c54(se_agenT589f589l77c54*u);
typedef struct _se_agenT589f589l106c53 se_agenT589f589l106c53;
struct _se_agenT589f589l106c53{Tid id;
int creation_mold_id;
void(*afp)(se_agenT589f589l106c53*,T0*);
void(*gc_mark_agent_mold)(se_agenT589f589l106c53*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT589f589l106c53(T0* closed_a1);
void gc_mark_agenT589f589l106c53(se_agenT589f589l106c53*u);
typedef struct _se_agenT589f589l117c20 se_agenT589f589l117c20;
struct _se_agenT589f589l117c20{Tid id;
int creation_mold_id;
void(*afp)(se_agenT589f589l117c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT589f589l117c20*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT589f589l117c20(void);
void gc_mark_agenT589f589l117c20(se_agenT589f589l117c20*u);
/*C_LIVE_TYPE_COMPILER*/void r589create_function_define(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r589set_pending_c_function_counter_tag(T0* a1);
extern T0*oBC589c_frame_descriptor_format;
extern int fBC589c_frame_descriptor_format;
/*C_LIVE_TYPE_COMPILER*/T0* r589c_frame_descriptor_format(void);
/*C_LIVE_TYPE_COMPILER*/T0* r589internal_c_local_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589set_internal_c_local_tag(T0* a1,T0* a2);
extern T0*oBC585pending_c_function_counter_tag_key;
extern int fBC585pending_c_function_counter_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r589pending_c_function_counter_tag_key(void);
/*C_LIVE_TYPE_COMPILER*/void r589define_agent_creation_for(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589put_c_field_name(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T6 r589rf7_does_need_c_wrapper(T0* a1);
extern T0*oBC585pending_c_function_counter_tag_values;
extern int fBC585pending_c_function_counter_tag_values;
/*C_LIVE_TYPE_COMPILER*/T0* r589pending_c_function_counter_tag_values(void);
extern T0*oBC585internal_c_local_tag_key;
extern int fBC585internal_c_local_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r589internal_c_local_tag_key(void);
extern T0*oBC589c_frame_descriptor_locals;
extern int fBC589c_frame_descriptor_locals;
/*C_LIVE_TYPE_COMPILER*/T0* r589c_frame_descriptor_locals(void);
/*C_LIVE_TYPE_COMPILER*/T0* r589cpp(void);
/*C_LIVE_TYPE_COMPILER*/void r589define_c_signature(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589is_equal_agent_creation_define_function(T0* a1,T0* a2);
extern T0*oBC589is_equal_agent_creation_type_generated;
extern int fBC589is_equal_agent_creation_type_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r589is_equal_agent_creation_type_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r589rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r589compile_live_type(T589* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589put_c_name_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_2(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_3(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_4(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589c_frame_descriptor(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_5(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589define_agent_creation_function(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_6(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589make(T589* C);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_7(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589args_c_frame_descriptor(T0* a1,T0* a2,T6 a3);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_8(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589visit_run_feature_9(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T0* r589echo(void);
/*C_LIVE_TYPE_COMPILER*/T6 r589rf8_does_need_c_wrapper(T0* a1);
extern T0*oBC589agent_address_of_c_define;
extern int fBC589agent_address_of_c_define;
/*C_LIVE_TYPE_COMPILER*/T0* r589agent_address_of_c_define(void);
/*C_LIVE_TYPE_COMPILER*/void r589is_equal_agent_creation_define_type_for(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r589compile(T589* C,T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/void r589is_equal_mold_id_in(T0* a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r589c_define_opening(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589args_compile_to_c_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r589open_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/T2 r589pending_c_function_counter_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589do_compile(T589* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589define_check_class_invariant_c_function(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589initialize_expanded(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r589address_of_c_define(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r589compile_to_c_old_memory(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r589c_initialize_frame_information(T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/T0* r589define_agent_creation_type(T0* a1,T0* a2,T6 a3,T0* a4,T2 a5);
extern T0*oBC589is_equal_agent_creation_function_generated;
extern int fBC589is_equal_agent_creation_function_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r589is_equal_agent_creation_function_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r589closed_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r589c_define_closing(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_7(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_8(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_9(T0* a1);
/*C_MAPPER*/void r601put_c_field_name(T0* a1);
/*C_MAPPER*/void r601default_mapping_function(T0* a1);
/*C_MAPPER*/T6 r601rf8_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/void r601default_mapping_procedure(T0* a1);
/*C_MAPPER*/T6 r601rf7_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/T0* r601cpp(void);
/*C_MAPPER*/void r601compile(T601* C,T0* a1);
/*C_MAPPER*/void r601visit_run_feature_1(T0* a1);
/*C_MAPPER*/void r601default_mapping_arg(T0* a1,T6 a2,T6 a3,T6 a4);
/*C_MAPPER*/void r601visit_run_feature_2(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_3(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_4(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_5(T0* a1);
/*C_MAPPER*/void r601visit_run_feature_6(T0* a1);
/*C_INITIALIZER*/void r602visit_empty_tuple_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_string_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_like_feature_type_mark(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_real_type_mark(T0* a1);
/*C_INITIALIZER*/T0* r602for(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_native_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_natural_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_like_current_type_mark(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_like_argument_type_mark(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_user_generic_type_mark(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_pointer_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_any_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_agent_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_character_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_formal_generic_type_mark(T602* C,T0* a1);
/*C_INITIALIZER*/void r602c_initialize_user_expanded(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_boolean_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r602crash(T602* C);
/*C_INITIALIZER*/void r602visit_integer_type_mark(T0* a1);
/*C_INITIALIZER*/void r602visit_class_type_mark(T602* C,T0* a1);
/*C_INITIALIZER*/void r602visit_non_empty_tuple_type_mark(T0* a1);
/*C_TARGET_MAPPER*/void r603set_pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_void_call(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_create_expression(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603compile_feature_call(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_fake_tuple(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_e_false(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_call_infix_ge(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_implicit_cast(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_integer_constant(T0* a1);
/*C_TARGET_MAPPER*/void r603not_yet_implemented(T603* C);
/*C_TARGET_MAPPER*/T0* r603internal_c_local_tag(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_compound_expression(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603set_internal_c_local_tag(T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r603visit_dynamic_dispatch_temporary1_id(T603* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r603pending_c_function_counter_tag_key(void);
/*C_TARGET_MAPPER*/void r603visit_old_manifest_array(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_call_infix_gt(T603* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r603pending_c_function_counter_tag_values(void);
/*C_TARGET_MAPPER*/void r603compile_expression(T603* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r603internal_c_local_tag_key(void);
/*C_TARGET_MAPPER*/void r603visit_call_infix_le(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_call_prefix_not(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_call_infix_lt(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_implicit_current(T0* a1);
/*C_TARGET_MAPPER*/T0* r603cpp(void);
/*C_TARGET_MAPPER*/void r603args_compile_to_c(T603* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r603visit_real_constant(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_agent_creation(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_static_call_0_c(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_no_dispatch(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_character_constant(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_null_pointer(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_dynamic_dispatch_temporary1(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_dynamic_dispatch_temporary2(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_e_true(T0* a1);
/*C_TARGET_MAPPER*/void r603crash(T603* C);
/*C_TARGET_MAPPER*/void r603compile_(T603* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r603visit_assignment_test(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603create_expression_support(T603* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r603visit_written_current(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603compile(T603* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r603visit_expression_with_comment(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_assertion(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_manifest_string(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603c2c_cast_op(T603* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r603visit_non_void_no_dispatch(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_manifest_tuple(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_closed_operand(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603cmp_user_expanded(T603* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/T2 r603pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r603visit_create_writable(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603standard_mapping_c_target(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_writable_attribute_name(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_internal_local2(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_address_of(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_fake_argument(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_e_void(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603compile_character(T3 a1);
/*C_TARGET_MAPPER*/void r603visit_loop_variant(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603cmp_expanded_with_void(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603visit_manifest_generic(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603compile_arg(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603cmp_reference(T603* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r603visit_built_in_eq_neq(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603cmp_basic_eiffel_expanded(T603* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r603_P_604_compile_feature_call(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_no_dispatch(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_assignment_test(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_manifest_string(T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_non_void_no_dispatch(T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_manifest_tuple(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_internal_local2(T603* C,T0* a1);
/*C_TARGET_MAPPER*/void r603_P_604_visit_manifest_generic(T603* C,T0* a1);
/*C_ARG_MAPPER*/void r605set_pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r605visit_void_call(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_create_expression(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605compile_feature_call(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_fake_tuple(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_e_false(T0* a1);
/*C_ARG_MAPPER*/void r605visit_call_infix_ge(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_implicit_cast(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_integer_constant(T0* a1);
/*C_ARG_MAPPER*/void r605not_yet_implemented(T605* C);
/*C_ARG_MAPPER*/T0* r605internal_c_local_tag(T0* a1);
/*C_ARG_MAPPER*/void r605visit_compound_expression(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605set_internal_c_local_tag(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605visit_argument_name2(T0* a1);
/*C_ARG_MAPPER*/void r605visit_dynamic_dispatch_temporary1_id(T605* C,T0* a1);
/*C_ARG_MAPPER*/T0* r605pending_c_function_counter_tag_key(void);
/*C_ARG_MAPPER*/void r605compile_agent_definition_call(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_old_manifest_array(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_call_infix_gt(T605* C,T0* a1);
/*C_ARG_MAPPER*/T0* r605pending_c_function_counter_tag_values(void);
/*C_ARG_MAPPER*/void r605compile_expression(T605* C,T0* a1);
/*C_ARG_MAPPER*/T0* r605internal_c_local_tag_key(void);
/*C_ARG_MAPPER*/void r605visit_call_infix_le(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_call_prefix_not(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_call_infix_lt(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_generator_generating_type(T0* a1);
/*C_ARG_MAPPER*/T0* r605cpp(void);
/*C_ARG_MAPPER*/void r605args_compile_to_c(T605* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605visit_real_constant(T0* a1);
/*C_ARG_MAPPER*/void r605visit_agent_creation(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r605visit_static_call_0_c(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_no_dispatch(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_character_constant(T0* a1);
/*C_ARG_MAPPER*/void r605visit_null_pointer(T0* a1);
/*C_ARG_MAPPER*/void r605visit_dynamic_dispatch_temporary1(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_dynamic_dispatch_temporary2(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_e_true(T0* a1);
/*C_ARG_MAPPER*/void r605compile_code(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605crash(T605* C);
/*C_ARG_MAPPER*/void r605compile_agent_void_call(T605* C,T0* a1,T332 a2,T0* a3);
/*C_ARG_MAPPER*/void r605visit_assignment_test(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605create_expression_support(T605* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605compile(T605* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605visit_expression_with_comment(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_abstract_current(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_assertion(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_manifest_string(T0* a1);
/*C_ARG_MAPPER*/void r605c2c_cast_op(T605* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r605visit_non_void_no_dispatch(T0* a1);
/*C_ARG_MAPPER*/void r605visit_manifest_tuple(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_closed_operand(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605open_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605visit_open_operand(T0* a1);
/*C_ARG_MAPPER*/void r605cmp_user_expanded(T605* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605visit_local_name2(T0* a1);
/*C_ARG_MAPPER*/void r605visit_e_old(T0* a1);
/*C_ARG_MAPPER*/T2 r605pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r605visit_create_writable(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_fake_target(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_writable_attribute_name(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_internal_local2(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_address_of(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_fake_argument(T0* a1);
/*C_ARG_MAPPER*/void r605visit_e_void(T0* a1);
/*C_ARG_MAPPER*/void r605compile_character(T3 a1);
/*C_ARG_MAPPER*/void r605visit_agent_expression(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_loop_variant(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605compile_precursor(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605cmp_expanded_with_void(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605visit_manifest_generic(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605compile_arg(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605cmp_reference(T605* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r605visit_built_in_eq_neq(T605* C,T0* a1);
/*C_ARG_MAPPER*/void r605closed_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r605visit_result(T0* a1);
/*C_ARG_MAPPER*/void r605cmp_basic_eiffel_expanded(T605* C,T0* a1,T0* a2,T0* a3);
typedef struct _se_agenT606f606l80c33 se_agenT606f606l80c33;
struct _se_agenT606f606l80c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT606f606l80c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT606f606l80c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT606f606l80c33(T0* closed_C);
void gc_mark_agenT606f606l80c33(se_agenT606f606l80c33*u);
typedef struct _se_agenT606f606l1075c35 se_agenT606f606l1075c35;
struct _se_agenT606f606l1075c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT606f606l1075c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT606f606l1075c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT606f606l1075c35(T0* closed_C);
void gc_mark_agenT606f606l1075c35(se_agenT606f606l1075c35*u);
typedef struct _se_agenT606f606l61c33 se_agenT606f606l61c33;
struct _se_agenT606f606l61c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT606f606l61c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT606f606l61c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT606f606l61c33(T0* closed_C);
void gc_mark_agenT606f606l61c33(se_agenT606f606l61c33*u);
typedef struct _se_agenT606f606l1050c37 se_agenT606f606l1050c37;
struct _se_agenT606f606l1050c37{Tid id;
int creation_mold_id;
void(*afp)(se_agenT606f606l1050c37*,T0*);
void(*gc_mark_agent_mold)(se_agenT606f606l1050c37*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT606f606l1050c37(T0* closed_C);
void gc_mark_agenT606f606l1050c37(se_agenT606f606l1050c37*u);
typedef struct _se_agenT606f606l1058c32 se_agenT606f606l1058c32;
struct _se_agenT606f606l1058c32{Tid id;
int creation_mold_id;
void(*afp)(se_agenT606f606l1058c32*,T0*);
void(*gc_mark_agent_mold)(se_agenT606f606l1058c32*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT606f606l1058c32(T0* closed_C);
void gc_mark_agenT606f606l1058c32(se_agenT606f606l1058c32*u);
typedef struct _se_agenT606f606l1005c35 se_agenT606f606l1005c35;
struct _se_agenT606f606l1005c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT606f606l1005c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT606f606l1005c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT606f606l1005c35(T0* closed_C);
void gc_mark_agenT606f606l1005c35(se_agenT606f606l1005c35*u);
/*C_CODE_COMPILER*/void r606compile_as_require_n(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_compound(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606not_yet_implemented(T606* C);
/*C_CODE_COMPILER*/void r606visit_check_compound(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_inspect_as_switch(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_e_void(T0* a1);
/*C_CODE_COMPILER*/void r606compile_code(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_old_manifest_array(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_class_invariant(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_inspect_statement(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_as_check_compound(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_feature_call(T606* C,T0* a1);
/*C_CODE_COMPILER*/T0* r606cpp(void);
/*C_CODE_COMPILER*/void r606visit_manifest_generic(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_run_time_error_instruction(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_assertion(T606* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606visit_fake_target(T0* a1);
/*C_CODE_COMPILER*/void r606visit_real_constant(T0* a1);
/*C_CODE_COMPILER*/void r606visit_no_dispatch(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_argument_name2(T0* a1);
/*C_CODE_COMPILER*/void r606compile_as_require_1(T606* C,T0* a1);
/*C_CODE_COMPILER*/T0* r606pending_c_function_counter_tag_values(void);
/*C_CODE_COMPILER*/void r606visit_address_of(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_create_writable(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_inspect_as_ifthenelse(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_assertion_list(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_retry_instruction(T0* a1);
/*C_CODE_COMPILER*/void r606visit_e_false(T0* a1);
/*C_CODE_COMPILER*/void r606visit_manifest_string(T0* a1);
/*C_CODE_COMPILER*/void r606visit_writable_attribute_name(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_c_inline(T0* a1);
/*C_CODE_COMPILER*/void r606visit_call_prefix_not(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_arg(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_assignment_test(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_implicit_cast(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_no_invariant_wrapper(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_internal_local2(T606* C,T0* a1);
/*C_CODE_COMPILER*/T2 r606pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r606open_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606visit_ensure_assertion(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_expression(T606* C,T0* a1);
/*C_CODE_COMPILER*/T0* r606pending_c_function_counter_tag_key(void);
/*C_CODE_COMPILER*/void r606visit_create_expression(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_e_true(T0* a1);
/*C_CODE_COMPILER*/void r606compile_precursor(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606set_internal_c_local_tag(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606unlock_internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/void r606visit_when_clause(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606cmp_expanded_with_void(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_sedb(T0* a1);
/*C_CODE_COMPILER*/void r606visit_built_in_eq_neq(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r606compile_assertion_as_require_n(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_when_clause_as_switch(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606put_start_position(T0* a1);
/*C_CODE_COMPILER*/void r606visit_result(T0* a1);
/*C_CODE_COMPILER*/void r606set_pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r606visit_dynamic_dispatch_temporary1(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606cmp_user_expanded(T606* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606visit_dynamic_dispatch_temporary2(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_manifest_tuple(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_character(T3 a1);
/*C_CODE_COMPILER*/void r606compile_as_require(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_fake_tuple(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_debug_compound(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606create_expression_support(T606* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606visit_character_constant(T0* a1);
/*C_CODE_COMPILER*/void r606visit_integer_constant(T0* a1);
/*C_CODE_COMPILER*/void r606visit_closed_operand(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_agent_instruction(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_abstract_current(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_void_call(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_generator_generating_type(T0* a1);
/*C_CODE_COMPILER*/void r606args_compile_to_c(T606* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606put_c_field_name(T0* a1);
/*C_CODE_COMPILER*/void r606visit_unused_expression(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_null_pointer(T0* a1);
/*C_CODE_COMPILER*/void r606visit_e_old(T0* a1);
/*C_CODE_COMPILER*/void r606visit_non_void_no_dispatch(T0* a1);
/*C_CODE_COMPILER*/void r606visit_agent_creation(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_dynamic_dispatch_temporary1_id(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606crash(T606* C);
/*C_CODE_COMPILER*/void r606visit_ifthenelse(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_create_instruction(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_assertion(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_local_name2(T0* a1);
/*C_CODE_COMPILER*/void r606compile_manifest_string_inspector(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_loop_instruction(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile(T606* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606visit_ifthen(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_agent_definition_call(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_require_assertion(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_call_infix_ge(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_compound_expression(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606compile_agent_void_call(T606* C,T0* a1,T332 a2,T0* a3);
/*C_CODE_COMPILER*/void r606visit_agent_expression(T606* C,T0* a1);
/*C_CODE_COMPILER*/T0* r606internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/T0* r606internal_c_local_tag_key(void);
/*C_CODE_COMPILER*/void r606compile_as_loop_invariant(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_call_infix_gt(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_open_operand(T0* a1);
/*C_CODE_COMPILER*/void r606closed_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r606visit_void_proc_call(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_call_infix_le(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_loop_variant(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606c2c_cast_op(T606* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r606visit_assignment_attempt(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_static_call_0_c(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_fake_argument(T0* a1);
/*C_CODE_COMPILER*/void r606cmp_reference(T606* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r606visit_call_infix_lt(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_expression_with_comment(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606visit_assignment(T606* C,T0* a1);
/*C_CODE_COMPILER*/void r606cmp_basic_eiffel_expanded(T606* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r606visit_raw_create_instruction(T606* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610set_pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_void_call(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_create_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_feature_call(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_fake_tuple(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_e_false(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_ge(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_implicit_cast(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_integer_constant(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r610internal_c_local_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_compound_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610set_internal_c_local_tag(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_argument_name2(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_dynamic_dispatch_temporary1_id(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r610pending_c_function_counter_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_plus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_agent_definition_call(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_old_manifest_array(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_gt(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610put_c_field_name(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r610pending_c_function_counter_tag_values(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r610internal_c_local_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_le(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_times(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_prefix_not(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_prefix_freeop(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_lt(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_generator_generating_type(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r610cpp(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_minus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610args_compile_to_c(T610* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_or(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_prefix_minus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_or_else(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_real_constant(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_agent_creation(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_prefix_plus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_int_rem(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_static_call_0_c(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_div(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_no_dispatch(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_character_constant(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_dynamic_dispatch_temporary1(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_null_pointer(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_dynamic_dispatch_temporary2(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_e_true(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_code(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610crash(T610* C);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_implies(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_agent_void_call(T610* C,T0* a1,T332 a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_(T610* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_assignment_test(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610create_expression_support(T610* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile(T610* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_expression_with_comment(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_abstract_current(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_assertion(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_function_call_0(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_manifest_string(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_function_call_1(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610c2c_cast_op(T610* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_non_void_no_dispatch(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_manifest_tuple(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_closed_operand(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_xor(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610open_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_open_operand(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_and_then(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610cmp_user_expanded(T610* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_local_name2(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_e_old(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T2 r610pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_int_div(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_create_writable(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_and(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_freeop(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_fake_target(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_writable_attribute_name(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_internal_local2(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_address_of(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_fake_argument(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_e_void(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_character(T3 a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_agent_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_loop_variant(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_precursor(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610cmp_expanded_with_void(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_manifest_generic(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610compile_arg(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610cmp_reference(T610* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_built_in_eq_neq(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_precursor_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610closed_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_result(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_function_call_n(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610cmp_basic_eiffel_expanded(T610* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610visit_call_infix_power(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_void_call(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_create_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_fake_tuple(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_e_false(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_ge(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_implicit_cast(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_integer_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_argument_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_dynamic_dispatch_temporary1_id(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_plus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_old_manifest_array(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_gt(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_le(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_times(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_prefix_not(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_prefix_freeop(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_lt(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_generator_generating_type(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_minus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_or(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_prefix_minus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_or_else(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_real_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_agent_creation(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_prefix_plus(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_int_rem(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_static_call_0_c(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_div(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_no_dispatch(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_character_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_dynamic_dispatch_temporary1(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_null_pointer(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_dynamic_dispatch_temporary2(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_e_true(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_implies(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_assignment_test(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_expression_with_comment(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_abstract_current(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_assertion(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_function_call_0(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_manifest_string(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_function_call_1(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_non_void_no_dispatch(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_manifest_tuple(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_closed_operand(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_xor(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_open_operand(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_and_then(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_local_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_e_old(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_int_div(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_create_writable(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_and(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_freeop(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_fake_target(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_writable_attribute_name(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_internal_local2(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_address_of(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_fake_argument(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_e_void(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_agent_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_loop_variant(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_manifest_generic(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_built_in_eq_neq(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_precursor_expression(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_result(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_function_call_n(T610* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r610_P_604_visit_call_infix_power(T610* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612not_yet_implemented(T612* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r612visit_native_built_in(T612* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r612system_tools(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r612extra_c_prototype_in_cpp_out_h_buffer(T332 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r612extra_c_prototype(T332 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_mapping_integer_function(T612* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r612visit_native_c_plus_plus(T612* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_deep_twin_body(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r612cpp(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r612mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_FUNCTION_MAPPER*/void r612visit_native_c(T612* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_modular_computation(T2 a1,T3 a2);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_field_access(T0* a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r612crash(T612* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r612visit_native_plug_in(T612* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612compile(T612* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_mapping_real(T612* C);
/*C_NATIVE_FUNCTION_MAPPER*/T6 r612expanded_initializer(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612is_deep_equal_c_code(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_mapping_natural_function(T612* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_mapping_native_array_function(T612* C);
extern T0*oBC28capacity_name;
extern int fBC28capacity_name;
/*C_NATIVE_FUNCTION_MAPPER*/T0* r612capacity_name(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r612c_mapping_standard_twin(T612* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r612wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613visit_native_c(T613* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613c_mapping_native_array_procedure(T613* C);
/*C_NATIVE_PROCEDURE_MAPPER*/T0* r613cpp(void);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613compile(T613* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613extra_c_prototype_in_cpp_out_h_buffer(T332 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613visit_native_built_in(T613* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613visit_native_c_plus_plus(T613* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613extra_c_prototype(T332 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613c_mapping_integer_procedure(T613* C);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613visit_native_plug_in(T613* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r613mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_C_DEFINITION*/void r614make(T614* C);
/*C_NATIVE_C_DEFINITION*/void r614c_plus_plus_procedure_definition(T614* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/T0* r614cpp(void);
/*C_NATIVE_C_DEFINITION*/void r614compile(T614* C,T0* a1,T0* a2);
/*C_NATIVE_C_DEFINITION*/void r614extra_c_prototype_in_cpp_out_h_buffer(T332 a1,T0* a2,T0* a3);
/*C_NATIVE_C_DEFINITION*/void r614visit_native_c_plus_plus(T614* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/void r614c_plus_plus_function_definition(T614* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r615put_c_field_name(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r615c_pointer_to_type(T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r615mapping_c_inside_introspect(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r615cpp(void);
/*C_INTROSPECTION_FUNCTION*/void r615compile(T615* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r615c_return_introspect(T0* a1,T0* a2,T0* a3);
/*C_INTROSPECTION_FUNCTION*/void r615visit_live_type(T615* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r615visit_run_feature_2(T615* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r615visit_run_feature_6(T615* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/T0* r616cpp(void);
/*C_INTROSPECTION_DISPLAY*/void r616compile(T616* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r616visit_live_type(T616* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r616visit_run_feature_2(T616* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r616visit_run_feature_6(T616* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_like_feature_type_mark(T617* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/T0* r617for(T617* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_like_current_type_mark(T617* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_like_argument_type_mark(T617* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_formal_generic_type_mark(T617* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617crash(T617* C);
/*C_TYPE_FOR_TARGET*/void r617visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r617visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_like_feature_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r619for(T619* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_like_current_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_like_argument_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_formal_generic_type_mark(T619* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619crash(T619* C);
/*C_TYPE_FOR_RESULT*/void r619visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r619for_external(T619* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r619visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_like_feature_type_mark(T618* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/T0* r618for(T618* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_like_current_type_mark(T618* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_like_argument_type_mark(T618* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_formal_generic_type_mark(T618* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618crash(T618* C);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r618visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_like_feature_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/T0* r620for(T620* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_like_current_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_like_argument_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_formal_generic_type_mark(T620* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620crash(T620* C);
/*C_TYPE_FOR_VA_ARG*/void r620visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r620visit_non_empty_tuple_type_mark(T0* a1);
/*C_NEED_STRUCT*/void r621visit_empty_tuple_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621visit_string_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621visit_like_feature_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/T6 r621for(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621visit_like_current_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621visit_like_argument_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621set_flag_for(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621visit_formal_generic_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621visit_array_type_mark(T621* C,T0* a1);
/*C_NEED_STRUCT*/void r621crash(T621* C);
/*C_NEED_STRUCT*/void r621visit_non_empty_tuple_type_mark(T621* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r622visit_native_c(T622* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r622for(T622* C,T0* a1,T0* a2,T0* a3);
/*C_NATIVE_NEED_WRAPPER*/T6 r622expanded_initializer(T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r622visit_native_built_in(T622* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r622visit_native_c_plus_plus(T622* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r622for_rf7(T622* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r622for_rf8(T622* C,T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r623set_tag(T0* a1,T0* a2);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623get_tag(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623is_enabled(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r623is_native_array_collector_enabled_(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623cpp(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623must_collect(T0* a1);
extern T0*oBC28mark_native_arrays_name;
extern int fBC28mark_native_arrays_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623mark_native_arrays_name(void);
extern T0*oBC623yes;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r623collect(T0* a1);
extern T0*oBC623tag_key;
extern int fBC623tag_key;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623tag_key(void);
extern T0*oBC623no;
extern T0*oBC28mark_item_name;
extern int fBC28mark_item_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r623mark_item_name(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r623is_native_array_collector_enabled(T0* a1);
typedef struct _se_agenT362f362l154c36 se_agenT362f362l154c36;
struct _se_agenT362f362l154c36{Tid id;
int creation_mold_id;
void(*afp)(se_agenT362f362l154c36*,T0*);
void(*gc_mark_agent_mold)(se_agenT362f362l154c36*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT362f362l154c36(T0* closed_C,T0* closed_a1);
void gc_mark_agenT362f362l154c36(se_agenT362f362l154c36*u);
typedef struct _se_agenT362f362l472c44 se_agenT362f362l472c44;
struct _se_agenT362f362l472c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT362f362l472c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT362f362l472c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT362f362l472c44(T0* closed_a1);
void gc_mark_agenT362f362l472c44(se_agenT362f362l472c44*u);
/*LIVE_TYPE*/T0* r362tag(T362* C,T0* a1);
/*LIVE_TYPE*/void r362create_function_register(T362* C,T0* a1);
/*LIVE_TYPE*/void r362sort_wam(T0* a1);
/*LIVE_TYPE*/T6 r362generating_type_used(T362* C);
/*LIVE_TYPE*/T0* r362at(T362* C,T0* a1);
/*LIVE_TYPE*/void r362collect(T362* C,T0* a1);
extern T0*oBC28deep_memcmp_name;
extern int fBC28deep_memcmp_name;
/*LIVE_TYPE*/T0* r362deep_memcmp_name(void);
/*LIVE_TYPE*/void r362collect_is_deep_equal(T362* C);
/*LIVE_TYPE*/T6 r362is_native_array(T362* C);
/*LIVE_TYPE*/void r362simplify(T362* C);
/*LIVE_TYPE*/T6 r362generator_used(T362* C);
/*LIVE_TYPE*/T0* r362dynamic_feature(T362* C,T0* a1);
/*LIVE_TYPE*/T6 r362no_dispatch_collect(T362* C,T0* a1);
/*LIVE_TYPE*/void r362propagate_features(T362* C);
/*LIVE_TYPE*/T2 r362feature_count(T362* C);
/*LIVE_TYPE*/void r362do_collect(T362* C);
/*LIVE_TYPE*/T6 r362side_effect_free_default_create(T362* C);
/*LIVE_TYPE*/T6 r362gt(T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r362get_memory_dispose(T362* C);
/*LIVE_TYPE*/void r362safety_check(T362* C);
/*LIVE_TYPE*/void r362make_run_features(T362* C);
/*LIVE_TYPE*/T6 r362_ix_60(T362* C,T0* a1);
/*LIVE_TYPE*/T6 r362is_empty_expanded(T362* C);
/*LIVE_TYPE*/T6 r362can_be_assigned_to(T362* C,T0* a1);
/*LIVE_TYPE*/void r362make(T362* C,T0* a1);
/*LIVE_TYPE*/void r362collect_sub_type(T362* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r362echo(void);
/*LIVE_TYPE*/T0* r362copy_run_feature(T362* C);
/*LIVE_TYPE*/void r362allow_collecting(T362* C,T0* a1);
/*LIVE_TYPE*/void r362adapt_run_features_and_class_invariant(T362* C);
extern T0*oBC28is_deep_equal_name;
extern int fBC28is_deep_equal_name;
/*LIVE_TYPE*/T0* r362is_deep_equal_name(void);
/*LIVE_TYPE*/void r362collect_deep_twin(T362* C);
/*LIVE_TYPE*/void r362set_at_run_time(T362* C);
/*LIVE_TYPE*/T0* r362precursor_run_feature(T362* C,T0* a1,T0* a2);
/*LIVE_TYPE*/void r362set_generator_used(T362* C);
/*LIVE_TYPE*/void r362forbid_collecting(T362* C,T0* a1);
extern T0*oBC28any_is_deep_equal_fs;
extern int fBC28any_is_deep_equal_fs;
/*LIVE_TYPE*/T0* r362any_is_deep_equal_fs(void);
/*LIVE_TYPE*/T6 r362is_reference(T362* C);
/*LIVE_TYPE*/T0* r362default_create_run_feature(T362* C);
extern T0*oBC28deep_twin_from_name;
extern int fBC28deep_twin_from_name;
/*LIVE_TYPE*/T0* r362deep_twin_from_name(void);
/*LIVE_TYPE*/void r362inline_dynamic_dispatch(T362* C,T0* a1);
extern T0*oBC362new_features;
extern int fBC362new_features;
/*LIVE_TYPE*/T0* r362new_features(void);
extern T0*oBC28any_deep_twin_fs;
extern int fBC28any_deep_twin_fs;
/*LIVE_TYPE*/T0* r362any_deep_twin_fs(void);
/*LIVE_TYPE*/T0* r362structure_signature(T362* C);
/*LIVE_TYPE*/T0* r362writable_attributes(T362* C);
/*LIVE_TYPE*/void r362set_tag(T362* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r362id_provider(void);
/*LIVE_TYPE*/void r362id_extra_information(T362* C,T0* a1);
extern T0*oBC28deep_twin_name;
extern int fBC28deep_twin_name;
/*LIVE_TYPE*/T0* r362deep_twin_name(void);
/*LIVE_TYPE*/void r362do_collect_is_deep_equal(T362* C);
/*LIVE_TYPE*/T0* r362live_type_extra_collectors(void);
/*LIVE_TYPE*/void r362accept(T362* C,T0* a1);
/*LIVE_TYPE*/void r362forget_previous_collect(T362* C);
/*LIVE_TYPE*/T6 r362is_tagged(T362* C);
/*LIVE_TYPE*/void r362merge_features_from(T362* C,T0* a1);
/*LIVE_TYPE*/T6 r362collected(T362* C,T0* a1);
/*CLASS_NAME*/T86*create86unknown_position(T0* a1);
/*CLASS_NAME*/T86*create86make(T0* a1,T332 a2);
/*CLASS_NAME*/T6 r86is_equal(T86* C,T0* a1);
/*CLASS_NAME*/void r86make(T86* C,T0* a1,T332 a2);
/*CLASS_NAME*/T0* r86try_class_text(T86* C);
/*CLASS_NAME*/void r86set_hashed_name(T86* C,T0* a1);
/*CLASS_NAME*/void r86unknown_position(T86* C,T0* a1);
/*CLASS_NAME*/T0* r86class_text(T86* C);
/*CLASS_NAME*/T0* r86twin(T86* C);
/*CLASS_NAME*/T6 r86get_export_permission_of(T86* C,T0* a1);
/*CLASS_NAME*/T2 r86tuple_count(T86* C);
/*CLASS_TEXT*/void r88id_extra_information(T88* C,T0* a1);
/*CLASS_TEXT*/void r88create_parent_lists_using(T88* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CLASS_TEXT*/T0* r88proper_name_get(T88* C,T0* a1);
/*CLASS_TEXT*/T0* r88declaration_type_of_like_current(T88* C);
extern T0*oBC88fn_buffer;
extern int fBC88fn_buffer;
/*CLASS_TEXT*/T0* r88fn_buffer(void);
/*CLASS_TEXT*/T6 r88has_creation_check(T88* C,T0* a1,T332 a2,T0* a3);
/*CLASS_TEXT*/T0* r88next_tuple(T88* C);
/*CLASS_TEXT*/void r88add_creation_clause(T88* C,T0* a1);
/*CLASS_TEXT*/void r88set_invariant(T88* C,T332 a1,T0* a2,T0* a3);
extern T0*oBC28default_create_name;
extern int fBC28default_create_name;
/*CLASS_TEXT*/T0* r88default_create_name(void);
/*CLASS_TEXT*/T6 r88all_check(T88* C);
/*CLASS_TEXT*/void r88set_is_expanded(T88* C);
/*CLASS_TEXT*/T0* r88default_root_procedure_name(T88* C);
/*CLASS_TEXT*/void r88fatal_error_when_no_creation_clause(T88* C);
/*CLASS_TEXT*/void r88fatal_undefine(T88* C,T0* a1);
/*CLASS_TEXT*/T0* r88proper_get(T88* C,T0* a1);
/*CLASS_TEXT*/T6 r88proper_has(T88* C,T0* a1);
/*CLASS_TEXT*/T0* r88declaration_type_of_like_current_(T88* C,T332 a1);
/*CLASS_TEXT*/T1 r88insert_inherit_test(T88* C,T0* a1);
/*CLASS_TEXT*/T6 r88require_check(T88* C);
/*CLASS_TEXT*/void r88set_is_deferred(T88* C);
/*CLASS_TEXT*/void r88set_tag(T88* C,T0* a1,T0* a2);
/*CLASS_TEXT*/void r88formal_generic_list_count_check(T88* C,T332 a1,T0* a2);
/*CLASS_TEXT*/T0* r88any_copy_feature(T88* C);
/*CLASS_TEXT*/T6 r88inherits_from(T88* C,T0* a1);
/*CLASS_TEXT*/T0* r88user_expanded_default_create_stamp(T88* C,T0* a1);
/*CLASS_TEXT*/void r88initialize_and_check_level_1(T88* C);
/*CLASS_TEXT*/T0* r88root_creation_search(T88* C,T0* a1);
/*CLASS_TEXT*/T6 r88loop_check(T88* C);
/*CLASS_TEXT*/T0* r88level_name(T2 a1);
/*CLASS_TEXT*/void r88finish_create(T88* C);
/*CLASS_TEXT*/void r88extra_expanded_check(T88* C,T0* a1);
/*CLASS_TEXT*/T6 r88ensure_check(T88* C);
/*CLASS_TEXT*/void r88add_feature_clause(T88* C,T0* a1);
/*CLASS_TEXT*/T6 r88obvious_resolve_static_binding(T88* C,T0* a1,T6 a2);
/*CLASS_TEXT*/void r88check_level_2(T88* C,T0* a1);
/*CLASS_TEXT*/T0* r88non_written(T88* C,T0* a1,T0* a2);
/*CLASS_TEXT*/T0* r88id_provider(void);
/*CLASS_TEXT*/void r88make(T88* C,T0* a1,T0* a2,T0* a3,T10 a4);
/*CLASS_TEXT*/T6 r88invariant_check(T88* C);
/*CLASS_TEXT*/void r88creation_list_check(T88* C,T0* a1);
/*CLASS_TEXT*/void r88add_index_clause(T88* C,T0* a1);
/*CLASS_TEXT*/void r88error_vtec1(T88* C);
extern T0*oBC28any_default_create_fs;
extern int fBC28any_default_create_fs;
/*CLASS_TEXT*/T0* r88any_default_create_fs(void);
/*CLASS_TEXT*/void r88obsolete_warning_check(T88* C,T332 a1);
/*CLASS_TEXT*/T0* r88tag(T88* C,T0* a1);
extern T0*oBC28any_default_rescue_fs;
extern int fBC28any_default_rescue_fs;
/*TYPE*/T0* r266any_default_rescue_fs(void);
/*TYPE*/T6 r266has_simple_feature_name(T266* C,T0* a1);
/*TYPE*/T0* r266name_from_string(T266* C,T0* a1);
/*TYPE*/T6 r266is_agent(T266* C);
/*TYPE*/T0* r266long_name(T266* C);
/*TYPE*/void r266add_parent(T266* C,T0* a1);
/*TYPE*/T0* r266expanded_default_create_stamp(T266* C);
/*TYPE*/void r266collect_features(T266* C);
/*TYPE*/void r266specialize_2(T266* C);
/*TYPE*/T6 r266is_native_array(T266* C);
/*TYPE*/T2 r266id(T266* C);
/*TYPE*/T6 r266is_pointer(T266* C);
/*TYPE*/void r266collect_default_rescue(T266* C,T0* a1);
/*TYPE*/T0* r266parent_edge_load(T266* C,T2 a1);
/*TYPE*/void r266do_collect(T266* C);
/*TYPE*/T2 r266parents_count(T266* C);
/*TYPE*/T1 r266insert_inherit_test(T266* C,T0* a1);
/*TYPE*/T0* r266has_only_one_conformant_parent(T266* C);
/*TYPE*/T6 r266is_real(T266* C);
/*TYPE*/T0* r266feature_stamp_of(T266* C,T0* a1);
/*TYPE*/T6 r266is_fixed_string(T266* C);
/*TYPE*/T6 r266is_empty_expanded(T266* C);
/*TYPE*/T0* r266find_manifest_expression_for(T266* C,T0* a1,T0* a2);
/*TYPE*/T0* r266feature_accumulator(void);
/*TYPE*/T6 r266can_be_assigned_to(T266* C,T0* a1);
/*TYPE*/T6 r266is_natural(T266* C);
/*TYPE*/T6 r266print_feature_hierarchy(T266* C,T0* a1,T329 a2,T6 a3);
/*TYPE*/void r266node_init(T266* C,T0* a1);
/*TYPE*/T6 r266is_integer(T266* C);
/*TYPE*/void r266make(T266* C,T0* a1);
/*TYPE*/T6 r266is_character(T266* C);
/*TYPE*/T6 r266is_expanded(T266* C);
/*TYPE*/T0* r266copy_stamp(T266* C);
/*TYPE*/T6 r266is_kernel_expanded(T266* C);
/*TYPE*/void r266adapt_class_invariant(T266* C);
/*TYPE*/void r266add_feature(T266* C,T0* a1,T0* a2);
/*TYPE*/T6 r266is_reference(T266* C);
/*TYPE*/void r266build_actual_invariant(T266* C);
/*TYPE*/void r266inline_dynamic_dispatch_for_class_invariant(T266* C,T0* a1);
/*TYPE*/void r266do_all_address_of(T266* C,T0* a1);
extern T0*oBC28default_rescue_name;
extern int fBC28default_rescue_name;
/*TYPE*/T0* r266default_rescue_name(void);
/*TYPE*/T6 r266inherits_from(T266* C,T0* a1);
/*TYPE*/void r266deconnect_current(T266* C);
/*TYPE*/T0* r266open_arguments(T266* C);
/*TYPE*/void r266collect_local_features(T266* C);
/*TYPE*/T0* r266writable_attributes(T266* C);
/*TYPE*/T0* r266find_anonymous_feature_for(T266* C,T0* a1,T0* a2);
/*TYPE*/T6 r266is_user_expanded(T266* C);
/*TYPE*/T2 r266collected_feature_count(T266* C);
/*TYPE*/T6 r266is_boolean(T266* C);
/*TYPE*/void r266collect_one_feature(T266* C,T0* a1,T2 a2);
/*TYPE*/void r266add_seeds(T266* C,T0* a1,T0* a2,T6 a3);
/*TYPE*/T6 r266direct_non_void_call_flag(T266* C);
/*TYPE*/T6 r266is_string(T266* C);
/*TYPE*/T6 r266is_tuple(T266* C);
/*TYPE*/void r266print_graph_cycle(T266* C,T0* a1);
/*TYPE*/T0* r266agent_result(T266* C);
/*TYPE*/T6 r266is_always_void(T266* C);
/*TYPE*/void r266inheritance_cycle_check(T266* C);
/*TYPE*/void r266address_of_register(T266* C,T0* a1);
/*TYPE*/void r266_P_267_add_parent(T266* C,T0* a1);
/*TYPE*/void r266_P_268_make(T266* C,T0* a1);
/*TYPE*/void r266_P_268_add_parent(T266* C,T0* a1);
/*FEATURE_STAMP*/void r80add_anonymous_feature(T80* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r80make(T80* C,T0* a1);
/*FEATURE_STAMP*/T0* r80simplify(T80* C,T0* a1);
/*FEATURE_STAMP*/void r80specialize_2(T80* C,T0* a1);
/*FEATURE_STAMP*/T6 r80has_run_feature_for(T80* C,T0* a1);
/*FEATURE_STAMP*/T0* r80run_feature_for(T80* C,T0* a1);
/*FEATURE_STAMP*/T6 r80has_anonymous_feature_for(T80* C,T0* a1);
/*FEATURE_STAMP*/void r80rename_notify(T80* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T0* r80specialize_thru(T80* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/void r80update_anonymous_feature(T80* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T6 r80has_type(T80* C,T0* a1);
/*FEATURE_STAMP*/void r80register_type(T80* C,T0* a1);
/*FEATURE_STAMP*/T0* r80resolve_static_binding_for_insert(T80* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r80fake_feature_call(T80* C,T332 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T6 r80print_feature_hierarchy(T80* C,T0* a1,T0* a2,T329 a3,T6 a4);
/*FEATURE_STAMP*/void r80rename_down_notify(T80* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T6 r80add_seeds(T80* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*FEATURE_STAMP*/T0* r80feature_accumulator(void);
/*FEATURE_STAMP*/T0* r80resolve_static_binding_for_inherit(T80* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r80make_run_feature(T80* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r80fake_effective_arg_list(T332 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T0* r80anonymous_feature_if_exist(T80* C,T0* a1);
/*FEATURE_STAMP*/T0* r80resolve_static_binding_for(T80* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r80anonymous_feature(T80* C,T0* a1);
/*STATUS*/void r525make(T525* C);
/*STATUS*/void r525info(T525* C);
/*STATUS*/void r525push_phase(T525* C,T2 a1);
/*STATUS*/void r525pop_phase(T525* C);
/*STATUS*/void r525set_generating(T525* C);
/*STATUS*/T0* r525echo(void);
/*STATUS*/void r525set_collecting(T525* C);
/*STATUS*/void r525set_inlining_dynamic_dispatch(T525* C);
/*STATUS*/void r525set_adapting(T525* C);
/*STATUS*/void r525set_safety_checking(T525* C);
/*STATUS*/void r525start_specializing(T525* C,T0* a1);
extern T0*oBC525internal_phase_stack;
extern int fBC525internal_phase_stack;
/*STATUS*/T0* r525internal_phase_stack(void);
/*STATUS*/void r525end_specializing(T525* C,T0* a1);
/*CODE_ACCUMULATOR*/void r322make(T322* C);
/*CODE_ACCUMULATOR*/void r322open_new_context(T322* C);
/*CODE_ACCUMULATOR*/T0* r322current_context_to_instruction(T322* C);
/*CODE_ACCUMULATOR*/T0* r322echo(void);
/*CODE_ACCUMULATOR*/void r322add_sedb(T322* C,T332 a1,T3 a2);
/*CODE_ACCUMULATOR*/T0* r322current_context_to_expression(T322* C);
/*CODE_ACCUMULATOR*/void r322echo_information(T322* C);
/*CODE_ACCUMULATOR*/T0* r322current_context_to_code(T322* C);
/*CODE_ACCUMULATOR*/void r322close_current_context(T322* C);
/*ASSIGNMENT_HANDLER*/void r99recompute_all_run_time_sets(void);
/*ASSIGNMENT_HANDLER*/T0* r99echo(void);
extern T0*oBC99external_types;
extern int fBC99external_types;
/*ASSIGNMENT_HANDLER*/T0* r99external_types(void);
/*ASSIGNMENT_HANDLER*/void r99from_external(T99* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r99implicit_cast(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r99graph_node_for(T0* a1);
/*ASSIGNMENT_HANDLER*/void r99collect_force(T99* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r99id_extra_information(T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r99from_external_(T99* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r99echo_information(void);
extern T0*oBC99graph_node_dictionary;
extern int fBC99graph_node_dictionary;
/*ASSIGNMENT_HANDLER*/T0* r99graph_node_dictionary(void);
/*ASSIGNMENT_HANDLER*/void r99reset(void);
/*ASSIGNMENT_HANDLER*/T0* r99implicit_cast_(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/void r99collect_normal(T99* C,T0* a1,T0* a2);
typedef struct _se_agenT97f97l169c20 se_agenT97f97l169c20;
struct _se_agenT97f97l169c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT97f97l169c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT97f97l169c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT97f97l169c20(void);
void gc_mark_agenT97f97l169c20(se_agenT97f97l169c20*u);
typedef struct _se_agenT97f97l159c20 se_agenT97f97l159c20;
struct _se_agenT97f97l159c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT97f97l159c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT97f97l159c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT97f97l159c20(void);
void gc_mark_agenT97f97l159c20(se_agenT97f97l159c20*u);
/*MANIFEST_STRING_POOL*/void r97collect_string(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r97se_ums(T97* C);
extern T0*oBC97agent_exists_in_collected_storage_id_set;
extern int fBC97agent_exists_in_collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r97agent_exists_in_collected_storage_id_set(void);
/*MANIFEST_STRING_POOL*/void r97make_unique(T0* a1,T0* a2);
extern T0*oBC28calloc_name;
extern int fBC28calloc_name;
/*MANIFEST_STRING_POOL*/T0* r97calloc_name(void);
extern T0*oBC28count_name;
extern int fBC28count_name;
/*MANIFEST_STRING_POOL*/T0* r97count_name(void);
/*MANIFEST_STRING_POOL*/T2 r97storage_alias_count(void);
extern T0*oBC28storage_lower_name;
extern int fBC28storage_lower_name;
/*MANIFEST_STRING_POOL*/T0* r97storage_lower_name(void);
/*MANIFEST_STRING_POOL*/T2 r97collected_once_count(void);
extern T0*oBC97agent_exists_in_collected_once_variables;
extern int fBC97agent_exists_in_collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r97agent_exists_in_collected_once_variables(void);
extern T0*oBC97collected_once_variables;
extern int fBC97collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r97collected_once_variables(void);
/*MANIFEST_STRING_POOL*/T0* r97collect(T97* C,T0* a1,T6 a2,T6 a3,T0* a4);
extern T0*oBC97storage_alias;
extern int fBC97storage_alias;
/*MANIFEST_STRING_POOL*/T0* r97storage_alias(void);
extern T0*oBC28manifest_initialize_name;
extern int fBC28manifest_initialize_name;
/*MANIFEST_STRING_POOL*/T0* r97manifest_initialize_name(void);
/*MANIFEST_STRING_POOL*/T0* r97capacity_name(void);
/*MANIFEST_STRING_POOL*/void r97reset(T97* C);
/*MANIFEST_STRING_POOL*/T6 r97exists_in_collected_storage_id_set(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r97storage_alias_item(T2 a1);
/*MANIFEST_STRING_POOL*/T6 r97exists_in_collected_once_variables(T0* a1);
extern T0*oBC28storage_name;
extern int fBC28storage_name;
/*MANIFEST_STRING_POOL*/T0* r97storage_name(void);
/*MANIFEST_STRING_POOL*/void r97append_once_variable_index(T0* a1,T2 a2);
/*MANIFEST_STRING_POOL*/T0* r97collected_once_item(T2 a1);
extern T0*oBC97collected_storage_id_set;
extern int fBC97collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r97collected_storage_id_set(void);
extern T0*oBC103collected_manifest_generic;
extern int fBC103collected_manifest_generic;
/*MANIFEST_GENERIC_POOL*/T0* r103collected_manifest_generic(void);
extern T0*oBC112function_list;
extern int fBC112function_list;
/*ONCE_ROUTINE_POOL*/T0* r112function_list(void);
/*ONCE_ROUTINE_POOL*/T6 r112is_precomputed(T0* a1);
extern T0*oBC28precomputable_routine_detector;
/*ONCE_ROUTINE_POOL*/void r112unique_result_in(T0* a1,T0* a2);
/*ONCE_ROUTINE_POOL*/T0* r112non_void_no_dispatch_for(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r112o_flag(T0* a1);
/*ONCE_ROUTINE_POOL*/void r112collect_precomputable_function(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r112precomputable_function(T0* a1,T0* a2,T0* a3);
extern T0*oBC112precomputable_function_list;
extern int fBC112precomputable_function_list;
/*ONCE_ROUTINE_POOL*/T0* r112precomputable_function_list(void);
/*ONCE_ROUTINE_POOL*/void r112do_all_precomputed_ordered(T0* a1);
extern T0*oBC112collected_precomputable_function;
extern int fBC112collected_precomputable_function;
/*ONCE_ROUTINE_POOL*/T0* r112collected_precomputable_function(void);
/*ONCE_ROUTINE_POOL*/void r112unique_id_in(T0* a1,T0* a2);
extern T0*oBC112procedure_list;
extern int fBC112procedure_list;
/*ONCE_ROUTINE_POOL*/T0* r112procedure_list(void);
extern T0*oBC111creation_collected_memory;
extern int fBC111creation_collected_memory;
/*AGENT_POOL*/T0* r111creation_collected_memory(void);
extern T0*oBC111launcher_collected_memory;
extern int fBC111launcher_collected_memory;
/*AGENT_POOL*/T0* r111launcher_collected_memory(void);
/*AGENT_POOL*/T0* r111agent_launcher_collect(T0* a1);
/*AGENT_POOL*/void r111notify_assignment_handler_with(T0* a1,T0* a2);
extern T0*oBC111agent_definition_set;
extern int fBC111agent_definition_set;
/*AGENT_POOL*/T0* r111agent_definition_set(void);
/*AGENT_POOL*/void r111agent_creation_collect(T111* C,T0* a1,T0* a2,T0* a3);
/*AGENT_POOL*/void r111reset(T111* C);
extern T0*oBC111launcher_memory;
extern int fBC111launcher_memory;
/*AGENT_POOL*/T0* r111launcher_memory(void);
extern T0*oBC114map;
extern int fBC114map;
/*ASSIGNMENT_TEST_POOL*/T0* r114map(void);
/*ASSIGNMENT_TEST_POOL*/T0* r114new_empty_set(void);
/*ASSIGNMENT_TEST_POOL*/void r114signature_add_last(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r114collect(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r114reset(void);
extern T0*oBC114free_set_list;
extern int fBC114free_set_list;
/*ASSIGNMENT_TEST_POOL*/T0* r114free_set_list(void);
/*ASSIGNMENT_TEST_POOL*/void r114function_name_in(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST_POOL*/T2 r114count(void);
/*ASSIGNMENT_TEST_POOL*/void r114do_all(T0* a1);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_attribute_generating_type(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_type_item_generator(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_object_attribute(T82* C);
/*INTROSPECTION_HANDLER*/T6 r82is_introspectable_static_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_typed_internals(T82* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_valid_generating_type_for_na_internals(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_set_object_attribute(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_object_attribute(T82* C);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_internals_handler(T82* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_na_internals_from_generating_type(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_type_can_be_assigned_to_item(T82* C);
/*INTROSPECTION_HANDLER*/T0* r82create_blank_internals_instruction_for(T82* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_type_item_is_expanded(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_attribute_count(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_type_item_generating_type(T82* C);
/*INTROSPECTION_HANDLER*/void r82collect_internals_from_generating_type(T82* C,T0* a1,T332 a2,T0* a3);
/*INTROSPECTION_HANDLER*/void r82collect_native_array_internals_from_generating_type(T82* C,T0* a1,T332 a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_type_attribute_count(T82* C);
/*INTROSPECTION_HANDLER*/void r82start_new_body_for(T82* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_make_blank(T82* C);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_to_internals(T82* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r82specialize_body_for_any_to_internals(T82* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/T0* r82internals_of(T82* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r82arguments(T82* C);
/*INTROSPECTION_HANDLER*/T0* r82specialize_body_for_internals_handler(T82* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_attribute_is_expanded(T82* C);
/*INTROSPECTION_HANDLER*/T0* r82specialize_body_for_native_array_internals(T82* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_attribute_generator(T82* C);
/*INTROSPECTION_HANDLER*/T6 r82is_introspectable_dynamic_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r82simplify_and_wrap(T82* C,T0* a1);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_native_array_internals(T82* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_set_object_attribute(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_attribute_count(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_is_equal(T82* C);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_internals_from_generating_type(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_can_be_assigned_to_attribute(T82* C);
/*INTROSPECTION_HANDLER*/void r82collect_internals_handler(T82* C);
/*INTROSPECTION_HANDLER*/T6 r82is_internals_from_generating_type_used(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_generator(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_na_make_blank(T82* C);
/*INTROSPECTION_HANDLER*/void r82collect_internals_handler_for(T82* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r82specialize_body_for_typed_internals(T82* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_attribute_name(T82* C);
/*INTROSPECTION_HANDLER*/void r82set_and_specialize_body(T82* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r82wrap(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r82finalized_body_for_valid_generating_type_for_internals(T82* C);
/*INTROSPECTION_HANDLER*/T6 r82create_blank_internals_used_by(T82* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_is_expanded(T82* C);
/*INTROSPECTION_HANDLER*/T332 r82start_position(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_object_as_pointer(T82* C);
/*INTROSPECTION_HANDLER*/void r82specialize_body_for_type_generating_type(T82* C);
/*INTROSPECTION_HANDLER*/T6 r82is_introspectable_attribute_type(T82* C,T0* a1);
/*STRING_TYPE_MARK*/T432*create432make(T332 a1);
/*STRING_TYPE_MARK*/T6 r432is_tuple(void);
/*STRING_TYPE_MARK*/void r432make(T432* C,T332 a1);
/*STRING_TYPE_MARK*/T0* r432generic_list(void);
/*STRING_TYPE_MARK*/T6 r432is_character(void);
/*STRING_TYPE_MARK*/T0* r432written_mark(void);
extern T0*oBC432written_name;
extern int fBC432written_name;
/*STRING_TYPE_MARK*/T0* r432written_name(void);
/*STRING_TYPE_MARK*/T6 r432is_native_array(void);
/*STRING_TYPE_MARK*/T0* r432at(T432* C,T332 a1);
extern T0*oBC432long_name;
extern int fBC432long_name;
/*STRING_TYPE_MARK*/T0* r432long_name(void);
/*STRING_TYPE_MARK*/T0* r432specialize_thru(T432* C,T0* a1,T0* a2,T0* a3);
/*STRING_TYPE_MARK*/T6 r432is_boolean(void);
/*STRING_TYPE_MARK*/T0* r432typed_internals_type_mark(T432* C,T332 a1);
/*STRING_TYPE_MARK*/T0* r432to_static(T432* C,T0* a1);
/*STRING_TYPE_MARK*/void r432accept(T432* C,T0* a1);
/*STRING_TYPE_MARK*/T6 r432same_signature_type(T432* C,T0* a1,T0* a2);
/*STRING_TYPE_MARK*/T0* r432type(void);
/*STRING_TYPE_MARK*/T0* r432signature_resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r432is_natural(void);
/*STRING_TYPE_MARK*/T0* r432default_expression(T332 a1);
/*STRING_TYPE_MARK*/void r432id_extra_information(T0* a1);
/*STRING_TYPE_MARK*/T0* r432declaration_type(T432* C);
/*STRING_TYPE_MARK*/T6 r432is_pointer(void);
/*STRING_TYPE_MARK*/T332 r432start_position(T432* C);
/*STRING_TYPE_MARK*/T6 r432is_kernel_expanded(void);
/*STRING_TYPE_MARK*/void r432set_start_position(T432* C,T332 a1);
/*STRING_TYPE_MARK*/T6 r432is_fixed_string(void);
/*STRING_TYPE_MARK*/T0* r432class_text(T432* C);
/*STRING_TYPE_MARK*/T0* r432twin(T432* C);
/*STRING_TYPE_MARK*/T6 r432is_real(void);
/*STRING_TYPE_MARK*/T6 r432is_integer(void);
/*STRING_TYPE_MARK*/void r432pretty_in(T0* a1);
/*STRING_TYPE_MARK*/T0* r432resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r432is_agent(void);
/*FEATURE_ACCUMULATOR*/void r107make(T107* C);
/*FEATURE_ACCUMULATOR*/void r107finalize(T107* C);
/*FEATURE_ACCUMULATOR*/void r107finish_insert_seeds(T107* C);
/*FEATURE_ACCUMULATOR*/T0* r107echo(void);
/*FEATURE_ACCUMULATOR*/void r107do_pending_types(T107* C);
/*FEATURE_ACCUMULATOR*/T1 r107next_state(T107* C,T1 a1,T1 a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_ACCUMULATOR*/void r107add_local_definition(T107* C,T0* a1);
extern T0*oBC107transitions;
extern int fBC107transitions;
/*FEATURE_ACCUMULATOR*/T0* r107transitions(void);
/*FEATURE_ACCUMULATOR*/T6 r107is_known(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r107new_incomplete_type(T107* C);
/*FEATURE_ACCUMULATOR*/void r107start(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r107anonymous_feature_for(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r107feature_stamp_of(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r107echo_information(T107* C);
/*FEATURE_ACCUMULATOR*/void r107register(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r107new_feature(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r107to_feature(T107* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r107add_parent_definition(T107* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_ACCUMULATOR*/void r107check_and_merge_seeds(T107* C);
/*FEATURE_ACCUMULATOR*/T1 r107transition_index(T107* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_ACCUMULATOR*/T0* r107find_type_for(T107* C,T0* a1);
/*ANY_TYPE_MARK*/T427*create427make(T332 a1);
/*ANY_TYPE_MARK*/T6 r427is_tuple(void);
/*ANY_TYPE_MARK*/void r427make(T427* C,T332 a1);
/*ANY_TYPE_MARK*/T0* r427generic_list(void);
/*ANY_TYPE_MARK*/T6 r427is_character(void);
/*ANY_TYPE_MARK*/T0* r427written_mark(T427* C);
/*ANY_TYPE_MARK*/T0* r427written_name(T427* C);
/*ANY_TYPE_MARK*/T6 r427is_native_array(void);
/*ANY_TYPE_MARK*/T0* r427at(T427* C,T332 a1);
extern T0*oBC427long_name;
extern int fBC427long_name;
/*ANY_TYPE_MARK*/T0* r427long_name(void);
/*ANY_TYPE_MARK*/T0* r427specialize_thru(T427* C,T0* a1,T0* a2,T0* a3);
/*ANY_TYPE_MARK*/T6 r427is_boolean(void);
/*ANY_TYPE_MARK*/T0* r427typed_internals_type_mark(T427* C,T332 a1);
/*ANY_TYPE_MARK*/T0* r427to_static(T427* C,T0* a1);
/*ANY_TYPE_MARK*/T2 r427id(T427* C);
/*ANY_TYPE_MARK*/void r427accept(T427* C,T0* a1);
/*ANY_TYPE_MARK*/T6 r427same_signature_type(T427* C,T0* a1,T0* a2);
/*ANY_TYPE_MARK*/T0* r427type(void);
/*ANY_TYPE_MARK*/T0* r427signature_resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r427is_natural(void);
/*ANY_TYPE_MARK*/T0* r427default_expression(T332 a1);
/*ANY_TYPE_MARK*/void r427id_extra_information(T0* a1);
/*ANY_TYPE_MARK*/T0* r427declaration_type(T427* C);
/*ANY_TYPE_MARK*/T6 r427is_pointer(void);
/*ANY_TYPE_MARK*/T332 r427start_position(T427* C);
/*ANY_TYPE_MARK*/T6 r427is_kernel_expanded(void);
/*ANY_TYPE_MARK*/void r427set_start_position(T427* C,T332 a1);
/*ANY_TYPE_MARK*/T6 r427is_fixed_string(T427* C);
/*ANY_TYPE_MARK*/T0* r427class_text(T427* C);
/*ANY_TYPE_MARK*/T0* r427twin(T427* C);
/*ANY_TYPE_MARK*/T6 r427is_real(void);
/*ANY_TYPE_MARK*/T6 r427is_integer(void);
/*ANY_TYPE_MARK*/void r427pretty_in(T427* C,T0* a1);
/*ANY_TYPE_MARK*/T0* r427resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r427is_agent(void);
extern T0*oBC683integer_alias;
extern int fBC683integer_alias;
/*TYPE_ALIASING*/T0* r683integer_alias(void);
extern T0*oBC683real_alias;
extern int fBC683real_alias;
/*TYPE_ALIASING*/T0* r683real_alias(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_like_feature_type_mark(T778* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_like_current_type_mark(T778* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_like_argument_type_mark(T778* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_agent_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/T0* r778cpp(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_formal_generic_type_mark(T778* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778compile(T778* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778crash(T778* C);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r778visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780make(T780* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_like_feature_type_mark(T780* C,T0* a1);
extern T0*oBC28from_pointer_name;
extern int fBC28from_pointer_name;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r780from_pointer_name(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780gc_align_mark_fixed_size(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_like_current_type_mark(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780mark_attribute(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780gc_expanded(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_like_argument_type_mark(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_user_generic_type_mark(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780gc_mark_fixed_size(T780* C,T0* a1,T6 a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780gc_set_fsoh_marked(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r780cpp(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_formal_generic_type_mark(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780compile(T780* C,T0* a1);
extern int fBC780generate_once_gc_update_weak_ref_item_polymorph;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780generate_once_gc_update_weak_ref_item_polymorph(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780native_array_type_in(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780gc_reference(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T6 r780insert_native_array_collector_flag(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780gc_mark_na(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780crash(T780* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r780visit_class_type_mark(T780* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_like_feature_type_mark(T781* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_like_current_type_mark(T781* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_like_argument_type_mark(T781* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/T0* r781cpp(void);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_formal_generic_type_mark(T781* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781compile(T781* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781crash(T781* C);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r781visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_like_feature_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_like_current_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_like_argument_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/T0* r782cpp(void);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_formal_generic_type_mark(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782compile(T782* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782crash(T782* C);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r782visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_empty_tuple_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_string_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_like_feature_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/T6 r783for(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_native_array_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_like_current_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_like_argument_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_user_generic_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_any_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_agent_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_formal_generic_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783gc_mark_to_follow(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_array_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783crash(T783* C);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_class_type_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783need_gc_mark(T783* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r783visit_non_empty_tuple_type_mark(T783* C,T0* a1);
/*CECIL_FILE*/void r321parse(T321* C);
/*CECIL_FILE*/void r321make(T321* C,T0* a1);
/*CECIL_FILE*/T0* r321eiffel_parser(void);
/*CECIL_FILE*/T0* r321echo(void);
/*CECIL_FILE*/void r321collect(T321* C,T0* a1);
/*CECIL_FILE*/void r321inline_dynamic_dispatch(T321* C,T0* a1,T0* a2);
/*SERC_CHAIN*/void r766make(T766* C);
/*SERC_CHAIN*/T0* r766sys(T766* C);
/*SERC_CHAIN*/void r766loadpaths_in(T766* C,T0* a1);
/*SERC_CHAIN*/T0* r766flavor(T766* C);
/*SERC_CHAIN*/T0* r766environment(T766* C,T0* a1);
/*SERC_CHAIN*/T0* r766short(T766* C);
/*SERC_CHAIN*/T0* r766bin(T766* C);
/*SERC_CHAIN*/T0* r766c_mode(T766* C,T0* a1);
/*SERC_CHAIN*/T0* r766os(T766* C);
/*SERC*/void r767make(T767* C);
/*SERC*/void r767add_all(T767* C,T0* a1,T0* a2,T0* a3);
/*SERC*/T0* r767echo(void);
/*SERC*/void r767loadpaths_in(T767* C,T0* a1);
/*SERC*/T0* r767parser_buffer(void);
/*STRING_RECYCLING_POOL*/void r52make(T52* C);
/*STRING_RECYCLING_POOL*/void r52recycle(T52* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r52new_twin(T52* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r52best_fit(T52* C,T2 a1);
/*FIXED_STRING*/T3 r283first(T283* C);
/*FIXED_STRING*/void r283unlock_tagged_out(void);
/*FIXED_STRING*/T0* r283tagged_out_memory_pool(void);
/*FIXED_STRING*/void r283fill_tagged_out_memory(T283* C);
/*FIXED_STRING*/void r283lock_tagged_out(void);
extern T0*oBC283weakrefs;
extern int fBC283weakrefs;
/*FIXED_STRING*/T0* r283weakrefs(void);
/*FIXED_STRING*/void r283make_from_string(T283* C,T0* a1);
/*FIXED_STRING*/void r283ensure_capacity(T283* C,T2 a1);
/*FIXED_STRING*/T0* r283new_holders(T283* C);
/*FIXED_STRING*/T6 r283is_shared(T283* C);
/*FIXED_STRING*/void r283unshare(T283* C);
/*FIXED_STRING*/T8 r283to_external(T283* C);
/*FIXED_STRING*/T2 r283computed_hash_code(T283* C);
/*FIXED_STRING*/T3 r283item(T283* C,T2 a1);
/*FIXED_STRING*/T6 r283_ix_60(T283* C,T0* a1);
/*FIXED_STRING*/T6 r283same_as(T283* C,T0* a1);
/*FIXED_STRING*/T0* r283tagged_out_memory(void);
extern T0*oBC283holders_memory;
extern int fBC283holders_memory;
/*FIXED_STRING*/T0* r283holders_memory(void);
/*FIXED_STRING*/void r283do_intern(T283* C,T0* a1);
/*FIXED_STRING*/T0* r283out(T283* C);
/*FIXED_STRING*/void r283copy_slice_to_native(T283* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*FIXED_STRING*/void r283set_storage_signature(T283* C);
/*FIXED_STRING*/T0* r283tagged_out_memories(void);
/*FIXED_STRING*/void r283print_on(T283* C,T0* a1);
/*FIXED_STRING*/T6 r283has(T283* C,T3 a1);
/*FEATURE_NAME*/T270*create270simple_feature_name(T0* a1,T332 a2);
/*FEATURE_NAME*/T6 r270is_equal(T270* C,T0* a1);
/*FEATURE_NAME*/T6 r270is_infix_name(T270* C);
/*FEATURE_NAME*/void r270pretty(T270* C,T2 a1);
/*FEATURE_NAME*/void r270ordinary_name(T270* C,T0* a1,T332 a2);
/*FEATURE_NAME*/T6 r270is_frozen(T270* C);
/*FEATURE_NAME*/void r270special_pretty_print(T270* C,T6 a1);
/*FEATURE_NAME*/void r270basic_create_1(T270* C,T2 a1,T0* a2,T332 a3);
/*FEATURE_NAME*/void r270basic_create_0(T270* C,T2 a1,T0* a2,T332 a3);
/*FEATURE_NAME*/T0* r270infix_or_prefix(T270* C);
/*FEATURE_NAME*/void r270unknown_position(T270* C,T0* a1);
/*FEATURE_NAME*/void r270infix_name(T270* C,T0* a1,T332 a2);
/*FEATURE_NAME*/void r270declaration_in(T270* C,T0* a1);
/*FEATURE_NAME*/T0* r270twin(T270* C);
/*FEATURE_NAME*/T6 r270is_simple_feature_name(T270* C);
/*FEATURE_NAME*/void r270complete_name_in(T270* C,T0* a1);
/*FEATURE_NAME*/void r270simple_feature_name(T270* C,T0* a1,T332 a2);
/*FEATURE_NAME*/void r270set_is_frozen(T270* C);
/*FEATURE_NAME*/T2 r270hash_code(T270* C);
/*FEATURE_NAME*/void r270prefix_name(T270* C,T0* a1,T332 a2);
/*FEATURE_NAME*/void r270mapping_c_in(T270* C,T0* a1);
/*FEATURE_NAME*/T6 r270is_prefix_name(T270* C);
/*INI_PARSER*/void r95goto_next_line(T95* C);
/*INI_PARSER*/T6 r95section_has(T95* C,T0* a1,T0* a2);
/*INI_PARSER*/void r95serc(T95* C);
/*INI_PARSER*/T0* r95lcs(void);
/*INI_PARSER*/T0* r95buffer(void);
/*INI_PARSER*/T6 r95a_section(T95* C);
extern T0*oBC28strings;
extern int fBC28strings;
/*INI_PARSER*/T0* r95strings(void);
/*INI_PARSER*/T0* r95unicode_string_buffer(void);
/*INI_PARSER*/T6 r95is_install(void);
/*INI_PARSER*/void r95a_keys(T95* C);
/*INI_PARSER*/T0* r95parser_buffer(void);
/*INI_PARSER*/void r95a_sections(T95* C);
/*INI_PARSER*/void r95go_back_at(T95* C,T2 a1,T2 a2);
/*INI_PARSER*/T6 r95skip1(T95* C,T3 a1);
/*INI_PARSER*/T6 r95a_string(T95* C);
/*INI_PARSER*/T332 r95current_position(T95* C);
/*INI_PARSER*/T6 r95a_keyword(T95* C,T0* a1);
/*INI_PARSER*/T0* r95echo(void);
/*INI_PARSER*/T6 r95a_identifier(T95* C);
/*INI_PARSER*/T6 r95a_manifest_string(T95* C,T6 a1);
/*INI_PARSER*/void r95fatal_error_except_for_install(T95* C,T0* a1);
/*INI_PARSER*/void r95a_inifile(T95* C);
/*INI_PARSER*/void r95may_expand_var_into(T95* C,T0* a1);
/*INI_PARSER*/T6 r95has(T95* C,T0* a1);
/*INI_PARSER*/void r95skip_comments(T95* C);
/*INI_PARSER*/void r95plugin(T95* C);
/*INI_PARSER*/T0* r95sections_iterator(T95* C);
/*INI_PARSER*/T0* r95section_item(T95* C,T0* a1,T0* a2);
/*INI_PARSER*/void r95next_char(T95* C);
/*INI_PARSER*/T6 r95a_key(T95* C);
/*INI_PARSER*/void r95update_last_manifest_string(T95* C,T332 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*INI_PARSER*/T0* r95section_key_iterator(T95* C,T0* a1);
/*INI_PARSER*/void r95set_value(T95* C,T0* a1);
/*INI_PARSER*/void r95may_expand_var(T95* C);
/*INI_PARSER*/T0* r95key_iterator(T95* C);
/*INI_PARSER*/T0* r95last_value(T95* C);
/*INI_PARSER*/T6 r95skip_spaces(T95* C);
/*INI_PARSER*/T332 r95pos(T95* C,T2 a1,T2 a2);
/*CLASSES_TREE*/T0* r738system_cluster(T738* C,T0* a1,T0* a2);
/*CLASSES_TREE*/void r738make(T738* C,T2 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC738system_clusters;
extern int fBC738system_clusters;
/*CLASSES_TREE*/T0* r738system_clusters(void);
/*CLASSES_TREE*/void r738for_all(T738* C,T0* a1);
/*CLASSES_TREE*/T2 r738cluster_count(T738* C);
/*CLASSES_TREE*/T0* r738echo(void);
/*CLASSES_TREE*/T0* r738cluster_named(T738* C,T0* a1);
/*CLASSES_TREE*/void r738show_name(T738* C);
/*CLASSES_TREE*/T0* r738classes_path_to_system_path(T738* C,T0* a1);
/*CLASSES_TREE*/void r738get_started(T738* C,T2 a1);
/*CLASSES_TREE*/void r738clusters_of(T738* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r738view_in(T738* C,T0* a1);
/*CLASSES_TREE*/T0* r738system_notation(T738* C);
/*CLASSES_TREE*/T2 r738loaded_class_count(T738* C);
/*CLASSES_TREE*/void r738show_tabs(T2 a1);
/*CLASSES_TREE*/T0* r738to_string(T738* C);
/*CLASSES_TREE*/void r738parse_include(T738* C);
/*CLASSES_TREE*/T0* r738find_physical_cluster(T738* C,T0* a1);
/*CLASSES_TREE*/void r738show(T738* C,T2 a1);
/*CLASSES_TREE*/void r738_P_669_for_all(T738* C,T0* a1);
/*CLASSES_TREE*/T2 r738_P_669_cluster_count(T738* C);
/*CLASSES_TREE*/T0* r738_P_669_cluster_named(T738* C,T0* a1);
/*CLASSES_TREE*/void r738_P_669_get_started(T738* C,T2 a1);
/*CLASSES_TREE*/void r738_P_669_clusters_of(T738* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r738_P_669_view_in(T738* C,T0* a1);
/*CLASSES_TREE*/T2 r738_P_669_loaded_class_count(T738* C);
/*CLASSES_TREE*/void r738_P_669_parse_include(T738* C);
/*CLASSES_TREE*/T0* r738_P_669_find_physical_cluster(T738* C,T0* a1);
/*LOADPATH*/void r785make(T785* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
/*LOADPATH*/T0* r785connect(T785* C,T0* a1,T0* a2);
/*LOADPATH*/void r785add_classes(T785* C,T0* a1);
/*LOADPATH*/void r785for_all(T785* C,T0* a1);
/*LOADPATH*/T2 r785cluster_count(T785* C);
/*LOADPATH*/void r785show_cycle(T785* C,T0* a1);
/*LOADPATH*/T0* r785echo(void);
/*LOADPATH*/void r785error_cycle(T785* C);
/*LOADPATH*/T0* r785cluster_named(T785* C,T0* a1);
extern T0*oBC785connected;
extern int fBC785connected;
/*LOADPATH*/T0* r785connected(void);
/*LOADPATH*/T0* r785strings(void);
/*LOADPATH*/void r785create_subtree(T785* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*LOADPATH*/void r785show_name(T785* C);
/*LOADPATH*/T0* r785classes_path_to_system_path(T785* C,T0* a1);
/*LOADPATH*/void r785get_started(T785* C,T2 a1);
/*LOADPATH*/T0* r785system_path_to_classes_path(T785* C,T0* a1);
/*LOADPATH*/void r785clusters_of(T785* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*LOADPATH*/void r785view_in(T785* C,T0* a1);
/*LOADPATH*/T0* r785system_tools(void);
/*LOADPATH*/T0* r785system_notation(T785* C);
/*LOADPATH*/T2 r785loaded_class_count(T785* C);
/*LOADPATH*/void r785show_tabs(T2 a1);
extern T0*oBC785files;
extern int fBC785files;
/*LOADPATH*/T0* r785files(void);
/*LOADPATH*/T0* r785to_string(T785* C);
/*LOADPATH*/void r785parse_include(T785* C);
/*LOADPATH*/T0* r785find_physical_cluster(T785* C,T0* a1);
/*LOADPATH*/void r785show(T785* C,T2 a1);
/*LOADPATH*/T0* r785new_path(T0* a1,T0* a2,T0* a3);
/*LOADPATH*/T0* r785new_name(T785* C,T0* a1,T2 a2);
/*CLUSTER_POOL_DATA*/void r740make(T740* C,T0* a1);
/*CLUSTER_POOL_DATA*/void r740add_cluster_class(T740* C,T0* a1,T0* a2);
/*CLUSTER_POOL_DATA*/T0* r740cluster_class(T740* C,T0* a1);
extern T0*oBC740hash_tuple;
extern int fBC740hash_tuple;
/*CLUSTER_POOL_DATA*/T0* r740hash_tuple(void);
/*CLUSTER_POOL_DATA*/T2 r740class_count(T740* C);
/*CLUSTER_POOL_DATA*/T6 r740has(T740* C,T0* a1);
/*MICROSECOND_TIME*/T11 r465timestamp(T465* C);
/*MICROSECOND_TIME*/void r465update(T465* C);
/*FEATURE_TEXT*/void r443character_constant(T443* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r443string_constant(T443* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r443once_function(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r443set_ensure_assertion(T443* C,T0* a1);
/*FEATURE_TEXT*/void r443set_rescue_compound(T443* C,T0* a1);
/*FEATURE_TEXT*/void r443real_constant(T443* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r443inline_agent_pretty(T443* C,T2 a1);
/*FEATURE_TEXT*/void r443non_written_one(T443* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r443boolean_constant(T443* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r443set_header_comment(T443* C,T0* a1);
/*FEATURE_TEXT*/void r443deferred_function(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*FEATURE_TEXT*/void r443external_procedure(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*FEATURE_TEXT*/void r443add_into(T443* C,T0* a1,T0* a2);
/*FEATURE_TEXT*/void r443e_procedure(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*FEATURE_TEXT*/void r443integer_constant(T443* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r443external_function(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r443writable_attribute(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_TEXT*/void r443e_function(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r443deferred_procedure(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_TEXT*/void r443once_procedure(T443* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*FEATURE_TEXT*/void r443unique_constant(T443* C,T0* a1,T0* a2);
/*INDEX_CLAUSE*/void r420add_last(T420* C,T0* a1);
/*INDEX_CLAUSE*/void r420with_tag(T420* C,T0* a1);
/*INDEX_CLAUSE*/void r420without_tag(T420* C,T0* a1);
/*MANIFEST_STRING*/T6 r374is_equal(T374* C,T0* a1);
/*MANIFEST_STRING*/T0* r374to_expression(T374* C);
/*MANIFEST_STRING*/void r374make(T374* C,T332 a1,T6 a2,T6 a3,T0* a4);
/*MANIFEST_STRING*/void r374pretty(T374* C,T2 a1);
/*MANIFEST_STRING*/T0* r374specialize_2(T374* C,T0* a1);
/*MANIFEST_STRING*/T0* r374static_simplify(T374* C);
/*MANIFEST_STRING*/void r374inline_dynamic_dispatch_(T374* C,T0* a1,T0* a2);
/*MANIFEST_STRING*/T6 r374is_static(T374* C);
/*MANIFEST_STRING*/void r374storage_alias_of(T374* C,T0* a1);
/*MANIFEST_STRING*/T6 r374is_stored_in_some_local_variable(void);
/*MANIFEST_STRING*/void r374accept(T374* C,T0* a1);
/*MANIFEST_STRING*/T0* r374declaration_type(T374* C);
/*MANIFEST_STRING*/T0* r374collect(T374* C,T0* a1);
/*MANIFEST_STRING*/void r374pretty_target(T374* C,T2 a1);
/*MANIFEST_STRING*/void r374from_identifier(T374* C,T332 a1,T0* a2);
/*MANIFEST_STRING*/void r374pretty_without_once(T374* C,T2 a1);
/*MANIFEST_STRING*/T0* r374twin(T374* C);
/*MANIFEST_STRING*/T0* r374written_declaration_type_mark(void);
/*MANIFEST_STRING*/T6 r374use_current(T0* a1);
/*MANIFEST_STRING*/void r374bracketed_pretty(T374* C,T2 a1);
/*MANIFEST_STRING*/T0* r374non_void_no_dispatch_type(T374* C,T0* a1);
/*MANIFEST_STRING*/T6 r374side_effect_free(T374* C,T0* a1);
/*MANIFEST_STRING*/T2 r374hash_code(T374* C);
/*MANIFEST_STRING*/T2 r374count(T374* C);
/*MANIFEST_STRING*/T0* r374resolve_in(T374* C,T0* a1);
/*MANIFEST_STRING*/T0* r374to_instruction(T374* C);
/*FORMAL_GENERIC_LIST*/void r426make(T426* C,T332 a1);
/*FORMAL_GENERIC_LIST*/void r426generic_formal_arguments_check(T426* C);
/*FORMAL_GENERIC_LIST*/void r426constraint_genericity_check(T426* C,T0* a1,T0* a2,T332 a3);
/*FORMAL_GENERIC_LIST*/void r426add_last(T426* C,T0* a1);
/*FORMAL_GENERIC_LIST*/T2 r426count(T426* C);
/*FORMAL_GENERIC_ARG*/void r435substitute(T0* a1,T0* a2,T2 a3,T0* a4);
/*FORMAL_GENERIC_ARG*/void r435make(T435* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_ARG*/void r435generic_formal_arguments_check(T435* C);
/*FORMAL_GENERIC_ARG*/T332 r435start_position(T435* C);
/*FORMAL_GENERIC_ARG*/void r435constraint_substitution(T435* C,T0* a1,T2 a2);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_tuple(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r478make(T478* C,T0* a1,T0* a2,T2 a3);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478generic_list(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_character(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478written_mark(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_native_array(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478at(T478* C,T332 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478specialize_thru(T478* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_boolean(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478typed_internals_type_mark(T478* C,T332 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478to_static(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r478accept(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_reference(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478same_signature_type(T478* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478type(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478signature_resolve_in(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_natural(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478default_expression(T478* C,T332 a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r478id_extra_information(T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478declaration_type(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478class_text_name(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_pointer(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_user_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T332 r478start_position(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_kernel_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r478set_start_position(T478* C,T332 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_fixed_string(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478class_text(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478twin(T478* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_real(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_integer(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r478pretty_in(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_generic(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r478resolve_in(T478* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r478is_agent(void);
/*LIKE_CURRENT_TYPE_MARK*/T488*create488make(T332 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_tuple(void);
/*LIKE_CURRENT_TYPE_MARK*/void r488make(T488* C,T332 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488generic_list(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_character(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488written_mark(void);
extern T0*oBC488written_name;
extern int fBC488written_name;
/*LIKE_CURRENT_TYPE_MARK*/T0* r488written_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_native_array(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488at(T488* C,T332 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_boolean(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488typed_internals_type_mark(T488* C,T332 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488to_static(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/void r488accept(T488* C,T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_reference(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488same_signature_type(T488* C,T0* a1,T0* a2);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488type(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488signature_resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_natural(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488default_expression(T488* C,T332 a1);
/*LIKE_CURRENT_TYPE_MARK*/void r488id_extra_information(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488declaration_type(T488* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488class_text_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_pointer(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_user_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_kernel_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_fixed_string(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488class_text(T488* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488twin(T488* C);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_real(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_integer(void);
/*LIKE_CURRENT_TYPE_MARK*/void r488pretty_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_generic(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r488resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r488is_agent(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_tuple(void);
/*LIKE_FEATURE_TYPE_MARK*/void r490make(T490* C,T332 a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490generic_list(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_character(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490written_mark(T490* C);
/*LIKE_FEATURE_TYPE_MARK*/void r490specialize_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_native_array(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490at(T490* C,T332 a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490specialize_thru(T490* C,T0* a1,T0* a2,T0* a3);
/*LIKE_FEATURE_TYPE_MARK*/void r490twin_feature_stamp_memory(T490* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_boolean(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490typed_internals_type_mark(T490* C,T332 a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490to_static(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/void r490accept(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_reference(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490same_signature_type(T490* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490type(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490signature_resolve_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_natural(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490default_expression(T490* C,T332 a1);
/*LIKE_FEATURE_TYPE_MARK*/void r490id_extra_information(T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490class_text_name(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490feature_accumulator(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_pointer(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_user_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_kernel_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_fixed_string(T490* C);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490class_text(T490* C);
extern T0*oBC489written_mark_buffer;
extern int fBC489written_mark_buffer;
/*LIKE_FEATURE_TYPE_MARK*/T0* r490written_mark_buffer(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490twin(T490* C);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_real(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_integer(void);
/*LIKE_FEATURE_TYPE_MARK*/void r490pretty_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_generic(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r490resolve_in(T490* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r490is_agent(void);
/*FORMAL_ARG_LIST*/void r348make(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/void r348pretty(T348* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r348specialize_in(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/void r348add_last(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r348rank_of(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/T0* r348specialize_thru(T348* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_ARG_LIST*/T0* r348adapt_for(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/void r348name_clash_check(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r348fast_rank_of(T348* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r348compute_flat_list_count_by_using_list(T348* C);
/*FORMAL_ARG_LIST*/T332 r348start_position(T348* C);
/*FORMAL_ARG_LIST*/T0* r348twin(T348* C);
/*FORMAL_ARG_LIST*/T0* r348type_mark(T348* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r348omitted_open_arguments(T348* C,T0* a1,T0* a2,T332 a3);
/*FORMAL_ARG_LIST*/T2 r348count(T348* C);
/*PRETTY_PRINTER*/void r108make(T108* C);
/*PRETTY_PRINTER*/void r108prepare_for_same_line_comment(void);
/*PRETTY_PRINTER*/T6 r108print_end_of_statement(T108* C);
/*PRETTY_PRINTER*/void r108put_type_mark(T0* a1);
/*PRETTY_PRINTER*/void r108keyword(T0* a1);
extern T0*oBC108buffer;
extern int fBC108buffer;
/*PRETTY_PRINTER*/T0* r108buffer(void);
/*PRETTY_PRINTER*/void r108put_one_line_comment(T2 a1,T0* a2);
/*PRETTY_PRINTER*/void r108expression_in(T0* a1,T0* a2);
/*PRETTY_PRINTER*/void r108put_end_of(T0* a1);
/*PRETTY_PRINTER*/void r108erase_everything_after(T2 a1);
/*PRETTY_PRINTER*/void r108set_semi_colon_flag(T108* C,T6 a1);
/*PRETTY_PRINTER*/void r108put_string(T0* a1);
/*PRETTY_PRINTER*/void r108left_margin_in(T0* a1);
/*PRETTY_PRINTER*/T6 r108is_opening_bracket_after(T2 a1);
/*PRETTY_PRINTER*/T3 r108last_non_blank_character(void);
/*PRETTY_PRINTER*/T2 r108column(void);
/*PRETTY_PRINTER*/void r108erase_separators_after(T2 a1);
/*PRETTY_PRINTER*/void r108set_indent_level(T2 a1);
/*PRETTY_PRINTER*/T2 r108index_of_last_character(void);
/*PRETTY_PRINTER*/void r108put_character(T3 a1);
/*PRETTY_PRINTER*/T6 r108print_end_of_feature(T108* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_tuple(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491make(T491* C,T332 a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491generic_list(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_character(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491written_mark(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491specialize_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_native_array(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491at(T491* C,T332 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491specialize_thru(T491* C,T0* a1,T0* a2,T0* a3);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_boolean(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491typed_internals_type_mark(T491* C,T332 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491to_static(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491accept(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_reference(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491same_signature_type(T491* C,T0* a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491type(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491signature_resolve_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_natural(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491default_expression(T491* C,T332 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491id_extra_information(T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491declaration_type(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491class_text_name(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_pointer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_user_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_kernel_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_fixed_string(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491class_text(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491written_mark_buffer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491twin(T491* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_real(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_integer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r491pretty_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_generic(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r491resolve_in(T491* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r491is_agent(void);
/*ARRAY_TYPE_MARK*/void r439set_generic_list(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r439declaration_type(T439* C);
/*ARRAY_TYPE_MARK*/T6 r439is_agent(void);
/*ARRAY_TYPE_MARK*/T0* r439long_name(T439* C);
/*ARRAY_TYPE_MARK*/T0* r439written_mark(T439* C);
/*ARRAY_TYPE_MARK*/T0* r439resolve_in(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r439at(T439* C,T332 a1);
/*ARRAY_TYPE_MARK*/T0* r439strings(void);
/*ARRAY_TYPE_MARK*/void r439set_generic_list_with(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r439specialize_in(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T6 r439is_native_array(void);
/*ARRAY_TYPE_MARK*/T6 r439is_static(T439* C);
/*ARRAY_TYPE_MARK*/T0* r439type(T439* C);
/*ARRAY_TYPE_MARK*/T6 r439is_pointer(void);
/*ARRAY_TYPE_MARK*/T2 r439id(T439* C);
/*ARRAY_TYPE_MARK*/void r439recompute_declaration_type(T439* C);
/*ARRAY_TYPE_MARK*/T0* r439specialize_thru(T439* C,T0* a1,T0* a2,T0* a3);
/*ARRAY_TYPE_MARK*/T6 r439is_real(void);
/*ARRAY_TYPE_MARK*/T6 r439is_fixed_string(T439* C);
/*ARRAY_TYPE_MARK*/T6 r439same_signature_type(T439* C,T0* a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r439is_natural(void);
/*ARRAY_TYPE_MARK*/T6 r439is_integer(void);
/*ARRAY_TYPE_MARK*/void r439make(T439* C,T332 a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r439is_character(void);
/*ARRAY_TYPE_MARK*/T6 r439is_kernel_expanded(void);
/*ARRAY_TYPE_MARK*/T0* r439written_name(T439* C);
/*ARRAY_TYPE_MARK*/T0* r439default_expression(T332 a1);
extern T0*oBC439array_name;
extern int fBC439array_name;
/*ARRAY_TYPE_MARK*/T0* r439array_name(void);
/*ARRAY_TYPE_MARK*/T0* r439to_static(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r439signature_resolve_in(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r439twin(T439* C);
/*ARRAY_TYPE_MARK*/void r439id_extra_information(T0* a1);
/*ARRAY_TYPE_MARK*/void r439set_start_position(T439* C,T332 a1);
/*ARRAY_TYPE_MARK*/T0* r439class_text(T439* C);
/*ARRAY_TYPE_MARK*/T6 r439is_boolean(void);
/*ARRAY_TYPE_MARK*/void r439accept(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r439set_static_generic_list(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r439update_static_memory(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r439typed_internals_type_mark(T439* C,T332 a1);
/*ARRAY_TYPE_MARK*/T6 r439is_tuple(void);
/*ARRAY_TYPE_MARK*/void r439pretty_in(T439* C,T0* a1);
/*ARRAY_TYPE_MARK*/T332 r439start_position(T439* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r402set_generic_list(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402declaration_type(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_agent(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402long_name(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402written_mark(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402resolve_in(T402* C,T0* a1);
extern T0*oBC402native_array_name;
extern int fBC402native_array_name;
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402native_array_name(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402at(T402* C,T332 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402strings(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r402specialize_in(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_native_array(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_static(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402type(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_pointer(void);
/*NATIVE_ARRAY_TYPE_MARK*/T2 r402id(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402elements_type(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r402recompute_declaration_type(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402specialize_thru(T402* C,T0* a1,T0* a2,T0* a3);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_real(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_fixed_string(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402same_signature_type(T402* C,T0* a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_natural(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_integer(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r402make(T402* C,T332 a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_character(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_kernel_expanded(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402written_name(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402default_expression(T402* C,T332 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402to_static(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402signature_resolve_in(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402twin(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r402id_extra_information(T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r402set_start_position(T402* C,T332 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402class_text(T402* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_boolean(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r402accept(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r402set_static_generic_list(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r402update_static_memory(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r402typed_internals_type_mark(T402* C,T332 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r402is_tuple(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r402pretty_in(T402* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T332 r402start_position(T402* C);
/*BOOLEAN_TYPE_MARK*/T375*create375make(T332 a1);
/*BOOLEAN_TYPE_MARK*/T6 r375is_tuple(void);
/*BOOLEAN_TYPE_MARK*/void r375make(T375* C,T332 a1);
/*BOOLEAN_TYPE_MARK*/T0* r375generic_list(void);
/*BOOLEAN_TYPE_MARK*/T6 r375is_character(void);
/*BOOLEAN_TYPE_MARK*/T0* r375written_mark(void);
extern T0*oBC375written_name;
extern int fBC375written_name;
/*BOOLEAN_TYPE_MARK*/T0* r375written_name(void);
/*BOOLEAN_TYPE_MARK*/T6 r375is_native_array(void);
/*BOOLEAN_TYPE_MARK*/T0* r375at(T375* C,T332 a1);
extern T0*oBC375long_name;
extern int fBC375long_name;
/*BOOLEAN_TYPE_MARK*/T0* r375long_name(void);
/*BOOLEAN_TYPE_MARK*/T0* r375specialize_thru(T375* C,T0* a1,T0* a2,T0* a3);
/*BOOLEAN_TYPE_MARK*/T6 r375is_boolean(void);
/*BOOLEAN_TYPE_MARK*/T0* r375typed_internals_type_mark(T375* C,T332 a1);
/*BOOLEAN_TYPE_MARK*/T0* r375to_static(T375* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/void r375accept(T375* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r375same_signature_type(T375* C,T0* a1,T0* a2);
/*BOOLEAN_TYPE_MARK*/T0* r375type(void);
/*BOOLEAN_TYPE_MARK*/T0* r375signature_resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r375is_natural(void);
/*BOOLEAN_TYPE_MARK*/T0* r375default_expression(T332 a1);
/*BOOLEAN_TYPE_MARK*/void r375id_extra_information(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r375declaration_type(T375* C);
/*BOOLEAN_TYPE_MARK*/T6 r375is_pointer(void);
/*BOOLEAN_TYPE_MARK*/T332 r375start_position(T375* C);
/*BOOLEAN_TYPE_MARK*/T6 r375is_kernel_expanded(void);
/*BOOLEAN_TYPE_MARK*/void r375set_start_position(T375* C,T332 a1);
/*BOOLEAN_TYPE_MARK*/T6 r375is_fixed_string(void);
/*BOOLEAN_TYPE_MARK*/T0* r375class_text(T375* C);
/*BOOLEAN_TYPE_MARK*/T0* r375twin(T375* C);
/*BOOLEAN_TYPE_MARK*/T6 r375is_real(void);
/*BOOLEAN_TYPE_MARK*/T6 r375is_integer(void);
/*BOOLEAN_TYPE_MARK*/void r375pretty_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r375resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r375is_agent(void);
/*CHARACTER_TYPE_MARK*/T430*create430make(T332 a1);
/*CHARACTER_TYPE_MARK*/T6 r430is_tuple(void);
/*CHARACTER_TYPE_MARK*/void r430make(T430* C,T332 a1);
/*CHARACTER_TYPE_MARK*/T0* r430generic_list(void);
/*CHARACTER_TYPE_MARK*/T6 r430is_character(void);
/*CHARACTER_TYPE_MARK*/T0* r430written_mark(void);
extern T0*oBC430written_name;
extern int fBC430written_name;
/*CHARACTER_TYPE_MARK*/T0* r430written_name(void);
/*CHARACTER_TYPE_MARK*/T6 r430is_native_array(void);
/*CHARACTER_TYPE_MARK*/T0* r430at(T430* C,T332 a1);
extern T0*oBC430long_name;
extern int fBC430long_name;
/*CHARACTER_TYPE_MARK*/T0* r430long_name(void);
/*CHARACTER_TYPE_MARK*/T0* r430specialize_thru(T430* C,T0* a1,T0* a2,T0* a3);
/*CHARACTER_TYPE_MARK*/T6 r430is_boolean(void);
/*CHARACTER_TYPE_MARK*/T0* r430typed_internals_type_mark(T430* C,T332 a1);
/*CHARACTER_TYPE_MARK*/T0* r430to_static(T430* C,T0* a1);
/*CHARACTER_TYPE_MARK*/void r430accept(T430* C,T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r430same_signature_type(T430* C,T0* a1,T0* a2);
/*CHARACTER_TYPE_MARK*/T0* r430type(void);
/*CHARACTER_TYPE_MARK*/T0* r430signature_resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r430is_natural(void);
/*CHARACTER_TYPE_MARK*/T0* r430default_expression(T332 a1);
/*CHARACTER_TYPE_MARK*/void r430id_extra_information(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r430declaration_type(T430* C);
/*CHARACTER_TYPE_MARK*/T6 r430is_pointer(void);
/*CHARACTER_TYPE_MARK*/T332 r430start_position(T430* C);
/*CHARACTER_TYPE_MARK*/T6 r430is_kernel_expanded(void);
/*CHARACTER_TYPE_MARK*/void r430set_start_position(T430* C,T332 a1);
/*CHARACTER_TYPE_MARK*/T6 r430is_fixed_string(void);
/*CHARACTER_TYPE_MARK*/T0* r430class_text(T430* C);
/*CHARACTER_TYPE_MARK*/T0* r430twin(T430* C);
/*CHARACTER_TYPE_MARK*/T6 r430is_real(void);
/*CHARACTER_TYPE_MARK*/T6 r430is_integer(void);
/*CHARACTER_TYPE_MARK*/void r430pretty_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r430resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r430is_agent(void);
/*INTEGER_TYPE_MARK*/T401*create401integer_16(T332 a1);
/*INTEGER_TYPE_MARK*/T401*create401integer(T332 a1);
/*INTEGER_TYPE_MARK*/T401*create401integer_64(T332 a1);
/*INTEGER_TYPE_MARK*/T401*create401integer_8(T332 a1);
/*INTEGER_TYPE_MARK*/T401*create401integer_32(T332 a1);
/*INTEGER_TYPE_MARK*/T0* r401declaration_type(T401* C);
/*INTEGER_TYPE_MARK*/T6 r401is_agent(void);
/*INTEGER_TYPE_MARK*/T0* r401generic_list(void);
/*INTEGER_TYPE_MARK*/T0* r401written_mark(T401* C);
/*INTEGER_TYPE_MARK*/T0* r401resolve_in(T401* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r401at(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T6 r401is_native_array(void);
/*INTEGER_TYPE_MARK*/T3 r401structure_mark(T401* C);
/*INTEGER_TYPE_MARK*/T0* r401type(T401* C);
/*INTEGER_TYPE_MARK*/T6 r401is_pointer(void);
/*INTEGER_TYPE_MARK*/T2 r401id(T401* C);
/*INTEGER_TYPE_MARK*/void r401integer_16(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/void r401integer_32(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T0* r401specialize_thru(T401* C,T0* a1,T0* a2,T0* a3);
/*INTEGER_TYPE_MARK*/T6 r401is_real(void);
/*INTEGER_TYPE_MARK*/T6 r401is_fixed_string(T401* C);
extern T0*oBC401integer_64_name;
extern int fBC401integer_64_name;
/*INTEGER_TYPE_MARK*/T0* r401integer_64_name(void);
/*INTEGER_TYPE_MARK*/void r401integer(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T6 r401same_signature_type(T401* C,T0* a1,T0* a2);
/*INTEGER_TYPE_MARK*/void r401integer_64(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T6 r401can_be_assigned_to(T401* C,T0* a1);
/*INTEGER_TYPE_MARK*/T6 r401is_natural(void);
/*INTEGER_TYPE_MARK*/void r401integer_8(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T6 r401is_integer(void);
extern T0*oBC401integer_name;
extern int fBC401integer_name;
/*INTEGER_TYPE_MARK*/T0* r401integer_name(void);
/*INTEGER_TYPE_MARK*/T6 r401is_character(void);
/*INTEGER_TYPE_MARK*/T6 r401is_kernel_expanded(void);
extern T0*oBC401integer_8_name;
extern int fBC401integer_8_name;
/*INTEGER_TYPE_MARK*/T0* r401integer_8_name(void);
/*INTEGER_TYPE_MARK*/T0* r401written_name(T401* C);
/*INTEGER_TYPE_MARK*/T0* r401default_expression(T401* C,T332 a1);
extern T0*oBC401integer_32_name;
extern int fBC401integer_32_name;
/*INTEGER_TYPE_MARK*/T0* r401integer_32_name(void);
/*INTEGER_TYPE_MARK*/T0* r401to_static(T401* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r401signature_resolve_in(T401* C,T0* a1);
extern T0*oBC401integer_16_name;
extern int fBC401integer_16_name;
/*INTEGER_TYPE_MARK*/T0* r401integer_16_name(void);
/*INTEGER_TYPE_MARK*/T0* r401twin(T401* C);
/*INTEGER_TYPE_MARK*/void r401id_extra_information(T0* a1);
/*INTEGER_TYPE_MARK*/void r401set_start_position(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T0* r401class_text(T401* C);
/*INTEGER_TYPE_MARK*/T6 r401is_boolean(void);
/*INTEGER_TYPE_MARK*/void r401accept(T401* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r401typed_internals_type_mark(T401* C,T332 a1);
/*INTEGER_TYPE_MARK*/T6 r401is_tuple(void);
/*INTEGER_TYPE_MARK*/void r401pretty_in(T401* C,T0* a1);
/*INTEGER_TYPE_MARK*/T332 r401start_position(T401* C);
/*INTEGER_TYPE_MARK*/T0* r401_P_359_class_text(T401* C);
/*NATURAL_TYPE_MARK*/T428*create428natural_16(T332 a1);
/*NATURAL_TYPE_MARK*/T428*create428natural_32(T332 a1);
/*NATURAL_TYPE_MARK*/T428*create428natural_64(T332 a1);
/*NATURAL_TYPE_MARK*/T428*create428natural_8(T332 a1);
/*NATURAL_TYPE_MARK*/T0* r428declaration_type(T428* C);
extern T0*oBC428natural_32_name;
extern int fBC428natural_32_name;
/*NATURAL_TYPE_MARK*/T0* r428natural_32_name(void);
/*NATURAL_TYPE_MARK*/T6 r428is_agent(void);
/*NATURAL_TYPE_MARK*/T0* r428generic_list(void);
/*NATURAL_TYPE_MARK*/T0* r428written_mark(T428* C);
/*NATURAL_TYPE_MARK*/T0* r428resolve_in(T428* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r428at(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T6 r428is_native_array(void);
/*NATURAL_TYPE_MARK*/T3 r428structure_mark(T428* C);
/*NATURAL_TYPE_MARK*/T0* r428type(T428* C);
/*NATURAL_TYPE_MARK*/T6 r428is_pointer(void);
/*NATURAL_TYPE_MARK*/T2 r428id(T428* C);
/*NATURAL_TYPE_MARK*/void r428natural_8(T428* C,T332 a1);
extern T0*oBC428natural_64_name;
extern int fBC428natural_64_name;
/*NATURAL_TYPE_MARK*/T0* r428natural_64_name(void);
extern T0*oBC428natural_8_name;
extern int fBC428natural_8_name;
/*NATURAL_TYPE_MARK*/T0* r428natural_8_name(void);
/*NATURAL_TYPE_MARK*/T0* r428specialize_thru(T428* C,T0* a1,T0* a2,T0* a3);
/*NATURAL_TYPE_MARK*/T6 r428is_real(void);
/*NATURAL_TYPE_MARK*/T6 r428is_fixed_string(T428* C);
/*NATURAL_TYPE_MARK*/T6 r428same_signature_type(T428* C,T0* a1,T0* a2);
/*NATURAL_TYPE_MARK*/T6 r428is_natural(void);
/*NATURAL_TYPE_MARK*/void r428natural_16(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T6 r428is_integer(void);
/*NATURAL_TYPE_MARK*/void r428natural_32(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T6 r428is_character(void);
/*NATURAL_TYPE_MARK*/void r428natural_64(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T6 r428is_kernel_expanded(void);
/*NATURAL_TYPE_MARK*/T0* r428written_name(T428* C);
/*NATURAL_TYPE_MARK*/T0* r428default_expression(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T0* r428to_static(T428* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r428signature_resolve_in(T428* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r428twin(T428* C);
/*NATURAL_TYPE_MARK*/void r428id_extra_information(T0* a1);
/*NATURAL_TYPE_MARK*/void r428set_start_position(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T0* r428class_text(T428* C);
/*NATURAL_TYPE_MARK*/T6 r428is_boolean(void);
extern T0*oBC428natural_16_name;
extern int fBC428natural_16_name;
/*NATURAL_TYPE_MARK*/T0* r428natural_16_name(void);
/*NATURAL_TYPE_MARK*/void r428accept(T428* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r428typed_internals_type_mark(T428* C,T332 a1);
/*NATURAL_TYPE_MARK*/T6 r428is_tuple(void);
/*NATURAL_TYPE_MARK*/void r428pretty_in(T428* C,T0* a1);
/*NATURAL_TYPE_MARK*/T332 r428start_position(T428* C);
/*CLASS_TYPE_MARK*/T397*create397make(T0* a1);
/*CLASS_TYPE_MARK*/T6 r397is_tuple(void);
/*CLASS_TYPE_MARK*/void r397make(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r397generic_list(void);
/*CLASS_TYPE_MARK*/T6 r397is_character(void);
/*CLASS_TYPE_MARK*/T0* r397written_mark(T397* C);
/*CLASS_TYPE_MARK*/T0* r397canonical_long_name(T397* C);
/*CLASS_TYPE_MARK*/T0* r397written_name(T397* C);
/*CLASS_TYPE_MARK*/T6 r397is_native_array(void);
/*CLASS_TYPE_MARK*/T0* r397at(T397* C,T332 a1);
/*CLASS_TYPE_MARK*/T6 r397is_expanded(T397* C);
/*CLASS_TYPE_MARK*/T0* r397specialize_thru(T397* C,T0* a1,T0* a2,T0* a3);
/*CLASS_TYPE_MARK*/T6 r397is_boolean(void);
/*CLASS_TYPE_MARK*/T0* r397typed_internals_type_mark(T397* C,T332 a1);
/*CLASS_TYPE_MARK*/T0* r397to_static(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T2 r397id(T397* C);
/*CLASS_TYPE_MARK*/void r397accept(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r397is_reference(T397* C);
/*CLASS_TYPE_MARK*/T6 r397same_signature_type(T397* C,T0* a1,T0* a2);
/*CLASS_TYPE_MARK*/T0* r397type(T397* C);
/*CLASS_TYPE_MARK*/T0* r397signature_resolve_in(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r397is_natural(void);
/*CLASS_TYPE_MARK*/T0* r397default_expression(T397* C,T332 a1);
/*CLASS_TYPE_MARK*/void r397id_extra_information(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r397declaration_type(T397* C);
/*CLASS_TYPE_MARK*/T6 r397is_pointer(void);
/*CLASS_TYPE_MARK*/T6 r397is_user_expanded(T397* C);
/*CLASS_TYPE_MARK*/T332 r397start_position(T397* C);
/*CLASS_TYPE_MARK*/T6 r397is_kernel_expanded(void);
/*CLASS_TYPE_MARK*/void r397set_start_position(T397* C,T332 a1);
/*CLASS_TYPE_MARK*/T6 r397is_fixed_string(T397* C);
/*CLASS_TYPE_MARK*/T0* r397class_text(T397* C);
/*CLASS_TYPE_MARK*/T0* r397twin(T397* C);
/*CLASS_TYPE_MARK*/T6 r397is_real(void);
/*CLASS_TYPE_MARK*/T6 r397is_integer(void);
/*CLASS_TYPE_MARK*/void r397pretty_in(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r397is_empty_expanded(T397* C);
/*CLASS_TYPE_MARK*/T0* r397resolve_in(T397* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r397is_agent(void);
/*POINTER_TYPE_MARK*/T431*create431make(T332 a1);
/*POINTER_TYPE_MARK*/T6 r431is_tuple(void);
/*POINTER_TYPE_MARK*/void r431make(T431* C,T332 a1);
/*POINTER_TYPE_MARK*/T0* r431generic_list(void);
/*POINTER_TYPE_MARK*/T6 r431is_character(void);
/*POINTER_TYPE_MARK*/T0* r431written_mark(void);
extern T0*oBC431written_name;
extern int fBC431written_name;
/*POINTER_TYPE_MARK*/T0* r431written_name(void);
/*POINTER_TYPE_MARK*/T6 r431is_native_array(void);
/*POINTER_TYPE_MARK*/T0* r431at(T431* C,T332 a1);
extern T0*oBC431long_name;
extern int fBC431long_name;
/*POINTER_TYPE_MARK*/T0* r431long_name(void);
/*POINTER_TYPE_MARK*/T0* r431specialize_thru(T431* C,T0* a1,T0* a2,T0* a3);
/*POINTER_TYPE_MARK*/T6 r431is_boolean(void);
/*POINTER_TYPE_MARK*/T0* r431typed_internals_type_mark(T431* C,T332 a1);
/*POINTER_TYPE_MARK*/T0* r431to_static(T431* C,T0* a1);
/*POINTER_TYPE_MARK*/void r431accept(T431* C,T0* a1);
/*POINTER_TYPE_MARK*/T6 r431same_signature_type(T431* C,T0* a1,T0* a2);
/*POINTER_TYPE_MARK*/T0* r431type(void);
/*POINTER_TYPE_MARK*/T0* r431signature_resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r431is_natural(void);
/*POINTER_TYPE_MARK*/T0* r431default_expression(T431* C,T332 a1);
/*POINTER_TYPE_MARK*/void r431id_extra_information(T0* a1);
/*POINTER_TYPE_MARK*/T0* r431declaration_type(T431* C);
/*POINTER_TYPE_MARK*/T6 r431is_pointer(void);
/*POINTER_TYPE_MARK*/T332 r431start_position(T431* C);
/*POINTER_TYPE_MARK*/T6 r431is_kernel_expanded(void);
/*POINTER_TYPE_MARK*/void r431set_start_position(T431* C,T332 a1);
/*POINTER_TYPE_MARK*/T6 r431is_fixed_string(void);
/*POINTER_TYPE_MARK*/T0* r431class_text(T431* C);
/*POINTER_TYPE_MARK*/T0* r431twin(T431* C);
/*POINTER_TYPE_MARK*/T6 r431is_real(void);
/*POINTER_TYPE_MARK*/T6 r431is_integer(void);
/*POINTER_TYPE_MARK*/void r431pretty_in(T0* a1);
/*POINTER_TYPE_MARK*/T0* r431resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r431is_agent(void);
/*REAL_TYPE_MARK*/T429*create429real_32(T332 a1);
/*REAL_TYPE_MARK*/T429*create429real_extended(T332 a1);
/*REAL_TYPE_MARK*/T429*create429real(T332 a1);
/*REAL_TYPE_MARK*/T0* r429declaration_type(T429* C);
/*REAL_TYPE_MARK*/T6 r429is_agent(void);
/*REAL_TYPE_MARK*/T0* r429generic_list(void);
extern T0*oBC429real_80_name;
extern int fBC429real_80_name;
/*REAL_TYPE_MARK*/T0* r429real_80_name(void);
/*REAL_TYPE_MARK*/T0* r429written_mark(T429* C);
/*REAL_TYPE_MARK*/T0* r429resolve_in(T429* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r429at(T429* C,T332 a1);
/*REAL_TYPE_MARK*/T6 r429is_native_array(void);
/*REAL_TYPE_MARK*/T3 r429structure_mark(T429* C);
extern T0*oBC429real_64_name;
extern int fBC429real_64_name;
/*REAL_TYPE_MARK*/T0* r429real_64_name(void);
/*REAL_TYPE_MARK*/T0* r429type(T429* C);
/*REAL_TYPE_MARK*/T6 r429is_pointer(void);
/*REAL_TYPE_MARK*/T2 r429id(T429* C);
extern T0*oBC429real_128_name;
extern int fBC429real_128_name;
/*REAL_TYPE_MARK*/T0* r429real_128_name(void);
/*REAL_TYPE_MARK*/T0* r429specialize_thru(T429* C,T0* a1,T0* a2,T0* a3);
/*REAL_TYPE_MARK*/T6 r429is_real(void);
/*REAL_TYPE_MARK*/T6 r429is_fixed_string(T429* C);
/*REAL_TYPE_MARK*/T6 r429same_signature_type(T429* C,T0* a1,T0* a2);
/*REAL_TYPE_MARK*/T6 r429can_be_assigned_to(T429* C,T0* a1);
/*REAL_TYPE_MARK*/T6 r429is_natural(void);
extern T0*oBC429real_name;
extern int fBC429real_name;
/*REAL_TYPE_MARK*/T0* r429real_name(void);
/*REAL_TYPE_MARK*/T6 r429is_integer(void);
extern T0*oBC429real_32_name;
extern int fBC429real_32_name;
/*REAL_TYPE_MARK*/T0* r429real_32_name(void);
/*REAL_TYPE_MARK*/T6 r429is_character(void);
/*REAL_TYPE_MARK*/T6 r429is_kernel_expanded(void);
/*REAL_TYPE_MARK*/T0* r429written_name(T429* C);
/*REAL_TYPE_MARK*/T0* r429default_expression(T429* C,T332 a1);
/*REAL_TYPE_MARK*/void r429real_32(T429* C,T332 a1);
/*REAL_TYPE_MARK*/T0* r429to_static(T429* C,T0* a1);
/*REAL_TYPE_MARK*/void r429real_64(T429* C,T332 a1);
/*REAL_TYPE_MARK*/T0* r429signature_resolve_in(T429* C,T0* a1);
/*REAL_TYPE_MARK*/void r429real_80(T429* C,T332 a1);
extern T0*oBC429real_extended_name;
extern int fBC429real_extended_name;
/*REAL_TYPE_MARK*/T0* r429real_extended_name(void);
/*REAL_TYPE_MARK*/void r429real_extended(T429* C,T332 a1);
/*REAL_TYPE_MARK*/T0* r429twin(T429* C);
/*REAL_TYPE_MARK*/void r429id_extra_information(T0* a1);
/*REAL_TYPE_MARK*/void r429set_start_position(T429* C,T332 a1);
/*REAL_TYPE_MARK*/T0* r429class_text(T429* C);
/*REAL_TYPE_MARK*/T6 r429is_boolean(void);
/*REAL_TYPE_MARK*/void r429accept(T429* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r429typed_internals_type_mark(T429* C,T332 a1);
/*REAL_TYPE_MARK*/T6 r429is_tuple(void);
/*REAL_TYPE_MARK*/void r429pretty_in(T429* C,T0* a1);
/*REAL_TYPE_MARK*/T332 r429start_position(T429* C);
/*REAL_TYPE_MARK*/void r429real_128(T429* C,T332 a1);
/*REAL_TYPE_MARK*/void r429real(T429* C,T332 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436set_generic_list(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436declaration_type(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_agent(void);
extern T0*oBC434canonical_long_name;
extern int fBC434canonical_long_name;
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436canonical_long_name(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436long_name(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436written_mark(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436resolve_in(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r436count(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436at(T436* C,T332 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436strings(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436specialize_in(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_native_array(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_static(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436type(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_pointer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r436id(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436recompute_declaration_type(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436specialize_thru(T436* C,T0* a1,T0* a2,T0* a3);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_real(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_fixed_string(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436same_signature_type(T436* C,T0* a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_natural(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_integer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436make(T436* C,T332 a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_character(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_kernel_expanded(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436written_name(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436default_expression(T332 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436to_static(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436signature_resolve_in(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436twin(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436id_extra_information(T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436set_start_position(T436* C,T332 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436class_text(T436* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r436is_boolean(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436accept(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436set_static_generic_list(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436update_static_memory(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r436typed_internals_type_mark(T436* C,T332 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r436pretty_in(T436* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T332 r436start_position(T436* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r433make(T433* C,T332 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433generic_list(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_character(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433written_mark(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433canonical_long_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433written_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_native_array(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433at(T433* C,T332 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433specialize_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_boolean(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433typed_internals_type_mark(T433* C,T332 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433to_static(T433* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T2 r433id(T433* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r433accept(T433* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433same_signature_type(T433* C,T0* a1,T0* a2);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433type(T433* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433signature_resolve_in(T433* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_natural(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433default_expression(T332 a1);
/*EMPTY_TUPLE_TYPE_MARK*/void r433id_extra_information(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433declaration_type(T433* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_pointer(void);
/*EMPTY_TUPLE_TYPE_MARK*/T332 r433start_position(T433* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_kernel_expanded(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r433set_start_position(T433* C,T332 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_fixed_string(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433class_text(T433* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433twin(T433* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_real(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_integer(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r433pretty_in(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r433resolve_in(T433* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r433is_agent(void);
/*AGENT_TYPE_MARK*/void r437set_generic_list(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r437declaration_type(T437* C);
/*AGENT_TYPE_MARK*/T6 r437is_agent(void);
/*AGENT_TYPE_MARK*/T0* r437canonical_long_name(T437* C);
/*AGENT_TYPE_MARK*/T0* r437long_name(T437* C);
/*AGENT_TYPE_MARK*/T0* r437written_mark(T437* C);
/*AGENT_TYPE_MARK*/T0* r437resolve_in(T437* C,T0* a1);
extern T0*oBC437function_name;
extern int fBC437function_name;
/*AGENT_TYPE_MARK*/T0* r437function_name(void);
/*AGENT_TYPE_MARK*/T0* r437at(T437* C,T332 a1);
/*AGENT_TYPE_MARK*/T0* r437written_open(T437* C);
/*AGENT_TYPE_MARK*/T0* r437strings(void);
/*AGENT_TYPE_MARK*/void r437procedure(T437* C,T332 a1,T0* a2);
/*AGENT_TYPE_MARK*/void r437specialize_in(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/T6 r437is_native_array(void);
extern T0*oBC437routine_name;
extern int fBC437routine_name;
/*AGENT_TYPE_MARK*/T0* r437routine_name(void);
/*AGENT_TYPE_MARK*/T6 r437is_static(T437* C);
/*AGENT_TYPE_MARK*/T0* r437type(T437* C);
/*AGENT_TYPE_MARK*/T6 r437is_pointer(void);
/*AGENT_TYPE_MARK*/T2 r437id(T437* C);
/*AGENT_TYPE_MARK*/void r437recompute_declaration_type(T437* C);
/*AGENT_TYPE_MARK*/T0* r437specialize_thru(T437* C,T0* a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r437is_real(void);
/*AGENT_TYPE_MARK*/T6 r437is_fixed_string(T437* C);
/*AGENT_TYPE_MARK*/T6 r437same_signature_type(T437* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r437is_natural(void);
/*AGENT_TYPE_MARK*/T6 r437is_integer(void);
/*AGENT_TYPE_MARK*/T6 r437is_character(void);
/*AGENT_TYPE_MARK*/T0* r437result_type(T437* C);
/*AGENT_TYPE_MARK*/void r437predicate(T437* C,T332 a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r437is_kernel_expanded(void);
/*AGENT_TYPE_MARK*/void r437routine(T437* C,T332 a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r437written_name(T437* C);
/*AGENT_TYPE_MARK*/T0* r437default_expression(T332 a1);
/*AGENT_TYPE_MARK*/void r437basic_make(T437* C,T2 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T0* r437to_static(T437* C,T0* a1);
extern T0*oBC437procedure_name;
extern int fBC437procedure_name;
/*AGENT_TYPE_MARK*/T0* r437procedure_name(void);
/*AGENT_TYPE_MARK*/void r437open_check(T437* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r437signature_resolve_in(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r437twin(T437* C);
/*AGENT_TYPE_MARK*/void r437id_extra_information(T0* a1);
/*AGENT_TYPE_MARK*/void r437set_start_position(T437* C,T332 a1);
/*AGENT_TYPE_MARK*/T0* r437class_text(T437* C);
/*AGENT_TYPE_MARK*/void r437function(T437* C,T332 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r437is_boolean(void);
/*AGENT_TYPE_MARK*/void r437accept(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/void r437set_static_generic_list(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/void r437update_static_memory(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r437typed_internals_type_mark(T437* C,T332 a1);
/*AGENT_TYPE_MARK*/T6 r437is_tuple(void);
/*AGENT_TYPE_MARK*/void r437pretty_in(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/T332 r437start_position(T437* C);
/*AGENT_TYPE_MARK*/void r437_P_403_specialize_in(T437* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r437_P_403_specialize_thru(T437* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/void r440set_generic_list(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440declaration_type(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_agent(void);
/*USER_GENERIC_TYPE_MARK*/T0* r440canonical_long_name(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440long_name(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440written_mark(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440resolve_in(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440at(T440* C,T332 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440strings(void);
/*USER_GENERIC_TYPE_MARK*/void r440specialize_in(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_native_array(void);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_static(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440type(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_pointer(void);
/*USER_GENERIC_TYPE_MARK*/T2 r440id(T440* C);
/*USER_GENERIC_TYPE_MARK*/void r440recompute_declaration_type(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440specialize_thru(T440* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_real(void);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_fixed_string(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_empty_expanded(T440* C);
/*USER_GENERIC_TYPE_MARK*/void r440special_weak_reference_extra_check(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440same_signature_type(T440* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_natural(void);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_integer(void);
/*USER_GENERIC_TYPE_MARK*/void r440make(T440* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_character(void);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_expanded(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_kernel_expanded(void);
/*USER_GENERIC_TYPE_MARK*/T0* r440written_name(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440default_expression(T440* C,T332 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440to_static(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_reference(T440* C);
/*USER_GENERIC_TYPE_MARK*/T0* r440signature_resolve_in(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440twin(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_user_expanded(T440* C);
/*USER_GENERIC_TYPE_MARK*/void r440id_extra_information(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440weak_reference_argument(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r440set_start_position(T440* C,T332 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440class_text(T440* C);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_boolean(void);
/*USER_GENERIC_TYPE_MARK*/void r440accept(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r440set_static_generic_list(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r440update_static_memory(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r440typed_internals_type_mark(T440* C,T332 a1);
/*USER_GENERIC_TYPE_MARK*/T6 r440is_tuple(void);
/*USER_GENERIC_TYPE_MARK*/void r440pretty_in(T440* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T332 r440start_position(T440* C);
/*MINI_BUFFER*/T6 r262is_off(T262* C);
/*MINI_BUFFER*/T0* r262a_include(T262* C);
/*MINI_BUFFER*/void r262next(T262* C);
/*MINI_BUFFER*/T0* r262a_file_or_directory_path(T262* C);
/*MINI_BUFFER*/T0* r262a_type_cast(T262* C);
/*MINI_BUFFER*/T6 r262a_keyword(T262* C,T0* a1);
/*MINI_BUFFER*/void r262skip_separators(T262* C);
/*MINI_BUFFER*/T3 r262item(T262* C);
/*MINI_BUFFER*/T0* r262system_tools(void);
/*MINI_BUFFER*/T0* r262a_signature(T262* C);
/*MINI_BUFFER*/T0* r262an_identifier(T262* C);
/*MINI_BUFFER*/void r262start_with(T262* C,T0* a1);
/*MINI_BUFFER*/void r262show_position_with_fatal_error(T262* C,T0* a1);
/*MINI_BUFFER*/T6 r262a_word(T262* C,T0* a1);
/*NATIVE_BUILT_IN*/void r460make(T460* C,T0* a1);
/*NATIVE_BUILT_IN*/void r460pretty(T460* C,T2 a1,T6 a2);
/*NATIVE_BUILT_IN*/void r460parse_external_type(T460* C,T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r460accept(T460* C,T0* a1);
/*NATIVE_BUILT_IN*/T332 r460start_position(T460* C);
/*NATIVE_BUILT_IN*/T6 r460use_current(T0* a1);
/*NATIVE_BUILT_IN*/void r460crash(T460* C);
/*NATIVE_BUILT_IN*/T6 r460side_effect_free(T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r460not_yet_implemented(T460* C);
/*NATIVE_BUILT_IN*/T2 r460hash_code(T460* C);
/*NATIVE_PLUG_IN*/T6 r462is_equal(T462* C,T0* a1);
/*NATIVE_PLUG_IN*/void r462make(T462* C,T0* a1);
/*NATIVE_PLUG_IN*/void r462pretty(T462* C,T2 a1,T6 a2);
/*NATIVE_PLUG_IN*/void r462parse_external_type(T462* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/void r462parse_alias_string(T462* C,T0* a1);
/*NATIVE_PLUG_IN*/void r462accept(T462* C,T0* a1);
/*NATIVE_PLUG_IN*/void r462do_collect(T462* C);
/*NATIVE_PLUG_IN*/T0* r462required_key(T462* C,T0* a1);
/*NATIVE_PLUG_IN*/void r462check_unused_keys(T462* C);
/*NATIVE_PLUG_IN*/void r462collect(T462* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/T332 r462start_position(T462* C);
/*NATIVE_PLUG_IN*/T0* r462system_tools(void);
/*NATIVE_PLUG_IN*/void r462customize_runtime(T462* C);
/*NATIVE_C_PLUS_PLUS*/void r463make(T463* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/void r463pretty(T463* C,T2 a1,T6 a2);
/*NATIVE_C_PLUS_PLUS*/T2 r463parse_args_in(T463* C,T0* a1,T2 a2,T0* a3,T2 a4,T2 a5);
/*NATIVE_C_PLUS_PLUS*/void r463parse_external_type(T463* C,T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T0* r463cpp(void);
/*NATIVE_C_PLUS_PLUS*/void r463accept(T463* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/T2 r463error_at(T463* C,T2 a1,T0* a2,T2 a3);
/*NATIVE_C_PLUS_PLUS*/void r463notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/void r463collect(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T332 r463start_position(T463* C);
/*NATIVE_C_PLUS_PLUS*/T2 r463parse_cpp_class_in(T463* C,T0* a1,T2 a2,T0* a3);
/*NATIVE_C_PLUS_PLUS*/void r463crash(T463* C);
/*NATIVE_C_PLUS_PLUS*/T2 r463parse_include(T463* C,T2 a1,T0* a2);
extern T0*oBC463include_memory;
extern int fBC463include_memory;
/*NATIVE_C_PLUS_PLUS*/T0* r463include_memory(void);
/*NATIVE_C_PLUS_PLUS*/void r463parse_external_in(T463* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*NATIVE_C_PLUS_PLUS*/void r463not_yet_implemented(T463* C);
/*NATIVE_C_PLUS_PLUS*/T2 r463hash_code(T463* C);
/*NATIVE_C*/void r464make(T464* C,T0* a1);
/*NATIVE_C*/void r464pretty(T464* C,T2 a1,T6 a2);
/*NATIVE_C*/void r464parse_external_type(T464* C,T0* a1,T0* a2);
/*NATIVE_C*/T0* r464cpp(void);
/*NATIVE_C*/void r464accept(T464* C,T0* a1);
/*NATIVE_C*/void r464notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C*/void r464parse_external_tag(T464* C);
/*NATIVE_C*/void r464collect(T0* a1,T0* a2);
/*NATIVE_C*/T332 r464start_position(T464* C);
/*NATIVE_C*/void r464crash(T464* C);
/*NATIVE_C*/void r464not_yet_implemented(T464* C);
/*NATIVE_C*/T2 r464hash_code(T464* C);
/*NATIVE_C*/void r464bad_external(T464* C,T0* a1);
/*EXTERNAL_TYPE*/T415*create415make(T0* a1,T0* a2,T332 a3);
/*EXTERNAL_TYPE*/void r415make(T415* C,T0* a1,T0* a2,T332 a3);
/*EXTERNAL_TYPE*/void r415set(T415* C,T0* a1,T0* a2);
/*EXTERNAL_TYPE*/void r415collect(T415* C);
/*PARENT_EDGE*/T269*create269make(T6 a1,T0* a2);
/*PARENT_EDGE*/void r269check_level_2(T269* C,T0* a1);
/*PARENT_EDGE*/void r269make(T269* C,T6 a1,T0* a2);
/*PARENT_EDGE*/T0* r269exports_for(T269* C,T0* a1);
/*PARENT_EDGE*/void r269add_rename(T269* C,T0* a1);
/*PARENT_EDGE*/T6 r269is_target_of_rename(T269* C,T0* a1);
extern T0*oBC269forbidden_parent_list;
extern int fBC269forbidden_parent_list;
/*PARENT_EDGE*/T0* r269forbidden_parent_list(void);
/*PARENT_EDGE*/void r269initialize_and_check_level_1(T269* C,T0* a1);
/*PARENT_EDGE*/T2 r269rename_count(T269* C);
/*PARENT_EDGE*/void r269id_extra_information(T269* C,T0* a1);
/*PARENT_EDGE*/T0* r269get_name_in_child(T269* C,T0* a1);
/*PARENT_EDGE*/T0* r269exports_for_all(T269* C);
/*PARENT_EDGE*/T332 r269start_position(T269* C);
/*PARENT_EDGE*/T0* r269do_rename(T269* C,T0* a1);
/*PARENT_EDGE*/T0* r269get_undefine(T269* C,T0* a1);
/*PARENT_EDGE*/T0* r269get_redefine(T269* C,T0* a1);
/*RENAME_PAIR*/void r471make(T471* C,T0* a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/T0* r511to_expression(T511* C);
/*OLD_MANIFEST_ARRAY*/void r511make(T511* C,T332 a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/void r511pretty(T511* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r511specialize_2(T511* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r511static_simplify(T511* C);
/*OLD_MANIFEST_ARRAY*/T0* r511specialize_in(T511* C,T0* a1);
extern T0*oBC511type_set_buffer;
extern int fBC511type_set_buffer;
/*OLD_MANIFEST_ARRAY*/T0* r511type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r511specialize_thru(T511* C,T0* a1,T0* a2,T0* a3);
/*OLD_MANIFEST_ARRAY*/T6 r511is_stored_in_some_local_variable(void);
/*OLD_MANIFEST_ARRAY*/void r511accept(T511* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/void r511pretty_target(T511* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r511twin(T511* C);
/*OLD_MANIFEST_ARRAY*/T0* r511written_declaration_type_mark(void);
/*OLD_MANIFEST_ARRAY*/T6 r511use_current(T0* a1);
/*OLD_MANIFEST_ARRAY*/void r511bracketed_pretty(T511* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r511non_void_no_dispatch_type(T0* a1);
/*OLD_MANIFEST_ARRAY*/T6 r511side_effect_free(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r511smallest_ancestor_from_type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r511resolve_in(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r511to_instruction(T511* C);
/*CALL_PREFIX_NOT*/T0* r480declaration_type(T480* C);
/*CALL_PREFIX_NOT*/T0* r480adapt_for(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480resolve_in(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480eiffel_parser(void);
extern T0*oBC339use_current_stack;
extern int fBC339use_current_stack;
/*CALL_PREFIX_NOT*/T0* r480use_current_stack(void);
/*CALL_PREFIX_NOT*/T0* r480collect(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480specialize_2(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480specialize_in(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480written_declaration_type_mark(void);
/*CALL_PREFIX_NOT*/T0* r480simplify(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/void r480pretty_target(T480* C,T2 a1);
/*CALL_PREFIX_NOT*/void r480safety_check(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480to_expression(T480* C);
/*CALL_PREFIX_NOT*/T0* r480specialize_thru(T480* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/T0* r480manifest_expression(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480feature_accumulator(void);
/*CALL_PREFIX_NOT*/T6 r480simplify_limit_reached(T480* C);
/*CALL_PREFIX_NOT*/void r480inline_dynamic_dispatch_(T480* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r480to_instruction(T480* C);
/*CALL_PREFIX_NOT*/T0* r480current_or_twin_init(T480* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r480standard_check_export_and_obsolete_calls(T480* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/void r480make(T480* C,T332 a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r480echo(void);
/*CALL_PREFIX_NOT*/void r480type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/void r480non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/T6 r480use_current(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480static_simplify(T480* C);
/*CALL_PREFIX_NOT*/T0* r480extra_local_expanded(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/void r480function_and_argument_count_check(T480* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r480pretty(T480* C,T2 a1);
/*CALL_PREFIX_NOT*/T6 r480side_effect_free(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480non_void_no_dispatch_type(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480inline_with(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r480twin(T480* C);
/*CALL_PREFIX_NOT*/void r480bracketed_pretty(T480* C,T2 a1);
/*CALL_PREFIX_NOT*/void r480accept(T480* C,T0* a1);
/*CALL_PREFIX_NOT*/T332 r480start_position(T480* C);
/*CALL_PREFIX_NOT*/T6 r480is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/T395*create395make(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/T0* r395to_expression(T395* C);
/*ASSIGNMENT_TEST*/void r395make(T395* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r395pretty(T395* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r395simplify(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r395specialize_2(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r395static_simplify(T395* C);
/*ASSIGNMENT_TEST*/T0* r395specialize_in(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/void r395inline_dynamic_dispatch_(T395* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/void r395safety_check(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/T6 r395static_left_type_mark(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r395specialize_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r395with_writable(T395* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T6 r395is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/void r395accept(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r395adapt_for(T395* C,T0* a1);
extern T0*oBC395declaration_type;
extern int fBC395declaration_type;
/*ASSIGNMENT_TEST*/T0* r395declaration_type(void);
/*ASSIGNMENT_TEST*/T0* r395collect(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/void r395pretty_target(T395* C,T2 a1);
/*ASSIGNMENT_TEST*/T332 r395start_position(T395* C);
/*ASSIGNMENT_TEST*/T0* r395twin(T395* C);
/*ASSIGNMENT_TEST*/T0* r395written_declaration_type_mark(void);
/*ASSIGNMENT_TEST*/T6 r395use_current(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/void r395bracketed_pretty(T395* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r395non_void_no_dispatch_type(T0* a1);
/*ASSIGNMENT_TEST*/T6 r395side_effect_free(T395* C,T0* a1);
/*ASSIGNMENT_TEST*/void r395with_type_mark(T395* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T0* r395resolve_in(T0* a1);
/*ASSIGNMENT_TEST*/T0* r395to_instruction(T395* C);
/*OPEN_OPERAND*/T0* r467to_expression(T467* C);
/*OPEN_OPERAND*/void r467question_mark(T467* C,T332 a1);
/*OPEN_OPERAND*/void r467pretty(T467* C,T2 a1);
/*OPEN_OPERAND*/T0* r467static_simplify(T467* C);
/*OPEN_OPERAND*/T0* r467specialize_in(T467* C,T0* a1);
/*OPEN_OPERAND*/void r467inline_dynamic_dispatch_(T467* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/void r467type_holder(T467* C,T332 a1,T0* a2);
/*OPEN_OPERAND*/T0* r467specialize_thru(T467* C,T0* a1,T0* a2,T0* a3);
/*OPEN_OPERAND*/void r467update_resolved_memory(T467* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/T6 r467is_stored_in_some_local_variable(void);
/*OPEN_OPERAND*/void r467accept(T467* C,T0* a1);
/*OPEN_OPERAND*/T0* r467declaration_type(T467* C);
/*OPEN_OPERAND*/void r467pretty_target(T467* C,T2 a1);
/*OPEN_OPERAND*/T0* r467twin(T467* C);
/*OPEN_OPERAND*/T0* r467written_declaration_type_mark(void);
/*OPEN_OPERAND*/T6 r467use_current(T0* a1);
/*OPEN_OPERAND*/void r467bracketed_pretty(T467* C,T2 a1);
/*OPEN_OPERAND*/T0* r467non_void_no_dispatch_type(T0* a1);
/*OPEN_OPERAND*/T6 r467side_effect_free(T0* a1);
/*OPEN_OPERAND*/T0* r467resolve_in(T467* C,T0* a1);
/*OPEN_OPERAND*/T0* r467to_instruction(T467* C);
/*OPEN_OPERAND*/T0* r467current_or_twin_init(T467* C,T0* a1);
/*INTEGER_CONSTANT*/T365*create365make(T11 a1,T332 a2);
/*INTEGER_CONSTANT*/T365*create365with(T11 a1,T332 a2,T0* a3);
/*INTEGER_CONSTANT*/void r365hexadecimal(T365* C,T332 a1,T0* a2,T1 a3,T6 a4,T11 a5);
/*INTEGER_CONSTANT*/T0* r365to_expression(T365* C);
/*INTEGER_CONSTANT*/void r365make(T365* C,T11 a1,T332 a2);
/*INTEGER_CONSTANT*/T0* r365to_real_constant(T365* C);
/*INTEGER_CONSTANT*/void r365pretty(T365* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r365simplify(T365* C,T0* a1);
/*INTEGER_CONSTANT*/T6 r365extra_bracket_flag(T365* C);
/*INTEGER_CONSTANT*/void r365set_value(T365* C,T11 a1);
/*INTEGER_CONSTANT*/T0* r365static_simplify(T365* C);
/*INTEGER_CONSTANT*/void r365inline_dynamic_dispatch_(T365* C,T0* a1,T0* a2);
/*INTEGER_CONSTANT*/void r365special(T365* C,T332 a1,T0* a2,T0* a3,T11 a4);
/*INTEGER_CONSTANT*/T6 r365is_stored_in_some_local_variable(void);
/*INTEGER_CONSTANT*/void r365accept(T365* C,T0* a1);
/*INTEGER_CONSTANT*/void r365with(T365* C,T11 a1,T332 a2,T0* a3);
/*INTEGER_CONSTANT*/T0* r365result_type(T365* C);
/*INTEGER_CONSTANT*/T0* r365declaration_type(T365* C);
/*INTEGER_CONSTANT*/T0* r365collect(T365* C,T0* a1);
/*INTEGER_CONSTANT*/void r365pretty_target(T365* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r365twin(T365* C);
/*INTEGER_CONSTANT*/T0* r365written_declaration_type_mark(void);
/*INTEGER_CONSTANT*/T6 r365use_current(T0* a1);
/*INTEGER_CONSTANT*/void r365bracketed_pretty(T365* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r365non_void_no_dispatch_type(T365* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r365to_string(T365* C);
/*INTEGER_CONSTANT*/T6 r365side_effect_free(T0* a1);
/*INTEGER_CONSTANT*/void r365append_in(T365* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r365resolve_in(T365* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r365to_instruction(T365* C);
/*INTEGER_CONSTANT*/void r365_P_366_pretty_target(T365* C,T2 a1);
/*REAL_CONSTANT*/T0* r468to_expression(T468* C);
/*REAL_CONSTANT*/void r468make(T468* C,T332 a1,T0* a2,T0* a3);
/*REAL_CONSTANT*/void r468pretty(T468* C,T2 a1);
/*REAL_CONSTANT*/T0* r468simplify(T468* C,T0* a1);
/*REAL_CONSTANT*/T0* r468static_simplify(T468* C);
/*REAL_CONSTANT*/void r468inline_dynamic_dispatch_(T468* C,T0* a1,T0* a2);
/*REAL_CONSTANT*/T0* r468normalized_view(T468* C);
/*REAL_CONSTANT*/T6 r468is_stored_in_some_local_variable(void);
/*REAL_CONSTANT*/void r468accept(T468* C,T0* a1);
/*REAL_CONSTANT*/T0* r468declaration_type(T468* C);
/*REAL_CONSTANT*/T0* r468collect(T468* C,T0* a1);
/*REAL_CONSTANT*/void r468pretty_target(T468* C,T2 a1);
/*REAL_CONSTANT*/T0* r468twin(T468* C);
/*REAL_CONSTANT*/T0* r468written_declaration_type_mark(void);
/*REAL_CONSTANT*/T6 r468use_current(T0* a1);
/*REAL_CONSTANT*/void r468bracketed_pretty(T468* C,T2 a1);
/*REAL_CONSTANT*/T0* r468non_void_no_dispatch_type(T468* C,T0* a1);
/*REAL_CONSTANT*/T6 r468side_effect_free(T0* a1);
/*REAL_CONSTANT*/T0* r468resolve_in(T468* C,T0* a1);
/*REAL_CONSTANT*/T0* r468to_instruction(T468* C);
/*MANIFEST_GENERIC*/T6 r469use_current_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r469declaration_type(T469* C);
/*MANIFEST_GENERIC*/T0* r469adapt_for(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469resolve_in(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469collect(T469* C,T0* a1);
extern T0*oBC28manifest_make_name;
extern int fBC28manifest_make_name;
/*MANIFEST_GENERIC*/T0* r469manifest_make_name(void);
/*MANIFEST_GENERIC*/T6 r469is_equal(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469specialize_2(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469specialize_in(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/T0* r469written_declaration_type_mark(void);
/*MANIFEST_GENERIC*/T0* r469simplify(T469* C,T0* a1);
extern T0*oBC28manifest_semicolon_check_name;
extern int fBC28manifest_semicolon_check_name;
/*MANIFEST_GENERIC*/T0* r469manifest_semicolon_check_name(void);
/*MANIFEST_GENERIC*/void r469pretty_target(T469* C,T2 a1);
/*MANIFEST_GENERIC*/T0* r469specialize_2_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/void r469safety_check(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469to_expression(T469* C);
/*MANIFEST_GENERIC*/T0* r469specialize_thru(T469* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/void r469specialize_2_from_old_manifest_array(T469* C,T0* a1);
/*MANIFEST_GENERIC*/void r469inline_dynamic_dispatch_(T469* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r469to_instruction(T469* C);
/*MANIFEST_GENERIC*/T0* r469optional_arguments_specialize_2(T469* C,T0* a1);
/*MANIFEST_GENERIC*/void r469make(T469* C,T332 a1,T0* a2,T0* a3,T0* a4,T2 a5,T332 a6);
/*MANIFEST_GENERIC*/T0* r469calloc_name(void);
/*MANIFEST_GENERIC*/T2 r469hash_code(T469* C);
/*MANIFEST_GENERIC*/T0* r469simplify_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T6 r469use_current(T469* C,T0* a1);
/*MANIFEST_GENERIC*/void r469init(T469* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r469static_simplify(T469* C);
/*MANIFEST_GENERIC*/T0* r469specialize_in_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r469pretty(T469* C,T2 a1);
extern T0*oBC28manifest_put_name;
extern int fBC28manifest_put_name;
/*MANIFEST_GENERIC*/T0* r469manifest_put_name(void);
/*MANIFEST_GENERIC*/T6 r469side_effect_free(T0* a1);
/*MANIFEST_GENERIC*/T0* r469specialize_thru_of(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/T0* r469non_void_no_dispatch_type(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469item_list_specialize_2(T469* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r469twin(T469* C);
/*MANIFEST_GENERIC*/T0* r469adapt_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r469safety_check_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r469accept(T469* C,T0* a1);
extern T0*oBC28put_name;
extern int fBC28put_name;
/*MANIFEST_GENERIC*/T0* r469put_name(void);
/*MANIFEST_GENERIC*/T6 r469is_stored_in_some_local_variable(void);
/*EFFECTIVE_ARG_LIST*/T333*create333make_1(T0* a1);
/*EFFECTIVE_ARG_LIST*/T333*create333make_2(T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r333to_fake_tuple(T333* C);
/*EFFECTIVE_ARG_LIST*/void r333pretty(T333* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r333unused_expression_inline(T333* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r333simplify(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r333replace_item(T333* C,T2 a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r333specialize_2(T333* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EFFECTIVE_ARG_LIST*/void r333put(T333* C,T0* a1,T2 a2);
/*EFFECTIVE_ARG_LIST*/void r333static_simplify(T333* C);
/*EFFECTIVE_ARG_LIST*/T0* r333specialize_in(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r333specialize_2_on_expressions(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r333expression(T333* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r333safety_check(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r333add_last(T333* C,T0* a1);
extern T0*oBC333collecting_formal_sub_type;
extern int fBC333collecting_formal_sub_type;
/*EFFECTIVE_ARG_LIST*/T0* r333collecting_formal_sub_type(void);
/*EFFECTIVE_ARG_LIST*/T0* r333specialize_thru(T333* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/T6 r333is_static(T333* C);
/*EFFECTIVE_ARG_LIST*/T0* r333specialize_2_basic(T0* a1,T0* a2,T0* a3,T0* a4);
/*EFFECTIVE_ARG_LIST*/void r333accept(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r333adapt_for(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r333create_inline(T333* C);
/*EFFECTIVE_ARG_LIST*/T0* r333item(T333* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r333make_n(T333* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r333unused_expression_in(T333* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r333collect(T333* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/void r333simple_collect(T333* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T332 r333start_position(T333* C);
/*EFFECTIVE_ARG_LIST*/T0* r333twin(T333* C);
/*EFFECTIVE_ARG_LIST*/T6 r333use_current(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T6 r333side_effect_free(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r333inline_dynamic_dispatch(T333* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r333make_1(T333* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r333make_2(T333* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T2 r333count(T333* C);
extern T0*oBC333collecting_formal;
extern int fBC333collecting_formal;
/*EFFECTIVE_ARG_LIST*/T0* r333collecting_formal(void);
/*FUNCTION_CALL_0*/T0* r342declaration_type(T342* C);
/*FUNCTION_CALL_0*/T0* r342adapt_for(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342resolve_in(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342use_current_stack(void);
/*FUNCTION_CALL_0*/T0* r342collect(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342specialize_2(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342specialize_in(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342written_declaration_type_mark(void);
/*FUNCTION_CALL_0*/T0* r342simplify(T342* C,T0* a1);
/*FUNCTION_CALL_0*/void r342pretty_target(T342* C,T2 a1);
/*FUNCTION_CALL_0*/void r342safety_check(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342to_expression(T342* C);
/*FUNCTION_CALL_0*/T0* r342specialize_thru(T342* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T0* r342manifest_expression(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342feature_accumulator(void);
/*FUNCTION_CALL_0*/T6 r342simplify_limit_reached(T342* C);
/*FUNCTION_CALL_0*/void r342inline_dynamic_dispatch_(T342* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r342to_instruction(T342* C);
/*FUNCTION_CALL_0*/T0* r342current_or_twin_init(T342* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r342standard_check_export_and_obsolete_calls(T342* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/void r342make(T342* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r342echo(void);
/*FUNCTION_CALL_0*/void r342type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/void r342non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/T6 r342use_current(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342static_simplify(T342* C);
/*FUNCTION_CALL_0*/T0* r342extra_local_expanded(T342* C,T0* a1);
/*FUNCTION_CALL_0*/void r342function_and_argument_count_check(T342* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r342pretty(T342* C,T2 a1);
/*FUNCTION_CALL_0*/T6 r342side_effect_free(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342non_void_no_dispatch_type(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342inline_with(T342* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r342twin(T342* C);
/*FUNCTION_CALL_0*/void r342bracketed_pretty(T342* C,T2 a1);
/*FUNCTION_CALL_0*/void r342accept(T342* C,T0* a1);
/*FUNCTION_CALL_0*/void r342make_specialized(T342* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T332 r342start_position(T342* C);
/*FUNCTION_CALL_0*/T6 r342is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T6 r345is_balanced_operator(T0* a1);
/*FUNCTION_CALL_1*/T0* r345declaration_type(T345* C);
/*FUNCTION_CALL_1*/T0* r345adapt_for(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345resolve_in(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345use_current_stack(void);
/*FUNCTION_CALL_1*/T0* r345collect(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345specialize_2(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345specialize_in(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345written_declaration_type_mark(void);
/*FUNCTION_CALL_1*/T0* r345simplify(T345* C,T0* a1);
/*FUNCTION_CALL_1*/void r345pretty_target(T345* C,T2 a1);
/*FUNCTION_CALL_1*/void r345safety_check(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345to_expression(T345* C);
/*FUNCTION_CALL_1*/T0* r345specialize_thru(T345* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r345feature_accumulator(void);
/*FUNCTION_CALL_1*/void r345inline_dynamic_dispatch_(T345* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r345to_instruction(T345* C);
/*FUNCTION_CALL_1*/T0* r345current_or_twin_init(T345* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r345standard_check_export_and_obsolete_calls(T345* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r345make(T345* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r345arg1(T345* C);
/*FUNCTION_CALL_1*/void r345type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/void r345non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T6 r345use_current(T345* C,T0* a1);
/*FUNCTION_CALL_1*/void r345init(T345* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r345static_simplify(T345* C);
/*FUNCTION_CALL_1*/T0* r345extra_local_expanded(T345* C,T0* a1);
/*FUNCTION_CALL_1*/void r345function_and_argument_count_check(T345* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/void r345pretty(T345* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r345side_effect_free(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345non_void_no_dispatch_type(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345run_feature_for(T345* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r345inline_with(T345* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r345twin(T345* C);
/*FUNCTION_CALL_1*/void r345bracketed_pretty(T345* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r345is_question_mark_open_operand(T0* a1);
/*FUNCTION_CALL_1*/void r345accept(T345* C,T0* a1);
/*FUNCTION_CALL_1*/void r345make_specialized(T345* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T332 r345start_position(T345* C);
/*FUNCTION_CALL_1*/T6 r345is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T0* r345_P_344_declaration_type(T345* C);
/*FUNCTION_CALL_N*/T0* r347declaration_type(T347* C);
/*FUNCTION_CALL_N*/T0* r347adapt_for(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347resolve_in(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347use_current_stack(void);
/*FUNCTION_CALL_N*/T0* r347collect(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347specialize_2(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347specialize_in(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347written_declaration_type_mark(void);
/*FUNCTION_CALL_N*/T0* r347simplify(T347* C,T0* a1);
/*FUNCTION_CALL_N*/void r347pretty_target(T347* C,T2 a1);
/*FUNCTION_CALL_N*/void r347safety_check(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347to_expression(T347* C);
/*FUNCTION_CALL_N*/T0* r347specialize_thru(T347* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r347feature_accumulator(void);
/*FUNCTION_CALL_N*/void r347inline_dynamic_dispatch_(T347* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/T0* r347to_instruction(T347* C);
/*FUNCTION_CALL_N*/void r347standard_check_export_and_obsolete_calls(T347* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r347make(T347* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r347type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/void r347non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/T6 r347use_current(T347* C,T0* a1);
/*FUNCTION_CALL_N*/void r347init(T347* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r347static_simplify(T347* C);
/*FUNCTION_CALL_N*/T0* r347extra_local_expanded(T347* C,T0* a1);
/*FUNCTION_CALL_N*/void r347function_and_argument_count_check(T347* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/void r347pretty(T347* C,T2 a1);
/*FUNCTION_CALL_N*/T6 r347side_effect_free(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347non_void_no_dispatch_type(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347run_feature_for(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r347twin(T347* C);
/*FUNCTION_CALL_N*/void r347bracketed_pretty(T347* C,T2 a1);
/*FUNCTION_CALL_N*/T2 r347arg_count(T347* C);
/*FUNCTION_CALL_N*/void r347accept(T347* C,T0* a1);
/*FUNCTION_CALL_N*/T332 r347start_position(T347* C);
/*FUNCTION_CALL_N*/T6 r347is_stored_in_some_local_variable(void);
/*PROCEDURE_CALL_0*/T0* r336to_expression(T336* C);
/*PROCEDURE_CALL_0*/void r336make(T336* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r336pretty(T336* C,T2 a1);
/*PROCEDURE_CALL_0*/T0* r336simplify(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/void r336non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/T0* r336specialize_2(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/void r336standard_check_export_and_obsolete_calls(T336* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/T0* r336specialize_in(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/void r336inline_dynamic_dispatch_(T336* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r336safety_check(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r336run_feature_for(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r336specialize_thru(T336* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/void r336accept(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r336simplify_arguments(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r336adapt_for(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r336collect(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T332 r336start_position(T336* C);
/*PROCEDURE_CALL_0*/T0* r336use_current_stack(void);
/*PROCEDURE_CALL_0*/T0* r336twin(T336* C);
/*PROCEDURE_CALL_0*/T6 r336use_current(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/void r336type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/T6 r336side_effect_free(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r336arguments(void);
/*PROCEDURE_CALL_0*/T0* r336inline_dynamic_dispatch(T336* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r336inline_with(T336* C,T0* a1);
/*PROCEDURE_CALL_0*/void r336collect_create(T336* C,T0* a1,T0* a2,T332 a3);
/*PROCEDURE_CALL_0*/void r336procedure_and_argument_count_check(T336* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r336to_instruction(T336* C);
/*PROCEDURE_CALL_1*/T0* r340to_expression(T340* C);
/*PROCEDURE_CALL_1*/void r340make(T340* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r340pretty(T340* C,T2 a1);
/*PROCEDURE_CALL_1*/T0* r340simplify(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/void r340non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/T0* r340specialize_2(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/void r340standard_check_export_and_obsolete_calls(T340* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r340specialize_in(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/void r340inline_dynamic_dispatch_(T340* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r340arg1(T340* C);
/*PROCEDURE_CALL_1*/void r340safety_check(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r340run_feature_for(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/void r340init(T340* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r340specialize_thru(T340* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r340accept(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r340simplify_arguments(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r340adapt_for(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r340collect(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/T332 r340start_position(T340* C);
/*PROCEDURE_CALL_1*/T0* r340use_current_stack(void);
/*PROCEDURE_CALL_1*/T0* r340twin(T340* C);
/*PROCEDURE_CALL_1*/T6 r340use_current(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/void r340type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/T6 r340side_effect_free(T340* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r340inline_dynamic_dispatch(T340* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r340inline_with(T340* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/void r340collect_create(T340* C,T0* a1,T0* a2,T332 a3);
/*PROCEDURE_CALL_1*/void r340procedure_and_argument_count_check(T340* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r340to_instruction(T340* C);
/*PROCEDURE_CALL_N*/T0* r341to_expression(T341* C);
/*PROCEDURE_CALL_N*/T2 r341arg_count(T341* C);
/*PROCEDURE_CALL_N*/void r341make(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r341pretty(T341* C,T2 a1);
/*PROCEDURE_CALL_N*/T0* r341simplify(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/void r341non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/T0* r341specialize_2(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/void r341standard_check_export_and_obsolete_calls(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r341specialize_in(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/void r341inline_dynamic_dispatch_(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r341safety_check(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r341run_feature_for(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/void r341init(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r341specialize_thru(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r341accept(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r341inline_2(T341* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r341simplify_arguments(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r341adapt_for(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r341collect(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/T332 r341start_position(T341* C);
/*PROCEDURE_CALL_N*/T0* r341use_current_stack(void);
/*PROCEDURE_CALL_N*/T0* r341twin(T341* C);
/*PROCEDURE_CALL_N*/T6 r341use_current(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/void r341type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/T6 r341side_effect_free(T341* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r341inline_dynamic_dispatch(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r341inline_with(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r341collect_create(T341* C,T0* a1,T0* a2,T332 a3);
/*PROCEDURE_CALL_N*/void r341procedure_and_argument_count_check(T341* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r341to_instruction(T341* C);
/*CALL_PREFIX_PLUS*/T0* r482declaration_type(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482adapt_for(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482resolve_in(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482eiffel_parser(void);
/*CALL_PREFIX_PLUS*/T0* r482use_current_stack(void);
/*CALL_PREFIX_PLUS*/T0* r482collect(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482specialize_2(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482specialize_in(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482written_declaration_type_mark(void);
/*CALL_PREFIX_PLUS*/T0* r482simplify(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/void r482pretty_target(T482* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r482safety_check(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482to_expression(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482specialize_thru(T482* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/T0* r482manifest_expression(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482feature_accumulator(void);
/*CALL_PREFIX_PLUS*/T6 r482simplify_limit_reached(T482* C);
/*CALL_PREFIX_PLUS*/void r482inline_dynamic_dispatch_(T482* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r482to_instruction(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482current_or_twin_init(T482* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r482standard_check_export_and_obsolete_calls(T482* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/void r482make(T482* C,T332 a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r482echo(void);
/*CALL_PREFIX_PLUS*/void r482type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/void r482non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/T6 r482use_current(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482static_simplify(T482* C);
/*CALL_PREFIX_PLUS*/T0* r482extra_local_expanded(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/void r482function_and_argument_count_check(T482* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r482pretty(T482* C,T2 a1);
/*CALL_PREFIX_PLUS*/T6 r482side_effect_free(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482non_void_no_dispatch_type(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482inline_with(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r482twin(T482* C);
/*CALL_PREFIX_PLUS*/void r482bracketed_pretty(T482* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r482accept(T482* C,T0* a1);
/*CALL_PREFIX_PLUS*/T332 r482start_position(T482* C);
/*CALL_PREFIX_PLUS*/T6 r482is_stored_in_some_local_variable(void);
/*CALL_PREFIX_MINUS*/T0* r483declaration_type(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483adapt_for(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483resolve_in(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483eiffel_parser(void);
/*CALL_PREFIX_MINUS*/T0* r483use_current_stack(void);
/*CALL_PREFIX_MINUS*/T0* r483collect(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483specialize_2(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483specialize_in(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483written_declaration_type_mark(void);
/*CALL_PREFIX_MINUS*/T0* r483simplify(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/void r483pretty_target(T483* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r483safety_check(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483to_expression(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483specialize_thru(T483* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/T0* r483manifest_expression(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483feature_accumulator(void);
/*CALL_PREFIX_MINUS*/T6 r483simplify_limit_reached(T483* C);
/*CALL_PREFIX_MINUS*/void r483inline_dynamic_dispatch_(T483* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r483to_instruction(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483current_or_twin_init(T483* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r483standard_check_export_and_obsolete_calls(T483* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/void r483make(T483* C,T332 a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r483echo(void);
/*CALL_PREFIX_MINUS*/void r483type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/void r483non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/T6 r483use_current(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483static_simplify(T483* C);
/*CALL_PREFIX_MINUS*/T0* r483extra_local_expanded(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/void r483function_and_argument_count_check(T483* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r483pretty(T483* C,T2 a1);
/*CALL_PREFIX_MINUS*/T6 r483side_effect_free(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483non_void_no_dispatch_type(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483inline_with(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r483twin(T483* C);
/*CALL_PREFIX_MINUS*/void r483bracketed_pretty(T483* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r483accept(T483* C,T0* a1);
/*CALL_PREFIX_MINUS*/T332 r483start_position(T483* C);
/*CALL_PREFIX_MINUS*/T6 r483is_stored_in_some_local_variable(void);
/*CALL_PREFIX_FREEOP*/T0* r484declaration_type(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484adapt_for(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484resolve_in(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484use_current_stack(void);
/*CALL_PREFIX_FREEOP*/T0* r484collect(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484specialize_2(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484specialize_in(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484written_declaration_type_mark(void);
/*CALL_PREFIX_FREEOP*/T0* r484simplify(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/void r484pretty_target(T484* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r484safety_check(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484to_expression(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484specialize_thru(T484* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/T0* r484manifest_expression(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484feature_accumulator(void);
/*CALL_PREFIX_FREEOP*/T6 r484simplify_limit_reached(T484* C);
/*CALL_PREFIX_FREEOP*/void r484inline_dynamic_dispatch_(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r484to_instruction(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484current_or_twin_init(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r484standard_check_export_and_obsolete_calls(T484* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/void r484make(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r484echo(void);
/*CALL_PREFIX_FREEOP*/void r484type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/void r484non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/T6 r484use_current(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484static_simplify(T484* C);
/*CALL_PREFIX_FREEOP*/T0* r484extra_local_expanded(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/void r484function_and_argument_count_check(T484* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r484pretty(T484* C,T2 a1);
/*CALL_PREFIX_FREEOP*/T6 r484side_effect_free(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484non_void_no_dispatch_type(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484inline_with(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r484twin(T484* C);
/*CALL_PREFIX_FREEOP*/void r484bracketed_pretty(T484* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r484accept(T484* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T332 r484start_position(T484* C);
/*CALL_PREFIX_FREEOP*/T6 r484is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/T0* r473to_expression(T473* C);
/*MANIFEST_TUPLE*/void r473make(T473* C,T332 a1,T0* a2);
/*MANIFEST_TUPLE*/void r473pretty(T473* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r473simplify(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473create_expression_for(T473* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r473specialize_2(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473static_simplify(T473* C);
/*MANIFEST_TUPLE*/T0* r473specialize_in(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473safety_check(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473init(T473* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r473specialize_thru(T473* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_TUPLE*/T6 r473is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/void r473accept(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473adapt_for(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473pretty_target(T473* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r473twin(T473* C);
/*MANIFEST_TUPLE*/T0* r473written_declaration_type_mark(void);
/*MANIFEST_TUPLE*/T6 r473use_current(T473* C,T0* a1);
/*MANIFEST_TUPLE*/void r473bracketed_pretty(T473* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r473non_void_no_dispatch_type(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T6 r473side_effect_free(T0* a1);
/*MANIFEST_TUPLE*/T0* r473resolve_in(T473* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r473to_instruction(T473* C);
/*MANIFEST_TUPLE*/T0* r473current_or_twin_init(T473* C,T0* a1,T0* a2);
/*E_TRUE*/T379*create379make(T332 a1);
/*E_TRUE*/T0* r379to_expression(T379* C);
/*E_TRUE*/void r379make(T379* C,T332 a1);
/*E_TRUE*/void r379pretty(T2 a1);
/*E_TRUE*/T0* r379simplify(T379* C,T0* a1);
/*E_TRUE*/T0* r379static_simplify(T379* C);
/*E_TRUE*/void r379inline_dynamic_dispatch_(T379* C,T0* a1,T0* a2);
/*E_TRUE*/T6 r379is_stored_in_some_local_variable(void);
/*E_TRUE*/void r379accept(T379* C,T0* a1);
extern T0*oBC380declaration_type;
extern int fBC380declaration_type;
/*E_TRUE*/T0* r379declaration_type(void);
/*E_TRUE*/T0* r379collect(T0* a1);
/*E_TRUE*/void r379pretty_target(T2 a1);
/*E_TRUE*/T0* r379twin(T379* C);
/*E_TRUE*/T0* r379written_declaration_type_mark(void);
/*E_TRUE*/T6 r379use_current(T0* a1);
/*E_TRUE*/void r379bracketed_pretty(T2 a1);
/*E_TRUE*/T0* r379non_void_no_dispatch_type(T0* a1);
/*E_TRUE*/T6 r379side_effect_free(T0* a1);
/*E_TRUE*/T0* r379resolve_in(T0* a1);
/*E_TRUE*/T0* r379to_instruction(T379* C);
/*E_FALSE*/T450*create450make(T332 a1);
/*E_FALSE*/T0* r450to_expression(T450* C);
/*E_FALSE*/void r450make(T450* C,T332 a1);
/*E_FALSE*/void r450pretty(T2 a1);
/*E_FALSE*/T0* r450simplify(T450* C,T0* a1);
/*E_FALSE*/T0* r450static_simplify(T450* C);
/*E_FALSE*/void r450inline_dynamic_dispatch_(T450* C,T0* a1,T0* a2);
/*E_FALSE*/T6 r450is_stored_in_some_local_variable(void);
/*E_FALSE*/void r450accept(T450* C,T0* a1);
/*E_FALSE*/T0* r450declaration_type(void);
/*E_FALSE*/T0* r450collect(T0* a1);
/*E_FALSE*/void r450pretty_target(T2 a1);
/*E_FALSE*/T0* r450twin(T450* C);
/*E_FALSE*/T0* r450written_declaration_type_mark(void);
/*E_FALSE*/T6 r450use_current(T0* a1);
/*E_FALSE*/void r450bracketed_pretty(T2 a1);
/*E_FALSE*/T0* r450non_void_no_dispatch_type(T0* a1);
/*E_FALSE*/T6 r450side_effect_free(T0* a1);
/*E_FALSE*/T0* r450resolve_in(T0* a1);
/*E_FALSE*/T0* r450to_instruction(T450* C);
/*CHARACTER_CONSTANT*/T456*create456with(T332 a1,T3 a2);
/*CHARACTER_CONSTANT*/T0* r456to_expression(T456* C);
/*CHARACTER_CONSTANT*/void r456make(T456* C,T332 a1,T3 a2,T0* a3);
/*CHARACTER_CONSTANT*/void r456character_coding(T3 a1,T0* a2);
/*CHARACTER_CONSTANT*/void r456pretty(T456* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r456simplify(T456* C,T0* a1);
/*CHARACTER_CONSTANT*/T0* r456static_simplify(T456* C);
/*CHARACTER_CONSTANT*/void r456inline_dynamic_dispatch_(T456* C,T0* a1,T0* a2);
/*CHARACTER_CONSTANT*/T6 r456is_stored_in_some_local_variable(void);
/*CHARACTER_CONSTANT*/void r456accept(T456* C,T0* a1);
/*CHARACTER_CONSTANT*/void r456with(T456* C,T332 a1,T3 a2);
extern T0*oBC456declaration_type;
extern int fBC456declaration_type;
/*CHARACTER_CONSTANT*/T0* r456declaration_type(void);
/*CHARACTER_CONSTANT*/T0* r456collect(T0* a1);
/*CHARACTER_CONSTANT*/void r456pretty_target(T456* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r456twin(T456* C);
/*CHARACTER_CONSTANT*/T0* r456written_declaration_type_mark(void);
/*CHARACTER_CONSTANT*/T6 r456use_current(T0* a1);
/*CHARACTER_CONSTANT*/void r456bracketed_pretty(T456* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r456non_void_no_dispatch_type(T0* a1);
/*CHARACTER_CONSTANT*/T0* r456to_string(T456* C);
/*CHARACTER_CONSTANT*/T6 r456side_effect_free(T0* a1);
/*CHARACTER_CONSTANT*/T0* r456resolve_in(T0* a1);
/*CHARACTER_CONSTANT*/T0* r456to_instruction(T456* C);
/*PRECURSOR_EXPRESSION*/T0* r474to_expression(T474* C);
/*PRECURSOR_EXPRESSION*/void r474make(T474* C,T332 a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T0* r474simplify(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474specialize_2(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474static_simplify(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474specialize_in(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r474inline_dynamic_dispatch_(T474* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r474safety_check(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r474init(T474* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r474pretty_(T474* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r474specialize_thru(T474* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T6 r474is_stored_in_some_local_variable(void);
/*PRECURSOR_EXPRESSION*/void r474accept(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474adapt_for(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474declaration_type(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474feature_accumulator(void);
/*PRECURSOR_EXPRESSION*/T0* r474collect(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r474pretty_target(T474* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r474twin(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474written_declaration_type_mark(void);
/*PRECURSOR_EXPRESSION*/T6 r474use_current(T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474non_void_no_dispatch_type(T0* a1);
/*PRECURSOR_EXPRESSION*/T6 r474side_effect_free(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474resolve_in(T474* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r474to_instruction(T474* C);
/*PRECURSOR_EXPRESSION*/T0* r474current_or_twin_init(T474* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r508to_expression(T508* C);
/*FAKE_TARGET*/void r508make(T508* C,T332 a1,T0* a2);
/*FAKE_TARGET*/void r508pretty(T508* C,T2 a1);
/*FAKE_TARGET*/T0* r508static_simplify(T508* C);
/*FAKE_TARGET*/T0* r508specialize_in(T508* C,T0* a1);
/*FAKE_TARGET*/void r508inline_dynamic_dispatch_(T508* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r508specialize_thru(T508* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TARGET*/T6 r508is_stored_in_some_local_variable(void);
/*FAKE_TARGET*/void r508accept(T508* C,T0* a1);
/*FAKE_TARGET*/T0* r508adapt_for(T508* C,T0* a1);
/*FAKE_TARGET*/T0* r508declaration_type(T508* C);
/*FAKE_TARGET*/void r508pretty_target(T508* C,T2 a1);
/*FAKE_TARGET*/T0* r508twin(T508* C);
/*FAKE_TARGET*/T0* r508written_declaration_type_mark(void);
/*FAKE_TARGET*/T6 r508use_current(T0* a1);
/*FAKE_TARGET*/void r508bracketed_pretty(T508* C,T2 a1);
/*FAKE_TARGET*/T0* r508non_void_no_dispatch_type(T0* a1);
/*FAKE_TARGET*/T6 r508side_effect_free(T0* a1);
/*FAKE_TARGET*/T0* r508resolve_in(T508* C,T0* a1);
/*FAKE_TARGET*/T0* r508to_instruction(T508* C);
/*FAKE_TARGET*/T0* r508current_or_twin_init(T508* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509to_expression(T509* C);
/*CREATE_EXPRESSION*/void r509make(T509* C,T332 a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T0* r509created_type(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509pretty(T509* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r509simplify(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509specialize_2(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509default_user_expanded(T509* C,T332 a1,T0* a2);
/*CREATE_EXPRESSION*/void r509specialize_2_checks(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509static_simplify(T509* C);
/*CREATE_EXPRESSION*/T0* r509specialize_in(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509inline_dynamic_dispatch_(T509* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/void r509safety_check(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509init(T509* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/T0* r509extra_local_expanded(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509specialize_thru(T509* C,T0* a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T6 r509is_stored_in_some_local_variable(void);
/*CREATE_EXPRESSION*/void r509accept(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509adapt_for(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509declaration_type(T509* C);
/*CREATE_EXPRESSION*/T0* r509default_create_name(void);
/*CREATE_EXPRESSION*/T0* r509collect(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509pretty_target(T509* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r509any_default_create_fs(void);
/*CREATE_EXPRESSION*/T0* r509twin(T509* C);
/*CREATE_EXPRESSION*/T0* r509written_declaration_type_mark(void);
/*CREATE_EXPRESSION*/T0* r509creation_procedure(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r509use_current(T509* C,T0* a1);
/*CREATE_EXPRESSION*/void r509bracketed_pretty(T509* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r509non_void_no_dispatch_type(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r509side_effect_free(T0* a1);
/*CREATE_EXPRESSION*/T0* r509arguments(T509* C);
/*CREATE_EXPRESSION*/T0* r509resolve_in(T509* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r509to_instruction(T509* C);
/*CREATE_EXPRESSION*/T0* r509current_or_twin_init(T509* C,T0* a1,T0* a2);
/*ARGUMENT_NAME1*/void r447make(T447* C,T332 a1,T0* a2);
/*ARGUMENT_NAME1*/T0* r447specialize_in(T447* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r447specialize_thru(T447* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME1*/T0* r447adapt_for(T447* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r447collect(T447* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r447twin(T447* C);
/*ARGUMENT_NAME1*/T0* r447resolve_in(T447* C,T0* a1);
/*ARGUMENT_NAME1*/void r447name_clash_check_(T447* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/void r448make(T448* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/T0* r448specialize_in(T448* C,T0* a1);
/*DECLARATION_GROUP*/void r448append_in_local_var_list(T448* C,T0* a1);
/*DECLARATION_GROUP*/T0* r448specialize_thru(T448* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_GROUP*/void r448append_in_formal_arg_list(T448* C,T0* a1);
/*DECLARATION_GROUP*/T0* r448twin(T448* C);
/*DECLARATION_GROUP*/void r448pretty_in(T448* C,T0* a1);
/*DECLARATION_GROUP*/T2 r448count(T448* C);
/*DECLARATION_1*/void r385make(T385* C,T0* a1,T0* a2);
/*DECLARATION_1*/T0* r385specialize_in(T385* C,T0* a1);
/*DECLARATION_1*/void r385append_in_local_var_list(T385* C,T0* a1);
/*DECLARATION_1*/T0* r385specialize_thru(T385* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_1*/void r385append_in_formal_arg_list(T385* C,T0* a1);
/*DECLARATION_1*/T0* r385twin(T385* C);
/*DECLARATION_1*/void r385pretty_in(T385* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r654to_expression(T654* C);
/*REQUIRE_ASSERTION*/void r654make(T654* C,T332 a1,T6 a2,T0* a3,T0* a4);
/*REQUIRE_ASSERTION*/void r654pretty(T654* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r654simplify(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r654specialize_2(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r654specialize_in(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/void r654inline_dynamic_dispatch_(T654* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r654add_parent_require(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T6 r654is_always_true(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/void r654safety_check(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/void r654from_parents(T654* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/T6 r654has_item_located_at(T654* C,T332 a1);
/*REQUIRE_ASSERTION*/T0* r654specialize_thru(T654* C,T0* a1,T0* a2,T0* a3);
/*REQUIRE_ASSERTION*/void r654accept(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r654adapt_for(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r654item(T654* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r654collect(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T332 r654start_position(T654* C);
/*REQUIRE_ASSERTION*/T0* r654twin(T654* C);
/*REQUIRE_ASSERTION*/T6 r654use_current(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/void r654crash(T654* C);
/*REQUIRE_ASSERTION*/T6 r654side_effect_free(T654* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r654inline_dynamic_dispatch(T654* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r654not_yet_implemented(T654* C);
/*REQUIRE_ASSERTION*/T2 r654count(T654* C);
/*REQUIRE_ASSERTION*/T0* r654to_instruction(T654* C);
/*ASSERTION*/T0* r412to_expression(T412* C);
/*ASSERTION*/void r412make(T412* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/void r412pretty(T412* C,T2 a1);
/*ASSERTION*/void r412specialize_2_check(T412* C,T0* a1);
/*ASSERTION*/T0* r412specialize_2(T412* C,T0* a1);
/*ASSERTION*/T0* r412static_simplify(T412* C);
/*ASSERTION*/T0* r412specialize_in(T412* C,T0* a1);
/*ASSERTION*/void r412inline_dynamic_dispatch_(T412* C,T0* a1,T0* a2);
/*ASSERTION*/T6 r412is_always_true(T412* C,T0* a1);
/*ASSERTION*/void r412safety_check(T412* C,T0* a1);
/*ASSERTION*/T0* r412specialize_thru(T412* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/T6 r412is_static(T412* C);
/*ASSERTION*/T6 r412is_stored_in_some_local_variable(void);
/*ASSERTION*/void r412accept(T412* C,T0* a1);
/*ASSERTION*/T0* r412adapt_for(T412* C,T0* a1);
/*ASSERTION*/T0* r412collect(T412* C,T0* a1);
/*ASSERTION*/T332 r412start_position(T412* C);
/*ASSERTION*/T0* r412twin(T412* C);
/*ASSERTION*/T0* r412written_declaration_type_mark(void);
/*ASSERTION*/T6 r412use_current(T412* C,T0* a1);
/*ASSERTION*/T0* r412non_void_no_dispatch_type(T0* a1);
/*ASSERTION*/T6 r412side_effect_free(T412* C,T0* a1);
/*ASSERTION*/T0* r412resolve_in(T0* a1);
/*ASSERTION*/T0* r412to_instruction(T412* C);
/*ASSERTION*/T0* r412current_or_twin_init(T412* C,T0* a1);
/*LOCAL_NAME1*/void r382make(T382* C,T332 a1,T0* a2);
/*LOCAL_NAME1*/T0* r382specialize_in(T382* C,T0* a1);
/*LOCAL_NAME1*/void r382parsing_reference_counter_increment(T382* C);
/*LOCAL_NAME1*/void r382live_reference_counter_increment(T382* C);
/*LOCAL_NAME1*/T6 r382is_used(T382* C,T0* a1);
/*LOCAL_NAME1*/T0* r382specialize_thru(T382* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME1*/T0* r382adapt_for(T382* C,T0* a1);
/*LOCAL_NAME1*/T0* r382collect(T382* C,T0* a1);
/*LOCAL_NAME1*/T0* r382twin(T382* C);
/*LOCAL_NAME1*/void r382usage_warning_check(T382* C,T0* a1);
/*LOCAL_NAME1*/void r382name_clash_check_(T382* C,T0* a1,T0* a2);
/*LOCAL_VAR_LIST*/void r386make(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/void r386pretty(T386* C);
/*LOCAL_VAR_LIST*/T0* r386specialize_in(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r386rank_of(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/void r386add_last(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r386specialize_thru(T386* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_VAR_LIST*/void r386accept(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r386adapt_for(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/void r386name_clash_check(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r386compute_flat_list_count_by_using_list(T386* C);
/*LOCAL_VAR_LIST*/void r386collect(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r386twin(T386* C);
/*LOCAL_VAR_LIST*/T0* r386type_mark(T386* C,T2 a1);
/*LOCAL_VAR_LIST*/T6 r386side_effect_free(T386* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r386count(T386* C);
/*FEATURE_NAME_LIST*/void r442fe_multiple(T0* a1,T0* a2);
/*FEATURE_NAME_LIST*/void r442all_positions_in_error_handler(T442* C);
/*FEATURE_NAME_LIST*/T0* r442internal_name(T442* C,T0* a1);
/*FEATURE_NAME_LIST*/void r442add_last(T442* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r442item(T442* C,T2 a1);
/*FEATURE_NAME_LIST*/void r442make_n(T442* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r442index_of(T442* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r442root_creation_search(T442* C,T0* a1);
/*FEATURE_NAME_LIST*/T6 r442has_make(T442* C);
/*FEATURE_NAME_LIST*/void r442make_1(T442* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r442count(T442* C);
/*FEATURE_NAME_LIST*/T6 r442has(T442* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510to_expression(T510* C);
/*CHECK_COMPOUND*/void r510make(T510* C,T332 a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/void r510pretty(T510* C,T2 a1);
/*CHECK_COMPOUND*/T0* r510simplify(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510specialize_2(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510specialize_in(T510* C,T0* a1);
/*CHECK_COMPOUND*/void r510inline_dynamic_dispatch_(T510* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/void r510safety_check(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510specialize_thru(T510* C,T0* a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/T6 r510must_be_generated(T510* C,T0* a1);
/*CHECK_COMPOUND*/void r510accept(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510adapt_for(T510* C,T0* a1);
/*CHECK_COMPOUND*/T0* r510collect(T510* C,T0* a1);
/*CHECK_COMPOUND*/T332 r510start_position(T510* C);
/*CHECK_COMPOUND*/T0* r510twin(T510* C);
/*CHECK_COMPOUND*/T6 r510use_current(T510* C,T0* a1);
/*CHECK_COMPOUND*/T6 r510side_effect_free(T0* a1);
/*CHECK_COMPOUND*/T0* r510inline_dynamic_dispatch(T510* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/T0* r510to_instruction(T510* C);
/*CHECK_COMPOUND*/T0* r510current_or_twin_init(T510* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470to_expression(T470* C);
/*DEBUG_COMPOUND*/void r470make(T470* C,T332 a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/void r470pretty(T470* C,T2 a1);
/*DEBUG_COMPOUND*/T0* r470simplify(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470specialize_2(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470specialize_in(T470* C,T0* a1);
/*DEBUG_COMPOUND*/void r470inline_dynamic_dispatch_(T470* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/void r470safety_check(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470specialize_thru(T470* C,T0* a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/T6 r470must_be_generated(T470* C,T0* a1);
/*DEBUG_COMPOUND*/void r470accept(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470adapt_for(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470collect(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470twin(T470* C);
/*DEBUG_COMPOUND*/T6 r470use_current(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T6 r470side_effect_free(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470inline_dynamic_dispatch(T470* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/T6 r470match_debug_key(T470* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r470to_instruction(T470* C);
/*DEBUG_COMPOUND*/T0* r470current_or_twin_init(T470* C,T0* a1);
/*IFTHEN*/T406*create406make(T332 a1,T0* a2,T0* a3);
/*IFTHEN*/T0* r406to_expression(T406* C);
/*IFTHEN*/void r406make(T406* C,T332 a1,T0* a2,T0* a3);
/*IFTHEN*/void r406pretty(T406* C,T2 a1);
/*IFTHEN*/T0* r406simplify(T406* C,T0* a1);
/*IFTHEN*/T0* r406specialize_2(T406* C,T0* a1);
/*IFTHEN*/void r406pretty_end_if(T2 a1);
/*IFTHEN*/T0* r406specialize_in(T406* C,T0* a1);
/*IFTHEN*/void r406inline_dynamic_dispatch_(T406* C,T0* a1,T0* a2);
/*IFTHEN*/void r406safety_check(T406* C,T0* a1);
/*IFTHEN*/void r406init(T406* C,T0* a1,T0* a2);
/*IFTHEN*/void r406pretty_(T406* C,T2 a1,T0* a2);
/*IFTHEN*/void r406specialize_2_check_(T406* C,T0* a1);
/*IFTHEN*/T0* r406specialize_thru(T406* C,T0* a1,T0* a2,T0* a3);
/*IFTHEN*/void r406accept(T406* C,T0* a1);
/*IFTHEN*/T0* r406adapt_for(T406* C,T0* a1);
/*IFTHEN*/T0* r406collect(T406* C,T0* a1);
/*IFTHEN*/T0* r406twin(T406* C);
/*IFTHEN*/T6 r406use_current(T406* C,T0* a1);
/*IFTHEN*/T6 r406side_effect_free(T0* a1);
/*IFTHEN*/T0* r406inline_dynamic_dispatch(T406* C,T0* a1,T0* a2);
/*IFTHEN*/T0* r406to_instruction(T406* C);
/*IFTHEN*/T0* r406current_or_twin_init(T406* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r392to_expression(T392* C);
/*IFTHENELSE*/void r392pretty(T392* C,T2 a1);
/*IFTHENELSE*/T0* r392simplify(T392* C,T0* a1);
/*IFTHENELSE*/void r392specialize_2_check(T392* C,T0* a1);
/*IFTHENELSE*/void r392inline_dd(T392* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*IFTHENELSE*/T0* r392specialize_2(T392* C,T0* a1);
/*IFTHENELSE*/void r392pretty_end_if(T2 a1);
/*IFTHENELSE*/T0* r392specialize_in(T392* C,T0* a1);
/*IFTHENELSE*/void r392inline_dynamic_dispatch_(T392* C,T0* a1,T0* a2);
/*IFTHENELSE*/void r392safety_check(T392* C,T0* a1);
/*IFTHENELSE*/void r392init(T392* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r392pretty_(T392* C,T2 a1,T0* a2);
/*IFTHENELSE*/void r392specialize_2_check_(T392* C,T0* a1);
/*IFTHENELSE*/T0* r392specialize_thru(T392* C,T0* a1,T0* a2,T0* a3);
/*IFTHENELSE*/T0* r392simplify_elseif_list(T0* a1,T6 a2,T0* a3);
/*IFTHENELSE*/void r392accept(T392* C,T0* a1);
/*IFTHENELSE*/T0* r392adapt_for(T392* C,T0* a1);
/*IFTHENELSE*/T0* r392collect(T392* C,T0* a1);
/*IFTHENELSE*/T0* r392twin(T392* C);
/*IFTHENELSE*/T6 r392use_current(T392* C,T0* a1);
/*IFTHENELSE*/T6 r392side_effect_free(T0* a1);
/*IFTHENELSE*/void r392with_else(T392* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r392with_elseif(T392* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/T0* r392inline_dynamic_dispatch(T392* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r392to_instruction(T392* C);
/*IFTHENELSE*/void r392with_elseif_and_else(T392* C,T332 a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*IFTHENELSE*/T0* r392current_or_twin_init(T392* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WHEN_CLAUSE*/T0* r351specialize_2_string(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351adapt_for(T351* C,T0* a1);
/*WHEN_CLAUSE*/void r351not_yet_implemented(T351* C);
/*WHEN_CLAUSE*/T0* r351collect(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351specialize_2(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351specialize_in(T351* C,T0* a1);
/*WHEN_CLAUSE*/T6 r351validity_check_continued(T351* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r351make_dynamic_dispatch(T351* C,T0* a1,T332 a2,T0* a3);
/*WHEN_CLAUSE*/T0* r351simplify(T351* C,T0* a1);
/*WHEN_CLAUSE*/T6 r351match_value(T351* C,T2 a1);
/*WHEN_CLAUSE*/void r351safety_check(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351specialize_2_integer(T351* C,T0* a1);
/*WHEN_CLAUSE*/void r351force_internal_character_values(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351to_expression(T351* C);
/*WHEN_CLAUSE*/void r351add_value(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351specialize_thru(T351* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r351inline_dynamic_dispatch_(T351* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T0* r351to_instruction(T351* C);
/*WHEN_CLAUSE*/void r351make(T351* C,T0* a1,T332 a2,T0* a3);
/*WHEN_CLAUSE*/void r351make_strippable(T351* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r351is_live(T351* C,T0* a1);
/*WHEN_CLAUSE*/void r351no_manifest_string_slice_check(T0* a1);
/*WHEN_CLAUSE*/void r351crash(T351* C);
/*WHEN_CLAUSE*/T6 r351is_more_complex_than(T351* C,T0* a1);
/*WHEN_CLAUSE*/void r351force_internal_integer_values(T351* C,T0* a1);
/*WHEN_CLAUSE*/T2 r351parser_add_value(T351* C,T2 a1,T0* a2);
/*WHEN_CLAUSE*/T6 r351use_current(T351* C,T0* a1);
/*WHEN_CLAUSE*/void r351init(T351* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r351validity_check(T351* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r351parser_make(T351* C,T332 a1,T0* a2);
/*WHEN_CLAUSE*/void r351pretty(T351* C,T2 a1);
/*WHEN_CLAUSE*/T0* r351strip_or_set_value(T351* C,T2 a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r351inline_dynamic_dispatch(T351* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r351side_effect_free(T0* a1);
/*WHEN_CLAUSE*/T0* r351twin(T351* C);
/*WHEN_CLAUSE*/void r351compute_values(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351specialize_2_when_items_integer(T351* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T2 r351largest_range_of_values(T351* C);
/*WHEN_CLAUSE*/void r351add_slice(T351* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r351accept(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351specialize_2_character(T351* C,T0* a1);
/*WHEN_CLAUSE*/T0* r351create_merged_with(T351* C,T0* a1);
/*IMPLICIT_CURRENT*/T363*create363make(T332 a1);
/*IMPLICIT_CURRENT*/T0* r363to_expression(T363* C);
/*IMPLICIT_CURRENT*/void r363make(T363* C,T332 a1);
/*IMPLICIT_CURRENT*/void r363pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r363simplify(T363* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r363static_simplify(T363* C);
/*IMPLICIT_CURRENT*/T0* r363specialize_in(T363* C,T0* a1);
/*IMPLICIT_CURRENT*/void r363inline_dynamic_dispatch_(T363* C,T0* a1,T0* a2);
/*IMPLICIT_CURRENT*/T6 r363is_stored_in_some_local_variable(void);
/*IMPLICIT_CURRENT*/void r363accept(T363* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r363collect(T0* a1);
/*IMPLICIT_CURRENT*/T0* r363twin(T363* C);
/*IMPLICIT_CURRENT*/T0* r363written_declaration_type_mark(void);
/*IMPLICIT_CURRENT*/T6 r363use_current(T0* a1);
/*IMPLICIT_CURRENT*/void r363bracketed_pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r363non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CURRENT*/T6 r363side_effect_free(T0* a1);
/*IMPLICIT_CURRENT*/T0* r363resolve_in(T0* a1);
/*IMPLICIT_CURRENT*/T0* r363to_instruction(T363* C);
/*OTHER_INSPECT_STATEMENT*/void r356make_strippable(T356* C,T332 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r356to_expression(T356* C);
/*OTHER_INSPECT_STATEMENT*/void r356make(T356* C,T332 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r356with_when_list(T356* C,T332 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r356pretty(T356* C,T2 a1);
/*OTHER_INSPECT_STATEMENT*/T0* r356simplify(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r356specialize_2(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r356force_internal_values(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r356validity_check(T356* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r356specialize_in(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r356inline_dynamic_dispatch_(T356* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T6 r356same_compound(T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r356safety_check(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r356init(T356* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r356count_call(T356* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r356set_else_compound(T356* C,T332 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r356specialize_thru(T356* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC357code_comparator;
/*OTHER_INSPECT_STATEMENT*/T0* r356count_name(void);
/*OTHER_INSPECT_STATEMENT*/void r356accept(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r356validity_check_continued(T356* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r356add_when(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r356adapt_for(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T2 r356largest_range_of_values(T356* C);
/*OTHER_INSPECT_STATEMENT*/T6 r356use_c_switch_statement(T356* C);
/*OTHER_INSPECT_STATEMENT*/T0* r356collect(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r356item_call(T356* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r356twin(T356* C);
/*OTHER_INSPECT_STATEMENT*/T6 r356use_current(T356* C,T0* a1);
extern T0*oBC28item_name;
extern int fBC28item_name;
/*OTHER_INSPECT_STATEMENT*/T0* r356item_name(void);
/*OTHER_INSPECT_STATEMENT*/T6 r356side_effect_free(T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r356inline_dynamic_dispatch(T356* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r356compute_values(T356* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r356to_instruction(T356* C);
/*OTHER_INSPECT_STATEMENT*/T0* r356current_or_twin_init(T356* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472to_expression(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472with_when_list(T472* C,T332 a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472pretty(T472* C,T2 a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472simplify(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472specialize_2(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472validity_check(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472specialize_in(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472inline_dynamic_dispatch_(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472same_compound(T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472safety_check(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472init(T472* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472count_call(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472set_else_compound(T472* C,T332 a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472specialize_thru(T472* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472count_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472accept(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472validity_check_continued(T472* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472add_when(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472adapt_for(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T2 r472largest_range_of_values(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472use_c_switch_statement(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472collect(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472item_call(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472twin(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472use_current(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472item_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r472side_effect_free(T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472inline_dynamic_dispatch(T472* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r472compute_values(T472* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472to_instruction(T472* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r472current_or_twin_init(T472* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/T0* r417to_expression(T417* C);
/*ASSERTION_LIST*/void r417make(T417* C,T332 a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r417pretty(T417* C,T2 a1);
/*ASSERTION_LIST*/T0* r417simplify(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417specialize_2(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417specialize_in(T417* C,T0* a1);
/*ASSERTION_LIST*/void r417inline_dynamic_dispatch_(T417* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/T6 r417is_always_true(T417* C,T0* a1);
/*ASSERTION_LIST*/void r417safety_check(T417* C,T0* a1);
/*ASSERTION_LIST*/void r417set_list(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417specialize_thru(T417* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r417pretty_as_loop_invariant(T417* C,T2 a1);
/*ASSERTION_LIST*/T2 r417upper(T417* C);
/*ASSERTION_LIST*/void r417accept(T417* C,T0* a1);
/*ASSERTION_LIST*/void r417set_eiffel_parser_stamp(T417* C,T2 a1);
/*ASSERTION_LIST*/T0* r417adapt_for(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417item(T417* C,T2 a1);
/*ASSERTION_LIST*/T0* r417collect(T417* C,T0* a1);
/*ASSERTION_LIST*/void r417pretty_print_with_tag(T417* C,T2 a1,T0* a2);
/*ASSERTION_LIST*/T6 r417is_empty(T417* C);
/*ASSERTION_LIST*/T0* r417specialize_2_without_checks(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417twin(T417* C);
/*ASSERTION_LIST*/void r417pretty_as_check_compound(T417* C,T2 a1);
/*ASSERTION_LIST*/T6 r417use_current(T417* C,T0* a1);
/*ASSERTION_LIST*/void r417crash(T417* C);
/*ASSERTION_LIST*/void r417breakpoint(T417* C);
/*ASSERTION_LIST*/T6 r417side_effect_free(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417inline_dynamic_dispatch(T417* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/void r417not_yet_implemented(T417* C);
/*ASSERTION_LIST*/void r417do_all(T417* C,T0* a1);
/*ASSERTION_LIST*/T0* r417to_instruction(T417* C);
/*ASSERTION_LIST*/T2 r417lower(T417* C);
/*LOOP_VARIANT*/T0* r458to_expression(T458* C);
/*LOOP_VARIANT*/void r458make(T458* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*LOOP_VARIANT*/void r458pretty(T458* C,T2 a1);
/*LOOP_VARIANT*/T0* r458simplify(T458* C,T0* a1);
/*LOOP_VARIANT*/void r458specialize_2_check(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458specialize_2(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458static_simplify(T458* C);
/*LOOP_VARIANT*/T0* r458specialize_in(T458* C,T0* a1);
/*LOOP_VARIANT*/void r458inline_dynamic_dispatch_(T458* C,T0* a1,T0* a2);
/*LOOP_VARIANT*/void r458safety_check(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458specialize_thru(T458* C,T0* a1,T0* a2,T0* a3);
/*LOOP_VARIANT*/T6 r458is_stored_in_some_local_variable(void);
/*LOOP_VARIANT*/void r458accept(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458declaration_type(T458* C);
/*LOOP_VARIANT*/T0* r458collect(T458* C,T0* a1);
/*LOOP_VARIANT*/T332 r458start_position(T458* C);
/*LOOP_VARIANT*/T0* r458twin(T458* C);
/*LOOP_VARIANT*/T0* r458written_declaration_type_mark(void);
/*LOOP_VARIANT*/T6 r458use_current(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458non_void_no_dispatch_type(T0* a1);
/*LOOP_VARIANT*/T6 r458side_effect_free(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458resolve_in(T458* C,T0* a1);
/*LOOP_VARIANT*/T0* r458to_instruction(T458* C);
/*LOOP_INSTRUCTION*/T0* r459to_expression(T459* C);
/*LOOP_INSTRUCTION*/void r459make(T459* C,T332 a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*LOOP_INSTRUCTION*/void r459pretty(T459* C,T2 a1);
/*LOOP_INSTRUCTION*/T0* r459simplify(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/void r459specialize_2_check(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r459specialize_2(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r459specialize_in(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/void r459inline_dynamic_dispatch_(T459* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/void r459safety_check(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r459specialize_thru(T459* C,T0* a1,T0* a2,T0* a3);
/*LOOP_INSTRUCTION*/void r459accept(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r459adapt_for(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r459collect(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r459use_current(T459* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r459side_effect_free(T0* a1);
/*LOOP_INSTRUCTION*/T0* r459inline_dynamic_dispatch(T459* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/T0* r459to_instruction(T459* C);
/*LOOP_INSTRUCTION*/T6 r459loop_check(T0* a1);
/*RESULT*/T0* r358to_expression(T358* C);
/*RESULT*/void r358make(T358* C,T332 a1);
/*RESULT*/void r358pretty(T2 a1);
/*RESULT*/T0* r358simplify(T358* C,T0* a1);
/*RESULT*/void r358validity_check(T358* C,T0* a1);
/*RESULT*/T0* r358static_simplify(T358* C);
/*RESULT*/T0* r358specialize_in(T358* C,T0* a1);
/*RESULT*/void r358inline_dynamic_dispatch_(T358* C,T0* a1,T0* a2);
/*RESULT*/void r358set_enclosing_function(T358* C,T0* a1);
/*RESULT*/T0* r358specialize_thru(T358* C,T0* a1,T0* a2,T0* a3);
/*RESULT*/void r358set_type_mark_memory(T358* C,T0* a1);
/*RESULT*/T6 r358is_stored_in_some_local_variable(void);
/*RESULT*/void r358accept(T358* C,T0* a1);
/*RESULT*/T0* r358adapt_for(T358* C,T0* a1);
/*RESULT*/T0* r358feature_accumulator(void);
/*RESULT*/T0* r358collect(T0* a1);
/*RESULT*/void r358pretty_target(T2 a1);
/*RESULT*/T0* r358twin(T358* C);
/*RESULT*/T6 r358use_current(T0* a1);
/*RESULT*/void r358bracketed_pretty(T2 a1);
/*RESULT*/T0* r358non_void_no_dispatch_type(T358* C,T0* a1);
/*RESULT*/T6 r358side_effect_free(T0* a1);
/*RESULT*/T0* r358resolve_in(T358* C,T0* a1);
/*RESULT*/T0* r358to_instruction(T358* C);
/*RESULT*/T0* r358current_or_twin_init(T358* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r398to_expression(T398* C);
/*CREATE_INSTRUCTION*/void r398make(T398* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r398created_type(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/void r398typed_internals(T398* C,T332 a1,T0* a2);
/*CREATE_INSTRUCTION*/void r398pretty(T398* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r398simplify(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r398specialize_2(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/void r398specialize_2_checks(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r398specialize_in(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/void r398inline_dynamic_dispatch_(T398* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r398safety_check(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/void r398set_call(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/void r398init(T398* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/T0* r398specialize_thru(T398* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/void r398accept(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/void r398set_eiffel_parser_stamp(T398* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r398adapt_for(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r398default_create_name(void);
/*CREATE_INSTRUCTION*/T0* r398collect(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r398any_default_create_fs(void);
/*CREATE_INSTRUCTION*/T0* r398specialize_2_without_checks(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r398twin(T398* C);
/*CREATE_INSTRUCTION*/T0* r398creation_procedure(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r398use_current(T398* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r398side_effect_free(T0* a1);
/*CREATE_INSTRUCTION*/T0* r398arguments(T398* C);
/*CREATE_INSTRUCTION*/T0* r398inline_dynamic_dispatch(T398* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r398make_specialized(T398* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r398to_instruction(T398* C);
/*CREATE_INSTRUCTION*/T0* r398current_or_twin_init(T398* C,T0* a1,T0* a2,T0* a3);
/*C_INLINE*/T0* r457to_expression(T457* C);
/*C_INLINE*/void r457pretty(T457* C,T2 a1);
/*C_INLINE*/T0* r457simplify(T457* C,T0* a1);
/*C_INLINE*/T0* r457specialize_2(T457* C,T0* a1);
/*C_INLINE*/void r457inline_dynamic_dispatch_(T457* C,T0* a1,T0* a2);
/*C_INLINE*/void r457accept(T457* C,T0* a1);
/*C_INLINE*/void r457make_c_inline_h(T457* C,T332 a1,T0* a2);
/*C_INLINE*/void r457make_c_inline_c(T457* C,T332 a1,T0* a2);
/*C_INLINE*/T6 r457use_current(T457* C,T0* a1);
/*C_INLINE*/void r457crash(T457* C);
/*C_INLINE*/T6 r457side_effect_free(T0* a1);
/*C_INLINE*/T0* r457inline_dynamic_dispatch(T457* C,T0* a1,T0* a2);
/*C_INLINE*/void r457not_yet_implemented(T457* C);
/*C_INLINE*/T0* r457to_instruction(T457* C);
/*PRECURSOR_INSTRUCTION*/T0* r487to_expression(T487* C);
/*PRECURSOR_INSTRUCTION*/void r487make(T487* C,T332 a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r487pretty(T487* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r487simplify(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487specialize_2(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487specialize_in(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r487inline_dynamic_dispatch_(T487* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r487safety_check(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r487init(T487* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r487pretty_(T487* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r487specialize_thru(T487* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r487accept(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487adapt_for(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487feature_accumulator(void);
/*PRECURSOR_INSTRUCTION*/T0* r487collect(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487twin(T487* C);
/*PRECURSOR_INSTRUCTION*/T6 r487use_current(T0* a1);
/*PRECURSOR_INSTRUCTION*/T6 r487side_effect_free(T487* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r487inline_dynamic_dispatch(T487* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/T0* r487to_instruction(T487* C);
/*PRECURSOR_INSTRUCTION*/T0* r487current_or_twin_init(T487* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T477*create477make(T332 a1);
/*WRITTEN_CURRENT*/T0* r477to_expression(T477* C);
/*WRITTEN_CURRENT*/void r477make(T477* C,T332 a1);
/*WRITTEN_CURRENT*/void r477pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r477simplify(T477* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r477static_simplify(T477* C);
/*WRITTEN_CURRENT*/T0* r477specialize_in(T477* C,T0* a1);
/*WRITTEN_CURRENT*/void r477inline_dynamic_dispatch_(T477* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T6 r477is_stored_in_some_local_variable(void);
/*WRITTEN_CURRENT*/void r477accept(T477* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r477collect(T0* a1);
/*WRITTEN_CURRENT*/void r477pretty_target(T2 a1);
/*WRITTEN_CURRENT*/T0* r477twin(T477* C);
/*WRITTEN_CURRENT*/T0* r477written_declaration_type_mark(void);
/*WRITTEN_CURRENT*/T6 r477use_current(T0* a1);
/*WRITTEN_CURRENT*/void r477bracketed_pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r477non_void_no_dispatch_type(T0* a1);
/*WRITTEN_CURRENT*/T6 r477side_effect_free(T0* a1);
/*WRITTEN_CURRENT*/T0* r477resolve_in(T0* a1);
/*WRITTEN_CURRENT*/T0* r477to_instruction(T477* C);
/*ASSIGNMENT*/T361*create361inline_make(T0* a1,T0* a2);
/*ASSIGNMENT*/T361*create361make(T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r361to_expression(T361* C);
/*ASSIGNMENT*/void r361make(T361* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r361fatal_error_for(T361* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ASSIGNMENT*/void r361pretty(T361* C,T2 a1);
/*ASSIGNMENT*/T0* r361simplify(T361* C,T0* a1);
/*ASSIGNMENT*/T0* r361specialize_2(T361* C,T0* a1);
/*ASSIGNMENT*/T0* r361specialize_in(T361* C,T0* a1);
/*ASSIGNMENT*/void r361inline_dynamic_dispatch_(T361* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r361safety_check(T361* C,T0* a1);
/*ASSIGNMENT*/T0* r361specialize_thru(T361* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT*/T6 r361reset_default_value_in_local_or_result(T361* C,T0* a1);
/*ASSIGNMENT*/void r361inline_make(T361* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r361accept(T361* C,T0* a1);
/*ASSIGNMENT*/T0* r361adapt_for(T361* C,T0* a1);
/*ASSIGNMENT*/T0* r361collect(T361* C,T0* a1);
/*ASSIGNMENT*/T332 r361start_position(T361* C);
/*ASSIGNMENT*/T6 r361use_current(T361* C,T0* a1);
/*ASSIGNMENT*/T6 r361side_effect_free(T0* a1);
/*ASSIGNMENT*/T0* r361inline_dynamic_dispatch(T361* C,T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r361to_instruction(T361* C);
/*ASSIGNMENT_ATTEMPT*/T388*create388make(T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/T0* r388to_expression(T388* C);
/*ASSIGNMENT_ATTEMPT*/void r388make(T388* C,T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/void r388pretty(T388* C,T2 a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388simplify(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388specialize_2(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388specialize_in(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/void r388inline_dynamic_dispatch_(T388* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/void r388safety_check(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388specialize_thru(T388* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_ATTEMPT*/void r388accept(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388adapt_for(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388collect(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T332 r388start_position(T388* C);
/*ASSIGNMENT_ATTEMPT*/T6 r388use_current(T388* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T6 r388side_effect_free(T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r388inline_dynamic_dispatch(T388* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/T0* r388to_instruction(T388* C);
/*RETRY_INSTRUCTION*/T0* r453to_expression(T453* C);
/*RETRY_INSTRUCTION*/void r453make(T453* C,T332 a1);
/*RETRY_INSTRUCTION*/void r453pretty(T2 a1);
/*RETRY_INSTRUCTION*/T0* r453simplify(T453* C,T0* a1);
/*RETRY_INSTRUCTION*/void r453inline_dynamic_dispatch_(T453* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/void r453accept(T453* C,T0* a1);
/*RETRY_INSTRUCTION*/T6 r453use_current(T0* a1);
/*RETRY_INSTRUCTION*/T6 r453side_effect_free(T0* a1);
/*RETRY_INSTRUCTION*/T0* r453inline_dynamic_dispatch(T453* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/T0* r453to_instruction(T453* C);
/*COMPOUND*/T389*create389make_2(T0* a1,T0* a2);
/*COMPOUND*/void r389simplify_add(T0* a1,T0* a2);
/*COMPOUND*/T0* r389to_expression(T389* C);
/*COMPOUND*/T0* r389first(T389* C);
/*COMPOUND*/void r389pretty(T389* C,T2 a1);
/*COMPOUND*/T0* r389simplify(T389* C,T0* a1);
/*COMPOUND*/T0* r389specialize_2(T389* C,T0* a1);
/*COMPOUND*/T0* r389twin_remove_first(T389* C);
/*COMPOUND*/T0* r389specialize_in(T389* C,T0* a1);
/*COMPOUND*/void r389inline_dynamic_dispatch_(T389* C,T0* a1,T0* a2);
/*COMPOUND*/void r389safety_check(T389* C,T0* a1);
/*COMPOUND*/void r389set_list(T389* C,T0* a1);
/*COMPOUND*/T0* r389specialize_thru(T389* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r389upper(T389* C);
/*COMPOUND*/void r389accept(T389* C,T0* a1);
/*COMPOUND*/T0* r389adapt_for(T389* C,T0* a1);
/*COMPOUND*/void r389from_list(T389* C,T0* a1);
/*COMPOUND*/void r389make_n(T389* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*COMPOUND*/T0* r389collect(T389* C,T0* a1);
/*COMPOUND*/T6 r389is_a_comment(T0* a1);
/*COMPOUND*/T332 r389start_position(T389* C);
/*COMPOUND*/T0* r389twin(T389* C);
/*COMPOUND*/T6 r389use_current(T389* C,T0* a1);
/*COMPOUND*/T6 r389side_effect_free(T389* C,T0* a1);
/*COMPOUND*/T0* r389inline_dynamic_dispatch(T389* C,T0* a1,T0* a2);
/*COMPOUND*/void r389make_2(T389* C,T0* a1,T0* a2);
/*COMPOUND*/void r389make_3(T389* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r389count(T389* C);
/*COMPOUND*/void r389make_4(T389* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*COMPOUND*/T0* r389to_instruction(T389* C);
/*ENSURE_ASSERTION*/T649*create649make(T332 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T0* r649to_expression(T649* C);
/*ENSURE_ASSERTION*/void r649make(T649* C,T332 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T6 r649has_assertion_located_at(T649* C,T332 a1);
/*ENSURE_ASSERTION*/void r649pretty(T649* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r649simplify(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649specialize_2(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649specialize_in(T649* C,T0* a1);
/*ENSURE_ASSERTION*/void r649inline_dynamic_dispatch_(T649* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r649is_always_true(T649* C,T0* a1);
/*ENSURE_ASSERTION*/void r649safety_check(T649* C,T0* a1);
/*ENSURE_ASSERTION*/void r649set_list(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649specialize_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r649pretty_as_loop_invariant(T649* C,T2 a1);
/*ENSURE_ASSERTION*/T2 r649upper(T649* C);
/*ENSURE_ASSERTION*/void r649assertion_list_make(T649* C,T332 a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r649accept(T649* C,T0* a1);
/*ENSURE_ASSERTION*/void r649set_eiffel_parser_stamp(T649* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r649adapt_for(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649item(T649* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r649add_items_from(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649collect(T649* C,T0* a1);
/*ENSURE_ASSERTION*/void r649pretty_print_with_tag(T649* C,T2 a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r649is_empty(T649* C);
/*ENSURE_ASSERTION*/T0* r649specialize_2_without_checks(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649twin(T649* C);
/*ENSURE_ASSERTION*/void r649pretty_as_check_compound(T649* C,T2 a1);
/*ENSURE_ASSERTION*/T6 r649use_current(T649* C,T0* a1);
/*ENSURE_ASSERTION*/void r649breakpoint(T649* C);
/*ENSURE_ASSERTION*/void r649crash(T649* C);
/*ENSURE_ASSERTION*/T6 r649side_effect_free(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649inline_dynamic_dispatch(T649* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/void r649not_yet_implemented(T649* C);
/*ENSURE_ASSERTION*/T2 r649count(T649* C);
/*ENSURE_ASSERTION*/void r649do_all(T649* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r649to_instruction(T649* C);
/*ENSURE_ASSERTION*/T2 r649lower(T649* C);
/*AGENT_CREATION*/T0* r476to_expression(T476* C);
/*AGENT_CREATION*/void r476make(T476* C,T332 a1,T0* a2,T0* a3);
/*AGENT_CREATION*/void r476pretty(T476* C,T2 a1);
/*AGENT_CREATION*/T0* r476simplify(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476specialize_2(T476* C,T0* a1);
/*AGENT_CREATION*/T6 r476same_mold_id_as(T476* C,T0* a1);
extern T0*oBC28is_equal_name;
extern int fBC28is_equal_name;
/*AGENT_CREATION*/T0* r476is_equal_name(void);
/*AGENT_CREATION*/T0* r476specialize_2_procedure(T476* C,T0* a1);
/*AGENT_CREATION*/T6 r476is_equal_used_in(T0* a1);
/*AGENT_CREATION*/T0* r476static_simplify(T476* C);
/*AGENT_CREATION*/T0* r476specialize_in(T476* C,T0* a1);
/*AGENT_CREATION*/void r476inline_dynamic_dispatch_(T476* C,T0* a1,T0* a2);
/*AGENT_CREATION*/T0* r476specialize_2_function(T476* C,T0* a1);
/*AGENT_CREATION*/void r476safety_check(T476* C,T0* a1);
/*AGENT_CREATION*/void r476mold_id_in(T476* C,T0* a1,T0* a2);
/*AGENT_CREATION*/T0* r476specialize_thru(T476* C,T0* a1,T0* a2,T0* a3);
/*AGENT_CREATION*/T6 r476is_stored_in_some_local_variable(void);
/*AGENT_CREATION*/void r476accept(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476adapt_for(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476declaration_type(T476* C);
/*AGENT_CREATION*/T0* r476collect(T476* C,T0* a1);
/*AGENT_CREATION*/void r476pretty_target(T476* C,T2 a1);
extern T0*oBC28any_is_equal_fs;
extern int fBC28any_is_equal_fs;
/*AGENT_CREATION*/T0* r476any_is_equal_fs(void);
/*AGENT_CREATION*/void r476set_inside_agent_launcher_flag(T476* C,T6 a1);
/*AGENT_CREATION*/T0* r476twin(T476* C);
/*AGENT_CREATION*/T0* r476written_declaration_type_mark(void);
/*AGENT_CREATION*/T6 r476use_current(T476* C,T0* a1);
/*AGENT_CREATION*/void r476bracketed_pretty(T476* C,T2 a1);
/*AGENT_CREATION*/T6 r476stored_closed_operand(T476* C,T0* a1,T0* a2);
/*AGENT_CREATION*/void r476omitted_open_arguments_update(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476non_void_no_dispatch_type(T476* C,T0* a1);
/*AGENT_CREATION*/T6 r476side_effect_free(T0* a1);
/*AGENT_CREATION*/T0* r476resolve_in(T476* C,T0* a1);
/*AGENT_CREATION*/T0* r476to_instruction(T476* C);
/*E_VOID*/T390*create390make(T332 a1);
/*E_VOID*/T0* r390to_expression(T390* C);
/*E_VOID*/void r390make(T390* C,T332 a1);
/*E_VOID*/void r390pretty(T2 a1);
/*E_VOID*/T0* r390static_simplify(T390* C);
/*E_VOID*/void r390inline_dynamic_dispatch_(T390* C,T0* a1,T0* a2);
/*E_VOID*/T6 r390is_stored_in_some_local_variable(void);
/*E_VOID*/void r390accept(T390* C,T0* a1);
/*E_VOID*/T0* r390collect(T390* C,T0* a1);
/*E_VOID*/T0* r390twin(T390* C);
/*E_VOID*/T0* r390written_declaration_type_mark(void);
/*E_VOID*/T6 r390use_current(T0* a1);
/*E_VOID*/void r390bracketed_pretty(T2 a1);
/*E_VOID*/T0* r390non_void_no_dispatch_type(T0* a1);
/*E_VOID*/T6 r390side_effect_free(T0* a1);
/*E_VOID*/T0* r390resolve_in(T390* C,T0* a1);
/*E_VOID*/T0* r390to_instruction(T390* C);
/*E_OLD*/T0* r485to_expression(T485* C);
/*E_OLD*/void r485make(T485* C,T332 a1,T0* a2);
extern T0*oBC485vaol_check_memory;
/*E_OLD*/void r485pretty(T485* C,T2 a1);
/*E_OLD*/T0* r485simplify(T485* C,T0* a1);
/*E_OLD*/T0* r485specialize_2(T485* C,T0* a1);
/*E_OLD*/void r485set_tag(T485* C,T0* a1,T0* a2);
/*E_OLD*/T0* r485static_simplify(T485* C);
/*E_OLD*/T0* r485specialize_in(T485* C,T0* a1);
/*E_OLD*/void r485inline_dynamic_dispatch_(T485* C,T0* a1,T0* a2);
/*E_OLD*/void r485safety_check(T485* C,T0* a1);
/*E_OLD*/T0* r485specialize_thru(T485* C,T0* a1,T0* a2,T0* a3);
/*E_OLD*/T6 r485is_stored_in_some_local_variable(void);
/*E_OLD*/void r485accept(T485* C,T0* a1);
/*E_OLD*/T0* r485adapt_for(T485* C,T0* a1);
/*E_OLD*/T0* r485declaration_type(T485* C);
/*E_OLD*/T0* r485collect(T485* C,T0* a1);
/*E_OLD*/void r485pretty_target(T485* C,T2 a1);
/*E_OLD*/T0* r485twin(T485* C);
/*E_OLD*/T0* r485written_declaration_type_mark(void);
/*E_OLD*/T6 r485use_current(T485* C,T0* a1);
/*E_OLD*/void r485bracketed_pretty(T485* C,T2 a1);
/*E_OLD*/void r485crash(T485* C);
/*E_OLD*/T0* r485non_void_no_dispatch_type(T485* C,T0* a1);
/*E_OLD*/T6 r485side_effect_free(T0* a1);
/*E_OLD*/void r485not_yet_implemented(T485* C);
/*E_OLD*/T0* r485tag(T485* C,T0* a1);
/*E_OLD*/T0* r485resolve_in(T485* C,T0* a1);
/*E_OLD*/T0* r485to_instruction(T485* C);
/*E_OLD*/T0* r485current_or_twin_init(T485* C,T0* a1);
/*CALL_INFIX_FREEOP*/T6 r507is_balanced_operator(T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507declaration_type(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507adapt_for(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507resolve_in(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507use_current_stack(void);
/*CALL_INFIX_FREEOP*/T0* r507collect(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507specialize_2(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507specialize_in(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507written_declaration_type_mark(void);
/*CALL_INFIX_FREEOP*/T0* r507simplify(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r507pretty_target(T507* C,T2 a1);
/*CALL_INFIX_FREEOP*/void r507safety_check(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507to_expression(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507specialize_thru(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r507feature_accumulator(void);
/*CALL_INFIX_FREEOP*/void r507inline_dynamic_dispatch_(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r507to_instruction(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507current_or_twin_init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r507standard_check_export_and_obsolete_calls(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r507make(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r507arg1(T507* C);
/*CALL_INFIX_FREEOP*/void r507type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/void r507non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/T6 r507use_current(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r507init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r507static_simplify(T507* C);
/*CALL_INFIX_FREEOP*/T0* r507extra_local_expanded(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r507function_and_argument_count_check(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/void r507pretty(T507* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r507side_effect_free(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507non_void_no_dispatch_type(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507run_feature_for(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r507inline_with(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r507twin(T507* C);
/*CALL_INFIX_FREEOP*/void r507bracketed_pretty(T507* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r507is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_FREEOP*/void r507accept(T507* C,T0* a1);
/*CALL_INFIX_FREEOP*/T332 r507start_position(T507* C);
/*CALL_INFIX_FREEOP*/T6 r507is_stored_in_some_local_variable(void);
/*CALL_INFIX_FREEOP*/T0* r507_P_344_declaration_type(T507* C);
/*CALL_INFIX_POWER*/T6 r506is_balanced_operator(T0* a1);
/*CALL_INFIX_POWER*/T0* r506declaration_type(T506* C);
/*CALL_INFIX_POWER*/T0* r506adapt_for(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506resolve_in(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506eiffel_parser(void);
/*CALL_INFIX_POWER*/T0* r506use_current_stack(void);
/*CALL_INFIX_POWER*/T0* r506collect(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506specialize_2(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506specialize_in(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506written_declaration_type_mark(void);
/*CALL_INFIX_POWER*/T0* r506simplify(T506* C,T0* a1);
/*CALL_INFIX_POWER*/void r506pretty_target(T506* C,T2 a1);
/*CALL_INFIX_POWER*/void r506safety_check(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506to_expression(T506* C);
/*CALL_INFIX_POWER*/T0* r506specialize_thru(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r506feature_accumulator(void);
/*CALL_INFIX_POWER*/void r506inline_dynamic_dispatch_(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r506to_instruction(T506* C);
/*CALL_INFIX_POWER*/T0* r506current_or_twin_init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r506standard_check_export_and_obsolete_calls(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r506make(T506* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r506arg1(T506* C);
/*CALL_INFIX_POWER*/void r506type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/void r506non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/T6 r506use_current(T506* C,T0* a1);
/*CALL_INFIX_POWER*/void r506init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r506static_simplify(T506* C);
/*CALL_INFIX_POWER*/T0* r506extra_local_expanded(T506* C,T0* a1);
/*CALL_INFIX_POWER*/void r506function_and_argument_count_check(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/void r506pretty(T506* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r506side_effect_free(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506non_void_no_dispatch_type(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506run_feature_for(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r506inline_with(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r506twin(T506* C);
/*CALL_INFIX_POWER*/void r506bracketed_pretty(T506* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r506is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_POWER*/void r506accept(T506* C,T0* a1);
/*CALL_INFIX_POWER*/T332 r506start_position(T506* C);
/*CALL_INFIX_POWER*/T6 r506is_stored_in_some_local_variable(void);
/*CALL_INFIX_POWER*/T0* r506_P_344_declaration_type(T506* C);
/*CALL_INFIX_TIMES*/T6 r502is_balanced_operator(T0* a1);
/*CALL_INFIX_TIMES*/T0* r502declaration_type(T502* C);
/*CALL_INFIX_TIMES*/T0* r502adapt_for(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502resolve_in(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502eiffel_parser(void);
/*CALL_INFIX_TIMES*/T0* r502use_current_stack(void);
/*CALL_INFIX_TIMES*/T0* r502collect(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502specialize_2(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502specialize_in(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502written_declaration_type_mark(void);
/*CALL_INFIX_TIMES*/T0* r502simplify(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/void r502pretty_target(T502* C,T2 a1);
/*CALL_INFIX_TIMES*/void r502safety_check(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502to_expression(T502* C);
/*CALL_INFIX_TIMES*/T0* r502specialize_thru(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r502feature_accumulator(void);
/*CALL_INFIX_TIMES*/void r502inline_dynamic_dispatch_(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r502to_instruction(T502* C);
/*CALL_INFIX_TIMES*/T0* r502current_or_twin_init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r502standard_check_export_and_obsolete_calls(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r502make(T502* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r502arg1(T502* C);
/*CALL_INFIX_TIMES*/void r502type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/void r502non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/T6 r502use_current(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/void r502init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r502static_simplify(T502* C);
/*CALL_INFIX_TIMES*/T0* r502extra_local_expanded(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/void r502function_and_argument_count_check(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/void r502pretty(T502* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r502side_effect_free(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502non_void_no_dispatch_type(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502run_feature_for(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r502inline_with(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r502twin(T502* C);
/*CALL_INFIX_TIMES*/void r502bracketed_pretty(T502* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r502is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_TIMES*/void r502accept(T502* C,T0* a1);
/*CALL_INFIX_TIMES*/T332 r502start_position(T502* C);
/*CALL_INFIX_TIMES*/T6 r502is_stored_in_some_local_variable(void);
/*CALL_INFIX_TIMES*/T0* r502_P_344_declaration_type(T502* C);
/*CALL_INFIX_INT_DIV*/T6 r503is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503declaration_type(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503adapt_for(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503resolve_in(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503eiffel_parser(void);
/*CALL_INFIX_INT_DIV*/T0* r503use_current_stack(void);
/*CALL_INFIX_INT_DIV*/T0* r503collect(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503specialize_2(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503specialize_in(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503written_declaration_type_mark(void);
/*CALL_INFIX_INT_DIV*/T0* r503simplify(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r503pretty_target(T503* C,T2 a1);
/*CALL_INFIX_INT_DIV*/void r503safety_check(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503to_expression(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503specialize_thru(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r503feature_accumulator(void);
/*CALL_INFIX_INT_DIV*/void r503inline_dynamic_dispatch_(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r503to_instruction(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503current_or_twin_init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r503standard_check_export_and_obsolete_calls(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r503make(T503* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r503arg1(T503* C);
/*CALL_INFIX_INT_DIV*/void r503type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/void r503non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/T6 r503use_current(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r503init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r503static_simplify(T503* C);
/*CALL_INFIX_INT_DIV*/T0* r503extra_local_expanded(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r503function_and_argument_count_check(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/void r503pretty(T503* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r503side_effect_free(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503non_void_no_dispatch_type(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503run_feature_for(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r503inline_with(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r503twin(T503* C);
/*CALL_INFIX_INT_DIV*/void r503bracketed_pretty(T503* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r503is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_DIV*/void r503accept(T503* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T332 r503start_position(T503* C);
/*CALL_INFIX_INT_DIV*/T6 r503is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_DIV*/T0* r503_P_344_declaration_type(T503* C);
/*CALL_INFIX_INT_REM*/T6 r504is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504declaration_type(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504adapt_for(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504resolve_in(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504eiffel_parser(void);
/*CALL_INFIX_INT_REM*/T0* r504use_current_stack(void);
/*CALL_INFIX_INT_REM*/T0* r504collect(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504specialize_2(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504specialize_in(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504written_declaration_type_mark(void);
/*CALL_INFIX_INT_REM*/T0* r504simplify(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r504pretty_target(T504* C,T2 a1);
/*CALL_INFIX_INT_REM*/void r504safety_check(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504to_expression(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504specialize_thru(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r504feature_accumulator(void);
/*CALL_INFIX_INT_REM*/void r504inline_dynamic_dispatch_(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r504to_instruction(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504current_or_twin_init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r504standard_check_export_and_obsolete_calls(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r504make(T504* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r504arg1(T504* C);
/*CALL_INFIX_INT_REM*/void r504type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/void r504non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/T6 r504use_current(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r504init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r504static_simplify(T504* C);
/*CALL_INFIX_INT_REM*/T0* r504extra_local_expanded(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r504function_and_argument_count_check(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/void r504pretty(T504* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r504side_effect_free(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504non_void_no_dispatch_type(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504run_feature_for(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r504inline_with(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r504twin(T504* C);
/*CALL_INFIX_INT_REM*/void r504bracketed_pretty(T504* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r504is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_REM*/void r504accept(T504* C,T0* a1);
/*CALL_INFIX_INT_REM*/T332 r504start_position(T504* C);
/*CALL_INFIX_INT_REM*/T6 r504is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_REM*/T0* r504_P_344_declaration_type(T504* C);
/*CALL_INFIX_DIV*/T6 r505is_balanced_operator(T0* a1);
/*CALL_INFIX_DIV*/T0* r505declaration_type(T505* C);
/*CALL_INFIX_DIV*/T0* r505adapt_for(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505resolve_in(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505eiffel_parser(void);
/*CALL_INFIX_DIV*/T0* r505use_current_stack(void);
/*CALL_INFIX_DIV*/T0* r505collect(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505specialize_2(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505specialize_in(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505written_declaration_type_mark(void);
/*CALL_INFIX_DIV*/T0* r505simplify(T505* C,T0* a1);
/*CALL_INFIX_DIV*/void r505pretty_target(T505* C,T2 a1);
/*CALL_INFIX_DIV*/void r505safety_check(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505to_expression(T505* C);
/*CALL_INFIX_DIV*/T0* r505specialize_thru(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r505feature_accumulator(void);
/*CALL_INFIX_DIV*/void r505inline_dynamic_dispatch_(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r505to_instruction(T505* C);
/*CALL_INFIX_DIV*/T0* r505current_or_twin_init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r505standard_check_export_and_obsolete_calls(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r505make(T505* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r505arg1(T505* C);
/*CALL_INFIX_DIV*/void r505type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/void r505non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/T6 r505use_current(T505* C,T0* a1);
/*CALL_INFIX_DIV*/void r505init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r505static_simplify(T505* C);
/*CALL_INFIX_DIV*/T0* r505extra_local_expanded(T505* C,T0* a1);
/*CALL_INFIX_DIV*/void r505function_and_argument_count_check(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/void r505pretty(T505* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r505side_effect_free(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505non_void_no_dispatch_type(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505run_feature_for(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r505inline_with(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r505twin(T505* C);
/*CALL_INFIX_DIV*/void r505bracketed_pretty(T505* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r505is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_DIV*/void r505accept(T505* C,T0* a1);
/*CALL_INFIX_DIV*/T332 r505start_position(T505* C);
/*CALL_INFIX_DIV*/T6 r505is_stored_in_some_local_variable(void);
/*CALL_INFIX_DIV*/T0* r505_P_344_declaration_type(T505* C);
/*CALL_INFIX_PLUS*/T6 r501is_balanced_operator(T0* a1);
/*CALL_INFIX_PLUS*/T0* r501declaration_type(T501* C);
/*CALL_INFIX_PLUS*/T0* r501adapt_for(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501resolve_in(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501eiffel_parser(void);
/*CALL_INFIX_PLUS*/T0* r501use_current_stack(void);
/*CALL_INFIX_PLUS*/T0* r501collect(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501specialize_2(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501specialize_in(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501written_declaration_type_mark(void);
/*CALL_INFIX_PLUS*/T0* r501simplify(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/void r501pretty_target(T501* C,T2 a1);
/*CALL_INFIX_PLUS*/void r501safety_check(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501to_expression(T501* C);
/*CALL_INFIX_PLUS*/T0* r501specialize_thru(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r501feature_accumulator(void);
/*CALL_INFIX_PLUS*/void r501inline_dynamic_dispatch_(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r501to_instruction(T501* C);
/*CALL_INFIX_PLUS*/T0* r501current_or_twin_init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r501standard_check_export_and_obsolete_calls(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r501make(T501* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r501arg1(T501* C);
/*CALL_INFIX_PLUS*/void r501type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/void r501non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/T6 r501use_current(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/void r501init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r501static_simplify(T501* C);
/*CALL_INFIX_PLUS*/T0* r501extra_local_expanded(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/void r501function_and_argument_count_check(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/void r501pretty(T501* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r501side_effect_free(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501non_void_no_dispatch_type(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501run_feature_for(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r501inline_with(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r501twin(T501* C);
/*CALL_INFIX_PLUS*/void r501bracketed_pretty(T501* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r501is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_PLUS*/void r501accept(T501* C,T0* a1);
/*CALL_INFIX_PLUS*/T332 r501start_position(T501* C);
/*CALL_INFIX_PLUS*/T6 r501is_stored_in_some_local_variable(void);
/*CALL_INFIX_PLUS*/T0* r501_P_344_declaration_type(T501* C);
/*CALL_INFIX_MINUS*/T6 r368is_balanced_operator(T0* a1);
/*CALL_INFIX_MINUS*/T0* r368declaration_type(T368* C);
/*CALL_INFIX_MINUS*/T0* r368adapt_for(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368resolve_in(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368eiffel_parser(void);
/*CALL_INFIX_MINUS*/T0* r368use_current_stack(void);
/*CALL_INFIX_MINUS*/T0* r368collect(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368specialize_2(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368specialize_in(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368written_declaration_type_mark(void);
/*CALL_INFIX_MINUS*/T0* r368simplify(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/void r368pretty_target(T368* C,T2 a1);
/*CALL_INFIX_MINUS*/void r368safety_check(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368to_expression(T368* C);
/*CALL_INFIX_MINUS*/T0* r368specialize_thru(T368* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r368feature_accumulator(void);
/*CALL_INFIX_MINUS*/void r368inline_dynamic_dispatch_(T368* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r368to_instruction(T368* C);
/*CALL_INFIX_MINUS*/T0* r368current_or_twin_init(T368* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r368standard_check_export_and_obsolete_calls(T368* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r368make(T368* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r368arg1(T368* C);
/*CALL_INFIX_MINUS*/void r368type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/void r368non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/T6 r368use_current(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/void r368init(T368* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r368static_simplify(T368* C);
/*CALL_INFIX_MINUS*/T0* r368extra_local_expanded(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/void r368function_and_argument_count_check(T368* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/void r368pretty(T368* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r368side_effect_free(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368non_void_no_dispatch_type(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368run_feature_for(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r368inline_with(T368* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r368twin(T368* C);
/*CALL_INFIX_MINUS*/void r368bracketed_pretty(T368* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r368is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_MINUS*/void r368accept(T368* C,T0* a1);
/*CALL_INFIX_MINUS*/T332 r368start_position(T368* C);
/*CALL_INFIX_MINUS*/T6 r368is_stored_in_some_local_variable(void);
/*CALL_INFIX_MINUS*/T0* r368_P_344_declaration_type(T368* C);
/*BUILT_IN_EQ_NEQ*/T391*create391make_neq(T0* a1,T332 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T391*create391make_eq(T0* a1,T332 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r391to_expression(T391* C);
/*BUILT_IN_EQ_NEQ*/void r391make_neq(T391* C,T0* a1,T332 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/void r391pretty(T391* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T0* r391simplify(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r391set_left_and_right(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r391specialize_2(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r391simplify_integer_real(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r391static_simplify(T391* C);
/*BUILT_IN_EQ_NEQ*/T0* r391specialize_in(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r391inline_dynamic_dispatch_(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/void r391safety_check(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r391specialize_2_standard_comparison_check(T391* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r391simplify_null_pointer(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r391simplify_character_constant(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r391specialize_thru(T391* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r391is_static(T391* C);
/*BUILT_IN_EQ_NEQ*/void r391make_eq(T391* C,T0* a1,T332 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r391is_stored_in_some_local_variable(void);
/*BUILT_IN_EQ_NEQ*/void r391accept(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r391adapt_for(T391* C,T0* a1);
extern T0*oBC391declaration_type;
extern int fBC391declaration_type;
/*BUILT_IN_EQ_NEQ*/T0* r391declaration_type(void);
/*BUILT_IN_EQ_NEQ*/T0* r391collect(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r391pretty_target(T391* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T332 r391start_position(T391* C);
/*BUILT_IN_EQ_NEQ*/T0* r391twin(T391* C);
/*BUILT_IN_EQ_NEQ*/T0* r391written_declaration_type_mark(void);
/*BUILT_IN_EQ_NEQ*/T6 r391use_current(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r391bracketed_pretty(T391* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/void r391void_comparison_check(T391* C,T0* a1,T332 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r391non_void_no_dispatch_type(T0* a1);
/*BUILT_IN_EQ_NEQ*/T6 r391side_effect_free(T391* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r391simplify_void(T391* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r391inline_with(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r391true_or_false(T391* C,T6 a1);
/*BUILT_IN_EQ_NEQ*/T0* r391simplify_boolean_constant(T391* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r391resolve_in(T0* a1);
/*BUILT_IN_EQ_NEQ*/void r391basic_make(T391* C,T6 a1,T0* a2,T332 a3,T0* a4);
/*BUILT_IN_EQ_NEQ*/T0* r391to_instruction(T391* C);
/*CALL_INFIX_LE*/T6 r497is_balanced_operator(T0* a1);
/*CALL_INFIX_LE*/T0* r497declaration_type(T497* C);
/*CALL_INFIX_LE*/T0* r497adapt_for(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497resolve_in(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497eiffel_parser(void);
/*CALL_INFIX_LE*/T0* r497use_current_stack(void);
/*CALL_INFIX_LE*/T0* r497collect(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497specialize_2(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497specialize_in(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497written_declaration_type_mark(void);
/*CALL_INFIX_LE*/T0* r497simplify(T497* C,T0* a1);
/*CALL_INFIX_LE*/void r497pretty_target(T497* C,T2 a1);
/*CALL_INFIX_LE*/void r497safety_check(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497to_expression(T497* C);
/*CALL_INFIX_LE*/T0* r497specialize_thru(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r497feature_accumulator(void);
/*CALL_INFIX_LE*/void r497inline_dynamic_dispatch_(T497* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r497to_instruction(T497* C);
/*CALL_INFIX_LE*/T0* r497current_or_twin_init(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r497standard_check_export_and_obsolete_calls(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r497make(T497* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_LE*/T0* r497arg1(T497* C);
/*CALL_INFIX_LE*/void r497type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/void r497non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/T6 r497use_current(T497* C,T0* a1);
/*CALL_INFIX_LE*/void r497init(T497* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r497static_simplify(T497* C);
/*CALL_INFIX_LE*/T0* r497extra_local_expanded(T497* C,T0* a1);
/*CALL_INFIX_LE*/void r497function_and_argument_count_check(T497* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/void r497pretty(T497* C,T2 a1);
/*CALL_INFIX_LE*/T6 r497side_effect_free(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497non_void_no_dispatch_type(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497run_feature_for(T497* C,T0* a1);
/*CALL_INFIX_LE*/T0* r497inline_with(T497* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r497twin(T497* C);
/*CALL_INFIX_LE*/void r497bracketed_pretty(T497* C,T2 a1);
/*CALL_INFIX_LE*/T6 r497is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LE*/void r497accept(T497* C,T0* a1);
/*CALL_INFIX_LE*/T332 r497start_position(T497* C);
/*CALL_INFIX_LE*/T6 r497is_stored_in_some_local_variable(void);
/*CALL_INFIX_LE*/T0* r497_P_344_declaration_type(T497* C);
/*CALL_INFIX_GE*/T6 r498is_balanced_operator(T0* a1);
/*CALL_INFIX_GE*/T0* r498declaration_type(T498* C);
/*CALL_INFIX_GE*/T0* r498adapt_for(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498resolve_in(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498eiffel_parser(void);
/*CALL_INFIX_GE*/T0* r498use_current_stack(void);
/*CALL_INFIX_GE*/T0* r498collect(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498specialize_2(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498specialize_in(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498written_declaration_type_mark(void);
/*CALL_INFIX_GE*/T0* r498simplify(T498* C,T0* a1);
/*CALL_INFIX_GE*/void r498pretty_target(T498* C,T2 a1);
/*CALL_INFIX_GE*/void r498safety_check(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498to_expression(T498* C);
/*CALL_INFIX_GE*/T0* r498specialize_thru(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r498feature_accumulator(void);
/*CALL_INFIX_GE*/void r498inline_dynamic_dispatch_(T498* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r498to_instruction(T498* C);
/*CALL_INFIX_GE*/T0* r498current_or_twin_init(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r498standard_check_export_and_obsolete_calls(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r498make(T498* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_GE*/T0* r498arg1(T498* C);
/*CALL_INFIX_GE*/void r498type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/void r498non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/T6 r498use_current(T498* C,T0* a1);
/*CALL_INFIX_GE*/void r498init(T498* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r498static_simplify(T498* C);
/*CALL_INFIX_GE*/T0* r498extra_local_expanded(T498* C,T0* a1);
/*CALL_INFIX_GE*/void r498function_and_argument_count_check(T498* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/void r498pretty(T498* C,T2 a1);
/*CALL_INFIX_GE*/T6 r498side_effect_free(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498non_void_no_dispatch_type(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498run_feature_for(T498* C,T0* a1);
/*CALL_INFIX_GE*/T0* r498inline_with(T498* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r498twin(T498* C);
/*CALL_INFIX_GE*/void r498bracketed_pretty(T498* C,T2 a1);
/*CALL_INFIX_GE*/T6 r498is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GE*/void r498accept(T498* C,T0* a1);
/*CALL_INFIX_GE*/T332 r498start_position(T498* C);
/*CALL_INFIX_GE*/T6 r498is_stored_in_some_local_variable(void);
/*CALL_INFIX_GE*/T0* r498_P_344_declaration_type(T498* C);
/*CALL_INFIX_LT*/T6 r499is_balanced_operator(T0* a1);
/*CALL_INFIX_LT*/T0* r499declaration_type(T499* C);
/*CALL_INFIX_LT*/T0* r499adapt_for(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499resolve_in(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499eiffel_parser(void);
/*CALL_INFIX_LT*/T0* r499use_current_stack(void);
/*CALL_INFIX_LT*/T0* r499collect(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499specialize_2(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499specialize_in(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499written_declaration_type_mark(void);
/*CALL_INFIX_LT*/T0* r499simplify(T499* C,T0* a1);
/*CALL_INFIX_LT*/void r499pretty_target(T499* C,T2 a1);
/*CALL_INFIX_LT*/void r499safety_check(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499to_expression(T499* C);
/*CALL_INFIX_LT*/T0* r499specialize_thru(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r499feature_accumulator(void);
/*CALL_INFIX_LT*/void r499inline_dynamic_dispatch_(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r499to_instruction(T499* C);
/*CALL_INFIX_LT*/T0* r499current_or_twin_init(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r499standard_check_export_and_obsolete_calls(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r499make(T499* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_LT*/T0* r499arg1(T499* C);
/*CALL_INFIX_LT*/void r499type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/void r499non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/T6 r499use_current(T499* C,T0* a1);
/*CALL_INFIX_LT*/void r499init(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r499static_simplify(T499* C);
/*CALL_INFIX_LT*/T0* r499extra_local_expanded(T499* C,T0* a1);
/*CALL_INFIX_LT*/void r499function_and_argument_count_check(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/void r499pretty(T499* C,T2 a1);
/*CALL_INFIX_LT*/T6 r499side_effect_free(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499non_void_no_dispatch_type(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499run_feature_for(T499* C,T0* a1);
/*CALL_INFIX_LT*/T0* r499inline_with(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r499twin(T499* C);
/*CALL_INFIX_LT*/void r499bracketed_pretty(T499* C,T2 a1);
/*CALL_INFIX_LT*/T6 r499is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LT*/void r499accept(T499* C,T0* a1);
/*CALL_INFIX_LT*/T332 r499start_position(T499* C);
/*CALL_INFIX_LT*/T6 r499is_stored_in_some_local_variable(void);
/*CALL_INFIX_LT*/T0* r499_P_344_declaration_type(T499* C);
/*CALL_INFIX_GT*/T6 r500is_balanced_operator(T0* a1);
/*CALL_INFIX_GT*/T0* r500declaration_type(T500* C);
/*CALL_INFIX_GT*/T0* r500adapt_for(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500resolve_in(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500eiffel_parser(void);
/*CALL_INFIX_GT*/T0* r500use_current_stack(void);
/*CALL_INFIX_GT*/T0* r500collect(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500specialize_2(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500specialize_in(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500written_declaration_type_mark(void);
/*CALL_INFIX_GT*/T0* r500simplify(T500* C,T0* a1);
/*CALL_INFIX_GT*/void r500pretty_target(T500* C,T2 a1);
/*CALL_INFIX_GT*/void r500safety_check(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500to_expression(T500* C);
/*CALL_INFIX_GT*/T0* r500specialize_thru(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r500feature_accumulator(void);
/*CALL_INFIX_GT*/void r500inline_dynamic_dispatch_(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r500to_instruction(T500* C);
/*CALL_INFIX_GT*/T0* r500current_or_twin_init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r500standard_check_export_and_obsolete_calls(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r500make(T500* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_GT*/T0* r500arg1(T500* C);
/*CALL_INFIX_GT*/void r500type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/void r500non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/T6 r500use_current(T500* C,T0* a1);
/*CALL_INFIX_GT*/void r500init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r500static_simplify(T500* C);
/*CALL_INFIX_GT*/T0* r500extra_local_expanded(T500* C,T0* a1);
/*CALL_INFIX_GT*/void r500function_and_argument_count_check(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/void r500pretty(T500* C,T2 a1);
/*CALL_INFIX_GT*/T6 r500side_effect_free(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500non_void_no_dispatch_type(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500run_feature_for(T500* C,T0* a1);
/*CALL_INFIX_GT*/T0* r500inline_with(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r500twin(T500* C);
/*CALL_INFIX_GT*/void r500bracketed_pretty(T500* C,T2 a1);
/*CALL_INFIX_GT*/T6 r500is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GT*/void r500accept(T500* C,T0* a1);
/*CALL_INFIX_GT*/T332 r500start_position(T500* C);
/*CALL_INFIX_GT*/T6 r500is_stored_in_some_local_variable(void);
/*CALL_INFIX_GT*/T0* r500_P_344_declaration_type(T500* C);
/*CALL_INFIX_AND_THEN*/T6 r396is_balanced_operator(T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396declaration_type(T396* C);
/*CALL_INFIX_AND_THEN*/T0* r396adapt_for(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396resolve_in(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396use_current_stack(void);
/*CALL_INFIX_AND_THEN*/T0* r396collect(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396specialize_2(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396specialize_in(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396written_declaration_type_mark(void);
/*CALL_INFIX_AND_THEN*/T0* r396simplify(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r396pretty_target(T396* C,T2 a1);
/*CALL_INFIX_AND_THEN*/void r396safety_check(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396to_expression(T396* C);
/*CALL_INFIX_AND_THEN*/T0* r396specialize_thru(T396* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r396feature_accumulator(void);
/*CALL_INFIX_AND_THEN*/void r396inline_dynamic_dispatch_(T396* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r396to_instruction(T396* C);
/*CALL_INFIX_AND_THEN*/T0* r396current_or_twin_init(T396* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r396standard_check_export_and_obsolete_calls(T396* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r396make(T396* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r396arg1(T396* C);
/*CALL_INFIX_AND_THEN*/T6 r396use_current(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r396init(T396* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r396static_simplify(T396* C);
/*CALL_INFIX_AND_THEN*/T0* r396and_then_name(void);
/*CALL_INFIX_AND_THEN*/T0* r396extra_local_expanded(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r396function_and_argument_count_check(T396* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/void r396pretty(T396* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r396side_effect_free(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396non_void_no_dispatch_type(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396run_feature_for(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r396inline_with(T396* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r396twin(T396* C);
/*CALL_INFIX_AND_THEN*/void r396bracketed_pretty(T396* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r396is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND_THEN*/void r396accept(T396* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T332 r396start_position(T396* C);
/*CALL_INFIX_AND_THEN*/T6 r396is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND_THEN*/T0* r396_P_344_declaration_type(T396* C);
/*CALL_INFIX_AND*/T6 r496is_balanced_operator(T0* a1);
/*CALL_INFIX_AND*/T0* r496declaration_type(T496* C);
/*CALL_INFIX_AND*/T0* r496adapt_for(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496resolve_in(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496eiffel_parser(void);
/*CALL_INFIX_AND*/T0* r496use_current_stack(void);
/*CALL_INFIX_AND*/T0* r496collect(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496specialize_2(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496specialize_in(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496written_declaration_type_mark(void);
/*CALL_INFIX_AND*/T0* r496simplify(T496* C,T0* a1);
/*CALL_INFIX_AND*/void r496pretty_target(T496* C,T2 a1);
/*CALL_INFIX_AND*/void r496safety_check(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496to_expression(T496* C);
/*CALL_INFIX_AND*/T0* r496specialize_thru(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r496feature_accumulator(void);
/*CALL_INFIX_AND*/void r496inline_dynamic_dispatch_(T496* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r496to_instruction(T496* C);
/*CALL_INFIX_AND*/T0* r496current_or_twin_init(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r496standard_check_export_and_obsolete_calls(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r496make(T496* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_AND*/T0* r496arg1(T496* C);
/*CALL_INFIX_AND*/void r496type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/void r496non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/T6 r496use_current(T496* C,T0* a1);
/*CALL_INFIX_AND*/void r496init(T496* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r496static_simplify(T496* C);
/*CALL_INFIX_AND*/T0* r496extra_local_expanded(T496* C,T0* a1);
/*CALL_INFIX_AND*/void r496function_and_argument_count_check(T496* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/void r496pretty(T496* C,T2 a1);
/*CALL_INFIX_AND*/T6 r496side_effect_free(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496non_void_no_dispatch_type(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496run_feature_for(T496* C,T0* a1);
/*CALL_INFIX_AND*/T0* r496inline_with(T496* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r496twin(T496* C);
/*CALL_INFIX_AND*/void r496bracketed_pretty(T496* C,T2 a1);
/*CALL_INFIX_AND*/T6 r496is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND*/void r496accept(T496* C,T0* a1);
/*CALL_INFIX_AND*/T332 r496start_position(T496* C);
/*CALL_INFIX_AND*/T6 r496is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND*/T0* r496_P_344_declaration_type(T496* C);
/*CALL_INFIX_OR_ELSE*/T6 r493is_balanced_operator(T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493declaration_type(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493adapt_for(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493resolve_in(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493use_current_stack(void);
/*CALL_INFIX_OR_ELSE*/T0* r493collect(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493specialize_2(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493specialize_in(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493written_declaration_type_mark(void);
/*CALL_INFIX_OR_ELSE*/T0* r493simplify(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r493pretty_target(T493* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/void r493safety_check(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493to_expression(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493specialize_thru(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r493feature_accumulator(void);
/*CALL_INFIX_OR_ELSE*/void r493inline_dynamic_dispatch_(T493* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r493to_instruction(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493current_or_twin_init(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r493standard_check_export_and_obsolete_calls(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r493make(T493* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r493arg1(T493* C);
/*CALL_INFIX_OR_ELSE*/T6 r493use_current(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r493init(T493* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r493static_simplify(T493* C);
/*CALL_INFIX_OR_ELSE*/T0* r493extra_local_expanded(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493or_else_name(void);
/*CALL_INFIX_OR_ELSE*/void r493function_and_argument_count_check(T493* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/void r493pretty(T493* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r493side_effect_free(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493non_void_no_dispatch_type(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493run_feature_for(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r493inline_with(T493* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r493twin(T493* C);
/*CALL_INFIX_OR_ELSE*/void r493bracketed_pretty(T493* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r493is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR_ELSE*/void r493accept(T493* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T332 r493start_position(T493* C);
/*CALL_INFIX_OR_ELSE*/T6 r493is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR_ELSE*/T0* r493_P_344_declaration_type(T493* C);
/*CALL_INFIX_OR*/T6 r494is_balanced_operator(T0* a1);
/*CALL_INFIX_OR*/T0* r494declaration_type(T494* C);
/*CALL_INFIX_OR*/T0* r494adapt_for(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494resolve_in(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494eiffel_parser(void);
/*CALL_INFIX_OR*/T0* r494use_current_stack(void);
/*CALL_INFIX_OR*/T0* r494collect(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494specialize_2(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494specialize_in(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494written_declaration_type_mark(void);
/*CALL_INFIX_OR*/T0* r494simplify(T494* C,T0* a1);
/*CALL_INFIX_OR*/void r494pretty_target(T494* C,T2 a1);
/*CALL_INFIX_OR*/void r494safety_check(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494to_expression(T494* C);
/*CALL_INFIX_OR*/T0* r494specialize_thru(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r494feature_accumulator(void);
/*CALL_INFIX_OR*/void r494inline_dynamic_dispatch_(T494* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r494to_instruction(T494* C);
/*CALL_INFIX_OR*/T0* r494current_or_twin_init(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r494standard_check_export_and_obsolete_calls(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r494make(T494* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_OR*/T0* r494arg1(T494* C);
/*CALL_INFIX_OR*/void r494type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/void r494non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/T6 r494use_current(T494* C,T0* a1);
/*CALL_INFIX_OR*/void r494init(T494* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r494static_simplify(T494* C);
/*CALL_INFIX_OR*/T0* r494extra_local_expanded(T494* C,T0* a1);
/*CALL_INFIX_OR*/void r494function_and_argument_count_check(T494* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/void r494pretty(T494* C,T2 a1);
/*CALL_INFIX_OR*/T6 r494side_effect_free(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494non_void_no_dispatch_type(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494run_feature_for(T494* C,T0* a1);
/*CALL_INFIX_OR*/T0* r494inline_with(T494* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r494twin(T494* C);
/*CALL_INFIX_OR*/void r494bracketed_pretty(T494* C,T2 a1);
/*CALL_INFIX_OR*/T6 r494is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR*/void r494accept(T494* C,T0* a1);
/*CALL_INFIX_OR*/T332 r494start_position(T494* C);
/*CALL_INFIX_OR*/T6 r494is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR*/T0* r494_P_344_declaration_type(T494* C);
/*CALL_INFIX_XOR*/T6 r495is_balanced_operator(T0* a1);
/*CALL_INFIX_XOR*/T0* r495declaration_type(T495* C);
/*CALL_INFIX_XOR*/T0* r495adapt_for(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495resolve_in(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495eiffel_parser(void);
/*CALL_INFIX_XOR*/T0* r495use_current_stack(void);
/*CALL_INFIX_XOR*/T0* r495collect(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495specialize_2(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495specialize_in(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495written_declaration_type_mark(void);
/*CALL_INFIX_XOR*/T0* r495simplify(T495* C,T0* a1);
/*CALL_INFIX_XOR*/void r495pretty_target(T495* C,T2 a1);
/*CALL_INFIX_XOR*/void r495safety_check(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495to_expression(T495* C);
/*CALL_INFIX_XOR*/T0* r495specialize_thru(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r495feature_accumulator(void);
/*CALL_INFIX_XOR*/void r495inline_dynamic_dispatch_(T495* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r495to_instruction(T495* C);
/*CALL_INFIX_XOR*/T0* r495current_or_twin_init(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r495standard_check_export_and_obsolete_calls(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r495make(T495* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r495arg1(T495* C);
/*CALL_INFIX_XOR*/void r495type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/void r495non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/T6 r495use_current(T495* C,T0* a1);
/*CALL_INFIX_XOR*/void r495init(T495* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r495static_simplify(T495* C);
/*CALL_INFIX_XOR*/T0* r495extra_local_expanded(T495* C,T0* a1);
/*CALL_INFIX_XOR*/void r495function_and_argument_count_check(T495* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/void r495pretty(T495* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r495side_effect_free(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495non_void_no_dispatch_type(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495run_feature_for(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r495inline_with(T495* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r495twin(T495* C);
/*CALL_INFIX_XOR*/void r495bracketed_pretty(T495* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r495is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_XOR*/void r495accept(T495* C,T0* a1);
/*CALL_INFIX_XOR*/T332 r495start_position(T495* C);
/*CALL_INFIX_XOR*/T6 r495is_stored_in_some_local_variable(void);
/*CALL_INFIX_XOR*/T0* r495_P_344_declaration_type(T495* C);
/*CALL_INFIX_IMPLIES*/T6 r492is_balanced_operator(T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492declaration_type(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492adapt_for(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492resolve_in(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492eiffel_parser(void);
/*CALL_INFIX_IMPLIES*/T0* r492use_current_stack(void);
/*CALL_INFIX_IMPLIES*/T0* r492collect(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492specialize_2(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492specialize_in(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492written_declaration_type_mark(void);
/*CALL_INFIX_IMPLIES*/T0* r492simplify(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r492pretty_target(T492* C,T2 a1);
/*CALL_INFIX_IMPLIES*/void r492safety_check(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492to_expression(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492specialize_thru(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r492feature_accumulator(void);
/*CALL_INFIX_IMPLIES*/void r492inline_dynamic_dispatch_(T492* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r492to_instruction(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492current_or_twin_init(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r492standard_check_export_and_obsolete_calls(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r492make(T492* C,T0* a1,T332 a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r492arg1(T492* C);
/*CALL_INFIX_IMPLIES*/void r492type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/void r492non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/T6 r492use_current(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r492init(T492* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r492static_simplify(T492* C);
/*CALL_INFIX_IMPLIES*/T0* r492extra_local_expanded(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r492function_and_argument_count_check(T492* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/void r492pretty(T492* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r492side_effect_free(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492non_void_no_dispatch_type(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492run_feature_for(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r492inline_with(T492* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r492twin(T492* C);
/*CALL_INFIX_IMPLIES*/void r492bracketed_pretty(T492* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r492is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_IMPLIES*/void r492accept(T492* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T332 r492start_position(T492* C);
/*CALL_INFIX_IMPLIES*/T6 r492is_stored_in_some_local_variable(void);
/*CALL_INFIX_IMPLIES*/T0* r492_P_344_declaration_type(T492* C);
/*CALL_INFIX_IMPLIES*/void r492_P_344_inline_dynamic_dispatch_(T492* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/T0* r451to_expression(T451* C);
/*EXPRESSION_WITH_COMMENT*/void r451make(T451* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r451pretty(T451* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T0* r451simplify(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r451extra_bracket_flag(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451specialize_2(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r451static_simplify(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451specialize_in(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r451inline_dynamic_dispatch_(T451* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r451safety_check(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_result(T451* C);
/*EXPRESSION_WITH_COMMENT*/T2 r451precedence(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451specialize_thru(T451* C,T0* a1,T0* a2,T0* a3);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_static(T451* C);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_stored_in_some_local_variable(void);
/*EXPRESSION_WITH_COMMENT*/void r451accept(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r451adapt_for(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r451declaration_type(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451collect(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_current(T451* C);
/*EXPRESSION_WITH_COMMENT*/void r451pretty_target(T451* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T332 r451start_position(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451twin(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451written_declaration_type_mark(void);
/*EXPRESSION_WITH_COMMENT*/T6 r451use_current(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r451bracketed_pretty(T451* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_void(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451non_void_no_dispatch_type(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r451side_effect_free(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_manifest_string(T451* C);
/*EXPRESSION_WITH_COMMENT*/T6 r451is_implicit_current(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451resolve_in(T451* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r451to_instruction(T451* C);
/*EXPRESSION_WITH_COMMENT*/T0* r451current_or_twin_init(T451* C,T0* a1);
/*ADDRESS_OF*/T0* r452to_expression(T452* C);
/*ADDRESS_OF*/void r452pretty(T452* C,T2 a1);
/*ADDRESS_OF*/T0* r452simplify(T452* C,T0* a1);
/*ADDRESS_OF*/T0* r452specialize_2(T452* C,T0* a1);
/*ADDRESS_OF*/T0* r452static_simplify(T452* C);
/*ADDRESS_OF*/T0* r452specialize_in(T452* C,T0* a1);
/*ADDRESS_OF*/void r452inline_dynamic_dispatch_(T452* C,T0* a1,T0* a2);
/*ADDRESS_OF*/void r452safety_check(T452* C,T0* a1);
/*ADDRESS_OF*/T0* r452specialize_thru(T452* C,T0* a1,T0* a2,T0* a3);
/*ADDRESS_OF*/T6 r452is_stored_in_some_local_variable(void);
/*ADDRESS_OF*/void r452accept(T452* C,T0* a1);
/*ADDRESS_OF*/T0* r452adapt_for(T452* C,T0* a1);
extern T0*oBC452declaration_type;
extern int fBC452declaration_type;
/*ADDRESS_OF*/T0* r452declaration_type(void);
/*ADDRESS_OF*/T0* r452collect(T452* C,T0* a1);
/*ADDRESS_OF*/T332 r452start_position(T452* C);
/*ADDRESS_OF*/T0* r452twin(T452* C);
/*ADDRESS_OF*/T0* r452written_declaration_type_mark(void);
/*ADDRESS_OF*/T6 r452use_current(T452* C,T0* a1);
/*ADDRESS_OF*/void r452bracketed_pretty(T452* C,T2 a1);
/*ADDRESS_OF*/T0* r452non_void_no_dispatch_type(T0* a1);
/*ADDRESS_OF*/T6 r452side_effect_free(T0* a1);
/*ADDRESS_OF*/void r452with_local(T452* C,T0* a1);
/*ADDRESS_OF*/void r452with_feature_name(T452* C,T0* a1);
/*ADDRESS_OF*/T0* r452resolve_in(T0* a1);
/*ADDRESS_OF*/T0* r452to_instruction(T452* C);
/*CLASS_NAME_LIST*/T6 r486wider_than(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486merge(T486* C,T0* a1,T0* a2);
/*CLASS_NAME_LIST*/void r486add_last(T486* C,T0* a1);
/*CLASS_NAME_LIST*/T0* r486item(T486* C,T2 a1);
/*CLASS_NAME_LIST*/T2 r486index_of(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486locate_in_error_handler(T486* C);
/*CLASS_NAME_LIST*/T6 r486gives_permission_to(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486make_1(T486* C,T0* a1);
/*CLASS_NAME_LIST*/void r486append_in(T486* C,T0* a1);
/*CLASS_NAME_LIST*/T2 r486count(T486* C);
/*CLASS_NAME_LIST*/T6 r486gives_permission_to_any(T486* C);
/*CLIENT_LIST*/T272*create272make(T332 a1,T0* a2);
/*CLIENT_LIST*/void r272make(T272* C,T332 a1,T0* a2);
/*CLIENT_LIST*/T6 r272wider_than(T272* C,T0* a1);
/*CLIENT_LIST*/void r272merge(T272* C,T332 a1,T0* a2,T0* a3);
/*CLIENT_LIST*/T0* r272eiffel_view(T272* C);
/*CLIENT_LIST*/T6 r272is_omitted(T272* C);
/*CLIENT_LIST*/T6 r272gives_no_permission(T272* C);
/*CLIENT_LIST*/void r272locate_in_error_handler(T272* C);
/*CLIENT_LIST*/T6 r272gives_permission_to(T272* C,T0* a1);
/*CLIENT_LIST*/T0* r272merge_with(T272* C,T0* a1);
/*CLIENT_LIST*/void r272append_in(T272* C,T0* a1);
/*CLIENT_LIST*/T6 r272gives_permission_to_any(T272* C);
/*EXPORT_LIST*/void r455check_level_2(T455* C,T0* a1,T0* a2);
/*EXPORT_LIST*/void r455make(T455* C,T332 a1,T0* a2);
/*EXPORT_LIST*/T0* r455clients_for(T455* C,T0* a1);
/*EXPORT_ITEM*/void r454make(T454* C,T0* a1,T0* a2);
/*EXPORT_ITEM*/void r454make_all(T454* C,T0* a1);
/*CREATION_CLAUSE*/void r413make(T413* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*CREATION_CLAUSE*/void r413check_manifest_semicolon_check(T413* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r413default_root(T413* C);
/*CREATION_CLAUSE*/T0* r413manifest_make_name(void);
/*CREATION_CLAUSE*/void r413check_manifest_make(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r413extra_expanded_check(T413* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/void r413check_manifest_put(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r413manifest_semicolon_check_name(void);
/*CREATION_CLAUSE*/void r413check_for(T413* C,T0* a1);
/*CREATION_CLAUSE*/T0* r413manifest_put_name(void);
/*CREATION_CLAUSE*/T0* r413user_expanded_default_create_stamp(T413* C,T0* a1);
/*FEATURE_CLAUSE*/void r422make(T422* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_CLAUSE*/void r422add_into(T422* C,T0* a1);
/*CLUSTER_CLASS*/void r739make(T739* C,T0* a1,T0* a2,T0* a3);
/*TAG_NAME*/void r449make(T449* C,T0* a1,T332 a2);
/*ARGUMENT_NAME2*/T0* r352to_expression(T352* C);
/*ARGUMENT_NAME2*/void r352pretty(T352* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r352simplify(T352* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r352static_simplify(T352* C);
/*ARGUMENT_NAME2*/T0* r352specialize_in(T352* C,T0* a1);
/*ARGUMENT_NAME2*/void r352inline_dynamic_dispatch_(T352* C,T0* a1,T0* a2);
/*ARGUMENT_NAME2*/T0* r352specialize_thru(T352* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME2*/T6 r352is_stored_in_some_local_variable(void);
/*ARGUMENT_NAME2*/void r352accept(T352* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r352adapt_for(T352* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r352feature_accumulator(void);
/*ARGUMENT_NAME2*/T0* r352collect(T352* C,T0* a1);
/*ARGUMENT_NAME2*/void r352pretty_target(T352* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r352twin(T352* C);
/*ARGUMENT_NAME2*/T0* r352written_declaration_type_mark(void);
/*ARGUMENT_NAME2*/void r352refer_to(T352* C,T332 a1,T0* a2,T2 a3);
/*ARGUMENT_NAME2*/T6 r352use_current(T0* a1);
/*ARGUMENT_NAME2*/T0* r352non_void_no_dispatch_type(T352* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r352to_string(T352* C);
/*ARGUMENT_NAME2*/T6 r352side_effect_free(T0* a1);
/*ARGUMENT_NAME2*/T0* r352resolve_in(T352* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r352to_instruction(T352* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404to_expression(T404* C);
/*WRITABLE_ATTRIBUTE_NAME*/void r404make(T404* C,T0* a1,T332 a2);
/*WRITABLE_ATTRIBUTE_NAME*/void r404pretty(T404* C,T2 a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404simplify(T404* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404specialize_2(T404* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404static_simplify(T404* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404specialize_in(T404* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r404inline_dynamic_dispatch_(T404* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404specialize_thru(T404* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r404is_stored_in_some_local_variable(void);
/*WRITABLE_ATTRIBUTE_NAME*/void r404accept(T404* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404feature_accumulator(void);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404collect(T404* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r404set_feature_stamp_and_type(T404* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T332 r404start_position(T404* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404twin(T404* C);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r404use_current(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404non_void_no_dispatch_type(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r404side_effect_free(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404resolve_in(T404* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r404to_instruction(T404* C);
/*LOCAL_NAME2*/T0* r387to_expression(T387* C);
/*LOCAL_NAME2*/void r387pretty(T387* C,T2 a1);
/*LOCAL_NAME2*/T0* r387simplify(T387* C,T0* a1);
/*LOCAL_NAME2*/T0* r387static_simplify(T387* C);
/*LOCAL_NAME2*/T0* r387specialize_in(T387* C,T0* a1);
/*LOCAL_NAME2*/void r387inline_dynamic_dispatch_(T387* C,T0* a1,T0* a2);
/*LOCAL_NAME2*/T0* r387specialize_thru(T387* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME2*/T6 r387is_stored_in_some_local_variable(void);
/*LOCAL_NAME2*/void r387accept(T387* C,T0* a1);
/*LOCAL_NAME2*/T0* r387adapt_for(T387* C,T0* a1);
/*LOCAL_NAME2*/T0* r387collect(T387* C,T0* a1);
/*LOCAL_NAME2*/void r387pretty_target(T387* C,T2 a1);
/*LOCAL_NAME2*/T0* r387twin(T387* C);
/*LOCAL_NAME2*/void r387refer_to(T387* C,T332 a1,T0* a2,T2 a3);
/*LOCAL_NAME2*/T6 r387use_current(T0* a1);
/*LOCAL_NAME2*/T0* r387non_void_no_dispatch_type(T387* C,T0* a1);
/*LOCAL_NAME2*/T0* r387to_string(T387* C);
/*LOCAL_NAME2*/T6 r387side_effect_free(T0* a1);
/*LOCAL_NAME2*/T0* r387resolve_in(T387* C,T0* a1);
/*LOCAL_NAME2*/T0* r387to_instruction(T387* C);
/*RUN_TIME_SET*/void r523make(T523* C,T0* a1);
/*RUN_TIME_SET*/void r523force_add(T523* C,T0* a1);
/*RUN_TIME_SET*/T2 r523add_set(T523* C,T0* a1);
/*RUN_TIME_SET*/void r523id_extra_information(T523* C,T0* a1);
/*RUN_TIME_SET*/T0* r523item(T523* C,T2 a1);
/*RUN_TIME_SET*/void r523reset(T523* C);
/*RUN_TIME_SET*/T2 r523count(T523* C);
/*RUN_TIME_SET*/T6 r523has(T523* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r424specialized_ensure_thru(T424* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_signature_in(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r424try_to_undefine_aux(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r424collect(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_require_thru(T424* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_2(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r424with(T424* C,T0* a1,T0* a2,T2 a3);
/*WRITABLE_ATTRIBUTE*/T0* r424simplify(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r424arguments(void);
/*WRITABLE_ATTRIBUTE*/T0* r424specialized_require_thru(T424* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r424first_name(T424* C);
/*WRITABLE_ATTRIBUTE*/T0* r424names(T424* C);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_require_in(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r424add_into(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r424merge_signature_thru(T424* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*WRITABLE_ATTRIBUTE*/T0* r424try_to_undefine(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r424make(T424* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/void r424add_into_(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r424new_run_feature_for(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r424valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T6 r424use_current(T0* a1);
/*WRITABLE_ATTRIBUTE*/void r424obsolete_warning_check(T424* C,T0* a1,T332 a2);
/*WRITABLE_ATTRIBUTE*/T0* r424change_ensure(T424* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r424brand_new_run_feature_for(T424* C,T0* a1,T0* a2,T6 a3);
/*WRITABLE_ATTRIBUTE*/void r424pretty_print_names(T424* C);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_permissions(T424* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/void r424pretty(T424* C,T2 a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T6 r424same_body_as(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r424inline_dynamic_dispatch(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_body_thru(T424* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T6 r424same_signature(T424* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_signature_thru(T424* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_ensure_in(T424* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_ensure_thru(T424* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T0* r424twin(T424* C);
/*WRITABLE_ATTRIBUTE*/void r424accept(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r424inline_expression_0(T424* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*WRITABLE_ATTRIBUTE*/T6 r424valid_redefinition(T424* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T0* r424change_require(T424* C,T0* a1,T6 a2);
extern T0*oBC330obsolete_warning_check_memory;
extern int fBC330obsolete_warning_check_memory;
/*WRITABLE_ATTRIBUTE*/T0* r424obsolete_warning_check_memory(void);
/*WRITABLE_ATTRIBUTE*/T332 r424start_position(T424* C);
/*WRITABLE_ATTRIBUTE*/void r424set_rescue_compound(T424* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r424specialize_body_in(T424* C,T0* a1,T6 a2);
/*CLASS_INVARIANT*/T0* r416to_expression(T416* C);
/*CLASS_INVARIANT*/void r416make(T416* C,T332 a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/T6 r416has_assertion_located_at(T416* C,T332 a1);
/*CLASS_INVARIANT*/void r416pretty(T416* C,T2 a1);
/*CLASS_INVARIANT*/T0* r416simplify(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416specialize_2(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416specialize_in(T416* C,T0* a1);
/*CLASS_INVARIANT*/void r416inline_dynamic_dispatch_(T416* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/T6 r416is_always_true(T416* C,T0* a1);
/*CLASS_INVARIANT*/void r416safety_check(T416* C,T0* a1);
/*CLASS_INVARIANT*/void r416set_list(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416specialize_thru(T416* C,T0* a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/void r416pretty_as_loop_invariant(T416* C,T2 a1);
/*CLASS_INVARIANT*/T2 r416upper(T416* C);
/*CLASS_INVARIANT*/void r416accept(T416* C,T0* a1);
/*CLASS_INVARIANT*/void r416set_eiffel_parser_stamp(T416* C,T2 a1);
/*CLASS_INVARIANT*/T0* r416adapt_for(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416item(T416* C,T2 a1);
/*CLASS_INVARIANT*/T0* r416add_items_from(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416collect(T416* C,T0* a1);
/*CLASS_INVARIANT*/void r416pretty_print_with_tag(T416* C,T2 a1,T0* a2);
/*CLASS_INVARIANT*/T6 r416is_empty(T416* C);
/*CLASS_INVARIANT*/T0* r416specialize_2_without_checks(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416twin(T416* C);
/*CLASS_INVARIANT*/void r416pretty_as_check_compound(T416* C,T2 a1);
/*CLASS_INVARIANT*/T6 r416use_current(T416* C,T0* a1);
/*CLASS_INVARIANT*/void r416breakpoint(T416* C);
/*CLASS_INVARIANT*/void r416crash(T416* C);
/*CLASS_INVARIANT*/T6 r416side_effect_free(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416inline_dynamic_dispatch(T416* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/void r416not_yet_implemented(T416* C);
/*CLASS_INVARIANT*/T2 r416count(T416* C);
/*CLASS_INVARIANT*/void r416do_all(T416* C,T0* a1);
/*CLASS_INVARIANT*/T0* r416to_instruction(T416* C);
/*CLASS_INVARIANT*/T2 r416lower(T416* C);
/*PARENT_LISTS*/void r444check_level_2(T444* C,T0* a1);
/*PARENT_LISTS*/void r444make(T444* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*PARENT_LISTS*/T0* r444insert_edge(T444* C,T2 a1);
/*PARENT_LISTS*/T0* r444inherit_edge(T444* C,T2 a1);
/*PARENT_LISTS*/void r444initialize_and_check_level_1(T444* C);
/*PARENT_LISTS*/T6 r444get_permission_of(T444* C,T0* a1);
/*PARENT_LISTS*/void r444id_extra_information(T444* C,T0* a1);
/*PARENT_LISTS*/T2 r444inherit_count(T444* C);
/*PARENT_LISTS*/T332 r444undefine_position_of(T444* C,T0* a1);
/*PARENT_LISTS*/void r444set_insert_member(T444* C,T2 a1);
/*PARENT_LISTS*/T2 r444insert_count(T444* C);
/*FEATURE_CLAUSE_LIST*/void r421make(T421* C,T0* a1);
/*FEATURE_CLAUSE_LIST*/void r421get_started(T421* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r441make(T441* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r441all_positions_in_error_handler(T441* C);
/*CREATION_CLAUSE_LIST*/T0* r441get_clause(T441* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r441default_root(T441* C);
/*CREATION_CLAUSE_LIST*/void r441extra_expanded_check(T441* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T332 r441start_position(T441* C);
/*CREATION_CLAUSE_LIST*/T0* r441root_creation_search(T441* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r441check_for(T441* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r441user_expanded_default_create_stamp(T441* C,T0* a1);
/*INDEX_LIST*/void r419make(T419* C,T0* a1);
/*GRAPH_NODE*/void r516make(T516* C,T0* a1);
/*GRAPH_NODE*/T2 r516recompute_run_time_set(T516* C,T2 a1);
/*GRAPH_NODE*/void r516id_extra_information(T516* C,T0* a1);
/*GRAPH_NODE*/void r516reset(T516* C);
/*GRAPH_NODE*/void r516collect_way_to(T516* C,T0* a1);
/*GRAPH_NODE*/T2 r516destination_count(T516* C);
/*GRAPH_NODE*/T2 r516run_time_set_add(T516* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T518*create518make(T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r518to_expression(T518* C);
/*NON_VOID_NO_DISPATCH*/void r518make(T518* C,T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r518simplify(T518* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r518once_function(T518* C);
/*NON_VOID_NO_DISPATCH*/T0* r518static_simplify(T518* C);
/*NON_VOID_NO_DISPATCH*/void r518inline_dynamic_dispatch_(T518* C,T0* a1,T0* a2);
/*NON_VOID_NO_DISPATCH*/T0* r518run_feature(T518* C);
/*NON_VOID_NO_DISPATCH*/T6 r518is_stored_in_some_local_variable(void);
/*NON_VOID_NO_DISPATCH*/void r518accept(T518* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r518collect(T518* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T332 r518start_position(T518* C);
/*NON_VOID_NO_DISPATCH*/T0* r518twin(T518* C);
/*NON_VOID_NO_DISPATCH*/T0* r518written_declaration_type_mark(void);
/*NON_VOID_NO_DISPATCH*/T6 r518use_current(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r518non_void_no_dispatch_type(T518* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T6 r518side_effect_free(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r518external_function(T518* C);
/*NON_VOID_NO_DISPATCH*/T0* r518resolve_in(T518* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r518to_instruction(T518* C);
/*AGENT_ARGS*/T6 r551is_equal(T551* C,T0* a1);
/*AGENT_ARGS*/void r551make(T551* C,T0* a1,T0* a2);
/*AGENT_ARGS*/T2 r551hash_code(T551* C);
/*EXTERNAL_FUNCTION*/void r394add_into_shared(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r394inline_expression_1(T394* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T0* r394inline_expression_0(T394* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_FUNCTION*/void r394inline_dynamic_dispatch(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r394specialize_signature_in(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394specialize_require_thru(T394* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r394specialize_permissions(T394* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r394c_plus_plus_name(T394* C);
/*EXTERNAL_FUNCTION*/T0* r394specialized_ensure_thru(T394* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r394specialize_2(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394external_name(T394* C);
/*EXTERNAL_FUNCTION*/T0* r394specialize_ensure_thru(T394* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r394specialized_require_thru(T394* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r394true_or_false(T6 a1,T332 a2);
/*EXTERNAL_FUNCTION*/T0* r394try_to_undefine_aux(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r394make_external_routine(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r394specialize_body_thru(T394* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r394specialize_body_in(T394* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r394integer_constant(T0* a1);
/*EXTERNAL_FUNCTION*/void r394set_rescue_compound(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394simplify(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394specialize_ensure_in(T394* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r394first_name(T394* C);
/*EXTERNAL_FUNCTION*/void r394pretty_print_names(T394* C);
/*EXTERNAL_FUNCTION*/void r394add_into(T394* C,T0* a1,T0* a2);
extern T0*oBC28any_copy_fs;
extern int fBC28any_copy_fs;
/*EXTERNAL_FUNCTION*/T0* r394any_copy_fs(void);
/*EXTERNAL_FUNCTION*/T6 r394same_signature(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r394brand_new_run_feature_for(T394* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_FUNCTION*/void r394accept(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394try_to_undefine(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r394hook_collect(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r394init(T394* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_FUNCTION*/void r394inline_dynamic_dispatch_(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r394change_ensure(T394* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r394names(T394* C);
/*EXTERNAL_FUNCTION*/T0* r394current_or_twin_init(T394* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_FUNCTION*/T0* r394merge_signature_thru(T394* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/void r394make_routine(T394* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/void r394collect(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394twin(T394* C);
/*EXTERNAL_FUNCTION*/T6 r394use_current(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r394adapt_routine_body_for(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r394collect_internals_handler(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r394pretty(T394* C,T2 a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r394specialize_signature_thru(T394* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r394new_run_feature_for(T394* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T6 r394valid_redefinition(T394* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r394current_or_twin_init_no_body(T394* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/T0* r394specialize_require_in(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r394add_into_(T394* C,T0* a1,T0* a2);
extern T0*oBC28clear_all_name;
extern int fBC28clear_all_name;
/*EXTERNAL_FUNCTION*/T0* r394clear_all_name(void);
/*EXTERNAL_FUNCTION*/void r394collect_body(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r394valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r394change_require(T394* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T2 r394argument_rank_of(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T6 r394same_body_as(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r394make(T394* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T6 r394side_effect_free(T394* C,T0* a1);
/*EXTERNAL_FUNCTION*/T332 r394start_position(T394* C);
/*EXTERNAL_FUNCTION*/void r394obsolete_warning_check(T394* C,T0* a1,T332 a2);
extern T0*oBC28copy_name;
extern int fBC28copy_name;
/*EXTERNAL_FUNCTION*/T0* r394copy_name(void);
/*EXTERNAL_FUNCTION*/T0* r394obsolete_warning_check_memory(void);
/*EXTERNAL_FUNCTION*/void r394pretty_print_routine_body(T394* C,T2 a1);
extern T0*oBC625implicit_any;
extern int fBC625implicit_any;
/*ANONYMOUS_FEATURE_MIXER*/T0* r625implicit_any(void);
/*ANONYMOUS_FEATURE_MIXER*/void r625make(T625* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r625error_handler_show_resulting_client_list(T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r625remove_body(T625* C);
/*ANONYMOUS_FEATURE_MIXER*/void r625specialize_feature(T625* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r625build_precursor(T625* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r625set_body(T625* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/void r625add_local_definition(T625* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r625error_handler_add_export_positions(T625* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r625add_inherited_definition(T625* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/T0* r625result_type(T625* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r625specialize_precursor(T625* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ANONYMOUS_FEATURE_MIXER*/T0* r625formal_arg_list(T625* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r625export_status_for(T625* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r625specialize_signature(T625* C,T0* a1);
/*ABSOLUTE_FEATURE_NAME*/T6 r329is_equal(T329* C,T329 a1);
/*ABSOLUTE_FEATURE_NAME*/void r329make(T329* C,T0* a1,T0* a2);
/*ABSOLUTE_FEATURE_NAME*/T6 r329matches(T329* C,T0* a1,T0* a2);
/*RUN_FEATURE_2*/void r400compute_use_current(T400* C);
/*RUN_FEATURE_2*/void r400for(T400* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_2*/T6 r400need_c_function(T400* C);
/*RUN_FEATURE_2*/void r400accept(T400* C,T0* a1);
/*RUN_FEATURE_2*/void r400set_result_type(T400* C);
/*RUN_FEATURE_2*/T332 r400start_position(T400* C);
/*RUN_FEATURE_2*/T6 r400use_current(T400* C);
/*RUN_FEATURE_2*/void r400mapping_name_in(T400* C,T0* a1);
/*RUN_FEATURE_2*/void r400do_adapt(T400* C);
/*RUN_FEATURE_2*/T0* r400arguments(void);
/*RUN_FEATURE_2*/void r400adapt(T400* C);
/*RUN_FEATURE_2*/T0* r400feature_stamp(T400* C);
/*CECIL_ENTRY*/void r552make(T552* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CECIL_ENTRY*/T0* r552echo(void);
/*CECIL_ENTRY*/void r552on_echo(T552* C,T0* a1);
/*CECIL_ENTRY*/void r552get_started(T552* C,T0* a1);
/*CECIL_ENTRY*/T0* r552default_create_name(void);
/*CECIL_ENTRY*/T0* r552collect(T552* C,T0* a1);
/*CECIL_ENTRY*/T0* r552any_default_create_fs(void);
/*CECIL_ENTRY*/void r552inline_dynamic_dispatch(T552* C,T0* a1,T0* a2);
/*CECIL_ENTRY*/T0* r552anonymous_feature(T552* C);
/*STRING_RECYCLING_ITEM*/void r301set_item(T301* C,T0* a1);
/*STRING_RECYCLING_ITEM*/T0* r301item(T301* C);
/*STRING_RECYCLING_ITEM_SORTER*/T2 r703insert_index(T0* a1,T301 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r703lt(T301 a1,T301 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r703lte(T301 a1,T301 a2);
/*PROCESS_FACTORY*/void r515default_create(T515* C);
extern T0*oBC515default_group;
extern int fBC515default_group;
/*PROCESS_FACTORY*/T0* r515default_group(T515* C);
/*PROCESS_FACTORY*/T0* r515create_group(T515* C);
/*PROCESS_FACTORY*/void r515crash(T515* C);
/*PROCESS_FACTORY*/void r515not_yet_implemented(T515* C);
/*PROCESS_FACTORY*/T0* r515create_process(T515* C);
/*POSIX_PATH_NAME*/void r762remove_last(T762* C);
/*POSIX_PATH_NAME*/void r762make_empty(T762* C);
/*POSIX_PATH_NAME*/void r762start_join(T762* C,T0* a1,T2 a2);
/*POSIX_PATH_NAME*/void r762join_element(T762* C,T0* a1);
/*POSIX_PATH_NAME*/T2 r762start_join_to(T762* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r762drive_specification(void);
/*POSIX_PATH_NAME*/void r762end_join(T762* C);
/*POSIX_PATH_NAME*/void r762make_from_string(T762* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r762last(T762* C);
/*POSIX_PATH_NAME*/void r762add_last(T762* C,T0* a1);
/*POSIX_PATH_NAME*/T6 r762is_separator(T3 a1);
/*POSIX_PATH_NAME*/T6 r762is_absolute(T762* C);
/*POSIX_PATH_NAME*/void r762go_up(T762* C);
/*POSIX_PATH_NAME*/void r762make_current(T762* C);
/*POSIX_PATH_NAME*/T2 r762scan_element(T762* C,T2 a1,T0* a2);
/*POSIX_PATH_NAME*/T6 r762is_valid_path(T0* a1);
/*POSIX_PATH_NAME*/void r762join_to(T762* C,T0* a1);
/*POSIX_PATH_NAME*/void r762join(T762* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r762short_name(T762* C);
/*POSIX_PATH_NAME*/void r762join_element_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/void r762join_directory_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/T2 r762count(T762* C);
/*POSIX_PATH_NAME*/void r762make_root(T762* C);
/*CST_ATT_CHARACTER*/T0* r632specialized_ensure_thru(T632* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r632try_to_undefine_aux(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r632collect(T632* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r632specialize_require_thru(T632* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r632specialize_2(T632* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r632simplify(T632* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r632arguments(void);
/*CST_ATT_CHARACTER*/T0* r632specialized_require_thru(T632* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r632first_name(T632* C);
/*CST_ATT_CHARACTER*/void r632collect_body(T632* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r632names(T632* C);
/*CST_ATT_CHARACTER*/T0* r632specialize_require_in(T632* C,T0* a1);
/*CST_ATT_CHARACTER*/void r632add_into(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r632merge_signature_thru(T632* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_CHARACTER*/T0* r632try_to_undefine(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r632make(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r632add_into_(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r632new_run_feature_for(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r632valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T6 r632use_current(T0* a1);
/*CST_ATT_CHARACTER*/void r632obsolete_warning_check(T632* C,T0* a1,T332 a2);
/*CST_ATT_CHARACTER*/T0* r632change_ensure(T632* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r632brand_new_run_feature_for(T632* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_CHARACTER*/void r632pretty_print_names(T632* C);
/*CST_ATT_CHARACTER*/T0* r632specialize_permissions(T632* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/void r632pretty(T632* C,T2 a1,T6 a2);
/*CST_ATT_CHARACTER*/T6 r632same_body_as(T632* C,T0* a1);
/*CST_ATT_CHARACTER*/void r632inline_dynamic_dispatch(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T6 r632same_signature(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r632specialize_signature_thru(T632* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r632specialize_ensure_in(T632* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r632specialize_ensure_thru(T632* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_CHARACTER*/T0* r632twin(T632* C);
/*CST_ATT_CHARACTER*/void r632add_into_shared(T632* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r632inline_expression_0(T632* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_CHARACTER*/T6 r632valid_redefinition(T632* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T0* r632change_require(T632* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r632obsolete_warning_check_memory(void);
/*CST_ATT_CHARACTER*/T332 r632start_position(T632* C);
/*CST_ATT_CHARACTER*/void r632set_rescue_compound(T632* C,T0* a1);
/*CST_ATT_STRING*/T0* r640specialized_ensure_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r640try_to_undefine_aux(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r640collect(T640* C,T0* a1);
/*CST_ATT_STRING*/T0* r640specialize_require_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r640specialize_2(T640* C,T0* a1);
/*CST_ATT_STRING*/void r640with(T640* C,T0* a1,T0* a2,T2 a3);
/*CST_ATT_STRING*/T0* r640simplify(T640* C,T0* a1);
/*CST_ATT_STRING*/T0* r640arguments(void);
/*CST_ATT_STRING*/T0* r640specialized_require_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r640first_name(T640* C);
/*CST_ATT_STRING*/void r640collect_body(T640* C,T0* a1);
/*CST_ATT_STRING*/T0* r640names(T640* C);
/*CST_ATT_STRING*/T0* r640specialize_require_in(T640* C,T0* a1);
/*CST_ATT_STRING*/void r640add_into(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r640merge_signature_thru(T640* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_STRING*/T0* r640try_to_undefine(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r640make(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r640add_into_(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r640new_run_feature_for(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r640valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T6 r640use_current(T0* a1);
/*CST_ATT_STRING*/void r640obsolete_warning_check(T640* C,T0* a1,T332 a2);
/*CST_ATT_STRING*/T0* r640change_ensure(T640* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r640brand_new_run_feature_for(T640* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_STRING*/void r640pretty_print_names(T640* C);
/*CST_ATT_STRING*/T0* r640specialize_permissions(T640* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/void r640pretty(T640* C,T2 a1,T6 a2);
/*CST_ATT_STRING*/T6 r640same_body_as(T640* C,T0* a1);
/*CST_ATT_STRING*/void r640inline_dynamic_dispatch(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T6 r640same_signature(T640* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r640specialize_signature_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r640specialize_ensure_in(T640* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r640specialize_ensure_thru(T640* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_STRING*/T0* r640twin(T640* C);
/*CST_ATT_STRING*/T0* r640inline_expression_0(T640* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_STRING*/T6 r640valid_redefinition(T640* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T0* r640change_require(T640* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r640obsolete_warning_check_memory(void);
/*CST_ATT_STRING*/T332 r640start_position(T640* C);
/*CST_ATT_STRING*/void r640set_rescue_compound(T640* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553specialized_ensure_thru(T553* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r553specialize_signature_in(T553* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553try_to_undefine_aux(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r553collect(T553* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553specialize_require_thru(T553* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r553specialize_2(T553* C,T0* a1);
/*ONCE_FUNCTION*/T6 r553empty_body_side_effect_free_effective_routine(T553* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553simplify(T553* C,T0* a1);
/*ONCE_FUNCTION*/void r553pretty_print_routine_body(T553* C,T2 a1);
extern T0*oBC553type_std_output;
extern int fBC553type_std_output;
/*ONCE_FUNCTION*/T0* r553type_std_output(void);
/*ONCE_FUNCTION*/T0* r553specialized_require_thru(T553* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/void r553pretty_print_rescue(T553* C,T2 a1);
extern T0*oBC28flush_name;
extern int fBC28flush_name;
/*ONCE_FUNCTION*/T0* r553flush_name(void);
/*ONCE_FUNCTION*/T0* r553first_name(T553* C);
/*ONCE_FUNCTION*/T0* r553rescue_compound_in(T553* C,T0* a1);
/*ONCE_FUNCTION*/void r553collect_body(T553* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553names(T553* C);
/*ONCE_FUNCTION*/T0* r553specialize_require_in(T553* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r553inline_dynamic_dispatch_(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T6 r553no_rescue_no_local_expanded_in(T553* C,T0* a1);
/*ONCE_FUNCTION*/void r553add_into(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r553make_effective_routine(T553* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T0* r553merge_signature_thru(T553* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_FUNCTION*/void r553make_routine(T553* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r553try_to_undefine(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r553make(T553* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*ONCE_FUNCTION*/void r553add_into_(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r553new_run_feature_for(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r553valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T6 r553use_current(T553* C,T0* a1);
/*ONCE_FUNCTION*/void r553obsolete_warning_check(T553* C,T0* a1,T332 a2);
/*ONCE_FUNCTION*/void r553init(T553* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r553change_ensure(T553* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r553brand_new_run_feature_for(T553* C,T0* a1,T0* a2,T6 a3);
/*ONCE_FUNCTION*/void r553pretty_print_once_or_do(T2 a1);
/*ONCE_FUNCTION*/void r553pretty_print_names(T553* C);
/*ONCE_FUNCTION*/T0* r553specialize_permissions(T553* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/void r553hook_collect(T553* C,T0* a1);
/*ONCE_FUNCTION*/void r553pretty(T553* C,T2 a1,T6 a2);
/*ONCE_FUNCTION*/T6 r553same_body_as(T553* C,T0* a1);
/*ONCE_FUNCTION*/void r553inline_dynamic_dispatch(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r553specialize_body_thru(T553* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T6 r553same_signature(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T332 r553sedb_trace_before_exit(T553* C);
/*ONCE_FUNCTION*/T0* r553specialize_signature_thru(T553* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r553specialize_ensure_in(T553* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r553specialize_ensure_thru(T553* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T0* r553twin(T553* C);
/*ONCE_FUNCTION*/void r553add_into_shared(T553* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r553accept(T553* C,T0* a1);
/*ONCE_FUNCTION*/T0* r553inline_expression_0(T553* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T6 r553valid_redefinition(T553* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r553change_require(T553* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r553obsolete_warning_check_memory(void);
/*ONCE_FUNCTION*/T332 r553start_position(T553* C);
/*ONCE_FUNCTION*/T0* r553specialize_body_in(T553* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T6 r553_P_330_same_body_as(T553* C,T0* a1);
/*CST_ATT_REAL*/T0* r645specialized_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r645try_to_undefine_aux(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r645collect(T645* C,T0* a1);
/*CST_ATT_REAL*/T0* r645specialize_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r645specialize_2(T645* C,T0* a1);
/*CST_ATT_REAL*/T0* r645simplify(T645* C,T0* a1);
/*CST_ATT_REAL*/T0* r645arguments(void);
/*CST_ATT_REAL*/T0* r645specialized_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r645first_name(T645* C);
/*CST_ATT_REAL*/void r645collect_body(T645* C,T0* a1);
/*CST_ATT_REAL*/T0* r645names(T645* C);
/*CST_ATT_REAL*/T0* r645specialize_require_in(T645* C,T0* a1);
/*CST_ATT_REAL*/void r645add_into(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r645merge_signature_thru(T645* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_REAL*/T0* r645try_to_undefine(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r645make(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r645add_into_(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r645new_run_feature_for(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r645valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T6 r645use_current(T0* a1);
/*CST_ATT_REAL*/void r645obsolete_warning_check(T645* C,T0* a1,T332 a2);
/*CST_ATT_REAL*/T0* r645change_ensure(T645* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r645brand_new_run_feature_for(T645* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_REAL*/void r645pretty_print_names(T645* C);
/*CST_ATT_REAL*/T0* r645specialize_permissions(T645* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/void r645pretty(T645* C,T2 a1,T6 a2);
/*CST_ATT_REAL*/T6 r645same_body_as(T645* C,T0* a1);
/*CST_ATT_REAL*/void r645inline_dynamic_dispatch(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T6 r645same_signature(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r645specialize_signature_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r645specialize_ensure_in(T645* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r645specialize_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_REAL*/T0* r645twin(T645* C);
/*CST_ATT_REAL*/void r645add_into_shared(T645* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r645inline_expression_0(T645* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_REAL*/T6 r645valid_redefinition(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T0* r645change_require(T645* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r645obsolete_warning_check_memory(void);
/*CST_ATT_REAL*/T332 r645start_position(T645* C);
/*CST_ATT_REAL*/void r645set_rescue_compound(T645* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r642specialized_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r642try_to_undefine_aux(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r642collect(T642* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r642specialize_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/void r642pretty_constant_value(T642* C,T2 a1);
/*CST_ATT_BOOLEAN*/T0* r642specialize_2(T642* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r642simplify(T642* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r642arguments(void);
/*CST_ATT_BOOLEAN*/T0* r642specialized_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r642first_name(T642* C);
/*CST_ATT_BOOLEAN*/void r642collect_body(T642* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r642names(T642* C);
/*CST_ATT_BOOLEAN*/T0* r642specialize_require_in(T642* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r642add_into(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r642merge_signature_thru(T642* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_BOOLEAN*/T0* r642try_to_undefine(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r642make(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r642add_into_(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r642new_run_feature_for(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r642valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T6 r642use_current(T0* a1);
/*CST_ATT_BOOLEAN*/void r642obsolete_warning_check(T642* C,T0* a1,T332 a2);
/*CST_ATT_BOOLEAN*/T0* r642change_ensure(T642* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r642brand_new_run_feature_for(T642* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_BOOLEAN*/void r642pretty_print_names(T642* C);
/*CST_ATT_BOOLEAN*/T0* r642specialize_permissions(T642* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/void r642pretty(T642* C,T2 a1,T6 a2);
/*CST_ATT_BOOLEAN*/T6 r642same_body_as(T642* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r642inline_dynamic_dispatch(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T6 r642same_signature(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r642specialize_signature_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r642specialize_ensure_in(T642* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r642specialize_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_BOOLEAN*/T0* r642twin(T642* C);
/*CST_ATT_BOOLEAN*/void r642add_into_shared(T642* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r642inline_expression_0(T642* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_BOOLEAN*/T6 r642valid_redefinition(T642* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T0* r642change_require(T642* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r642obsolete_warning_check_memory(void);
/*CST_ATT_BOOLEAN*/T332 r642start_position(T642* C);
/*CST_ATT_BOOLEAN*/void r642set_rescue_compound(T642* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r643specialized_ensure_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r643specialize_signature_in(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r643try_to_undefine_aux(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r643collect(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r643specialize_require_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/void r643from_effective(T643* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*DEFERRED_FUNCTION*/T0* r643specialize_2(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r643simplify(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/void r643pretty_print_routine_body(T2 a1);
/*DEFERRED_FUNCTION*/T0* r643specialized_require_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r643first_name(T643* C);
/*DEFERRED_FUNCTION*/T0* r643names(T643* C);
/*DEFERRED_FUNCTION*/T0* r643specialize_require_in(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/void r643add_into(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r643merge_signature_thru(T643* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_FUNCTION*/void r643make_routine(T643* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r643try_to_undefine(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r643make(T643* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*DEFERRED_FUNCTION*/void r643add_into_(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r643new_run_feature_for(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r643valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T6 r643use_current(T0* a1);
/*DEFERRED_FUNCTION*/void r643obsolete_warning_check(T643* C,T0* a1,T332 a2);
/*DEFERRED_FUNCTION*/T0* r643change_ensure(T643* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r643brand_new_run_feature_for(T643* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_FUNCTION*/void r643pretty_print_names(T643* C);
/*DEFERRED_FUNCTION*/T0* r643specialize_permissions(T643* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/void r643pretty(T643* C,T2 a1,T6 a2);
/*DEFERRED_FUNCTION*/T6 r643same_body_as(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/void r643inline_dynamic_dispatch(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T6 r643same_signature(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r643specialize_signature_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r643specialize_ensure_in(T643* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r643specialize_ensure_thru(T643* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_FUNCTION*/T0* r643twin(T643* C);
/*DEFERRED_FUNCTION*/void r643add_into_shared(T643* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r643accept(T643* C,T0* a1);
/*DEFERRED_FUNCTION*/T6 r643valid_redefinition(T643* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r643change_require(T643* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r643obsolete_warning_check_memory(void);
/*DEFERRED_FUNCTION*/T332 r643start_position(T643* C);
/*DEFERRED_FUNCTION*/void r643set_rescue_compound(T643* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638specialized_ensure_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r638current_or_twin_init_no_body(T638* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_signature_in(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638try_to_undefine_aux(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r638collect(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_require_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_2(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638simplify(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r638pretty_print_routine_body(T638* C,T2 a1);
/*EXTERNAL_PROCEDURE*/T0* r638specialized_require_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/void r638make_external_routine(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638first_name(T638* C);
/*EXTERNAL_PROCEDURE*/void r638collect_body(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638names(T638* C);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_require_in(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r638inline_dynamic_dispatch_(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638current_or_twin_init(T638* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_PROCEDURE*/void r638add_into(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638merge_signature_thru(T638* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/void r638make_routine(T638* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r638try_to_undefine(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r638make(T638* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_PROCEDURE*/void r638add_into_(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638new_run_feature_for(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638result_type(void);
/*EXTERNAL_PROCEDURE*/void r638valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r638adapt_routine_body_for(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r638use_current(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r638obsolete_warning_check(T638* C,T0* a1,T332 a2);
/*EXTERNAL_PROCEDURE*/void r638init(T638* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_PROCEDURE*/T2 r638argument_rank_of(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638external_name(T638* C);
/*EXTERNAL_PROCEDURE*/T0* r638change_ensure(T638* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r638brand_new_run_feature_for(T638* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_PROCEDURE*/void r638pretty_print_names(T638* C);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_permissions(T638* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/void r638hook_collect(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r638pretty(T638* C,T2 a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T6 r638same_body_as(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r638inline_dynamic_dispatch(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_body_thru(T638* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T6 r638same_signature(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_signature_thru(T638* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_ensure_in(T638* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_ensure_thru(T638* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T0* r638twin(T638* C);
/*EXTERNAL_PROCEDURE*/void r638add_into_shared(T638* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r638accept(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r638valid_redefinition(T638* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r638change_require(T638* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r638obsolete_warning_check_memory(void);
/*EXTERNAL_PROCEDURE*/T332 r638start_position(T638* C);
/*EXTERNAL_PROCEDURE*/void r638set_rescue_compound(T638* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r638c_plus_plus_name(T638* C);
/*EXTERNAL_PROCEDURE*/T0* r638specialize_body_in(T638* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r641specialized_ensure_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r641specialize_signature_in(T641* C,T0* a1);
/*E_PROCEDURE*/T0* r641inline_instruction_n(T641* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r641try_to_undefine_aux(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r641inline_proc_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T0* r641inline_proc_call_0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r641collect(T641* C,T0* a1);
/*E_PROCEDURE*/T0* r641specialize_require_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r641specialize_2(T641* C,T0* a1);
/*E_PROCEDURE*/T6 r641empty_body_side_effect_free_effective_routine(T641* C,T0* a1);
/*E_PROCEDURE*/T0* r641simplify(T641* C,T0* a1);
/*E_PROCEDURE*/void r641pretty_print_routine_body(T641* C,T2 a1);
/*E_PROCEDURE*/T0* r641specialized_require_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/void r641pretty_print_rescue(T641* C,T2 a1);
/*E_PROCEDURE*/T0* r641first_name(T641* C);
/*E_PROCEDURE*/T0* r641inline_instruction_1(T641* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r641inline_instruction_0(T641* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r641rescue_compound_in(T641* C,T0* a1);
/*E_PROCEDURE*/void r641collect_body(T641* C,T0* a1);
/*E_PROCEDURE*/T0* r641names(T641* C);
/*E_PROCEDURE*/T0* r641specialize_require_in(T641* C,T0* a1);
/*E_PROCEDURE*/T0* r641remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_PROCEDURE*/void r641inline_dynamic_dispatch_(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r641no_rescue_no_local_expanded_in(T641* C,T0* a1);
/*E_PROCEDURE*/void r641add_into(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r641merge_signature_thru(T641* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_PROCEDURE*/void r641make_routine(T641* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r641try_to_undefine(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r641make(T641* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_PROCEDURE*/void r641add_into_(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r641new_run_feature_for(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r641result_type(void);
/*E_PROCEDURE*/void r641valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T6 r641use_current(T641* C,T0* a1);
/*E_PROCEDURE*/void r641obsolete_warning_check(T641* C,T0* a1,T332 a2);
/*E_PROCEDURE*/void r641init(T641* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r641change_ensure(T641* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r641brand_new_run_feature_for(T641* C,T0* a1,T0* a2,T6 a3);
/*E_PROCEDURE*/void r641pretty_print_once_or_do(T2 a1);
/*E_PROCEDURE*/void r641pretty_print_names(T641* C);
/*E_PROCEDURE*/T0* r641specialize_permissions(T641* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r641left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r641pretty(T641* C,T2 a1,T6 a2);
/*E_PROCEDURE*/T6 r641same_body_as(T641* C,T0* a1);
/*E_PROCEDURE*/void r641inline_dynamic_dispatch(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r641specialize_body_thru(T641* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r641inline_proc_call_n(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T6 r641same_signature(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T332 r641sedb_trace_before_exit(T641* C);
/*E_PROCEDURE*/T0* r641specialize_signature_thru(T641* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r641specialize_ensure_in(T641* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r641specialize_ensure_thru(T641* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r641twin(T641* C);
/*E_PROCEDURE*/void r641add_into_shared(T641* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r641accept(T641* C,T0* a1);
/*E_PROCEDURE*/T0* r641left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r641valid_redefinition(T641* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r641change_require(T641* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r641obsolete_warning_check_memory(void);
/*E_PROCEDURE*/T332 r641start_position(T641* C);
/*E_PROCEDURE*/T0* r641specialize_body_in(T641* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T6 r641_P_330_same_body_as(T641* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r639specialized_ensure_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r639try_to_undefine_aux(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r639collect(T639* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r639specialize_require_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r639specialize_2(T639* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r639simplify(T639* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r639arguments(void);
/*CST_ATT_INTEGER*/T0* r639specialized_require_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r639first_name(T639* C);
/*CST_ATT_INTEGER*/void r639collect_body(T639* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r639names(T639* C);
/*CST_ATT_INTEGER*/T0* r639specialize_require_in(T639* C,T0* a1);
/*CST_ATT_INTEGER*/void r639add_into(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r639merge_signature_thru(T639* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_INTEGER*/T0* r639try_to_undefine(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r639make(T639* C,T0* a1);
/*CST_ATT_INTEGER*/void r639add_into_(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r639new_run_feature_for(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r639valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T6 r639use_current(T0* a1);
/*CST_ATT_INTEGER*/void r639obsolete_warning_check(T639* C,T0* a1,T332 a2);
/*CST_ATT_INTEGER*/T0* r639change_ensure(T639* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r639brand_new_run_feature_for(T639* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_INTEGER*/void r639pretty_print_names(T639* C);
/*CST_ATT_INTEGER*/T0* r639specialize_permissions(T639* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/void r639pretty(T639* C,T2 a1,T6 a2);
/*CST_ATT_INTEGER*/T6 r639same_body_as(T639* C,T0* a1);
/*CST_ATT_INTEGER*/void r639inline_dynamic_dispatch(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T6 r639same_signature(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r639specialize_signature_thru(T639* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r639specialize_ensure_in(T639* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r639specialize_ensure_thru(T639* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_INTEGER*/T0* r639twin(T639* C);
/*CST_ATT_INTEGER*/void r639add_into_shared(T639* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r639inline_expression_0(T639* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_INTEGER*/T6 r639valid_redefinition(T639* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T0* r639change_require(T639* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r639obsolete_warning_check_memory(void);
/*CST_ATT_INTEGER*/T332 r639start_position(T639* C);
/*CST_ATT_INTEGER*/void r639set_rescue_compound(T639* C,T0* a1);
/*E_FUNCTION*/T0* r644specialized_ensure_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r644specialize_signature_in(T644* C,T0* a1);
/*E_FUNCTION*/T0* r644try_to_undefine_aux(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r644collect(T644* C,T0* a1);
/*E_FUNCTION*/T0* r644specialize_require_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r644specialize_2(T644* C,T0* a1);
/*E_FUNCTION*/T6 r644empty_body_side_effect_free_effective_routine(T644* C,T0* a1);
/*E_FUNCTION*/T0* r644inline_eq_neq1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r644inline_eq_neq0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r644simplify(T644* C,T0* a1);
/*E_FUNCTION*/void r644pretty_print_routine_body(T644* C,T2 a1);
/*E_FUNCTION*/T0* r644specialized_require_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/void r644pretty_print_rescue(T644* C,T2 a1);
/*E_FUNCTION*/T0* r644first_name(T644* C);
/*E_FUNCTION*/T0* r644rescue_compound_in(T644* C,T0* a1);
/*E_FUNCTION*/void r644collect_body(T644* C,T0* a1);
/*E_FUNCTION*/T0* r644names(T644* C);
/*E_FUNCTION*/T0* r644specialize_require_in(T644* C,T0* a1);
/*E_FUNCTION*/T0* r644remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_FUNCTION*/void r644inline_dynamic_dispatch_(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/T6 r644no_rescue_no_local_expanded_in(T644* C,T0* a1);
/*E_FUNCTION*/void r644add_into(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r644make_effective_routine(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r644inline_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r644merge_signature_thru(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_FUNCTION*/void r644make_routine(T644* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r644try_to_undefine(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r644make(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/void r644add_into_(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r644new_run_feature_for(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r644inline_eq_neq0_(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/void r644valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T6 r644use_current(T644* C,T0* a1);
/*E_FUNCTION*/void r644obsolete_warning_check(T644* C,T0* a1,T332 a2);
/*E_FUNCTION*/void r644init(T644* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r644inline_expression_n(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r644change_ensure(T644* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r644brand_new_run_feature_for(T644* C,T0* a1,T0* a2,T6 a3);
/*E_FUNCTION*/void r644pretty_print_once_or_do(T2 a1);
/*E_FUNCTION*/void r644pretty_print_names(T644* C);
/*E_FUNCTION*/T0* r644specialize_permissions(T644* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r644left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/void r644pretty(T644* C,T2 a1,T6 a2);
/*E_FUNCTION*/T6 r644same_body_as(T644* C,T0* a1);
/*E_FUNCTION*/void r644inline_dynamic_dispatch(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r644specialize_body_thru(T644* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T6 r644same_signature(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/T332 r644sedb_trace_before_exit(T644* C);
/*E_FUNCTION*/T0* r644specialize_signature_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r644specialize_ensure_in(T644* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r644specialize_ensure_thru(T644* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T0* r644twin(T644* C);
/*E_FUNCTION*/void r644add_into_shared(T644* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r644accept(T644* C,T0* a1);
/*E_FUNCTION*/T0* r644inline_expression_1(T644* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/T0* r644inline_expression_0(T644* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r644left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_FUNCTION*/T6 r644valid_redefinition(T644* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r644change_require(T644* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r644obsolete_warning_check_memory(void);
/*E_FUNCTION*/T332 r644start_position(T644* C);
/*E_FUNCTION*/T0* r644specialize_body_in(T644* C,T0* a1,T6 a2);
/*E_FUNCTION*/T6 r644_P_330_same_body_as(T644* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r635specialized_ensure_thru(T635* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r635specialize_signature_in(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r635try_to_undefine_aux(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r635collect(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r635specialize_require_thru(T635* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/void r635from_effective(T635* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*DEFERRED_PROCEDURE*/T0* r635specialize_2(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r635simplify(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r635pretty_print_routine_body(T2 a1);
/*DEFERRED_PROCEDURE*/T0* r635specialized_require_thru(T635* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r635first_name(T635* C);
/*DEFERRED_PROCEDURE*/T0* r635names(T635* C);
/*DEFERRED_PROCEDURE*/T0* r635specialize_require_in(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r635add_into(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r635merge_signature_thru(T635* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_PROCEDURE*/void r635make_routine(T635* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r635try_to_undefine(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r635make(T635* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/void r635add_into_(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r635new_run_feature_for(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r635result_type(void);
/*DEFERRED_PROCEDURE*/void r635valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T6 r635use_current(T0* a1);
/*DEFERRED_PROCEDURE*/void r635obsolete_warning_check(T635* C,T0* a1,T332 a2);
/*DEFERRED_PROCEDURE*/T0* r635change_ensure(T635* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r635brand_new_run_feature_for(T635* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_PROCEDURE*/void r635pretty_print_names(T635* C);
/*DEFERRED_PROCEDURE*/T0* r635specialize_permissions(T635* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/void r635pretty(T635* C,T2 a1,T6 a2);
/*DEFERRED_PROCEDURE*/T6 r635same_body_as(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r635inline_dynamic_dispatch(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T6 r635same_signature(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r635specialize_signature_thru(T635* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r635specialize_ensure_in(T635* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r635specialize_ensure_thru(T635* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_PROCEDURE*/T0* r635twin(T635* C);
/*DEFERRED_PROCEDURE*/void r635add_into_shared(T635* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r635accept(T635* C,T0* a1);
/*DEFERRED_PROCEDURE*/T6 r635valid_redefinition(T635* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r635change_require(T635* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r635obsolete_warning_check_memory(void);
/*DEFERRED_PROCEDURE*/T332 r635start_position(T635* C);
/*DEFERRED_PROCEDURE*/void r635set_rescue_compound(T635* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r634specialized_ensure_thru(T634* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r634specialize_signature_in(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r634try_to_undefine_aux(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r634collect(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r634specialize_require_thru(T634* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r634specialize_2(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T6 r634empty_body_side_effect_free_effective_routine(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r634simplify(T634* C,T0* a1);
/*ONCE_PROCEDURE*/void r634pretty_print_routine_body(T634* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r634specialized_require_thru(T634* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/void r634pretty_print_rescue(T634* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r634first_name(T634* C);
/*ONCE_PROCEDURE*/T0* r634rescue_compound_in(T634* C,T0* a1);
/*ONCE_PROCEDURE*/void r634collect_body(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r634names(T634* C);
/*ONCE_PROCEDURE*/T0* r634specialize_require_in(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r634remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r634inline_dynamic_dispatch_(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T6 r634no_rescue_no_local_expanded_in(T634* C,T0* a1);
/*ONCE_PROCEDURE*/void r634add_into(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r634merge_signature_thru(T634* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_PROCEDURE*/void r634make_routine(T634* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r634try_to_undefine(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r634make(T634* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_PROCEDURE*/void r634add_into_(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r634new_run_feature_for(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r634result_type(void);
/*ONCE_PROCEDURE*/void r634valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T6 r634use_current(T634* C,T0* a1);
/*ONCE_PROCEDURE*/void r634obsolete_warning_check(T634* C,T0* a1,T332 a2);
/*ONCE_PROCEDURE*/void r634init(T634* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r634change_ensure(T634* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r634brand_new_run_feature_for(T634* C,T0* a1,T0* a2,T6 a3);
/*ONCE_PROCEDURE*/void r634pretty_print_once_or_do(T2 a1);
/*ONCE_PROCEDURE*/void r634pretty_print_names(T634* C);
/*ONCE_PROCEDURE*/T0* r634specialize_permissions(T634* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/void r634pretty(T634* C,T2 a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r634same_body_as(T634* C,T0* a1);
/*ONCE_PROCEDURE*/void r634inline_dynamic_dispatch(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r634specialize_body_thru(T634* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T6 r634same_signature(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T332 r634sedb_trace_before_exit(T634* C);
/*ONCE_PROCEDURE*/T0* r634specialize_signature_thru(T634* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r634specialize_ensure_in(T634* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r634specialize_ensure_thru(T634* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T0* r634twin(T634* C);
/*ONCE_PROCEDURE*/void r634add_into_shared(T634* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r634accept(T634* C,T0* a1);
/*ONCE_PROCEDURE*/T6 r634valid_redefinition(T634* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r634change_require(T634* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r634obsolete_warning_check_memory(void);
/*ONCE_PROCEDURE*/T332 r634start_position(T634* C);
/*ONCE_PROCEDURE*/T0* r634specialize_body_in(T634* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r634_P_330_same_body_as(T634* C,T0* a1);
/*CST_ATT_UNIQUE*/T637*create637with(T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r637specialized_ensure_thru(T637* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r637try_to_undefine_aux(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r637collect(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r637specialize_require_thru(T637* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/void r637pretty_constant_value(T2 a1);
/*CST_ATT_UNIQUE*/T0* r637specialize_2(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/void r637with(T637* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r637simplify(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r637arguments(void);
/*CST_ATT_UNIQUE*/T0* r637specialized_require_thru(T637* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r637first_name(T637* C);
/*CST_ATT_UNIQUE*/void r637collect_body(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r637names(T637* C);
/*CST_ATT_UNIQUE*/T0* r637specialize_require_in(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/void r637add_into(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r637merge_signature_thru(T637* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_UNIQUE*/T0* r637try_to_undefine(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r637make(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/void r637add_into_(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r637new_run_feature_for(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r637valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC637counter;
/*CST_ATT_UNIQUE*/T6 r637use_current(T0* a1);
/*CST_ATT_UNIQUE*/void r637obsolete_warning_check(T637* C,T0* a1,T332 a2);
/*CST_ATT_UNIQUE*/T0* r637change_ensure(T637* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r637brand_new_run_feature_for(T637* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_UNIQUE*/void r637pretty_print_names(T637* C);
/*CST_ATT_UNIQUE*/T0* r637specialize_permissions(T637* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/void r637pretty(T637* C,T2 a1,T6 a2);
/*CST_ATT_UNIQUE*/T6 r637same_body_as(T637* C,T0* a1);
/*CST_ATT_UNIQUE*/void r637inline_dynamic_dispatch(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T6 r637same_signature(T637* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r637specialize_signature_thru(T637* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r637specialize_ensure_in(T637* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r637specialize_ensure_thru(T637* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_UNIQUE*/T0* r637twin(T637* C);
/*CST_ATT_UNIQUE*/T0* r637inline_expression_0(T637* C,T0* a1,T0* a2,T332 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_UNIQUE*/T6 r637valid_redefinition(T637* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r637change_require(T637* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r637obsolete_warning_check_memory(void);
/*CST_ATT_UNIQUE*/T332 r637start_position(T637* C);
/*CST_ATT_UNIQUE*/void r637set_rescue_compound(T637* C,T0* a1);
/*RENAME_LIST*/void r678check_level_2(T678* C,T0* a1);
/*RENAME_LIST*/void r678make(T678* C,T0* a1);
/*RENAME_LIST*/T0* r678name_in_child(T678* C,T0* a1);
/*RENAME_LIST*/T6 r678is_target_of_rename(T678* C,T0* a1);
/*RENAME_LIST*/void r678initialize_and_check_level_1(T678* C);
/*RENAME_LIST*/T0* r678name_in_parent(T678* C,T0* a1);
/*RENAME_LIST*/T0* r678item(T678* C,T2 a1);
/*RENAME_LIST*/T2 r678count(T678* C);
/*WHEN_ITEM_2*/void r721make(T721* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r721pretty(T721* C,T2 a1);
/*WHEN_ITEM_2*/void r721set_lower_upper_manifest_expression(T721* C,T0* a1);
/*WHEN_ITEM_2*/void r721validity_check(T721* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r721specialize_in(T721* C,T0* a1);
/*WHEN_ITEM_2*/void r721character_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r721init(T721* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r721set_values_integer(T721* C);
/*WHEN_ITEM_2*/T2 r721upper_value(T721* C);
/*WHEN_ITEM_2*/void r721integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r721force_internal_integer_values(T721* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r721specialize_thru(T721* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r721specialize_2_character(T721* C,T0* a1);
/*WHEN_ITEM_2*/T6 r721validity_check_continued(T721* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r721adapt_for(T721* C,T0* a1);
/*WHEN_ITEM_2*/T2 r721lower_value(T721* C);
/*WHEN_ITEM_2*/void r721collect(T721* C,T0* a1);
/*WHEN_ITEM_2*/void r721validity_check_continued_when_item_2(T721* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r721validity_check_continued_when_item_1(T721* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r721manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T332 r721start_position(T721* C);
/*WHEN_ITEM_2*/T2 r721integer_value_of(T0* a1);
/*WHEN_ITEM_2*/T0* r721twin(T721* C);
/*WHEN_ITEM_2*/void r721set_values_character(T721* C);
/*WHEN_ITEM_2*/T2 r721locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_2*/void r721lower_upper_value_check(T721* C);
/*WHEN_ITEM_2*/void r721validity_check_continued_(T721* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r721force_internal_character_values(T721* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T6 r721match_value(T721* C,T2 a1);
/*WHEN_ITEM_2*/T0* r721specialize_2_integer(T721* C,T0* a1);
/*WHEN_ITEM_2*/T0* r721compute_values(T721* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r721explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r721current_or_twin_init(T721* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r373set_manifest_expression(T373* C,T0* a1);
/*WHEN_ITEM_1*/void r373make(T373* C,T0* a1);
/*WHEN_ITEM_1*/void r373pretty(T373* C,T2 a1);
/*WHEN_ITEM_1*/void r373validity_check(T373* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r373specialize_in(T373* C,T0* a1);
/*WHEN_ITEM_1*/void r373character_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r373set_expression_value(T373* C,T2 a1);
/*WHEN_ITEM_1*/void r373integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r373force_internal_integer_values(T373* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r373specialize_thru(T373* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T2 r373expression_value(T373* C);
/*WHEN_ITEM_1*/T0* r373specialize_2_character(T373* C,T0* a1);
/*WHEN_ITEM_1*/T6 r373validity_check_continued(T373* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r373adapt_for(T373* C,T0* a1);
/*WHEN_ITEM_1*/void r373collect(T373* C,T0* a1);
/*WHEN_ITEM_1*/void r373validity_check_continued_when_item_2(T373* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r373validity_check_continued_when_item_1(T373* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r373manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T332 r373start_position(T373* C);
/*WHEN_ITEM_1*/T2 r373integer_value_of(T0* a1);
/*WHEN_ITEM_1*/void r373set_expression_value_character(T373* C);
/*WHEN_ITEM_1*/T0* r373twin(T373* C);
/*WHEN_ITEM_1*/T2 r373locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_1*/void r373validity_check_continued_(T373* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r373force_internal_character_values(T373* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T6 r373match_value(T373* C,T2 a1);
/*WHEN_ITEM_1*/T0* r373specialize_2_integer(T373* C,T0* a1);
/*WHEN_ITEM_1*/T0* r373compute_values(T373* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r373set_expression_value_integer(T373* C);
/*WHEN_ITEM_1*/void r373explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r373current_or_twin_init(T373* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r666simplify_add(T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/T0* r666to_expression(T666* C);
/*COMPOUND_EXPRESSION*/T0* r666simplify(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r666static_simplify(T666* C);
/*COMPOUND_EXPRESSION*/void r666inline_dynamic_dispatch_(T666* C,T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/void r666safety_check(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r666set_list(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T2 r666upper(T666* C);
/*COMPOUND_EXPRESSION*/T6 r666is_stored_in_some_local_variable(void);
/*COMPOUND_EXPRESSION*/void r666accept(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r666adapt_for(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r666from_list(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r666collect(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T332 r666start_position(T666* C);
/*COMPOUND_EXPRESSION*/T0* r666twin(T666* C);
/*COMPOUND_EXPRESSION*/T0* r666written_declaration_type_mark(void);
/*COMPOUND_EXPRESSION*/T6 r666use_current(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r666crash(T666* C);
/*COMPOUND_EXPRESSION*/T0* r666non_void_no_dispatch_type(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T6 r666side_effect_free(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r666not_yet_implemented(T666* C);
/*COMPOUND_EXPRESSION*/T0* r666resolve_in(T666* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r666to_instruction(T666* C);
/*CREATE_WRITABLE*/T0* r657to_expression(T657* C);
/*CREATE_WRITABLE*/void r657make(T657* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r657pretty(T657* C,T2 a1);
/*CREATE_WRITABLE*/T0* r657simplify(T657* C,T0* a1);
/*CREATE_WRITABLE*/T6 r657extra_bracket_flag(T657* C);
/*CREATE_WRITABLE*/T0* r657specialize_2(T657* C,T0* a1);
/*CREATE_WRITABLE*/void r657validity_check(T657* C,T0* a1);
/*CREATE_WRITABLE*/T0* r657static_simplify(T657* C);
/*CREATE_WRITABLE*/T0* r657specialize_in(T657* C,T0* a1);
/*CREATE_WRITABLE*/void r657inline_dynamic_dispatch_(T657* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r657safety_check(T657* C,T0* a1);
/*CREATE_WRITABLE*/void r657init(T657* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T6 r657is_result(T657* C);
/*CREATE_WRITABLE*/T2 r657precedence(T657* C);
/*CREATE_WRITABLE*/T0* r657specialize_thru(T657* C,T0* a1,T0* a2,T0* a3);
/*CREATE_WRITABLE*/T6 r657is_stored_in_some_local_variable(void);
/*CREATE_WRITABLE*/void r657accept(T657* C,T0* a1);
/*CREATE_WRITABLE*/T0* r657adapt_for(T657* C,T0* a1);
/*CREATE_WRITABLE*/T0* r657collect(T657* C,T0* a1);
/*CREATE_WRITABLE*/void r657pretty_target(T657* C,T2 a1);
/*CREATE_WRITABLE*/T332 r657start_position(T657* C);
/*CREATE_WRITABLE*/T0* r657twin(T657* C);
/*CREATE_WRITABLE*/T0* r657written_declaration_type_mark(void);
/*CREATE_WRITABLE*/T6 r657use_current(T657* C,T0* a1);
/*CREATE_WRITABLE*/void r657bracketed_pretty(T657* C,T2 a1);
/*CREATE_WRITABLE*/T0* r657non_void_no_dispatch_type(T0* a1);
/*CREATE_WRITABLE*/T6 r657side_effect_free(T657* C,T0* a1);
/*CREATE_WRITABLE*/void r657make_specialized(T657* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T0* r657resolve_in(T657* C,T0* a1);
/*CREATE_WRITABLE*/T0* r657to_instruction(T657* C);
/*CREATE_WRITABLE*/T0* r657current_or_twin_init(T657* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/T0* r662to_expression(T662* C);
/*CLOSED_OPERAND*/void r662make(T662* C,T2 a1,T0* a2);
/*CLOSED_OPERAND*/void r662pretty(T662* C,T2 a1);
/*CLOSED_OPERAND*/T0* r662simplify(T662* C,T0* a1);
/*CLOSED_OPERAND*/T6 r662extra_bracket_flag(T662* C);
/*CLOSED_OPERAND*/T0* r662specialize_2(T662* C,T0* a1);
/*CLOSED_OPERAND*/T0* r662static_simplify(T662* C);
/*CLOSED_OPERAND*/T0* r662specialize_in(T662* C,T0* a1);
/*CLOSED_OPERAND*/void r662inline_dynamic_dispatch_(T662* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/void r662safety_check(T662* C,T0* a1);
/*CLOSED_OPERAND*/T6 r662is_result(T662* C);
/*CLOSED_OPERAND*/T2 r662precedence(T662* C);
/*CLOSED_OPERAND*/T0* r662specialize_thru(T662* C,T0* a1,T0* a2,T0* a3);
/*CLOSED_OPERAND*/T6 r662is_static(T662* C);
/*CLOSED_OPERAND*/T6 r662is_stored_in_some_local_variable(void);
/*CLOSED_OPERAND*/void r662accept(T662* C,T0* a1);
/*CLOSED_OPERAND*/T0* r662adapt_for(T662* C,T0* a1);
/*CLOSED_OPERAND*/T0* r662declaration_type(T662* C);
/*CLOSED_OPERAND*/T0* r662collect(T662* C,T0* a1);
/*CLOSED_OPERAND*/T6 r662is_current(T662* C);
/*CLOSED_OPERAND*/void r662pretty_target(T662* C,T2 a1);
/*CLOSED_OPERAND*/T0* r662twin(T662* C);
/*CLOSED_OPERAND*/T0* r662written_declaration_type_mark(void);
/*CLOSED_OPERAND*/T6 r662use_current(T662* C,T0* a1);
/*CLOSED_OPERAND*/void r662bracketed_pretty(T662* C,T2 a1);
/*CLOSED_OPERAND*/T6 r662is_void(T662* C);
/*CLOSED_OPERAND*/T0* r662non_void_no_dispatch_type(T662* C,T0* a1);
/*CLOSED_OPERAND*/T6 r662side_effect_free(T662* C,T0* a1);
/*CLOSED_OPERAND*/T6 r662is_manifest_string(T662* C);
/*CLOSED_OPERAND*/T6 r662is_implicit_current(T662* C);
/*CLOSED_OPERAND*/T0* r662resolve_in(T662* C,T0* a1);
/*CLOSED_OPERAND*/T0* r662to_instruction(T662* C);
/*NO_INVARIANT_WRAPPER*/T0* r407to_expression(T407* C);
/*NO_INVARIANT_WRAPPER*/void r407make(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407simplify(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407specialize_2(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407specialize_in(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/void r407inline_dynamic_dispatch_(T407* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/void r407safety_check(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407specialize_thru(T407* C,T0* a1,T0* a2,T0* a3);
/*NO_INVARIANT_WRAPPER*/void r407accept(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407adapt_for(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407collect(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r407end_mark_comment(T407* C);
/*NO_INVARIANT_WRAPPER*/T332 r407start_position(T407* C);
/*NO_INVARIANT_WRAPPER*/T0* r407specialize_2_without_checks(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407twin(T407* C);
/*NO_INVARIANT_WRAPPER*/T6 r407use_current(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r407side_effect_free(T407* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r407inline_dynamic_dispatch(T407* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/T0* r407to_instruction(T407* C);
/*NO_INVARIANT_WRAPPER*/T0* r407current_or_twin_init(T407* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/void r722make(T722* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/T0* r722simplify(T722* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECTOR*/T0* r722strings(void);
/*MANIFEST_STRING_INSPECTOR*/T0* r722inline_inspect(T722* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T332 a6);
/*MANIFEST_STRING_INSPECTOR*/T6 r722has_empty(T722* C);
/*FAKE_ARGUMENT*/T0* r350to_expression(T350* C);
/*FAKE_ARGUMENT*/void r350make(T350* C,T0* a1,T332 a2,T0* a3,T2 a4);
/*FAKE_ARGUMENT*/T0* r350static_simplify(T350* C);
/*FAKE_ARGUMENT*/T0* r350specialize_in(T350* C,T0* a1);
/*FAKE_ARGUMENT*/void r350inline_dynamic_dispatch_(T350* C,T0* a1,T0* a2);
/*FAKE_ARGUMENT*/T6 r350is_stored_in_some_local_variable(void);
/*FAKE_ARGUMENT*/void r350accept(T350* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r350collect(T350* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r350twin(T350* C);
/*FAKE_ARGUMENT*/T0* r350written_declaration_type_mark(void);
/*FAKE_ARGUMENT*/T6 r350use_current(T0* a1);
/*FAKE_ARGUMENT*/T0* r350non_void_no_dispatch_type(T0* a1);
/*FAKE_ARGUMENT*/T6 r350side_effect_free(T0* a1);
/*FAKE_ARGUMENT*/T0* r350resolve_in(T350* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r350to_instruction(T350* C);
/*PROCESS_POSIX*/void r758make(T758* C);
/*PROCESS_POSIX*/T6 r758is_finished(T758* C);
/*PROCESS_POSIX*/void r758cleanup_streams(T758* C);
/*PROCESS_POSIX*/T2 r758id(T758* C);
/*PROCESS_POSIX*/void r758do_execute(T758* C,T8 a1,T8 a2,T6 a3,T8 a4);
/*PROCESS_POSIX*/void r758do_cleanup(T758* C);
/*PROCESS_POSIX*/void r758execute_command_line(T758* C,T0* a1,T6 a2);
/*PROCESS_POSIX*/void r758dispose(T758* C);
/*PROCESS_POSIX*/T6 r758is_child(T758* C);
/*PROCESS_POSIX*/void r758wait(T758* C);
/*PROCESS_WIN32*/void r759make(T759* C);
/*PROCESS_WIN32*/T6 r759is_finished(T759* C);
/*PROCESS_WIN32*/void r759cleanup_streams(T759* C);
/*PROCESS_WIN32*/T2 r759handle(T759* C);
/*PROCESS_WIN32*/void r759do_execute(T759* C,T8 a1,T6 a2);
/*PROCESS_WIN32*/void r759do_cleanup(T759* C);
/*PROCESS_WIN32*/void r759execute_command_line(T759* C,T0* a1,T6 a2);
/*PROCESS_WIN32*/void r759dispose(T759* C);
/*PROCESS_WIN32*/void r759wait(T759* C);
/*PROCESS_NONE*/void r760make(T760* C);
/*PROCESS_NONE*/void r760execute_command_line(T760* C,T0* a1,T6 a2);
/*PROCESS_GROUP_POSIX*/void r755make(T755* C);
/*PROCESS_GROUP_POSIX*/void r755unregister(T755* C,T0* a1);
/*PROCESS_GROUP_POSIX*/void r755register(T755* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r756make(T756* C);
/*PROCESS_GROUP_WIN32*/void r756unregister(T756* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r756register(T756* C,T0* a1);
/*TUPLE_STRING_POOL*/void r811count_states(T811* C);
extern T0*oBC812counter;
/*TUPLE_STRING_POOL*/void r811make_transitions_array(T811* C);
extern T0*oBC812transition_memory;
extern int fBC812transition_memory;
/*TUPLE_STRING_POOL*/T0* r811transition_memory(void);
/*TUPLE_STRING_POOL*/T2 r811external_state(T811* C,T2 a1);
/*TUPLE_STRING_POOL*/T2 r811the_final_state(T811* C,T0* a1,T2 a2,T2 a3);
/*TUPLE_STRING_POOL*/void r811externalize_tags(T811* C,T0* a1);
/*TUPLE_STRING_POOL*/void r811set_state(T811* C,T2 a1,T2 a2,T3 a3);
/*TUPLE_STRING_POOL*/T2 r811state(T811* C,T2 a1,T3 a2);
/*TUPLE_STRING_POOL*/void r811compile_headers(T811* C);
/*TUPLE_STRING_POOL*/void r811from_collection(T811* C,T0* a1);
/*TUPLE_STRING_POOL*/T0* r811transition(T811* C,T2 a1);
/*COUNTER*/void r331next(T331* C);
/*STD_INPUT*/void r54make(T54* C);
/*MICROSOFT_PATH_NAME*/void r764remove_last(T764* C);
/*MICROSOFT_PATH_NAME*/void r764make_empty(T764* C);
/*MICROSOFT_PATH_NAME*/void r764start_join(T764* C,T0* a1,T2 a2);
/*MICROSOFT_PATH_NAME*/void r764join_element(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T2 r764start_join_to(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r764drive_specification(T764* C);
/*MICROSOFT_PATH_NAME*/void r764end_join(T764* C);
/*MICROSOFT_PATH_NAME*/void r764make_from_string(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r764last(T764* C);
/*MICROSOFT_PATH_NAME*/void r764add_last(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T6 r764is_separator(T3 a1);
/*MICROSOFT_PATH_NAME*/T6 r764is_absolute(T764* C);
/*MICROSOFT_PATH_NAME*/void r764go_up(T764* C);
/*MICROSOFT_PATH_NAME*/void r764make_current(T764* C);
/*MICROSOFT_PATH_NAME*/T2 r764scan_element(T764* C,T2 a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T6 r764is_valid_path(T0* a1);
/*MICROSOFT_PATH_NAME*/void r764join_to(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r764join(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r764to_string(T764* C);
/*MICROSOFT_PATH_NAME*/T0* r764short_name(T764* C);
/*MICROSOFT_PATH_NAME*/void r764join_element_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/void r764join_directory_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T2 r764count(T764* C);
/*MICROSOFT_PATH_NAME*/void r764make_root(T764* C);
/*MICROSOFT_PATH_NAME*/void r764_P_763_join_element(T764* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r764_P_761_end_join(T764* C);
/*UTF8_PARSER*/void r725decode(T725* C,T0* a1,T0* a2);
/*SEDB*/T650*create650make(T332 a1,T3 a2);
/*SEDB*/T0* r650to_expression(T650* C);
/*SEDB*/void r650make(T650* C,T332 a1,T3 a2);
/*SEDB*/T0* r650simplify(T650* C,T0* a1);
/*SEDB*/void r650inline_dynamic_dispatch_(T650* C,T0* a1,T0* a2);
/*SEDB*/void r650accept(T650* C,T0* a1);
/*SEDB*/T6 r650use_current(T0* a1);
/*SEDB*/T6 r650side_effect_free(T0* a1);
/*SEDB*/T0* r650inline_dynamic_dispatch(T650* C,T0* a1,T0* a2);
/*SEDB*/T0* r650to_instruction(T650* C);
/*NO_DISPATCH*/T0* r656to_expression(T656* C);
/*NO_DISPATCH*/void r656make(T656* C,T0* a1,T0* a2,T0* a3);
/*NO_DISPATCH*/T0* r656simplify(T656* C,T0* a1);
/*NO_DISPATCH*/T0* r656static_simplify(T656* C);
/*NO_DISPATCH*/void r656inline_dynamic_dispatch_(T656* C,T0* a1,T0* a2);
/*NO_DISPATCH*/void r656safety_check(T656* C,T0* a1);
/*NO_DISPATCH*/T6 r656is_result(T656* C);
/*NO_DISPATCH*/T6 r656is_stored_in_some_local_variable(void);
/*NO_DISPATCH*/void r656accept(T656* C,T0* a1);
/*NO_DISPATCH*/T0* r656adapt_for(T656* C,T0* a1);
/*NO_DISPATCH*/T0* r656collect(T656* C,T0* a1);
/*NO_DISPATCH*/T332 r656start_position(T656* C);
/*NO_DISPATCH*/T0* r656twin(T656* C);
/*NO_DISPATCH*/T0* r656written_declaration_type_mark(void);
/*NO_DISPATCH*/T6 r656use_current(T656* C,T0* a1);
/*NO_DISPATCH*/T0* r656non_void_no_dispatch_type(T656* C,T0* a1);
/*NO_DISPATCH*/T6 r656side_effect_free(T0* a1);
/*NO_DISPATCH*/T0* r656resolve_in(T656* C,T0* a1);
/*NO_DISPATCH*/T0* r656to_instruction(T656* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659to_expression(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r659make(T659* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659simplify(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r659set_tag(T659* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659static_simplify(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r659inline_dynamic_dispatch_(T659* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r659safety_check(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r659is_result(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r659is_static(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r659is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r659accept(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659adapt_for(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659collect(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T332 r659start_position(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659twin(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r659use_current(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r659side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659tag(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659resolve_in(T659* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r659to_instruction(T659* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660to_expression(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r660make(T660* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660simplify(T660* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660static_simplify(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r660inline_dynamic_dispatch_(T660* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r660is_result(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r660is_static(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r660is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r660accept(T660* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T332 r660start_position(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660twin(T660* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r660use_current(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660non_void_no_dispatch_type(T660* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r660side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660resolve_in(T660* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r660to_instruction(T660* C);
/*VOID_CALL*/T663*create663make(T332 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r663to_expression(T663* C);
/*VOID_CALL*/void r663make(T663* C,T332 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r663simplify(T663* C,T0* a1);
/*VOID_CALL*/T0* r663static_simplify(T663* C);
/*VOID_CALL*/void r663inline_dynamic_dispatch_(T663* C,T0* a1,T0* a2);
/*VOID_CALL*/void r663safety_check(T663* C,T0* a1);
/*VOID_CALL*/T6 r663is_stored_in_some_local_variable(void);
/*VOID_CALL*/void r663accept(T663* C,T0* a1);
/*VOID_CALL*/T0* r663declaration_type(T663* C);
/*VOID_CALL*/T0* r663twin(T663* C);
/*VOID_CALL*/T0* r663written_declaration_type_mark(void);
/*VOID_CALL*/T6 r663use_current(T0* a1);
/*VOID_CALL*/T0* r663non_void_no_dispatch_type(T0* a1);
/*VOID_CALL*/T6 r663side_effect_free(T0* a1);
/*VOID_CALL*/T0* r663resolve_in(T663* C,T0* a1);
/*VOID_CALL*/T0* r663to_instruction(T663* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T665*create665make(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665to_expression(T665* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r665make(T665* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665simplify(T665* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665static_simplify(T665* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r665inline_dynamic_dispatch_(T665* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r665safety_check(T665* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r665is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r665accept(T665* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665collect(T665* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T332 r665start_position(T665* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665twin(T665* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r665use_current(T665* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r665side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665resolve_in(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r665to_instruction(T665* C);
/*INTERNAL_LOCAL2*/T658*create658make(T332 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r658to_expression(T658* C);
/*INTERNAL_LOCAL2*/void r658make(T658* C,T332 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r658simplify(T658* C,T0* a1);
/*INTERNAL_LOCAL2*/void r658set_tag(T658* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r658static_simplify(T658* C);
/*INTERNAL_LOCAL2*/void r658inline_dynamic_dispatch_(T658* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r658tagged_tag(T658* C,T0* a1);
/*INTERNAL_LOCAL2*/T6 r658is_stored_in_some_local_variable(void);
/*INTERNAL_LOCAL2*/void r658accept(T658* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r658declaration_type(T658* C);
/*INTERNAL_LOCAL2*/T0* r658collect(T658* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r658twin(T658* C);
/*INTERNAL_LOCAL2*/T0* r658written_declaration_type_mark(T658* C);
/*INTERNAL_LOCAL2*/T6 r658use_current(T0* a1);
/*INTERNAL_LOCAL2*/T0* r658non_void_no_dispatch_type(T0* a1);
/*INTERNAL_LOCAL2*/T6 r658side_effect_free(T0* a1);
/*INTERNAL_LOCAL2*/T0* r658resolve_in(T658* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r658to_instruction(T658* C);
/*UNUSED_EXPRESSION*/T653*create653make(T0* a1);
/*UNUSED_EXPRESSION*/T0* r653to_expression(T653* C);
/*UNUSED_EXPRESSION*/void r653make(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r653simplify(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/void r653inline_dynamic_dispatch_(T653* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/void r653safety_check(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/void r653accept(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r653adapt_for(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r653collect(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/T332 r653start_position(T653* C);
/*UNUSED_EXPRESSION*/T6 r653use_current(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/T6 r653side_effect_free(T653* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r653inline_dynamic_dispatch(T653* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/T0* r653to_instruction(T653* C);
/*NULL_POINTER*/T0* r664to_expression(T664* C);
/*NULL_POINTER*/void r664make(T664* C,T332 a1,T0* a2);
/*NULL_POINTER*/T0* r664simplify(T664* C,T0* a1);
/*NULL_POINTER*/T0* r664static_simplify(T664* C);
/*NULL_POINTER*/void r664inline_dynamic_dispatch_(T664* C,T0* a1,T0* a2);
/*NULL_POINTER*/T6 r664is_stored_in_some_local_variable(void);
/*NULL_POINTER*/void r664accept(T664* C,T0* a1);
extern T0*oBC664declaration_type;
extern int fBC664declaration_type;
/*NULL_POINTER*/T0* r664declaration_type(void);
/*NULL_POINTER*/T0* r664twin(T664* C);
/*NULL_POINTER*/T0* r664written_declaration_type_mark(void);
/*NULL_POINTER*/T6 r664use_current(T0* a1);
/*NULL_POINTER*/T0* r664non_void_no_dispatch_type(T0* a1);
/*NULL_POINTER*/T6 r664side_effect_free(T0* a1);
/*NULL_POINTER*/T0* r664resolve_in(T0* a1);
/*NULL_POINTER*/T0* r664to_instruction(T664* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T646*create646make(T332 a1,T0* a2,T2 a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r646to_expression(T646* C);
/*RUN_TIME_ERROR_INSTRUCTION*/void r646make(T646* C,T332 a1,T0* a2,T2 a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r646simplify(T646* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/void r646inline_dynamic_dispatch_(T646* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/void r646accept(T646* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r646error_name(T646* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r646use_current(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r646side_effect_free(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r646inline_dynamic_dispatch(T646* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r646to_instruction(T646* C);
/*EXCEPTIONS*/T0* r323name_of_exception(T2 a1);
/*IMPLICIT_CAST*/T0* r517to_expression(T517* C);
/*IMPLICIT_CAST*/void r517make(T517* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/void r517pretty(T517* C,T2 a1);
/*IMPLICIT_CAST*/T0* r517simplify(T517* C,T0* a1);
/*IMPLICIT_CAST*/T6 r517extra_bracket_flag(T517* C);
/*IMPLICIT_CAST*/T0* r517specialize_2(T517* C,T0* a1);
/*IMPLICIT_CAST*/T0* r517static_simplify(T517* C);
/*IMPLICIT_CAST*/void r517inline_dynamic_dispatch_(T517* C,T0* a1,T0* a2);
/*IMPLICIT_CAST*/void r517safety_check(T517* C,T0* a1);
/*IMPLICIT_CAST*/T6 r517is_result(T517* C);
/*IMPLICIT_CAST*/T2 r517precedence(T517* C);
/*IMPLICIT_CAST*/T0* r517specialize_thru(T517* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/T6 r517is_static(T517* C);
/*IMPLICIT_CAST*/T6 r517is_stored_in_some_local_variable(void);
/*IMPLICIT_CAST*/void r517accept(T517* C,T0* a1);
/*IMPLICIT_CAST*/T0* r517adapt_for(T517* C,T0* a1);
/*IMPLICIT_CAST*/T0* r517collect(T517* C,T0* a1);
/*IMPLICIT_CAST*/T6 r517is_current(void);
/*IMPLICIT_CAST*/void r517pretty_target(T517* C,T2 a1);
/*IMPLICIT_CAST*/T332 r517start_position(T517* C);
/*IMPLICIT_CAST*/T0* r517twin(T517* C);
/*IMPLICIT_CAST*/T0* r517written_declaration_type_mark(void);
/*IMPLICIT_CAST*/T6 r517use_current(T517* C,T0* a1);
/*IMPLICIT_CAST*/void r517bracketed_pretty(T517* C,T2 a1);
/*IMPLICIT_CAST*/T6 r517is_void(T517* C);
/*IMPLICIT_CAST*/T0* r517non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CAST*/T6 r517side_effect_free(T517* C,T0* a1);
/*IMPLICIT_CAST*/T6 r517is_manifest_string(T517* C);
/*IMPLICIT_CAST*/T0* r517resolve_in(T517* C,T0* a1);
/*IMPLICIT_CAST*/T0* r517to_instruction(T517* C);
/*AGENT_EXPRESSION*/T0* r667to_expression(T667* C);
/*AGENT_EXPRESSION*/void r667make(T667* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_EXPRESSION*/void r667agent_launcher_collect(T667* C,T0* a1);
/*AGENT_EXPRESSION*/void r667pretty(T667* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r667simplify(T667* C,T0* a1);
/*AGENT_EXPRESSION*/void r667specialize_2_check(T667* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r667specialize_2(T667* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r667static_simplify(T667* C);
/*AGENT_EXPRESSION*/void r667inline_dynamic_dispatch_(T667* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/void r667safety_check(T667* C,T0* a1);
/*AGENT_EXPRESSION*/void r667init(T667* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/T0* r667specialize_thru(T667* C,T0* a1,T0* a2,T0* a3);
/*AGENT_EXPRESSION*/T6 r667is_stored_in_some_local_variable(void);
/*AGENT_EXPRESSION*/void r667accept(T667* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r667adapt_for(T667* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r667collect(T667* C,T0* a1);
/*AGENT_EXPRESSION*/void r667pretty_target(T667* C,T2 a1);
/*AGENT_EXPRESSION*/T332 r667start_position(T667* C);
/*AGENT_EXPRESSION*/T0* r667twin(T667* C);
/*AGENT_EXPRESSION*/T0* r667written_declaration_type_mark(void);
/*AGENT_EXPRESSION*/T6 r667use_current(T667* C,T0* a1);
/*AGENT_EXPRESSION*/void r667bracketed_pretty(T667* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r667non_void_no_dispatch_type(T0* a1);
/*AGENT_EXPRESSION*/T6 r667side_effect_free(T0* a1);
/*AGENT_EXPRESSION*/T0* r667resolve_in(T667* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r667to_instruction(T667* C);
/*AGENT_EXPRESSION*/T0* r667current_or_twin_init(T667* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T655*create655make(T332 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r655to_expression(T655* C);
/*VOID_PROC_CALL*/void r655make(T655* C,T332 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r655simplify(T655* C,T0* a1);
/*VOID_PROC_CALL*/void r655inline_dynamic_dispatch_(T655* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/void r655safety_check(T655* C,T0* a1);
/*VOID_PROC_CALL*/void r655accept(T655* C,T0* a1);
/*VOID_PROC_CALL*/T6 r655use_current(T0* a1);
/*VOID_PROC_CALL*/T6 r655side_effect_free(T0* a1);
/*VOID_PROC_CALL*/T0* r655inline_dynamic_dispatch(T655* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T0* r655to_instruction(T655* C);
/*AGENT_INSTRUCTION*/T0* r651to_expression(T651* C);
/*AGENT_INSTRUCTION*/void r651make(T651* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_INSTRUCTION*/void r651agent_launcher_collect(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r651simplify(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/void r651specialize_2_check(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r651specialize_2(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/void r651inline_dynamic_dispatch_(T651* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/void r651safety_check(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/void r651init(T651* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r651specialize_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*AGENT_INSTRUCTION*/void r651accept(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r651adapt_for(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r651collect(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/T332 r651start_position(T651* C);
/*AGENT_INSTRUCTION*/T0* r651twin(T651* C);
/*AGENT_INSTRUCTION*/T6 r651use_current(T651* C,T0* a1);
/*AGENT_INSTRUCTION*/T6 r651side_effect_free(T0* a1);
/*AGENT_INSTRUCTION*/T0* r651inline_dynamic_dispatch(T651* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r651to_instruction(T651* C);
/*AGENT_INSTRUCTION*/T0* r651current_or_twin_init(T651* C,T0* a1,T0* a2);
/*NUMBER_TOOLS*/T0* r296from_integer_64(T11 a1);
/*INLINE_MEMO*/T0* r520expression(T520* C);
/*INLINE_MEMO*/T0* r520instruction(T520* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_compound(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_check_compound(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_procedure_call_n(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_once_function(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_native_plug_in(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_manifest_generic(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_run_time_error_instruction(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_fake_target(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_no_dispatch(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_call(T115* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_precursor_instruction(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_local_var_list(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_anonymous_feature(T115* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_address_of(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_procedure_call_1(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_procedure_call_0(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_inspect_statement(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_native_built_in(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_assertion_list(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_function_call_n(T115* C,T0* a1);
extern T0*oBC115anonymous_feature_stack;
extern int fBC115anonymous_feature_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r115anonymous_feature_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_retry_instruction(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_c_inline(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_assignment_test(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_no_invariant_wrapper(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_implicit_cast(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_once_procedure(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_deferred_procedure(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_create_expression(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_external_procedure(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_effective_arg_list(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r115visit(T115* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_when_clause(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_built_in_eq_neq(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_manifest_tuple(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_fake_tuple(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_debug_compound(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_e_procedure(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_agent_instruction(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_closed_operand(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_call_1(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_call_0(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_deferred_function(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_void_call(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_unused_expression(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_writable_attribute(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_e_old(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_agent_creation(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r115can_be_dropped(T115* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_ifthenelse(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_create_instruction(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_assertion(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_loop_instruction(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_e_function(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_ifthen(T115* C,T0* a1);
extern T0*oBC115type_stack;
extern int fBC115type_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r115type_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_native_c_plus_plus(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_fast_array_of_expression(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_external_function(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_require_assertion(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_compound_expression(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_native_c(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_agent_expression(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_open_operand(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_void_proc_call(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_assignment_attempt(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_fake_argument(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_precursor_expression(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_expression_with_comment(T115* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r115visit_assignment(T115* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_assignment(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_debug_compound(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_class_invariant(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_void_call(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_create_expression(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_fake_tuple(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_e_false(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_implicit_cast(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_integer_constant(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_run_time_error_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_manifest_string_inspect_statement(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_compound_expression(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_precursor_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_argument_name2(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_dynamic_dispatch_temporary1_id(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_old_manifest_array(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_sedb(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_require_assertion(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_c_inline(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_create_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_generator_generating_type(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_implicit_current(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_check_compound(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_compound(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_effective_arg_list(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_call_infix_or_else(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_real_constant(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_agent_creation(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_static_call_0_c(T723* C,T0* a1);
/*CODE_COMPARATOR*/T6 r723trace_in(T723* C,T0* a1,T0* a2,T0* a3);
/*CODE_COMPARATOR*/void r723visit_call_infix(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_no_dispatch(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_character_constant(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_dynamic_dispatch_temporary1(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_null_pointer(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_dynamic_dispatch_temporary2(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_e_true(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_ensure_assertion(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_procedure_call_n(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_call_infix_implies(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_assignment_attempt(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_assignment_test(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_written_current(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_retry_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_expression_with_comment(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_other_inspect_statement(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_assertion(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_function_call_0(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_manifest_string(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_function_call_1(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_non_void_no_dispatch(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_manifest_tuple(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_closed_operand(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_when_clause(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_ifthen(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_open_operand(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_call_infix_and_then(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_local_name2(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_e_old(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_ifthenelse(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_create_writable(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_fake_target(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_call_prefix(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_writable_attribute_name(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_unused_expression(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_internal_local2(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_procedure_call_1(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_address_of(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_loop_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_procedure_call_0(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_fake_argument(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_void_proc_call(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_raw_create_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_e_void(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_agent_expression(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_loop_variant(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_manifest_generic(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_built_in_eq_neq(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_precursor_expression(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_agent_instruction(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_assertion_list(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_no_invariant_wrapper(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_result(T723* C,T0* a1);
/*CODE_COMPARATOR*/void r723visit_function_call_n(T723* C,T0* a1);
/*RUN_FEATURE_8*/T2 r728arg_count(T728* C);
/*RUN_FEATURE_8*/void r728compute_use_current(T728* C);
/*RUN_FEATURE_8*/void r728std_compute_use_current(T728* C);
/*RUN_FEATURE_8*/void r728for(T728* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_8*/void r728accept(T728* C,T0* a1);
/*RUN_FEATURE_8*/void r728set_result_type(T728* C);
/*RUN_FEATURE_8*/T332 r728start_position(T728* C);
/*RUN_FEATURE_8*/T6 r728use_current(T728* C);
/*RUN_FEATURE_8*/void r728mapping_name_in(T728* C,T0* a1);
/*RUN_FEATURE_8*/void r728do_adapt(T728* C);
/*RUN_FEATURE_8*/void r728adapt(T728* C);
/*RUN_FEATURE_8*/T0* r728feature_stamp(T728* C);
/*EXCEPTIONS_HANDLER*/void r109se_evobt(T109* C);
/*EXCEPTIONS_HANDLER*/void r109customize_c_runtime(T109* C);
/*EXCEPTIONS_HANDLER*/T0* r109cpp(void);
/*EXCEPTIONS_HANDLER*/void r109initialize_runtime(T109* C);
/*EXCEPTIONS_HANDLER*/void r109bad_inspect_value(T109* C,T332 a1);
/*STATIC_CALL_0_C*/T0* r408declaration_type(T408* C);
/*STATIC_CALL_0_C*/T0* r408adapt_for(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408resolve_in(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408use_current_stack(void);
/*STATIC_CALL_0_C*/T0* r408collect(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408specialize_2(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408specialize_in(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408written_declaration_type_mark(void);
/*STATIC_CALL_0_C*/T0* r408simplify(T408* C,T0* a1);
/*STATIC_CALL_0_C*/void r408pretty_target(T408* C,T2 a1);
/*STATIC_CALL_0_C*/void r408safety_check(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408to_expression(T408* C);
/*STATIC_CALL_0_C*/T0* r408specialize_thru(T408* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/T0* r408manifest_expression(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408feature_accumulator(void);
/*STATIC_CALL_0_C*/T6 r408simplify_limit_reached(T408* C);
/*STATIC_CALL_0_C*/void r408inline_dynamic_dispatch_(T408* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r408to_instruction(T408* C);
/*STATIC_CALL_0_C*/T0* r408current_or_twin_init(T408* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r408standard_check_export_and_obsolete_calls(T408* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/void r408make(T408* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r408echo(void);
/*STATIC_CALL_0_C*/void r408type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/void r408non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/T6 r408use_current(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408static_simplify(T408* C);
/*STATIC_CALL_0_C*/T0* r408extra_local_expanded(T408* C,T0* a1);
/*STATIC_CALL_0_C*/void r408function_and_argument_count_check(T408* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r408pretty(T408* C,T2 a1);
/*STATIC_CALL_0_C*/T6 r408side_effect_free(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408non_void_no_dispatch_type(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408inline_with(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r408twin(T408* C);
/*STATIC_CALL_0_C*/void r408bracketed_pretty(T408* C,T2 a1);
/*STATIC_CALL_0_C*/void r408accept(T408* C,T0* a1);
/*STATIC_CALL_0_C*/T332 r408start_position(T408* C);
/*STATIC_CALL_0_C*/T6 r408is_stored_in_some_local_variable(void);
/*RAW_CREATE_INSTRUCTION*/T0* r405to_expression(T405* C);
/*RAW_CREATE_INSTRUCTION*/void r405make(T405* C,T332 a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/T0* r405created_type(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r405typed_internals(T405* C,T332 a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r405pretty(T405* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405simplify(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405specialize_2(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r405specialize_2_checks(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405specialize_in(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r405inline_dynamic_dispatch_(T405* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r405safety_check(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r405set_call(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r405init(T405* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/T0* r405specialize_thru(T405* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/void r405accept(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r405set_eiffel_parser_stamp(T405* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405adapt_for(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405default_create_name(void);
/*RAW_CREATE_INSTRUCTION*/T0* r405collect(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405any_default_create_fs(void);
/*RAW_CREATE_INSTRUCTION*/T0* r405specialize_2_without_checks(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405twin(T405* C);
/*RAW_CREATE_INSTRUCTION*/T0* r405creation_procedure(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r405use_current(T405* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r405side_effect_free(T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r405arguments(T405* C);
/*RAW_CREATE_INSTRUCTION*/T0* r405inline_dynamic_dispatch(T405* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r405make_specialized(T405* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/void r405create_instruction_make(T405* C,T332 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/T0* r405to_instruction(T405* C);
/*RAW_CREATE_INSTRUCTION*/T0* r405current_or_twin_init(T405* C,T0* a1,T0* a2,T0* a3);
/*GENERATOR_GENERATING_TYPE*/T0* r360to_expression(T360* C);
/*GENERATOR_GENERATING_TYPE*/T0* r360simplify(T360* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r360static_simplify(T360* C);
/*GENERATOR_GENERATING_TYPE*/void r360inline_dynamic_dispatch_(T360* C,T0* a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/void r360make_generating_type(T360* C,T332 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T6 r360is_stored_in_some_local_variable(void);
/*GENERATOR_GENERATING_TYPE*/void r360accept(T360* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r360declaration_type(void);
/*GENERATOR_GENERATING_TYPE*/T0* r360collect(T360* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r360twin(T360* C);
/*GENERATOR_GENERATING_TYPE*/T0* r360written_declaration_type_mark(void);
/*GENERATOR_GENERATING_TYPE*/T6 r360use_current(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r360non_void_no_dispatch_type(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T6 r360side_effect_free(T0* a1);
/*GENERATOR_GENERATING_TYPE*/void r360make_generator(T360* C,T332 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T0* r360resolve_in(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r360to_instruction(T360* C);
/*RUN_FEATURE_1*/void r773compute_use_current(T773* C);
/*RUN_FEATURE_1*/T0* r773require_assertion(void);
/*RUN_FEATURE_1*/void r773for(T773* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_1*/void r773accept(T773* C,T0* a1);
/*RUN_FEATURE_1*/void r773set_result_type(T773* C);
/*RUN_FEATURE_1*/T332 r773start_position(T773* C);
/*RUN_FEATURE_1*/T6 r773use_current(T773* C);
/*RUN_FEATURE_1*/void r773mapping_name_in(T773* C,T0* a1);
/*RUN_FEATURE_1*/T0* r773arguments(void);
/*RUN_FEATURE_1*/void r773adapt(T773* C);
/*RUN_FEATURE_1*/T0* r773feature_stamp(T773* C);
/*RUN_FEATURE_6*/void r629compute_use_current(T629* C);
/*RUN_FEATURE_6*/void r629std_compute_use_current(T629* C);
/*RUN_FEATURE_6*/void r629for(T629* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_6*/void r629accept(T629* C,T0* a1);
/*RUN_FEATURE_6*/void r629set_result_type(T629* C);
/*RUN_FEATURE_6*/T332 r629start_position(T629* C);
/*RUN_FEATURE_6*/T6 r629use_current(T629* C);
/*RUN_FEATURE_6*/void r629mapping_name_in(T629* C,T0* a1);
/*RUN_FEATURE_6*/void r629do_adapt(T629* C);
/*RUN_FEATURE_6*/void r629adapt(T629* C);
/*RUN_FEATURE_6*/T0* r629feature_stamp(T629* C);
/*RUN_FEATURE_6*/T6 r629is_precomputable_once(T629* C);
/*RUN_FEATURE_9*/void r775compute_use_current(T775* C);
/*RUN_FEATURE_9*/void r775for(T775* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_9*/void r775accept(T775* C,T0* a1);
/*RUN_FEATURE_9*/void r775set_result_type(T775* C);
/*RUN_FEATURE_9*/T332 r775start_position(T775* C);
/*RUN_FEATURE_9*/T6 r775use_current(T775* C);
/*RUN_FEATURE_9*/void r775mapping_name_in(T775* C,T0* a1);
/*RUN_FEATURE_9*/void r775do_adapt(T775* C);
/*RUN_FEATURE_9*/void r775adapt(T775* C);
/*RUN_FEATURE_9*/T0* r775feature_stamp(T775* C);
/*RUN_FEATURE_7*/T2 r772arg_count(T772* C);
/*RUN_FEATURE_7*/void r772compute_use_current(T772* C);
/*RUN_FEATURE_7*/void r772std_compute_use_current(T772* C);
/*RUN_FEATURE_7*/void r772for(T772* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_7*/void r772accept(T772* C,T0* a1);
/*RUN_FEATURE_7*/T332 r772start_position(T772* C);
/*RUN_FEATURE_7*/T6 r772use_current(T772* C);
/*RUN_FEATURE_7*/void r772mapping_name_in(T772* C,T0* a1);
/*RUN_FEATURE_7*/void r772do_adapt(T772* C);
/*RUN_FEATURE_7*/void r772adapt(T772* C);
/*RUN_FEATURE_7*/T0* r772feature_stamp(T772* C);
/*RUN_FEATURE_3*/void r524compute_use_current(T524* C);
/*RUN_FEATURE_3*/void r524std_compute_use_current(T524* C);
/*RUN_FEATURE_3*/void r524for(T524* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_3*/T6 r524empty_body_side_effect_free_in_boost(T524* C);
/*RUN_FEATURE_3*/T6 r524is_empty_or_null_body(T524* C);
/*RUN_FEATURE_3*/void r524accept(T524* C,T0* a1);
/*RUN_FEATURE_3*/T332 r524start_position(T524* C);
/*RUN_FEATURE_3*/T0* r524memory_dispose(T524* C);
/*RUN_FEATURE_3*/T6 r524use_current(T524* C);
/*RUN_FEATURE_3*/void r524mapping_name_in(T524* C,T0* a1);
/*RUN_FEATURE_3*/void r524do_adapt(T524* C);
/*RUN_FEATURE_3*/T6 r524side_effect_free(T524* C);
/*RUN_FEATURE_3*/void r524adapt(T524* C);
/*RUN_FEATURE_3*/T0* r524feature_stamp(T524* C);
/*RUN_FEATURE_4*/void r774compute_use_current(T774* C);
/*RUN_FEATURE_4*/void r774std_compute_use_current(T774* C);
/*RUN_FEATURE_4*/void r774for(T774* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_4*/void r774accept(T774* C,T0* a1);
/*RUN_FEATURE_4*/void r774set_result_type(T774* C);
/*RUN_FEATURE_4*/T332 r774start_position(T774* C);
/*RUN_FEATURE_4*/T6 r774use_current(T774* C);
/*RUN_FEATURE_4*/void r774mapping_name_in(T774* C,T0* a1);
/*RUN_FEATURE_4*/void r774do_adapt(T774* C);
/*RUN_FEATURE_4*/void r774adapt(T774* C);
/*RUN_FEATURE_4*/T0* r774feature_stamp(T774* C);
/*RUN_FEATURE_5*/void r628compute_use_current(T628* C);
/*RUN_FEATURE_5*/void r628std_compute_use_current(T628* C);
/*RUN_FEATURE_5*/void r628for(T628* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_5*/void r628accept(T628* C,T0* a1);
/*RUN_FEATURE_5*/T332 r628start_position(T628* C);
/*RUN_FEATURE_5*/T6 r628use_current(T628* C);
/*RUN_FEATURE_5*/void r628mapping_name_in(T628* C,T0* a1);
/*RUN_FEATURE_5*/void r628do_adapt(T628* C);
/*RUN_FEATURE_5*/void r628adapt(T628* C);
/*RUN_FEATURE_5*/T0* r628feature_stamp(T628* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813put_line(T813* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813make(T813* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813filtered_put_character(T813* C,T3 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813create_pipe(T813* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813put_string(T813* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r813tmp_string(void);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813put_real_format(T813* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813put_integer(T813* C,T11 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813filtered_flush(T813* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813put_abstract_string(T813* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813dispose(T813* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r813disconnect(T813* C);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r813as_output_stream(T813* C);
/*EXEC_INPUT_STREAM_POSIX*/void r815make(T815* C,T0* a1);
/*EXEC_INPUT_STREAM_POSIX*/void r815filtered_read_character(T815* C);
/*EXEC_INPUT_STREAM_POSIX*/void r815create_pipe(T815* C);
/*EXEC_INPUT_STREAM_POSIX*/void r815swap_unread_buffer(T815* C);
/*EXEC_INPUT_STREAM_POSIX*/void r815dispose(T815* C);
/*EXEC_INPUT_STREAM_POSIX*/void r815disconnect(T815* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816put_line(T816* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816make(T816* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816filtered_put_character(T816* C,T3 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816create_pipe(T816* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816put_string(T816* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r816tmp_string(void);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816put_real_format(T816* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816put_integer(T816* C,T11 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816filtered_flush(T816* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816put_abstract_string(T816* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816dispose(T816* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r816disconnect(T816* C);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r816as_output_stream(T816* C);
/*EXEC_INPUT_STREAM_WIN32*/void r817make(T817* C,T0* a1);
/*EXEC_INPUT_STREAM_WIN32*/void r817filtered_read_character(T817* C);
/*EXEC_INPUT_STREAM_WIN32*/void r817create_pipe(T817* C);
/*EXEC_INPUT_STREAM_WIN32*/void r817swap_unread_buffer(T817* C);
/*EXEC_INPUT_STREAM_WIN32*/void r817dispose(T817* C);
/*EXEC_INPUT_STREAM_WIN32*/void r817disconnect(T817* C);
/*FAKE_TUPLE*/T0* r661to_expression(T661* C);
/*FAKE_TUPLE*/void r661make(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661simplify(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661specialize_2(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661static_simplify(T661* C);
/*FAKE_TUPLE*/T0* r661specialize_in(T661* C,T0* a1);
/*FAKE_TUPLE*/void r661inline_dynamic_dispatch_(T661* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r661expression(T661* C,T2 a1);
/*FAKE_TUPLE*/void r661safety_check(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661implicit_cast(T661* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r661specialize_thru(T661* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T6 r661is_stored_in_some_local_variable(void);
/*FAKE_TUPLE*/void r661accept(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661adapt_for(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661declaration_type(T661* C);
/*FAKE_TUPLE*/T0* r661collect(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T0* r661twin(T661* C);
/*FAKE_TUPLE*/T0* r661written_declaration_type_mark(void);
/*FAKE_TUPLE*/T6 r661use_current(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661non_void_no_dispatch_type(T0* a1);
/*FAKE_TUPLE*/T6 r661side_effect_free(T0* a1);
/*FAKE_TUPLE*/T2 r661count(T661* C);
/*FAKE_TUPLE*/T0* r661resolve_in(T661* C,T0* a1);
/*FAKE_TUPLE*/T0* r661to_instruction(T661* C);
/*INTEGER_64_NUMBER*/void r693make(T693* C,T11 a1);
/*INTEGER_64_NUMBER*/T11 r693to_integer_64(T693* C);
/*INTEGER_64_NUMBER*/T0* r693multiply_with_big_integer_number(T693* C,T0* a1);
extern T0*oBC295zero;
extern T0*oBC295mutable_register1;
extern int fBC295mutable_register1;
/*INTEGER_64_NUMBER*/T0* r693mutable_register1(void);
extern T0*oBC295mutable_register2;
extern int fBC295mutable_register2;
/*INTEGER_64_NUMBER*/T0* r693mutable_register2(void);
extern T0*oBC295mutable_register3;
extern int fBC295mutable_register3;
/*INTEGER_64_NUMBER*/T0* r693mutable_register3(void);
/*INTEGER_64_NUMBER*/T0* r693_ix_42(T693* C,T0* a1);
/*INTEGER_64_NUMBER*/T0* r693_ix_43(T693* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r693is_integer_32(T693* C);
/*INTEGER_64_NUMBER*/T0* r693_px_45(T693* C);
/*INTEGER_64_NUMBER*/T0* r693_ix_45(T693* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r693is_integer_16(T693* C);
/*INTEGER_64_NUMBER*/T0* r693add_with_big_integer_number(T693* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r693is_integer_8(T693* C);
/*INTEGER_64_NUMBER*/T0* r693_ix_6442(T693* C,T11 a1);
/*INTEGER_64_NUMBER*/T0* r693_ix_6443(T693* C,T11 a1);
/*INTEGER_64_NUMBER*/T10 r693to_integer_16(T693* C);
/*INTEGER_64_NUMBER*/T0* r693to_string(T693* C);
/*INTEGER_64_NUMBER*/T1 r693to_integer_8(T693* C);
/*INTEGER_64_NUMBER*/T2 r693to_integer_32(T693* C);
/*INTEGER_64_NUMBER*/void r693append_in(T693* C,T0* a1);
extern T0*oBC295string_buffer;
extern int fBC295string_buffer;
/*INTEGER_64_NUMBER*/T0* r693string_buffer(void);
/*C_PLUGIN*/T6 r966is_equal(T966* C,T0* a1);
/*C_PLUGIN*/void r966make(T966* C,T332 a1,T0* a2,T0* a3);
/*C_PLUGIN*/void r966add_c_source(T966* C,T0* a1);
/*C_PLUGIN*/T0* r966echo(void);
/*C_PLUGIN*/void r966add_c_header(T966* C,T0* a1);
extern T0*oBC526tfr;
/*C_PLUGIN*/T0* r966cpp(void);
/*C_PLUGIN*/void r966read_auto_init(T966* C,T0* a1);
/*C_PLUGIN*/T0* r966system_tools(void);
/*C_PLUGIN*/T0* r966absolute_path(T966* C,T0* a1);
/*C_PLUGIN*/void r966try_auto_init(T966* C);
/*C_PLUGIN*/T0* r966parser_buffer(void);
/*C_PLUGIN*/void r966include(T966* C,T332 a1);
/*C_PLUGIN*/T0* r966read(T0* a1);
/*INTERNAL_C_LOCAL_LIST*/T0* r624lock_local(T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL_LIST*/T0* r624echo(void);
/*INTERNAL_C_LOCAL_LIST*/void r624declaration_dump(T624* C,T0* a1);
extern T0*oBC624internal_c_local_pool;
extern int fBC624internal_c_local_pool;
/*INTERNAL_C_LOCAL_LIST*/T0* r624internal_c_local_pool(void);
/*INTERNAL_C_LOCAL_LIST*/void r624echo_information(T624* C);
/*INTERNAL_C_LOCAL*/void r550make(T550* C,T2 a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/T0* r550lock_local(T550* C,T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/void r550unlock(T550* C);
extern T0*oBC550counter;
/*INTERNAL_C_LOCAL*/T6 r550declaration_dump(T550* C,T0* a1);
/*INTERNAL_C_LOCAL*/T0* r550cpp(void);
/*INTERNAL_C_LOCAL*/T6 r550can_be_recycle_with_type(T550* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r550c_type_in(T550* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r550append_in(T550* C,T0* a1);
/*CODE_CONTEXT_DIRECT_CALL*/void r544reserve(T544* C);
/*CODE_CONTEXT_CREATE_INSTRUCTION*/void r545reserve(T545* C);
/*CODE_CONTEXT_CREATE_EXPRESSION*/void r546reserve(T546* C);
/*CODE_CONTEXT_INSIDE_TWIN*/void r547reserve(T547* C);
/*CODE_CONTEXT_PRECURSOR*/void r548reserve(T548* C);
/*CODE_CONTEXT_INSIDE_SOME_WRAPPER*/void r549reserve(T549* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r787make(T787* C,T2 a1);
/*C_SPLITTER_LEGACY_ITERATOR*/void r787next(T787* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r787start(T787* C);
/*C_SPLITTER_LEGACY_ITERATOR*/T0* r787item(T787* C);
/*TAGGED_FLAG*/void r784as_true(T784* C);
/*MUTABLE_BIG_INTEGER*/void r698subtract_magnitude_raw_reverse(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T11 r698to_integer_64(T698* C);
/*MUTABLE_BIG_INTEGER*/T6 r698is_one_negative(T698* C);
/*MUTABLE_BIG_INTEGER*/T2 r698divide_one_word(T698* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r698add(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r698copy(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r698is_integer_64(T698* C);
extern T0*oBC698char_buffer;
extern int fBC698char_buffer;
/*MUTABLE_BIG_INTEGER*/T0* r698char_buffer(void);
/*MUTABLE_BIG_INTEGER*/void r698subtract_magnitude_raw_truncated(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r698add_integer_64(T698* C,T11 a1);
/*MUTABLE_BIG_INTEGER*/void r698negate(T698* C);
/*MUTABLE_BIG_INTEGER*/T2 r698append_in_char_buffer(T698* C);
/*MUTABLE_BIG_INTEGER*/void r698subtract_magnitude_raw(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r698is_one(T698* C);
/*MUTABLE_BIG_INTEGER*/void r698multiply_to(T698* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/void r698subtract_magnitude_raw_reverse_truncated(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T2 r698capacity_from_upper_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r698multiply_to_like_human(T698* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/T0* r698to_integer_general_number(T698* C);
extern T0*oBC698register1;
extern int fBC698register1;
/*MUTABLE_BIG_INTEGER*/T0* r698register1(void);
/*MUTABLE_BIG_INTEGER*/void r698set_with_zero(T698* C);
/*MUTABLE_BIG_INTEGER*/void r698from_integer(T698* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r698subtract_magnitude(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r698from_native_array(T698* C,T1094 a1,T2 a2,T6 a3);
/*MUTABLE_BIG_INTEGER*/T2 r698capacity_from_lower_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r698add_magnitude(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r698set_all(T698* C,T1094 a1,T2 a2,T2 a3,T2 a4,T6 a5);
/*MUTABLE_BIG_INTEGER*/void r698append_in(T698* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r698from_integer_64(T698* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T11 r695to_integer_64(T695* C);
/*BIG_INTEGER_NUMBER*/T0* r695multiply_with_big_integer_number(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r695mutable_register1(void);
/*BIG_INTEGER_NUMBER*/T0* r695mutable_register2(void);
/*BIG_INTEGER_NUMBER*/T0* r695mutable_register3(void);
/*BIG_INTEGER_NUMBER*/T0* r695_ix_42(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r695_ix_43(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/void r695put_into_mutable_big_integer(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r695_ix_45(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r695_px_45(T695* C);
/*BIG_INTEGER_NUMBER*/T0* r695add_with_big_integer_number(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r695_ix_6442(T695* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T0* r695_ix_6443(T695* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T10 r695to_integer_16(T695* C);
/*BIG_INTEGER_NUMBER*/T0* r695to_string(T695* C);
/*BIG_INTEGER_NUMBER*/T1 r695to_integer_8(T695* C);
/*BIG_INTEGER_NUMBER*/void r695from_native_array(T695* C,T1094 a1,T2 a2,T6 a3);
/*BIG_INTEGER_NUMBER*/T2 r695to_integer_32(T695* C);
/*BIG_INTEGER_NUMBER*/void r695append_in(T695* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r695string_buffer(void);
/*TAGGED_INTERNAL_C_LOCAL*/void r771set_item(T771* C,T0* a1);
/*TAGGED_INTEGER*/void r769set_item(T769* C,T2 a1);
void agent_launcher_o469(/*agent*/T0*a,T0* a1);
void agent_launcher_o266o266(/*agent*/T0*a,T0* a1,T0* a2);
void agent_launcher_o325(/*agent*/T0*a,T0* a1);
T6 agent_launcher_R6_o7(/*agent*/T0*a,T0* a1);
void agent_launcher_o552(/*agent*/T0*a,T0* a1);
void agent_launcher_o321o7(/*agent*/T0*a,T0* a1,T0* a2);
void agent_launcher_o400(/*agent*/T0*a,T0* a1);
void agent_launcher_o88(/*agent*/T0*a,T0* a1);
void agent_launcher_o412(/*agent*/T0*a,T0* a1);
void agent_launcher_o362(/*agent*/T0*a,T0* a1);
void agent_launcher_o78(/*agent*/T0*a,T0* a1);
void agent_launcher_o80(/*agent*/T0*a,T0* a1);
void agent_launcher_o452(/*agent*/T0*a,T0* a1);
void agent_launcher_o462(/*agent*/T0*a,T0* a1);
void agent_launcher_o518(/*agent*/T0*a,T0* a1);
union _se_agent{T0 s0;se_agent0 u0;
se_agenT104f104l4025c31 uagenT104f104l4025c31;
se_agenT104f104l4014c28 uagenT104f104l4014c28;
se_agenT104f104l3785c47 uagenT104f104l3785c47;
se_agenT104f104l618c22 uagenT104f104l618c22;
se_agenT104f104l674c22 uagenT104f104l674c22;
se_agenT104f104l3804c55 uagenT104f104l3804c55;
se_agenT104f104l3597c39 uagenT104f104l3597c39;
se_agenT104f104l3514c38 uagenT104f104l3514c38;
se_agenT100f100l345c38 uagenT100f100l345c38;
se_agenT556f557l25c44 uagenT556f557l25c44;
se_agenT586f557l25c44 uagenT586f557l25c44;
se_agenT587f587l22c50 uagenT587f587l22c50;
se_agenT587f557l25c44 uagenT587f557l25c44;
se_agenT588f557l25c44 uagenT588f557l25c44;
se_agenT589f589l77c54 uagenT589f589l77c54;
se_agenT589f589l106c53 uagenT589f589l106c53;
se_agenT589f589l117c20 uagenT589f589l117c20;
se_agenT606f606l80c33 uagenT606f606l80c33;
se_agenT606f606l1075c35 uagenT606f606l1075c35;
se_agenT606f606l61c33 uagenT606f606l61c33;
se_agenT606f606l1050c37 uagenT606f606l1050c37;
se_agenT606f606l1058c32 uagenT606f606l1058c32;
se_agenT606f606l1005c35 uagenT606f606l1005c35;
se_agenT362f362l154c36 uagenT362f362l154c36;
se_agenT362f362l472c44 uagenT362f362l472c44;
se_agenT97f97l169c20 uagenT97f97l169c20;
se_agenT97f97l159c20 uagenT97f97l159c20;
};
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_AGENTS 1
#define EIF_AGENT se_agent*

se_agent* new_agent(Tid id);

#ifdef SE_GC_LIB

  typedef struct B_agent gc_agent;

  struct B_agent {
    se_agent object;
    union {
      void *flag;
      gc_agent *next;
    } header;
  };

  extern gc_agent *store_agent;
  extern gc_agent *gc_free_agent;
  extern int       store_left_agent;
  extern fsoc     *store_chunk_agent;
  extern fsoc      H_agent;
  extern int       gc_info_nb_agent;

  void gc_align_mark_agent(fsoc *c, gc_agent* a);
  void gc_sweep_agent(fsoc *c);

#endif
extern T0*ms611_1407Abc611A;
extern T0*ms104_1203674198Abc104A;
extern T0*ms781_27492334Abc781A;
extern T0*ms30_114085235Abc30A;
extern T0*ms611_1193180751Abc611A;
extern T0*ms263_2100317873Abc263A;
extern T0*ms263_452889Abc263A;
extern T0*ms606_1307328870Abc606A;
extern T0*ms30_396356Abc30A;
extern T0*ms104_257Abc550A;
extern T0*ms104_257Abc550B;
extern T0*ms104_257Abc550C;
extern T0*ms101_17494489Abc101A;
extern T0*ms263_1689176777Abc263A;
extern T0*ms104_257Abc601A;
extern T0*ms589_1032053803Abc589A;
extern T0*ms104_257Abc601B;
extern T0*ms104_257Abc601C;
extern T0*ms104_257Abc601D;
extern T0*ms100_1131876546Abc100A;
extern T0*ms104_257Abc601E;
extern T0*ms357_1485085274Abc357A;
extern T0*ms423_178490Abc423A;
extern T0*ms104_257Abc601F;
extern T0*ms104_257Abc601G;
extern T0*ms104_257Abc601H;
extern T0*ms104_257Abc601I;
extern T0*ms612_1709245815Abc612A;
extern T0*ms557_100561530Abc557A;
extern T0*ms104_257Abc604A;
extern T0*ms104_257Abc604B;
extern T0*ms30_3645Abc359A;
extern T0*ms589_1426099398Abc589A;
extern T0*ms29_240810604Abc29A;
extern T0*ms104_13801Abc104A;
extern T0*ms261_1587749191Abc261A;
extern T0*ms606_105Abc606A;
extern T0*ms29_1235Abc29A;
extern T0*ms104_257Abc606A;
extern T0*ms30_1839765037Abc30A;
extern T0*ms612_32435Abc612B;
extern T0*ms612_32435Abc612A;
extern T0*ms93_2047201942Abc93A;
extern T0*ms104_1350760769Abc104A;
extern T0*ms29_79341Abc606A;
extern T0*ms113_141444Abc113A;
extern T0*ms469_305Abc780D;
extern T0*ms469_305Abc780C;
extern T0*ms469_305Abc780B;
extern T0*ms601_23647157Abc601A;
extern T0*ms469_305Abc780A;
extern T0*ms104_1934139Abc104C;
extern T0*ms104_1934139Abc104B;
extern T0*ms104_1934139Abc104A;
extern T0*ms606_685204250Abc606A;
extern T0*ms589_759184012Abc589A;
extern T0*ms606_3760Abc606A;
extern T0*ms472_7232Abc633A;
extern T0*ms93_1587734026Abc93A;
extern T0*ms606_2251910Abc606B;
extern T0*ms606_2251910Abc606A;
extern T0*ms104_277Abc550A;
extern T0*ms604_21020045Abc612A;
extern T0*ms606_4179775Abc606A;
extern T0*ms606_283285900Abc606A;
extern T0*ms29_1245671098Abc29A;
extern T0*ms612_9980719Abc612A;
extern T0*ms612_9980719Abc612B;
extern T0*ms606_809795Abc612B;
extern T0*ms606_809795Abc612A;
extern T0*ms101_1721407046Abc101A;
extern T0*ms606_809795Abc606A;
extern T0*ms30_84443Abc30A;
extern T0*ms604_21020045Abc604A;
extern T0*ms104_277Abc604A;
extern T0*ms104_277Abc604B;
extern T0*ms606_809795Abc604A;
extern T0*ms30_10193105Abc30A;
extern T0*ms747_1400894751Abc747A;
extern T0*ms104_277Abc606A;
extern T0*ms104_506210947Abc104A;
extern T0*ms104_1295Bbc606A;
extern T0*ms104_1295Bbc556A;
extern T0*ms104_1295Bbc606B;
extern T0*ms585_86545Abc585A;
extern T0*ms447_2015374870Abc447A;
extern T0*ms589_1269Abc589A;
extern T0*ms104_1572014572Abc104A;
extern T0*ms104_257Abc589A;
extern T0*ms104_257Abc589B;
extern T0*ms104_215791Abc104A;
extern T0*ms104_1852104762Abc104A;
extern T0*ms654_1760457965Abc654A;
extern T0*ms104_523400916Abc104A;
extern T0*ms100_195Abc100A;
extern T0*ms780_1985327250Abc780A;
extern T0*ms30_451011Abc30A;
extern T0*ms611_52555395Abc611A;
extern T0*ms612_802840Abc612A;
extern T0*ms612_802840Abc612B;
extern T0*ms104_1968768303Abc104A;
extern T0*ms780_2121801775Abc780A;
extern T0*ms93_401981819Abc93A;
extern T0*ms29_406284Abc29A;
extern T0*ms93_401981819Abc93B;
extern T0*ms612_475042348Abc612A;
extern T0*ms606_86950Abc606A;
extern T0*ms101_98806116Abc101A;
extern T0*ms30_434665Abc30A;
extern T0*ms612_524787520Abc612A;
extern T0*ms104_1493Abc104A;
extern T0*ms104_277Abc589A;
extern T0*ms612_8291Abc612A;
extern T0*ms557_11241768Abc557A;
extern T0*ms612_8291Abc612B;
extern T0*ms104_277Abc589B;
extern T0*ms780_212314278Abc780A;
extern T0*ms612_8291Abc612C;
extern T0*ms612_8291Abc612D;
extern T0*ms100_218672210Abc100A;
extern T0*ms611_1087364605Abc611A;
extern T0*ms780_5839580Abc780A;
extern T0*ms101_1115301Abc101A;
extern T0*ms104_1565125654Abc104A;
extern T0*ms612_1023363018Abc612A;
extern T0*ms672_1499315956Abc672A;
extern T0*ms604_161951Abc604A;
extern T0*ms29_36200588Abc29A;
extern T0*ms29_15831Abc29A;
extern T0*ms395_902517583Abc395A;
extern T0*ms612_1605175681Abc612A;
extern T0*ms26_375350487Abc26A;
extern T0*ms30_49076540Abc30A;
extern T0*ms97_660Abc97A;
extern T0*ms30_1957581Abc30A;
extern T0*ms611_2006740748Abc611A;
extern T0*ms101_2178Abc101A;
extern T0*ms613_531809155Abc613A;
extern T0*ms104_41Abc104A;
extern T0*ms108_270Abc414A;
extern T0*ms469_305Abc589S;
extern T0*ms469_305Abc589R;
extern T0*ms463_16902Abc463B;
extern T0*ms463_16902Abc463A;
extern T0*ms469_305Abc589Q;
extern T0*ms469_305Abc589P;
extern T0*ms469_305Abc589O;
extern T0*ms469_305Abc589N;
extern T0*ms589_156962Abc589A;
extern T0*ms469_305Abc589M;
extern T0*ms469_305Abc589L;
extern T0*ms101_69601Abc101A;
extern T0*ms469_305Abc589K;
extern T0*ms395_902517583Abc386A;
extern T0*ms469_305Abc589J;
extern T0*ms469_305Abc589I;
extern T0*ms469_305Abc589H;
extern T0*ms469_305Abc589G;
extern T0*ms782_585110409Abc782A;
extern T0*ms469_305Abc589F;
extern T0*ms469_305Abc589E;
extern T0*ms780_1058430701Abc780B;
extern T0*ms469_305Abc589D;
extern T0*ms88_251Abc601A;
extern T0*ms780_1058430701Abc780A;
extern T0*ms469_305Abc589C;
extern T0*ms469_305Abc589B;
extern T0*ms469_305Abc589A;
extern T0*ms104_2382Abc550A;
extern T0*ms469_305Abc588A;
extern T0*ms603_1476205446Abc603A;
extern T0*ms469_305Abc587A;
extern T0*ms613_84085Abc613B;
extern T0*ms613_84085Abc613A;
extern T0*ms104_341357508Abc104A;
extern T0*ms29_88795Abc29A;
extern T0*ms611_411283072Abc611A;
extern T0*ms104_2382Abc611A;
extern T0*ms612_704592146Abc612A;
extern T0*ms263_17696Abc263A;
extern T0*ms104_1994813154Abc104A;
extern T0*ms29_2126626Abc29A;
extern T0*ms611_49806180Abc611A;
extern T0*ms469_305Abc616A;
extern T0*ms469_305Abc615A;
extern T0*ms104_2382Abc618A;
extern T0*ms104_2382Abc618B;
extern T0*ms469_305Abc606S;
extern T0*ms104_2382Abc618C;
extern T0*ms469_305Abc606R;
extern T0*ms104_2382Abc618D;
extern T0*ms469_305Abc606Q;
extern T0*ms104_2382Abc618E;
extern T0*ms469_305Abc606P;
extern T0*ms469_305Abc614A;
extern T0*ms469_305Abc613F;
extern T0*ms104_2382Abc618F;
extern T0*ms469_305Abc613E;
extern T0*ms469_305Abc606O;
extern T0*ms104_2382Abc618G;
extern T0*ms469_305Abc613D;
extern T0*ms469_305Abc606N;
extern T0*ms104_2382Abc618H;
extern T0*ms469_305Abc613C;
extern T0*ms469_305Abc606M;
extern T0*ms101_1615398571Abc101A;
extern T0*ms469_305Abc613B;
extern T0*ms469_305Abc606L;
extern T0*ms469_305Abc613A;
extern T0*ms469_305Abc606K;
extern T0*ms395_902517583Abc348A;
extern T0*ms469_305Abc606J;
extern T0*ms469_305Abc612D;
extern T0*ms469_305Abc606I;
extern T0*ms469_305Abc606H;
extern T0*ms469_305Abc612C;
extern T0*ms469_305Abc612B;
extern T0*ms469_305Abc606G;
extern T0*ms469_305Abc612A;
extern T0*ms469_305Abc606F;
extern T0*ms469_305Abc606E;
extern T0*ms469_305Abc556E;
extern T0*ms469_305Abc606D;
extern T0*ms469_305Abc556D;
extern T0*ms469_305Abc606C;
extern T0*ms469_305Abc556C;
extern T0*ms780_32605Abc780A;
extern T0*ms469_305Abc606B;
extern T0*ms469_305Abc556B;
extern T0*ms469_305Abc611A;
extern T0*ms469_305Abc606A;
extern T0*ms469_305Abc556A;
extern T0*ms589_208313786Abc589A;
extern T0*ms29_2187483Abc29A;
extern T0*ms550_1399364920Abc550A;
extern T0*ms612_6425Abc612A;
extern T0*ms612_308542874Abc612A;
extern T0*ms542_1096544670Abc542A;
extern T0*ms104_56845112Abc104A;
extern T0*ms104_533301931Abc104A;
extern T0*ms469_305Abc601A;
extern T0*ms668_161074567Abc668A;
extern T0*ms469_305Abc550A;
extern T0*ms263_2108992007Abc263A;
extern T0*ms104_2382Abc589A;
extern T0*ms589_560761477Abc589A;
extern T0*ms104_511465169Abc104A;
extern T0*ms30_87466Abc453A;
extern T0*ms406_1085830094Abc406A;
extern T0*ms606_847125Abc606A;
extern T0*ms606_48939825Abc606A;
extern T0*ms30_451011Abc637A;
extern T0*ms604_2187585Abc604A;
extern T0*ms612_19199275Abc612A;
extern T0*ms104_32080Abc588A;
extern T0*ms606_23451005Abc606A;
extern T0*ms589_2142146116Abc589A;
extern T0*ms94_1658160521Abc94A;
extern T0*ms101_851047233Abc101A;
extern T0*ms99_97543221Abc99A;
extern T0*ms30_16001Abc392A;
extern T0*ms469_305Abc469A;
extern T0*ms104_7918258Abc104A;
extern T0*ms30_400652Abc392A;
extern T0*ms29_1604515261Abc29A;
extern T0*ms29_9647090Abc29A;
extern T0*ms612_1263916320Abc612A;
extern T0*ms589_505232755Abc589A;
extern T0*ms29_42Abc29A;
extern T0*ms359_1360462097Abc359A;
extern T0*ms29_282Abc29A;
extern T0*ms613_2110Abc613A;
extern T0*ms29_2246041Abc606A;
extern T0*ms31_77608Abc31A;
extern T0*ms29_849712179Abc29A;
extern T0*ms29_1326673961Abc29A;
extern T0*ms462_10559665Abc462A;
extern T0*ms464_3196Abc464A;
extern T0*ms29_1176378494Abc29A;
extern T0*ms272_740Abc272A;
extern T0*ms272_740Abc272B;
extern T0*ms462_1917908900Abc462A;
extern T0*ms29_276937706Abc29A;
extern T0*ms29_207673214Abc29A;
extern T0*ms30_1532343833Abc30A;
extern T0*ms589_10937200Abc589A;
extern T0*ms29_1740332382Abc29A;
extern T0*ms273_878860Abc273A;
extern T0*ms612_670Abc612B;
extern T0*ms104_2022630Abc104A;
extern T0*ms612_670Abc612A;
extern T0*ms589_1212159Abc589A;
extern T0*ms780_69352117Abc780A;
extern T0*ms780_69352117Abc780B;
extern T0*ms104_392938270Abc104A;
extern T0*ms104_2123070311Abc104A;
extern T0*ms104_8880Abc104A;
extern T0*ms29_337331Abc358A;
extern T0*ms271_838840612Abc271A;
extern T0*ms611_172080Abc611A;
extern T0*ms542_28418819Abc542A;
extern T0*ms780_1748680500Abc780A;
extern T0*ms30_2063276Abc30A;
extern T0*ms30_16001Abc357B;
extern T0*ms30_16001Abc357A;
extern T0*ms101_76405Abc101A;
extern T0*ms611_1783951564Abc611A;
extern T0*ms101_301485Abc101A;
extern T0*ms104_2545Abc104A;
extern T0*ms93_437331Abc93A;
extern T0*ms104_16487Abc104A;
extern T0*ms104_16487Abc104B;
extern T0*ms606_206419907Abc606A;
extern T0*ms589_2054563574Abc589A;
extern T0*ms612_520377520Abc612C;
extern T0*ms612_520377520Abc612B;
extern T0*ms612_520377520Abc612A;
extern T0*ms101_7878Abc101A;
extern T0*ms778_699Abc778A;
extern T0*ms30_2032026Abc30A;
extern T0*ms29_869539012Abc29A;
extern T0*ms104_351488799Abc104A;
extern T0*ms30_1532344910Abc30A;
extern T0*ms26_104Abc26A;
extern T0*ms273_7207Abc266A;
extern T0*ms612_520373770Abc612C;
extern T0*ms612_520373770Abc612B;
extern T0*ms612_520373770Abc612A;
extern T0*ms88_8198176Abc436A;
extern T0*ms100_1737672775Abc100A;
extern T0*ms93_2018315248Abc93A;
extern T0*ms263_17696Abc104A;
extern T0*ms31_10714862Abc31A;
extern T0*ms104_149822297Abc104A;
extern T0*ms612_907447617Abc612A;
extern T0*ms104_1645835456Abc104A;
extern T0*ms104_20552830Abc104A;
extern T0*ms104_245Abc603A;
extern T0*ms723_858562Abc723A;
extern T0*ms104_988839165Abc104A;
extern T0*ms612_60405Abc612A;
extern T0*ms104_245Abc604A;
extern T0*ms104_245Abc604B;
extern T0*ms29_84969Abc29A;
extern T0*ms104_1586354711Abc104A;
extern T0*ms104_245Abc604C;
extern T0*ms104_245Abc604D;
extern T0*ms589_1694771411Abc589B;
extern T0*ms323_198146473Abc323A;
extern T0*ms30_10315778Abc30A;
extern T0*ms589_1694771411Abc589A;
extern T0*ms612_1821634438Abc612A;
extern T0*ms104_397592212Abc104A;
extern T0*ms333_10414970Abc333A;
extern T0*ms104_1110850242Abc104A;
extern T0*ms104_697705640Abc104A;
extern T0*ms104_697705640Abc104B;
extern T0*ms104_697705640Abc104C;
extern T0*ms94_175744316Abc94A;
extern T0*ms612_1514442508Abc612A;
extern T0*ms30_251916328Abc30A;
extern T0*ms271_411001267Abc271A;
extern T0*ms104_1271Bbc104A;
extern T0*ms101_10937305Abc101A;
extern T0*ms104_625Abc104A;
extern T0*ms263_698011541Abc263A;
extern T0*ms589_283801480Abc589A;
extern T0*ms780_2021999449Abc780A;
extern T0*ms104_1173628471Abc104A;
extern T0*ms780_2021999449Abc780B;
extern T0*ms29_1622700141Abc29A;
extern T0*ms263_1553744164Abc263A;
extern T0*ms620_2395Abc620A;
extern T0*ms99_580488532Abc99A;
extern T0*ms29_747962924Abc29A;
extern T0*ms611_1085305030Abc611A;
extern T0*ms104_1946737844Abc104A;
extern T0*ms101_9220Abc101A;
extern T0*ms99_23085765Abc99A;
extern T0*ms94_2004339522Abc94A;
extern T0*ms612_2217200Abc612A;
extern T0*ms464_55156846Abc464A;
extern T0*ms104_3457Abc104A;
extern T0*ms516_80251Abc516A;
extern T0*ms589_1728089446Abc589A;
extern T0*ms104_1642367158Abc104E;
extern T0*ms104_1642367158Abc104D;
extern T0*ms323_2070057757Abc323A;
extern T0*ms104_1642367158Abc104C;
extern T0*ms29_361Abc606A;
extern T0*ms104_1642367158Abc104B;
extern T0*ms29_361Abc606B;
extern T0*ms104_1642367158Abc104A;
extern T0*ms104_1994596535Abc104A;
extern T0*ms337_242535516Abc337A;
extern T0*ms29_756809447Abc29A;
extern T0*ms606_380343Abc606A;
extern T0*ms104_1130602126Abc104A;
extern T0*ms444_22861847Abc444A;
extern T0*ms113_1293738877Abc113A;
extern T0*ms30_1072344038Abc30A;
extern T0*ms30_1072344038Abc30B;
extern T0*ms462_56907446Abc462A;
extern T0*ms93_50040236Abc93A;
extern T0*ms93_50040236Abc93B;
extern T0*ms615_2117730851Abc615A;
extern T0*ms104_862271166Abc104A;
extern T0*ms778_1414Abc778A;
extern T0*ms100_385188989Abc100A;
extern T0*ms100_385188989Abc100B;
extern T0*ms30_78002Abc30A;
extern T0*ms588_605650769Abc588A;
extern T0*ms589_5284Abc589A;
extern T0*ms30_436911Abc30A;
extern T0*ms767_789213750Abc767A;
extern T0*ms30_2593373Abc30A;
extern T0*ms101_1438Abc101A;
extern T0*ms101_1223801083Abc101A;
extern T0*ms29_1947246Abc29A;
extern T0*ms29_1947251Abc29A;
extern T0*ms104_7720290Abc104A;
extern T0*ms94_175744666Abc94A;
extern T0*ms31_17498Abc104A;
extern T0*ms589_1566831588Abc589A;
extern T0*ms104_6355Abc104A;
extern T0*ms30_402346Abc649A;
extern T0*ms29_80854Abc29A;
extern T0*ms606_1952787551Abc606A;
extern T0*ms108_128358027Abc108A;
extern T0*ms104_1476Abc104A;
extern T0*ms613_29107967Abc613A;
extern T0*ms29_548214405Abc29A;
extern T0*ms104_1339521386Abc104A;
extern T0*ms104_781060556Abc104A;
extern T0*ms612_535Abc612A;
extern T0*ms780_1314337673Abc780A;
extern T0*ms104_1471782099Abc104A;
extern T0*ms611_197159Abc611A;
extern T0*ms780_365929075Abc780A;
extern T0*ms273_300Abc104A;
extern T0*ms611_197159Abc612A;
extern T0*ms606_180128Abc606A;
extern T0*ms606_180128Abc606B;
extern T0*ms30_84443Abc386A;
extern T0*ms100_940489362Abc100A;
extern T0*ms29_1604522960Abc29A;
extern T0*ms104_1435285930Abc104A;
extern T0*ms589_422487Abc589A;
extern T0*ms589_826425832Abc589A;
extern T0*ms104_724500276Abc104A;
extern T0*ms589_826425832Abc589B;
extern T0*ms589_826425832Abc589C;
extern T0*ms104_22971612Abc104A;
extern T0*ms365_278Abc365A;
extern T0*ms780_47598300Abc780A;
extern T0*ms557_166654Abc557A;
extern T0*ms361_5787Abc361A;
extern T0*ms785_277Abc785A;
extern T0*ms785_1847764413Abc785A;
extern T0*ms104_2038260346Abc104A;
extern T0*ms104_77412Abc104A;
extern T0*ms104_77412Abc104B;
extern T0*ms104_77412Abc104C;
extern T0*ms94_543076045Abc94A;
extern T0*ms94_543076045Abc94B;
extern T0*ms104_1418906530Abc104A;
extern T0*ms104_41Abc604A;
extern T0*ms29_15751Abc29A;
extern T0*ms589_35330Abc589A;
extern T0*ms612_1824713404Abc612A;
extern T0*ms30_407540Abc270A;
extern T0*ms606_264Abc606D;
extern T0*ms606_264Abc606C;
extern T0*ms606_264Abc606B;
extern T0*ms606_259Abc606A;
extern T0*ms104_41Abc606A;
extern T0*ms606_264Abc606A;
extern T0*ms104_41Abc606B;
extern T0*ms104_41Abc606C;
extern T0*ms104_44Abc104A;
extern T0*ms780_915251302Abc780A;
extern T0*ms104_41Abc612A;
extern T0*ms104_41Abc612B;
extern T0*ms612_87090Abc612A;
extern T0*ms556_1476281050Abc556A;
extern T0*ms104_273443870Abc104A;
extern T0*ms30_396356Abc398A;
extern T0*ms613_35966Abc613A;
extern T0*ms93_18036Abc93A;
extern T0*ms589_242108838Abc589A;
extern T0*ms104_1316373138Abc104A;
extern T0*ms30_306165094Abc30A;
extern T0*ms29_169371474Abc29A;
extern T0*ms29_386854Abc29A;
extern T0*ms589_1367040625Abc589A;
extern T0*ms29_744845610Abc29A;
extern T0*ms109_253892190Abc109A;
extern T0*ms612_185515Abc612A;
extern T0*ms589_4434071Abc589A;
extern T0*ms30_78591Abc263A;
extern T0*ms30_396356Abc509A;
extern T0*ms463_1577658176Abc463A;
extern T0*ms556_244Abc556B;
extern T0*ms100_1814748872Abc100A;
extern T0*ms556_244Abc556A;
extern T0*ms99_1442714837Abc99A;
extern T0*ms670_1452Abc670A;
extern T0*ms362_35157672Abc362A;
extern T0*ms612_39831Abc612A;
extern T0*ms104_120095614Abc104A;
extern T0*ms101_1102814319Abc101A;
extern T0*ms469_305Abc104V;
extern T0*ms780_834589410Abc780A;
extern T0*ms469_305Abc104U;
extern T0*ms469_305Abc104T;
extern T0*ms469_305Abc104S;
extern T0*ms104_1264Abc104A;
extern T0*ms469_305Abc104R;
extern T0*ms469_305Abc104Q;
extern T0*ms611_497096041Abc611A;
extern T0*ms469_305Abc104P;
extern T0*ms469_305Abc104O;
extern T0*ms469_305Abc104N;
extern T0*ms469_305Abc104M;
extern T0*ms469_305Abc104L;
extern T0*ms469_305Abc104K;
extern T0*ms780_1815688614Abc780A;
extern T0*ms469_305Abc104J;
extern T0*ms469_305Abc104I;
extern T0*ms469_305Abc104H;
extern T0*ms469_305Abc104G;
extern T0*ms469_305Abc104F;
extern T0*ms469_305Abc104E;
extern T0*ms469_305Abc104D;
extern T0*ms469_305Abc104C;
extern T0*ms100_1610926534Abc100A;
extern T0*ms469_305Abc104B;
extern T0*ms469_305Abc104A;
extern T0*ms26_8771Abc26A;
extern T0*ms271_1185293475Abc271A;
extern T0*ms104_1450568746Abc104A;
extern T0*ms271_1185293475Abc271B;
extern T0*ms589_1111279623Abc589A;
extern T0*ms29_17422Abc29A;
extern T0*ms589_2028521226Abc589A;
extern T0*ms104_1911279888Abc104A;
extern T0*ms362_732402575Abc362A;
extern T0*ms606_1115076Abc606A;
extern T0*ms109_584218374Abc109A;
extern T0*ms604_1285Abc604A;
extern T0*ms612_6810Abc612A;
extern T0*ms104_4620481Abc104A;
extern T0*ms612_6810Abc612B;
extern T0*ms29_534Abc29A;
extern T0*ms93_2176510Abc93A;
extern T0*ms323_770157670Abc323A;
extern T0*ms100_604558099Abc100A;
extern T0*ms113_1974940930Abc113A;
extern T0*ms604_1285Abc613A;
extern T0*ms104_1964848975Abc104A;
extern T0*ms104_78646Abc104A;
extern T0*ms104_1284Abc104A;
extern T0*ms104_1284Abc104B;
extern T0*ms31_2248290Abc31A;
extern T0*ms29_76691Abc476A;
extern T0*ms113_113009969Abc113A;
extern T0*ms29_1644425991Abc29A;
extern T0*ms30_396356Abc604A;
extern T0*ms104_16782Abc104A;
extern T0*ms104_16782Abc104B;
extern T0*ms104_16782Abc104C;
extern T0*ms780_1800342110Abc780A;
extern T0*ms606_958274895Abc606A;
extern T0*ms104_824324978Abc104A;
extern T0*ms611_15915Abc611A;
extern T0*ms104_950675891Abc104A;
extern T0*ms25_2096409513Abc25A;
extern T0*ms273_7207Abc671A;
extern T0*ms402_1719402393Abc402A;
extern T0*ms273_7207Abc671B;
extern T0*ms29_280482649Abc29A;
extern T0*ms612_83345Abc612A;
extern T0*ms29_1574640467Abc29A;
extern T0*ms613_177459204Abc613A;
extern T0*ms613_177459204Abc613B;
extern T0*ms273_7207Abc725A;
extern T0*ms606_252339Abc606A;
extern T0*ms606_252339Abc606B;
extern T0*ms606_252339Abc606C;
extern T0*ms104_4620546Abc104A;
extern T0*ms104_1773201687Abc104A;
extern T0*ms780_6830Abc780A;
extern T0*ms104_12201Abc104A;
extern T0*ms613_28273584Abc613A;
extern T0*ms29_55041141Abc29A;
extern T0*ms29_55041091Abc29A;
extern T0*ms29_728963476Abc29A;
extern T0*ms615_5313505Abc615A;
extern T0*ms615_5313505Abc615B;
extern T0*ms589_60837Abc589A;
extern T0*ms780_236525Abc780A;
extern T0*ms586_565063403Abc586A;
extern T0*ms589_491029751Abc589A;
extern T0*ms586_565063403Abc587A;
extern T0*ms31_385751Abc31A;
extern T0*ms104_15351Abc104A;
extern T0*ms104_15351Abc104B;
extern T0*ms104_18131599Abc589A;
extern T0*ms112_397Abc112A;
extern T0*ms101_932412928Abc615A;
extern T0*ms101_830570470Abc101A;
extern T0*ms606_2089246593Abc606A;
extern T0*ms99_1152235958Abc99A;
extern T0*ms104_660780608Abc104A;
extern T0*ms966_1942892277Abc966A;
extern T0*ms30_396356Abc589A;
extern T0*ms588_340114884Abc588A;
extern T0*ms104_6877Abc104A;
extern T0*ms101_240Abc93A;
extern T0*ms101_39617954Abc101A;
extern T0*ms29_267647687Abc29A;
extern T0*ms104_860532685Abc104A;
extern T0*ms612_1628970485Abc612A;
extern T0*ms612_33291Abc612C;
extern T0*ms612_33291Abc612B;
extern T0*ms104_33425Abc104A;
extern T0*ms612_33291Abc612A;
extern T0*ms104_33425Abc104B;
extern T0*ms101_327Abc101A;
extern T0*ms104_116813823Abc104A;
extern T0*ms603_230Abc612E;
extern T0*ms603_230Abc612D;
extern T0*ms603_230Abc612C;
extern T0*ms603_230Abc612B;
extern T0*ms603_230Abc612A;
extern T0*ms781_14464Abc781A;
extern T0*ms781_14464Abc781B;
extern T0*ms613_129654140Abc613B;
extern T0*ms613_129654140Abc613A;
extern T0*ms780_6755Abc780B;
extern T0*ms780_6755Abc780A;
extern T0*ms104_3430Abc104A;
extern T0*ms104_3430Abc104B;
extern T0*ms615_8436Abc615A;
extern T0*ms94_1452518781Abc94A;
extern T0*ms615_8436Abc615B;
extern T0*ms29_55040391Abc29A;
extern T0*ms615_8436Abc615C;
extern T0*ms29_94407393Abc29A;
extern T0*ms603_230Abc603A;
extern T0*ms323_41769343Abc323A;
extern T0*ms615_5313530Abc615A;
extern T0*ms604_15629Abc604A;
extern T0*ms100_1783880762Abc100A;
extern T0*ms29_201970799Abc29A;
extern T0*ms113_203714719Abc113A;
extern T0*ms556_565060278Abc556A;
extern T0*ms606_16510Abc606A;
extern T0*ms552_724183788Abc552A;
extern T0*ms100_1194472660Abc100A;
extern T0*ms101_3169Abc101A;
extern T0*ms612_1553763390Abc612A;
extern T0*ms104_1682814572Abc104A;
extern T0*ms612_4638080Abc612A;
extern T0*ms29_37186806Abc29A;
extern T0*ms104_772432310Abc104A;
extern T0*ms30_3601Abc464A;
extern T0*ms29_16639Abc29A;
extern T0*ms30_937397683Abc30A;
extern T0*ms612_265Abc612B;
extern T0*ms612_265Abc612A;
extern T0*ms463_9808515Abc463A;
extern T0*ms557_33316Abc557A;
extern T0*ms101_297Abc101A;
extern T0*ms101_402Abc101A;
extern T0*ms31_385751Abc263A;
extern T0*ms104_1988895671Abc104B;
extern T0*ms104_1988895671Abc104A;
extern T0*ms780_1523807481Abc780A;
extern T0*ms104_1271Bbc604A;
extern T0*ms100_2066960994Abc100A;
extern T0*ms263_929353692Abc263A;
extern T0*ms104_1981256377Abc104A;
extern T0*ms613_946895Abc613B;
extern T0*ms613_946895Abc613A;
extern T0*ms101_674Abc101A;
extern T0*ms29_567319806Abc29A;
extern T0*ms104_1271Bbc611A;
extern T0*ms104_1271Bbc612A;
extern T0*ms104_37095Abc104A;
extern T0*ms104_1271Bbc612B;
extern T0*ms104_1271Bbc612C;
extern T0*ms104_1271Bbc612D;
extern T0*ms275_624587783Abc275A;
extern T0*ms323_1207039342Abc323A;
extern T0*ms589_43730Abc589A;
extern T0*ms101_561720547Abc101A;
extern T0*ms615_1113554587Abc615A;
extern T0*ms30_89771Abc30A;
extern T0*ms104_2055072316Abc104A;
extern T0*ms104_1082664800Abc104A;
extern T0*ms611_444775459Abc611A;
extern T0*ms615_84Abc615A;
extern T0*ms29_61Abc391A;
extern T0*ms104_1836282258Abc104A;
extern T0*ms29_506823435Abc29A;
extern T0*ms556_15019Abc556A;
extern T0*ms611_1994852Abc611A;
extern T0*ms104_997623147Abc104A;
extern T0*ms611_1994852Abc611B;
extern T0*ms611_1994852Abc611C;
extern T0*ms114_75639Abc114A;
extern T0*ms782_1295032451Abc782A;
extern T0*ms606_366Abc606A;
extern T0*ms29_61Abc29A;
extern T0*ms612_476433922Abc612A;
extern T0*ms606_366Abc604B;
extern T0*ms606_366Abc604A;
extern T0*ms525_456083848Abc525A;
extern T0*ms604_7227375Abc604A;
extern T0*ms611_1824264277Abc611A;
extern T0*ms101_689Abc101A;
extern T0*ms674_355003Abc674A;
extern T0*ms29_3421Abc29A;
extern T0*ms100_1459577427Abc100A;
extern T0*ms113_809686569Abc113A;
extern T0*ms29_201970776Abc29A;
extern T0*ms104_17507Abc104A;
extern T0*ms101_15828Abc101A;
extern T0*ms104_1917882Abc104A;
extern T0*ms104_2072467813Abc104A;
extern T0*ms780_97510Abc780A;
extern T0*ms104_374291339Abc104A;
extern T0*ms589_259Abc589A;
extern T0*ms104_1327517381Abc104A;
extern T0*ms29_16616Abc29A;
extern T0*ms456_898426Abc456A;
extern T0*ms618_17916Abc620A;
extern T0*ms104_14005Abc104A;
extern T0*ms104_14005Abc104B;
extern T0*ms101_2109537640Abc675B;
extern T0*ms101_2109537640Abc675A;
extern T0*ms606_4766225Abc606A;
extern T0*ms100_10Abc100A;
extern T0*ms618_17916Abc618A;
extern T0*ms100_10Abc100B;
extern T0*ms104_308542101Abc104A;
extern T0*ms618_295Abc618A;
extern T0*ms29_567319829Abc29A;
extern T0*ms611_158634393Abc611A;
extern T0*ms104_561947515Abc104A;
extern T0*ms100_10Abc104A;
extern T0*ms88_620670284Abc88A;
extern T0*ms100_10Abc104B;
extern T0*ms606_20481355Abc606A;
extern T0*ms104_12331Abc104A;
extern T0*ms30_16630Abc30A;
extern T0*ms612_1174230416Abc612A;
extern T0*ms113_3556890Abc113A;
extern T0*ms612_1174230416Abc612B;
extern T0*ms612_1174230416Abc612C;
extern T0*ms612_1174230416Abc612D;
extern T0*ms29_2054549840Abc29A;
extern T0*ms612_1174230416Abc612E;
extern T0*ms612_1174230416Abc612F;
extern T0*ms782_958639438Abc782A;
extern T0*ms100_10Abc107A;
extern T0*ms612_162020Abc612A;
extern T0*ms29_1594034Abc29A;
extern T0*ms101_99Abc101A;
extern T0*ms589_9589368Abc589A;
extern T0*ms273_300Abc606A;
extern T0*ms112_2947Abc112A;
extern T0*ms101_8889Abc101A;
extern T0*ms339_646901709Abc339A;
extern T0*ms611_1549077634Abc611A;
extern T0*ms612_1340573954Abc612A;
extern T0*ms29_52347889Abc29A;
extern T0*ms29_61Abc606A;
extern T0*ms273_300Abc615A;
extern T0*ms588_619030689Abc588A;
extern T0*ms966_1942675017Abc966A;
extern T0*ms263_767646015Abc263A;
extern T0*ms29_78150Abc29A;
extern T0*ms778_742356016Abc778A;
extern T0*ms780_1973244310Abc780A;
extern T0*ms93_188494264Abc93A;
extern T0*ms104_1530032908Abc104D;
extern T0*ms104_1530032908Abc104C;
extern T0*ms104_1530032908Abc104B;
extern T0*ms104_1530032908Abc104A;
extern T0*ms104_16487Abc778A;
extern T0*ms104_16487Abc778B;
extern T0*ms104_16487Abc778C;
extern T0*ms606_1175100011Abc606A;
extern T0*ms104_77412Abc606A;
extern T0*ms104_77412Abc606B;
extern T0*ms104_77412Abc606C;
extern T0*ms104_77412Abc606D;
extern T0*ms29_10945665Abc29A;
extern T0*ms606_16510Abc780A;
extern T0*ms29_2038667775Abc29A;
extern T0*ms780_1990989Abc780A;
extern T0*ms29_261093457Abc29A;
extern T0*ms31_2141685Abc31A;
extern T0*ms104_77412Abc615A;
extern T0*ms330_25373399Abc330A;
extern T0*ms589_4996600Abc589A;
extern T0*ms29_14150Abc29A;
extern T0*ms104_114Abc104A;
extern T0*ms104_2753Abc104A;
extern T0*ms604_226Abc606B;
extern T0*ms104_10940631Abc104A;
extern T0*ms101_207986277Abc101A;
extern T0*ms604_226Abc606A;
extern T0*ms604_226Abc604B;
extern T0*ms604_226Abc604A;
extern T0*ms612_6995Abc612A;
extern T0*ms29_451899881Abc29A;
extern T0*ms101_721564652Abc101A;
extern T0*ms104_426087775Abc104A;
extern T0*ms758_1121854Abc758A;
extern T0*ms104_419316052Abc104A;
extern T0*ms475_180503525Abc475A;
extern T0*ms93_180894Abc93A;
extern T0*ms29_591417242Abc29A;
extern T0*ms589_4999725Abc589A;
extern T0*ms552_1046299075Abc552A;
extern T0*ms263_208962844Abc263A;
extern T0*ms323_580435889Abc323A;
extern T0*ms29_1375414302Abc29A;
extern T0*ms29_87541Abc29A;
extern T0*ms104_585944489Abc104A;
extern T0*ms606_236Abc606A;
extern T0*ms615_32176Abc615A;
extern T0*ms104_81256Abc104A;
extern T0*ms606_236Abc604A;
extern T0*ms104_4631170Abc104A;
extern T0*ms104_1629400044Abc104A;
extern T0*ms29_3472Abc29A;
extern T0*ms104_900404594Abc104A;
extern T0*ms104_1533928773Abc104A;
extern T0*ms589_21632225Abc589A;
extern T0*ms557_481249030Abc557A;
extern T0*ms589_20240284Abc589A;
extern T0*ms29_50246319Abc29A;
extern T0*ms25_85614Abc275A;
extern T0*ms100_1535001676Abc100A;
extern T0*ms101_1588150185Abc101A;
extern T0*ms101_50863580Abc101A;
extern T0*ms611_614557109Abc611A;
extern T0*ms780_687744958Abc780A;
extern T0*ms606_80037Abc606A;
extern T0*ms104_719604853Abc104A;
extern T0*ms104_21391495Abc104A;
extern T0*ms589_1880914324Abc589A;
extern T0*ms31_336Abc101A;
extern T0*ms601_185443Abc601A;
extern T0*ms601_185438Abc601A;
extern T0*ms104_1284Abc603A;
extern T0*ms104_1284Abc603B;
extern T0*ms104_1284Abc603C;
extern T0*ms104_204Abc104A;
extern T0*ms104_1284Abc604A;
extern T0*ms104_958964069Abc104A;
extern T0*ms604_36137368Abc604A;
extern T0*ms104_495363549Abc104A;
extern T0*ms589_1637927398Abc589A;
extern T0*ms606_80037Abc615A;
extern T0*ms104_78646Abc606A;
extern T0*ms589_1637927398Abc589B;
extern T0*ms606_80037Abc615B;
extern T0*ms104_1284Abc611A;
extern T0*ms104_1284Abc611B;
extern T0*ms588_1199805276Abc588A;
extern T0*ms104_1284Abc612A;
extern T0*ms670_1047Abc670A;
extern T0*ms104_1284Abc612B;
extern T0*ms104_16782Abc611A;
extern T0*ms30_17176Abc30A;
extern T0*ms104_526Abc104A;
extern T0*ms101_415107Abc101A;
extern T0*ms671_1601130656Abc671A;
extern T0*ms612_17743770Abc612A;
extern T0*ms612_17743770Abc612B;
extern T0*ms104_2101369329Abc104A;
extern T0*ms104_1924772383Abc104A;
extern T0*ms29_1192911276Abc29A;
extern T0*ms619_90792Abc619A;
extern T0*ms612_829308144Abc612A;
extern T0*ms29_1483884743Abc29A;
extern T0*ms362_202031759Abc362A;
extern T0*ms30_1509818Abc30A;
extern T0*ms780_744114Abc780A;
extern T0*ms104_1844536619Abc589A;
extern T0*ms604_7224500Abc604A;
extern T0*ms263_216Abc93A;
extern T0*ms29_279523519Abc29A;
extern T0*ms613_23692781Abc613A;
extern T0*ms589_404651Abc589A;
extern T0*ms612_195246Abc612A;
extern T0*ms612_1096165867Abc612A;
extern T0*ms612_714188879Abc612A;
extern T0*ms612_1096165867Abc612B;
extern T0*ms601_185458Abc601A;
extern T0*ms601_185463Abc601A;
extern T0*ms31_78495Abc31A;
extern T0*ms104_5395053Abc104A;
extern T0*ms104_5395053Abc104B;
extern T0*ms93_79251Abc93A;
extern T0*ms90_1861287086Abc90A;
extern T0*ms104_5395053Abc104C;
extern T0*ms589_558682149Abc589A;
extern T0*ms104_162838175Abc104A;
extern T0*ms29_197002151Abc29A;
extern T0*ms104_162838175Abc104B;
extern T0*ms104_162838175Abc104C;
extern T0*ms29_2067995Abc29A;
extern T0*ms767_1854402277Abc767A;
extern T0*ms104_490869799Abc104A;
extern T0*ms966_302Abc966A;
extern T0*ms612_134878499Abc612A;
extern T0*ms30_51843716Abc417A;
extern T0*ms104_1855175789Abc104A;
extern T0*ms31_336Abc31A;
extern T0*ms104_16782Abc589A;
extern T0*ms104_16782Abc589B;
extern T0*ms104_16782Abc589C;
extern T0*ms29_312005144Abc29A;
extern T0*ms29_438300Abc29A;
extern T0*ms615_300665Abc615A;
extern T0*ms589_472574902Abc589A;
extern T0*ms97_1880881887Abc602A;
extern T0*ms612_77767Abc612A;
extern T0*ms104_1160736641Abc104A;
extern T0*ms29_619776399Abc29A;
extern T0*ms101_1494914262Abc101A;
extern T0*ms101_340Abc101A;
extern T0*ms612_1338608648Abc612A;
extern T0*ms30_251171752Abc30A;
extern T0*ms30_427898753Abc30A;
extern T0*ms101_932412928Abc101A;
extern T0*ms611_159025018Abc611A;
extern T0*ms589_1484470448Abc589A;
extern T0*ms588_197373672Abc588A;
extern T0*ms104_2883Abc104A;
extern T0*ms588_197373672Abc588B;
extern T0*ms589_26975282Abc589A;
extern T0*ms29_1286698901Abc29A;
extern T0*ms612_32456Abc612A;
extern T0*ms612_59375621Abc612A;
extern T0*ms104_1901755Abc104A;
extern T0*ms104_3430Abc557A;
extern T0*ms100_2029530601Abc100A;
extern T0*ms29_30191860Abc29A;
extern T0*ms104_5164112Abc104A;
extern T0*ms93_4492176Abc589A;
extern T0*ms104_1656195746Abc104A;
extern T0*ms966_2072196164Abc966A;
extern T0*ms263_2085574777Abc263A;
extern T0*ms104_18131599Abc104A;
extern T0*ms321_864187036Abc321A;
extern T0*ms29_2067759348Abc29A;
extern T0*ms104_37095Abc601A;
extern T0*ms31_2191641Abc104A;
extern T0*ms589_585895143Abc589A;
extern T0*ms30_17176Abc99A;
extern T0*ms556_742356033Abc556A;
extern T0*ms780_33875Abc780A;
extern T0*ms550_7557Abc550A;
extern T0*ms612_1124779458Abc612A;
extern T0*ms29_197002174Abc29A;
extern T0*ms612_86195952Abc612A;
extern T0*ms101_218174Abc101A;
extern T0*ms101_217674Abc101A;
extern T0*ms606_6305Abc606A;
extern T0*ms104_3430Abc589A;
extern T0*ms93_4492176Abc618A;
extern T0*ms104_3430Abc589B;
extern T0*ms606_6305Abc612A;
extern T0*ms29_48856070Abc29A;
extern T0*ms30_2234341Abc459A;
extern T0*ms613_91Abc613A;
extern T0*ms30_54418471Abc30A;
extern T0*ms589_247Abc589A;
extern T0*ms29_16686Abc29A;
extern T0*ms94_1836169859Abc94A;
extern T0*ms612_842552Abc612A;
extern T0*ms606_1553642381Abc606A;
extern T0*ms101_8976Abc101A;
extern T0*ms29_10377643Abc29A;
extern T0*ms557_237Abc557A;
extern T0*ms104_8359055Abc104A;
extern T0*ms469_29585Abc469A;
extern T0*ms104_2104052665Abc104A;
extern T0*ms362_202031759Abc553A;
extern T0*ms462_58Abc462A;
extern T0*ms362_1317154036Abc362A;
extern T0*ms606_2065182209Abc606A;
extern T0*ms104_284Abc104A;
extern T0*ms28_331Abc423A;
extern T0*ms104_2072467813Abc601A;
extern T0*ms94_1226144723Abc94A;
extern T0*ms725_1139569132Abc725A;
extern T0*ms382_529996976Abc382A;
extern T0*ms29_3501Abc29A;
extern T0*ms589_8475Abc589A;
extern T0*ms101_89862Abc101A;
extern T0*ms101_89862Abc101B;
extern T0*ms104_2072467813Abc604A;
extern T0*ms94_432335312Abc94A;
extern T0*ms266_1281353746Abc266A;
extern T0*ms104_1581747096Abc104A;
extern T0*ms615_41131Abc615A;
extern T0*ms104_2072467813Abc611A;
extern T0*ms29_1418282620Abc29A;
extern T0*ms612_245384155Abc612A;
extern T0*ms612_1679626025Abc612A;
extern T0*ms612_1679626025Abc612B;
extern T0*ms780_407207Abc780A;
extern T0*ms30_17221Abc554A;
extern T0*ms104_1102979933Abc104A;
extern T0*ms612_653639191Abc612A;
extern T0*ms780_1196941282Abc780A;
extern T0*ms362_1809213019Abc362A;
extern T0*ms29_47Abc104A;
extern T0*ms101_6159594Abc101A;
extern T0*ms323_1777506207Abc323A;
extern T0*ms86_1554312113Abc86A;
extern T0*ms30_59251Abc30A;
extern T0*ms589_1185483839Abc589A;
extern T0*ms612_4881995Abc612A;
extern T0*ms29_80694Abc29A;
extern T0*ms104_12331Abc612A;
extern T0*ms104_12331Abc612B;
extern T0*ms557_1290234494Abc557A;
extern T0*ms100_408537579Abc100A;
extern T0*ms613_1155996628Abc613A;
extern T0*ms104_163413385Abc104A;
extern T0*ms104_984785217Abc104A;
extern T0*ms104_12331Abc616A;
extern T0*ms557_3920780Abc557A;
extern T0*ms550_38182Abc550A;
extern T0*ms30_9909665Abc30A;
extern T0*ms780_171955Abc780A;
extern T0*ms263_374877Abc263A;
extern T0*ms29_282Abc762A;
extern T0*ms604_570Abc604A;
extern T0*ms263_90141Abc263A;
extern T0*ms104_40Abc104A;
extern T0*ms780_26635163Abc780A;
extern T0*ms29_9676326Abc29A;
extern T0*ms104_40Abc104B;
extern T0*ms29_185934055Abc29A;
extern T0*ms614_54686040Abc614A;
extern T0*ms611_10322525Abc611A;
extern T0*ms612_45355Abc612A;
extern T0*ms29_371Abc29A;
extern T0*ms104_1308400309Abc104A;
extern T0*ms29_1680885744Abc29A;
extern T0*ms29_3474Abc29A;
extern T0*ms113_210310269Abc113A;
extern T0*ms101_179868158Abc101A;
extern T0*ms104_1713607783Abc104A;
extern T0*ms780_1040644265Abc780A;
extern T0*ms104_355630820Abc104A;
extern T0*ms612_1671063525Abc612B;
extern T0*ms612_1671063525Abc612A;
extern T0*ms612_1530Abc612A;
extern T0*ms611_101227749Abc611A;
extern T0*ms104_1009317511Abc104A;
extern T0*ms29_572288431Abc29A;
extern T0*ms780_7374Abc780A;
extern T0*ms101_592781506Abc101A;
extern T0*ms589_1575353618Abc589A;
extern T0*ms104_1591358844Abc104A;
extern T0*ms104_1145546877Abc104A;
extern T0*ms104_1145546877Abc104B;
extern T0*ms113_3556890Abc673A;
extern T0*ms29_3669Abc29A;
extern T0*ms101_2109537640Abc101D;
extern T0*ms476_76659Abc476A;
extern T0*ms101_2109537640Abc101C;
extern T0*ms101_2109537640Abc101B;
extern T0*ms104_1099040180Abc104A;
extern T0*ms101_2109537640Abc101A;
extern T0*ms612_2996Abc612A;
extern T0*ms612_2996Abc612B;
extern T0*ms104_1234811086Abc104A;
extern T0*ms612_2996Abc612C;
extern T0*ms612_2996Abc612D;
extern T0*ms780_598811726Abc780A;
extern T0*ms30_17221Abc374A;
extern T0*ms29_591414963Abc29A;
extern T0*ms104_122027336Abc104A;
extern T0*ms611_689812670Abc611A;
extern T0*ms104_1460025642Abc104A;
extern T0*ms94_116346440Abc94A;
extern T0*ms104_1330Abc104A;
extern T0*ms104_1330Abc104B;
extern T0*ms104_1330Abc104C;
extern T0*ms104_1330Abc104D;
extern T0*ms82_3520Abc82A;
extern T0*ms273_1750778Abc273A;
extern T0*ms29_2174354Abc29A;
extern T0*ms104_1330Abc104E;
extern T0*ms104_1330Abc104F;
extern T0*ms104_1330Abc104G;
extern T0*ms104_1361175839Abc104A;
extern T0*ms104_1330Abc104H;
extern T0*ms104_1330Abc104I;
extern T0*ms30_479921113Abc30A;
extern T0*ms104_1330Abc104J;
extern T0*ms104_1330Abc104K;
extern T0*ms104_1330Abc104L;
extern T0*ms104_588411932Abc104A;
extern T0*ms615_754574290Abc615A;
extern T0*ms537_276Abc764A;
extern T0*ms104_1330Abc109A;
extern T0*ms330_1060258809Abc330A;
extern T0*ms537_276Abc762A;
extern T0*ms611_1328320695Abc611A;
extern T0*ms674_861846863Abc674A;
extern T0*ms606_1923566548Abc606A;
extern T0*ms104_508495830Abc104A;
extern T0*ms611_453998Abc611A;
extern T0*ms104_15589Abc104A;
extern T0*ms611_1384921237Abc611A;
extern T0*ms104_1368099455Abc104A;
extern T0*ms604_167166Abc604A;
extern T0*ms30_820292Abc30A;
extern T0*ms29_572288454Abc29A;
extern T0*ms588_1112927266Abc588A;
extern T0*ms588_1112927266Abc588B;
extern T0*ms30_78490Abc30A;
extern T0*ms556_1476287022Abc556A;
extern T0*ms615_5279655Abc615A;
extern T0*ms29_47Abc29A;
extern T0*ms613_29126717Abc613A;
extern T0*ms30_14036Abc30A;
extern T0*ms780_46525Abc780A;
extern T0*ms542_193194Abc542A;
extern T0*ms601_4571057Abc601A;
extern T0*ms525_902076231Abc525A;
extern T0*ms780_775406525Abc780A;
extern T0*ms104_1295Abc104A;
extern T0*ms30_8054609Abc767A;
extern T0*ms30_16761Abc30A;
extern T0*ms104_308580Abc104A;
extern T0*ms606_1631421108Abc606A;
extern T0*ms362_4488096Abc362A;
extern T0*ms100_295542551Abc100A;
extern T0*ms615_1068122514Abc615A;
extern T0*ms612_884813300Abc612A;
extern T0*ms606_400650Abc606A;
extern T0*ms31_89216Abc31A;
extern T0*ms113_322Abc113A;
extern T0*ms725_263008962Abc725A;
extern T0*ms29_7748406Abc29A;
extern T0*ms589_1387812168Abc589A;
extern T0*ms780_1831440704Abc780A;
extern T0*ms29_1682815431Abc29A;
extern T0*ms104_526Abc616A;
extern T0*ms966_387651299Abc966A;
extern T0*ms966_387651299Abc966B;
extern T0*ms606_1348915394Abc606A;
extern T0*ms611_1197879602Abc611A;
extern T0*ms104_5395053Abc602A;
extern T0*ms104_5395053Abc602B;
extern T0*ms104_932172292Abc104A;
extern T0*ms104_5395053Abc602C;
extern T0*ms104_5395053Abc602D;
extern T0*ms104_5395053Abc602E;
extern T0*ms104_5395053Abc602F;
extern T0*ms97_1880881887Abc97A;
extern T0*ms104_5395053Abc602G;
extern T0*ms104_5395053Abc602H;
extern T0*ms104_5395053Abc602I;
extern T0*ms104_5395053Abc602J;
extern T0*ms104_5395053Abc604A;
extern T0*ms30_1988096Abc30A;
extern T0*ms612_2017590Abc612A;
extern T0*ms537_276Abc721A;
extern T0*ms101_2075119688Abc101A;
extern T0*ms104_227Abc104A;
extern T0*ms556_302501127Abc556A;
extern T0*ms611_10322525Abc780A;
extern T0*ms29_2104Abc29A;
extern T0*ms104_431043495Abc104D;
extern T0*ms552_5515Abc552A;
extern T0*ms104_431043495Abc104C;
extern T0*ms604_1097836905Abc604A;
extern T0*ms104_431043495Abc104B;
extern T0*ms604_1097836905Abc604B;
extern T0*ms104_431043495Abc104A;
extern T0*ms29_447584Abc29A;
extern T0*ms104_499425548Abc104A;
extern T0*ms270_15195Abc270A;
extern T0*ms29_1095772782Abc29A;
extern T0*ms104_209121Abc104A;
extern T0*ms101_297Abc966A;
extern T0*ms611_6550Abc611A;
extern T0*ms611_6550Abc606A;
extern T0*ms29_1297432701Abc29A;
extern T0*ms612_8485Abc612A;
extern T0*ms104_526Abc589A;
extern T0*ms612_8485Abc612B;
extern T0*ms104_700572143Abc104A;
extern T0*ms612_6534Abc612A;
extern T0*ms612_5654700Abc612A;
extern T0*ms612_6534Abc613A;
extern T0*ms778_2097247Abc778A;
extern T0*ms30_3175Abc30A;
extern T0*ms104_2237652Abc104A;
extern T0*ms612_46980416Abc612A;
extern T0*ms26_53561911Abc26A;
extern T0*ms589_46733806Abc589A;
extern T0*ms29_550709268Abc29A;
extern T0*ms104_1844536619Abc104A;
extern T0*ms104_114Abc780A;
extern T0*ms29_1427Abc29A;
extern T0*ms612_37173080Abc612A;
extern T0*ms104_1826935309Abc104A;
extern T0*ms463_348Abc463A;
extern T0*ms263_376816512Abc263A;
extern T0*ms29_878996813Abc29A;
extern T0*ms29_175767198Abc29A;
extern T0*ms339_1186844731Abc339A;
extern T0*ms460_384465Abc613A;
extern T0*ms362_3337Abc362A;
extern T0*ms606_25900Abc606A;
extern T0*ms460_384465Abc612A;
extern T0*ms104_5395053Abc589A;
extern T0*ms104_162838175Abc589A;
extern T0*ms109_1797674551Abc109A;
extern T0*ms30_17715Abc393A;
extern T0*ms29_349117293Abc29A;
extern T0*ms101_39204698Abc101A;
extern T0*ms620_2394Abc620A;
extern T0*ms606_28032126Abc606D;
extern T0*ms606_180037Abc606A;
extern T0*ms606_28032126Abc606C;
extern T0*ms606_180037Abc606B;
extern T0*ms606_28032126Abc606B;
extern T0*ms606_28032126Abc606A;
extern T0*ms604_345Abc612A;
extern T0*ms782_576790349Abc782A;
extern T0*ms104_893005Abc104A;
extern T0*ms29_218Abc29A;
extern T0*ms586_619166512Abc586A;
extern T0*ms29_586229245Abc29A;
extern T0*ms604_345Abc604A;
extern T0*ms556_1208522276Abc556A;
extern T0*ms104_1312728230Abc104A;
extern T0*ms100_1483967746Abc100A;
extern T0*ms104_317Abc104A;
extern T0*ms104_272Abc104A;
extern T0*ms29_2504Abc29A;
extern T0*ms109_899910547Abc109A;
extern T0*ms589_1111954737Abc589A;
extern T0*ms616_2187411Abc616A;
extern T0*ms589_1485929081Abc589A;
extern T0*ms675_46245Abc675A;
extern T0*ms104_2103819988Abc104A;
extern T0*ms589_1992825354Abc589A;
extern T0*ms30_402346Abc30A;
extern T0*ms101_5578901Abc101A;
extern T0*ms104_325655889Abc104A;
extern T0*ms29_337331Abc29A;
extern T0*ms104_1377208779Abc104A;
extern T0*ms30_400652Abc30A;
extern T0*ms104_1377208779Abc104B;
extern T0*ms104_1377208779Abc104C;
extern T0*ms104_1377208779Abc104D;
extern T0*ms537_276Abc537A;
extern T0*ms29_440571Abc29A;
extern T0*ms93_4492176Abc104A;
extern T0*ms104_36778611Abc104A;
extern T0*ms30_78591Abc30A;
extern T0*ms613_804085Abc613B;
extern T0*ms613_804085Abc613A;
extern T0*ms612_15533Abc612A;
extern T0*ms104_54734511Abc104A;
extern T0*ms100_601041072Abc100A;
extern T0*ms612_6946Abc612A;
extern T0*ms612_6946Abc612B;
extern T0*ms30_17715Abc351A;
extern T0*ms31_2020550321Abc31A;
extern T0*ms589_126319331Abc589A;
extern T0*ms556_1208522276Abc587A;
extern T0*ms104_284Abc557A;
extern T0*ms101_99Abc966A;
extern T0*ms29_1530432238Abc29A;
extern T0*ms101_99Abc966B;
extern T0*ms29_76691Abc29A;
extern T0*ms94_274238642Abc94A;
extern T0*ms29_573080478Abc29A;
extern T0*ms460_384465Abc460A;
extern T0*ms624_1664721281Abc624A;
extern T0*ms104_284Abc615A;
extern T0*ms101_143937264Abc101A;
extern T0*ms464_413651Abc464A;
extern T0*ms104_1772404517Abc104A;
extern T0*ms104_1772404517Abc104B;
extern T0*ms104_48520827Abc104A;
extern T0*ms723_78209Abc723A;
extern T0*ms104_1772404517Abc104C;
extern T0*ms31_594Abc31A;
extern T0*ms611_6655Abc611A;
extern T0*ms624_1901947715Abc624A;
extern T0*ms104_175857472Abc104A;
extern T0*ms611_6655Abc612A;
extern T0*ms782_1411018665Abc782A;
extern T0*ms612_42916Abc612B;
extern T0*ms612_42916Abc612A;
extern T0*ms30_1223234252Abc30A;
extern T0*ms615_1216329562Abc615B;
extern T0*ms615_1216329562Abc615A;
extern T0*ms101_2009849Abc101A;
extern T0*ms104_1102979933Abc613A;
extern T0*ms613_2102695Abc613A;
extern T0*ms104_1957408550Abc104A;
extern T0*ms606_1888091524Abc606A;
extern T0*ms604_112304676Abc604A;
extern T0*ms615_90405963Abc615A;
extern T0*ms780_1265395998Abc780A;
extern T0*ms94_1038536453Abc94A;
extern T0*ms611_189437896Abc611A;
extern T0*ms780_479982486Abc780A;
extern T0*ms780_479982486Abc780B;
extern T0*ms966_10220290Abc966B;
extern T0*ms966_10220290Abc966A;
extern T0*ms29_240810599Abc723A;
extern T0*ms29_201970793Abc29A;
extern T0*ms104_284Abc589A;
extern T0*ms104_1724182721Abc104A;
extern T0*ms104_5395053Abc778A;
extern T0*ms104_5395053Abc778B;
extern T0*ms104_5395053Abc778C;
extern T0*ms589_567426438Abc589A;
extern T0*ms104_1607940692Abc104A;
extern T0*ms104_514187710Abc104A;
extern T0*ms114_150325744Abc114A;
extern T0*ms104_2417Abc104A;
extern T0*ms104_40Abc604A;
extern T0*ms113_322Abc412A;
extern T0*ms618_591Abc618A;
extern T0*ms780_526175446Abc780A;
extern T0*ms780_1069766146Abc782A;
extern T0*ms29_124Abc29A;
extern T0*ms612_1840Abc612A;
extern T0*ms612_1840Abc612B;
extern T0*ms612_32650Abc612B;
extern T0*ms612_32650Abc612A;
extern T0*ms30_90408Abc30A;
extern T0*ms263_1476966395Abc263A;
extern T0*ms29_1223936132Abc29A;
extern T0*ms29_1549680Abc29A;
extern T0*ms556_11381817Abc586A;
extern T0*ms780_1069766146Abc780A;
extern T0*ms618_591Abc620A;
extern T0*ms589_674382779Abc589A;
extern T0*ms113_322Abc423A;
extern T0*ms104_382Abc104A;
extern T0*ms780_6614Abc780A;
extern T0*ms104_382Abc104B;
extern T0*ms113_322Abc424A;
extern T0*ms104_49152444Abc104A;
extern T0*ms29_424430Abc29A;
extern T0*ms29_41849945Abc29A;
extern T0*ms94_256559978Abc94A;
extern T0*ms780_44739Abc780A;
extern T0*ms104_1565Abc104A;
extern T0*ms104_1565Abc104B;
extern T0*ms588_565069653Abc588A;
extern T0*ms104_1565Abc104C;
extern T0*ms104_1565Abc104D;
extern T0*ms93_611Abc30A;
extern T0*ms615_1150927957Abc615A;
extern T0*ms29_112335826Abc29A;
extern T0*ms104_1728206941Abc104A;
extern T0*ms113_322Abc385A;
extern T0*ms362_18257Abc362A;
extern T0*ms29_839855894Abc29A;
extern T0*ms589_1949908058Abc589A;
extern T0*ms273_1831619428Abc273A;
extern T0*ms589_3912034Abc589A;
extern T0*ms612_525503499Abc612A;
extern T0*ms29_45Abc29A;
extern T0*ms104_42279221Abc104A;
extern T0*ms542_1826Abc542A;
extern T0*ms94_595894613Abc94A;
extern T0*ms615_124454155Abc615A;
extern T0*ms556_11381817Abc556A;
extern T0*ms104_277Bbc104A;
extern T0*ms589_1664036235Abc589A;
extern T0*ms113_322Abc448A;
extern T0*ms780_1111960899Abc780A;
extern T0*ms30_3415Abc485A;
extern T0*ms30_18090Abc30A;
extern T0*ms104_179423058Abc104A;
extern T0*ms101_11253Abc101A;
extern T0*ms113_1635864124Abc113A;
extern T0*ms780_15405Abc780A;
extern T0*ms511_360Abc612B;
extern T0*ms511_360Abc612A;
extern T0*ms615_1245850444Abc615A;
extern T0*ms273_2082988666Abc273A;
extern T0*ms104_1564992795Abc104A;
extern T0*ms104_1330Abc601A;
extern T0*ms109_1568216255Abc109A;
extern T0*ms100_1255397791Abc100A;
extern T0*ms780_7296Abc780A;
extern T0*ms29_1735712398Abc29A;
extern T0*ms29_203589551Abc29A;
extern T0*ms606_1060489498Abc606A;
extern T0*ms104_1330Abc606A;
extern T0*ms104_1330Abc611A;
extern T0*ms104_1330Abc611B;
extern T0*ms104_1330Abc606B;
extern T0*ms674_2565Abc674A;
extern T0*ms104_1330Abc606C;
extern T0*ms104_1330Abc611C;
extern T0*ms104_1330Abc606D;
extern T0*ms30_16264Abc30A;
extern T0*ms104_1330Abc606E;
extern T0*ms104_1330Abc612A;
extern T0*ms104_1330Abc612B;
extern T0*ms104_1330Abc612C;
extern T0*ms388_376Abc723A;
extern T0*ms104_284Abc780A;
extern T0*ms104_1330Abc613A;
extern T0*ms104_284Abc780B;
extern T0*ms29_42134669Abc475A;
extern T0*ms104_1330Abc613B;
extern T0*ms104_284Abc780C;
extern T0*ms104_1330Abc613C;
extern T0*ms104_284Abc780D;
extern T0*ms93_2001191Abc93A;
extern T0*ms104_1330Abc613D;
extern T0*ms104_1330Abc613E;
extern T0*ms104_1330Abc613F;
extern T0*ms104_1330Abc614A;
extern T0*ms606_693716559Abc606A;
extern T0*ms29_80109Abc29A;
extern T0*ms104_253935823Abc104A;
extern T0*ms113_1711985232Abc673A;
extern T0*ms29_1578334651Abc29A;
extern T0*ms523_2014364610Abc523A;
extern T0*ms97_1449185201Abc97A;
extern T0*ms104_136593176Abc104A;
extern T0*ms781_1506490209Abc781A;
extern T0*ms271_12376Abc29A;
extern T0*ms29_88048Abc29A;
extern T0*ms323_1306325004Abc323A;
extern T0*ms723_241Abc612A;
extern T0*ms723_241Abc612B;
extern T0*ms602_7454Abc602A;
extern T0*ms618_476Abc618A;
extern T0*ms104_1295Abc603A;
extern T0*ms30_437070Abc30A;
extern T0*ms29_669Abc29A;
extern T0*ms613_1773508175Abc613A;
extern T0*ms612_9954400Abc612A;
extern T0*ms468_2009909053Abc468A;
extern T0*ms29_55041151Abc29A;
extern T0*ms612_579867211Abc612A;
extern T0*ms104_2237652Abc463A;
extern T0*ms29_1419919903Abc29A;
extern T0*ms113_322Abc606A;
extern T0*ms606_48939847Abc606A;
extern T0*ms29_3460Abc29A;
extern T0*ms606_48939847Abc606B;
extern T0*ms104_1295Abc613A;
extern T0*ms104_1295Abc613B;
extern T0*ms31_87180Abc31A;
extern T0*ms30_3415Abc589A;
extern T0*ms104_1164208Abc104A;
extern T0*ms511_360Abc511A;
extern T0*ms29_735034101Abc29A;
extern T0*ms104_1330Abc589A;
extern T0*ms104_1330Abc589B;
extern T0*ms104_1330Abc589C;
extern T0*ms725_1613492996Abc725A;
extern T0*ms104_1330Abc589D;
extern T0*ms620_399591Abc620A;
extern T0*ms612_1651828280Abc612A;
extern T0*ms31_17498Abc31A;
extern T0*ms30_401994Abc30A;
extern T0*ms28_329Abc675A;
extern T0*ms365_360Abc104A;
extern T0*ms28_329Abc675B;
extern T0*ms100_1225577982Abc100A;
extern T0*ms28_329Abc675C;
extern T0*ms104_395316170Abc104A;
extern T0*ms30_2185421Abc30A;
extern T0*ms606_169510Abc606A;
extern T0*ms101_180Abc93A;
extern T0*ms966_1760616840Abc966A;
extern T0*ms104_32869Abc104A;
extern T0*ms101_326Abc101A;
extern T0*ms113_1662662954Abc113A;
extern T0*ms104_2109816196Abc104B;
extern T0*ms29_94Abc29A;
extern T0*ms104_2109816196Abc104A;
extern T0*ms113_354654986Abc113A;
extern T0*ms29_552Abc29A;
extern T0*ms104_240Abc104A;
extern T0*ms588_1809907567Abc588A;
extern T0*ms104_3374Abc104A;
extern T0*ms113_322Abc633A;
extern T0*ms95_42698349Abc95A;
extern T0*ms104_3374Abc104B;
extern T0*ms725_888288799Abc725A;
extern T0*ms94_372047073Abc94A;
extern T0*ms780_61699Abc780A;
extern T0*ms780_61699Abc780B;
extern T0*ms104_9130Abc104A;
extern T0*ms611_1240206596Abc611A;
extern T0*ms589_246Abc104A;
extern T0*ms589_246Abc104B;
extern T0*ms585_8545Abc585A;
extern T0*ms31_16177Abc31A;
extern T0*ms612_111269879Abc612A;
extern T0*ms601_4570957Abc601A;
extern T0*ms104_36951Abc104A;
extern T0*ms606_6575105Abc606A;
extern T0*ms93_4235Abc93A;
extern T0*ms104_934Abc104A;
extern T0*ms615_646768902Abc615A;
extern T0*ms620_448205Abc620A;
extern T0*ms104_400297641Abc104A;
extern T0*ms30_1690381566Abc30A;
extern T0*ms104_400297641Abc104B;
extern T0*ms613_1280Abc613A;
extern T0*ms767_602797481Abc767A;
extern T0*ms104_400297641Abc104C;
extern T0*ms613_1280Abc613B;
extern T0*ms606_2024156039Abc606A;
extern T0*ms104_400297641Abc104D;
extern T0*ms101_270309168Abc101A;
extern T0*ms29_54688766Abc29A;
extern T0*ms101_1067454155Abc101A;
extern T0*ms29_1831158645Abc29A;
extern T0*ms556_1747685533Abc556A;
extern T0*ms29_240810599Abc29A;
extern T0*ms30_414461Abc30A;
extern T0*ms723_241Abc723A;
extern T0*ms723_241Abc723B;
extern T0*ms104_1582839830Abc104A;
extern T0*ms589_26975293Abc589A;
extern T0*ms589_26975293Abc589B;
extern T0*ms780_2051940780Abc780A;
extern T0*ms94_92397395Abc94A;
extern T0*ms104_227Abc589A;
extern T0*ms782_730579755Abc782A;
extern T0*ms101_2139128753Abc101A;
extern T0*ms104_227Abc589B;
extern T0*ms113_322Abc671A;
extern T0*ms113_322Abc671B;
extern T0*ms29_180965447Abc29A;
extern T0*ms93_54634669Abc93A;
extern T0*ms28_329Abc28A;
extern T0*ms28_334Abc28A;
extern T0*ms601_4570982Abc601A;
extern T0*ms606_744Abc606A;
extern T0*ms29_954385774Abc29A;
extern T0*ms606_7118Abc606A;
extern T0*ms104_1765Abc104A;
extern T0*ms780_1007239Abc780A;
extern T0*ms100_215Abc100A;
extern T0*ms100_215Abc100B;
extern T0*ms93_1680421289Abc93A;
extern T0*ms606_32175Abc606A;
extern T0*ms104_375072661Abc104A;
extern T0*ms104_1901889757Abc104A;
extern T0*ms263_305465997Abc263A;
extern T0*ms104_1238750212Abc104A;
extern T0*ms101_1663868Abc101A;
extern T0*ms780_3209Abc780A;
extern T0*ms104_1059359695Abc104A;
extern T0*ms612_8885Abc612A;
extern T0*ms780_1648235130Abc780A;
extern T0*ms671_78239462Abc671A;
extern T0*ms101_1772235Abc101A;
extern T0*ms29_761722990Abc29A;
extern T0*ms107_69115705Abc107A;
extern T0*ms30_2185421Abc654A;
extern T0*ms556_1747685533Abc588A;
extern T0*ms778_81437Abc778A;
extern T0*ms101_683870135Abc101A;
extern T0*ms104_701821825Abc104A;
extern T0*ms612_4680700Abc612A;
extern T0*ms104_1816632501Abc104A;
extern T0*ms611_6271Abc611A;
extern T0*ms101_759424351Abc101A;
extern T0*ms362_2870Abc362A;
extern T0*ms104_1330Abc781A;
extern T0*ms725_1398420907Abc725A;
extern T0*ms101_186217457Abc101A;
extern T0*ms604_7233618Abc604A;
extern T0*ms101_109Abc101A;
extern T0*ms101_2077353217Abc101A;
extern T0*ms612_167916Abc612B;
extern T0*ms612_167916Abc612A;
extern T0*ms31_2191641Abc31A;
extern T0*ms604_1446625Abc604A;
extern T0*ms469_123Abc469A;
extern T0*ms604_3485Abc604A;
extern T0*ms625_1691484858Abc625A;
extern T0*ms263_1091711046Abc263A;
extern T0*ms272_87520Abc625A;
extern T0*ms29_126Abc29A;
extern T0*ms29_84881Abc29A;
extern T0*ms613_1719326284Abc613A;
extern T0*ms611_2077255577Abc611A;
extern T0*ms604_1406782500Abc604A;
extern T0*ms966_1935504882Abc966A;
extern T0*ms94_175744691Abc94A;
extern T0*ms322_311661671Abc322A;
extern T0*ms323_971287994Abc323A;
extern T0*ms30_16942Abc30A;
extern T0*ms104_1624663341Abc104B;
extern T0*ms104_1772404517Abc604A;
extern T0*ms104_1624663341Abc104A;
extern T0*ms104_1772404517Abc604B;
extern T0*ms29_180965424Abc29A;
extern T0*ms104_1601653158Abc104A;
extern T0*ms273_4479182Abc104A;
extern T0*ms104_1601653158Abc104B;
extern T0*ms271_1133285999Abc271A;
extern T0*ms30_2233396Abc30A;
extern T0*ms30_10703002Abc30A;
extern T0*ms104_1772404517Abc612A;
extern T0*ms93_23410Abc93A;
extern T0*ms424_1382Abc424A;
extern T0*ms446_46Abc537A;
extern T0*ms30_77350Abc30A;
extern T0*ms612_9794360Abc612A;
extern T0*ms29_43Abc29A;
extern T0*ms29_38Abc29A;
extern T0*ms29_60Abc606A;
extern T0*ms101_9073Abc101D;
extern T0*ms101_9073Abc101C;
extern T0*ms101_9073Abc101B;
extern T0*ms101_9073Abc101A;
extern T0*ms550_2007779419Abc550A;
extern T0*ms723_351Abc723A;
extern T0*ms525_520647979Abc525A;
extern T0*ms780_1288623074Abc780A;
extern T0*ms606_206626Abc606A;
extern T0*ms589_1676Abc589A;
extern T0*ms395_29662Abc104A;
extern T0*ms28_329Abc966A;
extern T0*ms28_334Abc966A;
extern T0*ms781_692716864Abc781A;
extern T0*ms28_329Abc966B;
extern T0*ms28_334Abc966B;
extern T0*ms93_194Abc104A;
extern T0*ms104_391886489Abc104A;
extern T0*ms104_36460172Abc104A;
extern T0*ms104_1565Abc601A;
extern T0*ms464_449661Abc464A;
extern T0*ms104_2417Abc617A;
extern T0*ms767_65332Abc767A;
extern T0*ms29_77832Abc29A;
extern T0*ms29_170256464Abc29A;
extern T0*ms104_382Abc606A;
extern T0*ms104_382Abc606B;
extern T0*ms104_382Abc606C;
extern T0*ms30_88336Abc30A;
extern T0*ms104_1565Abc604A;
extern T0*ms104_1565Abc604B;
extern T0*ms104_49152444Abc611A;
extern T0*ms365_360Abc365A;
extern T0*ms589_2072064738Abc589A;
extern T0*ms29_324411Abc29A;
extern T0*ms613_529853775Abc613A;
extern T0*ms104_1565Abc611A;
extern T0*ms104_1565Abc611B;
extern T0*ms29_279656751Abc29A;
extern T0*ms615_1956008156Abc615A;
extern T0*ms511_372Abc612B;
extern T0*ms511_372Abc612A;
extern T0*ms101_1331737400Abc101A;
extern T0*ms589_6580Abc589A;
extern T0*ms606_4425Abc606A;
extern T0*ms589_2301Abc589A;
extern T0*ms263_1955866577Abc263A;
extern T0*ms104_2395Abc104A;
extern T0*ms104_57150800Abc104A;
extern T0*ms612_304601115Abc612A;
extern T0*ms95_745978733Abc95A;
extern T0*ms780_3209Abc613A;
extern T0*ms767_1932458562Abc767A;
extern T0*ms271_360205908Abc271B;
extern T0*ms271_360205908Abc271A;
extern T0*ms100_1242126608Abc100A;
extern T0*ms606_117385886Abc606A;
extern T0*ms29_185934072Abc29A;
extern T0*ms94_181806522Abc94A;
extern T0*ms606_54714119Abc606A;
extern T0*ms30_661Abc30A;
extern T0*ms101_51699930Abc101A;
extern T0*ms104_246893097Abc104A;
extern T0*ms104_993675817Abc104A;
extern T0*ms94_85511833Abc94A;
extern T0*ms611_49917876Abc611A;
extern T0*ms604_36126743Abc604A;
extern T0*ms29_55924644Abc29A;
extern T0*ms30_17715Abc30A;
extern T0*ms29_1501191Abc29A;
extern T0*ms104_1063704391Abc104A;
extern T0*ms104_382Abc589A;
extern T0*ms104_382Abc589B;
extern T0*ms104_382Abc589C;
extern T0*ms104_490486762Abc104A;
extern T0*ms612_1671074150Abc612B;
extern T0*ms612_1671074150Abc612A;
extern T0*ms30_77350Abc370A;
extern T0*ms104_1565Abc589A;
extern T0*ms604_36122993Abc604A;
extern T0*ms104_1565Abc589B;
extern T0*ms104_1565Abc589C;
extern T0*ms611_35343969Abc611A;
extern T0*ms613_534333098Abc613A;
extern T0*ms371_5382Abc371A;
extern T0*ms104_960414291Abc104A;
extern T0*ms603_258Abc613A;
extern T0*ms613_965636096Abc613A;
extern T0*ms111_489233515Abc111A;
extern T0*ms30_16942Abc459B;
extern T0*ms30_16942Abc459A;
extern T0*ms604_162019Abc604A;
extern T0*ms359_41841490Abc359A;
extern T0*ms589_948421114Abc589A;
extern T0*ms29_48958735Abc29A;
extern T0*ms104_1790869799Abc104A;
extern T0*ms601_1312Abc612A;
extern T0*ms25_1525604536Abc25A;
extern T0*ms29_9712276Abc29A;
extern T0*ms603_258Abc603B;
extern T0*ms603_258Abc603A;
extern T0*ms606_380218Abc606A;
extern T0*ms606_380168Abc606A;
extern T0*ms589_1923813010Abc589A;
extern T0*ms29_1639475718Abc29A;
extern T0*ms113_27561173Abc113A;
extern T0*ms30_17221Abc30A;
extern T0*ms511_372Abc511A;
extern T0*ms552_671Abc589A;
extern T0*ms100_215Abc362A;
extern T0*ms104_240Abc463A;
extern T0*ms93_4492176Abc93A;
extern T0*ms104_545118879Abc104A;
extern T0*ms611_1231257120Abc611A;
extern T0*ms601_1312Abc601A;
extern T0*ms30_212160365Abc30A;
extern T0*ms29_49076823Abc29A;
extern T0*ms423_299Abc423A;
extern T0*ms29_1979951Abc29A;
extern T0*ms612_106047655Abc612A;
extern T0*ms966_482960256Abc966A;
extern T0*ms29_1202672333Abc29A;
extern T0*ms101_2440Abc101A;
extern T0*ms30_436911Abc555A;
extern T0*ms31_1777434714Abc31A;
extern T0*ms104_3040Abc104A;
extern T0*ms29_296Abc391A;
extern T0*ms29_15448Abc29A;
extern T0*ms606_2022635Abc606A;
extern T0*ms94_1923039443Abc94A;
extern T0*ms446_46Abc762A;
extern T0*ms104_713312393Abc104A;
extern T0*ms104_357794960Abc104A;
extern T0*ms780_77282146Abc780A;
extern T0*ms611_259021955Abc611A;
extern T0*ms446_46Abc764A;
extern T0*ms388_5912Abc388A;
extern T0*ms613_388821092Abc613A;
extern T0*ms612_252669317Abc612A;
extern T0*ms29_9713026Abc29A;
extern T0*ms613_1431664982Abc613A;
extern T0*ms30_9790205Abc636A;
extern T0*ms273_252Abc333A;
extern T0*ms104_1580612071Abc104A;
extern T0*ms30_1975394Abc30A;
extern T0*ms104_27063164Abc104A;
extern T0*ms272_87520Abc272B;
extern T0*ms272_87520Abc272A;
extern T0*ms93_67Abc93A;
extern T0*ms344_1440516445Abc344A;
extern T0*ms365_360Abc606A;
extern T0*ms612_2118444283Abc612A;
extern T0*ms612_77773Abc612A;
extern T0*ms585_1152812249Abc585A;
extern T0*ms104_2142659303Abc104A;
extern T0*ms612_7025Abc612A;
extern T0*ms612_7025Abc612B;
extern T0*ms101_129391217Abc101A;
extern T0*ms611_1374304640Abc611A;
extern T0*ms30_3085Abc30A;
extern T0*ms29_572288437Abc29A;
extern T0*ms101_334Abc101A;
extern T0*ms104_240Abc603A;
extern T0*ms104_3374Abc603A;
extern T0*ms104_240Abc603B;
extern T0*ms99_1616517694Abc99A;
extern T0*ms104_240Abc603C;
extern T0*ms104_240Abc603D;
extern T0*ms29_548331507Abc29A;
extern T0*ms104_240Abc603E;
extern T0*ms29_64Abc29A;
extern T0*ms104_240Abc604A;
extern T0*ms104_240Abc604B;
extern T0*ms104_240Abc604C;
extern T0*ms612_870841390Abc612A;
extern T0*ms552_671Abc552A;
extern T0*ms589_988243818Abc589B;
extern T0*ms612_870841390Abc612B;
extern T0*ms780_525205114Abc780A;
extern T0*ms589_988243818Abc589A;
extern T0*ms333_416499Abc333C;
extern T0*ms333_416499Abc333B;
extern T0*ms333_416499Abc333A;
extern T0*ms675_928596125Abc675A;
extern T0*ms273_252Abc403A;
extern T0*ms104_3374Abc606A;
extern T0*ms29_247239028Abc29A;
extern T0*ms606_550508910Abc606A;
extern T0*ms94_175744216Abc94A;
extern T0*ms29_1947419Abc29A;
extern T0*ms104_240Abc612A;
extern T0*ms104_3374Abc612A;
extern T0*ms104_240Abc612B;
extern T0*ms104_240Abc612C;
extern T0*ms104_3374Abc612B;
extern T0*ms589_246Abc603A;
extern T0*ms104_240Abc612D;
extern T0*ms104_240Abc612E;
extern T0*ms29_447851Abc29A;
extern T0*ms101_3494Abc101A;
extern T0*ms589_246Abc604A;
extern T0*ms589_246Abc604B;
extern T0*ms29_1937220099Abc29A;
extern T0*ms589_246Abc604C;
extern T0*ms589_246Abc604D;
extern T0*ms589_246Abc604E;
extern T0*ms29_1944903Abc29A;
extern T0*ms589_246Abc604F;
extern T0*ms589_246Abc604G;
extern T0*ms589_246Abc606A;
extern T0*ms263_416541Abc263A;
extern T0*ms588_1511378937Abc588A;
extern T0*ms104_36951Abc605A;
extern T0*ms424_1382Abc108A;
extern T0*ms104_47278Abc104A;
extern T0*ms589_246Abc612A;
extern T0*ms780_2092663259Abc780A;
extern T0*ms30_10876026Abc30A;
extern T0*ms589_246Abc612B;
extern T0*ms589_246Abc612C;
extern T0*ms29_39154229Abc29A;
extern T0*ms589_246Abc612D;
extern T0*ms113_1711985232Abc113A;
extern T0*ms589_246Abc612E;
extern T0*ms589_246Abc612F;
extern T0*ms589_246Abc612G;
extern T0*ms589_246Abc612H;
extern T0*ms589_246Abc612I;
extern T0*ms589_246Abc612J;
extern T0*ms589_246Abc612K;
extern T0*ms589_246Abc612L;
extern T0*ms589_246Abc612M;
extern T0*ms589_246Abc612N;
extern T0*ms104_1853640928Abc104A;
extern T0*ms589_246Abc612O;
extern T0*ms606_1727Abc606A;
extern T0*ms589_246Abc612P;
extern T0*ms589_246Abc612Q;
extern T0*ms781_41300Abc781A;
extern T0*ms589_246Abc612R;
extern T0*ms589_246Abc612S;
extern T0*ms589_246Abc612T;
extern T0*ms589_246Abc612U;
extern T0*ms589_246Abc612V;
extern T0*ms780_1927425Abc780A;
extern T0*ms589_246Abc612W;
extern T0*ms589_246Abc612X;
extern T0*ms104_1919660703Abc104A;
extern T0*ms589_246Abc612Y;
extern T0*ms589_246Abc612Z;
extern T0*ms104_2630Abc104A;
extern T0*ms104_2630Abc104B;
extern T0*ms104_1672511676Abc104A;
extern T0*ms104_471707221Abc104A;
extern T0*ms589_246Abc612a;
extern T0*ms589_246Abc612b;
extern T0*ms589_246Abc612c;
extern T0*ms589_246Abc612d;
extern T0*ms589_246Abc612e;
extern T0*ms589_246Abc612f;
extern T0*ms589_246Abc612g;
extern T0*ms589_246Abc612h;
extern T0*ms589_246Abc612i;
extern T0*ms589_246Abc612j;
extern T0*ms323_1489034545Abc323A;
extern T0*ms94_1700247488Abc94A;
extern T0*ms589_246Abc612k;
extern T0*ms589_246Abc612l;
extern T0*ms273_10926944Abc273A;
extern T0*ms463_1809088081Abc463A;
extern T0*ms104_12188Abc104A;
extern T0*ms589_345908476Abc589A;
extern T0*ms104_6330Abc104A;
extern T0*ms676_1085938891Abc676A;
extern T0*ms273_10926944Abc270A;
extern T0*ms589_2187432Abc589B;
extern T0*ms585_11952Abc585A;
extern T0*ms273_252Abc436A;
extern T0*ms589_2187432Abc589A;
extern T0*ms104_3374Abc589A;
extern T0*ms273_252Abc437A;
extern T0*ms104_635Abc104A;
extern T0*ms104_635Abc104B;
extern T0*ms100_1066764899Abc100A;
extern T0*ms388_5912Abc606A;
extern T0*ms611_1203432441Abc611A;
extern T0*ms100_1379717706Abc100A;
extern T0*ms104_712350300Abc104A;
extern T0*ms612_437573617Abc612A;
extern T0*ms93_1289042164Abc93A;
extern T0*ms29_1206543966Abc29A;
extern T0*ms589_246Abc589A;
extern T0*ms113_1430004157Abc113A;
extern T0*ms29_1300046706Abc29A;
extern T0*ms101_1775Abc101A;
extern T0*ms104_1680956616Abc104A;
extern T0*ms29_1395184171Abc29A;
extern T0*ms93_331100035Abc93A;
extern T0*ms589_815493762Abc589A;
extern T0*ms104_23988287Abc104A;
extern T0*ms100_1365578385Abc100A;
extern T0*ms104_400297641Abc589A;
extern T0*ms104_400297641Abc589B;
extern T0*ms94_1578831409Abc94A;
extern T0*ms273_252Abc511A;
extern T0*ms30_640Abc30A;
extern T0*ms589_68284Abc589A;
extern T0*ms101_1361085152Abc101A;
extern T0*ms589_436987Abc589A;
extern T0*ms780_1242450095Abc780A;
extern T0*ms104_1737592965Abc104A;
extern T0*ms780_1341105285Abc780A;
extern T0*ms780_1497878015Abc780A;
extern T0*ms606_1124563501Abc606A;
extern T0*ms273_252Abc516A;
extern T0*ms606_1445Abc606A;
extern T0*ms395_29662Abc395A;
extern T0*ms273_252Abc473A;
extern T0*ms104_2115332211Abc104A;
extern T0*ms104_107312226Abc104A;
extern T0*ms612_153655Abc612A;
extern T0*ms273_252Abc469A;
extern T0*ms273_252Abc469B;
extern T0*ms93_1933Abc93A;
extern T0*ms29_705019679Abc29A;
extern T0*ms778_413927315Abc778A;
extern T0*ms100_1463938603Abc100A;
extern T0*ms463_852437Abc463A;
extern T0*ms478_672729595Abc478A;
extern T0*ms29_1115958189Abc29A;
extern T0*ms273_252Abc486A;
extern T0*ms29_43Abc613A;
extern T0*ms29_43Abc613B;
extern T0*ms273_60894Abc273A;
extern T0*ms104_389672Abc104A;
extern T0*ms618_293Abc618A;
extern T0*ms93_1109293176Abc93A;
extern T0*ms611_89821Abc611A;
extern T0*ms29_859431564Abc29A;
extern T0*ms30_16001Abc30A;
extern T0*ms101_539873441Abc101A;
extern T0*ms30_87466Abc30A;
extern T0*ms273_927785894Abc273A;
extern T0*ms780_101Abc780A;
extern T0*ms388_29037Abc606A;
extern T0*ms589_882065083Abc589B;
extern T0*ms589_882065083Abc589A;
extern T0*ms365_2126200255Abc365A;
extern T0*ms101_69851Abc101A;
extern T0*ms101_69851Abc101B;
extern T0*ms606_244699380Abc606E;
extern T0*ms606_244699380Abc606D;
extern T0*ms606_244699380Abc606C;
extern T0*ms30_78002Abc417B;
extern T0*ms104_616198177Abc104A;
extern T0*ms606_244699380Abc606B;
extern T0*ms30_78002Abc417A;
extern T0*ms606_244699380Abc606A;
extern T0*ms30_10648581Abc424A;
extern T0*ms104_2096892436Abc104A;
extern T0*ms29_880412606Abc29A;
extern T0*ms104_434116584Abc104A;
extern T0*ms612_10895Abc612A;
extern T0*ms30_76226Abc30A;
extern T0*ms88_2123229206Abc88A;
extern T0*ms30_10648581Abc371A;
extern T0*ms588_1191155066Abc588B;
extern T0*ms104_1197714671Abc104A;
extern T0*ms588_1191155066Abc588A;
extern T0*ms104_163909964Abc104A;
extern T0*ms104_471553120Abc104B;
extern T0*ms104_471553120Abc104A;
extern T0*ms604_1240Abc604A;
extern T0*ms104_1065652086Abc104A;
extern T0*ms767_1000694404Abc767A;
extern T0*ms29_361Abc29A;
extern T0*ms604_1240Abc612A;
extern T0*ms588_205124Abc588A;
extern T0*ms113_210141519Abc113A;
extern T0*ms104_1281004126Abc104A;
extern T0*ms104_1154403080Abc104A;
extern T0*ms273_252Abc616A;
extern T0*ms273_252Abc616B;
extern T0*ms100_215Abc669A;
extern T0*ms612_9905Abc612A;
extern T0*ms322_1981041429Abc322A;
extern T0*ms780_8624Abc780A;
extern T0*ms104_9130Abc780A;
extern T0*ms778_614Abc778B;
extern T0*ms778_614Abc778A;
extern T0*ms29_1607595572Abc29A;
extern T0*ms612_31455Abc612A;
extern T0*ms556_985967445Abc556A;
extern T0*ms778_614Abc780D;
extern T0*ms778_614Abc780C;
extern T0*ms612_340514Abc612A;
extern T0*ms778_614Abc780B;
extern T0*ms101_3291Abc618B;
extern T0*ms778_614Abc780A;
extern T0*ms101_3291Abc618A;
extern T0*ms101_3291Abc617B;
extern T0*ms101_3291Abc617A;
extern T0*ms104_2039472678Abc104A;
extern T0*ms101_3291Abc620C;
extern T0*ms101_3291Abc620B;
extern T0*ms101_3291Abc620A;
extern T0*ms104_756717624Abc104A;
extern T0*ms370_3147Abc370A;
extern T0*ms82_685Abc82A;
extern T0*ms104_1142598643Abc104A;
extern T0*ms589_2187619Abc589A;
extern T0*ms606_1936367907Abc606A;
extern T0*ms110_300594Abc93A;
extern T0*ms104_6455Abc104A;
extern T0*ms101_3294Abc101A;
extern T0*ms262_319940936Abc262A;
extern T0*ms262_319940936Abc262B;
extern T0*ms262_319940936Abc262C;
extern T0*ms262_319940936Abc262D;
extern T0*ms104_1982839385Abc104A;
extern T0*ms780_27909038Abc780A;
extern T0*ms388_29037Abc388A;
extern T0*ms30_10208843Abc370A;
extern T0*ms104_267478119Abc104A;
extern T0*ms29_1297876698Abc29A;
extern T0*ms104_475921520Abc104A;
extern T0*ms362_44462444Abc362A;
extern T0*ms104_192841706Abc104A;
extern T0*ms611_1869700848Abc611A;
extern T0*ms101_447734Abc101A;
extern T0*ms606_352968782Abc606A;
extern T0*ms780_1574324912Abc780A;
extern T0*ms263_817932306Abc263A;
extern T0*ms104_1500500537Abc104A;
extern T0*ms101_18144Abc101A;
extern T0*ms725_1927020241Abc725A;
extern T0*ms104_1965730Abc606B;
extern T0*ms104_1965730Abc606A;
extern T0*ms464_3496Abc464A;
extern T0*ms101_0Abc95A;
extern T0*ms723_16139Abc723A;
extern T0*ms101_91157Abc101A;
extern T0*ms30_69805Abc30A;
extern T0*ms589_2187619Abc604A;
extern T0*ms101_0Abc93A;
extern T0*ms93_246399995Abc93A;
extern T0*ms606_1832703325Abc606A;
extern T0*ms29_1209184326Abc29A;
extern T0*ms468_1753Abc468A;
extern T0*ms611_38305571Abc611A;
extern T0*ms586_161665Abc586A;
extern T0*ms585_7317Abc585A;
extern T0*ms93_1778077539Abc93A;
extern T0*ms780_2142119302Abc780A;
extern T0*ms589_7475Abc589A;
extern T0*ms589_173055Abc589A;
extern T0*ms589_7475Abc589B;
extern T0*ms29_62Abc29A;
extern T0*ms30_1168210079Abc30A;
extern T0*ms604_506Abc604A;
extern T0*ms100_445497083Abc100A;
extern T0*ms339_767649523Abc339A;
extern T0*ms101_0Abc82A;
extern T0*ms104_1377391529Abc104A;
extern T0*ms589_1125599189Abc589A;
extern T0*ms612_15020Abc612G;
extern T0*ms612_15020Abc612F;
extern T0*ms612_15020Abc612E;
extern T0*ms612_15020Abc612D;
extern T0*ms612_15020Abc612C;
extern T0*ms612_15020Abc612B;
extern T0*ms612_15020Abc612A;
extern T0*ms462_1331532446Abc462A;
extern T0*ms104_1271Abc589A;
extern T0*ms29_1744612358Abc29A;
extern T0*ms606_1650Abc606A;
extern T0*ms606_1650Abc606B;
extern T0*ms606_1650Abc606C;
extern T0*ms365_561523426Abc365A;
extern T0*ms606_1650Abc606D;
extern T0*ms606_1650Abc606E;
extern T0*ms29_1501191Abc364A;
extern T0*ms93_124311631Abc93A;
extern T0*ms273_188916891Abc273A;
extern T0*ms780_77562923Abc780A;
extern T0*ms606_1650Abc613A;
extern T0*ms612_1116064705Abc612A;
extern T0*ms624_265537649Abc624A;
extern T0*ms101_262628264Abc101A;
extern T0*ms104_1839365502Abc104A;
extern T0*ms613_2187545Abc613A;
extern T0*ms604_920950Abc604A;
extern T0*ms780_90782Abc780A;
extern T0*ms101_13028Abc101A;
extern T0*ms612_204519611Abc612A;
extern T0*ms780_90782Abc780B;
extern T0*ms780_90782Abc780C;
extern T0*ms780_90782Abc780D;
extern T0*ms29_243411981Abc29A;
extern T0*ms780_110557057Abc780A;
extern T0*ms29_1603529235Abc29A;
extern T0*ms364_7506001Abc364A;
extern T0*ms101_19761224Abc101A;
extern T0*ms462_218Abc462A;
extern T0*ms606_840791Abc606A;
extern T0*ms612_1586596820Abc613A;
extern T0*ms104_1319581398Abc104A;
extern T0*ms612_1586596820Abc612B;
extern T0*ms612_1586596820Abc612A;
extern T0*ms552_671Abc104B;
extern T0*ms552_671Abc104A;
extern T0*ms780_1173325215Abc780A;
extern T0*ms29_2098363273Abc29A;
extern T0*ms29_1744399653Abc29A;
extern T0*ms612_325Abc612A;
extern T0*ms29_827429162Abc29A;
extern T0*ms31_1994621Abc31A;
extern T0*ms113_195766720Abc113A;
extern T0*ms557_1500847347Abc557A;
extern T0*ms588_5580Abc588A;
extern T0*ms29_90544Abc29A;
extern T0*ms469_1832Abc469A;
extern T0*ms365_2126200255Abc104A;
extern T0*ms26_1090Abc101A;
extern T0*ms30_661Abc359A;
extern T0*ms26_1090Abc101B;
extern T0*ms104_251Abc104A;
extern T0*ms104_251Abc104B;
extern T0*ms104_251Abc104C;
extern T0*ms414_77Abc414A;
extern T0*ms463_1961687Abc463A;
extern T0*ms612_933501Abc612A;
extern T0*ms30_10208843Abc30A;
extern T0*ms101_57487Abc101A;
extern T0*ms29_55040341Abc29A;
extern T0*ms612_34510Abc612A;
extern T0*ms30_1730514379Abc30A;
extern T0*ms100_921818688Abc100A;
extern T0*ms104_1586448448Abc104A;
extern T0*ms94_446380143Abc94A;
extern T0*ms612_854330615Abc612A;
extern T0*ms612_162070Abc612A;
extern T0*ms615_138425Abc615A;
extern T0*ms31_388005040Abc31A;
extern T0*ms615_138425Abc615B;
extern T0*ms26_1090Abc113A;
extern T0*ms26_1090Abc113B;
extern T0*ms26_1090Abc113C;
extern T0*ms26_1090Abc113D;
extern T0*ms100_1206593669Abc100A;
extern T0*ms104_1413407004Abc104A;
extern T0*ms612_2138778683Abc612A;
extern T0*ms613_1291Abc613A;
extern T0*ms612_255Abc612B;
extern T0*ms613_1291Abc613B;
extern T0*ms612_255Abc612A;
extern T0*ms557_255Abc557A;
extern T0*ms613_1102979958Abc613A;
extern T0*ms30_3415Abc30A;
extern T0*ms589_706329Abc589A;
extern T0*ms104_2630Abc613A;
extern T0*ms29_33120277Abc29A;
extern T0*ms30_10990481Abc30A;
extern T0*ms101_9222Abc101A;
extern T0*ms101_1319327951Abc101A;
extern T0*ms104_6330Abc611A;
extern T0*ms604_580292587Abc604A;
extern T0*ms606_379993Abc606A;
extern T0*ms29_53339Abc29A;
extern T0*ms104_635Abc606A;
extern T0*ms100_542094038Abc100A;
extern T0*ms104_635Abc606B;
extern T0*ms613_2122389958Abc613A;
extern T0*ms104_635Abc606C;
extern T0*ms29_42134669Abc29A;
extern T0*ms113_44975894Abc113A;
extern T0*ms104_635Abc606D;
extern T0*ms104_635Abc606E;
extern T0*ms104_635Abc612A;
extern T0*ms104_635Abc606F;
extern T0*ms104_635Abc612B;
extern T0*ms104_635Abc606G;
extern T0*ms104_635Abc606H;
extern T0*ms101_3094Abc101A;
extern T0*ms31_10714216Abc31A;
extern T0*ms589_254Abc589A;
extern T0*ms780_73472312Abc780B;
extern T0*ms104_635Abc615A;
extern T0*ms780_73472312Abc780A;
extern T0*ms104_635Abc615B;
extern T0*ms613_68406039Abc613B;
extern T0*ms613_68406039Abc613A;
extern T0*ms104_106460275Abc104A;
extern T0*ms613_1062582514Abc613A;
extern T0*ms104_1042003640Abc104A;
extern T0*ms104_33475Abc104A;
extern T0*ms104_339308075Abc104A;
extern T0*ms273_200Abc589A;
extern T0*ms104_1630601156Abc104A;
extern T0*ms104_1965252672Abc104A;
extern T0*ms104_1881374985Abc104A;
extern T0*ms77_522142839Abc77B;
extern T0*ms611_249330648Abc611A;
extern T0*ms77_522142839Abc77A;
extern T0*ms104_2630Abc589A;
extern T0*ms30_2073386Abc357A;
extern T0*ms101_530877013Abc101A;
extern T0*ms30_2073386Abc357B;
extern T0*ms30_670Abc30A;
extern T0*ms29_7095298Abc29A;
extern T0*ms104_3475Abc104A;
extern T0*ms612_2571Abc612A;
extern T0*ms104_273431355Abc589D;
extern T0*ms104_273431355Abc589C;
extern T0*ms29_1673348567Abc29A;
extern T0*ms104_273431355Abc589B;
extern T0*ms101_17794Abc101A;
extern T0*ms104_850522083Abc104A;
extern T0*ms104_1065942137Abc104A;
extern T0*ms104_273431355Abc589A;
extern T0*ms780_784300160Abc780A;
extern T0*ms26_63Abc26A;
extern T0*ms25_1325879523Abc25A;
extern T0*ms104_1195084695Abc104A;
extern T0*ms780_5161461Abc780A;
extern T0*ms101_3069Abc101A;
extern T0*ms104_635Abc589A;
extern T0*ms589_274Abc589A;
extern T0*ms30_1747646688Abc30A;
extern T0*ms611_16927Abc611A;
extern T0*ms323_176865800Abc323A;
extern T0*ms362_181352Abc362A;
extern T0*ms101_0Abc100A;
extern T0*ms101_0Abc101A;
extern T0*ms101_0Abc101B;
extern T0*ms101_0Abc101C;
extern T0*ms29_9529116Abc29A;
extern T0*ms101_0Abc101D;
extern T0*ms966_1439959996Abc966A;
extern T0*ms101_0Abc101E;
extern T0*ms101_0Abc101F;
extern T0*ms101_0Abc101G;
extern T0*ms612_6965Abc612A;
extern T0*ms104_7869Abc104A;
extern T0*ms101_0Abc101H;
extern T0*ms104_389675Abc104A;
extern T0*ms612_6965Abc612B;
extern T0*ms101_0Abc101I;
extern T0*ms612_6965Abc612C;
extern T0*ms101_0Abc101J;
extern T0*ms101_0Abc101K;
extern T0*ms101_0Abc101L;
extern T0*ms101_0Abc101M;
extern T0*ms357_1485100899Abc357A;
extern T0*ms101_0Abc101N;
extern T0*ms101_0Abc101O;
extern T0*ms101_0Abc104A;
extern T0*ms101_0Abc101P;
extern T0*ms101_0Abc101Q;
extern T0*ms101_0Abc104B;
extern T0*ms101_0Abc101R;
extern T0*ms101_0Abc104C;
extern T0*ms101_0Abc101S;
extern T0*ms104_273431355Abc615A;
extern T0*ms29_577213499Abc29A;
extern T0*ms612_162010Abc613A;
extern T0*ms778_306811962Abc778A;
extern T0*ms612_162010Abc612A;
extern T0*ms104_273431355Abc557A;
extern T0*ms348_327Abc348A;
extern T0*ms30_1473988901Abc30A;
extern T0*ms101_8884Abc101B;
extern T0*ms323_673829558Abc323A;
extern T0*ms101_8884Abc101A;
extern T0*ms101_84381Abc101A;
extern T0*ms25_1889925553Abc25A;
extern T0*ms606_3175Abc104A;
extern T0*ms606_3175Abc104B;
extern T0*ms31_914215870Abc31A;
extern T0*ms101_9107Abc101A;
extern T0*ms29_567319812Abc29A;
extern T0*ms722_89481Abc606A;
extern T0*ms612_116864219Abc612A;
extern T0*ms429_1478Abc429A;
extern T0*ms611_40031469Abc611A;
extern T0*ms30_265093627Abc30A;
extern T0*ms30_945182441Abc30A;
extern T0*ms612_6411Abc612A;
extern T0*ms446_46Abc99A;
extern T0*ms412_1288915017Abc104A;
extern T0*ms29_60Abc29A;
extern T0*ms778_1777096676Abc778A;
extern T0*ms29_1856946950Abc29A;
extern T0*ms613_269141588Abc613A;
extern T0*ms29_636Abc29A;
extern T0*ms104_1164920984Abc104A;
extern T0*ms101_1335Abc101A;
extern T0*ms612_1206509635Abc612A;
extern T0*ms612_1679636650Abc612A;
extern T0*ms612_1679636650Abc612B;
extern T0*ms104_148900Abc104A;
extern T0*ms464_380590Abc464A;
extern T0*ms104_6455Abc611A;
extern T0*ms588_1199620901Abc588A;
extern T0*ms669_1043Abc669A;
extern T0*ms101_3291Abc101A;
extern T0*ms612_887295984Abc612A;
extern T0*ms612_887295984Abc612B;
extern T0*ms77_1761241425Abc77A;
extern T0*ms104_6455Abc612A;
extern T0*ms104_6455Abc557A;
extern T0*ms104_6455Abc612B;
extern T0*ms104_6455Abc557B;
extern T0*ms104_444175272Abc104A;
extern T0*ms613_2670Abc613A;
extern T0*ms104_6455Abc613A;
extern T0*ms104_6455Abc613B;
extern T0*ms104_6455Abc613C;
extern T0*ms491_1083118122Abc491A;
extern T0*ms104_635Abc780A;
extern T0*ms104_635Abc780B;
extern T0*ms104_1938991062Abc104A;
extern T0*ms101_240Abc101A;
extern T0*ms606_1181502Abc606A;
extern T0*ms606_504830035Abc606A;
extern T0*ms93_4750778Abc93A;
extern T0*ms601_185428Abc601A;
extern T0*ms104_77Abc104A;
extern T0*ms94_35386613Abc94A;
extern T0*ms94_74239Abc94A;
extern T0*ms780_931143030Abc780A;
extern T0*ms611_49680837Abc611A;
extern T0*ms780_998144220Abc780A;
extern T0*ms31_10554609Abc31A;
extern T0*ms780_1651Abc780A;
extern T0*ms29_1447702Abc29A;
extern T0*ms104_1040899642Abc104A;
extern T0*ms29_197002168Abc29A;
extern T0*ms101_240Abc113A;
extern T0*ms604_2187584Abc604A;
extern T0*ms101_240Abc113B;
extern T0*ms104_471Abc104A;
extern T0*ms463_34086Abc463A;
extern T0*ms104_471Abc104B;
extern T0*ms104_1965730Abc104A;
extern T0*ms722_89481Abc722A;
extern T0*ms589_56760755Abc589A;
extern T0*ms104_11086084Abc104B;
extern T0*ms104_11086084Abc104A;
extern T0*ms104_451157Abc104A;
extern T0*ms104_451157Abc104B;
extern T0*ms104_451157Abc104C;
extern T0*ms612_1726920051Abc612A;
extern T0*ms104_1483072174Abc104A;
extern T0*ms104_6455Abc589A;
extern T0*ms429_1478Abc602A;
extern T0*ms423_597973944Abc423A;
extern T0*ms273_1224218969Abc273A;
extern T0*ms612_6396Abc612A;
extern T0*ms26_1090Abc26A;
extern T0*ms668_8777401Abc668A;
extern T0*ms604_506Abc104B;
extern T0*ms604_506Abc104A;
extern T0*ms612_1214258443Abc612A;
extern T0*ms542_32450971Abc542A;
extern T0*ms604_1298Abc604A;
extern T0*ms604_1298Abc604B;
extern T0*ms601_185453Abc601A;
extern T0*ms601_185448Abc601A;
extern T0*ms101_0Abc263A;
extern T0*ms101_0Abc263B;
extern T0*ms780_28263330Abc780A;
extern T0*ms612_160146Abc612B;
extern T0*ms612_160146Abc612A;
extern T0*ms104_10666295Abc104A;
extern T0*ms101_0Abc271A;
extern T0*ms101_0Abc271B;
extern T0*ms785_1959331451Abc785A;
extern T0*ms782_1682659883Abc782A;
extern T0*ms101_25704393Abc101A;
extern T0*ms101_15721Abc101A;
extern T0*ms104_1754886761Abc104A;
extern T0*ms104_1290234339Abc104A;
extern T0*ms462_1331532446Abc966A;
extern T0*ms462_1331532446Abc966B;
extern T0*ms606_1898591066Abc606A;
extern T0*ms612_168532Abc612A;
extern T0*ms104_1793244543Abc104A;
extern T0*ms612_83277Abc612A;
extern T0*ms30_11251026Abc30A;
extern T0*ms588_926003101Abc588A;
extern T0*ms612_244793715Abc612B;
extern T0*ms612_244793715Abc612A;
extern T0*ms93_49203356Abc93A;
extern T0*ms358_1686701Abc358A;
extern T0*ms585_1971245Abc585A;
extern T0*ms29_220Abc29A;
extern T0*ms104_586511651Abc104A;
extern T0*ms542_1747846Abc542A;
extern T0*ms29_1498845794Abc29A;
extern T0*ms104_531983658Abc104A;
extern T0*ms601_185468Abc601A;
extern T0*ms780_1279738389Abc780A;
extern T0*ms101_5525574Abc101A;
extern T0*ms29_1247Abc29A;
extern T0*ms93_18150Abc101A;
extern T0*ms606_750Abc589A;
extern T0*ms29_253393261Abc29A;
extern T0*ms104_1417Abc104A;
extern T0*ms322_977955761Abc322A;
extern T0*ms104_2087300232Abc104A;
extern T0*ms93_18150Abc104A;
extern T0*ms93_18150Abc104B;
extern T0*ms612_78629Abc612B;
extern T0*ms612_78629Abc612A;
extern T0*ms780_1012357115Abc780A;
extern T0*ms104_1307483215Abc104A;
extern T0*ms780_680177517Abc780A;
extern T0*ms778_2082029949Abc778A;
extern T0*ms100_5615Abc100A;
extern T0*ms602_48Abc602A;
extern T0*ms104_6330Abc966A;
extern T0*ms602_48Abc602B;
extern T0*ms604_23186700Abc604A;
extern T0*ms602_48Abc602C;
extern T0*ms28_8897Abc28A;
extern T0*ms615_160937Abc615A;
extern T0*ms613_1416678934Abc613A;
extern T0*ms589_2111741Abc589A;
extern T0*ms101_0Abc362A;
extern T0*ms97_589Abc97A;
extern T0*ms780_176986Abc780A;
extern T0*ms104_1404148845Abc104C;
extern T0*ms104_251Abc603A;
extern T0*ms104_1404148845Abc104B;
extern T0*ms104_251Abc603B;
extern T0*ms104_1404148845Abc104A;
extern T0*ms612_520388145Abc612B;
extern T0*ms612_520388145Abc612A;
extern T0*ms104_30942Abc104A;
extern T0*ms606_521905705Abc606A;
extern T0*ms104_251Abc611A;
extern T0*ms606_1291760099Abc606A;
extern T0*ms104_251Abc611B;
extern T0*ms343_1771711260Abc343A;
extern T0*ms104_249Abc104A;
extern T0*ms104_251Abc611C;
extern T0*ms780_52067Abc780A;
extern T0*ms104_3393Abc104A;
extern T0*ms104_251Abc612A;
extern T0*ms104_251Abc612B;
extern T0*ms112_287218105Abc112A;
extern T0*ms104_251Abc612C;
extern T0*ms101_0Abc423A;
extern T0*ms101_0Abc423B;
extern T0*ms29_2035472654Abc29A;
extern T0*ms101_0Abc423C;
extern T0*ms612_511943145Abc612A;
extern T0*ms780_384078512Abc780A;
extern T0*ms29_39002989Abc29A;
extern T0*ms30_264667428Abc30A;
extern T0*ms88_672350142Abc88A;
extern T0*ms94_1581369567Abc94A;
extern T0*ms606_750Abc606A;
extern T0*ms612_17743865Abc612A;
extern T0*ms612_17743865Abc612B;
extern T0*ms104_383570Abc104A;
extern T0*ms29_7704337Abc29A;
extern T0*ms101_240Abc261A;
extern T0*ms611_1428771266Abc611A;
extern T0*ms30_1992063831Abc30A;
extern T0*ms101_8991Abc101B;
extern T0*ms101_8991Abc101A;
extern T0*ms95_618869258Abc95A;
extern T0*ms101_240Abc263A;
extern T0*ms612_247Abc612A;
extern T0*ms30_3073Abc30A;
extern T0*ms557_1710309Abc557A;
extern T0*ms588_2039095413Abc588A;
extern T0*ms114_570Abc114A;
extern T0*ms604_11300605Abc604D;
extern T0*ms604_11300605Abc604C;
extern T0*ms604_11300605Abc604B;
extern T0*ms93_9897510Abc93A;
extern T0*ms604_11300605Abc604A;
extern T0*ms29_13194Abc29A;
extern T0*ms113_1071750288Abc113A;
extern T0*ms30_600Abc30A;
extern T0*ms93_407741255Abc93A;
extern T0*ms104_561301605Abc104A;
extern T0*ms357_1626899946Abc722A;
extern T0*ms30_3175Abc108A;
extern T0*ms588_1646Abc588A;
extern T0*ms104_251Abc589A;
extern T0*ms588_1646Abc588B;
extern T0*ms29_1739790308Abc29A;
extern T0*ms412_1288915017Abc412A;
extern T0*ms104_411134193Abc104A;
extern T0*ms104_651Abc104A;
extern T0*ms104_651Abc104B;
extern T0*ms30_78263Abc470B;
extern T0*ms104_1206795525Abc104A;
extern T0*ms30_78263Abc470A;
extern T0*ms93_1733505988Abc93A;
extern T0*ms104_280139425Abc104A;
extern T0*ms29_1553736287Abc29A;
extern T0*ms104_5367889Abc104A;
extern T0*ms93_18150Abc93A;
extern T0*ms113_349372Abc113A;
extern T0*ms113_2537Abc113A;
extern T0*ms94_744085684Abc94A;
extern T0*ms88_1838187926Abc88A;
extern T0*ms104_1170250908Abc104A;
extern T0*ms780_377Abc780B;
extern T0*ms612_2030510390Abc612A;
extern T0*ms780_377Abc780A;
extern T0*ms25_1852009437Abc25A;
extern T0*ms30_3645Abc30A;
extern T0*ms30_3595Abc30A;
extern T0*ms780_291421585Abc780A;
extern T0*ms29_50778415Abc29A;
extern T0*ms104_1404852998Abc104A;
extern T0*ms101_0Abc526A;
extern T0*ms101_0Abc526B;
extern T0*ms29_55926626Abc29A;
extern T0*ms101_0Abc527A;
extern T0*ms104_1136523103Abc104A;
extern T0*ms100_1162901343Abc100A;
extern T0*ms758_324Abc101A;
extern T0*ms29_65574Abc436A;
extern T0*ms780_1396Abc780A;
extern T0*ms101_1255802680Abc101A;
extern T0*ms589_430519127Abc589A;
extern T0*ms104_17480Abc104A;
extern T0*ms104_17480Abc104B;
extern T0*ms26_1090Abc673A;
extern T0*ms649_1257368965Abc649A;
extern T0*ms101_0Abc542A;
extern T0*ms101_0Abc542B;
extern T0*ms104_1253959973Abc104A;
extern T0*ms104_1273572186Abc104A;
extern T0*ms589_327Abc589A;
extern T0*ms104_889346373Abc104A;
extern T0*ms25_833055089Abc25A;
extern T0*ms31_234165132Abc31A;
extern T0*ms542_1185594Abc542A;
extern T0*ms611_54714979Abc611A;
extern T0*ms104_726227573Abc104A;
extern T0*ms101_1744Abc101A;
extern T0*ms725_849265556Abc725A;
extern T0*ms613_32860Abc613A;
extern T0*ms94_696478167Abc94A;
extern T0*ms104_7869Abc604A;
extern T0*ms104_7869Abc604B;
extern T0*ms93_439136Abc93A;
extern T0*ms601_810433Abc601A;
extern T0*ms104_7869Abc611A;
extern T0*ms612_108351709Abc612A;
extern T0*ms104_7869Abc612A;
extern T0*ms104_7869Abc612B;
extern T0*ms273_1661812564Abc273A;
extern T0*ms104_7869Abc612C;
extern T0*ms104_7869Abc612D;
extern T0*ms104_1723513855Abc104D;
extern T0*ms104_7869Abc612E;
extern T0*ms104_1723513855Abc104C;
extern T0*ms104_7869Abc612F;
extern T0*ms104_7869Abc612G;
extern T0*ms104_1723513855Abc104B;
extern T0*ms104_1723513855Abc104A;
extern T0*ms110_300594Abc113A;
extern T0*ms611_942808765Abc611A;
extern T0*ms104_522691310Abc104A;
extern T0*ms552_168Abc552A;
extern T0*ms113_44975894Abc673A;
extern T0*ms104_3475Abc589A;
extern T0*ms104_3475Abc589B;
extern T0*ms104_3475Abc589C;
extern T0*ms604_184795Abc604A;
extern T0*ms104_273431355Abc104B;
extern T0*ms104_273431355Abc104A;
extern T0*ms780_618166083Abc780A;
extern T0*ms29_89510Abc29A;
extern T0*ms26_579450289Abc26A;
extern T0*ms104_2189840Abc104A;
extern T0*ms423_620Abc423A;
extern T0*ms101_0Abc625A;
extern T0*ms104_1136118256Abc104A;
extern T0*ms29_48672249Abc29A;
extern T0*ms606_3175Abc606A;
extern T0*ms606_3175Abc606B;
extern T0*ms601_4571007Abc601A;
extern T0*ms606_3175Abc612A;
extern T0*ms101_59731Abc101A;
extern T0*ms606_3175Abc613A;
extern T0*ms104_2041682Abc104A;
extern T0*ms104_2041682Abc104B;
extern T0*ms104_2041682Abc104C;
extern T0*ms104_379Abc104A;
extern T0*ms611_1994331Abc611A;
extern T0*ms104_2041682Abc104D;
extern T0*ms104_379Abc104B;
extern T0*ms104_2041682Abc104E;
extern T0*ms585_257Abc585A;
extern T0*ms516_287Abc588A;
extern T0*ms588_1646Abc780A;
extern T0*ms104_985140858Abc104A;
extern T0*ms588_1646Abc780B;
extern T0*ms29_2246041Abc29A;
extern T0*ms104_10739979Abc104A;
extern T0*ms104_738771309Abc104A;
extern T0*ms589_1246790712Abc589A;
extern T0*ms606_162095Abc606A;
extern T0*ms30_2234341Abc30A;
extern T0*ms111_2120987577Abc111A;
extern T0*ms330_1001314405Abc330A;
extern T0*ms473_2088401Abc473A;
extern T0*ms412_1288915017Abc611A;
extern T0*ms557_1502207936Abc557A;
extern T0*ms30_3601Abc30A;
extern T0*ms30_2065491Abc30A;
extern T0*ms362_78082Abc362A;
extern T0*ms589_832670Abc589A;
extern T0*ms101_61342149Abc101A;
extern T0*ms29_1554777Abc29A;
extern T0*ms104_46350Abc104A;
extern T0*ms29_79341Abc29A;
extern T0*ms30_436196Abc30A;
extern T0*ms601_4571032Abc601A;
extern T0*ms104_284Bbc104A;
extern T0*ms104_284Bbc104B;
extern T0*ms273_2064444Abc273A;
extern T0*ms767_68224Abc767A;
extern T0*ms29_3075Abc29A;
extern T0*ms101_0Abc670A;
extern T0*ms780_486352305Abc780A;
extern T0*ms101_0Abc670B;
extern T0*ms29_207673231Abc29A;
extern T0*ms101_2833Abc101A;
extern T0*ms101_0Abc722A;
extern T0*ms273_2064444Abc270A;
extern T0*ms101_395994Abc101A;
extern T0*ms606_440120430Abc606A;
extern T0*ms611_280766651Abc611A;
extern T0*ms30_16264Abc459A;
extern T0*ms101_120239233Abc101A;
extern T0*ms104_207160501Abc104A;
extern T0*ms101_0Abc674A;
extern T0*ms88_8198176Abc88A;
extern T0*ms263_1977886Abc263A;
extern T0*ms613_2001063662Abc613A;
extern T0*ms101_0Abc725A;
extern T0*ms606_1008067448Abc613A;
extern T0*ms101_0Abc725B;
extern T0*ms612_419Abc612B;
extern T0*ms101_0Abc676A;
extern T0*ms612_419Abc612A;
extern T0*ms101_0Abc676B;
extern T0*ms101_0Abc676C;
extern T0*ms606_1008067448Abc606A;
extern T0*ms29_167970159Abc29A;
extern T0*ms93_494839979Abc93A;
extern T0*ms29_217Abc29A;
extern T0*ms29_275488632Abc29A;
extern T0*ms604_7225250Abc604A;
extern T0*ms101_0Abc738A;
extern T0*ms606_602573626Abc606A;
extern T0*ms612_234933541Abc612A;
extern T0*ms104_4049151Abc104A;
extern T0*ms104_1906398440Abc104A;
extern T0*ms100_327902Abc271A;
extern T0*ms104_215791Abc780A;
extern T0*ms100_327902Abc271B;
extern T0*ms780_737599544Abc780A;
extern T0*ms29_2218105Abc29A;
extern T0*ms29_80416Abc29A;
extern T0*ms104_471Abc612D;
extern T0*ms104_471Abc612E;
extern T0*ms763_1182938696Abc763A;
extern T0*ms109_51895507Abc109A;
extern T0*ms104_451157Abc611A;
extern T0*ms30_3175Abc357A;
extern T0*ms606_1261705Abc606A;
extern T0*ms30_10049231Abc30A;
extern T0*ms26_941571923Abc26A;
extern T0*ms557_51582255Abc557A;
extern T0*ms780_604Abc780B;
extern T0*ms780_604Abc780A;
extern T0*ms30_3175Abc371A;
extern T0*ms604_1188262106Abc604A;
extern T0*ms30_627Abc406A;
extern T0*ms30_78263Abc30A;
extern T0*ms357_1626899946Abc357A;
extern T0*ms30_3175Abc417A;
extern T0*ms101_0Abc763A;
extern T0*ms516_287Abc516A;
extern T0*ms29_185934049Abc29A;
extern T0*ms589_3212Abc589A;
extern T0*ms618_474Abc618A;
extern T0*ms30_3175Abc424A;
extern T0*ms323_1492212881Abc323A;
extern T0*ms31_267875778Abc31A;
extern T0*ms104_323348966Abc104A;
extern T0*ms104_1364588829Abc104A;
extern T0*ms30_479922190Abc30A;
extern T0*ms612_537910373Abc612A;
extern T0*ms28_331Abc28A;
extern T0*ms104_471Abc589A;
extern T0*ms780_1665297219Abc780A;
extern T0*ms29_911175911Abc29A;
extern T0*ms589_1115628985Abc589A;
extern T0*ms30_3175Abc393A;
extern T0*ms104_1201497496Abc104A;
extern T0*ms30_1223234252Abc263A;
extern T0*ms101_0Abc785A;
extern T0*ms29_65574Abc29A;
extern T0*ms101_0Abc785B;
extern T0*ms611_1246644455Abc611A;
extern T0*ms104_451157Abc589A;
extern T0*ms101_0Abc785C;
extern T0*ms101_0Abc785D;
extern T0*ms101_0Abc785E;
extern T0*ms93_599810839Abc93A;
extern T0*ms780_1739163321Abc780A;
extern T0*ms101_333Abc101A;
extern T0*ms101_333Abc101B;
extern T0*ms444_114137597Abc444A;
extern T0*ms101_333Abc101C;
extern T0*ms101_0Abc787A;
extern T0*ms30_627Abc392A;
extern T0*ms101_8801Abc101A;
extern T0*ms104_8260Abc104A;
extern T0*ms30_627Abc393A;
extern T0*ms589_1642168697Abc589A;
extern T0*ms612_10089690Abc612A;
extern T0*ms94_174945438Abc94A;
extern T0*ms107_2035830473Abc107A;
extern T0*ms589_82Abc589A;
extern T0*ms100_1574136045Abc100A;
extern T0*ms606_3175Abc780A;
extern T0*ms30_56255230Abc30A;
extern T0*ms606_3175Abc781A;
extern T0*ms606_3175Abc782A;
extern T0*ms550_146251545Abc550A;
extern T0*ms30_3175Abc459A;
extern T0*ms100_866669263Abc100A;
extern T0*ms30_3175Abc470A;
extern T0*ms100_1174466439Abc100A;
extern T0*ms613_59Abc613A;
extern T0*ms263_527202963Abc263A;
extern T0*ms780_349661420Abc780A;
extern T0*ms100_427937988Abc100A;
extern T0*ms100_1836299930Abc100A;
extern T0*ms588_775396Abc588A;
extern T0*ms780_1843146228Abc780A;
extern T0*ms611_398948Abc611A;
extern T0*ms606_47187Abc606A;
extern T0*ms550_3557Abc550A;
extern T0*ms29_1680926299Abc29A;
extern T0*ms612_234855416Abc612A;
extern T0*ms93_18150Abc619A;
extern T0*ms101_298Abc101A;
extern T0*ms589_657822788Abc589A;
extern T0*ms781_992457137Abc781A;
extern T0*ms29_1671553525Abc29A;
extern T0*ms101_373286592Abc101A;
extern T0*ms104_881278717Abc104A;
extern T0*ms104_257Abc104A;
extern T0*ms104_4692662Abc104A;
extern T0*ms104_257Abc104B;
extern T0*ms589_1489891655Abc589A;
extern T0*ms104_257Abc104C;
extern T0*ms30_75797981Abc30A;
extern T0*ms30_78263Abc93A;
extern T0*ms93_12184Abc93A;
extern T0*ms100_2114217978Abc100A;
extern T0*ms93_12184Abc93B;
extern T0*ms606_312808564Abc606A;
extern T0*ms464_83406Abc464A;
extern T0*ms462_522818189Abc462A;
extern T0*ms93_124992Abc93A;
extern T0*ms93_18150Abc585A;
extern T0*ms93_18150Abc585B;
extern T0*ms612_351281Abc612A;
extern T0*ms104_1743948446Abc104A;
extern T0*ms611_1215177661Abc611A;
extern T0*ms615_7006Abc615A;
extern T0*ms604_1639500234Abc604A;
extern T0*ms104_1618833880Abc104A;
extern T0*ms94_348041349Abc94A;
extern T0*ms606_3760Abc104A;
extern T0*ms29_36193081Abc29A;
extern T0*ms780_244523906Abc780A;
extern T0*ms333_83290Abc333A;
extern T0*ms93_18150Abc589A;
extern T0*ms93_18150Abc589B;
extern T0*ms93_18150Abc589C;
extern T0*ms93_18150Abc589D;
extern T0*ms613_1942608409Abc613A;
extern T0*ms93_18150Abc589E;
extern T0*ms93_18150Abc589F;
extern T0*ms29_2090604340Abc29A;
extern T0*ms104_1540494783Abc104A;
extern T0*ms612_1671077900Abc612B;
extern T0*ms612_1671077900Abc612A;
extern T0*ms93_2141291014Abc93A;
extern T0*ms611_1757386798Abc611A;
extern T0*ms464_18186Abc464A;
extern T0*ms94_1861857328Abc94A;
extern T0*ms778_130382376Abc778A;
extern T0*ms93_49203356Abc424A;
extern T0*ms104_277Abc104A;
extern T0*ms104_282Abc104A;
extern T0*ms104_277Abc104B;
extern T0*ms611_1119207694Abc611A;
extern T0*ms104_277Abc104C;
extern T0*ms93_2047202317Abc93B;
extern T0*ms104_277Abc104D;
extern T0*ms93_2047202317Abc93A;
extern T0*ms104_277Abc104E;
extern T0*ms104_277Abc104F;
extern T0*ms104_277Abc104G;
extern T0*ms104_1295Bbc104A;
extern T0*ms613_105695965Abc613A;
extern T0*ms612_104084395Abc612A;
extern T0*ms612_104084395Abc612B;
extern T0*ms552_13424808Abc552A;
extern T0*ms321_1262756502Abc321A;
extern T0*ms104_215791Abc611A;
extern T0*ms104_215791Abc606A;
extern T0*ms100_646243744Abc100A;
extern T0*ms606_644847010Abc606A;
extern T0*ms29_2187464Abc29A;
extern T0*ms101_0Abc966A;
extern T0*ms101_0Abc966B;
extern T0*ms101_0Abc966C;
extern T0*ms101_0Abc966D;
extern T0*ms101_0Abc966E;
extern T0*ms104_1746979137Abc104A;
extern T0*ms104_1492394528Abc104A;
extern T0*ms29_1549703Abc29A;
extern T0*ms100_298390Abc100A;
extern T0*ms618_294Abc618A;
extern T0*ms333_416500Abc333A;
extern T0*ms100_292482Abc88A;
extern T0*ms100_1265Abc271A;
extern T0*ms780_160930Abc780A;
extern T0*ms589_5720Abc589A;
extern T0*ms101_45436Abc101A;
extern T0*ms93_611Abc644A;
extern T0*ms104_437715Abc104A;
extern T0*ms323_560316788Abc323A;
extern T0*ms101_7809Abc101A;
extern T0*ms589_180709512Abc589A;
extern T0*ms30_10648581Abc30A;
extern T0*ms93_611Abc641A;
extern T0*ms29_421505Abc29A;
extern T0*ms270_15370Abc270A;
extern T0*ms589_1023028228Abc589A;
extern T0*ms29_18110Abc29A;
extern T0*ms676_559Abc676A;
extern T0*ms676_559Abc676B;
extern T0*ms104_1838958244Abc104A;
extern T0*ms100_262Abc100A;
extern T0*ms29_88049Abc29A;
extern T0*ms601_22854451Abc601A;
extern T0*ms523_927498134Abc523A;
extern T0*ms29_296Abc29A;
extern T0*ms101_1247935972Abc101A;
extern T0*ms552_168Abc104A;
extern T0*ms95_1385667261Abc95A;
extern T0*ms30_2073386Abc30A;
extern T0*ms611_905827712Abc611A;
extern T0*ms101_9121Abc101A;
extern T0*ms606_380065Abc606A;
extern T0*ms30_18090Abc351A;
extern T0*ms589_46337Abc589A;
extern T0*ms104_4980205Abc104A;
extern T0*ms780_2136427942Abc780A;
extern T0*ms780_54686284Abc780A;
extern T0*ms780_129037214Abc780A;
extern T0*ms88_439490016Abc88A;
extern T0*ms100_170061979Abc100A;
extern T0*ms104_113036818Abc104A;
extern T0*ms104_2382Abc104A;
extern T0*ms100_485115581Abc100A;
extern T0*ms30_82570Abc30A;
extern T0*ms104_273430530Abc104B;
extern T0*ms780_692075493Abc780A;
extern T0*ms104_273430530Abc104A;
extern T0*ms101_1561265653Abc101A;
extern T0*ms612_1900Abc612A;
extern T0*ms589_386819Abc589A;
extern T0*ms612_1900Abc612B;
extern T0*ms604_1367878466Abc604A;
extern T0*ms30_48390502Abc30A;
extern T0*ms613_813409Abc613A;
extern T0*ms31_2246326Abc31A;
extern T0*ms589_228498053Abc589A;
extern T0*ms604_230Abc604A;
extern T0*ms30_408086Abc30A;
extern T0*ms104_32080Abc104A;
extern T0*ms26_1042405932Abc26A;
extern T0*ms25_1767481079Abc25A;
extern T0*ms612_10089540Abc612A;
extern T0*ms606_1341914655Abc606A;
extern T0*ms589_80771Abc589A;
extern T0*ms104_249Abc781A;
extern T0*ms100_1865554673Abc100A;
extern T0*ms26_7779Abc26A;
extern T0*ms589_1426Abc589A;
extern T0*ms100_1378502623Abc100B;
extern T0*ms30_8054609Abc30A;
extern T0*ms100_1378502623Abc100A;
extern T0*ms615_1659544035Abc615A;
extern T0*ms26_118Abc26A;
extern T0*ms266_1136866084Abc266A;
extern T0*ms94_1708886163Abc94A;
extern T0*ms104_218061703Abc104A;
extern T0*ms611_30034Abc611A;
extern T0*ms101_1431838787Abc101A;
extern T0*ms104_401124480Abc104A;
extern T0*ms104_273430505Abc104A;
extern T0*ms780_1396798042Abc780A;
extern T0*ms29_1673345408Abc29A;
extern T0*ms100_1889118664Abc100A;
extern T0*ms29_1549697Abc29A;
extern T0*ms101_603Abc101A;
extern T0*ms615_705408837Abc615A;
extern T0*ms104_273430505Abc101A;
extern T0*ms30_51843716Abc30A;
extern T0*ms263_1737556726Abc263A;
extern T0*ms611_41125176Abc611A;
extern T0*ms604_205Abc604A;
extern T0*ms94_1604340919Abc94A;
extern T0*ms31_594Abc101A;
extern T0*ms95_1656731300Abc95A;
extern T0*ms611_1637595774Abc611A;
extern T0*ms606_279959115Abc606A;
extern T0*ms101_448859Abc101A;
extern T0*ms110_300594Abc675A;
extern T0*ms780_25822456Abc780B;
extern T0*ms104_437780Abc104A;
extern T0*ms601_4570857Abc601A;
extern T0*ms601_4570907Abc601A;
extern T0*ms780_25822456Abc780A;
extern T0*ms29_14150Abc390A;
extern T0*ms611_118716790Abc611A;
extern T0*ms29_240810604Abc723A;
extern T0*ms104_1858528797Abc104A;
extern T0*ms613_3181Abc613A;
extern T0*ms100_689013605Abc100A;
extern T0*ms104_441192857Abc104A;
extern T0*ms26_142550Abc26A;
extern T0*ms469_1088102843Abc469A;
extern T0*ms93_1631593164Abc93A;
extern T0*ms104_941548611Abc104C;
extern T0*ms104_941548611Abc104B;
extern T0*ms104_941548611Abc104A;
extern T0*ms29_1597390874Abc29A;
extern T0*ms101_301Abc101A;
extern T0*ms104_365905049Abc104A;
extern T0*ms611_1403828457Abc611A;
extern T0*ms780_484169497Abc780A;
extern T0*ms101_1626Abc101B;
extern T0*ms101_1626Abc101A;
extern T0*ms104_802495724Abc104A;
extern T0*ms606_119389596Abc606A;
extern T0*ms104_93Abc104A;
extern T0*ms462_10559665Abc966B;
extern T0*ms462_10559665Abc966A;
extern T0*ms758_324Abc758A;
extern T0*ms778_1126647264Abc778A;
extern T0*ms94_1242149539Abc94A;
extern T0*ms601_4570932Abc601A;
extern T0*ms100_388205767Abc100A;
extern T0*ms100_1265Abc100A;
extern T0*ms263_139303084Abc263A;
extern T0*ms108_270Abc108A;
extern T0*ms108_270Abc108B;
extern T0*ms111_557Abc111A;
extern T0*ms108_270Abc108C;
extern T0*ms612_114321512Abc612A;
extern T0*ms263_957054969Abc263A;
extern T0*ms612_296Abc613A;
extern T0*ms780_884381655Abc780A;
extern T0*ms612_296Abc612A;
extern T0*ms104_1240218271Abc104A;
extern T0*ms104_1661632742Abc104A;
extern T0*ms780_1772045883Abc780A;
extern T0*ms611_185146Abc611A;
extern T0*ms30_9790205Abc30A;
extern T0*ms101_466551816Abc101A;
extern T0*ms618_471Abc618A;
extern T0*ms29_698215697Abc29A;
extern T0*ms780_33836Abc780A;
extern T0*ms29_1157Abc29A;
extern T0*ms30_640Abc371A;
extern T0*ms104_726728775Abc104A;
extern T0*ms612_25969530Abc612A;
extern T0*ms29_424424Abc29A;
extern T0*ms613_32400Abc613A;
extern T0*ms601_5395074Abc601A;
extern T0*ms30_640Abc424A;
extern T0*ms29_180965430Abc29A;
extern T0*ms30_56927287Abc30A;
extern T0*ms29_51915068Abc29A;
extern T0*ms618_471Abc612A;
extern T0*ms94_332623945Abc94A;
extern T0*ms104_6559Abc104A;
extern T0*ms104_6559Abc104B;
extern T0*ms93_1011636926Abc93A;
extern T0*ms94_1538234998Abc94A;
extern T0*ms29_1339128Abc29A;
extern T0*ms30_90408Abc459A;
extern T0*ms93_52979396Abc93A;
extern T0*ms101_6687Abc101B;
extern T0*ms101_6687Abc101A;
extern T0*ms403_835850355Abc403A;
extern T0*ms104_2060090728Abc104A;
extern T0*ms101_341Abc101A;
extern T0*ms263_139303084Abc30A;
extern T0*ms611_419443Abc611A;
extern T0*ms25_85614Abc25A;
extern T0*ms104_245Abc104A;
extern T0*ms30_627Abc30A;
extern T0*ms94_175744241Abc94A;
extern T0*ms104_277Cbc104A;
extern T0*ms30_407540Abc30A;
extern T0*ms101_146157Abc101A;
extern T0*ms29_55040401Abc29A;
extern T0*ms612_427390771Abc612A;
extern T0*ms29_840111968Abc29A;
extern T0*ms612_10430693Abc612A;
T0*se_ms(int c,char*e);
T0*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void se_msi10(void);
void se_msi11(void);
void se_msi12(void);
void se_msi13(void);
void se_msi14(void);
void se_msi15(void);
void se_msi16(void);
void se_msi17(void);
void se_msi18(void);
void se_msi19(void);
void se_msi20(void);
void se_msi21(void);
void se_msi22(void);
void se_msi23(void);
void se_msi24(void);
void se_msi25(void);
void se_msi26(void);
void se_msi27(void);
void se_msi28(void);
void se_msi29(void);
void se_msi30(void);
void se_msi31(void);
void se_msi32(void);
void se_msi33(void);
void se_msi34(void);
void se_msi35(void);
void se_msi36(void);
void se_msi37(void);
void se_msi38(void);
void se_msi39(void);
void se_msi40(void);
void se_msi41(void);
void se_msi42(void);
void se_msi43(void);
void se_msi44(void);
void se_msi45(void);
void se_msi46(void);
void se_msi47(void);
void se_msi48(void);
void se_msi49(void);
void se_msi50(void);
void se_msi51(void);
void se_msi52(void);
void se_msi53(void);
void se_msi54(void);
void se_msi55(void);
void se_msi56(void);
void se_msi57(void);
void se_msi58(void);
void se_msi59(void);
void se_msi60(void);
void se_msi61(void);
void se_msi62(void);
void manifest_string_mark1(void);
void manifest_string_mark2(void);
void manifest_string_mark3(void);
void manifest_string_mark4(void);
void manifest_string_mark5(void);
void manifest_string_mark6(void);
void manifest_string_mark7(void);
void manifest_string_mark8(void);
void manifest_string_mark9(void);
void manifest_string_mark10(void);
void manifest_string_mark11(void);
void once_function_mark(void);
void gc_start(void);
typedef struct B25 gc25;
struct B25{T25 object;union {void*flag;gc25*next;} header;};
extern gc25*store25;
extern int store_left25;
extern fsoc*store_chunk25;
extern gc25*gc_free25;
typedef struct B101 gc101;
struct B101{T101 object;union {void*flag;gc101*next;} header;};
extern gc101*store101;
extern int store_left101;
extern fsoc*store_chunk101;
extern gc101*gc_free101;
typedef struct B965 gc965;
struct B965{T965 object;union {void*flag;gc965*next;} header;};
extern gc965*store965;
extern int store_left965;
extern fsoc*store_chunk965;
extern gc965*gc_free965;
typedef struct B93 gc93;
struct B93{T93 object;union {void*flag;gc93*next;} header;};
extern gc93*store93;
extern int store_left93;
extern fsoc*store_chunk93;
extern gc93*gc_free93;
typedef struct B113 gc113;
struct B113{T113 object;union {void*flag;gc113*next;} header;};
extern gc113*store113;
extern int store_left113;
extern fsoc*store_chunk113;
extern gc113*gc_free113;
typedef struct B263 gc263;
struct B263{T263 object;union {void*flag;gc263*next;} header;};
extern gc263*store263;
extern int store_left263;
extern fsoc*store_chunk263;
extern gc263*gc_free263;
typedef struct B104 gc104;
struct B104{T104 object;union {void*flag;gc104*next;} header;};
extern gc104*store104;
extern int store_left104;
extern fsoc*store_chunk104;
extern gc104*gc_free104;
typedef struct B100 gc100;
struct B100{T100 object;union {void*flag;gc100*next;} header;};
extern gc100*store100;
extern int store_left100;
extern fsoc*store_chunk100;
extern gc100*gc_free100;
typedef struct B271 gc271;
struct B271{T271 object;union {void*flag;gc271*next;} header;};
extern gc271*store271;
extern int store_left271;
extern fsoc*store_chunk271;
extern gc271*gc_free271;
typedef struct B261 gc261;
struct B261{T261 object;union {void*flag;gc261*next;} header;};
extern gc261*store261;
extern int store_left261;
extern fsoc*store_chunk261;
extern gc261*gc_free261;
typedef struct B7 gc7;
struct B7{T7 object;union {void*flag;gc7*next;} header;};
extern gc7*store7;
extern int store_left7;
extern fsoc*store_chunk7;
extern gc7*gc_free7;
extern na_env na_env9;
typedef struct B611 gc611;
struct B611{T611 object;union {void*flag;gc611*next;} header;};
extern gc611*store611;
extern int store_left611;
extern fsoc*store_chunk611;
extern gc611*gc_free611;
typedef struct B995 gc995;
struct B995{T995 object;union {void*flag;gc995*next;} header;};
extern gc995*store995;
extern int store_left995;
extern fsoc*store_chunk995;
extern gc995*gc_free995;
typedef struct B77 gc77;
struct B77{T77 object;union {void*flag;gc77*next;} header;};
extern gc77*store77;
extern int store_left77;
extern fsoc*store_chunk77;
extern gc77*gc_free77;
typedef struct B996 gc996;
struct B996{T996 object;union {void*flag;gc996*next;} header;};
extern gc996*store996;
extern int store_left996;
extern fsoc*store_chunk996;
extern gc996*gc_free996;
typedef struct B273 gc273;
struct B273{T273 object;union {void*flag;gc273*next;} header;};
extern gc273*store273;
extern int store_left273;
extern fsoc*store_chunk273;
extern gc273*gc_free273;
typedef struct B71 gc71;
struct B71{T71 object;union {void*flag;gc71*next;} header;};
extern gc71*store71;
extern int store_left71;
extern fsoc*store_chunk71;
extern gc71*gc_free71;
typedef struct B997 gc997;
struct B997{T997 object;union {void*flag;gc997*next;} header;};
extern gc997*store997;
extern int store_left997;
extern fsoc*store_chunk997;
extern gc997*gc_free997;
typedef struct B529 gc529;
struct B529{T529 object;union {void*flag;gc529*next;} header;};
extern gc529*store529;
extern int store_left529;
extern fsoc*store_chunk529;
extern gc529*gc_free529;
typedef struct B533 gc533;
struct B533{T533 object;union {void*flag;gc533*next;} header;};
extern gc533*store533;
extern int store_left533;
extern fsoc*store_chunk533;
extern gc533*gc_free533;
typedef struct B534 gc534;
struct B534{T534 object;union {void*flag;gc534*next;} header;};
extern gc534*store534;
extern int store_left534;
extern fsoc*store_chunk534;
extern gc534*gc_free534;
typedef struct B535 gc535;
struct B535{T535 object;union {void*flag;gc535*next;} header;};
extern gc535*store535;
extern int store_left535;
extern fsoc*store_chunk535;
extern gc535*gc_free535;
typedef struct B536 gc536;
struct B536{T536 object;union {void*flag;gc536*next;} header;};
extern gc536*store536;
extern int store_left536;
extern fsoc*store_chunk536;
extern gc536*gc_free536;
typedef struct B537 gc537;
struct B537{T537 object;union {void*flag;gc537*next;} header;};
extern gc537*store537;
extern int store_left537;
extern fsoc*store_chunk537;
extern gc537*gc_free537;
typedef struct B998 gc998;
struct B998{T998 object;union {void*flag;gc998*next;} header;};
extern gc998*store998;
extern int store_left998;
extern fsoc*store_chunk998;
extern gc998*gc_free998;
typedef struct B999 gc999;
struct B999{T999 object;union {void*flag;gc999*next;} header;};
extern gc999*store999;
extern int store_left999;
extern fsoc*store_chunk999;
extern gc999*gc_free999;
typedef struct B91 gc91;
struct B91{T91 object;union {void*flag;gc91*next;} header;};
extern gc91*store91;
extern int store_left91;
extern fsoc*store_chunk91;
extern gc91*gc_free91;
typedef struct B528 gc528;
struct B528{T528 object;union {void*flag;gc528*next;} header;};
extern gc528*store528;
extern int store_left528;
extern fsoc*store_chunk528;
extern gc528*gc_free528;
typedef struct B446 gc446;
struct B446{T446 object;union {void*flag;gc446*next;} header;};
extern gc446*store446;
extern int store_left446;
extern fsoc*store_chunk446;
extern gc446*gc_free446;
typedef struct B445 gc445;
struct B445{T445 object;union {void*flag;gc445*next;} header;};
extern gc445*store445;
extern int store_left445;
extern fsoc*store_chunk445;
extern gc445*gc_free445;
typedef struct B73 gc73;
struct B73{T73 object;union {void*flag;gc73*next;} header;};
extern gc73*store73;
extern int store_left73;
extern fsoc*store_chunk73;
extern gc73*gc_free73;
typedef struct B62 gc62;
struct B62{T62 object;union {void*flag;gc62*next;} header;};
extern gc62*store62;
extern int store_left62;
extern fsoc*store_chunk62;
extern gc62*gc_free62;
typedef struct B1000 gc1000;
struct B1000{T1000 object;union {void*flag;gc1000*next;} header;};
extern gc1000*store1000;
extern int store_left1000;
extern fsoc*store_chunk1000;
extern gc1000*gc_free1000;
typedef struct B96 gc96;
struct B96{T96 object;union {void*flag;gc96*next;} header;};
extern gc96*store96;
extern int store_left96;
extern fsoc*store_chunk96;
extern gc96*gc_free96;
typedef struct B110 gc110;
struct B110{T110 object;union {void*flag;gc110*next;} header;};
extern gc110*store110;
extern int store_left110;
extern fsoc*store_chunk110;
extern gc110*gc_free110;
typedef struct B672 gc672;
struct B672{T672 object;union {void*flag;gc672*next;} header;};
extern gc672*store672;
extern int store_left672;
extern fsoc*store_chunk672;
extern gc672*gc_free672;
typedef struct B676 gc676;
struct B676{T676 object;union {void*flag;gc676*next;} header;};
extern gc676*store676;
extern int store_left676;
extern fsoc*store_chunk676;
extern gc676*gc_free676;
typedef struct B674 gc674;
struct B674{T674 object;union {void*flag;gc674*next;} header;};
extern gc674*store674;
extern int store_left674;
extern fsoc*store_chunk674;
extern gc674*gc_free674;
typedef struct B538 gc538;
struct B538{T538 object;union {void*flag;gc538*next;} header;};
extern gc538*store538;
extern int store_left538;
extern fsoc*store_chunk538;
extern gc538*gc_free538;
typedef struct B668 gc668;
struct B668{T668 object;union {void*flag;gc668*next;} header;};
extern gc668*store668;
extern int store_left668;
extern fsoc*store_chunk668;
extern gc668*gc_free668;
typedef struct B414 gc414;
struct B414{T414 object;union {void*flag;gc414*next;} header;};
extern gc414*store414;
extern int store_left414;
extern fsoc*store_chunk414;
extern gc414*gc_free414;
typedef struct B1001 gc1001;
struct B1001{T1001 object;union {void*flag;gc1001*next;} header;};
extern gc1001*store1001;
extern int store_left1001;
extern fsoc*store_chunk1001;
extern gc1001*gc_free1001;
typedef struct B309 gc309;
struct B309{T309 object;union {void*flag;gc309*next;} header;};
extern gc309*store309;
extern int store_left309;
extern fsoc*store_chunk309;
extern gc309*gc_free309;
typedef struct B1002 gc1002;
struct B1002{T1002 object;union {void*flag;gc1002*next;} header;};
extern gc1002*store1002;
extern int store_left1002;
extern fsoc*store_chunk1002;
extern gc1002*gc_free1002;
typedef struct B423 gc423;
struct B423{T423 object;union {void*flag;gc423*next;} header;};
extern gc423*store423;
extern int store_left423;
extern fsoc*store_chunk423;
extern gc423*gc_free423;
typedef struct B556 gc556;
struct B556{T556 object;union {void*flag;gc556*next;} header;};
extern gc556*store556;
extern int store_left556;
extern fsoc*store_chunk556;
extern gc556*gc_free556;
typedef struct B586 gc586;
struct B586{T586 object;union {void*flag;gc586*next;} header;};
extern gc586*store586;
extern int store_left586;
extern fsoc*store_chunk586;
extern gc586*gc_free586;
typedef struct B587 gc587;
struct B587{T587 object;union {void*flag;gc587*next;} header;};
extern gc587*store587;
extern int store_left587;
extern fsoc*store_chunk587;
extern gc587*gc_free587;
typedef struct B588 gc588;
struct B588{T588 object;union {void*flag;gc588*next;} header;};
extern gc588*store588;
extern int store_left588;
extern fsoc*store_chunk588;
extern gc588*gc_free588;
typedef struct B589 gc589;
struct B589{T589 object;union {void*flag;gc589*next;} header;};
extern gc589*store589;
extern int store_left589;
extern fsoc*store_chunk589;
extern gc589*gc_free589;
typedef struct B601 gc601;
struct B601{T601 object;union {void*flag;gc601*next;} header;};
extern gc601*store601;
extern int store_left601;
extern fsoc*store_chunk601;
extern gc601*gc_free601;
typedef struct B602 gc602;
struct B602{T602 object;union {void*flag;gc602*next;} header;};
extern gc602*store602;
extern int store_left602;
extern fsoc*store_chunk602;
extern gc602*gc_free602;
typedef struct B603 gc603;
struct B603{T603 object;union {void*flag;gc603*next;} header;};
extern gc603*store603;
extern int store_left603;
extern fsoc*store_chunk603;
extern gc603*gc_free603;
typedef struct B605 gc605;
struct B605{T605 object;union {void*flag;gc605*next;} header;};
extern gc605*store605;
extern int store_left605;
extern fsoc*store_chunk605;
extern gc605*gc_free605;
typedef struct B606 gc606;
struct B606{T606 object;union {void*flag;gc606*next;} header;};
extern gc606*store606;
extern int store_left606;
extern fsoc*store_chunk606;
extern gc606*gc_free606;
typedef struct B610 gc610;
struct B610{T610 object;union {void*flag;gc610*next;} header;};
extern gc610*store610;
extern int store_left610;
extern fsoc*store_chunk610;
extern gc610*gc_free610;
typedef struct B612 gc612;
struct B612{T612 object;union {void*flag;gc612*next;} header;};
extern gc612*store612;
extern int store_left612;
extern fsoc*store_chunk612;
extern gc612*gc_free612;
typedef struct B613 gc613;
struct B613{T613 object;union {void*flag;gc613*next;} header;};
extern gc613*store613;
extern int store_left613;
extern fsoc*store_chunk613;
extern gc613*gc_free613;
typedef struct B614 gc614;
struct B614{T614 object;union {void*flag;gc614*next;} header;};
extern gc614*store614;
extern int store_left614;
extern fsoc*store_chunk614;
extern gc614*gc_free614;
typedef struct B615 gc615;
struct B615{T615 object;union {void*flag;gc615*next;} header;};
extern gc615*store615;
extern int store_left615;
extern fsoc*store_chunk615;
extern gc615*gc_free615;
typedef struct B616 gc616;
struct B616{T616 object;union {void*flag;gc616*next;} header;};
extern gc616*store616;
extern int store_left616;
extern fsoc*store_chunk616;
extern gc616*gc_free616;
typedef struct B617 gc617;
struct B617{T617 object;union {void*flag;gc617*next;} header;};
extern gc617*store617;
extern int store_left617;
extern fsoc*store_chunk617;
extern gc617*gc_free617;
typedef struct B619 gc619;
struct B619{T619 object;union {void*flag;gc619*next;} header;};
extern gc619*store619;
extern int store_left619;
extern fsoc*store_chunk619;
extern gc619*gc_free619;
typedef struct B618 gc618;
struct B618{T618 object;union {void*flag;gc618*next;} header;};
extern gc618*store618;
extern int store_left618;
extern fsoc*store_chunk618;
extern gc618*gc_free618;
typedef struct B620 gc620;
struct B620{T620 object;union {void*flag;gc620*next;} header;};
extern gc620*store620;
extern int store_left620;
extern fsoc*store_chunk620;
extern gc620*gc_free620;
typedef struct B621 gc621;
struct B621{T621 object;union {void*flag;gc621*next;} header;};
extern gc621*store621;
extern int store_left621;
extern fsoc*store_chunk621;
extern gc621*gc_free621;
typedef struct B622 gc622;
struct B622{T622 object;union {void*flag;gc622*next;} header;};
extern gc622*store622;
extern int store_left622;
extern fsoc*store_chunk622;
extern gc622*gc_free622;
typedef struct B1003 gc1003;
struct B1003{T1003 object;union {void*flag;gc1003*next;} header;};
extern gc1003*store1003;
extern int store_left1003;
extern fsoc*store_chunk1003;
extern gc1003*gc_free1003;
typedef struct B623 gc623;
struct B623{T623 object;union {void*flag;gc623*next;} header;};
extern gc623*store623;
extern int store_left623;
extern fsoc*store_chunk623;
extern gc623*gc_free623;
typedef struct B1004 gc1004;
struct B1004{T1004 object;union {void*flag;gc1004*next;} header;};
extern gc1004*store1004;
extern int store_left1004;
extern fsoc*store_chunk1004;
extern gc1004*gc_free1004;
typedef struct B1005 gc1005;
struct B1005{T1005 object;union {void*flag;gc1005*next;} header;};
extern gc1005*store1005;
extern int store_left1005;
extern fsoc*store_chunk1005;
extern gc1005*gc_free1005;
typedef struct B362 gc362;
struct B362{T362 object;union {void*flag;gc362*next;} header;};
extern gc362*store362;
extern int store_left362;
extern fsoc*store_chunk362;
extern gc362*gc_free362;
typedef struct B86 gc86;
struct B86{T86 object;union {void*flag;gc86*next;} header;};
extern gc86*store86;
extern int store_left86;
extern fsoc*store_chunk86;
extern gc86*gc_free86;
typedef struct B88 gc88;
struct B88{T88 object;union {void*flag;gc88*next;} header;};
extern gc88*store88;
extern int store_left88;
extern fsoc*store_chunk88;
extern gc88*gc_free88;
typedef struct B1006 gc1006;
struct B1006{T1006 object;union {void*flag;gc1006*next;} header;};
extern gc1006*store1006;
extern int store_left1006;
extern fsoc*store_chunk1006;
extern gc1006*gc_free1006;
typedef struct B1007 gc1007;
struct B1007{T1007 object;union {void*flag;gc1007*next;} header;};
extern gc1007*store1007;
extern int store_left1007;
extern fsoc*store_chunk1007;
extern gc1007*gc_free1007;
typedef struct B1008 gc1008;
struct B1008{T1008 object;union {void*flag;gc1008*next;} header;};
extern gc1008*store1008;
extern int store_left1008;
extern fsoc*store_chunk1008;
extern gc1008*gc_free1008;
typedef struct B266 gc266;
struct B266{T266 object;union {void*flag;gc266*next;} header;};
extern gc266*store266;
extern int store_left266;
extern fsoc*store_chunk266;
extern gc266*gc_free266;
typedef struct B80 gc80;
struct B80{T80 object;union {void*flag;gc80*next;} header;};
extern gc80*store80;
extern int store_left80;
extern fsoc*store_chunk80;
extern gc80*gc_free80;
typedef struct B525 gc525;
struct B525{T525 object;union {void*flag;gc525*next;} header;};
extern gc525*store525;
extern int store_left525;
extern fsoc*store_chunk525;
extern gc525*gc_free525;
typedef struct B1010 gc1010;
struct B1010{T1010 object;union {void*flag;gc1010*next;} header;};
extern gc1010*store1010;
extern int store_left1010;
extern fsoc*store_chunk1010;
extern gc1010*gc_free1010;
typedef struct B322 gc322;
struct B322{T322 object;union {void*flag;gc322*next;} header;};
extern gc322*store322;
extern int store_left322;
extern fsoc*store_chunk322;
extern gc322*gc_free322;
typedef struct B99 gc99;
struct B99{T99 object;union {void*flag;gc99*next;} header;};
extern gc99*store99;
extern int store_left99;
extern fsoc*store_chunk99;
extern gc99*gc_free99;
typedef struct B97 gc97;
struct B97{T97 object;union {void*flag;gc97*next;} header;};
extern gc97*store97;
extern int store_left97;
extern fsoc*store_chunk97;
extern gc97*gc_free97;
typedef struct B103 gc103;
struct B103{T103 object;union {void*flag;gc103*next;} header;};
extern gc103*store103;
extern int store_left103;
extern fsoc*store_chunk103;
extern gc103*gc_free103;
typedef struct B112 gc112;
struct B112{T112 object;union {void*flag;gc112*next;} header;};
extern gc112*store112;
extern int store_left112;
extern fsoc*store_chunk112;
extern gc112*gc_free112;
typedef struct B111 gc111;
struct B111{T111 object;union {void*flag;gc111*next;} header;};
extern gc111*store111;
extern int store_left111;
extern fsoc*store_chunk111;
extern gc111*gc_free111;
typedef struct B114 gc114;
struct B114{T114 object;union {void*flag;gc114*next;} header;};
extern gc114*store114;
extern int store_left114;
extern fsoc*store_chunk114;
extern gc114*gc_free114;
typedef struct B82 gc82;
struct B82{T82 object;union {void*flag;gc82*next;} header;};
extern gc82*store82;
extern int store_left82;
extern fsoc*store_chunk82;
extern gc82*gc_free82;
typedef struct B432 gc432;
struct B432{T432 object;union {void*flag;gc432*next;} header;};
extern gc432*store432;
extern int store_left432;
extern fsoc*store_chunk432;
extern gc432*gc_free432;
typedef struct B1012 gc1012;
struct B1012{T1012 object;union {void*flag;gc1012*next;} header;};
extern gc1012*store1012;
extern int store_left1012;
extern fsoc*store_chunk1012;
extern gc1012*gc_free1012;
typedef struct B1013 gc1013;
struct B1013{T1013 object;union {void*flag;gc1013*next;} header;};
extern gc1013*store1013;
extern int store_left1013;
extern fsoc*store_chunk1013;
extern gc1013*gc_free1013;
typedef struct B107 gc107;
struct B107{T107 object;union {void*flag;gc107*next;} header;};
extern gc107*store107;
extern int store_left107;
extern fsoc*store_chunk107;
extern gc107*gc_free107;
typedef struct B427 gc427;
struct B427{T427 object;union {void*flag;gc427*next;} header;};
extern gc427*store427;
extern int store_left427;
extern fsoc*store_chunk427;
extern gc427*gc_free427;
typedef struct B1016 gc1016;
struct B1016{T1016 object;union {void*flag;gc1016*next;} header;};
extern gc1016*store1016;
extern int store_left1016;
extern fsoc*store_chunk1016;
extern gc1016*gc_free1016;
typedef struct B1017 gc1017;
struct B1017{T1017 object;union {void*flag;gc1017*next;} header;};
extern gc1017*store1017;
extern int store_left1017;
extern fsoc*store_chunk1017;
extern gc1017*gc_free1017;
typedef struct B1018 gc1018;
struct B1018{T1018 object;union {void*flag;gc1018*next;} header;};
extern gc1018*store1018;
extern int store_left1018;
extern fsoc*store_chunk1018;
extern gc1018*gc_free1018;
typedef struct B778 gc778;
struct B778{T778 object;union {void*flag;gc778*next;} header;};
extern gc778*store778;
extern int store_left778;
extern fsoc*store_chunk778;
extern gc778*gc_free778;
typedef struct B780 gc780;
struct B780{T780 object;union {void*flag;gc780*next;} header;};
extern gc780*store780;
extern int store_left780;
extern fsoc*store_chunk780;
extern gc780*gc_free780;
typedef struct B781 gc781;
struct B781{T781 object;union {void*flag;gc781*next;} header;};
extern gc781*store781;
extern int store_left781;
extern fsoc*store_chunk781;
extern gc781*gc_free781;
typedef struct B782 gc782;
struct B782{T782 object;union {void*flag;gc782*next;} header;};
extern gc782*store782;
extern int store_left782;
extern fsoc*store_chunk782;
extern gc782*gc_free782;
typedef struct B783 gc783;
struct B783{T783 object;union {void*flag;gc783*next;} header;};
extern gc783*store783;
extern int store_left783;
extern fsoc*store_chunk783;
extern gc783*gc_free783;
extern na_env na_env1020;
typedef struct B321 gc321;
struct B321{T321 object;union {void*flag;gc321*next;} header;};
extern gc321*store321;
extern int store_left321;
extern fsoc*store_chunk321;
extern gc321*gc_free321;
typedef struct B1022 gc1022;
struct B1022{T1022 object;union {void*flag;gc1022*next;} header;};
extern gc1022*store1022;
extern int store_left1022;
extern fsoc*store_chunk1022;
extern gc1022*gc_free1022;
typedef struct B1023 gc1023;
struct B1023{T1023 object;union {void*flag;gc1023*next;} header;};
extern gc1023*store1023;
extern int store_left1023;
extern fsoc*store_chunk1023;
extern gc1023*gc_free1023;
typedef struct B766 gc766;
struct B766{T766 object;union {void*flag;gc766*next;} header;};
extern gc766*store766;
extern int store_left766;
extern fsoc*store_chunk766;
extern gc766*gc_free766;
typedef struct B767 gc767;
struct B767{T767 object;union {void*flag;gc767*next;} header;};
extern gc767*store767;
extern int store_left767;
extern fsoc*store_chunk767;
extern gc767*gc_free767;
typedef struct B1027 gc1027;
struct B1027{T1027 object;union {void*flag;gc1027*next;} header;};
extern gc1027*store1027;
extern int store_left1027;
extern fsoc*store_chunk1027;
extern gc1027*gc_free1027;
typedef struct B1028 gc1028;
struct B1028{T1028 object;union {void*flag;gc1028*next;} header;};
extern gc1028*store1028;
extern int store_left1028;
extern fsoc*store_chunk1028;
extern gc1028*gc_free1028;
typedef struct B52 gc52;
struct B52{T52 object;union {void*flag;gc52*next;} header;};
extern gc52*store52;
extern int store_left52;
extern fsoc*store_chunk52;
extern gc52*gc_free52;
typedef struct B1029 gc1029;
struct B1029{T1029 object;union {void*flag;gc1029*next;} header;};
extern gc1029*store1029;
extern int store_left1029;
extern fsoc*store_chunk1029;
extern gc1029*gc_free1029;
typedef struct B1030 gc1030;
struct B1030{T1030 object;union {void*flag;gc1030*next;} header;};
extern gc1030*store1030;
extern int store_left1030;
extern fsoc*store_chunk1030;
extern gc1030*gc_free1030;
typedef struct B283 gc283;
struct B283{T283 object;union {void*flag;gc283*next;} header;};
extern gc283*store283;
extern int store_left283;
extern fsoc*store_chunk283;
extern gc283*gc_free283;
typedef struct B1031 gc1031;
struct B1031{T1031 object;union {void*flag;gc1031*next;} header;};
extern gc1031*store1031;
extern int store_left1031;
extern fsoc*store_chunk1031;
extern gc1031*gc_free1031;
typedef struct B1034 gc1034;
struct B1034{T1034 object;union {void*flag;gc1034*next;} header;};
extern gc1034*store1034;
extern int store_left1034;
extern fsoc*store_chunk1034;
extern gc1034*gc_free1034;
extern na_env na_env1035;
typedef struct B1036 gc1036;
struct B1036{T1036 object;union {void*flag;gc1036*next;} header;};
extern gc1036*store1036;
extern int store_left1036;
extern fsoc*store_chunk1036;
extern gc1036*gc_free1036;
typedef struct B1037 gc1037;
struct B1037{T1037 object;union {void*flag;gc1037*next;} header;};
extern gc1037*store1037;
extern int store_left1037;
extern fsoc*store_chunk1037;
extern gc1037*gc_free1037;
typedef struct B1038 gc1038;
struct B1038{T1038 object;union {void*flag;gc1038*next;} header;};
extern gc1038*store1038;
extern int store_left1038;
extern fsoc*store_chunk1038;
extern gc1038*gc_free1038;
typedef struct B1039 gc1039;
struct B1039{T1039 object;union {void*flag;gc1039*next;} header;};
extern gc1039*store1039;
extern int store_left1039;
extern fsoc*store_chunk1039;
extern gc1039*gc_free1039;
typedef struct B270 gc270;
struct B270{T270 object;union {void*flag;gc270*next;} header;};
extern gc270*store270;
extern int store_left270;
extern fsoc*store_chunk270;
extern gc270*gc_free270;
extern na_env na_env1040;
typedef struct B1043 gc1043;
struct B1043{T1043 object;union {void*flag;gc1043*next;} header;};
extern gc1043*store1043;
extern int store_left1043;
extern fsoc*store_chunk1043;
extern gc1043*gc_free1043;
typedef struct B95 gc95;
struct B95{T95 object;union {void*flag;gc95*next;} header;};
extern gc95*store95;
extern int store_left95;
extern fsoc*store_chunk95;
extern gc95*gc_free95;
extern na_env na_env1044;
extern na_env na_env1045;
typedef struct B1046 gc1046;
struct B1046{T1046 object;union {void*flag;gc1046*next;} header;};
extern gc1046*store1046;
extern int store_left1046;
extern fsoc*store_chunk1046;
extern gc1046*gc_free1046;
typedef struct B738 gc738;
struct B738{T738 object;union {void*flag;gc738*next;} header;};
extern gc738*store738;
extern int store_left738;
extern fsoc*store_chunk738;
extern gc738*gc_free738;
typedef struct B785 gc785;
struct B785{T785 object;union {void*flag;gc785*next;} header;};
extern gc785*store785;
extern int store_left785;
extern fsoc*store_chunk785;
extern gc785*gc_free785;
typedef struct B1048 gc1048;
struct B1048{T1048 object;union {void*flag;gc1048*next;} header;};
extern gc1048*store1048;
extern int store_left1048;
extern fsoc*store_chunk1048;
extern gc1048*gc_free1048;
extern na_env na_env1049;
typedef struct B1050 gc1050;
struct B1050{T1050 object;union {void*flag;gc1050*next;} header;};
extern gc1050*store1050;
extern int store_left1050;
extern fsoc*store_chunk1050;
extern gc1050*gc_free1050;
typedef struct B1052 gc1052;
struct B1052{T1052 object;union {void*flag;gc1052*next;} header;};
extern gc1052*store1052;
extern int store_left1052;
extern fsoc*store_chunk1052;
extern gc1052*gc_free1052;
typedef struct B1054 gc1054;
struct B1054{T1054 object;union {void*flag;gc1054*next;} header;};
extern gc1054*store1054;
extern int store_left1054;
extern fsoc*store_chunk1054;
extern gc1054*gc_free1054;
typedef struct B740 gc740;
struct B740{T740 object;union {void*flag;gc740*next;} header;};
extern gc740*store740;
extern int store_left740;
extern fsoc*store_chunk740;
extern gc740*gc_free740;
typedef struct B1057 gc1057;
struct B1057{T1057 object;union {void*flag;gc1057*next;} header;};
extern gc1057*store1057;
extern int store_left1057;
extern fsoc*store_chunk1057;
extern gc1057*gc_free1057;
typedef struct B443 gc443;
struct B443{T443 object;union {void*flag;gc443*next;} header;};
extern gc443*store443;
extern int store_left443;
extern fsoc*store_chunk443;
extern gc443*gc_free443;
typedef struct B420 gc420;
struct B420{T420 object;union {void*flag;gc420*next;} header;};
extern gc420*store420;
extern int store_left420;
extern fsoc*store_chunk420;
extern gc420*gc_free420;
typedef struct B374 gc374;
struct B374{T374 object;union {void*flag;gc374*next;} header;};
extern gc374*store374;
extern int store_left374;
extern fsoc*store_chunk374;
extern gc374*gc_free374;
typedef struct B426 gc426;
struct B426{T426 object;union {void*flag;gc426*next;} header;};
extern gc426*store426;
extern int store_left426;
extern fsoc*store_chunk426;
extern gc426*gc_free426;
typedef struct B435 gc435;
struct B435{T435 object;union {void*flag;gc435*next;} header;};
extern gc435*store435;
extern int store_left435;
extern fsoc*store_chunk435;
extern gc435*gc_free435;
typedef struct B478 gc478;
struct B478{T478 object;union {void*flag;gc478*next;} header;};
extern gc478*store478;
extern int store_left478;
extern fsoc*store_chunk478;
extern gc478*gc_free478;
typedef struct B488 gc488;
struct B488{T488 object;union {void*flag;gc488*next;} header;};
extern gc488*store488;
extern int store_left488;
extern fsoc*store_chunk488;
extern gc488*gc_free488;
typedef struct B490 gc490;
struct B490{T490 object;union {void*flag;gc490*next;} header;};
extern gc490*store490;
extern int store_left490;
extern fsoc*store_chunk490;
extern gc490*gc_free490;
typedef struct B348 gc348;
struct B348{T348 object;union {void*flag;gc348*next;} header;};
extern gc348*store348;
extern int store_left348;
extern fsoc*store_chunk348;
extern gc348*gc_free348;
typedef struct B108 gc108;
struct B108{T108 object;union {void*flag;gc108*next;} header;};
extern gc108*store108;
extern int store_left108;
extern fsoc*store_chunk108;
extern gc108*gc_free108;
typedef struct B491 gc491;
struct B491{T491 object;union {void*flag;gc491*next;} header;};
extern gc491*store491;
extern int store_left491;
extern fsoc*store_chunk491;
extern gc491*gc_free491;
typedef struct B439 gc439;
struct B439{T439 object;union {void*flag;gc439*next;} header;};
extern gc439*store439;
extern int store_left439;
extern fsoc*store_chunk439;
extern gc439*gc_free439;
typedef struct B402 gc402;
struct B402{T402 object;union {void*flag;gc402*next;} header;};
extern gc402*store402;
extern int store_left402;
extern fsoc*store_chunk402;
extern gc402*gc_free402;
typedef struct B375 gc375;
struct B375{T375 object;union {void*flag;gc375*next;} header;};
extern gc375*store375;
extern int store_left375;
extern fsoc*store_chunk375;
extern gc375*gc_free375;
typedef struct B430 gc430;
struct B430{T430 object;union {void*flag;gc430*next;} header;};
extern gc430*store430;
extern int store_left430;
extern fsoc*store_chunk430;
extern gc430*gc_free430;
typedef struct B401 gc401;
struct B401{T401 object;union {void*flag;gc401*next;} header;};
extern gc401*store401;
extern int store_left401;
extern fsoc*store_chunk401;
extern gc401*gc_free401;
typedef struct B428 gc428;
struct B428{T428 object;union {void*flag;gc428*next;} header;};
extern gc428*store428;
extern int store_left428;
extern fsoc*store_chunk428;
extern gc428*gc_free428;
typedef struct B397 gc397;
struct B397{T397 object;union {void*flag;gc397*next;} header;};
extern gc397*store397;
extern int store_left397;
extern fsoc*store_chunk397;
extern gc397*gc_free397;
typedef struct B431 gc431;
struct B431{T431 object;union {void*flag;gc431*next;} header;};
extern gc431*store431;
extern int store_left431;
extern fsoc*store_chunk431;
extern gc431*gc_free431;
typedef struct B429 gc429;
struct B429{T429 object;union {void*flag;gc429*next;} header;};
extern gc429*store429;
extern int store_left429;
extern fsoc*store_chunk429;
extern gc429*gc_free429;
typedef struct B436 gc436;
struct B436{T436 object;union {void*flag;gc436*next;} header;};
extern gc436*store436;
extern int store_left436;
extern fsoc*store_chunk436;
extern gc436*gc_free436;
typedef struct B433 gc433;
struct B433{T433 object;union {void*flag;gc433*next;} header;};
extern gc433*store433;
extern int store_left433;
extern fsoc*store_chunk433;
extern gc433*gc_free433;
typedef struct B437 gc437;
struct B437{T437 object;union {void*flag;gc437*next;} header;};
extern gc437*store437;
extern int store_left437;
extern fsoc*store_chunk437;
extern gc437*gc_free437;
typedef struct B440 gc440;
struct B440{T440 object;union {void*flag;gc440*next;} header;};
extern gc440*store440;
extern int store_left440;
extern fsoc*store_chunk440;
extern gc440*gc_free440;
typedef struct B262 gc262;
struct B262{T262 object;union {void*flag;gc262*next;} header;};
extern gc262*store262;
extern int store_left262;
extern fsoc*store_chunk262;
extern gc262*gc_free262;
typedef struct B460 gc460;
struct B460{T460 object;union {void*flag;gc460*next;} header;};
extern gc460*store460;
extern int store_left460;
extern fsoc*store_chunk460;
extern gc460*gc_free460;
typedef struct B462 gc462;
struct B462{T462 object;union {void*flag;gc462*next;} header;};
extern gc462*store462;
extern int store_left462;
extern fsoc*store_chunk462;
extern gc462*gc_free462;
typedef struct B463 gc463;
struct B463{T463 object;union {void*flag;gc463*next;} header;};
extern gc463*store463;
extern int store_left463;
extern fsoc*store_chunk463;
extern gc463*gc_free463;
typedef struct B464 gc464;
struct B464{T464 object;union {void*flag;gc464*next;} header;};
extern gc464*store464;
extern int store_left464;
extern fsoc*store_chunk464;
extern gc464*gc_free464;
typedef struct B415 gc415;
struct B415{T415 object;union {void*flag;gc415*next;} header;};
extern gc415*store415;
extern int store_left415;
extern fsoc*store_chunk415;
extern gc415*gc_free415;
typedef struct B1058 gc1058;
struct B1058{T1058 object;union {void*flag;gc1058*next;} header;};
extern gc1058*store1058;
extern int store_left1058;
extern fsoc*store_chunk1058;
extern gc1058*gc_free1058;
typedef struct B269 gc269;
struct B269{T269 object;union {void*flag;gc269*next;} header;};
extern gc269*store269;
extern int store_left269;
extern fsoc*store_chunk269;
extern gc269*gc_free269;
typedef struct B471 gc471;
struct B471{T471 object;union {void*flag;gc471*next;} header;};
extern gc471*store471;
extern int store_left471;
extern fsoc*store_chunk471;
extern gc471*gc_free471;
typedef struct B1059 gc1059;
struct B1059{T1059 object;union {void*flag;gc1059*next;} header;};
extern gc1059*store1059;
extern int store_left1059;
extern fsoc*store_chunk1059;
extern gc1059*gc_free1059;
typedef struct B511 gc511;
struct B511{T511 object;union {void*flag;gc511*next;} header;};
extern gc511*store511;
extern int store_left511;
extern fsoc*store_chunk511;
extern gc511*gc_free511;
typedef struct B480 gc480;
struct B480{T480 object;union {void*flag;gc480*next;} header;};
extern gc480*store480;
extern int store_left480;
extern fsoc*store_chunk480;
extern gc480*gc_free480;
typedef struct B395 gc395;
struct B395{T395 object;union {void*flag;gc395*next;} header;};
extern gc395*store395;
extern int store_left395;
extern fsoc*store_chunk395;
extern gc395*gc_free395;
typedef struct B467 gc467;
struct B467{T467 object;union {void*flag;gc467*next;} header;};
extern gc467*store467;
extern int store_left467;
extern fsoc*store_chunk467;
extern gc467*gc_free467;
typedef struct B365 gc365;
struct B365{T365 object;union {void*flag;gc365*next;} header;};
extern gc365*store365;
extern int store_left365;
extern fsoc*store_chunk365;
extern gc365*gc_free365;
typedef struct B468 gc468;
struct B468{T468 object;union {void*flag;gc468*next;} header;};
extern gc468*store468;
extern int store_left468;
extern fsoc*store_chunk468;
extern gc468*gc_free468;
typedef struct B469 gc469;
struct B469{T469 object;union {void*flag;gc469*next;} header;};
extern gc469*store469;
extern int store_left469;
extern fsoc*store_chunk469;
extern gc469*gc_free469;
typedef struct B333 gc333;
struct B333{T333 object;union {void*flag;gc333*next;} header;};
extern gc333*store333;
extern int store_left333;
extern fsoc*store_chunk333;
extern gc333*gc_free333;
typedef struct B342 gc342;
struct B342{T342 object;union {void*flag;gc342*next;} header;};
extern gc342*store342;
extern int store_left342;
extern fsoc*store_chunk342;
extern gc342*gc_free342;
typedef struct B345 gc345;
struct B345{T345 object;union {void*flag;gc345*next;} header;};
extern gc345*store345;
extern int store_left345;
extern fsoc*store_chunk345;
extern gc345*gc_free345;
typedef struct B347 gc347;
struct B347{T347 object;union {void*flag;gc347*next;} header;};
extern gc347*store347;
extern int store_left347;
extern fsoc*store_chunk347;
extern gc347*gc_free347;
typedef struct B336 gc336;
struct B336{T336 object;union {void*flag;gc336*next;} header;};
extern gc336*store336;
extern int store_left336;
extern fsoc*store_chunk336;
extern gc336*gc_free336;
typedef struct B340 gc340;
struct B340{T340 object;union {void*flag;gc340*next;} header;};
extern gc340*store340;
extern int store_left340;
extern fsoc*store_chunk340;
extern gc340*gc_free340;
typedef struct B341 gc341;
struct B341{T341 object;union {void*flag;gc341*next;} header;};
extern gc341*store341;
extern int store_left341;
extern fsoc*store_chunk341;
extern gc341*gc_free341;
typedef struct B482 gc482;
struct B482{T482 object;union {void*flag;gc482*next;} header;};
extern gc482*store482;
extern int store_left482;
extern fsoc*store_chunk482;
extern gc482*gc_free482;
typedef struct B483 gc483;
struct B483{T483 object;union {void*flag;gc483*next;} header;};
extern gc483*store483;
extern int store_left483;
extern fsoc*store_chunk483;
extern gc483*gc_free483;
typedef struct B484 gc484;
struct B484{T484 object;union {void*flag;gc484*next;} header;};
extern gc484*store484;
extern int store_left484;
extern fsoc*store_chunk484;
extern gc484*gc_free484;
typedef struct B473 gc473;
struct B473{T473 object;union {void*flag;gc473*next;} header;};
extern gc473*store473;
extern int store_left473;
extern fsoc*store_chunk473;
extern gc473*gc_free473;
typedef struct B379 gc379;
struct B379{T379 object;union {void*flag;gc379*next;} header;};
extern gc379*store379;
extern int store_left379;
extern fsoc*store_chunk379;
extern gc379*gc_free379;
typedef struct B450 gc450;
struct B450{T450 object;union {void*flag;gc450*next;} header;};
extern gc450*store450;
extern int store_left450;
extern fsoc*store_chunk450;
extern gc450*gc_free450;
typedef struct B456 gc456;
struct B456{T456 object;union {void*flag;gc456*next;} header;};
extern gc456*store456;
extern int store_left456;
extern fsoc*store_chunk456;
extern gc456*gc_free456;
typedef struct B474 gc474;
struct B474{T474 object;union {void*flag;gc474*next;} header;};
extern gc474*store474;
extern int store_left474;
extern fsoc*store_chunk474;
extern gc474*gc_free474;
typedef struct B508 gc508;
struct B508{T508 object;union {void*flag;gc508*next;} header;};
extern gc508*store508;
extern int store_left508;
extern fsoc*store_chunk508;
extern gc508*gc_free508;
typedef struct B509 gc509;
struct B509{T509 object;union {void*flag;gc509*next;} header;};
extern gc509*store509;
extern int store_left509;
extern fsoc*store_chunk509;
extern gc509*gc_free509;
typedef struct B1060 gc1060;
struct B1060{T1060 object;union {void*flag;gc1060*next;} header;};
extern gc1060*store1060;
extern int store_left1060;
extern fsoc*store_chunk1060;
extern gc1060*gc_free1060;
typedef struct B1061 gc1061;
struct B1061{T1061 object;union {void*flag;gc1061*next;} header;};
extern gc1061*store1061;
extern int store_left1061;
extern fsoc*store_chunk1061;
extern gc1061*gc_free1061;
typedef struct B447 gc447;
struct B447{T447 object;union {void*flag;gc447*next;} header;};
extern gc447*store447;
extern int store_left447;
extern fsoc*store_chunk447;
extern gc447*gc_free447;
typedef struct B448 gc448;
struct B448{T448 object;union {void*flag;gc448*next;} header;};
extern gc448*store448;
extern int store_left448;
extern fsoc*store_chunk448;
extern gc448*gc_free448;
typedef struct B1062 gc1062;
struct B1062{T1062 object;union {void*flag;gc1062*next;} header;};
extern gc1062*store1062;
extern int store_left1062;
extern fsoc*store_chunk1062;
extern gc1062*gc_free1062;
typedef struct B385 gc385;
struct B385{T385 object;union {void*flag;gc385*next;} header;};
extern gc385*store385;
extern int store_left385;
extern fsoc*store_chunk385;
extern gc385*gc_free385;
typedef struct B1063 gc1063;
struct B1063{T1063 object;union {void*flag;gc1063*next;} header;};
extern gc1063*store1063;
extern int store_left1063;
extern fsoc*store_chunk1063;
extern gc1063*gc_free1063;
typedef struct B654 gc654;
struct B654{T654 object;union {void*flag;gc654*next;} header;};
extern gc654*store654;
extern int store_left654;
extern fsoc*store_chunk654;
extern gc654*gc_free654;
typedef struct B1064 gc1064;
struct B1064{T1064 object;union {void*flag;gc1064*next;} header;};
extern gc1064*store1064;
extern int store_left1064;
extern fsoc*store_chunk1064;
extern gc1064*gc_free1064;
typedef struct B412 gc412;
struct B412{T412 object;union {void*flag;gc412*next;} header;};
extern gc412*store412;
extern int store_left412;
extern fsoc*store_chunk412;
extern gc412*gc_free412;
typedef struct B382 gc382;
struct B382{T382 object;union {void*flag;gc382*next;} header;};
extern gc382*store382;
extern int store_left382;
extern fsoc*store_chunk382;
extern gc382*gc_free382;
typedef struct B1065 gc1065;
struct B1065{T1065 object;union {void*flag;gc1065*next;} header;};
extern gc1065*store1065;
extern int store_left1065;
extern fsoc*store_chunk1065;
extern gc1065*gc_free1065;
typedef struct B386 gc386;
struct B386{T386 object;union {void*flag;gc386*next;} header;};
extern gc386*store386;
extern int store_left386;
extern fsoc*store_chunk386;
extern gc386*gc_free386;
typedef struct B442 gc442;
struct B442{T442 object;union {void*flag;gc442*next;} header;};
extern gc442*store442;
extern int store_left442;
extern fsoc*store_chunk442;
extern gc442*gc_free442;
typedef struct B510 gc510;
struct B510{T510 object;union {void*flag;gc510*next;} header;};
extern gc510*store510;
extern int store_left510;
extern fsoc*store_chunk510;
extern gc510*gc_free510;
typedef struct B1066 gc1066;
struct B1066{T1066 object;union {void*flag;gc1066*next;} header;};
extern gc1066*store1066;
extern int store_left1066;
extern fsoc*store_chunk1066;
extern gc1066*gc_free1066;
typedef struct B470 gc470;
struct B470{T470 object;union {void*flag;gc470*next;} header;};
extern gc470*store470;
extern int store_left470;
extern fsoc*store_chunk470;
extern gc470*gc_free470;
typedef struct B406 gc406;
struct B406{T406 object;union {void*flag;gc406*next;} header;};
extern gc406*store406;
extern int store_left406;
extern fsoc*store_chunk406;
extern gc406*gc_free406;
typedef struct B392 gc392;
struct B392{T392 object;union {void*flag;gc392*next;} header;};
extern gc392*store392;
extern int store_left392;
extern fsoc*store_chunk392;
extern gc392*gc_free392;
typedef struct B1067 gc1067;
struct B1067{T1067 object;union {void*flag;gc1067*next;} header;};
extern gc1067*store1067;
extern int store_left1067;
extern fsoc*store_chunk1067;
extern gc1067*gc_free1067;
typedef struct B351 gc351;
struct B351{T351 object;union {void*flag;gc351*next;} header;};
extern gc351*store351;
extern int store_left351;
extern fsoc*store_chunk351;
extern gc351*gc_free351;
typedef struct B363 gc363;
struct B363{T363 object;union {void*flag;gc363*next;} header;};
extern gc363*store363;
extern int store_left363;
extern fsoc*store_chunk363;
extern gc363*gc_free363;
typedef struct B356 gc356;
struct B356{T356 object;union {void*flag;gc356*next;} header;};
extern gc356*store356;
extern int store_left356;
extern fsoc*store_chunk356;
extern gc356*gc_free356;
typedef struct B472 gc472;
struct B472{T472 object;union {void*flag;gc472*next;} header;};
extern gc472*store472;
extern int store_left472;
extern fsoc*store_chunk472;
extern gc472*gc_free472;
typedef struct B417 gc417;
struct B417{T417 object;union {void*flag;gc417*next;} header;};
extern gc417*store417;
extern int store_left417;
extern fsoc*store_chunk417;
extern gc417*gc_free417;
typedef struct B458 gc458;
struct B458{T458 object;union {void*flag;gc458*next;} header;};
extern gc458*store458;
extern int store_left458;
extern fsoc*store_chunk458;
extern gc458*gc_free458;
typedef struct B459 gc459;
struct B459{T459 object;union {void*flag;gc459*next;} header;};
extern gc459*store459;
extern int store_left459;
extern fsoc*store_chunk459;
extern gc459*gc_free459;
typedef struct B358 gc358;
struct B358{T358 object;union {void*flag;gc358*next;} header;};
extern gc358*store358;
extern int store_left358;
extern fsoc*store_chunk358;
extern gc358*gc_free358;
typedef struct B398 gc398;
struct B398{T398 object;union {void*flag;gc398*next;} header;};
extern gc398*store398;
extern int store_left398;
extern fsoc*store_chunk398;
extern gc398*gc_free398;
typedef struct B457 gc457;
struct B457{T457 object;union {void*flag;gc457*next;} header;};
extern gc457*store457;
extern int store_left457;
extern fsoc*store_chunk457;
extern gc457*gc_free457;
typedef struct B487 gc487;
struct B487{T487 object;union {void*flag;gc487*next;} header;};
extern gc487*store487;
extern int store_left487;
extern fsoc*store_chunk487;
extern gc487*gc_free487;
typedef struct B477 gc477;
struct B477{T477 object;union {void*flag;gc477*next;} header;};
extern gc477*store477;
extern int store_left477;
extern fsoc*store_chunk477;
extern gc477*gc_free477;
typedef struct B361 gc361;
struct B361{T361 object;union {void*flag;gc361*next;} header;};
extern gc361*store361;
extern int store_left361;
extern fsoc*store_chunk361;
extern gc361*gc_free361;
typedef struct B388 gc388;
struct B388{T388 object;union {void*flag;gc388*next;} header;};
extern gc388*store388;
extern int store_left388;
extern fsoc*store_chunk388;
extern gc388*gc_free388;
typedef struct B453 gc453;
struct B453{T453 object;union {void*flag;gc453*next;} header;};
extern gc453*store453;
extern int store_left453;
extern fsoc*store_chunk453;
extern gc453*gc_free453;
typedef struct B389 gc389;
struct B389{T389 object;union {void*flag;gc389*next;} header;};
extern gc389*store389;
extern int store_left389;
extern fsoc*store_chunk389;
extern gc389*gc_free389;
typedef struct B649 gc649;
struct B649{T649 object;union {void*flag;gc649*next;} header;};
extern gc649*store649;
extern int store_left649;
extern fsoc*store_chunk649;
extern gc649*gc_free649;
typedef struct B476 gc476;
struct B476{T476 object;union {void*flag;gc476*next;} header;};
extern gc476*store476;
extern int store_left476;
extern fsoc*store_chunk476;
extern gc476*gc_free476;
typedef struct B390 gc390;
struct B390{T390 object;union {void*flag;gc390*next;} header;};
extern gc390*store390;
extern int store_left390;
extern fsoc*store_chunk390;
extern gc390*gc_free390;
typedef struct B485 gc485;
struct B485{T485 object;union {void*flag;gc485*next;} header;};
extern gc485*store485;
extern int store_left485;
extern fsoc*store_chunk485;
extern gc485*gc_free485;
typedef struct B507 gc507;
struct B507{T507 object;union {void*flag;gc507*next;} header;};
extern gc507*store507;
extern int store_left507;
extern fsoc*store_chunk507;
extern gc507*gc_free507;
typedef struct B506 gc506;
struct B506{T506 object;union {void*flag;gc506*next;} header;};
extern gc506*store506;
extern int store_left506;
extern fsoc*store_chunk506;
extern gc506*gc_free506;
typedef struct B502 gc502;
struct B502{T502 object;union {void*flag;gc502*next;} header;};
extern gc502*store502;
extern int store_left502;
extern fsoc*store_chunk502;
extern gc502*gc_free502;
typedef struct B503 gc503;
struct B503{T503 object;union {void*flag;gc503*next;} header;};
extern gc503*store503;
extern int store_left503;
extern fsoc*store_chunk503;
extern gc503*gc_free503;
typedef struct B504 gc504;
struct B504{T504 object;union {void*flag;gc504*next;} header;};
extern gc504*store504;
extern int store_left504;
extern fsoc*store_chunk504;
extern gc504*gc_free504;
typedef struct B505 gc505;
struct B505{T505 object;union {void*flag;gc505*next;} header;};
extern gc505*store505;
extern int store_left505;
extern fsoc*store_chunk505;
extern gc505*gc_free505;
typedef struct B501 gc501;
struct B501{T501 object;union {void*flag;gc501*next;} header;};
extern gc501*store501;
extern int store_left501;
extern fsoc*store_chunk501;
extern gc501*gc_free501;
typedef struct B368 gc368;
struct B368{T368 object;union {void*flag;gc368*next;} header;};
extern gc368*store368;
extern int store_left368;
extern fsoc*store_chunk368;
extern gc368*gc_free368;
typedef struct B391 gc391;
struct B391{T391 object;union {void*flag;gc391*next;} header;};
extern gc391*store391;
extern int store_left391;
extern fsoc*store_chunk391;
extern gc391*gc_free391;
typedef struct B497 gc497;
struct B497{T497 object;union {void*flag;gc497*next;} header;};
extern gc497*store497;
extern int store_left497;
extern fsoc*store_chunk497;
extern gc497*gc_free497;
typedef struct B498 gc498;
struct B498{T498 object;union {void*flag;gc498*next;} header;};
extern gc498*store498;
extern int store_left498;
extern fsoc*store_chunk498;
extern gc498*gc_free498;
typedef struct B499 gc499;
struct B499{T499 object;union {void*flag;gc499*next;} header;};
extern gc499*store499;
extern int store_left499;
extern fsoc*store_chunk499;
extern gc499*gc_free499;
typedef struct B500 gc500;
struct B500{T500 object;union {void*flag;gc500*next;} header;};
extern gc500*store500;
extern int store_left500;
extern fsoc*store_chunk500;
extern gc500*gc_free500;
typedef struct B396 gc396;
struct B396{T396 object;union {void*flag;gc396*next;} header;};
extern gc396*store396;
extern int store_left396;
extern fsoc*store_chunk396;
extern gc396*gc_free396;
typedef struct B496 gc496;
struct B496{T496 object;union {void*flag;gc496*next;} header;};
extern gc496*store496;
extern int store_left496;
extern fsoc*store_chunk496;
extern gc496*gc_free496;
typedef struct B493 gc493;
struct B493{T493 object;union {void*flag;gc493*next;} header;};
extern gc493*store493;
extern int store_left493;
extern fsoc*store_chunk493;
extern gc493*gc_free493;
typedef struct B494 gc494;
struct B494{T494 object;union {void*flag;gc494*next;} header;};
extern gc494*store494;
extern int store_left494;
extern fsoc*store_chunk494;
extern gc494*gc_free494;
typedef struct B495 gc495;
struct B495{T495 object;union {void*flag;gc495*next;} header;};
extern gc495*store495;
extern int store_left495;
extern fsoc*store_chunk495;
extern gc495*gc_free495;
typedef struct B492 gc492;
struct B492{T492 object;union {void*flag;gc492*next;} header;};
extern gc492*store492;
extern int store_left492;
extern fsoc*store_chunk492;
extern gc492*gc_free492;
typedef struct B451 gc451;
struct B451{T451 object;union {void*flag;gc451*next;} header;};
extern gc451*store451;
extern int store_left451;
extern fsoc*store_chunk451;
extern gc451*gc_free451;
typedef struct B452 gc452;
struct B452{T452 object;union {void*flag;gc452*next;} header;};
extern gc452*store452;
extern int store_left452;
extern fsoc*store_chunk452;
extern gc452*gc_free452;
typedef struct B486 gc486;
struct B486{T486 object;union {void*flag;gc486*next;} header;};
extern gc486*store486;
extern int store_left486;
extern fsoc*store_chunk486;
extern gc486*gc_free486;
typedef struct B272 gc272;
struct B272{T272 object;union {void*flag;gc272*next;} header;};
extern gc272*store272;
extern int store_left272;
extern fsoc*store_chunk272;
extern gc272*gc_free272;
typedef struct B455 gc455;
struct B455{T455 object;union {void*flag;gc455*next;} header;};
extern gc455*store455;
extern int store_left455;
extern fsoc*store_chunk455;
extern gc455*gc_free455;
typedef struct B454 gc454;
struct B454{T454 object;union {void*flag;gc454*next;} header;};
extern gc454*store454;
extern int store_left454;
extern fsoc*store_chunk454;
extern gc454*gc_free454;
typedef struct B1068 gc1068;
struct B1068{T1068 object;union {void*flag;gc1068*next;} header;};
extern gc1068*store1068;
extern int store_left1068;
extern fsoc*store_chunk1068;
extern gc1068*gc_free1068;
typedef struct B413 gc413;
struct B413{T413 object;union {void*flag;gc413*next;} header;};
extern gc413*store413;
extern int store_left413;
extern fsoc*store_chunk413;
extern gc413*gc_free413;
typedef struct B422 gc422;
struct B422{T422 object;union {void*flag;gc422*next;} header;};
extern gc422*store422;
extern int store_left422;
extern fsoc*store_chunk422;
extern gc422*gc_free422;
typedef struct B739 gc739;
struct B739{T739 object;union {void*flag;gc739*next;} header;};
extern gc739*store739;
extern int store_left739;
extern fsoc*store_chunk739;
extern gc739*gc_free739;
typedef struct B449 gc449;
struct B449{T449 object;union {void*flag;gc449*next;} header;};
extern gc449*store449;
extern int store_left449;
extern fsoc*store_chunk449;
extern gc449*gc_free449;
typedef struct B352 gc352;
struct B352{T352 object;union {void*flag;gc352*next;} header;};
extern gc352*store352;
extern int store_left352;
extern fsoc*store_chunk352;
extern gc352*gc_free352;
typedef struct B404 gc404;
struct B404{T404 object;union {void*flag;gc404*next;} header;};
extern gc404*store404;
extern int store_left404;
extern fsoc*store_chunk404;
extern gc404*gc_free404;
typedef struct B387 gc387;
struct B387{T387 object;union {void*flag;gc387*next;} header;};
extern gc387*store387;
extern int store_left387;
extern fsoc*store_chunk387;
extern gc387*gc_free387;
typedef struct B1069 gc1069;
struct B1069{T1069 object;union {void*flag;gc1069*next;} header;};
extern gc1069*store1069;
extern int store_left1069;
extern fsoc*store_chunk1069;
extern gc1069*gc_free1069;
typedef struct B1070 gc1070;
struct B1070{T1070 object;union {void*flag;gc1070*next;} header;};
extern gc1070*store1070;
extern int store_left1070;
extern fsoc*store_chunk1070;
extern gc1070*gc_free1070;
typedef struct B1071 gc1071;
struct B1071{T1071 object;union {void*flag;gc1071*next;} header;};
extern gc1071*store1071;
extern int store_left1071;
extern fsoc*store_chunk1071;
extern gc1071*gc_free1071;
typedef struct B1072 gc1072;
struct B1072{T1072 object;union {void*flag;gc1072*next;} header;};
extern gc1072*store1072;
extern int store_left1072;
extern fsoc*store_chunk1072;
extern gc1072*gc_free1072;
extern na_env na_env1073;
extern na_env na_env1074;
extern na_env na_env1075;
typedef struct B1076 gc1076;
struct B1076{T1076 object;union {void*flag;gc1076*next;} header;};
extern gc1076*store1076;
extern int store_left1076;
extern fsoc*store_chunk1076;
extern gc1076*gc_free1076;
typedef struct B523 gc523;
struct B523{T523 object;union {void*flag;gc523*next;} header;};
extern gc523*store523;
extern int store_left523;
extern fsoc*store_chunk523;
extern gc523*gc_free523;
typedef struct B1077 gc1077;
struct B1077{T1077 object;union {void*flag;gc1077*next;} header;};
extern gc1077*store1077;
extern int store_left1077;
extern fsoc*store_chunk1077;
extern gc1077*gc_free1077;
typedef struct B1079 gc1079;
struct B1079{T1079 object;union {void*flag;gc1079*next;} header;};
extern gc1079*store1079;
extern int store_left1079;
extern fsoc*store_chunk1079;
extern gc1079*gc_free1079;
typedef struct B424 gc424;
struct B424{T424 object;union {void*flag;gc424*next;} header;};
extern gc424*store424;
extern int store_left424;
extern fsoc*store_chunk424;
extern gc424*gc_free424;
typedef struct B416 gc416;
struct B416{T416 object;union {void*flag;gc416*next;} header;};
extern gc416*store416;
extern int store_left416;
extern fsoc*store_chunk416;
extern gc416*gc_free416;

#define gc_mark1080(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1083(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1085 gc1085;
struct B1085{T1085 object;union {void*flag;gc1085*next;} header;};
extern gc1085*store1085;
extern int store_left1085;
extern fsoc*store_chunk1085;
extern gc1085*gc_free1085;
typedef struct B1086 gc1086;
struct B1086{T1086 object;union {void*flag;gc1086*next;} header;};
extern gc1086*store1086;
extern int store_left1086;
extern fsoc*store_chunk1086;
extern gc1086*gc_free1086;
typedef struct B444 gc444;
struct B444{T444 object;union {void*flag;gc444*next;} header;};
extern gc444*store444;
extern int store_left444;
extern fsoc*store_chunk444;
extern gc444*gc_free444;
typedef struct B421 gc421;
struct B421{T421 object;union {void*flag;gc421*next;} header;};
extern gc421*store421;
extern int store_left421;
extern fsoc*store_chunk421;
extern gc421*gc_free421;
typedef struct B441 gc441;
struct B441{T441 object;union {void*flag;gc441*next;} header;};
extern gc441*store441;
extern int store_left441;
extern fsoc*store_chunk441;
extern gc441*gc_free441;
typedef struct B1087 gc1087;
struct B1087{T1087 object;union {void*flag;gc1087*next;} header;};
extern gc1087*store1087;
extern int store_left1087;
extern fsoc*store_chunk1087;
extern gc1087*gc_free1087;
typedef struct B419 gc419;
struct B419{T419 object;union {void*flag;gc419*next;} header;};
extern gc419*store419;
extern int store_left419;
extern fsoc*store_chunk419;
extern gc419*gc_free419;
typedef struct B1088 gc1088;
struct B1088{T1088 object;union {void*flag;gc1088*next;} header;};
extern gc1088*store1088;
extern int store_left1088;
extern fsoc*store_chunk1088;
extern gc1088*gc_free1088;
extern na_env na_env1089;
typedef struct B1090 gc1090;
struct B1090{T1090 object;union {void*flag;gc1090*next;} header;};
extern gc1090*store1090;
extern int store_left1090;
extern fsoc*store_chunk1090;
extern gc1090*gc_free1090;
typedef struct B1091 gc1091;
struct B1091{T1091 object;union {void*flag;gc1091*next;} header;};
extern gc1091*store1091;
extern int store_left1091;
extern fsoc*store_chunk1091;
extern gc1091*gc_free1091;
extern na_env na_env1092;
typedef struct B1093 gc1093;
struct B1093{T1093 object;union {void*flag;gc1093*next;} header;};
extern gc1093*store1093;
extern int store_left1093;
extern fsoc*store_chunk1093;
extern gc1093*gc_free1093;
extern na_env na_env1094;
typedef struct B1095 gc1095;
struct B1095{T1095 object;union {void*flag;gc1095*next;} header;};
extern gc1095*store1095;
extern int store_left1095;
extern fsoc*store_chunk1095;
extern gc1095*gc_free1095;
typedef struct B1098 gc1098;
struct B1098{T1098 object;union {void*flag;gc1098*next;} header;};
extern gc1098*store1098;
extern int store_left1098;
extern fsoc*store_chunk1098;
extern gc1098*gc_free1098;
typedef struct B1099 gc1099;
struct B1099{T1099 object;union {void*flag;gc1099*next;} header;};
extern gc1099*store1099;
extern int store_left1099;
extern fsoc*store_chunk1099;
extern gc1099*gc_free1099;
typedef struct B1102 gc1102;
struct B1102{T1102 object;union {void*flag;gc1102*next;} header;};
extern gc1102*store1102;
extern int store_left1102;
extern fsoc*store_chunk1102;
extern gc1102*gc_free1102;
typedef struct B1103 gc1103;
struct B1103{T1103 object;union {void*flag;gc1103*next;} header;};
extern gc1103*store1103;
extern int store_left1103;
extern fsoc*store_chunk1103;
extern gc1103*gc_free1103;
typedef struct B1104 gc1104;
struct B1104{T1104 object;union {void*flag;gc1104*next;} header;};
extern gc1104*store1104;
extern int store_left1104;
extern fsoc*store_chunk1104;
extern gc1104*gc_free1104;
typedef struct B1105 gc1105;
struct B1105{T1105 object;union {void*flag;gc1105*next;} header;};
extern gc1105*store1105;
extern int store_left1105;
extern fsoc*store_chunk1105;
extern gc1105*gc_free1105;
typedef struct B1106 gc1106;
struct B1106{T1106 object;union {void*flag;gc1106*next;} header;};
extern gc1106*store1106;
extern int store_left1106;
extern fsoc*store_chunk1106;
extern gc1106*gc_free1106;
typedef struct B1107 gc1107;
struct B1107{T1107 object;union {void*flag;gc1107*next;} header;};
extern gc1107*store1107;
extern int store_left1107;
extern fsoc*store_chunk1107;
extern gc1107*gc_free1107;
typedef struct B516 gc516;
struct B516{T516 object;union {void*flag;gc516*next;} header;};
extern gc516*store516;
extern int store_left516;
extern fsoc*store_chunk516;
extern gc516*gc_free516;
typedef struct B1109 gc1109;
struct B1109{T1109 object;union {void*flag;gc1109*next;} header;};
extern gc1109*store1109;
extern int store_left1109;
extern fsoc*store_chunk1109;
extern gc1109*gc_free1109;
typedef struct B1113 gc1113;
struct B1113{T1113 object;union {void*flag;gc1113*next;} header;};
extern gc1113*store1113;
extern int store_left1113;
extern fsoc*store_chunk1113;
extern gc1113*gc_free1113;
typedef struct B1114 gc1114;
struct B1114{T1114 object;union {void*flag;gc1114*next;} header;};
extern gc1114*store1114;
extern int store_left1114;
extern fsoc*store_chunk1114;
extern gc1114*gc_free1114;
typedef struct B1115 gc1115;
struct B1115{T1115 object;union {void*flag;gc1115*next;} header;};
extern gc1115*store1115;
extern int store_left1115;
extern fsoc*store_chunk1115;
extern gc1115*gc_free1115;
typedef struct B1116 gc1116;
struct B1116{T1116 object;union {void*flag;gc1116*next;} header;};
extern gc1116*store1116;
extern int store_left1116;
extern fsoc*store_chunk1116;
extern gc1116*gc_free1116;
typedef struct B1117 gc1117;
struct B1117{T1117 object;union {void*flag;gc1117*next;} header;};
extern gc1117*store1117;
extern int store_left1117;
extern fsoc*store_chunk1117;
extern gc1117*gc_free1117;
typedef struct B518 gc518;
struct B518{T518 object;union {void*flag;gc518*next;} header;};
extern gc518*store518;
extern int store_left518;
extern fsoc*store_chunk518;
extern gc518*gc_free518;
typedef struct B1118 gc1118;
struct B1118{T1118 object;union {void*flag;gc1118*next;} header;};
extern gc1118*store1118;
extern int store_left1118;
extern fsoc*store_chunk1118;
extern gc1118*gc_free1118;
typedef struct B1119 gc1119;
struct B1119{T1119 object;union {void*flag;gc1119*next;} header;};
extern gc1119*store1119;
extern int store_left1119;
extern fsoc*store_chunk1119;
extern gc1119*gc_free1119;
typedef struct B551 gc551;
struct B551{T551 object;union {void*flag;gc551*next;} header;};
extern gc551*store551;
extern int store_left551;
extern fsoc*store_chunk551;
extern gc551*gc_free551;
typedef struct B1121 gc1121;
struct B1121{T1121 object;union {void*flag;gc1121*next;} header;};
extern gc1121*store1121;
extern int store_left1121;
extern fsoc*store_chunk1121;
extern gc1121*gc_free1121;
typedef struct B1122 gc1122;
struct B1122{T1122 object;union {void*flag;gc1122*next;} header;};
extern gc1122*store1122;
extern int store_left1122;
extern fsoc*store_chunk1122;
extern gc1122*gc_free1122;
typedef struct B1123 gc1123;
struct B1123{T1123 object;union {void*flag;gc1123*next;} header;};
extern gc1123*store1123;
extern int store_left1123;
extern fsoc*store_chunk1123;
extern gc1123*gc_free1123;
typedef struct B394 gc394;
struct B394{T394 object;union {void*flag;gc394*next;} header;};
extern gc394*store394;
extern int store_left394;
extern fsoc*store_chunk394;
extern gc394*gc_free394;
extern na_env na_env1124;
typedef struct B1125 gc1125;
struct B1125{T1125 object;union {void*flag;gc1125*next;} header;};
extern gc1125*store1125;
extern int store_left1125;
extern fsoc*store_chunk1125;
extern gc1125*gc_free1125;
typedef struct B1126 gc1126;
struct B1126{T1126 object;union {void*flag;gc1126*next;} header;};
extern gc1126*store1126;
extern int store_left1126;
extern fsoc*store_chunk1126;
extern gc1126*gc_free1126;
extern na_env na_env1127;
typedef struct B1128 gc1128;
struct B1128{T1128 object;union {void*flag;gc1128*next;} header;};
extern gc1128*store1128;
extern int store_left1128;
extern fsoc*store_chunk1128;
extern gc1128*gc_free1128;
typedef struct B1129 gc1129;
struct B1129{T1129 object;union {void*flag;gc1129*next;} header;};
extern gc1129*store1129;
extern int store_left1129;
extern fsoc*store_chunk1129;
extern gc1129*gc_free1129;
typedef struct B625 gc625;
struct B625{T625 object;union {void*flag;gc625*next;} header;};
extern gc625*store625;
extern int store_left625;
extern fsoc*store_chunk625;
extern gc625*gc_free625;
typedef struct B1130 gc1130;
struct B1130{T1130 object;union {void*flag;gc1130*next;} header;};
extern gc1130*store1130;
extern int store_left1130;
extern fsoc*store_chunk1130;
extern gc1130*gc_free1130;
typedef struct B1131 gc1131;
struct B1131{T1131 object;union {void*flag;gc1131*next;} header;};
extern gc1131*store1131;
extern int store_left1131;
extern fsoc*store_chunk1131;
extern gc1131*gc_free1131;
typedef struct B1132 gc1132;
struct B1132{T1132 object;union {void*flag;gc1132*next;} header;};
extern gc1132*store1132;
extern int store_left1132;
extern fsoc*store_chunk1132;
extern gc1132*gc_free1132;
typedef struct B1133 gc1133;
struct B1133{T1133 object;union {void*flag;gc1133*next;} header;};
extern gc1133*store1133;
extern int store_left1133;
extern fsoc*store_chunk1133;
extern gc1133*gc_free1133;
typedef struct B1138 gc1138;
struct B1138{T1138 object;union {void*flag;gc1138*next;} header;};
extern gc1138*store1138;
extern int store_left1138;
extern fsoc*store_chunk1138;
extern gc1138*gc_free1138;
typedef struct B1139 gc1139;
struct B1139{T1139 object;union {void*flag;gc1139*next;} header;};
extern gc1139*store1139;
extern int store_left1139;
extern fsoc*store_chunk1139;
extern gc1139*gc_free1139;
typedef struct B1140 gc1140;
struct B1140{T1140 object;union {void*flag;gc1140*next;} header;};
extern gc1140*store1140;
extern int store_left1140;
extern fsoc*store_chunk1140;
extern gc1140*gc_free1140;
typedef struct B1141 gc1141;
struct B1141{T1141 object;union {void*flag;gc1141*next;} header;};
extern gc1141*store1141;
extern int store_left1141;
extern fsoc*store_chunk1141;
extern gc1141*gc_free1141;
typedef struct B1142 gc1142;
struct B1142{T1142 object;union {void*flag;gc1142*next;} header;};
extern gc1142*store1142;
extern int store_left1142;
extern fsoc*store_chunk1142;
extern gc1142*gc_free1142;
typedef struct B1143 gc1143;
struct B1143{T1143 object;union {void*flag;gc1143*next;} header;};
extern gc1143*store1143;
extern int store_left1143;
extern fsoc*store_chunk1143;
extern gc1143*gc_free1143;
extern na_env na_env1144;
typedef struct B1145 gc1145;
struct B1145{T1145 object;union {void*flag;gc1145*next;} header;};
extern gc1145*store1145;
extern int store_left1145;
extern fsoc*store_chunk1145;
extern gc1145*gc_free1145;
typedef struct B1146 gc1146;
struct B1146{T1146 object;union {void*flag;gc1146*next;} header;};
extern gc1146*store1146;
extern int store_left1146;
extern fsoc*store_chunk1146;
extern gc1146*gc_free1146;
extern na_env na_env1147;
extern na_env na_env1148;
typedef struct B1149 gc1149;
struct B1149{T1149 object;union {void*flag;gc1149*next;} header;};
extern gc1149*store1149;
extern int store_left1149;
extern fsoc*store_chunk1149;
extern gc1149*gc_free1149;
typedef struct B1152 gc1152;
struct B1152{T1152 object;union {void*flag;gc1152*next;} header;};
extern gc1152*store1152;
extern int store_left1152;
extern fsoc*store_chunk1152;
extern gc1152*gc_free1152;
typedef struct B1153 gc1153;
struct B1153{T1153 object;union {void*flag;gc1153*next;} header;};
extern gc1153*store1153;
extern int store_left1153;
extern fsoc*store_chunk1153;
extern gc1153*gc_free1153;
typedef struct B1154 gc1154;
struct B1154{T1154 object;union {void*flag;gc1154*next;} header;};
extern gc1154*store1154;
extern int store_left1154;
extern fsoc*store_chunk1154;
extern gc1154*gc_free1154;
typedef struct B400 gc400;
struct B400{T400 object;union {void*flag;gc400*next;} header;};
extern gc400*store400;
extern int store_left400;
extern fsoc*store_chunk400;
extern gc400*gc_free400;
typedef struct B1155 gc1155;
struct B1155{T1155 object;union {void*flag;gc1155*next;} header;};
extern gc1155*store1155;
extern int store_left1155;
extern fsoc*store_chunk1155;
extern gc1155*gc_free1155;
typedef struct B552 gc552;
struct B552{T552 object;union {void*flag;gc552*next;} header;};
extern gc552*store552;
extern int store_left552;
extern fsoc*store_chunk552;
extern gc552*gc_free552;
typedef struct B1156 gc1156;
struct B1156{T1156 object;union {void*flag;gc1156*next;} header;};
extern gc1156*store1156;
extern int store_left1156;
extern fsoc*store_chunk1156;
extern gc1156*gc_free1156;
typedef struct B1157 gc1157;
struct B1157{T1157 object;union {void*flag;gc1157*next;} header;};
extern gc1157*store1157;
extern int store_left1157;
extern fsoc*store_chunk1157;
extern gc1157*gc_free1157;
extern na_env na_env1158;
extern na_env na_env1159;
typedef struct B1160 gc1160;
struct B1160{T1160 object;union {void*flag;gc1160*next;} header;};
extern gc1160*store1160;
extern int store_left1160;
extern fsoc*store_chunk1160;
extern gc1160*gc_free1160;
typedef struct B1161 gc1161;
struct B1161{T1161 object;union {void*flag;gc1161*next;} header;};
extern gc1161*store1161;
extern int store_left1161;
extern fsoc*store_chunk1161;
extern gc1161*gc_free1161;
typedef struct B1163 gc1163;
struct B1163{T1163 object;union {void*flag;gc1163*next;} header;};
extern gc1163*store1163;
extern int store_left1163;
extern fsoc*store_chunk1163;
extern gc1163*gc_free1163;
extern na_env na_env1165;
typedef struct B1166 gc1166;
struct B1166{T1166 object;union {void*flag;gc1166*next;} header;};
extern gc1166*store1166;
extern int store_left1166;
extern fsoc*store_chunk1166;
extern gc1166*gc_free1166;
typedef struct B1167 gc1167;
struct B1167{T1167 object;union {void*flag;gc1167*next;} header;};
extern gc1167*store1167;
extern int store_left1167;
extern fsoc*store_chunk1167;
extern gc1167*gc_free1167;
extern na_env na_env1168;
typedef struct B1169 gc1169;
struct B1169{T1169 object;union {void*flag;gc1169*next;} header;};
extern gc1169*store1169;
extern int store_left1169;
extern fsoc*store_chunk1169;
extern gc1169*gc_free1169;
extern na_env na_env1171;
extern na_env na_env1172;
extern na_env na_env1173;
typedef struct B1174 gc1174;
struct B1174{T1174 object;union {void*flag;gc1174*next;} header;};
extern gc1174*store1174;
extern int store_left1174;
extern fsoc*store_chunk1174;
extern gc1174*gc_free1174;
typedef struct B1175 gc1175;
struct B1175{T1175 object;union {void*flag;gc1175*next;} header;};
extern gc1175*store1175;
extern int store_left1175;
extern fsoc*store_chunk1175;
extern gc1175*gc_free1175;
typedef struct B1177 gc1177;
struct B1177{T1177 object;union {void*flag;gc1177*next;} header;};
extern gc1177*store1177;
extern int store_left1177;
extern fsoc*store_chunk1177;
extern gc1177*gc_free1177;
typedef struct B762 gc762;
struct B762{T762 object;union {void*flag;gc762*next;} header;};
extern gc762*store762;
extern int store_left762;
extern fsoc*store_chunk762;
extern gc762*gc_free762;
typedef struct B1179 gc1179;
struct B1179{T1179 object;union {void*flag;gc1179*next;} header;};
extern gc1179*store1179;
extern int store_left1179;
extern fsoc*store_chunk1179;
extern gc1179*gc_free1179;
typedef struct B1180 gc1180;
struct B1180{T1180 object;union {void*flag;gc1180*next;} header;};
extern gc1180*store1180;
extern int store_left1180;
extern fsoc*store_chunk1180;
extern gc1180*gc_free1180;
typedef struct B1181 gc1181;
struct B1181{T1181 object;union {void*flag;gc1181*next;} header;};
extern gc1181*store1181;
extern int store_left1181;
extern fsoc*store_chunk1181;
extern gc1181*gc_free1181;
typedef struct B1182 gc1182;
struct B1182{T1182 object;union {void*flag;gc1182*next;} header;};
extern gc1182*store1182;
extern int store_left1182;
extern fsoc*store_chunk1182;
extern gc1182*gc_free1182;
extern na_env na_env1183;
typedef struct B1184 gc1184;
struct B1184{T1184 object;union {void*flag;gc1184*next;} header;};
extern gc1184*store1184;
extern int store_left1184;
extern fsoc*store_chunk1184;
extern gc1184*gc_free1184;
typedef struct B1185 gc1185;
struct B1185{T1185 object;union {void*flag;gc1185*next;} header;};
extern gc1185*store1185;
extern int store_left1185;
extern fsoc*store_chunk1185;
extern gc1185*gc_free1185;
extern na_env na_env1186;
extern na_env na_env1187;
typedef struct B1188 gc1188;
struct B1188{T1188 object;union {void*flag;gc1188*next;} header;};
extern gc1188*store1188;
extern int store_left1188;
extern fsoc*store_chunk1188;
extern gc1188*gc_free1188;
typedef struct B1189 gc1189;
struct B1189{T1189 object;union {void*flag;gc1189*next;} header;};
extern gc1189*store1189;
extern int store_left1189;
extern fsoc*store_chunk1189;
extern gc1189*gc_free1189;
typedef struct B1190 gc1190;
struct B1190{T1190 object;union {void*flag;gc1190*next;} header;};
extern gc1190*store1190;
extern int store_left1190;
extern fsoc*store_chunk1190;
extern gc1190*gc_free1190;
typedef struct B1191 gc1191;
struct B1191{T1191 object;union {void*flag;gc1191*next;} header;};
extern gc1191*store1191;
extern int store_left1191;
extern fsoc*store_chunk1191;
extern gc1191*gc_free1191;
extern na_env na_env1192;
typedef struct B1193 gc1193;
struct B1193{T1193 object;union {void*flag;gc1193*next;} header;};
extern gc1193*store1193;
extern int store_left1193;
extern fsoc*store_chunk1193;
extern gc1193*gc_free1193;
extern na_env na_env1194;
typedef struct B632 gc632;
struct B632{T632 object;union {void*flag;gc632*next;} header;};
extern gc632*store632;
extern int store_left632;
extern fsoc*store_chunk632;
extern gc632*gc_free632;
typedef struct B640 gc640;
struct B640{T640 object;union {void*flag;gc640*next;} header;};
extern gc640*store640;
extern int store_left640;
extern fsoc*store_chunk640;
extern gc640*gc_free640;
typedef struct B553 gc553;
struct B553{T553 object;union {void*flag;gc553*next;} header;};
extern gc553*store553;
extern int store_left553;
extern fsoc*store_chunk553;
extern gc553*gc_free553;
typedef struct B645 gc645;
struct B645{T645 object;union {void*flag;gc645*next;} header;};
extern gc645*store645;
extern int store_left645;
extern fsoc*store_chunk645;
extern gc645*gc_free645;
typedef struct B642 gc642;
struct B642{T642 object;union {void*flag;gc642*next;} header;};
extern gc642*store642;
extern int store_left642;
extern fsoc*store_chunk642;
extern gc642*gc_free642;
typedef struct B643 gc643;
struct B643{T643 object;union {void*flag;gc643*next;} header;};
extern gc643*store643;
extern int store_left643;
extern fsoc*store_chunk643;
extern gc643*gc_free643;
typedef struct B638 gc638;
struct B638{T638 object;union {void*flag;gc638*next;} header;};
extern gc638*store638;
extern int store_left638;
extern fsoc*store_chunk638;
extern gc638*gc_free638;
typedef struct B641 gc641;
struct B641{T641 object;union {void*flag;gc641*next;} header;};
extern gc641*store641;
extern int store_left641;
extern fsoc*store_chunk641;
extern gc641*gc_free641;
typedef struct B639 gc639;
struct B639{T639 object;union {void*flag;gc639*next;} header;};
extern gc639*store639;
extern int store_left639;
extern fsoc*store_chunk639;
extern gc639*gc_free639;
typedef struct B644 gc644;
struct B644{T644 object;union {void*flag;gc644*next;} header;};
extern gc644*store644;
extern int store_left644;
extern fsoc*store_chunk644;
extern gc644*gc_free644;
typedef struct B635 gc635;
struct B635{T635 object;union {void*flag;gc635*next;} header;};
extern gc635*store635;
extern int store_left635;
extern fsoc*store_chunk635;
extern gc635*gc_free635;
typedef struct B634 gc634;
struct B634{T634 object;union {void*flag;gc634*next;} header;};
extern gc634*store634;
extern int store_left634;
extern fsoc*store_chunk634;
extern gc634*gc_free634;
typedef struct B637 gc637;
struct B637{T637 object;union {void*flag;gc637*next;} header;};
extern gc637*store637;
extern int store_left637;
extern fsoc*store_chunk637;
extern gc637*gc_free637;
typedef struct B1195 gc1195;
struct B1195{T1195 object;union {void*flag;gc1195*next;} header;};
extern gc1195*store1195;
extern int store_left1195;
extern fsoc*store_chunk1195;
extern gc1195*gc_free1195;
typedef struct B1196 gc1196;
struct B1196{T1196 object;union {void*flag;gc1196*next;} header;};
extern gc1196*store1196;
extern int store_left1196;
extern fsoc*store_chunk1196;
extern gc1196*gc_free1196;
typedef struct B1197 gc1197;
struct B1197{T1197 object;union {void*flag;gc1197*next;} header;};
extern gc1197*store1197;
extern int store_left1197;
extern fsoc*store_chunk1197;
extern gc1197*gc_free1197;
extern na_env na_env1198;
typedef struct B678 gc678;
struct B678{T678 object;union {void*flag;gc678*next;} header;};
extern gc678*store678;
extern int store_left678;
extern fsoc*store_chunk678;
extern gc678*gc_free678;
extern na_env na_env1199;
extern na_env na_env1200;
extern na_env na_env1201;
extern na_env na_env1202;
extern na_env na_env1203;
typedef struct B1204 gc1204;
struct B1204{T1204 object;union {void*flag;gc1204*next;} header;};
extern gc1204*store1204;
extern int store_left1204;
extern fsoc*store_chunk1204;
extern gc1204*gc_free1204;
extern na_env na_env1205;
extern na_env na_env1206;
extern na_env na_env1207;
typedef struct B1208 gc1208;
struct B1208{T1208 object;union {void*flag;gc1208*next;} header;};
extern gc1208*store1208;
extern int store_left1208;
extern fsoc*store_chunk1208;
extern gc1208*gc_free1208;
extern na_env na_env1209;
typedef struct B721 gc721;
struct B721{T721 object;union {void*flag;gc721*next;} header;};
extern gc721*store721;
extern int store_left721;
extern fsoc*store_chunk721;
extern gc721*gc_free721;
typedef struct B1210 gc1210;
struct B1210{T1210 object;union {void*flag;gc1210*next;} header;};
extern gc1210*store1210;
extern int store_left1210;
extern fsoc*store_chunk1210;
extern gc1210*gc_free1210;
typedef struct B373 gc373;
struct B373{T373 object;union {void*flag;gc373*next;} header;};
extern gc373*store373;
extern int store_left373;
extern fsoc*store_chunk373;
extern gc373*gc_free373;
typedef struct B666 gc666;
struct B666{T666 object;union {void*flag;gc666*next;} header;};
extern gc666*store666;
extern int store_left666;
extern fsoc*store_chunk666;
extern gc666*gc_free666;
typedef struct B657 gc657;
struct B657{T657 object;union {void*flag;gc657*next;} header;};
extern gc657*store657;
extern int store_left657;
extern fsoc*store_chunk657;
extern gc657*gc_free657;
typedef struct B1211 gc1211;
struct B1211{T1211 object;union {void*flag;gc1211*next;} header;};
extern gc1211*store1211;
extern int store_left1211;
extern fsoc*store_chunk1211;
extern gc1211*gc_free1211;
typedef struct B1212 gc1212;
struct B1212{T1212 object;union {void*flag;gc1212*next;} header;};
extern gc1212*store1212;
extern int store_left1212;
extern fsoc*store_chunk1212;
extern gc1212*gc_free1212;
typedef struct B662 gc662;
struct B662{T662 object;union {void*flag;gc662*next;} header;};
extern gc662*store662;
extern int store_left662;
extern fsoc*store_chunk662;
extern gc662*gc_free662;
typedef struct B1213 gc1213;
struct B1213{T1213 object;union {void*flag;gc1213*next;} header;};
extern gc1213*store1213;
extern int store_left1213;
extern fsoc*store_chunk1213;
extern gc1213*gc_free1213;
typedef struct B1214 gc1214;
struct B1214{T1214 object;union {void*flag;gc1214*next;} header;};
extern gc1214*store1214;
extern int store_left1214;
extern fsoc*store_chunk1214;
extern gc1214*gc_free1214;
typedef struct B1215 gc1215;
struct B1215{T1215 object;union {void*flag;gc1215*next;} header;};
extern gc1215*store1215;
extern int store_left1215;
extern fsoc*store_chunk1215;
extern gc1215*gc_free1215;
extern na_env na_env1217;
extern na_env na_env1218;
typedef struct B1219 gc1219;
struct B1219{T1219 object;union {void*flag;gc1219*next;} header;};
extern gc1219*store1219;
extern int store_left1219;
extern fsoc*store_chunk1219;
extern gc1219*gc_free1219;
typedef struct B1220 gc1220;
struct B1220{T1220 object;union {void*flag;gc1220*next;} header;};
extern gc1220*store1220;
extern int store_left1220;
extern fsoc*store_chunk1220;
extern gc1220*gc_free1220;
extern na_env na_env1221;
typedef struct B1222 gc1222;
struct B1222{T1222 object;union {void*flag;gc1222*next;} header;};
extern gc1222*store1222;
extern int store_left1222;
extern fsoc*store_chunk1222;
extern gc1222*gc_free1222;
typedef struct B1223 gc1223;
struct B1223{T1223 object;union {void*flag;gc1223*next;} header;};
extern gc1223*store1223;
extern int store_left1223;
extern fsoc*store_chunk1223;
extern gc1223*gc_free1223;
extern na_env na_env1224;
extern na_env na_env1227;
extern na_env na_env1228;
extern na_env na_env1229;
extern na_env na_env1230;
typedef struct B1231 gc1231;
struct B1231{T1231 object;union {void*flag;gc1231*next;} header;};
extern gc1231*store1231;
extern int store_left1231;
extern fsoc*store_chunk1231;
extern gc1231*gc_free1231;
typedef struct B1232 gc1232;
struct B1232{T1232 object;union {void*flag;gc1232*next;} header;};
extern gc1232*store1232;
extern int store_left1232;
extern fsoc*store_chunk1232;
extern gc1232*gc_free1232;
typedef struct B1233 gc1233;
struct B1233{T1233 object;union {void*flag;gc1233*next;} header;};
extern gc1233*store1233;
extern int store_left1233;
extern fsoc*store_chunk1233;
extern gc1233*gc_free1233;
typedef struct B1234 gc1234;
struct B1234{T1234 object;union {void*flag;gc1234*next;} header;};
extern gc1234*store1234;
extern int store_left1234;
extern fsoc*store_chunk1234;
extern gc1234*gc_free1234;
typedef struct B1235 gc1235;
struct B1235{T1235 object;union {void*flag;gc1235*next;} header;};
extern gc1235*store1235;
extern int store_left1235;
extern fsoc*store_chunk1235;
extern gc1235*gc_free1235;
typedef struct B1236 gc1236;
struct B1236{T1236 object;union {void*flag;gc1236*next;} header;};
extern gc1236*store1236;
extern int store_left1236;
extern fsoc*store_chunk1236;
extern gc1236*gc_free1236;
extern na_env na_env1237;
typedef struct B1238 gc1238;
struct B1238{T1238 object;union {void*flag;gc1238*next;} header;};
extern gc1238*store1238;
extern int store_left1238;
extern fsoc*store_chunk1238;
extern gc1238*gc_free1238;
extern na_env na_env1239;
typedef struct B1240 gc1240;
struct B1240{T1240 object;union {void*flag;gc1240*next;} header;};
extern gc1240*store1240;
extern int store_left1240;
extern fsoc*store_chunk1240;
extern gc1240*gc_free1240;
typedef struct B1241 gc1241;
struct B1241{T1241 object;union {void*flag;gc1241*next;} header;};
extern gc1241*store1241;
extern int store_left1241;
extern fsoc*store_chunk1241;
extern gc1241*gc_free1241;
typedef struct B1245 gc1245;
struct B1245{T1245 object;union {void*flag;gc1245*next;} header;};
extern gc1245*store1245;
extern int store_left1245;
extern fsoc*store_chunk1245;
extern gc1245*gc_free1245;
extern na_env na_env1246;
typedef struct B1247 gc1247;
struct B1247{T1247 object;union {void*flag;gc1247*next;} header;};
extern gc1247*store1247;
extern int store_left1247;
extern fsoc*store_chunk1247;
extern gc1247*gc_free1247;
typedef struct B1249 gc1249;
struct B1249{T1249 object;union {void*flag;gc1249*next;} header;};
extern gc1249*store1249;
extern int store_left1249;
extern fsoc*store_chunk1249;
extern gc1249*gc_free1249;
typedef struct B1250 gc1250;
struct B1250{T1250 object;union {void*flag;gc1250*next;} header;};
extern gc1250*store1250;
extern int store_left1250;
extern fsoc*store_chunk1250;
extern gc1250*gc_free1250;
typedef struct B1251 gc1251;
struct B1251{T1251 object;union {void*flag;gc1251*next;} header;};
extern gc1251*store1251;
extern int store_left1251;
extern fsoc*store_chunk1251;
extern gc1251*gc_free1251;
extern na_env na_env1252;
extern na_env na_env1253;
extern na_env na_env1254;
extern na_env na_env1255;
typedef struct B1256 gc1256;
struct B1256{T1256 object;union {void*flag;gc1256*next;} header;};
extern gc1256*store1256;
extern int store_left1256;
extern fsoc*store_chunk1256;
extern gc1256*gc_free1256;
typedef struct B1257 gc1257;
struct B1257{T1257 object;union {void*flag;gc1257*next;} header;};
extern gc1257*store1257;
extern int store_left1257;
extern fsoc*store_chunk1257;
extern gc1257*gc_free1257;
extern na_env na_env1258;
extern na_env na_env1260;
typedef struct B1261 gc1261;
struct B1261{T1261 object;union {void*flag;gc1261*next;} header;};
extern gc1261*store1261;
extern int store_left1261;
extern fsoc*store_chunk1261;
extern gc1261*gc_free1261;
typedef struct B1262 gc1262;
struct B1262{T1262 object;union {void*flag;gc1262*next;} header;};
extern gc1262*store1262;
extern int store_left1262;
extern fsoc*store_chunk1262;
extern gc1262*gc_free1262;
typedef struct B1263 gc1263;
struct B1263{T1263 object;union {void*flag;gc1263*next;} header;};
extern gc1263*store1263;
extern int store_left1263;
extern fsoc*store_chunk1263;
extern gc1263*gc_free1263;
typedef struct B1264 gc1264;
struct B1264{T1264 object;union {void*flag;gc1264*next;} header;};
extern gc1264*store1264;
extern int store_left1264;
extern fsoc*store_chunk1264;
extern gc1264*gc_free1264;
extern na_env na_env1265;
extern na_env na_env1266;
typedef struct B1267 gc1267;
struct B1267{T1267 object;union {void*flag;gc1267*next;} header;};
extern gc1267*store1267;
extern int store_left1267;
extern fsoc*store_chunk1267;
extern gc1267*gc_free1267;
typedef struct B1268 gc1268;
struct B1268{T1268 object;union {void*flag;gc1268*next;} header;};
extern gc1268*store1268;
extern int store_left1268;
extern fsoc*store_chunk1268;
extern gc1268*gc_free1268;
typedef struct B1269 gc1269;
struct B1269{T1269 object;union {void*flag;gc1269*next;} header;};
extern gc1269*store1269;
extern int store_left1269;
extern fsoc*store_chunk1269;
extern gc1269*gc_free1269;
typedef struct B1270 gc1270;
struct B1270{T1270 object;union {void*flag;gc1270*next;} header;};
extern gc1270*store1270;
extern int store_left1270;
extern fsoc*store_chunk1270;
extern gc1270*gc_free1270;
extern na_env na_env1271;
extern na_env na_env1272;
typedef struct B1273 gc1273;
struct B1273{T1273 object;union {void*flag;gc1273*next;} header;};
extern gc1273*store1273;
extern int store_left1273;
extern fsoc*store_chunk1273;
extern gc1273*gc_free1273;
typedef struct B1274 gc1274;
struct B1274{T1274 object;union {void*flag;gc1274*next;} header;};
extern gc1274*store1274;
extern int store_left1274;
extern fsoc*store_chunk1274;
extern gc1274*gc_free1274;
extern na_env na_env1275;
typedef struct B1276 gc1276;
struct B1276{T1276 object;union {void*flag;gc1276*next;} header;};
extern gc1276*store1276;
extern int store_left1276;
extern fsoc*store_chunk1276;
extern gc1276*gc_free1276;
typedef struct B1277 gc1277;
struct B1277{T1277 object;union {void*flag;gc1277*next;} header;};
extern gc1277*store1277;
extern int store_left1277;
extern fsoc*store_chunk1277;
extern gc1277*gc_free1277;
extern na_env na_env1278;
extern na_env na_env1279;
typedef struct B1280 gc1280;
struct B1280{T1280 object;union {void*flag;gc1280*next;} header;};
extern gc1280*store1280;
extern int store_left1280;
extern fsoc*store_chunk1280;
extern gc1280*gc_free1280;
typedef struct B1281 gc1281;
struct B1281{T1281 object;union {void*flag;gc1281*next;} header;};
extern gc1281*store1281;
extern int store_left1281;
extern fsoc*store_chunk1281;
extern gc1281*gc_free1281;
typedef struct B1282 gc1282;
struct B1282{T1282 object;union {void*flag;gc1282*next;} header;};
extern gc1282*store1282;
extern int store_left1282;
extern fsoc*store_chunk1282;
extern gc1282*gc_free1282;
extern na_env na_env1283;
typedef struct B1284 gc1284;
struct B1284{T1284 object;union {void*flag;gc1284*next;} header;};
extern gc1284*store1284;
extern int store_left1284;
extern fsoc*store_chunk1284;
extern gc1284*gc_free1284;
extern na_env na_env1285;
typedef struct B407 gc407;
struct B407{T407 object;union {void*flag;gc407*next;} header;};
extern gc407*store407;
extern int store_left407;
extern fsoc*store_chunk407;
extern gc407*gc_free407;
typedef struct B722 gc722;
struct B722{T722 object;union {void*flag;gc722*next;} header;};
extern gc722*store722;
extern int store_left722;
extern fsoc*store_chunk722;
extern gc722*gc_free722;
extern na_env na_env1286;
typedef struct B1287 gc1287;
struct B1287{T1287 object;union {void*flag;gc1287*next;} header;};
extern gc1287*store1287;
extern int store_left1287;
extern fsoc*store_chunk1287;
extern gc1287*gc_free1287;
typedef struct B1288 gc1288;
struct B1288{T1288 object;union {void*flag;gc1288*next;} header;};
extern gc1288*store1288;
extern int store_left1288;
extern fsoc*store_chunk1288;
extern gc1288*gc_free1288;
extern na_env na_env1289;
typedef struct B1290 gc1290;
struct B1290{T1290 object;union {void*flag;gc1290*next;} header;};
extern gc1290*store1290;
extern int store_left1290;
extern fsoc*store_chunk1290;
extern gc1290*gc_free1290;
typedef struct B1291 gc1291;
struct B1291{T1291 object;union {void*flag;gc1291*next;} header;};
extern gc1291*store1291;
extern int store_left1291;
extern fsoc*store_chunk1291;
extern gc1291*gc_free1291;
extern na_env na_env1292;
extern na_env na_env1293;
typedef struct B1294 gc1294;
struct B1294{T1294 object;union {void*flag;gc1294*next;} header;};
extern gc1294*store1294;
extern int store_left1294;
extern fsoc*store_chunk1294;
extern gc1294*gc_free1294;
typedef struct B1295 gc1295;
struct B1295{T1295 object;union {void*flag;gc1295*next;} header;};
extern gc1295*store1295;
extern int store_left1295;
extern fsoc*store_chunk1295;
extern gc1295*gc_free1295;
typedef struct B1296 gc1296;
struct B1296{T1296 object;union {void*flag;gc1296*next;} header;};
extern gc1296*store1296;
extern int store_left1296;
extern fsoc*store_chunk1296;
extern gc1296*gc_free1296;
typedef struct B1297 gc1297;
struct B1297{T1297 object;union {void*flag;gc1297*next;} header;};
extern gc1297*store1297;
extern int store_left1297;
extern fsoc*store_chunk1297;
extern gc1297*gc_free1297;
extern na_env na_env1298;
typedef struct B1299 gc1299;
struct B1299{T1299 object;union {void*flag;gc1299*next;} header;};
extern gc1299*store1299;
extern int store_left1299;
extern fsoc*store_chunk1299;
extern gc1299*gc_free1299;
typedef struct B1300 gc1300;
struct B1300{T1300 object;union {void*flag;gc1300*next;} header;};
extern gc1300*store1300;
extern int store_left1300;
extern fsoc*store_chunk1300;
extern gc1300*gc_free1300;
extern na_env na_env1301;
extern na_env na_env1302;
extern na_env na_env1303;
typedef struct B1304 gc1304;
struct B1304{T1304 object;union {void*flag;gc1304*next;} header;};
extern gc1304*store1304;
extern int store_left1304;
extern fsoc*store_chunk1304;
extern gc1304*gc_free1304;
typedef struct B1305 gc1305;
struct B1305{T1305 object;union {void*flag;gc1305*next;} header;};
extern gc1305*store1305;
extern int store_left1305;
extern fsoc*store_chunk1305;
extern gc1305*gc_free1305;
extern na_env na_env1306;
extern na_env na_env1307;
extern na_env na_env1308;
typedef struct B350 gc350;
struct B350{T350 object;union {void*flag;gc350*next;} header;};
extern gc350*store350;
extern int store_left350;
extern fsoc*store_chunk350;
extern gc350*gc_free350;
typedef struct B1309 gc1309;
struct B1309{T1309 object;union {void*flag;gc1309*next;} header;};
extern gc1309*store1309;
extern int store_left1309;
extern fsoc*store_chunk1309;
extern gc1309*gc_free1309;
extern na_env na_env1310;
typedef struct B1311 gc1311;
struct B1311{T1311 object;union {void*flag;gc1311*next;} header;};
extern gc1311*store1311;
extern int store_left1311;
extern fsoc*store_chunk1311;
extern gc1311*gc_free1311;
extern na_env na_env1312;
typedef struct B1313 gc1313;
struct B1313{T1313 object;union {void*flag;gc1313*next;} header;};
extern gc1313*store1313;
extern int store_left1313;
extern fsoc*store_chunk1313;
extern gc1313*gc_free1313;
extern na_env na_env1314;
typedef struct B1315 gc1315;
struct B1315{T1315 object;union {void*flag;gc1315*next;} header;};
extern gc1315*store1315;
extern int store_left1315;
extern fsoc*store_chunk1315;
extern gc1315*gc_free1315;
extern na_env na_env1316;
extern na_env na_env1317;
typedef struct B1318 gc1318;
struct B1318{T1318 object;union {void*flag;gc1318*next;} header;};
extern gc1318*store1318;
extern int store_left1318;
extern fsoc*store_chunk1318;
extern gc1318*gc_free1318;
typedef struct B1319 gc1319;
struct B1319{T1319 object;union {void*flag;gc1319*next;} header;};
extern gc1319*store1319;
extern int store_left1319;
extern fsoc*store_chunk1319;
extern gc1319*gc_free1319;
typedef struct B1321 gc1321;
struct B1321{T1321 object;union {void*flag;gc1321*next;} header;};
extern gc1321*store1321;
extern int store_left1321;
extern fsoc*store_chunk1321;
extern gc1321*gc_free1321;
typedef struct B758 gc758;
struct B758{T758 object;union {void*flag;gc758*next;} header;};
extern gc758*store758;
extern int store_left758;
extern fsoc*store_chunk758;
extern gc758*gc_free758;
typedef struct B759 gc759;
struct B759{T759 object;union {void*flag;gc759*next;} header;};
extern gc759*store759;
extern int store_left759;
extern fsoc*store_chunk759;
extern gc759*gc_free759;
typedef struct B760 gc760;
struct B760{T760 object;union {void*flag;gc760*next;} header;};
extern gc760*store760;
extern int store_left760;
extern fsoc*store_chunk760;
extern gc760*gc_free760;
typedef struct B755 gc755;
struct B755{T755 object;union {void*flag;gc755*next;} header;};
extern gc755*store755;
extern int store_left755;
extern fsoc*store_chunk755;
extern gc755*gc_free755;
typedef struct B756 gc756;
struct B756{T756 object;union {void*flag;gc756*next;} header;};
extern gc756*store756;
extern int store_left756;
extern fsoc*store_chunk756;
extern gc756*gc_free756;
typedef struct B757 gc757;
struct B757{T757 object;union {void*flag;gc757*next;} header;};
extern gc757*store757;
extern int store_left757;
extern fsoc*store_chunk757;
extern gc757*gc_free757;
typedef struct B1322 gc1322;
struct B1322{T1322 object;union {void*flag;gc1322*next;} header;};
extern gc1322*store1322;
extern int store_left1322;
extern fsoc*store_chunk1322;
extern gc1322*gc_free1322;
extern na_env na_env1323;
typedef struct B1324 gc1324;
struct B1324{T1324 object;union {void*flag;gc1324*next;} header;};
extern gc1324*store1324;
extern int store_left1324;
extern fsoc*store_chunk1324;
extern gc1324*gc_free1324;
extern na_env na_env1325;
typedef struct B1326 gc1326;
struct B1326{T1326 object;union {void*flag;gc1326*next;} header;};
extern gc1326*store1326;
extern int store_left1326;
extern fsoc*store_chunk1326;
extern gc1326*gc_free1326;
typedef struct B1327 gc1327;
struct B1327{T1327 object;union {void*flag;gc1327*next;} header;};
extern gc1327*store1327;
extern int store_left1327;
extern fsoc*store_chunk1327;
extern gc1327*gc_free1327;
extern na_env na_env1328;
extern na_env na_env1329;
typedef struct B1330 gc1330;
struct B1330{T1330 object;union {void*flag;gc1330*next;} header;};
extern gc1330*store1330;
extern int store_left1330;
extern fsoc*store_chunk1330;
extern gc1330*gc_free1330;
typedef struct B1331 gc1331;
struct B1331{T1331 object;union {void*flag;gc1331*next;} header;};
extern gc1331*store1331;
extern int store_left1331;
extern fsoc*store_chunk1331;
extern gc1331*gc_free1331;
extern na_env na_env1332;
typedef struct B1333 gc1333;
struct B1333{T1333 object;union {void*flag;gc1333*next;} header;};
extern gc1333*store1333;
extern int store_left1333;
extern fsoc*store_chunk1333;
extern gc1333*gc_free1333;
typedef struct B1334 gc1334;
struct B1334{T1334 object;union {void*flag;gc1334*next;} header;};
extern gc1334*store1334;
extern int store_left1334;
extern fsoc*store_chunk1334;
extern gc1334*gc_free1334;
extern na_env na_env1335;
typedef struct B1336 gc1336;
struct B1336{T1336 object;union {void*flag;gc1336*next;} header;};
extern gc1336*store1336;
extern int store_left1336;
extern fsoc*store_chunk1336;
extern gc1336*gc_free1336;
typedef struct B1337 gc1337;
struct B1337{T1337 object;union {void*flag;gc1337*next;} header;};
extern gc1337*store1337;
extern int store_left1337;
extern fsoc*store_chunk1337;
extern gc1337*gc_free1337;
extern na_env na_env1338;
typedef struct B1339 gc1339;
struct B1339{T1339 object;union {void*flag;gc1339*next;} header;};
extern gc1339*store1339;
extern int store_left1339;
extern fsoc*store_chunk1339;
extern gc1339*gc_free1339;
extern na_env na_env1340;
extern na_env na_env1341;
extern na_env na_env1342;
extern na_env na_env1343;
extern na_env na_env1344;
typedef struct B1345 gc1345;
struct B1345{T1345 object;union {void*flag;gc1345*next;} header;};
extern gc1345*store1345;
extern int store_left1345;
extern fsoc*store_chunk1345;
extern gc1345*gc_free1345;
extern na_env na_env1346;
extern na_env na_env1347;
typedef struct B1348 gc1348;
struct B1348{T1348 object;union {void*flag;gc1348*next;} header;};
extern gc1348*store1348;
extern int store_left1348;
extern fsoc*store_chunk1348;
extern gc1348*gc_free1348;
typedef struct B1349 gc1349;
struct B1349{T1349 object;union {void*flag;gc1349*next;} header;};
extern gc1349*store1349;
extern int store_left1349;
extern fsoc*store_chunk1349;
extern gc1349*gc_free1349;
extern na_env na_env1350;
extern na_env na_env1351;
extern na_env na_env1352;
extern na_env na_env1353;
extern na_env na_env1354;
typedef struct B1355 gc1355;
struct B1355{T1355 object;union {void*flag;gc1355*next;} header;};
extern gc1355*store1355;
extern int store_left1355;
extern fsoc*store_chunk1355;
extern gc1355*gc_free1355;
typedef struct B1356 gc1356;
struct B1356{T1356 object;union {void*flag;gc1356*next;} header;};
extern gc1356*store1356;
extern int store_left1356;
extern fsoc*store_chunk1356;
extern gc1356*gc_free1356;
typedef struct B811 gc811;
struct B811{T811 object;union {void*flag;gc811*next;} header;};
extern gc811*store811;
extern int store_left811;
extern fsoc*store_chunk811;
extern gc811*gc_free811;
extern na_env na_env1357;
typedef struct B1358 gc1358;
struct B1358{T1358 object;union {void*flag;gc1358*next;} header;};
extern gc1358*store1358;
extern int store_left1358;
extern fsoc*store_chunk1358;
extern gc1358*gc_free1358;
typedef struct B1359 gc1359;
struct B1359{T1359 object;union {void*flag;gc1359*next;} header;};
extern gc1359*store1359;
extern int store_left1359;
extern fsoc*store_chunk1359;
extern gc1359*gc_free1359;
typedef struct B1360 gc1360;
struct B1360{T1360 object;union {void*flag;gc1360*next;} header;};
extern gc1360*store1360;
extern int store_left1360;
extern fsoc*store_chunk1360;
extern gc1360*gc_free1360;
typedef struct B1361 gc1361;
struct B1361{T1361 object;union {void*flag;gc1361*next;} header;};
extern gc1361*store1361;
extern int store_left1361;
extern fsoc*store_chunk1361;
extern gc1361*gc_free1361;
extern na_env na_env1362;
typedef struct B1363 gc1363;
struct B1363{T1363 object;union {void*flag;gc1363*next;} header;};
extern gc1363*store1363;
extern int store_left1363;
extern fsoc*store_chunk1363;
extern gc1363*gc_free1363;
typedef struct B1364 gc1364;
struct B1364{T1364 object;union {void*flag;gc1364*next;} header;};
extern gc1364*store1364;
extern int store_left1364;
extern fsoc*store_chunk1364;
extern gc1364*gc_free1364;
extern na_env na_env1365;
typedef struct B331 gc331;
struct B331{T331 object;union {void*flag;gc331*next;} header;};
extern gc331*store331;
extern int store_left331;
extern fsoc*store_chunk331;
extern gc331*gc_free331;
typedef struct B1366 gc1366;
struct B1366{T1366 object;union {void*flag;gc1366*next;} header;};
extern gc1366*store1366;
extern int store_left1366;
extern fsoc*store_chunk1366;
extern gc1366*gc_free1366;
typedef struct B1367 gc1367;
struct B1367{T1367 object;union {void*flag;gc1367*next;} header;};
extern gc1367*store1367;
extern int store_left1367;
extern fsoc*store_chunk1367;
extern gc1367*gc_free1367;
typedef struct B1368 gc1368;
struct B1368{T1368 object;union {void*flag;gc1368*next;} header;};
extern gc1368*store1368;
extern int store_left1368;
extern fsoc*store_chunk1368;
extern gc1368*gc_free1368;
typedef struct B1369 gc1369;
struct B1369{T1369 object;union {void*flag;gc1369*next;} header;};
extern gc1369*store1369;
extern int store_left1369;
extern fsoc*store_chunk1369;
extern gc1369*gc_free1369;
typedef struct B1371 gc1371;
struct B1371{T1371 object;union {void*flag;gc1371*next;} header;};
extern gc1371*store1371;
extern int store_left1371;
extern fsoc*store_chunk1371;
extern gc1371*gc_free1371;
extern na_env na_env1372;
typedef struct B1373 gc1373;
struct B1373{T1373 object;union {void*flag;gc1373*next;} header;};
extern gc1373*store1373;
extern int store_left1373;
extern fsoc*store_chunk1373;
extern gc1373*gc_free1373;
typedef struct B1374 gc1374;
struct B1374{T1374 object;union {void*flag;gc1374*next;} header;};
extern gc1374*store1374;
extern int store_left1374;
extern fsoc*store_chunk1374;
extern gc1374*gc_free1374;
extern na_env na_env1375;
typedef struct B1376 gc1376;
struct B1376{T1376 object;union {void*flag;gc1376*next;} header;};
extern gc1376*store1376;
extern int store_left1376;
extern fsoc*store_chunk1376;
extern gc1376*gc_free1376;
extern na_env na_env1377;
typedef struct B1380 gc1380;
struct B1380{T1380 object;union {void*flag;gc1380*next;} header;};
extern gc1380*store1380;
extern int store_left1380;
extern fsoc*store_chunk1380;
extern gc1380*gc_free1380;
typedef struct B1381 gc1381;
struct B1381{T1381 object;union {void*flag;gc1381*next;} header;};
extern gc1381*store1381;
extern int store_left1381;
extern fsoc*store_chunk1381;
extern gc1381*gc_free1381;
typedef struct B1382 gc1382;
struct B1382{T1382 object;union {void*flag;gc1382*next;} header;};
extern gc1382*store1382;
extern int store_left1382;
extern fsoc*store_chunk1382;
extern gc1382*gc_free1382;
typedef struct B1383 gc1383;
struct B1383{T1383 object;union {void*flag;gc1383*next;} header;};
extern gc1383*store1383;
extern int store_left1383;
extern fsoc*store_chunk1383;
extern gc1383*gc_free1383;
typedef struct B1384 gc1384;
struct B1384{T1384 object;union {void*flag;gc1384*next;} header;};
extern gc1384*store1384;
extern int store_left1384;
extern fsoc*store_chunk1384;
extern gc1384*gc_free1384;
typedef struct B1387 gc1387;
struct B1387{T1387 object;union {void*flag;gc1387*next;} header;};
extern gc1387*store1387;
extern int store_left1387;
extern fsoc*store_chunk1387;
extern gc1387*gc_free1387;
typedef struct B1388 gc1388;
struct B1388{T1388 object;union {void*flag;gc1388*next;} header;};
extern gc1388*store1388;
extern int store_left1388;
extern fsoc*store_chunk1388;
extern gc1388*gc_free1388;
typedef struct B1389 gc1389;
struct B1389{T1389 object;union {void*flag;gc1389*next;} header;};
extern gc1389*store1389;
extern int store_left1389;
extern fsoc*store_chunk1389;
extern gc1389*gc_free1389;
typedef struct B1390 gc1390;
struct B1390{T1390 object;union {void*flag;gc1390*next;} header;};
extern gc1390*store1390;
extern int store_left1390;
extern fsoc*store_chunk1390;
extern gc1390*gc_free1390;
extern na_env na_env1391;
extern na_env na_env1392;
typedef struct B1393 gc1393;
struct B1393{T1393 object;union {void*flag;gc1393*next;} header;};
extern gc1393*store1393;
extern int store_left1393;
extern fsoc*store_chunk1393;
extern gc1393*gc_free1393;
typedef struct B1394 gc1394;
struct B1394{T1394 object;union {void*flag;gc1394*next;} header;};
extern gc1394*store1394;
extern int store_left1394;
extern fsoc*store_chunk1394;
extern gc1394*gc_free1394;
extern na_env na_env1395;
typedef struct B54 gc54;
struct B54{T54 object;union {void*flag;gc54*next;} header;};
extern gc54*store54;
extern int store_left54;
extern fsoc*store_chunk54;
extern gc54*gc_free54;
typedef struct B764 gc764;
struct B764{T764 object;union {void*flag;gc764*next;} header;};
extern gc764*store764;
extern int store_left764;
extern fsoc*store_chunk764;
extern gc764*gc_free764;
typedef struct B650 gc650;
struct B650{T650 object;union {void*flag;gc650*next;} header;};
extern gc650*store650;
extern int store_left650;
extern fsoc*store_chunk650;
extern gc650*gc_free650;

#define gc_mark1398(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1400 gc1400;
struct B1400{T1400 object;union {void*flag;gc1400*next;} header;};
extern gc1400*store1400;
extern int store_left1400;
extern fsoc*store_chunk1400;
extern gc1400*gc_free1400;
typedef struct B1401 gc1401;
struct B1401{T1401 object;union {void*flag;gc1401*next;} header;};
extern gc1401*store1401;
extern int store_left1401;
extern fsoc*store_chunk1401;
extern gc1401*gc_free1401;
typedef struct B1403 gc1403;
struct B1403{T1403 object;union {void*flag;gc1403*next;} header;};
extern gc1403*store1403;
extern int store_left1403;
extern fsoc*store_chunk1403;
extern gc1403*gc_free1403;
typedef struct B1406 gc1406;
struct B1406{T1406 object;union {void*flag;gc1406*next;} header;};
extern gc1406*store1406;
extern int store_left1406;
extern fsoc*store_chunk1406;
extern gc1406*gc_free1406;
typedef struct B656 gc656;
struct B656{T656 object;union {void*flag;gc656*next;} header;};
extern gc656*store656;
extern int store_left656;
extern fsoc*store_chunk656;
extern gc656*gc_free656;
typedef struct B659 gc659;
struct B659{T659 object;union {void*flag;gc659*next;} header;};
extern gc659*store659;
extern int store_left659;
extern fsoc*store_chunk659;
extern gc659*gc_free659;
typedef struct B660 gc660;
struct B660{T660 object;union {void*flag;gc660*next;} header;};
extern gc660*store660;
extern int store_left660;
extern fsoc*store_chunk660;
extern gc660*gc_free660;
typedef struct B663 gc663;
struct B663{T663 object;union {void*flag;gc663*next;} header;};
extern gc663*store663;
extern int store_left663;
extern fsoc*store_chunk663;
extern gc663*gc_free663;
typedef struct B665 gc665;
struct B665{T665 object;union {void*flag;gc665*next;} header;};
extern gc665*store665;
extern int store_left665;
extern fsoc*store_chunk665;
extern gc665*gc_free665;
typedef struct B658 gc658;
struct B658{T658 object;union {void*flag;gc658*next;} header;};
extern gc658*store658;
extern int store_left658;
extern fsoc*store_chunk658;
extern gc658*gc_free658;
typedef struct B653 gc653;
struct B653{T653 object;union {void*flag;gc653*next;} header;};
extern gc653*store653;
extern int store_left653;
extern fsoc*store_chunk653;
extern gc653*gc_free653;
typedef struct B664 gc664;
struct B664{T664 object;union {void*flag;gc664*next;} header;};
extern gc664*store664;
extern int store_left664;
extern fsoc*store_chunk664;
extern gc664*gc_free664;
typedef struct B646 gc646;
struct B646{T646 object;union {void*flag;gc646*next;} header;};
extern gc646*store646;
extern int store_left646;
extern fsoc*store_chunk646;
extern gc646*gc_free646;
typedef struct B1407 gc1407;
struct B1407{T1407 object;union {void*flag;gc1407*next;} header;};
extern gc1407*store1407;
extern int store_left1407;
extern fsoc*store_chunk1407;
extern gc1407*gc_free1407;
typedef struct B1408 gc1408;
struct B1408{T1408 object;union {void*flag;gc1408*next;} header;};
extern gc1408*store1408;
extern int store_left1408;
extern fsoc*store_chunk1408;
extern gc1408*gc_free1408;
typedef struct B517 gc517;
struct B517{T517 object;union {void*flag;gc517*next;} header;};
extern gc517*store517;
extern int store_left517;
extern fsoc*store_chunk517;
extern gc517*gc_free517;
typedef struct B1409 gc1409;
struct B1409{T1409 object;union {void*flag;gc1409*next;} header;};
extern gc1409*store1409;
extern int store_left1409;
extern fsoc*store_chunk1409;
extern gc1409*gc_free1409;
typedef struct B667 gc667;
struct B667{T667 object;union {void*flag;gc667*next;} header;};
extern gc667*store667;
extern int store_left667;
extern fsoc*store_chunk667;
extern gc667*gc_free667;
typedef struct B655 gc655;
struct B655{T655 object;union {void*flag;gc655*next;} header;};
extern gc655*store655;
extern int store_left655;
extern fsoc*store_chunk655;
extern gc655*gc_free655;
typedef struct B651 gc651;
struct B651{T651 object;union {void*flag;gc651*next;} header;};
extern gc651*store651;
extern int store_left651;
extern fsoc*store_chunk651;
extern gc651*gc_free651;
typedef struct B1410 gc1410;
struct B1410{T1410 object;union {void*flag;gc1410*next;} header;};
extern gc1410*store1410;
extern int store_left1410;
extern fsoc*store_chunk1410;
extern gc1410*gc_free1410;
typedef struct B1411 gc1411;
struct B1411{T1411 object;union {void*flag;gc1411*next;} header;};
extern gc1411*store1411;
extern int store_left1411;
extern fsoc*store_chunk1411;
extern gc1411*gc_free1411;
typedef struct B1412 gc1412;
struct B1412{T1412 object;union {void*flag;gc1412*next;} header;};
extern gc1412*store1412;
extern int store_left1412;
extern fsoc*store_chunk1412;
extern gc1412*gc_free1412;
typedef struct B1413 gc1413;
struct B1413{T1413 object;union {void*flag;gc1413*next;} header;};
extern gc1413*store1413;
extern int store_left1413;
extern fsoc*store_chunk1413;
extern gc1413*gc_free1413;
typedef struct B1414 gc1414;
struct B1414{T1414 object;union {void*flag;gc1414*next;} header;};
extern gc1414*store1414;
extern int store_left1414;
extern fsoc*store_chunk1414;
extern gc1414*gc_free1414;
extern na_env na_env1415;
typedef struct B1420 gc1420;
struct B1420{T1420 object;union {void*flag;gc1420*next;} header;};
extern gc1420*store1420;
extern int store_left1420;
extern fsoc*store_chunk1420;
extern gc1420*gc_free1420;
typedef struct B520 gc520;
struct B520{T520 object;union {void*flag;gc520*next;} header;};
extern gc520*store520;
extern int store_left520;
extern fsoc*store_chunk520;
extern gc520*gc_free520;
typedef struct B115 gc115;
struct B115{T115 object;union {void*flag;gc115*next;} header;};
extern gc115*store115;
extern int store_left115;
extern fsoc*store_chunk115;
extern gc115*gc_free115;
typedef struct B723 gc723;
struct B723{T723 object;union {void*flag;gc723*next;} header;};
extern gc723*store723;
extern int store_left723;
extern fsoc*store_chunk723;
extern gc723*gc_free723;
typedef struct B728 gc728;
struct B728{T728 object;union {void*flag;gc728*next;} header;};
extern gc728*store728;
extern int store_left728;
extern fsoc*store_chunk728;
extern gc728*gc_free728;
typedef struct B109 gc109;
struct B109{T109 object;union {void*flag;gc109*next;} header;};
extern gc109*store109;
extern int store_left109;
extern fsoc*store_chunk109;
extern gc109*gc_free109;
typedef struct B1422 gc1422;
struct B1422{T1422 object;union {void*flag;gc1422*next;} header;};
extern gc1422*store1422;
extern int store_left1422;
extern fsoc*store_chunk1422;
extern gc1422*gc_free1422;
typedef struct B408 gc408;
struct B408{T408 object;union {void*flag;gc408*next;} header;};
extern gc408*store408;
extern int store_left408;
extern fsoc*store_chunk408;
extern gc408*gc_free408;
typedef struct B405 gc405;
struct B405{T405 object;union {void*flag;gc405*next;} header;};
extern gc405*store405;
extern int store_left405;
extern fsoc*store_chunk405;
extern gc405*gc_free405;
typedef struct B360 gc360;
struct B360{T360 object;union {void*flag;gc360*next;} header;};
extern gc360*store360;
extern int store_left360;
extern fsoc*store_chunk360;
extern gc360*gc_free360;
typedef struct B773 gc773;
struct B773{T773 object;union {void*flag;gc773*next;} header;};
extern gc773*store773;
extern int store_left773;
extern fsoc*store_chunk773;
extern gc773*gc_free773;
typedef struct B629 gc629;
struct B629{T629 object;union {void*flag;gc629*next;} header;};
extern gc629*store629;
extern int store_left629;
extern fsoc*store_chunk629;
extern gc629*gc_free629;
typedef struct B775 gc775;
struct B775{T775 object;union {void*flag;gc775*next;} header;};
extern gc775*store775;
extern int store_left775;
extern fsoc*store_chunk775;
extern gc775*gc_free775;
typedef struct B772 gc772;
struct B772{T772 object;union {void*flag;gc772*next;} header;};
extern gc772*store772;
extern int store_left772;
extern fsoc*store_chunk772;
extern gc772*gc_free772;
typedef struct B524 gc524;
struct B524{T524 object;union {void*flag;gc524*next;} header;};
extern gc524*store524;
extern int store_left524;
extern fsoc*store_chunk524;
extern gc524*gc_free524;
typedef struct B774 gc774;
struct B774{T774 object;union {void*flag;gc774*next;} header;};
extern gc774*store774;
extern int store_left774;
extern fsoc*store_chunk774;
extern gc774*gc_free774;
typedef struct B628 gc628;
struct B628{T628 object;union {void*flag;gc628*next;} header;};
extern gc628*store628;
extern int store_left628;
extern fsoc*store_chunk628;
extern gc628*gc_free628;
typedef struct B1423 gc1423;
struct B1423{T1423 object;union {void*flag;gc1423*next;} header;};
extern gc1423*store1423;
extern int store_left1423;
extern fsoc*store_chunk1423;
extern gc1423*gc_free1423;
typedef struct B813 gc813;
struct B813{T813 object;union {void*flag;gc813*next;} header;};
extern gc813*store813;
extern int store_left813;
extern fsoc*store_chunk813;
extern gc813*gc_free813;
typedef struct B815 gc815;
struct B815{T815 object;union {void*flag;gc815*next;} header;};
extern gc815*store815;
extern int store_left815;
extern fsoc*store_chunk815;
extern gc815*gc_free815;
typedef struct B816 gc816;
struct B816{T816 object;union {void*flag;gc816*next;} header;};
extern gc816*store816;
extern int store_left816;
extern fsoc*store_chunk816;
extern gc816*gc_free816;
typedef struct B817 gc817;
struct B817{T817 object;union {void*flag;gc817*next;} header;};
extern gc817*store817;
extern int store_left817;
extern fsoc*store_chunk817;
extern gc817*gc_free817;
typedef struct B1424 gc1424;
struct B1424{T1424 object;union {void*flag;gc1424*next;} header;};
extern gc1424*store1424;
extern int store_left1424;
extern fsoc*store_chunk1424;
extern gc1424*gc_free1424;
extern na_env na_env1425;
typedef struct B1426 gc1426;
struct B1426{T1426 object;union {void*flag;gc1426*next;} header;};
extern gc1426*store1426;
extern int store_left1426;
extern fsoc*store_chunk1426;
extern gc1426*gc_free1426;
extern na_env na_env1427;
typedef struct B1428 gc1428;
struct B1428{T1428 object;union {void*flag;gc1428*next;} header;};
extern gc1428*store1428;
extern int store_left1428;
extern fsoc*store_chunk1428;
extern gc1428*gc_free1428;
typedef struct B1429 gc1429;
struct B1429{T1429 object;union {void*flag;gc1429*next;} header;};
extern gc1429*store1429;
extern int store_left1429;
extern fsoc*store_chunk1429;
extern gc1429*gc_free1429;
typedef struct B1430 gc1430;
struct B1430{T1430 object;union {void*flag;gc1430*next;} header;};
extern gc1430*store1430;
extern int store_left1430;
extern fsoc*store_chunk1430;
extern gc1430*gc_free1430;
typedef struct B1431 gc1431;
struct B1431{T1431 object;union {void*flag;gc1431*next;} header;};
extern gc1431*store1431;
extern int store_left1431;
extern fsoc*store_chunk1431;
extern gc1431*gc_free1431;
extern na_env na_env1432;
typedef struct B1433 gc1433;
struct B1433{T1433 object;union {void*flag;gc1433*next;} header;};
extern gc1433*store1433;
extern int store_left1433;
extern fsoc*store_chunk1433;
extern gc1433*gc_free1433;
typedef struct B1434 gc1434;
struct B1434{T1434 object;union {void*flag;gc1434*next;} header;};
extern gc1434*store1434;
extern int store_left1434;
extern fsoc*store_chunk1434;
extern gc1434*gc_free1434;
extern na_env na_env1435;
typedef struct B1436 gc1436;
struct B1436{T1436 object;union {void*flag;gc1436*next;} header;};
extern gc1436*store1436;
extern int store_left1436;
extern fsoc*store_chunk1436;
extern gc1436*gc_free1436;
typedef struct B1437 gc1437;
struct B1437{T1437 object;union {void*flag;gc1437*next;} header;};
extern gc1437*store1437;
extern int store_left1437;
extern fsoc*store_chunk1437;
extern gc1437*gc_free1437;
typedef struct B1440 gc1440;
struct B1440{T1440 object;union {void*flag;gc1440*next;} header;};
extern gc1440*store1440;
extern int store_left1440;
extern fsoc*store_chunk1440;
extern gc1440*gc_free1440;
typedef struct B1441 gc1441;
struct B1441{T1441 object;union {void*flag;gc1441*next;} header;};
extern gc1441*store1441;
extern int store_left1441;
extern fsoc*store_chunk1441;
extern gc1441*gc_free1441;
extern na_env na_env1442;
typedef struct B661 gc661;
struct B661{T661 object;union {void*flag;gc661*next;} header;};
extern gc661*store661;
extern int store_left661;
extern fsoc*store_chunk661;
extern gc661*gc_free661;
extern na_env na_env1443;
extern na_env na_env1444;
typedef struct B693 gc693;
struct B693{T693 object;union {void*flag;gc693*next;} header;};
extern gc693*store693;
extern int store_left693;
extern fsoc*store_chunk693;
extern gc693*gc_free693;
extern na_env na_env1445;
typedef struct B1446 gc1446;
struct B1446{T1446 object;union {void*flag;gc1446*next;} header;};
extern gc1446*store1446;
extern int store_left1446;
extern fsoc*store_chunk1446;
extern gc1446*gc_free1446;
typedef struct B1447 gc1447;
struct B1447{T1447 object;union {void*flag;gc1447*next;} header;};
extern gc1447*store1447;
extern int store_left1447;
extern fsoc*store_chunk1447;
extern gc1447*gc_free1447;
extern na_env na_env1448;
extern na_env na_env1449;
extern na_env na_env1450;
extern na_env na_env1451;
typedef struct B1453 gc1453;
struct B1453{T1453 object;union {void*flag;gc1453*next;} header;};
extern gc1453*store1453;
extern int store_left1453;
extern fsoc*store_chunk1453;
extern gc1453*gc_free1453;
typedef struct B1454 gc1454;
struct B1454{T1454 object;union {void*flag;gc1454*next;} header;};
extern gc1454*store1454;
extern int store_left1454;
extern fsoc*store_chunk1454;
extern gc1454*gc_free1454;
extern na_env na_env1455;
typedef struct B966 gc966;
struct B966{T966 object;union {void*flag;gc966*next;} header;};
extern gc966*store966;
extern int store_left966;
extern fsoc*store_chunk966;
extern gc966*gc_free966;
typedef struct B624 gc624;
struct B624{T624 object;union {void*flag;gc624*next;} header;};
extern gc624*store624;
extern int store_left624;
extern fsoc*store_chunk624;
extern gc624*gc_free624;
typedef struct B550 gc550;
struct B550{T550 object;union {void*flag;gc550*next;} header;};
extern gc550*store550;
extern int store_left550;
extern fsoc*store_chunk550;
extern gc550*gc_free550;

#define gc_mark1456(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1458(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1460(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1462(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1464(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1466(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1468 gc1468;
struct B1468{T1468 object;union {void*flag;gc1468*next;} header;};
extern gc1468*store1468;
extern int store_left1468;
extern fsoc*store_chunk1468;
extern gc1468*gc_free1468;
typedef struct B1469 gc1469;
struct B1469{T1469 object;union {void*flag;gc1469*next;} header;};
extern gc1469*store1469;
extern int store_left1469;
extern fsoc*store_chunk1469;
extern gc1469*gc_free1469;
typedef struct B544 gc544;
struct B544{T544 object;union {void*flag;gc544*next;} header;};
extern gc544*store544;
extern int store_left544;
extern fsoc*store_chunk544;
extern gc544*gc_free544;
typedef struct B545 gc545;
struct B545{T545 object;union {void*flag;gc545*next;} header;};
extern gc545*store545;
extern int store_left545;
extern fsoc*store_chunk545;
extern gc545*gc_free545;
typedef struct B546 gc546;
struct B546{T546 object;union {void*flag;gc546*next;} header;};
extern gc546*store546;
extern int store_left546;
extern fsoc*store_chunk546;
extern gc546*gc_free546;
typedef struct B547 gc547;
struct B547{T547 object;union {void*flag;gc547*next;} header;};
extern gc547*store547;
extern int store_left547;
extern fsoc*store_chunk547;
extern gc547*gc_free547;
typedef struct B548 gc548;
struct B548{T548 object;union {void*flag;gc548*next;} header;};
extern gc548*store548;
extern int store_left548;
extern fsoc*store_chunk548;
extern gc548*gc_free548;
typedef struct B549 gc549;
struct B549{T549 object;union {void*flag;gc549*next;} header;};
extern gc549*store549;
extern int store_left549;
extern fsoc*store_chunk549;
extern gc549*gc_free549;

#define gc_mark1472(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1475 gc1475;
struct B1475{T1475 object;union {void*flag;gc1475*next;} header;};
extern gc1475*store1475;
extern int store_left1475;
extern fsoc*store_chunk1475;
extern gc1475*gc_free1475;
typedef struct B1479 gc1479;
struct B1479{T1479 object;union {void*flag;gc1479*next;} header;};
extern gc1479*store1479;
extern int store_left1479;
extern fsoc*store_chunk1479;
extern gc1479*gc_free1479;
typedef struct B787 gc787;
struct B787{T787 object;union {void*flag;gc787*next;} header;};
extern gc787*store787;
extern int store_left787;
extern fsoc*store_chunk787;
extern gc787*gc_free787;
typedef struct B1481 gc1481;
struct B1481{T1481 object;union {void*flag;gc1481*next;} header;};
extern gc1481*store1481;
extern int store_left1481;
extern fsoc*store_chunk1481;
extern gc1481*gc_free1481;

#define gc_mark1482(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B784 gc784;
struct B784{T784 object;union {void*flag;gc784*next;} header;};
extern gc784*store784;
extern int store_left784;
extern fsoc*store_chunk784;
extern gc784*gc_free784;
typedef struct B1487 gc1487;
struct B1487{T1487 object;union {void*flag;gc1487*next;} header;};
extern gc1487*store1487;
extern int store_left1487;
extern fsoc*store_chunk1487;
extern gc1487*gc_free1487;
typedef struct B1488 gc1488;
struct B1488{T1488 object;union {void*flag;gc1488*next;} header;};
extern gc1488*store1488;
extern int store_left1488;
extern fsoc*store_chunk1488;
extern gc1488*gc_free1488;
typedef struct B698 gc698;
struct B698{T698 object;union {void*flag;gc698*next;} header;};
extern gc698*store698;
extern int store_left698;
extern fsoc*store_chunk698;
extern gc698*gc_free698;
typedef struct B1489 gc1489;
struct B1489{T1489 object;union {void*flag;gc1489*next;} header;};
extern gc1489*store1489;
extern int store_left1489;
extern fsoc*store_chunk1489;
extern gc1489*gc_free1489;
extern na_env na_env1490;
extern na_env na_env1491;
extern na_env na_env1492;
typedef struct B1493 gc1493;
struct B1493{T1493 object;union {void*flag;gc1493*next;} header;};
extern gc1493*store1493;
extern int store_left1493;
extern fsoc*store_chunk1493;
extern gc1493*gc_free1493;
typedef struct B1494 gc1494;
struct B1494{T1494 object;union {void*flag;gc1494*next;} header;};
extern gc1494*store1494;
extern int store_left1494;
extern fsoc*store_chunk1494;
extern gc1494*gc_free1494;
extern na_env na_env1495;
typedef struct B1496 gc1496;
struct B1496{T1496 object;union {void*flag;gc1496*next;} header;};
extern gc1496*store1496;
extern int store_left1496;
extern fsoc*store_chunk1496;
extern gc1496*gc_free1496;
extern na_env na_env1497;
typedef struct B695 gc695;
struct B695{T695 object;union {void*flag;gc695*next;} header;};
extern gc695*store695;
extern int store_left695;
extern fsoc*store_chunk695;
extern gc695*gc_free695;
extern na_env na_env1498;
extern na_env na_env1499;
typedef struct B1500 gc1500;
struct B1500{T1500 object;union {void*flag;gc1500*next;} header;};
extern gc1500*store1500;
extern int store_left1500;
extern fsoc*store_chunk1500;
extern gc1500*gc_free1500;
typedef struct B1501 gc1501;
struct B1501{T1501 object;union {void*flag;gc1501*next;} header;};
extern gc1501*store1501;
extern int store_left1501;
extern fsoc*store_chunk1501;
extern gc1501*gc_free1501;

#define gc_mark1503(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1506(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1509(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1511(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1514 gc1514;
struct B1514{T1514 object;union {void*flag;gc1514*next;} header;};
extern gc1514*store1514;
extern int store_left1514;
extern fsoc*store_chunk1514;
extern gc1514*gc_free1514;
typedef struct B771 gc771;
struct B771{T771 object;union {void*flag;gc771*next;} header;};
extern gc771*store771;
extern int store_left771;
extern fsoc*store_chunk771;
extern gc771*gc_free771;
typedef struct B1515 gc1515;
struct B1515{T1515 object;union {void*flag;gc1515*next;} header;};
extern gc1515*store1515;
extern int store_left1515;
extern fsoc*store_chunk1515;
extern gc1515*gc_free1515;
typedef struct B769 gc769;
struct B769{T769 object;union {void*flag;gc769*next;} header;};
extern gc769*store769;
extern int store_left769;
extern fsoc*store_chunk769;
extern gc769*gc_free769;
typedef struct B1518 gc1518;
struct B1518{T1518 object;union {void*flag;gc1518*next;} header;};
extern gc1518*store1518;
extern int store_left1518;
extern fsoc*store_chunk1518;
extern gc1518*gc_free1518;
extern na_env na_env1519;
typedef struct B1520 gc1520;
struct B1520{T1520 object;union {void*flag;gc1520*next;} header;};
extern gc1520*store1520;
extern int store_left1520;
extern fsoc*store_chunk1520;
extern gc1520*gc_free1520;
typedef struct B1521 gc1521;
struct B1521{T1521 object;union {void*flag;gc1521*next;} header;};
extern gc1521*store1521;
extern int store_left1521;
extern fsoc*store_chunk1521;
extern gc1521*gc_free1521;
void gc_sweep25(fsoc*c);
void gc_mark25(T25*o);
void gc_align_mark25(fsoc*c,gc25*p);
extern fsoc H25;
T25*new25(void);
void gc_sweep101(fsoc*c);
void gc_mark101(T101*o);
void gc_align_mark101(fsoc*c,gc101*p);
extern fsoc H101;
T101*new101(void);
void gc_sweep965(fsoc*c);
void gc_mark965(T965*o);
void gc_align_mark965(fsoc*c,gc965*p);
extern fsoc H965;
T965*new965(void);
void gc_sweep93(fsoc*c);
void gc_mark93(T93*o);
void gc_align_mark93(fsoc*c,gc93*p);
extern fsoc H93;
T93*new93(void);
void gc_sweep113(fsoc*c);
void gc_mark113(T113*o);
void gc_align_mark113(fsoc*c,gc113*p);
extern fsoc H113;
T113*new113(void);
void gc_sweep263(fsoc*c);
void gc_mark263(T263*o);
void gc_align_mark263(fsoc*c,gc263*p);
extern fsoc H263;
T263*new263(void);
void gc_sweep104(fsoc*c);
void gc_mark104(T104*o);
void gc_align_mark104(fsoc*c,gc104*p);
extern fsoc H104;
T104*new104(void);
void gc_sweep100(fsoc*c);
void gc_mark100(T100*o);
void gc_align_mark100(fsoc*c,gc100*p);
extern fsoc H100;
T100*new100(void);
void gc_sweep271(fsoc*c);
void gc_mark271(T271*o);
void gc_align_mark271(fsoc*c,gc271*p);
extern fsoc H271;
T271*new271(void);
void gc_sweep261(fsoc*c);
void gc_mark261(T261*o);
void gc_align_mark261(fsoc*c,gc261*p);
extern fsoc H261;
T261*new261(void);
void gc_sweep7(fsoc*c);
void gc_mark7(T7*o);
void gc_align_mark7(fsoc*c,gc7*p);
extern fsoc H7;
T7*new7(void);
void gc_mark9(T9 o);
T9 new9(unsigned int size);
void gc_sweep611(fsoc*c);
void gc_mark611(T611*o);
void gc_align_mark611(fsoc*c,gc611*p);
extern fsoc H611;
T611*new611(void);
void gc_sweep995(fsoc*c);
void gc_mark995(T995*o);
void gc_align_mark995(fsoc*c,gc995*p);
extern fsoc H995;
T995*new995(void);
void gc_sweep77(fsoc*c);
void gc_mark77(T77*o);
void gc_align_mark77(fsoc*c,gc77*p);
extern fsoc H77;
T77*new77(void);
void gc_sweep996(fsoc*c);
void gc_mark996(T996*o);
void gc_align_mark996(fsoc*c,gc996*p);
extern fsoc H996;
T996*new996(void);
void gc_sweep273(fsoc*c);
void gc_mark273(T273*o);
void gc_align_mark273(fsoc*c,gc273*p);
extern fsoc H273;
T273*new273(void);
void gc_sweep71(fsoc*c);
void gc_mark71(T71*o);
void gc_align_mark71(fsoc*c,gc71*p);
extern fsoc H71;
T71*new71(void);
void gc_sweep997(fsoc*c);
void gc_mark997(T997*o);
void gc_align_mark997(fsoc*c,gc997*p);
extern fsoc H997;
T997*new997(void);
void gc_sweep529(fsoc*c);
void gc_mark529(T529*o);
void gc_align_mark529(fsoc*c,gc529*p);
extern fsoc H529;
T529*new529(void);
void gc_sweep533(fsoc*c);
void gc_mark533(T533*o);
void gc_align_mark533(fsoc*c,gc533*p);
extern fsoc H533;
T533*new533(void);
void gc_sweep534(fsoc*c);
void gc_mark534(T534*o);
void gc_align_mark534(fsoc*c,gc534*p);
extern fsoc H534;
T534*new534(void);
void gc_sweep535(fsoc*c);
void gc_mark535(T535*o);
void gc_align_mark535(fsoc*c,gc535*p);
extern fsoc H535;
T535*new535(void);
void gc_sweep536(fsoc*c);
void gc_mark536(T536*o);
void gc_align_mark536(fsoc*c,gc536*p);
extern fsoc H536;
T536*new536(void);
void gc_sweep537(fsoc*c);
void gc_mark537(T537*o);
void gc_align_mark537(fsoc*c,gc537*p);
extern fsoc H537;
T537*new537(void);
void gc_sweep998(fsoc*c);
void gc_mark998(T998*o);
void gc_align_mark998(fsoc*c,gc998*p);
extern fsoc H998;
T998*new998(void);
void gc_sweep999(fsoc*c);
void gc_mark999(T999*o);
void gc_align_mark999(fsoc*c,gc999*p);
extern fsoc H999;
T999*new999(void);
void gc_sweep91(fsoc*c);
void gc_mark91(T91*o);
void gc_align_mark91(fsoc*c,gc91*p);
extern fsoc H91;
T91*new91(void);
void gc_sweep528(fsoc*c);
void gc_mark528(T528*o);
void gc_align_mark528(fsoc*c,gc528*p);
extern fsoc H528;
T528*new528(void);
void gc_sweep446(fsoc*c);
void gc_mark446(T446*o);
void gc_align_mark446(fsoc*c,gc446*p);
extern fsoc H446;
T446*new446(void);
void gc_sweep445(fsoc*c);
void gc_mark445(T445*o);
void gc_align_mark445(fsoc*c,gc445*p);
extern fsoc H445;
T445*new445(void);
void gc_sweep73(fsoc*c);
void gc_mark73(T73*o);
void gc_align_mark73(fsoc*c,gc73*p);
extern fsoc H73;
T73*new73(void);
void gc_sweep62(fsoc*c);
void gc_mark62(T62*o);
void gc_align_mark62(fsoc*c,gc62*p);
extern fsoc H62;
T62*new62(void);
void gc_sweep1000(fsoc*c);
void gc_mark1000(T1000*o);
void gc_align_mark1000(fsoc*c,gc1000*p);
extern fsoc H1000;
T1000*new1000(void);
void gc_sweep96(fsoc*c);
void gc_mark96(T96*o);
void gc_align_mark96(fsoc*c,gc96*p);
extern fsoc H96;
T96*new96(void);
void gc_sweep110(fsoc*c);
void gc_mark110(T110*o);
void gc_align_mark110(fsoc*c,gc110*p);
extern fsoc H110;
T110*new110(void);
void gc_sweep672(fsoc*c);
void gc_mark672(T672*o);
void gc_align_mark672(fsoc*c,gc672*p);
extern fsoc H672;
T672*new672(void);
void gc_sweep676(fsoc*c);
void gc_mark676(T676*o);
void gc_align_mark676(fsoc*c,gc676*p);
extern fsoc H676;
T676*new676(void);
void gc_sweep674(fsoc*c);
void gc_mark674(T674*o);
void gc_align_mark674(fsoc*c,gc674*p);
extern fsoc H674;
T674*new674(void);
void gc_sweep538(fsoc*c);
void gc_mark538(T538*o);
void gc_align_mark538(fsoc*c,gc538*p);
extern fsoc H538;
T538*new538(void);
void gc_sweep668(fsoc*c);
void gc_mark668(T668*o);
void gc_align_mark668(fsoc*c,gc668*p);
extern fsoc H668;
T668*new668(void);
void gc_sweep414(fsoc*c);
void gc_mark414(T414*o);
void gc_align_mark414(fsoc*c,gc414*p);
extern fsoc H414;
T414*new414(void);
void gc_sweep1001(fsoc*c);
void gc_mark1001(T1001*o);
void gc_align_mark1001(fsoc*c,gc1001*p);
extern fsoc H1001;
T1001*new1001(void);
void gc_sweep309(fsoc*c);
void gc_mark309(T309*o);
void gc_align_mark309(fsoc*c,gc309*p);
extern fsoc H309;
T309*new309(void);
void gc_sweep1002(fsoc*c);
void gc_mark1002(T1002*o);
void gc_align_mark1002(fsoc*c,gc1002*p);
extern fsoc H1002;
T1002*new1002(void);
void gc_sweep423(fsoc*c);
void gc_mark423(T423*o);
void gc_align_mark423(fsoc*c,gc423*p);
extern fsoc H423;
T423*new423(void);
void gc_mark747(T747*o);
void gc_sweep556(fsoc*c);
void gc_mark556(T556*o);
void gc_align_mark556(fsoc*c,gc556*p);
extern fsoc H556;
T556*new556(void);
void gc_sweep586(fsoc*c);
void gc_mark586(T586*o);
void gc_align_mark586(fsoc*c,gc586*p);
extern fsoc H586;
T586*new586(void);
void gc_sweep587(fsoc*c);
void gc_mark587(T587*o);
void gc_align_mark587(fsoc*c,gc587*p);
extern fsoc H587;
T587*new587(void);
void gc_sweep588(fsoc*c);
void gc_mark588(T588*o);
void gc_align_mark588(fsoc*c,gc588*p);
extern fsoc H588;
T588*new588(void);
void gc_sweep589(fsoc*c);
void gc_mark589(T589*o);
void gc_align_mark589(fsoc*c,gc589*p);
extern fsoc H589;
T589*new589(void);
void gc_sweep601(fsoc*c);
void gc_mark601(T601*o);
void gc_align_mark601(fsoc*c,gc601*p);
extern fsoc H601;
T601*new601(void);
void gc_sweep602(fsoc*c);
void gc_mark602(T602*o);
void gc_align_mark602(fsoc*c,gc602*p);
extern fsoc H602;
T602*new602(void);
void gc_sweep603(fsoc*c);
void gc_mark603(T603*o);
void gc_align_mark603(fsoc*c,gc603*p);
extern fsoc H603;
T603*new603(void);
void gc_sweep605(fsoc*c);
void gc_mark605(T605*o);
void gc_align_mark605(fsoc*c,gc605*p);
extern fsoc H605;
T605*new605(void);
void gc_sweep606(fsoc*c);
void gc_mark606(T606*o);
void gc_align_mark606(fsoc*c,gc606*p);
extern fsoc H606;
T606*new606(void);
void gc_sweep610(fsoc*c);
void gc_mark610(T610*o);
void gc_align_mark610(fsoc*c,gc610*p);
extern fsoc H610;
T610*new610(void);
void gc_sweep612(fsoc*c);
void gc_mark612(T612*o);
void gc_align_mark612(fsoc*c,gc612*p);
extern fsoc H612;
T612*new612(void);
void gc_sweep613(fsoc*c);
void gc_mark613(T613*o);
void gc_align_mark613(fsoc*c,gc613*p);
extern fsoc H613;
T613*new613(void);
void gc_sweep614(fsoc*c);
void gc_mark614(T614*o);
void gc_align_mark614(fsoc*c,gc614*p);
extern fsoc H614;
T614*new614(void);
void gc_sweep615(fsoc*c);
void gc_mark615(T615*o);
void gc_align_mark615(fsoc*c,gc615*p);
extern fsoc H615;
T615*new615(void);
void gc_sweep616(fsoc*c);
void gc_mark616(T616*o);
void gc_align_mark616(fsoc*c,gc616*p);
extern fsoc H616;
T616*new616(void);
void gc_sweep617(fsoc*c);
void gc_mark617(T617*o);
void gc_align_mark617(fsoc*c,gc617*p);
extern fsoc H617;
T617*new617(void);
void gc_sweep619(fsoc*c);
void gc_mark619(T619*o);
void gc_align_mark619(fsoc*c,gc619*p);
extern fsoc H619;
T619*new619(void);
void gc_sweep618(fsoc*c);
void gc_mark618(T618*o);
void gc_align_mark618(fsoc*c,gc618*p);
extern fsoc H618;
T618*new618(void);
void gc_sweep620(fsoc*c);
void gc_mark620(T620*o);
void gc_align_mark620(fsoc*c,gc620*p);
extern fsoc H620;
T620*new620(void);
void gc_sweep621(fsoc*c);
void gc_mark621(T621*o);
void gc_align_mark621(fsoc*c,gc621*p);
extern fsoc H621;
T621*new621(void);
void gc_sweep622(fsoc*c);
void gc_mark622(T622*o);
void gc_align_mark622(fsoc*c,gc622*p);
extern fsoc H622;
T622*new622(void);
void gc_sweep1003(fsoc*c);
void gc_mark1003(T1003*o);
void gc_align_mark1003(fsoc*c,gc1003*p);
extern fsoc H1003;
T1003*new1003(void);
void gc_sweep623(fsoc*c);
void gc_mark623(T623*o);
void gc_align_mark623(fsoc*c,gc623*p);
extern fsoc H623;
T623*new623(void);
void gc_sweep1004(fsoc*c);
void gc_mark1004(T1004*o);
void gc_align_mark1004(fsoc*c,gc1004*p);
extern fsoc H1004;
T1004*new1004(void);
void gc_sweep1005(fsoc*c);
void gc_mark1005(T1005*o);
void gc_align_mark1005(fsoc*c,gc1005*p);
extern fsoc H1005;
T1005*new1005(void);
void gc_sweep362(fsoc*c);
void gc_mark362(T362*o);
void gc_align_mark362(fsoc*c,gc362*p);
extern fsoc H362;
T362*new362(void);
void gc_sweep86(fsoc*c);
void gc_mark86(T86*o);
void gc_align_mark86(fsoc*c,gc86*p);
extern fsoc H86;
T86*new86(void);
void gc_sweep88(fsoc*c);
void gc_mark88(T88*o);
void gc_align_mark88(fsoc*c,gc88*p);
extern fsoc H88;
T88*new88(void);
void gc_sweep1006(fsoc*c);
void gc_mark1006(T1006*o);
void gc_align_mark1006(fsoc*c,gc1006*p);
extern fsoc H1006;
T1006*new1006(void);
void gc_sweep1007(fsoc*c);
void gc_mark1007(T1007*o);
void gc_align_mark1007(fsoc*c,gc1007*p);
extern fsoc H1007;
T1007*new1007(void);
void gc_sweep1008(fsoc*c);
void gc_mark1008(T1008*o);
void gc_align_mark1008(fsoc*c,gc1008*p);
extern fsoc H1008;
T1008*new1008(void);
void gc_sweep266(fsoc*c);
void gc_mark266(T266*o);
void gc_align_mark266(fsoc*c,gc266*p);
extern fsoc H266;
T266*new266(void);
void gc_sweep80(fsoc*c);
void gc_mark80(T80*o);
void gc_align_mark80(fsoc*c,gc80*p);
extern fsoc H80;
T80*new80(void);
void gc_sweep525(fsoc*c);
void gc_mark525(T525*o);
void gc_align_mark525(fsoc*c,gc525*p);
extern fsoc H525;
T525*new525(void);
void gc_sweep1010(fsoc*c);
void gc_mark1010(T1010*o);
void gc_align_mark1010(fsoc*c,gc1010*p);
extern fsoc H1010;
T1010*new1010(void);
void gc_sweep322(fsoc*c);
void gc_mark322(T322*o);
void gc_align_mark322(fsoc*c,gc322*p);
extern fsoc H322;
T322*new322(void);
void gc_sweep99(fsoc*c);
void gc_mark99(T99*o);
void gc_align_mark99(fsoc*c,gc99*p);
extern fsoc H99;
T99*new99(void);
void gc_sweep97(fsoc*c);
void gc_mark97(T97*o);
void gc_align_mark97(fsoc*c,gc97*p);
extern fsoc H97;
T97*new97(void);
void gc_sweep103(fsoc*c);
void gc_mark103(T103*o);
void gc_align_mark103(fsoc*c,gc103*p);
extern fsoc H103;
T103*new103(void);
void gc_sweep112(fsoc*c);
void gc_mark112(T112*o);
void gc_align_mark112(fsoc*c,gc112*p);
extern fsoc H112;
T112*new112(void);
void gc_sweep111(fsoc*c);
void gc_mark111(T111*o);
void gc_align_mark111(fsoc*c,gc111*p);
extern fsoc H111;
T111*new111(void);
void gc_sweep114(fsoc*c);
void gc_mark114(T114*o);
void gc_align_mark114(fsoc*c,gc114*p);
extern fsoc H114;
T114*new114(void);
void gc_sweep82(fsoc*c);
void gc_mark82(T82*o);
void gc_align_mark82(fsoc*c,gc82*p);
extern fsoc H82;
T82*new82(void);
void gc_sweep432(fsoc*c);
void gc_mark432(T432*o);
void gc_align_mark432(fsoc*c,gc432*p);
extern fsoc H432;
T432*new432(void);
void gc_sweep1012(fsoc*c);
void gc_mark1012(T1012*o);
void gc_align_mark1012(fsoc*c,gc1012*p);
extern fsoc H1012;
T1012*new1012(void);
void gc_sweep1013(fsoc*c);
void gc_mark1013(T1013*o);
void gc_align_mark1013(fsoc*c,gc1013*p);
extern fsoc H1013;
T1013*new1013(void);
void gc_sweep107(fsoc*c);
void gc_mark107(T107*o);
void gc_align_mark107(fsoc*c,gc107*p);
extern fsoc H107;
T107*new107(void);
void gc_sweep427(fsoc*c);
void gc_mark427(T427*o);
void gc_align_mark427(fsoc*c,gc427*p);
extern fsoc H427;
T427*new427(void);
void gc_sweep1016(fsoc*c);
void gc_mark1016(T1016*o);
void gc_align_mark1016(fsoc*c,gc1016*p);
extern fsoc H1016;
T1016*new1016(void);
void gc_sweep1017(fsoc*c);
void gc_mark1017(T1017*o);
void gc_align_mark1017(fsoc*c,gc1017*p);
extern fsoc H1017;
T1017*new1017(void);
void gc_sweep1018(fsoc*c);
void gc_mark1018(T1018*o);
void gc_align_mark1018(fsoc*c,gc1018*p);
extern fsoc H1018;
T1018*new1018(void);
void gc_sweep778(fsoc*c);
void gc_mark778(T778*o);
void gc_align_mark778(fsoc*c,gc778*p);
extern fsoc H778;
T778*new778(void);
void gc_sweep780(fsoc*c);
void gc_mark780(T780*o);
void gc_align_mark780(fsoc*c,gc780*p);
extern fsoc H780;
T780*new780(void);
void gc_sweep781(fsoc*c);
void gc_mark781(T781*o);
void gc_align_mark781(fsoc*c,gc781*p);
extern fsoc H781;
T781*new781(void);
void gc_sweep782(fsoc*c);
void gc_mark782(T782*o);
void gc_align_mark782(fsoc*c,gc782*p);
extern fsoc H782;
T782*new782(void);
void gc_sweep783(fsoc*c);
void gc_mark783(T783*o);
void gc_align_mark783(fsoc*c,gc783*p);
extern fsoc H783;
T783*new783(void);
void gc_mark1020(T1020 o);
T1020 new1020(unsigned int size);
void gc_sweep321(fsoc*c);
void gc_mark321(T321*o);
void gc_align_mark321(fsoc*c,gc321*p);
extern fsoc H321;
T321*new321(void);
void gc_sweep1022(fsoc*c);
void gc_mark1022(T1022*o);
void gc_align_mark1022(fsoc*c,gc1022*p);
extern fsoc H1022;
T1022*new1022(void);
void gc_sweep1023(fsoc*c);
void gc_mark1023(T1023*o);
void gc_align_mark1023(fsoc*c,gc1023*p);
extern fsoc H1023;
T1023*new1023(void);
void gc_sweep766(fsoc*c);
void gc_mark766(T766*o);
void gc_align_mark766(fsoc*c,gc766*p);
extern fsoc H766;
T766*new766(void);
void gc_sweep767(fsoc*c);
void gc_mark767(T767*o);
void gc_align_mark767(fsoc*c,gc767*p);
extern fsoc H767;
T767*new767(void);
void gc_sweep1027(fsoc*c);
void gc_mark1027(T1027*o);
void gc_align_mark1027(fsoc*c,gc1027*p);
extern fsoc H1027;
T1027*new1027(void);
void gc_sweep1028(fsoc*c);
void gc_mark1028(T1028*o);
void gc_align_mark1028(fsoc*c,gc1028*p);
extern fsoc H1028;
T1028*new1028(void);
void gc_sweep52(fsoc*c);
void gc_mark52(T52*o);
void gc_align_mark52(fsoc*c,gc52*p);
extern fsoc H52;
T52*new52(void);
void gc_sweep1029(fsoc*c);
void gc_mark1029(T1029*o);
void gc_align_mark1029(fsoc*c,gc1029*p);
extern fsoc H1029;
T1029*new1029(void);
void gc_sweep1030(fsoc*c);
void gc_mark1030(T1030*o);
void gc_align_mark1030(fsoc*c,gc1030*p);
extern fsoc H1030;
T1030*new1030(void);
void gc_sweep283(fsoc*c);
void gc_mark283(T283*o);
void gc_align_mark283(fsoc*c,gc283*p);
extern fsoc H283;
T283*new283(void);
void gc_sweep1031(fsoc*c);
void gc_mark1031(T1031*o);
void gc_align_mark1031(fsoc*c,gc1031*p);
extern fsoc H1031;
T1031*new1031(void);
void gc_sweep1034(fsoc*c);
void gc_update_weak_ref_item1034(T1034* wr);
void gc_mark1034(T1034*o);
void gc_align_mark1034(fsoc*c,gc1034*p);
extern fsoc H1034;
T1034*new1034(void);
void gc_mark1035(T1035 o);
T1035 new1035(unsigned int size);
void gc_sweep1036(fsoc*c);
void gc_update_weak_ref_item1036(T1036* wr);
void gc_mark1036(T1036*o);
void gc_align_mark1036(fsoc*c,gc1036*p);
extern fsoc H1036;
T1036*new1036(void);
void gc_sweep1037(fsoc*c);
void gc_mark1037(T1037*o);
void gc_align_mark1037(fsoc*c,gc1037*p);
extern fsoc H1037;
T1037*new1037(void);
void gc_sweep1038(fsoc*c);
void gc_mark1038(T1038*o);
void gc_align_mark1038(fsoc*c,gc1038*p);
extern fsoc H1038;
T1038*new1038(void);
void gc_sweep1039(fsoc*c);
void gc_mark1039(T1039*o);
void gc_align_mark1039(fsoc*c,gc1039*p);
extern fsoc H1039;
T1039*new1039(void);
void gc_sweep270(fsoc*c);
void gc_mark270(T270*o);
void gc_align_mark270(fsoc*c,gc270*p);
extern fsoc H270;
T270*new270(void);
void gc_mark1040(T1040 o);
T1040 new1040(unsigned int size);
void gc_sweep1043(fsoc*c);
void gc_mark1043(T1043*o);
void gc_align_mark1043(fsoc*c,gc1043*p);
extern fsoc H1043;
T1043*new1043(void);
void gc_sweep95(fsoc*c);
void gc_mark95(T95*o);
void gc_align_mark95(fsoc*c,gc95*p);
extern fsoc H95;
T95*new95(void);
void gc_mark1044(T1044 o);
T1044 new1044(unsigned int size);
void gc_mark1045(T1045 o);
T1045 new1045(unsigned int size);
void gc_sweep1046(fsoc*c);
void gc_mark1046(T1046*o);
void gc_align_mark1046(fsoc*c,gc1046*p);
extern fsoc H1046;
T1046*new1046(void);
void gc_sweep738(fsoc*c);
void gc_mark738(T738*o);
void gc_align_mark738(fsoc*c,gc738*p);
extern fsoc H738;
T738*new738(void);
void gc_sweep785(fsoc*c);
void gc_mark785(T785*o);
void gc_align_mark785(fsoc*c,gc785*p);
extern fsoc H785;
T785*new785(void);
void gc_sweep1048(fsoc*c);
void gc_mark1048(T1048*o);
void gc_align_mark1048(fsoc*c,gc1048*p);
extern fsoc H1048;
T1048*new1048(void);
void gc_mark1049(T1049 o);
T1049 new1049(unsigned int size);
void gc_sweep1050(fsoc*c);
void gc_mark1050(T1050*o);
void gc_align_mark1050(fsoc*c,gc1050*p);
extern fsoc H1050;
T1050*new1050(void);
void gc_sweep1052(fsoc*c);
void gc_mark1052(T1052*o);
void gc_align_mark1052(fsoc*c,gc1052*p);
extern fsoc H1052;
T1052*new1052(void);
void gc_sweep1054(fsoc*c);
void gc_mark1054(T1054*o);
void gc_align_mark1054(fsoc*c,gc1054*p);
extern fsoc H1054;
T1054*new1054(void);
void gc_sweep740(fsoc*c);
void gc_mark740(T740*o);
void gc_align_mark740(fsoc*c,gc740*p);
extern fsoc H740;
T740*new740(void);
void gc_sweep1057(fsoc*c);
void gc_mark1057(T1057*o);
void gc_align_mark1057(fsoc*c,gc1057*p);
extern fsoc H1057;
T1057*new1057(void);
void gc_sweep443(fsoc*c);
void gc_mark443(T443*o);
void gc_align_mark443(fsoc*c,gc443*p);
extern fsoc H443;
T443*new443(void);
void gc_sweep420(fsoc*c);
void gc_mark420(T420*o);
void gc_align_mark420(fsoc*c,gc420*p);
extern fsoc H420;
T420*new420(void);
void gc_sweep374(fsoc*c);
void gc_mark374(T374*o);
void gc_align_mark374(fsoc*c,gc374*p);
extern fsoc H374;
T374*new374(void);
void gc_sweep426(fsoc*c);
void gc_mark426(T426*o);
void gc_align_mark426(fsoc*c,gc426*p);
extern fsoc H426;
T426*new426(void);
void gc_sweep435(fsoc*c);
void gc_mark435(T435*o);
void gc_align_mark435(fsoc*c,gc435*p);
extern fsoc H435;
T435*new435(void);
void gc_sweep478(fsoc*c);
void gc_mark478(T478*o);
void gc_align_mark478(fsoc*c,gc478*p);
extern fsoc H478;
T478*new478(void);
void gc_sweep488(fsoc*c);
void gc_mark488(T488*o);
void gc_align_mark488(fsoc*c,gc488*p);
extern fsoc H488;
T488*new488(void);
void gc_sweep490(fsoc*c);
void gc_mark490(T490*o);
void gc_align_mark490(fsoc*c,gc490*p);
extern fsoc H490;
T490*new490(void);
void gc_sweep348(fsoc*c);
void gc_mark348(T348*o);
void gc_align_mark348(fsoc*c,gc348*p);
extern fsoc H348;
T348*new348(void);
void gc_sweep108(fsoc*c);
void gc_mark108(T108*o);
void gc_align_mark108(fsoc*c,gc108*p);
extern fsoc H108;
T108*new108(void);
void gc_sweep491(fsoc*c);
void gc_mark491(T491*o);
void gc_align_mark491(fsoc*c,gc491*p);
extern fsoc H491;
T491*new491(void);
void gc_sweep439(fsoc*c);
void gc_mark439(T439*o);
void gc_align_mark439(fsoc*c,gc439*p);
extern fsoc H439;
T439*new439(void);
void gc_sweep402(fsoc*c);
void gc_mark402(T402*o);
void gc_align_mark402(fsoc*c,gc402*p);
extern fsoc H402;
T402*new402(void);
void gc_sweep375(fsoc*c);
void gc_mark375(T375*o);
void gc_align_mark375(fsoc*c,gc375*p);
extern fsoc H375;
T375*new375(void);
void gc_sweep430(fsoc*c);
void gc_mark430(T430*o);
void gc_align_mark430(fsoc*c,gc430*p);
extern fsoc H430;
T430*new430(void);
void gc_sweep401(fsoc*c);
void gc_mark401(T401*o);
void gc_align_mark401(fsoc*c,gc401*p);
extern fsoc H401;
T401*new401(void);
void gc_sweep428(fsoc*c);
void gc_mark428(T428*o);
void gc_align_mark428(fsoc*c,gc428*p);
extern fsoc H428;
T428*new428(void);
void gc_sweep397(fsoc*c);
void gc_mark397(T397*o);
void gc_align_mark397(fsoc*c,gc397*p);
extern fsoc H397;
T397*new397(void);
void gc_sweep431(fsoc*c);
void gc_mark431(T431*o);
void gc_align_mark431(fsoc*c,gc431*p);
extern fsoc H431;
T431*new431(void);
void gc_sweep429(fsoc*c);
void gc_mark429(T429*o);
void gc_align_mark429(fsoc*c,gc429*p);
extern fsoc H429;
T429*new429(void);
void gc_sweep436(fsoc*c);
void gc_mark436(T436*o);
void gc_align_mark436(fsoc*c,gc436*p);
extern fsoc H436;
T436*new436(void);
void gc_sweep433(fsoc*c);
void gc_mark433(T433*o);
void gc_align_mark433(fsoc*c,gc433*p);
extern fsoc H433;
T433*new433(void);
void gc_sweep437(fsoc*c);
void gc_mark437(T437*o);
void gc_align_mark437(fsoc*c,gc437*p);
extern fsoc H437;
T437*new437(void);
void gc_sweep440(fsoc*c);
void gc_mark440(T440*o);
void gc_align_mark440(fsoc*c,gc440*p);
extern fsoc H440;
T440*new440(void);
void gc_sweep262(fsoc*c);
void gc_mark262(T262*o);
void gc_align_mark262(fsoc*c,gc262*p);
extern fsoc H262;
T262*new262(void);
void gc_sweep460(fsoc*c);
void gc_mark460(T460*o);
void gc_align_mark460(fsoc*c,gc460*p);
extern fsoc H460;
T460*new460(void);
void gc_sweep462(fsoc*c);
void gc_mark462(T462*o);
void gc_align_mark462(fsoc*c,gc462*p);
extern fsoc H462;
T462*new462(void);
void gc_sweep463(fsoc*c);
void gc_mark463(T463*o);
void gc_align_mark463(fsoc*c,gc463*p);
extern fsoc H463;
T463*new463(void);
void gc_sweep464(fsoc*c);
void gc_mark464(T464*o);
void gc_align_mark464(fsoc*c,gc464*p);
extern fsoc H464;
T464*new464(void);
void gc_sweep415(fsoc*c);
void gc_mark415(T415*o);
void gc_align_mark415(fsoc*c,gc415*p);
extern fsoc H415;
T415*new415(void);
void gc_sweep1058(fsoc*c);
void gc_mark1058(T1058*o);
void gc_align_mark1058(fsoc*c,gc1058*p);
extern fsoc H1058;
T1058*new1058(void);
void gc_sweep269(fsoc*c);
void gc_mark269(T269*o);
void gc_align_mark269(fsoc*c,gc269*p);
extern fsoc H269;
T269*new269(void);
void gc_sweep471(fsoc*c);
void gc_mark471(T471*o);
void gc_align_mark471(fsoc*c,gc471*p);
extern fsoc H471;
T471*new471(void);
void gc_sweep1059(fsoc*c);
void gc_mark1059(T1059*o);
void gc_align_mark1059(fsoc*c,gc1059*p);
extern fsoc H1059;
T1059*new1059(void);
void gc_sweep511(fsoc*c);
void gc_mark511(T511*o);
void gc_align_mark511(fsoc*c,gc511*p);
extern fsoc H511;
T511*new511(void);
void gc_sweep480(fsoc*c);
void gc_mark480(T480*o);
void gc_align_mark480(fsoc*c,gc480*p);
extern fsoc H480;
T480*new480(void);
void gc_sweep395(fsoc*c);
void gc_mark395(T395*o);
void gc_align_mark395(fsoc*c,gc395*p);
extern fsoc H395;
T395*new395(void);
void gc_sweep467(fsoc*c);
void gc_mark467(T467*o);
void gc_align_mark467(fsoc*c,gc467*p);
extern fsoc H467;
T467*new467(void);
void gc_sweep365(fsoc*c);
void gc_mark365(T365*o);
void gc_align_mark365(fsoc*c,gc365*p);
extern fsoc H365;
T365*new365(void);
void gc_sweep468(fsoc*c);
void gc_mark468(T468*o);
void gc_align_mark468(fsoc*c,gc468*p);
extern fsoc H468;
T468*new468(void);
void gc_sweep469(fsoc*c);
void gc_mark469(T469*o);
void gc_align_mark469(fsoc*c,gc469*p);
extern fsoc H469;
T469*new469(void);
void gc_sweep333(fsoc*c);
void gc_mark333(T333*o);
void gc_align_mark333(fsoc*c,gc333*p);
extern fsoc H333;
T333*new333(void);
void gc_sweep342(fsoc*c);
void gc_mark342(T342*o);
void gc_align_mark342(fsoc*c,gc342*p);
extern fsoc H342;
T342*new342(void);
void gc_sweep345(fsoc*c);
void gc_mark345(T345*o);
void gc_align_mark345(fsoc*c,gc345*p);
extern fsoc H345;
T345*new345(void);
void gc_sweep347(fsoc*c);
void gc_mark347(T347*o);
void gc_align_mark347(fsoc*c,gc347*p);
extern fsoc H347;
T347*new347(void);
void gc_sweep336(fsoc*c);
void gc_mark336(T336*o);
void gc_align_mark336(fsoc*c,gc336*p);
extern fsoc H336;
T336*new336(void);
void gc_sweep340(fsoc*c);
void gc_mark340(T340*o);
void gc_align_mark340(fsoc*c,gc340*p);
extern fsoc H340;
T340*new340(void);
void gc_sweep341(fsoc*c);
void gc_mark341(T341*o);
void gc_align_mark341(fsoc*c,gc341*p);
extern fsoc H341;
T341*new341(void);
void gc_sweep482(fsoc*c);
void gc_mark482(T482*o);
void gc_align_mark482(fsoc*c,gc482*p);
extern fsoc H482;
T482*new482(void);
void gc_sweep483(fsoc*c);
void gc_mark483(T483*o);
void gc_align_mark483(fsoc*c,gc483*p);
extern fsoc H483;
T483*new483(void);
void gc_sweep484(fsoc*c);
void gc_mark484(T484*o);
void gc_align_mark484(fsoc*c,gc484*p);
extern fsoc H484;
T484*new484(void);
void gc_sweep473(fsoc*c);
void gc_mark473(T473*o);
void gc_align_mark473(fsoc*c,gc473*p);
extern fsoc H473;
T473*new473(void);
void gc_sweep379(fsoc*c);
void gc_mark379(T379*o);
void gc_align_mark379(fsoc*c,gc379*p);
extern fsoc H379;
T379*new379(void);
void gc_sweep450(fsoc*c);
void gc_mark450(T450*o);
void gc_align_mark450(fsoc*c,gc450*p);
extern fsoc H450;
T450*new450(void);
void gc_sweep456(fsoc*c);
void gc_mark456(T456*o);
void gc_align_mark456(fsoc*c,gc456*p);
extern fsoc H456;
T456*new456(void);
void gc_sweep474(fsoc*c);
void gc_mark474(T474*o);
void gc_align_mark474(fsoc*c,gc474*p);
extern fsoc H474;
T474*new474(void);
void gc_sweep508(fsoc*c);
void gc_mark508(T508*o);
void gc_align_mark508(fsoc*c,gc508*p);
extern fsoc H508;
T508*new508(void);
void gc_sweep509(fsoc*c);
void gc_mark509(T509*o);
void gc_align_mark509(fsoc*c,gc509*p);
extern fsoc H509;
T509*new509(void);
void gc_sweep1060(fsoc*c);
void gc_mark1060(T1060*o);
void gc_align_mark1060(fsoc*c,gc1060*p);
extern fsoc H1060;
T1060*new1060(void);
void gc_sweep1061(fsoc*c);
void gc_mark1061(T1061*o);
void gc_align_mark1061(fsoc*c,gc1061*p);
extern fsoc H1061;
T1061*new1061(void);
void gc_sweep447(fsoc*c);
void gc_mark447(T447*o);
void gc_align_mark447(fsoc*c,gc447*p);
extern fsoc H447;
T447*new447(void);
void gc_sweep448(fsoc*c);
void gc_mark448(T448*o);
void gc_align_mark448(fsoc*c,gc448*p);
extern fsoc H448;
T448*new448(void);
void gc_sweep1062(fsoc*c);
void gc_mark1062(T1062*o);
void gc_align_mark1062(fsoc*c,gc1062*p);
extern fsoc H1062;
T1062*new1062(void);
void gc_sweep385(fsoc*c);
void gc_mark385(T385*o);
void gc_align_mark385(fsoc*c,gc385*p);
extern fsoc H385;
T385*new385(void);
void gc_sweep1063(fsoc*c);
void gc_mark1063(T1063*o);
void gc_align_mark1063(fsoc*c,gc1063*p);
extern fsoc H1063;
T1063*new1063(void);
void gc_sweep654(fsoc*c);
void gc_mark654(T654*o);
void gc_align_mark654(fsoc*c,gc654*p);
extern fsoc H654;
T654*new654(void);
void gc_sweep1064(fsoc*c);
void gc_mark1064(T1064*o);
void gc_align_mark1064(fsoc*c,gc1064*p);
extern fsoc H1064;
T1064*new1064(void);
void gc_sweep412(fsoc*c);
void gc_mark412(T412*o);
void gc_align_mark412(fsoc*c,gc412*p);
extern fsoc H412;
T412*new412(void);
void gc_sweep382(fsoc*c);
void gc_mark382(T382*o);
void gc_align_mark382(fsoc*c,gc382*p);
extern fsoc H382;
T382*new382(void);
void gc_sweep1065(fsoc*c);
void gc_mark1065(T1065*o);
void gc_align_mark1065(fsoc*c,gc1065*p);
extern fsoc H1065;
T1065*new1065(void);
void gc_sweep386(fsoc*c);
void gc_mark386(T386*o);
void gc_align_mark386(fsoc*c,gc386*p);
extern fsoc H386;
T386*new386(void);
void gc_sweep442(fsoc*c);
void gc_mark442(T442*o);
void gc_align_mark442(fsoc*c,gc442*p);
extern fsoc H442;
T442*new442(void);
void gc_sweep510(fsoc*c);
void gc_mark510(T510*o);
void gc_align_mark510(fsoc*c,gc510*p);
extern fsoc H510;
T510*new510(void);
void gc_sweep1066(fsoc*c);
void gc_mark1066(T1066*o);
void gc_align_mark1066(fsoc*c,gc1066*p);
extern fsoc H1066;
T1066*new1066(void);
void gc_sweep470(fsoc*c);
void gc_mark470(T470*o);
void gc_align_mark470(fsoc*c,gc470*p);
extern fsoc H470;
T470*new470(void);
void gc_sweep406(fsoc*c);
void gc_mark406(T406*o);
void gc_align_mark406(fsoc*c,gc406*p);
extern fsoc H406;
T406*new406(void);
void gc_sweep392(fsoc*c);
void gc_mark392(T392*o);
void gc_align_mark392(fsoc*c,gc392*p);
extern fsoc H392;
T392*new392(void);
void gc_sweep1067(fsoc*c);
void gc_mark1067(T1067*o);
void gc_align_mark1067(fsoc*c,gc1067*p);
extern fsoc H1067;
T1067*new1067(void);
void gc_sweep351(fsoc*c);
void gc_mark351(T351*o);
void gc_align_mark351(fsoc*c,gc351*p);
extern fsoc H351;
T351*new351(void);
void gc_sweep363(fsoc*c);
void gc_mark363(T363*o);
void gc_align_mark363(fsoc*c,gc363*p);
extern fsoc H363;
T363*new363(void);
void gc_sweep356(fsoc*c);
void gc_mark356(T356*o);
void gc_align_mark356(fsoc*c,gc356*p);
extern fsoc H356;
T356*new356(void);
void gc_sweep472(fsoc*c);
void gc_mark472(T472*o);
void gc_align_mark472(fsoc*c,gc472*p);
extern fsoc H472;
T472*new472(void);
void gc_sweep417(fsoc*c);
void gc_mark417(T417*o);
void gc_align_mark417(fsoc*c,gc417*p);
extern fsoc H417;
T417*new417(void);
void gc_sweep458(fsoc*c);
void gc_mark458(T458*o);
void gc_align_mark458(fsoc*c,gc458*p);
extern fsoc H458;
T458*new458(void);
void gc_sweep459(fsoc*c);
void gc_mark459(T459*o);
void gc_align_mark459(fsoc*c,gc459*p);
extern fsoc H459;
T459*new459(void);
void gc_sweep358(fsoc*c);
void gc_mark358(T358*o);
void gc_align_mark358(fsoc*c,gc358*p);
extern fsoc H358;
T358*new358(void);
void gc_sweep398(fsoc*c);
void gc_mark398(T398*o);
void gc_align_mark398(fsoc*c,gc398*p);
extern fsoc H398;
T398*new398(void);
void gc_sweep457(fsoc*c);
void gc_mark457(T457*o);
void gc_align_mark457(fsoc*c,gc457*p);
extern fsoc H457;
T457*new457(void);
void gc_sweep487(fsoc*c);
void gc_mark487(T487*o);
void gc_align_mark487(fsoc*c,gc487*p);
extern fsoc H487;
T487*new487(void);
void gc_sweep477(fsoc*c);
void gc_mark477(T477*o);
void gc_align_mark477(fsoc*c,gc477*p);
extern fsoc H477;
T477*new477(void);
void gc_sweep361(fsoc*c);
void gc_mark361(T361*o);
void gc_align_mark361(fsoc*c,gc361*p);
extern fsoc H361;
T361*new361(void);
void gc_sweep388(fsoc*c);
void gc_mark388(T388*o);
void gc_align_mark388(fsoc*c,gc388*p);
extern fsoc H388;
T388*new388(void);
void gc_sweep453(fsoc*c);
void gc_mark453(T453*o);
void gc_align_mark453(fsoc*c,gc453*p);
extern fsoc H453;
T453*new453(void);
void gc_sweep389(fsoc*c);
void gc_mark389(T389*o);
void gc_align_mark389(fsoc*c,gc389*p);
extern fsoc H389;
T389*new389(void);
void gc_sweep649(fsoc*c);
void gc_mark649(T649*o);
void gc_align_mark649(fsoc*c,gc649*p);
extern fsoc H649;
T649*new649(void);
void gc_sweep476(fsoc*c);
void gc_mark476(T476*o);
void gc_align_mark476(fsoc*c,gc476*p);
extern fsoc H476;
T476*new476(void);
void gc_sweep390(fsoc*c);
void gc_mark390(T390*o);
void gc_align_mark390(fsoc*c,gc390*p);
extern fsoc H390;
T390*new390(void);
void gc_sweep485(fsoc*c);
void gc_mark485(T485*o);
void gc_align_mark485(fsoc*c,gc485*p);
extern fsoc H485;
T485*new485(void);
void gc_sweep507(fsoc*c);
void gc_mark507(T507*o);
void gc_align_mark507(fsoc*c,gc507*p);
extern fsoc H507;
T507*new507(void);
void gc_sweep506(fsoc*c);
void gc_mark506(T506*o);
void gc_align_mark506(fsoc*c,gc506*p);
extern fsoc H506;
T506*new506(void);
void gc_sweep502(fsoc*c);
void gc_mark502(T502*o);
void gc_align_mark502(fsoc*c,gc502*p);
extern fsoc H502;
T502*new502(void);
void gc_sweep503(fsoc*c);
void gc_mark503(T503*o);
void gc_align_mark503(fsoc*c,gc503*p);
extern fsoc H503;
T503*new503(void);
void gc_sweep504(fsoc*c);
void gc_mark504(T504*o);
void gc_align_mark504(fsoc*c,gc504*p);
extern fsoc H504;
T504*new504(void);
void gc_sweep505(fsoc*c);
void gc_mark505(T505*o);
void gc_align_mark505(fsoc*c,gc505*p);
extern fsoc H505;
T505*new505(void);
void gc_sweep501(fsoc*c);
void gc_mark501(T501*o);
void gc_align_mark501(fsoc*c,gc501*p);
extern fsoc H501;
T501*new501(void);
void gc_sweep368(fsoc*c);
void gc_mark368(T368*o);
void gc_align_mark368(fsoc*c,gc368*p);
extern fsoc H368;
T368*new368(void);
void gc_sweep391(fsoc*c);
void gc_mark391(T391*o);
void gc_align_mark391(fsoc*c,gc391*p);
extern fsoc H391;
T391*new391(void);
void gc_sweep497(fsoc*c);
void gc_mark497(T497*o);
void gc_align_mark497(fsoc*c,gc497*p);
extern fsoc H497;
T497*new497(void);
void gc_sweep498(fsoc*c);
void gc_mark498(T498*o);
void gc_align_mark498(fsoc*c,gc498*p);
extern fsoc H498;
T498*new498(void);
void gc_sweep499(fsoc*c);
void gc_mark499(T499*o);
void gc_align_mark499(fsoc*c,gc499*p);
extern fsoc H499;
T499*new499(void);
void gc_sweep500(fsoc*c);
void gc_mark500(T500*o);
void gc_align_mark500(fsoc*c,gc500*p);
extern fsoc H500;
T500*new500(void);
void gc_sweep396(fsoc*c);
void gc_mark396(T396*o);
void gc_align_mark396(fsoc*c,gc396*p);
extern fsoc H396;
T396*new396(void);
void gc_sweep496(fsoc*c);
void gc_mark496(T496*o);
void gc_align_mark496(fsoc*c,gc496*p);
extern fsoc H496;
T496*new496(void);
void gc_sweep493(fsoc*c);
void gc_mark493(T493*o);
void gc_align_mark493(fsoc*c,gc493*p);
extern fsoc H493;
T493*new493(void);
void gc_sweep494(fsoc*c);
void gc_mark494(T494*o);
void gc_align_mark494(fsoc*c,gc494*p);
extern fsoc H494;
T494*new494(void);
void gc_sweep495(fsoc*c);
void gc_mark495(T495*o);
void gc_align_mark495(fsoc*c,gc495*p);
extern fsoc H495;
T495*new495(void);
void gc_sweep492(fsoc*c);
void gc_mark492(T492*o);
void gc_align_mark492(fsoc*c,gc492*p);
extern fsoc H492;
T492*new492(void);
void gc_sweep451(fsoc*c);
void gc_mark451(T451*o);
void gc_align_mark451(fsoc*c,gc451*p);
extern fsoc H451;
T451*new451(void);
void gc_sweep452(fsoc*c);
void gc_mark452(T452*o);
void gc_align_mark452(fsoc*c,gc452*p);
extern fsoc H452;
T452*new452(void);
void gc_sweep486(fsoc*c);
void gc_mark486(T486*o);
void gc_align_mark486(fsoc*c,gc486*p);
extern fsoc H486;
T486*new486(void);
void gc_sweep272(fsoc*c);
void gc_mark272(T272*o);
void gc_align_mark272(fsoc*c,gc272*p);
extern fsoc H272;
T272*new272(void);
void gc_sweep455(fsoc*c);
void gc_mark455(T455*o);
void gc_align_mark455(fsoc*c,gc455*p);
extern fsoc H455;
T455*new455(void);
void gc_sweep454(fsoc*c);
void gc_mark454(T454*o);
void gc_align_mark454(fsoc*c,gc454*p);
extern fsoc H454;
T454*new454(void);
void gc_sweep1068(fsoc*c);
void gc_mark1068(T1068*o);
void gc_align_mark1068(fsoc*c,gc1068*p);
extern fsoc H1068;
T1068*new1068(void);
void gc_sweep413(fsoc*c);
void gc_mark413(T413*o);
void gc_align_mark413(fsoc*c,gc413*p);
extern fsoc H413;
T413*new413(void);
void gc_sweep422(fsoc*c);
void gc_mark422(T422*o);
void gc_align_mark422(fsoc*c,gc422*p);
extern fsoc H422;
T422*new422(void);
void gc_sweep739(fsoc*c);
void gc_mark739(T739*o);
void gc_align_mark739(fsoc*c,gc739*p);
extern fsoc H739;
T739*new739(void);
void gc_sweep449(fsoc*c);
void gc_mark449(T449*o);
void gc_align_mark449(fsoc*c,gc449*p);
extern fsoc H449;
T449*new449(void);
void gc_sweep352(fsoc*c);
void gc_mark352(T352*o);
void gc_align_mark352(fsoc*c,gc352*p);
extern fsoc H352;
T352*new352(void);
void gc_sweep404(fsoc*c);
void gc_mark404(T404*o);
void gc_align_mark404(fsoc*c,gc404*p);
extern fsoc H404;
T404*new404(void);
void gc_sweep387(fsoc*c);
void gc_mark387(T387*o);
void gc_align_mark387(fsoc*c,gc387*p);
extern fsoc H387;
T387*new387(void);
void gc_sweep1069(fsoc*c);
void gc_mark1069(T1069*o);
void gc_align_mark1069(fsoc*c,gc1069*p);
extern fsoc H1069;
T1069*new1069(void);
void gc_sweep1070(fsoc*c);
void gc_mark1070(T1070*o);
void gc_align_mark1070(fsoc*c,gc1070*p);
extern fsoc H1070;
T1070*new1070(void);
void gc_sweep1071(fsoc*c);
void gc_update_weak_ref_item1071(T1071* wr);
void gc_mark1071(T1071*o);
void gc_align_mark1071(fsoc*c,gc1071*p);
extern fsoc H1071;
T1071*new1071(void);
void gc_sweep1072(fsoc*c);
void gc_mark1072(T1072*o);
void gc_align_mark1072(fsoc*c,gc1072*p);
extern fsoc H1072;
T1072*new1072(void);
void gc_mark1073(T1073 o);
T1073 new1073(unsigned int size);
void gc_mark1074(T1074 o);
T1074 new1074(unsigned int size);
void gc_mark1075(T1075 o);
T1075 new1075(unsigned int size);
void gc_sweep1076(fsoc*c);
void gc_mark1076(T1076*o);
void gc_align_mark1076(fsoc*c,gc1076*p);
extern fsoc H1076;
T1076*new1076(void);
void gc_sweep523(fsoc*c);
void gc_mark523(T523*o);
void gc_align_mark523(fsoc*c,gc523*p);
extern fsoc H523;
T523*new523(void);
void gc_sweep1077(fsoc*c);
void gc_mark1077(T1077*o);
void gc_align_mark1077(fsoc*c,gc1077*p);
extern fsoc H1077;
T1077*new1077(void);
void gc_sweep1079(fsoc*c);
void gc_mark1079(T1079*o);
void gc_align_mark1079(fsoc*c,gc1079*p);
extern fsoc H1079;
T1079*new1079(void);
void gc_sweep424(fsoc*c);
void gc_mark424(T424*o);
void gc_align_mark424(fsoc*c,gc424*p);
extern fsoc H424;
T424*new424(void);
void gc_sweep416(fsoc*c);
void gc_mark416(T416*o);
void gc_align_mark416(fsoc*c,gc416*p);
extern fsoc H416;
T416*new416(void);
void gc_sweep1085(fsoc*c);
void gc_mark1085(T1085*o);
void gc_align_mark1085(fsoc*c,gc1085*p);
extern fsoc H1085;
T1085*new1085(void);
void gc_sweep1086(fsoc*c);
void gc_mark1086(T1086*o);
void gc_align_mark1086(fsoc*c,gc1086*p);
extern fsoc H1086;
T1086*new1086(void);
void gc_sweep444(fsoc*c);
void gc_mark444(T444*o);
void gc_align_mark444(fsoc*c,gc444*p);
extern fsoc H444;
T444*new444(void);
void gc_sweep421(fsoc*c);
void gc_mark421(T421*o);
void gc_align_mark421(fsoc*c,gc421*p);
extern fsoc H421;
T421*new421(void);
void gc_sweep441(fsoc*c);
void gc_mark441(T441*o);
void gc_align_mark441(fsoc*c,gc441*p);
extern fsoc H441;
T441*new441(void);
void gc_sweep1087(fsoc*c);
void gc_mark1087(T1087*o);
void gc_align_mark1087(fsoc*c,gc1087*p);
extern fsoc H1087;
T1087*new1087(void);
void gc_sweep419(fsoc*c);
void gc_mark419(T419*o);
void gc_align_mark419(fsoc*c,gc419*p);
extern fsoc H419;
T419*new419(void);
void gc_sweep1088(fsoc*c);
void gc_mark1088(T1088*o);
void gc_align_mark1088(fsoc*c,gc1088*p);
extern fsoc H1088;
T1088*new1088(void);
void gc_mark1089(T1089 o);
T1089 new1089(unsigned int size);
void gc_sweep1090(fsoc*c);
void gc_update_weak_ref_item1090(T1090* wr);
void gc_mark1090(T1090*o);
void gc_align_mark1090(fsoc*c,gc1090*p);
extern fsoc H1090;
T1090*new1090(void);
void gc_sweep1091(fsoc*c);
void gc_mark1091(T1091*o);
void gc_align_mark1091(fsoc*c,gc1091*p);
extern fsoc H1091;
T1091*new1091(void);
void gc_mark1092(T1092 o);
T1092 new1092(unsigned int size);
void gc_sweep1093(fsoc*c);
void gc_update_weak_ref_item1093(T1093* wr);
void gc_mark1093(T1093*o);
void gc_align_mark1093(fsoc*c,gc1093*p);
extern fsoc H1093;
T1093*new1093(void);
void gc_mark1094(T1094 o);
T1094 new1094(unsigned int size);
void gc_sweep1095(fsoc*c);
void gc_mark1095(T1095*o);
void gc_align_mark1095(fsoc*c,gc1095*p);
extern fsoc H1095;
T1095*new1095(void);
void gc_sweep1098(fsoc*c);
void gc_mark1098(T1098*o);
void gc_align_mark1098(fsoc*c,gc1098*p);
extern fsoc H1098;
T1098*new1098(void);
void gc_sweep1099(fsoc*c);
void gc_mark1099(T1099*o);
void gc_align_mark1099(fsoc*c,gc1099*p);
extern fsoc H1099;
T1099*new1099(void);
void gc_sweep1102(fsoc*c);
void gc_mark1102(T1102*o);
void gc_align_mark1102(fsoc*c,gc1102*p);
extern fsoc H1102;
T1102*new1102(void);
void gc_sweep1103(fsoc*c);
void gc_mark1103(T1103*o);
void gc_align_mark1103(fsoc*c,gc1103*p);
extern fsoc H1103;
T1103*new1103(void);
void gc_sweep1104(fsoc*c);
void gc_mark1104(T1104*o);
void gc_align_mark1104(fsoc*c,gc1104*p);
extern fsoc H1104;
T1104*new1104(void);
void gc_sweep1105(fsoc*c);
void gc_mark1105(T1105*o);
void gc_align_mark1105(fsoc*c,gc1105*p);
extern fsoc H1105;
T1105*new1105(void);
void gc_sweep1106(fsoc*c);
void gc_mark1106(T1106*o);
void gc_align_mark1106(fsoc*c,gc1106*p);
extern fsoc H1106;
T1106*new1106(void);
void gc_sweep1107(fsoc*c);
void gc_mark1107(T1107*o);
void gc_align_mark1107(fsoc*c,gc1107*p);
extern fsoc H1107;
T1107*new1107(void);
void gc_sweep516(fsoc*c);
void gc_mark516(T516*o);
void gc_align_mark516(fsoc*c,gc516*p);
extern fsoc H516;
T516*new516(void);
void gc_sweep1109(fsoc*c);
void gc_mark1109(T1109*o);
void gc_align_mark1109(fsoc*c,gc1109*p);
extern fsoc H1109;
T1109*new1109(void);
void gc_sweep1113(fsoc*c);
void gc_mark1113(T1113*o);
void gc_align_mark1113(fsoc*c,gc1113*p);
extern fsoc H1113;
T1113*new1113(void);
void gc_sweep1114(fsoc*c);
void gc_mark1114(T1114*o);
void gc_align_mark1114(fsoc*c,gc1114*p);
extern fsoc H1114;
T1114*new1114(void);
void gc_sweep1115(fsoc*c);
void gc_mark1115(T1115*o);
void gc_align_mark1115(fsoc*c,gc1115*p);
extern fsoc H1115;
T1115*new1115(void);
void gc_sweep1116(fsoc*c);
void gc_mark1116(T1116*o);
void gc_align_mark1116(fsoc*c,gc1116*p);
extern fsoc H1116;
T1116*new1116(void);
void gc_sweep1117(fsoc*c);
void gc_mark1117(T1117*o);
void gc_align_mark1117(fsoc*c,gc1117*p);
extern fsoc H1117;
T1117*new1117(void);
void gc_sweep518(fsoc*c);
void gc_mark518(T518*o);
void gc_align_mark518(fsoc*c,gc518*p);
extern fsoc H518;
T518*new518(void);
void gc_sweep1118(fsoc*c);
void gc_mark1118(T1118*o);
void gc_align_mark1118(fsoc*c,gc1118*p);
extern fsoc H1118;
T1118*new1118(void);
void gc_sweep1119(fsoc*c);
void gc_mark1119(T1119*o);
void gc_align_mark1119(fsoc*c,gc1119*p);
extern fsoc H1119;
T1119*new1119(void);
void gc_sweep551(fsoc*c);
void gc_mark551(T551*o);
void gc_align_mark551(fsoc*c,gc551*p);
extern fsoc H551;
T551*new551(void);
void gc_sweep1121(fsoc*c);
void gc_mark1121(T1121*o);
void gc_align_mark1121(fsoc*c,gc1121*p);
extern fsoc H1121;
T1121*new1121(void);
void gc_sweep1122(fsoc*c);
void gc_mark1122(T1122*o);
void gc_align_mark1122(fsoc*c,gc1122*p);
extern fsoc H1122;
T1122*new1122(void);
void gc_sweep1123(fsoc*c);
void gc_mark1123(T1123*o);
void gc_align_mark1123(fsoc*c,gc1123*p);
extern fsoc H1123;
T1123*new1123(void);
void gc_sweep394(fsoc*c);
void gc_mark394(T394*o);
void gc_align_mark394(fsoc*c,gc394*p);
extern fsoc H394;
T394*new394(void);
void gc_mark1124(T1124 o);
T1124 new1124(unsigned int size);
void gc_sweep1125(fsoc*c);
void gc_update_weak_ref_item1125(T1125* wr);
void gc_mark1125(T1125*o);
void gc_align_mark1125(fsoc*c,gc1125*p);
extern fsoc H1125;
T1125*new1125(void);
void gc_sweep1126(fsoc*c);
void gc_mark1126(T1126*o);
void gc_align_mark1126(fsoc*c,gc1126*p);
extern fsoc H1126;
T1126*new1126(void);
void gc_mark1127(T1127 o);
T1127 new1127(unsigned int size);
void gc_sweep1128(fsoc*c);
void gc_mark1128(T1128*o);
void gc_align_mark1128(fsoc*c,gc1128*p);
extern fsoc H1128;
T1128*new1128(void);
void gc_sweep1129(fsoc*c);
void gc_mark1129(T1129*o);
void gc_align_mark1129(fsoc*c,gc1129*p);
extern fsoc H1129;
T1129*new1129(void);
void gc_sweep625(fsoc*c);
void gc_mark625(T625*o);
void gc_align_mark625(fsoc*c,gc625*p);
extern fsoc H625;
T625*new625(void);
void gc_sweep1130(fsoc*c);
void gc_mark1130(T1130*o);
void gc_align_mark1130(fsoc*c,gc1130*p);
extern fsoc H1130;
T1130*new1130(void);
void gc_sweep1131(fsoc*c);
void gc_mark1131(T1131*o);
void gc_align_mark1131(fsoc*c,gc1131*p);
extern fsoc H1131;
T1131*new1131(void);
void gc_sweep1132(fsoc*c);
void gc_mark1132(T1132*o);
void gc_align_mark1132(fsoc*c,gc1132*p);
extern fsoc H1132;
T1132*new1132(void);
void gc_mark329(T329*o);
void gc_sweep1133(fsoc*c);
void gc_mark1133(T1133*o);
void gc_align_mark1133(fsoc*c,gc1133*p);
extern fsoc H1133;
T1133*new1133(void);
void gc_sweep1138(fsoc*c);
void gc_mark1138(T1138*o);
void gc_align_mark1138(fsoc*c,gc1138*p);
extern fsoc H1138;
T1138*new1138(void);
void gc_sweep1139(fsoc*c);
void gc_mark1139(T1139*o);
void gc_align_mark1139(fsoc*c,gc1139*p);
extern fsoc H1139;
T1139*new1139(void);
void gc_sweep1140(fsoc*c);
void gc_mark1140(T1140*o);
void gc_align_mark1140(fsoc*c,gc1140*p);
extern fsoc H1140;
T1140*new1140(void);
void gc_sweep1141(fsoc*c);
void gc_mark1141(T1141*o);
void gc_align_mark1141(fsoc*c,gc1141*p);
extern fsoc H1141;
T1141*new1141(void);
void gc_sweep1142(fsoc*c);
void gc_update_weak_ref_item1142(T1142* wr);
void gc_mark1142(T1142*o);
void gc_align_mark1142(fsoc*c,gc1142*p);
extern fsoc H1142;
T1142*new1142(void);
void gc_sweep1143(fsoc*c);
void gc_mark1143(T1143*o);
void gc_align_mark1143(fsoc*c,gc1143*p);
extern fsoc H1143;
T1143*new1143(void);
void gc_mark1144(T1144 o);
T1144 new1144(unsigned int size);
void gc_sweep1145(fsoc*c);
void gc_update_weak_ref_item1145(T1145* wr);
void gc_mark1145(T1145*o);
void gc_align_mark1145(fsoc*c,gc1145*p);
extern fsoc H1145;
T1145*new1145(void);
void gc_sweep1146(fsoc*c);
void gc_mark1146(T1146*o);
void gc_align_mark1146(fsoc*c,gc1146*p);
extern fsoc H1146;
T1146*new1146(void);
void gc_mark1147(T1147 o);
T1147 new1147(unsigned int size);
void gc_mark1148(T1148 o);
T1148 new1148(unsigned int size);
void gc_sweep1149(fsoc*c);
void gc_mark1149(T1149*o);
void gc_align_mark1149(fsoc*c,gc1149*p);
extern fsoc H1149;
T1149*new1149(void);
void gc_sweep1152(fsoc*c);
void gc_update_weak_ref_item1152(T1152* wr);
void gc_mark1152(T1152*o);
void gc_align_mark1152(fsoc*c,gc1152*p);
extern fsoc H1152;
T1152*new1152(void);
void gc_sweep1153(fsoc*c);
void gc_mark1153(T1153*o);
void gc_align_mark1153(fsoc*c,gc1153*p);
extern fsoc H1153;
T1153*new1153(void);
void gc_sweep1154(fsoc*c);
void gc_mark1154(T1154*o);
void gc_align_mark1154(fsoc*c,gc1154*p);
extern fsoc H1154;
T1154*new1154(void);
void gc_sweep400(fsoc*c);
void gc_mark400(T400*o);
void gc_align_mark400(fsoc*c,gc400*p);
extern fsoc H400;
T400*new400(void);
void gc_sweep1155(fsoc*c);
void gc_mark1155(T1155*o);
void gc_align_mark1155(fsoc*c,gc1155*p);
extern fsoc H1155;
T1155*new1155(void);
void gc_sweep552(fsoc*c);
void gc_mark552(T552*o);
void gc_align_mark552(fsoc*c,gc552*p);
extern fsoc H552;
T552*new552(void);
void gc_sweep1156(fsoc*c);
void gc_update_weak_ref_item1156(T1156* wr);
void gc_mark1156(T1156*o);
void gc_align_mark1156(fsoc*c,gc1156*p);
extern fsoc H1156;
T1156*new1156(void);
void gc_sweep1157(fsoc*c);
void gc_mark1157(T1157*o);
void gc_align_mark1157(fsoc*c,gc1157*p);
extern fsoc H1157;
T1157*new1157(void);
void gc_mark1158(T1158 o);
T1158 new1158(unsigned int size);
void gc_mark1159(T1159 o);
T1159 new1159(unsigned int size);
void gc_sweep1160(fsoc*c);
void gc_mark1160(T1160*o);
void gc_align_mark1160(fsoc*c,gc1160*p);
extern fsoc H1160;
T1160*new1160(void);
void gc_sweep1161(fsoc*c);
void gc_mark1161(T1161*o);
void gc_align_mark1161(fsoc*c,gc1161*p);
extern fsoc H1161;
T1161*new1161(void);
void gc_sweep1163(fsoc*c);
void gc_mark1163(T1163*o);
void gc_align_mark1163(fsoc*c,gc1163*p);
extern fsoc H1163;
T1163*new1163(void);
void gc_mark301(T301*o);
void gc_mark1165(T1165 o);
T1165 new1165(unsigned int size);
void gc_sweep1166(fsoc*c);
void gc_mark1166(T1166*o);
void gc_align_mark1166(fsoc*c,gc1166*p);
extern fsoc H1166;
T1166*new1166(void);
void gc_sweep1167(fsoc*c);
void gc_update_weak_ref_item1167(T1167* wr);
void gc_mark1167(T1167*o);
void gc_align_mark1167(fsoc*c,gc1167*p);
extern fsoc H1167;
T1167*new1167(void);
void gc_mark1168(T1168 o);
T1168 new1168(unsigned int size);
void gc_sweep1169(fsoc*c);
void gc_mark1169(T1169*o);
void gc_align_mark1169(fsoc*c,gc1169*p);
extern fsoc H1169;
T1169*new1169(void);
void gc_mark1171(T1171 o);
T1171 new1171(unsigned int size);
void gc_mark1172(T1172 o);
T1172 new1172(unsigned int size);
void gc_mark1173(T1173 o);
T1173 new1173(unsigned int size);
void gc_sweep1174(fsoc*c);
void gc_mark1174(T1174*o);
void gc_align_mark1174(fsoc*c,gc1174*p);
extern fsoc H1174;
T1174*new1174(void);
void gc_sweep1175(fsoc*c);
void gc_mark1175(T1175*o);
void gc_align_mark1175(fsoc*c,gc1175*p);
extern fsoc H1175;
T1175*new1175(void);
void gc_mark515(T515*o);
void gc_sweep1177(fsoc*c);
void gc_mark1177(T1177*o);
void gc_align_mark1177(fsoc*c,gc1177*p);
extern fsoc H1177;
T1177*new1177(void);
void gc_sweep762(fsoc*c);
void gc_mark762(T762*o);
void gc_align_mark762(fsoc*c,gc762*p);
extern fsoc H762;
T762*new762(void);
void gc_sweep1179(fsoc*c);
void gc_mark1179(T1179*o);
void gc_align_mark1179(fsoc*c,gc1179*p);
extern fsoc H1179;
T1179*new1179(void);
void gc_sweep1180(fsoc*c);
void gc_mark1180(T1180*o);
void gc_align_mark1180(fsoc*c,gc1180*p);
extern fsoc H1180;
T1180*new1180(void);
void gc_sweep1181(fsoc*c);
void gc_update_weak_ref_item1181(T1181* wr);
void gc_mark1181(T1181*o);
void gc_align_mark1181(fsoc*c,gc1181*p);
extern fsoc H1181;
T1181*new1181(void);
void gc_sweep1182(fsoc*c);
void gc_mark1182(T1182*o);
void gc_align_mark1182(fsoc*c,gc1182*p);
extern fsoc H1182;
T1182*new1182(void);
void gc_mark1183(T1183 o);
T1183 new1183(unsigned int size);
void gc_sweep1184(fsoc*c);
void gc_update_weak_ref_item1184(T1184* wr);
void gc_mark1184(T1184*o);
void gc_align_mark1184(fsoc*c,gc1184*p);
extern fsoc H1184;
T1184*new1184(void);
void gc_sweep1185(fsoc*c);
void gc_mark1185(T1185*o);
void gc_align_mark1185(fsoc*c,gc1185*p);
extern fsoc H1185;
T1185*new1185(void);
void gc_mark1186(T1186 o);
T1186 new1186(unsigned int size);
void gc_mark1187(T1187 o);
T1187 new1187(unsigned int size);
void gc_sweep1188(fsoc*c);
void gc_mark1188(T1188*o);
void gc_align_mark1188(fsoc*c,gc1188*p);
extern fsoc H1188;
T1188*new1188(void);
void gc_sweep1189(fsoc*c);
void gc_update_weak_ref_item1189(T1189* wr);
void gc_mark1189(T1189*o);
void gc_align_mark1189(fsoc*c,gc1189*p);
extern fsoc H1189;
T1189*new1189(void);
void gc_sweep1190(fsoc*c);
void gc_update_weak_ref_item1190(T1190* wr);
void gc_mark1190(T1190*o);
void gc_align_mark1190(fsoc*c,gc1190*p);
extern fsoc H1190;
T1190*new1190(void);
void gc_sweep1191(fsoc*c);
void gc_mark1191(T1191*o);
void gc_align_mark1191(fsoc*c,gc1191*p);
extern fsoc H1191;
T1191*new1191(void);
void gc_mark1192(T1192 o);
T1192 new1192(unsigned int size);
void gc_sweep1193(fsoc*c);
void gc_mark1193(T1193*o);
void gc_align_mark1193(fsoc*c,gc1193*p);
extern fsoc H1193;
T1193*new1193(void);
void gc_mark1194(T1194 o);
T1194 new1194(unsigned int size);
void gc_sweep632(fsoc*c);
void gc_mark632(T632*o);
void gc_align_mark632(fsoc*c,gc632*p);
extern fsoc H632;
T632*new632(void);
void gc_sweep640(fsoc*c);
void gc_mark640(T640*o);
void gc_align_mark640(fsoc*c,gc640*p);
extern fsoc H640;
T640*new640(void);
void gc_sweep553(fsoc*c);
void gc_mark553(T553*o);
void gc_align_mark553(fsoc*c,gc553*p);
extern fsoc H553;
T553*new553(void);
void gc_sweep645(fsoc*c);
void gc_mark645(T645*o);
void gc_align_mark645(fsoc*c,gc645*p);
extern fsoc H645;
T645*new645(void);
void gc_sweep642(fsoc*c);
void gc_mark642(T642*o);
void gc_align_mark642(fsoc*c,gc642*p);
extern fsoc H642;
T642*new642(void);
void gc_sweep643(fsoc*c);
void gc_mark643(T643*o);
void gc_align_mark643(fsoc*c,gc643*p);
extern fsoc H643;
T643*new643(void);
void gc_sweep638(fsoc*c);
void gc_mark638(T638*o);
void gc_align_mark638(fsoc*c,gc638*p);
extern fsoc H638;
T638*new638(void);
void gc_sweep641(fsoc*c);
void gc_mark641(T641*o);
void gc_align_mark641(fsoc*c,gc641*p);
extern fsoc H641;
T641*new641(void);
void gc_sweep639(fsoc*c);
void gc_mark639(T639*o);
void gc_align_mark639(fsoc*c,gc639*p);
extern fsoc H639;
T639*new639(void);
void gc_sweep644(fsoc*c);
void gc_mark644(T644*o);
void gc_align_mark644(fsoc*c,gc644*p);
extern fsoc H644;
T644*new644(void);
void gc_sweep635(fsoc*c);
void gc_mark635(T635*o);
void gc_align_mark635(fsoc*c,gc635*p);
extern fsoc H635;
T635*new635(void);
void gc_sweep634(fsoc*c);
void gc_mark634(T634*o);
void gc_align_mark634(fsoc*c,gc634*p);
extern fsoc H634;
T634*new634(void);
void gc_sweep637(fsoc*c);
void gc_mark637(T637*o);
void gc_align_mark637(fsoc*c,gc637*p);
extern fsoc H637;
T637*new637(void);
void gc_sweep1195(fsoc*c);
void gc_mark1195(T1195*o);
void gc_align_mark1195(fsoc*c,gc1195*p);
extern fsoc H1195;
T1195*new1195(void);
void gc_sweep1196(fsoc*c);
void gc_mark1196(T1196*o);
void gc_align_mark1196(fsoc*c,gc1196*p);
extern fsoc H1196;
T1196*new1196(void);
void gc_sweep1197(fsoc*c);
void gc_mark1197(T1197*o);
void gc_align_mark1197(fsoc*c,gc1197*p);
extern fsoc H1197;
T1197*new1197(void);
void gc_mark1198(T1198 o);
T1198 new1198(unsigned int size);
void gc_sweep678(fsoc*c);
void gc_mark678(T678*o);
void gc_align_mark678(fsoc*c,gc678*p);
extern fsoc H678;
T678*new678(void);
void gc_mark1199(T1199 o);
T1199 new1199(unsigned int size);
void gc_mark1200(T1200 o);
T1200 new1200(unsigned int size);
void gc_mark1201(T1201 o);
T1201 new1201(unsigned int size);
void gc_mark1202(T1202 o);
T1202 new1202(unsigned int size);
void gc_mark1203(T1203 o);
T1203 new1203(unsigned int size);
void gc_sweep1204(fsoc*c);
void gc_mark1204(T1204*o);
void gc_align_mark1204(fsoc*c,gc1204*p);
extern fsoc H1204;
T1204*new1204(void);
void gc_mark1205(T1205 o);
T1205 new1205(unsigned int size);
void gc_mark1206(T1206 o);
T1206 new1206(unsigned int size);
void gc_mark1207(T1207 o);
T1207 new1207(unsigned int size);
void gc_sweep1208(fsoc*c);
void gc_mark1208(T1208*o);
void gc_align_mark1208(fsoc*c,gc1208*p);
extern fsoc H1208;
T1208*new1208(void);
void gc_mark1209(T1209 o);
T1209 new1209(unsigned int size);
void gc_sweep721(fsoc*c);
void gc_mark721(T721*o);
void gc_align_mark721(fsoc*c,gc721*p);
extern fsoc H721;
T721*new721(void);
void gc_sweep1210(fsoc*c);
void gc_mark1210(T1210*o);
void gc_align_mark1210(fsoc*c,gc1210*p);
extern fsoc H1210;
T1210*new1210(void);
void gc_sweep373(fsoc*c);
void gc_mark373(T373*o);
void gc_align_mark373(fsoc*c,gc373*p);
extern fsoc H373;
T373*new373(void);
void gc_sweep666(fsoc*c);
void gc_mark666(T666*o);
void gc_align_mark666(fsoc*c,gc666*p);
extern fsoc H666;
T666*new666(void);
void gc_sweep657(fsoc*c);
void gc_mark657(T657*o);
void gc_align_mark657(fsoc*c,gc657*p);
extern fsoc H657;
T657*new657(void);
void gc_sweep1211(fsoc*c);
void gc_mark1211(T1211*o);
void gc_align_mark1211(fsoc*c,gc1211*p);
extern fsoc H1211;
T1211*new1211(void);
void gc_sweep1212(fsoc*c);
void gc_mark1212(T1212*o);
void gc_align_mark1212(fsoc*c,gc1212*p);
extern fsoc H1212;
T1212*new1212(void);
void gc_sweep662(fsoc*c);
void gc_mark662(T662*o);
void gc_align_mark662(fsoc*c,gc662*p);
extern fsoc H662;
T662*new662(void);
void gc_sweep1213(fsoc*c);
void gc_mark1213(T1213*o);
void gc_align_mark1213(fsoc*c,gc1213*p);
extern fsoc H1213;
T1213*new1213(void);
void gc_sweep1214(fsoc*c);
void gc_mark1214(T1214*o);
void gc_align_mark1214(fsoc*c,gc1214*p);
extern fsoc H1214;
T1214*new1214(void);
void gc_sweep1215(fsoc*c);
void gc_mark1215(T1215*o);
void gc_align_mark1215(fsoc*c,gc1215*p);
extern fsoc H1215;
T1215*new1215(void);
void gc_mark1217(T1217 o);
T1217 new1217(unsigned int size);
void gc_mark1218(T1218 o);
T1218 new1218(unsigned int size);
void gc_sweep1219(fsoc*c);
void gc_mark1219(T1219*o);
void gc_align_mark1219(fsoc*c,gc1219*p);
extern fsoc H1219;
T1219*new1219(void);
void gc_sweep1220(fsoc*c);
void gc_update_weak_ref_item1220(T1220* wr);
void gc_mark1220(T1220*o);
void gc_align_mark1220(fsoc*c,gc1220*p);
extern fsoc H1220;
T1220*new1220(void);
void gc_mark1221(T1221 o);
T1221 new1221(unsigned int size);
void gc_sweep1222(fsoc*c);
void gc_update_weak_ref_item1222(T1222* wr);
void gc_mark1222(T1222*o);
void gc_align_mark1222(fsoc*c,gc1222*p);
extern fsoc H1222;
T1222*new1222(void);
void gc_sweep1223(fsoc*c);
void gc_mark1223(T1223*o);
void gc_align_mark1223(fsoc*c,gc1223*p);
extern fsoc H1223;
T1223*new1223(void);
void gc_mark1224(T1224 o);
T1224 new1224(unsigned int size);
void gc_mark1227(T1227 o);
T1227 new1227(unsigned int size);
void gc_mark1228(T1228 o);
T1228 new1228(unsigned int size);
void gc_mark1229(T1229 o);
T1229 new1229(unsigned int size);
void gc_mark1230(T1230 o);
T1230 new1230(unsigned int size);
void gc_sweep1231(fsoc*c);
void gc_mark1231(T1231*o);
void gc_align_mark1231(fsoc*c,gc1231*p);
extern fsoc H1231;
T1231*new1231(void);
void gc_sweep1232(fsoc*c);
void gc_update_weak_ref_item1232(T1232* wr);
void gc_mark1232(T1232*o);
void gc_align_mark1232(fsoc*c,gc1232*p);
extern fsoc H1232;
T1232*new1232(void);
void gc_sweep1233(fsoc*c);
void gc_mark1233(T1233*o);
void gc_align_mark1233(fsoc*c,gc1233*p);
extern fsoc H1233;
T1233*new1233(void);
void gc_sweep1234(fsoc*c);
void gc_mark1234(T1234*o);
void gc_align_mark1234(fsoc*c,gc1234*p);
extern fsoc H1234;
T1234*new1234(void);
void gc_sweep1235(fsoc*c);
void gc_update_weak_ref_item1235(T1235* wr);
void gc_mark1235(T1235*o);
void gc_align_mark1235(fsoc*c,gc1235*p);
extern fsoc H1235;
T1235*new1235(void);
void gc_sweep1236(fsoc*c);
void gc_mark1236(T1236*o);
void gc_align_mark1236(fsoc*c,gc1236*p);
extern fsoc H1236;
T1236*new1236(void);
void gc_mark1237(T1237 o);
T1237 new1237(unsigned int size);
void gc_sweep1238(fsoc*c);
void gc_mark1238(T1238*o);
void gc_align_mark1238(fsoc*c,gc1238*p);
extern fsoc H1238;
T1238*new1238(void);
void gc_mark1239(T1239 o);
T1239 new1239(unsigned int size);
void gc_sweep1240(fsoc*c);
void gc_mark1240(T1240*o);
void gc_align_mark1240(fsoc*c,gc1240*p);
extern fsoc H1240;
T1240*new1240(void);
void gc_sweep1241(fsoc*c);
void gc_update_weak_ref_item1241(T1241* wr);
void gc_mark1241(T1241*o);
void gc_align_mark1241(fsoc*c,gc1241*p);
extern fsoc H1241;
T1241*new1241(void);
void gc_sweep1245(fsoc*c);
void gc_mark1245(T1245*o);
void gc_align_mark1245(fsoc*c,gc1245*p);
extern fsoc H1245;
T1245*new1245(void);
void gc_mark1246(T1246 o);
T1246 new1246(unsigned int size);
void gc_sweep1247(fsoc*c);
void gc_mark1247(T1247*o);
void gc_align_mark1247(fsoc*c,gc1247*p);
extern fsoc H1247;
T1247*new1247(void);
void gc_sweep1249(fsoc*c);
void gc_update_weak_ref_item1249(T1249* wr);
void gc_mark1249(T1249*o);
void gc_align_mark1249(fsoc*c,gc1249*p);
extern fsoc H1249;
T1249*new1249(void);
void gc_sweep1250(fsoc*c);
void gc_update_weak_ref_item1250(T1250* wr);
void gc_mark1250(T1250*o);
void gc_align_mark1250(fsoc*c,gc1250*p);
extern fsoc H1250;
T1250*new1250(void);
void gc_sweep1251(fsoc*c);
void gc_mark1251(T1251*o);
void gc_align_mark1251(fsoc*c,gc1251*p);
extern fsoc H1251;
T1251*new1251(void);
void gc_mark1252(T1252 o);
T1252 new1252(unsigned int size);
void gc_mark1253(T1253 o);
T1253 new1253(unsigned int size);
void gc_mark1254(T1254 o);
T1254 new1254(unsigned int size);
void gc_mark1255(T1255 o);
T1255 new1255(unsigned int size);
void gc_sweep1256(fsoc*c);
void gc_mark1256(T1256*o);
void gc_align_mark1256(fsoc*c,gc1256*p);
extern fsoc H1256;
T1256*new1256(void);
void gc_sweep1257(fsoc*c);
void gc_update_weak_ref_item1257(T1257* wr);
void gc_mark1257(T1257*o);
void gc_align_mark1257(fsoc*c,gc1257*p);
extern fsoc H1257;
T1257*new1257(void);
void gc_mark1258(T1258 o);
T1258 new1258(unsigned int size);
void gc_mark1260(T1260 o);
T1260 new1260(unsigned int size);
void gc_sweep1261(fsoc*c);
void gc_mark1261(T1261*o);
void gc_align_mark1261(fsoc*c,gc1261*p);
extern fsoc H1261;
T1261*new1261(void);
void gc_sweep1262(fsoc*c);
void gc_update_weak_ref_item1262(T1262* wr);
void gc_mark1262(T1262*o);
void gc_align_mark1262(fsoc*c,gc1262*p);
extern fsoc H1262;
T1262*new1262(void);
void gc_sweep1263(fsoc*c);
void gc_update_weak_ref_item1263(T1263* wr);
void gc_mark1263(T1263*o);
void gc_align_mark1263(fsoc*c,gc1263*p);
extern fsoc H1263;
T1263*new1263(void);
void gc_sweep1264(fsoc*c);
void gc_mark1264(T1264*o);
void gc_align_mark1264(fsoc*c,gc1264*p);
extern fsoc H1264;
T1264*new1264(void);
void gc_mark1265(T1265 o);
T1265 new1265(unsigned int size);
void gc_mark1266(T1266 o);
T1266 new1266(unsigned int size);
void gc_sweep1267(fsoc*c);
void gc_mark1267(T1267*o);
void gc_align_mark1267(fsoc*c,gc1267*p);
extern fsoc H1267;
T1267*new1267(void);
void gc_sweep1268(fsoc*c);
void gc_update_weak_ref_item1268(T1268* wr);
void gc_mark1268(T1268*o);
void gc_align_mark1268(fsoc*c,gc1268*p);
extern fsoc H1268;
T1268*new1268(void);
void gc_sweep1269(fsoc*c);
void gc_update_weak_ref_item1269(T1269* wr);
void gc_mark1269(T1269*o);
void gc_align_mark1269(fsoc*c,gc1269*p);
extern fsoc H1269;
T1269*new1269(void);
void gc_sweep1270(fsoc*c);
void gc_mark1270(T1270*o);
void gc_align_mark1270(fsoc*c,gc1270*p);
extern fsoc H1270;
T1270*new1270(void);
void gc_mark1271(T1271 o);
T1271 new1271(unsigned int size);
void gc_mark1272(T1272 o);
T1272 new1272(unsigned int size);
void gc_sweep1273(fsoc*c);
void gc_mark1273(T1273*o);
void gc_align_mark1273(fsoc*c,gc1273*p);
extern fsoc H1273;
T1273*new1273(void);
void gc_sweep1274(fsoc*c);
void gc_update_weak_ref_item1274(T1274* wr);
void gc_mark1274(T1274*o);
void gc_align_mark1274(fsoc*c,gc1274*p);
extern fsoc H1274;
T1274*new1274(void);
void gc_mark1275(T1275 o);
T1275 new1275(unsigned int size);
void gc_sweep1276(fsoc*c);
void gc_mark1276(T1276*o);
void gc_align_mark1276(fsoc*c,gc1276*p);
extern fsoc H1276;
T1276*new1276(void);
void gc_sweep1277(fsoc*c);
void gc_update_weak_ref_item1277(T1277* wr);
void gc_mark1277(T1277*o);
void gc_align_mark1277(fsoc*c,gc1277*p);
extern fsoc H1277;
T1277*new1277(void);
void gc_mark1278(T1278 o);
T1278 new1278(unsigned int size);
void gc_mark1279(T1279 o);
T1279 new1279(unsigned int size);
void gc_sweep1280(fsoc*c);
void gc_mark1280(T1280*o);
void gc_align_mark1280(fsoc*c,gc1280*p);
extern fsoc H1280;
T1280*new1280(void);
void gc_sweep1281(fsoc*c);
void gc_update_weak_ref_item1281(T1281* wr);
void gc_mark1281(T1281*o);
void gc_align_mark1281(fsoc*c,gc1281*p);
extern fsoc H1281;
T1281*new1281(void);
void gc_sweep1282(fsoc*c);
void gc_mark1282(T1282*o);
void gc_align_mark1282(fsoc*c,gc1282*p);
extern fsoc H1282;
T1282*new1282(void);
void gc_mark1283(T1283 o);
T1283 new1283(unsigned int size);
void gc_sweep1284(fsoc*c);
void gc_update_weak_ref_item1284(T1284* wr);
void gc_mark1284(T1284*o);
void gc_align_mark1284(fsoc*c,gc1284*p);
extern fsoc H1284;
T1284*new1284(void);
void gc_mark1285(T1285 o);
T1285 new1285(unsigned int size);
void gc_sweep407(fsoc*c);
void gc_mark407(T407*o);
void gc_align_mark407(fsoc*c,gc407*p);
extern fsoc H407;
T407*new407(void);
void gc_sweep722(fsoc*c);
void gc_mark722(T722*o);
void gc_align_mark722(fsoc*c,gc722*p);
extern fsoc H722;
T722*new722(void);
void gc_mark1286(T1286 o);
T1286 new1286(unsigned int size);
void gc_sweep1287(fsoc*c);
void gc_mark1287(T1287*o);
void gc_align_mark1287(fsoc*c,gc1287*p);
extern fsoc H1287;
T1287*new1287(void);
void gc_sweep1288(fsoc*c);
void gc_update_weak_ref_item1288(T1288* wr);
void gc_mark1288(T1288*o);
void gc_align_mark1288(fsoc*c,gc1288*p);
extern fsoc H1288;
T1288*new1288(void);
void gc_mark1289(T1289 o);
T1289 new1289(unsigned int size);
void gc_sweep1290(fsoc*c);
void gc_update_weak_ref_item1290(T1290* wr);
void gc_mark1290(T1290*o);
void gc_align_mark1290(fsoc*c,gc1290*p);
extern fsoc H1290;
T1290*new1290(void);
void gc_sweep1291(fsoc*c);
void gc_mark1291(T1291*o);
void gc_align_mark1291(fsoc*c,gc1291*p);
extern fsoc H1291;
T1291*new1291(void);
void gc_mark1292(T1292 o);
T1292 new1292(unsigned int size);
void gc_mark1293(T1293 o);
T1293 new1293(unsigned int size);
void gc_sweep1294(fsoc*c);
void gc_mark1294(T1294*o);
void gc_align_mark1294(fsoc*c,gc1294*p);
extern fsoc H1294;
T1294*new1294(void);
void gc_sweep1295(fsoc*c);
void gc_update_weak_ref_item1295(T1295* wr);
void gc_mark1295(T1295*o);
void gc_align_mark1295(fsoc*c,gc1295*p);
extern fsoc H1295;
T1295*new1295(void);
void gc_sweep1296(fsoc*c);
void gc_update_weak_ref_item1296(T1296* wr);
void gc_mark1296(T1296*o);
void gc_align_mark1296(fsoc*c,gc1296*p);
extern fsoc H1296;
T1296*new1296(void);
void gc_sweep1297(fsoc*c);
void gc_mark1297(T1297*o);
void gc_align_mark1297(fsoc*c,gc1297*p);
extern fsoc H1297;
T1297*new1297(void);
void gc_mark1298(T1298 o);
T1298 new1298(unsigned int size);
void gc_sweep1299(fsoc*c);
void gc_update_weak_ref_item1299(T1299* wr);
void gc_mark1299(T1299*o);
void gc_align_mark1299(fsoc*c,gc1299*p);
extern fsoc H1299;
T1299*new1299(void);
void gc_sweep1300(fsoc*c);
void gc_mark1300(T1300*o);
void gc_align_mark1300(fsoc*c,gc1300*p);
extern fsoc H1300;
T1300*new1300(void);
void gc_mark1301(T1301 o);
T1301 new1301(unsigned int size);
void gc_mark1302(T1302 o);
T1302 new1302(unsigned int size);
void gc_mark1303(T1303 o);
T1303 new1303(unsigned int size);
void gc_sweep1304(fsoc*c);
void gc_update_weak_ref_item1304(T1304* wr);
void gc_mark1304(T1304*o);
void gc_align_mark1304(fsoc*c,gc1304*p);
extern fsoc H1304;
T1304*new1304(void);
void gc_sweep1305(fsoc*c);
void gc_mark1305(T1305*o);
void gc_align_mark1305(fsoc*c,gc1305*p);
extern fsoc H1305;
T1305*new1305(void);
void gc_mark1306(T1306 o);
T1306 new1306(unsigned int size);
void gc_mark1307(T1307 o);
T1307 new1307(unsigned int size);
void gc_mark1308(T1308 o);
T1308 new1308(unsigned int size);
void gc_sweep350(fsoc*c);
void gc_mark350(T350*o);
void gc_align_mark350(fsoc*c,gc350*p);
extern fsoc H350;
T350*new350(void);
void gc_sweep1309(fsoc*c);
void gc_mark1309(T1309*o);
void gc_align_mark1309(fsoc*c,gc1309*p);
extern fsoc H1309;
T1309*new1309(void);
void gc_mark1310(T1310 o);
T1310 new1310(unsigned int size);
void gc_sweep1311(fsoc*c);
void gc_mark1311(T1311*o);
void gc_align_mark1311(fsoc*c,gc1311*p);
extern fsoc H1311;
T1311*new1311(void);
void gc_mark1312(T1312 o);
T1312 new1312(unsigned int size);
void gc_sweep1313(fsoc*c);
void gc_update_weak_ref_item1313(T1313* wr);
void gc_mark1313(T1313*o);
void gc_align_mark1313(fsoc*c,gc1313*p);
extern fsoc H1313;
T1313*new1313(void);
void gc_mark1314(T1314 o);
T1314 new1314(unsigned int size);
void gc_sweep1315(fsoc*c);
void gc_update_weak_ref_item1315(T1315* wr);
void gc_mark1315(T1315*o);
void gc_align_mark1315(fsoc*c,gc1315*p);
extern fsoc H1315;
T1315*new1315(void);
void gc_mark1316(T1316 o);
T1316 new1316(unsigned int size);
void gc_mark1317(T1317 o);
T1317 new1317(unsigned int size);
void gc_sweep1318(fsoc*c);
void gc_mark1318(T1318*o);
void gc_align_mark1318(fsoc*c,gc1318*p);
extern fsoc H1318;
T1318*new1318(void);
void gc_sweep1319(fsoc*c);
void gc_mark1319(T1319*o);
void gc_align_mark1319(fsoc*c,gc1319*p);
extern fsoc H1319;
T1319*new1319(void);
void gc_sweep1321(fsoc*c);
void gc_update_weak_ref_item1321(T1321* wr);
void gc_mark1321(T1321*o);
void gc_align_mark1321(fsoc*c,gc1321*p);
extern fsoc H1321;
T1321*new1321(void);
void gc_sweep758(fsoc*c);
void gc_mark758(T758*o);
void gc_align_mark758(fsoc*c,gc758*p);
extern fsoc H758;
T758*new758(void);
void gc_sweep759(fsoc*c);
void gc_mark759(T759*o);
void gc_align_mark759(fsoc*c,gc759*p);
extern fsoc H759;
T759*new759(void);
void gc_sweep760(fsoc*c);
void gc_mark760(T760*o);
void gc_align_mark760(fsoc*c,gc760*p);
extern fsoc H760;
T760*new760(void);
void gc_sweep755(fsoc*c);
void gc_mark755(T755*o);
void gc_align_mark755(fsoc*c,gc755*p);
extern fsoc H755;
T755*new755(void);
void gc_sweep756(fsoc*c);
void gc_mark756(T756*o);
void gc_align_mark756(fsoc*c,gc756*p);
extern fsoc H756;
T756*new756(void);
void gc_sweep757(fsoc*c);
void gc_mark757(T757*o);
void gc_align_mark757(fsoc*c,gc757*p);
extern fsoc H757;
T757*new757(void);
void gc_sweep1322(fsoc*c);
void gc_mark1322(T1322*o);
void gc_align_mark1322(fsoc*c,gc1322*p);
extern fsoc H1322;
T1322*new1322(void);
void gc_mark1323(T1323 o);
T1323 new1323(unsigned int size);
void gc_sweep1324(fsoc*c);
void gc_update_weak_ref_item1324(T1324* wr);
void gc_mark1324(T1324*o);
void gc_align_mark1324(fsoc*c,gc1324*p);
extern fsoc H1324;
T1324*new1324(void);
void gc_mark1325(T1325 o);
T1325 new1325(unsigned int size);
void gc_sweep1326(fsoc*c);
void gc_update_weak_ref_item1326(T1326* wr);
void gc_mark1326(T1326*o);
void gc_align_mark1326(fsoc*c,gc1326*p);
extern fsoc H1326;
T1326*new1326(void);
void gc_sweep1327(fsoc*c);
void gc_mark1327(T1327*o);
void gc_align_mark1327(fsoc*c,gc1327*p);
extern fsoc H1327;
T1327*new1327(void);
void gc_mark1328(T1328 o);
T1328 new1328(unsigned int size);
void gc_mark1329(T1329 o);
T1329 new1329(unsigned int size);
void gc_sweep1330(fsoc*c);
void gc_mark1330(T1330*o);
void gc_align_mark1330(fsoc*c,gc1330*p);
extern fsoc H1330;
T1330*new1330(void);
void gc_sweep1331(fsoc*c);
void gc_update_weak_ref_item1331(T1331* wr);
void gc_mark1331(T1331*o);
void gc_align_mark1331(fsoc*c,gc1331*p);
extern fsoc H1331;
T1331*new1331(void);
void gc_mark1332(T1332 o);
T1332 new1332(unsigned int size);
void gc_sweep1333(fsoc*c);
void gc_update_weak_ref_item1333(T1333* wr);
void gc_mark1333(T1333*o);
void gc_align_mark1333(fsoc*c,gc1333*p);
extern fsoc H1333;
T1333*new1333(void);
void gc_sweep1334(fsoc*c);
void gc_mark1334(T1334*o);
void gc_align_mark1334(fsoc*c,gc1334*p);
extern fsoc H1334;
T1334*new1334(void);
void gc_mark1335(T1335 o);
T1335 new1335(unsigned int size);
void gc_sweep1336(fsoc*c);
void gc_update_weak_ref_item1336(T1336* wr);
void gc_mark1336(T1336*o);
void gc_align_mark1336(fsoc*c,gc1336*p);
extern fsoc H1336;
T1336*new1336(void);
void gc_sweep1337(fsoc*c);
void gc_mark1337(T1337*o);
void gc_align_mark1337(fsoc*c,gc1337*p);
extern fsoc H1337;
T1337*new1337(void);
void gc_mark1338(T1338 o);
T1338 new1338(unsigned int size);
void gc_sweep1339(fsoc*c);
void gc_mark1339(T1339*o);
void gc_align_mark1339(fsoc*c,gc1339*p);
extern fsoc H1339;
T1339*new1339(void);
void gc_mark1340(T1340 o);
T1340 new1340(unsigned int size);
void gc_mark1341(T1341 o);
T1341 new1341(unsigned int size);
void gc_mark1342(T1342 o);
T1342 new1342(unsigned int size);
void gc_mark1343(T1343 o);
T1343 new1343(unsigned int size);
void gc_mark1344(T1344 o);
T1344 new1344(unsigned int size);
void gc_sweep1345(fsoc*c);
void gc_mark1345(T1345*o);
void gc_align_mark1345(fsoc*c,gc1345*p);
extern fsoc H1345;
T1345*new1345(void);
void gc_mark1346(T1346 o);
T1346 new1346(unsigned int size);
void gc_mark1347(T1347 o);
T1347 new1347(unsigned int size);
void gc_sweep1348(fsoc*c);
void gc_update_weak_ref_item1348(T1348* wr);
void gc_mark1348(T1348*o);
void gc_align_mark1348(fsoc*c,gc1348*p);
extern fsoc H1348;
T1348*new1348(void);
void gc_sweep1349(fsoc*c);
void gc_mark1349(T1349*o);
void gc_align_mark1349(fsoc*c,gc1349*p);
extern fsoc H1349;
T1349*new1349(void);
void gc_mark1350(T1350 o);
T1350 new1350(unsigned int size);
void gc_mark1351(T1351 o);
T1351 new1351(unsigned int size);
void gc_mark1352(T1352 o);
T1352 new1352(unsigned int size);
void gc_mark1353(T1353 o);
T1353 new1353(unsigned int size);
void gc_mark1354(T1354 o);
T1354 new1354(unsigned int size);
void gc_sweep1355(fsoc*c);
void gc_mark1355(T1355*o);
void gc_align_mark1355(fsoc*c,gc1355*p);
extern fsoc H1355;
T1355*new1355(void);
void gc_sweep1356(fsoc*c);
void gc_update_weak_ref_item1356(T1356* wr);
void gc_mark1356(T1356*o);
void gc_align_mark1356(fsoc*c,gc1356*p);
extern fsoc H1356;
T1356*new1356(void);
void gc_sweep811(fsoc*c);
void gc_mark811(T811*o);
void gc_align_mark811(fsoc*c,gc811*p);
extern fsoc H811;
T811*new811(void);
void gc_mark1357(T1357 o);
T1357 new1357(unsigned int size);
void gc_sweep1358(fsoc*c);
void gc_mark1358(T1358*o);
void gc_align_mark1358(fsoc*c,gc1358*p);
extern fsoc H1358;
T1358*new1358(void);
void gc_sweep1359(fsoc*c);
void gc_update_weak_ref_item1359(T1359* wr);
void gc_mark1359(T1359*o);
void gc_align_mark1359(fsoc*c,gc1359*p);
extern fsoc H1359;
T1359*new1359(void);
void gc_sweep1360(fsoc*c);
void gc_mark1360(T1360*o);
void gc_align_mark1360(fsoc*c,gc1360*p);
extern fsoc H1360;
T1360*new1360(void);
void gc_sweep1361(fsoc*c);
void gc_mark1361(T1361*o);
void gc_align_mark1361(fsoc*c,gc1361*p);
extern fsoc H1361;
T1361*new1361(void);
void gc_mark1362(T1362 o);
T1362 new1362(unsigned int size);
void gc_sweep1363(fsoc*c);
void gc_update_weak_ref_item1363(T1363* wr);
void gc_mark1363(T1363*o);
void gc_align_mark1363(fsoc*c,gc1363*p);
extern fsoc H1363;
T1363*new1363(void);
void gc_sweep1364(fsoc*c);
void gc_mark1364(T1364*o);
void gc_align_mark1364(fsoc*c,gc1364*p);
extern fsoc H1364;
T1364*new1364(void);
void gc_mark1365(T1365 o);
T1365 new1365(unsigned int size);
void gc_sweep331(fsoc*c);
void gc_mark331(T331*o);
void gc_align_mark331(fsoc*c,gc331*p);
extern fsoc H331;
T331*new331(void);
void gc_sweep1366(fsoc*c);
void gc_mark1366(T1366*o);
void gc_align_mark1366(fsoc*c,gc1366*p);
extern fsoc H1366;
T1366*new1366(void);
void gc_sweep1367(fsoc*c);
void gc_mark1367(T1367*o);
void gc_align_mark1367(fsoc*c,gc1367*p);
extern fsoc H1367;
T1367*new1367(void);
void gc_sweep1368(fsoc*c);
void gc_mark1368(T1368*o);
void gc_align_mark1368(fsoc*c,gc1368*p);
extern fsoc H1368;
T1368*new1368(void);
void gc_sweep1369(fsoc*c);
void gc_mark1369(T1369*o);
void gc_align_mark1369(fsoc*c,gc1369*p);
extern fsoc H1369;
T1369*new1369(void);
void gc_sweep1371(fsoc*c);
void gc_mark1371(T1371*o);
void gc_align_mark1371(fsoc*c,gc1371*p);
extern fsoc H1371;
T1371*new1371(void);
void gc_mark1372(T1372 o);
T1372 new1372(unsigned int size);
void gc_sweep1373(fsoc*c);
void gc_update_weak_ref_item1373(T1373* wr);
void gc_mark1373(T1373*o);
void gc_align_mark1373(fsoc*c,gc1373*p);
extern fsoc H1373;
T1373*new1373(void);
void gc_sweep1374(fsoc*c);
void gc_mark1374(T1374*o);
void gc_align_mark1374(fsoc*c,gc1374*p);
extern fsoc H1374;
T1374*new1374(void);
void gc_mark1375(T1375 o);
T1375 new1375(unsigned int size);
void gc_sweep1376(fsoc*c);
void gc_update_weak_ref_item1376(T1376* wr);
void gc_mark1376(T1376*o);
void gc_align_mark1376(fsoc*c,gc1376*p);
extern fsoc H1376;
T1376*new1376(void);
void gc_mark1377(T1377 o);
T1377 new1377(unsigned int size);
void gc_sweep1380(fsoc*c);
void gc_update_weak_ref_item1380(T1380* wr);
void gc_mark1380(T1380*o);
void gc_align_mark1380(fsoc*c,gc1380*p);
extern fsoc H1380;
T1380*new1380(void);
void gc_sweep1381(fsoc*c);
void gc_mark1381(T1381*o);
void gc_align_mark1381(fsoc*c,gc1381*p);
extern fsoc H1381;
T1381*new1381(void);
void gc_sweep1382(fsoc*c);
void gc_mark1382(T1382*o);
void gc_align_mark1382(fsoc*c,gc1382*p);
extern fsoc H1382;
T1382*new1382(void);
void gc_sweep1383(fsoc*c);
void gc_mark1383(T1383*o);
void gc_align_mark1383(fsoc*c,gc1383*p);
extern fsoc H1383;
T1383*new1383(void);
void gc_sweep1384(fsoc*c);
void gc_mark1384(T1384*o);
void gc_align_mark1384(fsoc*c,gc1384*p);
extern fsoc H1384;
T1384*new1384(void);
void gc_sweep1387(fsoc*c);
void gc_update_weak_ref_item1387(T1387* wr);
void gc_mark1387(T1387*o);
void gc_align_mark1387(fsoc*c,gc1387*p);
extern fsoc H1387;
T1387*new1387(void);
void gc_sweep1388(fsoc*c);
void gc_mark1388(T1388*o);
void gc_align_mark1388(fsoc*c,gc1388*p);
extern fsoc H1388;
T1388*new1388(void);
void gc_sweep1389(fsoc*c);
void gc_update_weak_ref_item1389(T1389* wr);
void gc_mark1389(T1389*o);
void gc_align_mark1389(fsoc*c,gc1389*p);
extern fsoc H1389;
T1389*new1389(void);
void gc_sweep1390(fsoc*c);
void gc_mark1390(T1390*o);
void gc_align_mark1390(fsoc*c,gc1390*p);
extern fsoc H1390;
T1390*new1390(void);
void gc_mark1391(T1391 o);
T1391 new1391(unsigned int size);
void gc_mark1392(T1392 o);
T1392 new1392(unsigned int size);
void gc_sweep1393(fsoc*c);
void gc_update_weak_ref_item1393(T1393* wr);
void gc_mark1393(T1393*o);
void gc_align_mark1393(fsoc*c,gc1393*p);
extern fsoc H1393;
T1393*new1393(void);
void gc_sweep1394(fsoc*c);
void gc_mark1394(T1394*o);
void gc_align_mark1394(fsoc*c,gc1394*p);
extern fsoc H1394;
T1394*new1394(void);
void gc_mark1395(T1395 o);
T1395 new1395(unsigned int size);
void gc_sweep54(fsoc*c);
void gc_mark54(T54*o);
void gc_align_mark54(fsoc*c,gc54*p);
extern fsoc H54;
T54*new54(void);
void gc_sweep764(fsoc*c);
void gc_mark764(T764*o);
void gc_align_mark764(fsoc*c,gc764*p);
extern fsoc H764;
T764*new764(void);
void gc_mark725(T725*o);
void gc_sweep650(fsoc*c);
void gc_mark650(T650*o);
void gc_align_mark650(fsoc*c,gc650*p);
extern fsoc H650;
T650*new650(void);
void gc_sweep1400(fsoc*c);
void gc_mark1400(T1400*o);
void gc_align_mark1400(fsoc*c,gc1400*p);
extern fsoc H1400;
T1400*new1400(void);
void gc_sweep1401(fsoc*c);
void gc_mark1401(T1401*o);
void gc_align_mark1401(fsoc*c,gc1401*p);
extern fsoc H1401;
T1401*new1401(void);
void gc_sweep1403(fsoc*c);
void gc_mark1403(T1403*o);
void gc_align_mark1403(fsoc*c,gc1403*p);
extern fsoc H1403;
T1403*new1403(void);
void gc_sweep1406(fsoc*c);
void gc_mark1406(T1406*o);
void gc_align_mark1406(fsoc*c,gc1406*p);
extern fsoc H1406;
T1406*new1406(void);
void gc_sweep656(fsoc*c);
void gc_mark656(T656*o);
void gc_align_mark656(fsoc*c,gc656*p);
extern fsoc H656;
T656*new656(void);
void gc_sweep659(fsoc*c);
void gc_mark659(T659*o);
void gc_align_mark659(fsoc*c,gc659*p);
extern fsoc H659;
T659*new659(void);
void gc_sweep660(fsoc*c);
void gc_mark660(T660*o);
void gc_align_mark660(fsoc*c,gc660*p);
extern fsoc H660;
T660*new660(void);
void gc_sweep663(fsoc*c);
void gc_mark663(T663*o);
void gc_align_mark663(fsoc*c,gc663*p);
extern fsoc H663;
T663*new663(void);
void gc_sweep665(fsoc*c);
void gc_mark665(T665*o);
void gc_align_mark665(fsoc*c,gc665*p);
extern fsoc H665;
T665*new665(void);
void gc_sweep658(fsoc*c);
void gc_mark658(T658*o);
void gc_align_mark658(fsoc*c,gc658*p);
extern fsoc H658;
T658*new658(void);
void gc_sweep653(fsoc*c);
void gc_mark653(T653*o);
void gc_align_mark653(fsoc*c,gc653*p);
extern fsoc H653;
T653*new653(void);
void gc_sweep664(fsoc*c);
void gc_mark664(T664*o);
void gc_align_mark664(fsoc*c,gc664*p);
extern fsoc H664;
T664*new664(void);
void gc_sweep646(fsoc*c);
void gc_mark646(T646*o);
void gc_align_mark646(fsoc*c,gc646*p);
extern fsoc H646;
T646*new646(void);
void gc_sweep1407(fsoc*c);
void gc_mark1407(T1407*o);
void gc_align_mark1407(fsoc*c,gc1407*p);
extern fsoc H1407;
T1407*new1407(void);
void gc_sweep1408(fsoc*c);
void gc_mark1408(T1408*o);
void gc_align_mark1408(fsoc*c,gc1408*p);
extern fsoc H1408;
T1408*new1408(void);
void gc_sweep517(fsoc*c);
void gc_mark517(T517*o);
void gc_align_mark517(fsoc*c,gc517*p);
extern fsoc H517;
T517*new517(void);
void gc_sweep1409(fsoc*c);
void gc_mark1409(T1409*o);
void gc_align_mark1409(fsoc*c,gc1409*p);
extern fsoc H1409;
T1409*new1409(void);
void gc_sweep667(fsoc*c);
void gc_mark667(T667*o);
void gc_align_mark667(fsoc*c,gc667*p);
extern fsoc H667;
T667*new667(void);
void gc_sweep655(fsoc*c);
void gc_mark655(T655*o);
void gc_align_mark655(fsoc*c,gc655*p);
extern fsoc H655;
T655*new655(void);
void gc_sweep651(fsoc*c);
void gc_mark651(T651*o);
void gc_align_mark651(fsoc*c,gc651*p);
extern fsoc H651;
T651*new651(void);
void gc_sweep1410(fsoc*c);
void gc_mark1410(T1410*o);
void gc_align_mark1410(fsoc*c,gc1410*p);
extern fsoc H1410;
T1410*new1410(void);
void gc_sweep1411(fsoc*c);
void gc_mark1411(T1411*o);
void gc_align_mark1411(fsoc*c,gc1411*p);
extern fsoc H1411;
T1411*new1411(void);
void gc_sweep1412(fsoc*c);
void gc_mark1412(T1412*o);
void gc_align_mark1412(fsoc*c,gc1412*p);
extern fsoc H1412;
T1412*new1412(void);
void gc_sweep1413(fsoc*c);
void gc_mark1413(T1413*o);
void gc_align_mark1413(fsoc*c,gc1413*p);
extern fsoc H1413;
T1413*new1413(void);
void gc_sweep1414(fsoc*c);
void gc_mark1414(T1414*o);
void gc_align_mark1414(fsoc*c,gc1414*p);
extern fsoc H1414;
T1414*new1414(void);
void gc_mark1415(T1415 o);
T1415 new1415(unsigned int size);
void gc_sweep1420(fsoc*c);
void gc_mark1420(T1420*o);
void gc_align_mark1420(fsoc*c,gc1420*p);
extern fsoc H1420;
T1420*new1420(void);
void gc_sweep520(fsoc*c);
void gc_mark520(T520*o);
void gc_align_mark520(fsoc*c,gc520*p);
extern fsoc H520;
T520*new520(void);
void gc_sweep115(fsoc*c);
void gc_mark115(T115*o);
void gc_align_mark115(fsoc*c,gc115*p);
extern fsoc H115;
T115*new115(void);
void gc_sweep723(fsoc*c);
void gc_mark723(T723*o);
void gc_align_mark723(fsoc*c,gc723*p);
extern fsoc H723;
T723*new723(void);
void gc_sweep728(fsoc*c);
void gc_mark728(T728*o);
void gc_align_mark728(fsoc*c,gc728*p);
extern fsoc H728;
T728*new728(void);
void gc_sweep109(fsoc*c);
void gc_mark109(T109*o);
void gc_align_mark109(fsoc*c,gc109*p);
extern fsoc H109;
T109*new109(void);
void gc_sweep1422(fsoc*c);
void gc_mark1422(T1422*o);
void gc_align_mark1422(fsoc*c,gc1422*p);
extern fsoc H1422;
T1422*new1422(void);
void gc_sweep408(fsoc*c);
void gc_mark408(T408*o);
void gc_align_mark408(fsoc*c,gc408*p);
extern fsoc H408;
T408*new408(void);
void gc_sweep405(fsoc*c);
void gc_mark405(T405*o);
void gc_align_mark405(fsoc*c,gc405*p);
extern fsoc H405;
T405*new405(void);
void gc_sweep360(fsoc*c);
void gc_mark360(T360*o);
void gc_align_mark360(fsoc*c,gc360*p);
extern fsoc H360;
T360*new360(void);
void gc_sweep773(fsoc*c);
void gc_mark773(T773*o);
void gc_align_mark773(fsoc*c,gc773*p);
extern fsoc H773;
T773*new773(void);
void gc_sweep629(fsoc*c);
void gc_mark629(T629*o);
void gc_align_mark629(fsoc*c,gc629*p);
extern fsoc H629;
T629*new629(void);
void gc_sweep775(fsoc*c);
void gc_mark775(T775*o);
void gc_align_mark775(fsoc*c,gc775*p);
extern fsoc H775;
T775*new775(void);
void gc_sweep772(fsoc*c);
void gc_mark772(T772*o);
void gc_align_mark772(fsoc*c,gc772*p);
extern fsoc H772;
T772*new772(void);
void gc_sweep524(fsoc*c);
void gc_mark524(T524*o);
void gc_align_mark524(fsoc*c,gc524*p);
extern fsoc H524;
T524*new524(void);
void gc_sweep774(fsoc*c);
void gc_mark774(T774*o);
void gc_align_mark774(fsoc*c,gc774*p);
extern fsoc H774;
T774*new774(void);
void gc_sweep628(fsoc*c);
void gc_mark628(T628*o);
void gc_align_mark628(fsoc*c,gc628*p);
extern fsoc H628;
T628*new628(void);
void gc_sweep1423(fsoc*c);
void gc_mark1423(T1423*o);
void gc_align_mark1423(fsoc*c,gc1423*p);
extern fsoc H1423;
T1423*new1423(void);
void gc_sweep813(fsoc*c);
void gc_mark813(T813*o);
void gc_align_mark813(fsoc*c,gc813*p);
extern fsoc H813;
T813*new813(void);
void gc_sweep815(fsoc*c);
void gc_mark815(T815*o);
void gc_align_mark815(fsoc*c,gc815*p);
extern fsoc H815;
T815*new815(void);
void gc_sweep816(fsoc*c);
void gc_mark816(T816*o);
void gc_align_mark816(fsoc*c,gc816*p);
extern fsoc H816;
T816*new816(void);
void gc_sweep817(fsoc*c);
void gc_mark817(T817*o);
void gc_align_mark817(fsoc*c,gc817*p);
extern fsoc H817;
T817*new817(void);
void gc_sweep1424(fsoc*c);
void gc_mark1424(T1424*o);
void gc_align_mark1424(fsoc*c,gc1424*p);
extern fsoc H1424;
T1424*new1424(void);
void gc_mark1425(T1425 o);
T1425 new1425(unsigned int size);
void gc_sweep1426(fsoc*c);
void gc_update_weak_ref_item1426(T1426* wr);
void gc_mark1426(T1426*o);
void gc_align_mark1426(fsoc*c,gc1426*p);
extern fsoc H1426;
T1426*new1426(void);
void gc_mark1427(T1427 o);
T1427 new1427(unsigned int size);
void gc_sweep1428(fsoc*c);
void gc_mark1428(T1428*o);
void gc_align_mark1428(fsoc*c,gc1428*p);
extern fsoc H1428;
T1428*new1428(void);
void gc_sweep1429(fsoc*c);
void gc_update_weak_ref_item1429(T1429* wr);
void gc_mark1429(T1429*o);
void gc_align_mark1429(fsoc*c,gc1429*p);
extern fsoc H1429;
T1429*new1429(void);
void gc_sweep1430(fsoc*c);
void gc_update_weak_ref_item1430(T1430* wr);
void gc_mark1430(T1430*o);
void gc_align_mark1430(fsoc*c,gc1430*p);
extern fsoc H1430;
T1430*new1430(void);
void gc_sweep1431(fsoc*c);
void gc_mark1431(T1431*o);
void gc_align_mark1431(fsoc*c,gc1431*p);
extern fsoc H1431;
T1431*new1431(void);
void gc_mark1432(T1432 o);
T1432 new1432(unsigned int size);
void gc_sweep1433(fsoc*c);
void gc_update_weak_ref_item1433(T1433* wr);
void gc_mark1433(T1433*o);
void gc_align_mark1433(fsoc*c,gc1433*p);
extern fsoc H1433;
T1433*new1433(void);
void gc_sweep1434(fsoc*c);
void gc_mark1434(T1434*o);
void gc_align_mark1434(fsoc*c,gc1434*p);
extern fsoc H1434;
T1434*new1434(void);
void gc_mark1435(T1435 o);
T1435 new1435(unsigned int size);
void gc_sweep1436(fsoc*c);
void gc_mark1436(T1436*o);
void gc_align_mark1436(fsoc*c,gc1436*p);
extern fsoc H1436;
T1436*new1436(void);
void gc_sweep1437(fsoc*c);
void gc_mark1437(T1437*o);
void gc_align_mark1437(fsoc*c,gc1437*p);
extern fsoc H1437;
T1437*new1437(void);
void gc_sweep1440(fsoc*c);
void gc_update_weak_ref_item1440(T1440* wr);
void gc_mark1440(T1440*o);
void gc_align_mark1440(fsoc*c,gc1440*p);
extern fsoc H1440;
T1440*new1440(void);
void gc_sweep1441(fsoc*c);
void gc_mark1441(T1441*o);
void gc_align_mark1441(fsoc*c,gc1441*p);
extern fsoc H1441;
T1441*new1441(void);
void gc_mark1442(T1442 o);
T1442 new1442(unsigned int size);
void gc_sweep661(fsoc*c);
void gc_mark661(T661*o);
void gc_align_mark661(fsoc*c,gc661*p);
extern fsoc H661;
T661*new661(void);
void gc_mark1443(T1443 o);
T1443 new1443(unsigned int size);
void gc_mark1444(T1444 o);
T1444 new1444(unsigned int size);
void gc_sweep693(fsoc*c);
void gc_mark693(T693*o);
void gc_align_mark693(fsoc*c,gc693*p);
extern fsoc H693;
T693*new693(void);
void gc_mark1445(T1445 o);
T1445 new1445(unsigned int size);
void gc_sweep1446(fsoc*c);
void gc_mark1446(T1446*o);
void gc_align_mark1446(fsoc*c,gc1446*p);
extern fsoc H1446;
T1446*new1446(void);
void gc_sweep1447(fsoc*c);
void gc_update_weak_ref_item1447(T1447* wr);
void gc_mark1447(T1447*o);
void gc_align_mark1447(fsoc*c,gc1447*p);
extern fsoc H1447;
T1447*new1447(void);
void gc_mark1448(T1448 o);
T1448 new1448(unsigned int size);
void gc_mark1449(T1449 o);
T1449 new1449(unsigned int size);
void gc_mark1450(T1450 o);
T1450 new1450(unsigned int size);
void gc_mark1451(T1451 o);
T1451 new1451(unsigned int size);
void gc_sweep1453(fsoc*c);
void gc_update_weak_ref_item1453(T1453* wr);
void gc_mark1453(T1453*o);
void gc_align_mark1453(fsoc*c,gc1453*p);
extern fsoc H1453;
T1453*new1453(void);
void gc_sweep1454(fsoc*c);
void gc_mark1454(T1454*o);
void gc_align_mark1454(fsoc*c,gc1454*p);
extern fsoc H1454;
T1454*new1454(void);
void gc_mark1455(T1455 o);
T1455 new1455(unsigned int size);
void gc_sweep966(fsoc*c);
void gc_mark966(T966*o);
void gc_align_mark966(fsoc*c,gc966*p);
extern fsoc H966;
T966*new966(void);
void gc_sweep624(fsoc*c);
void gc_mark624(T624*o);
void gc_align_mark624(fsoc*c,gc624*p);
extern fsoc H624;
T624*new624(void);
void gc_sweep550(fsoc*c);
void gc_mark550(T550*o);
void gc_align_mark550(fsoc*c,gc550*p);
extern fsoc H550;
T550*new550(void);
void gc_sweep1468(fsoc*c);
void gc_mark1468(T1468*o);
void gc_align_mark1468(fsoc*c,gc1468*p);
extern fsoc H1468;
T1468*new1468(void);
void gc_sweep1469(fsoc*c);
void gc_mark1469(T1469*o);
void gc_align_mark1469(fsoc*c,gc1469*p);
extern fsoc H1469;
T1469*new1469(void);
void gc_sweep544(fsoc*c);
void gc_mark544(T544*o);
void gc_align_mark544(fsoc*c,gc544*p);
extern fsoc H544;
T544*new544(void);
void gc_sweep545(fsoc*c);
void gc_mark545(T545*o);
void gc_align_mark545(fsoc*c,gc545*p);
extern fsoc H545;
T545*new545(void);
void gc_sweep546(fsoc*c);
void gc_mark546(T546*o);
void gc_align_mark546(fsoc*c,gc546*p);
extern fsoc H546;
T546*new546(void);
void gc_sweep547(fsoc*c);
void gc_mark547(T547*o);
void gc_align_mark547(fsoc*c,gc547*p);
extern fsoc H547;
T547*new547(void);
void gc_sweep548(fsoc*c);
void gc_mark548(T548*o);
void gc_align_mark548(fsoc*c,gc548*p);
extern fsoc H548;
T548*new548(void);
void gc_sweep549(fsoc*c);
void gc_mark549(T549*o);
void gc_align_mark549(fsoc*c,gc549*p);
extern fsoc H549;
T549*new549(void);
void gc_sweep1475(fsoc*c);
void gc_mark1475(T1475*o);
void gc_align_mark1475(fsoc*c,gc1475*p);
extern fsoc H1475;
T1475*new1475(void);
void gc_sweep1479(fsoc*c);
void gc_mark1479(T1479*o);
void gc_align_mark1479(fsoc*c,gc1479*p);
extern fsoc H1479;
T1479*new1479(void);
void gc_sweep787(fsoc*c);
void gc_mark787(T787*o);
void gc_align_mark787(fsoc*c,gc787*p);
extern fsoc H787;
T787*new787(void);
void gc_sweep1481(fsoc*c);
void gc_mark1481(T1481*o);
void gc_align_mark1481(fsoc*c,gc1481*p);
extern fsoc H1481;
T1481*new1481(void);
void gc_sweep784(fsoc*c);
void gc_mark784(T784*o);
void gc_align_mark784(fsoc*c,gc784*p);
extern fsoc H784;
T784*new784(void);
void gc_sweep1487(fsoc*c);
void gc_mark1487(T1487*o);
void gc_align_mark1487(fsoc*c,gc1487*p);
extern fsoc H1487;
T1487*new1487(void);
void gc_sweep1488(fsoc*c);
void gc_mark1488(T1488*o);
void gc_align_mark1488(fsoc*c,gc1488*p);
extern fsoc H1488;
T1488*new1488(void);
void gc_sweep698(fsoc*c);
void gc_mark698(T698*o);
void gc_align_mark698(fsoc*c,gc698*p);
extern fsoc H698;
T698*new698(void);
void gc_sweep1489(fsoc*c);
void gc_mark1489(T1489*o);
void gc_align_mark1489(fsoc*c,gc1489*p);
extern fsoc H1489;
T1489*new1489(void);
void gc_mark1490(T1490 o);
T1490 new1490(unsigned int size);
void gc_mark1491(T1491 o);
T1491 new1491(unsigned int size);
void gc_mark1492(T1492 o);
T1492 new1492(unsigned int size);
void gc_sweep1493(fsoc*c);
void gc_mark1493(T1493*o);
void gc_align_mark1493(fsoc*c,gc1493*p);
extern fsoc H1493;
T1493*new1493(void);
void gc_sweep1494(fsoc*c);
void gc_mark1494(T1494*o);
void gc_align_mark1494(fsoc*c,gc1494*p);
extern fsoc H1494;
T1494*new1494(void);
void gc_mark1495(T1495 o);
T1495 new1495(unsigned int size);
void gc_sweep1496(fsoc*c);
void gc_update_weak_ref_item1496(T1496* wr);
void gc_mark1496(T1496*o);
void gc_align_mark1496(fsoc*c,gc1496*p);
extern fsoc H1496;
T1496*new1496(void);
void gc_mark1497(T1497 o);
T1497 new1497(unsigned int size);
void gc_sweep695(fsoc*c);
void gc_mark695(T695*o);
void gc_align_mark695(fsoc*c,gc695*p);
extern fsoc H695;
T695*new695(void);
void gc_mark1498(T1498 o);
T1498 new1498(unsigned int size);
void gc_mark1499(T1499 o);
T1499 new1499(unsigned int size);
void gc_sweep1500(fsoc*c);
void gc_mark1500(T1500*o);
void gc_align_mark1500(fsoc*c,gc1500*p);
extern fsoc H1500;
T1500*new1500(void);
void gc_sweep1501(fsoc*c);
void gc_update_weak_ref_item1501(T1501* wr);
void gc_mark1501(T1501*o);
void gc_align_mark1501(fsoc*c,gc1501*p);
extern fsoc H1501;
T1501*new1501(void);
void gc_sweep1514(fsoc*c);
void gc_mark1514(T1514*o);
void gc_align_mark1514(fsoc*c,gc1514*p);
extern fsoc H1514;
T1514*new1514(void);
void gc_sweep771(fsoc*c);
void gc_mark771(T771*o);
void gc_align_mark771(fsoc*c,gc771*p);
extern fsoc H771;
T771*new771(void);
void gc_sweep1515(fsoc*c);
void gc_mark1515(T1515*o);
void gc_align_mark1515(fsoc*c,gc1515*p);
extern fsoc H1515;
T1515*new1515(void);
void gc_sweep769(fsoc*c);
void gc_mark769(T769*o);
void gc_align_mark769(fsoc*c,gc769*p);
extern fsoc H769;
T769*new769(void);
void gc_sweep1518(fsoc*c);
void gc_mark1518(T1518*o);
void gc_align_mark1518(fsoc*c,gc1518*p);
extern fsoc H1518;
T1518*new1518(void);
void gc_mark1519(T1519 o);
T1519 new1519(unsigned int size);
void gc_sweep1520(fsoc*c);
void gc_mark1520(T1520*o);
void gc_align_mark1520(fsoc*c,gc1520*p);
extern fsoc H1520;
T1520*new1520(void);
void gc_sweep1521(fsoc*c);
void gc_update_weak_ref_item1521(T1521* wr);
void gc_mark1521(T1521*o);
void gc_align_mark1521(fsoc*c,gc1521*p);
extern fsoc H1521;
T1521*new1521(void);
void Xgc_mark359(T0*o);
void Xgc_mark670(T0*o);
void Xgc_mark334(T0*o);
void Xgc_mark383(T0*o);
void Xgc_mark381(T0*o);
void Xgc_mark370(T0*o);
void Xgc_mark325(T0*o);
void Xgc_mark335(T0*o);
void Xgc_mark330(T0*o);
void Xgc_mark541(T0*o);
void Xgc_mark372(T0*o);
void Xgc_mark338(T0*o);
void Xgc_mark543(T0*o);
void Xgc_mark531(T0*o);
void Xgc_mark754(T0*o);
void Xgc_mark64(T0*o);
void Xgc_mark673(T0*o);
void Xgc_mark669(T0*o);
void Xgc_mark398(T0*o);
void Xgc_mark1033(T0*o);
void Xgc_mark1176(T0*o);
void Xgc_mark461(T0*o);
void Xgc_mark337(T0*o);
void Xgc_mark1062(T0*o);
void Xgc_mark417(T0*o);
void Xgc_mark344(T0*o);
void Xgc_mark380(T0*o);
void Xgc_mark367(T0*o);
void Xgc_mark1151(T0*o);
void Xgc_mark1320(T0*o);
void Xgc_mark56(T0*o);
void Xgc_mark346(T0*o);
void Xgc_mark633(T0*o);
void Xgc_mark636(T0*o);
void Xgc_mark513(T0*o);
void Xgc_mark410(T0*o);
extern T25*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 1522
extern T7*g[];
extern T7*t[];
extern int se_strucT[];
void se_atexit(void);
void initialize_eiffel_runtime(int argc,char*argv[]);
int main(int argc,char*argv[]);
T0* se_manifest1139(T2 initial_lower,int argc,...);
T0* se_manifest1012(T2 initial_lower,int argc,...);
T0* se_manifest1063(T2 initial_lower,int argc,...);
T0* se_manifest995(int argc,...);
T0* se_manifest1423(int argc,...);
T0* se_manifest1140(T2 initial_lower,int argc,...);
T0* se_manifest1018(int argc,...);
T0* se_manifest1114(int argc,...);
int can_assign_to373_from372(T0* expression);
int can_assign_to785_from670(T0* expression);
int can_assign_to633_from330(T0* expression);
int can_assign_toATTRIBUTE_from330(T0* expression);
int can_assign_to644_from330(T0* expression);
int can_assign_to553_from330(T0* expression);
int can_assign_to639_from330(T0* expression);
int can_assign_to424_from330(T0* expression);
int can_assign_to641_from330(T0* expression);
int can_assign_to634_from330(T0* expression);
int can_assign_to642_from330(T0* expression);
int can_assign_to450_from380(T0* expression);
int can_assign_to356_from338(T0* expression);
int can_assign_to389_from338(T0* expression);
int can_assign_to414_from338(T0* expression);
int can_assign_to361_from338(T0* expression);
int can_assign_to650_from338(T0* expression);
int can_assign_to772_from325(T0* expression);
int can_assign_to400_from325(T0* expression);
int can_assign_to283_from34(T0* expression);
int can_assign_to338_from335(T0* expression);
int can_assign_to666_from335(T0* expression);
int can_assign_to337_from335(T0* expression);
int can_assign_to389_from335(T0* expression);
int can_assign_to344_from335(T0* expression);
int can_assign_to398_from335(T0* expression);
int can_assign_to334_from335(T0* expression);
int can_assign_to365_from367(T0* expression);
int can_assign_to530_from531(T0* expression);
int can_assign_to534_from531(T0* expression);
int can_assign_to536_from531(T0* expression);
int can_assign_to533_from531(T0* expression);
int can_assign_to529_from531(T0* expression);
int can_assign_to535_from531(T0* expression);
int can_assign_to537_from531(T0* expression);
int can_assign_to491_from359(T0* expression);
int can_assign_to429_from359(T0* expression);
int can_assign_to401_from359(T0* expression);
int can_assign_to463_from461(T0* expression);
int can_assign_to387_from334(T0* expression);
int can_assign_to450_from334(T0* expression);
int can_assign_to468_from334(T0* expression);
int can_assign_to473_from334(T0* expression);
int can_assign_to517_from334(T0* expression);
int can_assign_to344_from334(T0* expression);
int can_assign_to518_from334(T0* expression);
int can_assign_to467_from334(T0* expression);
int can_assign_to456_from334(T0* expression);
int can_assign_to508_from334(T0* expression);
int can_assign_to379_from334(T0* expression);
int can_assign_to365_from334(T0* expression);
int can_assign_to380_from334(T0* expression);
int can_assign_to374_from334(T0* expression);
int can_assign_to664_from334(T0* expression);

#ifdef __cplusplus
}
#endif
