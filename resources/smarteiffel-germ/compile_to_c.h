#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by Liberty Eiffel The GNU Eiffel Compiler, Eiffel tools and libraries
Release 2013.03 (Charles Adler, Jr.)
Copyright (C), 1994-2002 - INRIA - LORIA - ESIAL UHP Nancy 1 - FRANCE
Copyright (C), 2003-2005 - INRIA - LORIA - IUT Charlemagne Nancy 2 - FRANCE
D.COLNET, P.RIBET, C.ADRIAN, V.CROIZIER F.MERIZEN

Copyright (C), 2011-2013 - C.ADRIAN
http://liberty-eiffel.blogspot.com
https://github.com/LibertyEiffel/Liberty
C Compiler options used: -pipe -O2 -fno-gcse
*/

/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
  This file (SmartEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/

#ifndef _BASE_H
#define _BASE_H

#if defined(_MSC_VER) && (_MSC_VER >= 1400)       /* VC8+ */
# ifndef _CRT_SECURE_NO_DEPRECATE
#  define _CRT_SECURE_NO_DEPRECATE
# endif
# ifndef _CRT_NONSTDC_NO_DEPRECATE
#  define _CRT_NONSTDC_NO_DEPRECATE
# endif
#endif   /* VC8+ */

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  include <unistd.h>
#endif
#if !defined(WIN32) && \
       (defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
        defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#  define WIN32 1
#endif
#ifdef WIN32
#  include <windows.h>
#else
#  ifndef O_RDONLY
#    include <sys/file.h>
#  endif
#  ifndef O_RDONLY
#    define O_RDONLY 0000
#  endif
#endif

#if defined(_MSC_VER) && (_MSC_VER < 1600) /* MSVC older than v10 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "I64d"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c
#  define INT64_C(c) c ## i64
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## u
#  define UINT64_C(c) c ## ui64
#elif defined(__WATCOMC__) && (__WATCOMC__ <= 1220) /* WATCOM 12.2 or lower */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## UL
#  define UINT64_C(c) c ## ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "I64Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## UL
#  define UINT64_C(c) c ## ui64
#elif defined(__FreeBSD__) && (__FreeBSD__ < 5) /* FreeBSD before 5.0 */ && !defined (_SYS_INTTYPES_H_)
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#elif defined(__CYGWIN__) && defined(__BIT_TYPES_DEFINED__) /* Cygwin defines intxx_t in sys/types.h instead of inttypes.h */
#  include <cygwin/version.h>
#  if defined(CYGWIN_VERSION_DLL_MAJOR) && (CYGWIN_VERSION_DLL_MAJOR<1005)
typedef unsigned char uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
#  endif
#elif defined(SASC)
#    error("Too old SAS/C compiler, sorry.");
#elif defined(__SASC__)
#  if (__SASC__ < 750 ) /*  SAS/C before 7.50 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#  endif
#else
#  include <inttypes.h>
#  if !defined(INT8_MAX) && defined(INT16_MAX)
/* int8_t is not mandatory */
typedef int_least8_t int8_t;
#  endif
#endif

#if !defined(PRId16)
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "lld"
#elif !defined(PRId8)
#  define PRId8 "d"
#endif
#if !defined(INT16_C)
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## LL
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## UL
#  define UINT64_C(c) c ## ULL
#elif !defined(INT8_C)
#  define INT8_C(c) c
#  define UINT8_C(c) c ## u
#endif
#if !defined(INT16_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#  define INT8_MAX (INT8_C(127))
#  define INT16_MIN (-INT16_C(32767)-1)
#  define INT16_MAX (INT16_C(32767))
#  define INT32_MIN (-INT32_C(2147483647)-1)
#  define INT32_MAX (INT32_C(2147483647))
#  define INT64_MIN (-INT64_C(9223372036854775807)-1)
#  define INT64_MAX (INT64_C(9223372036854775807))
#elif !defined(INT8_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#endif


/*
  Endian stuff
*/
#if defined(BSD) && (BSD >= 199103)
#  include <machine/endian.h>
#elif defined(__alpha__) || defined(__alpha) || defined(_M_ALPHA)
/* bi-endian processor, current mode should be find in machine/endian.h file */
#  include <machine/endian.h>
#elif defined(linux)
#  include <endian.h>
#endif



#if !defined(BYTE_ORDER) && defined(__BYTE_ORDER)
#  define BYTE_ORDER      __BYTE_ORDER
#endif

#if !defined(LITTLE_ENDIAN) && defined(__LITTLE_ENDIAN)
#  define LITTLE_ENDIAN      __LITTLE_ENDIAN
#endif

#if !defined(BIG_ENDIAN) && defined(__BIG_ENDIAN)
#  define BIG_ENDIAN      __BIG_ENDIAN
#endif

#if !defined(LITTLE_ENDIAN)
#  define LITTLE_ENDIAN   1234    /* LSB first (vax, pc) */
#endif
#if !defined(BIG_ENDIAN)
#  define BIG_ENDIAN      4321    /* MSB first (IBM, net) */
#endif
#if !defined(PDP_ENDIAN)
#  define PDP_ENDIAN      3412    /* LSB first in word, MSW first in long */
#endif

#if !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_RIGHT)
#  define BYTE_ORDER      LITTLE_ENDIAN
#elif !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_LEFT)
#  define BYTE_ORDER      BIG_ENDIAN
#elif !defined(BYTE_ORDER)

/* ARM */
#  if defined(__ARMEL__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(__ARMEB__)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__arm__)
#    error "ARMs are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* HP RISC */
#  if defined(__hppa__) || defined(__hppa) || defined(__hp9000) || \
      defined(__hp9000s300) || defined(hp9000s300) || \
      defined(__hp9000s700) || defined(hp9000s700) || \
      defined(__hp9000s800) || defined(hp9000s800) || defined(hp9000s820)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* IBM */
#  if defined(ibm032) || defined(ibm370) || defined(_IBMR2) || \
      defined(IBM370) || defined(__MVS__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Intel x86 */
#  if defined(i386) || defined(__i386__) || defined(__i386) || \
      defined(_M_IX86) || defined(_X86_) || defined(__THW_INTEL) || \
      defined(sun386)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Intel Itanium */
#  if defined(__ia64__) || defined(_IA64) || defined(__IA64__) || \
      defined(_M_IA64)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Nationnal Semiconductor 32000 serie */
#  if  defined(ns32000)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Motorola 68000 */
#  if defined(mc68000) || defined(is68k) || defined(macII) || defined(m68k)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* MIPS */
#  if defined(MIPSEL) || defined(_MIPSEL)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(MIPSEB) || defined(_MIPSEB)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__mips__) || defined(__mips) || defined(__MIPS__)
#    error "MIPS are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* Power PC */
/* this processor is bi-endian, how to know if little-endian is set? */
#  if defined(__powerpc) || defined(__powerpc__) || defined(__POWERPC__) || \
      defined(__ppc__) || defined(__ppc) || defined(_M_PPC) || \
      defined(__PPC) || defined(__PPC__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Pyramid 9810 */
#  if defined(pyr)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* RS/6000 */
#  if defined(__THW_RS6000) || defined(_IBMR2) || defined(_POWER) || \
      defined(_ARCH_PWR) || defined(_ARCH_PWR2)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* SPARC */
#  if defined(__sparc__) || defined(sparc) || defined(__sparc)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* CCI Tahoe */
#  if defined(tahoe)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* VAX */
#  if defined(vax) || defined(VAX) || defined(__vax__) || defined(_vax_) || \
      defined(__vax) || defined(__VAX)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* ELATE is a virtual OS with a little endian Virtual Processor */
#  if defined(__ELATE__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous little endian */
#  if defined(wrltitan)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous big endian */
#  if defined(apollo) || defined(__convex__) || defined(_CRAY) || defined(sel)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif
#endif


#if !defined(BYTE_ORDER)
#  error "Unknown byte order. Add your system in above macros once you know your system type. Please drop an e-mail to SmartEiffel@loria.fr"
#endif
#if (BYTE_ORDER != BIG_ENDIAN && BYTE_ORDER != LITTLE_ENDIAN)
#  error "Only little-endian and big-endian are valid at this time. Please drop an e-mail to SmartEiffel@loria.fr"
#endif


/*
  Byte swapping stuff
*/
extern void copy_swap_16(const uint16_t *src, uint16_t *dest, int count);


/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#  define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#  define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.

   NOTE: with gcc, -ansi is used for SmartEiffel generated files EXCEPT in
   -no_split mode. ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#  define JMP_BUF    sigjmp_buf
#  define SETJMP(x)  sigsetjmp( (x), 1)
#  define LONGJMP    siglongjmp
#else
#  define JMP_BUF    jmp_buf
#  define SETJMP(x)  setjmp( (x) )
#  define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER_8 is #1:
*/
typedef int8_t T1;
#define EIF_INTEGER_8 T1
#define M1 (INT8_C(0))
#define EIF_INTEGER_8_BITS (CHAR_BIT)
#define EIF_MINIMUM_INTEGER_8 (INT8_MIN)
#define EIF_MAXIMUM_INTEGER_8 (INT8_MAX)

/*
  Eiffel type INTEGER_16 is #10:
*/
typedef int16_t T10;
#define EIF_INTEGER_16 T10
#define M10 (INT16_C(0))
#define EIF_INTEGER_16_BITS (CHAR_BIT*sizeof(T10t))
#define EIF_MINIMUM_INTEGER_16 (INT16_MIN) /*-32768*/
#define EIF_MAXIMUM_INTEGER_16 (INT16_MAX) /*+32767*/

/*
  Eiffel type INTEGER or INTEGER_32 is #2:
*/
typedef int32_t T2;
#define EIF_INTEGER T2
#define EIF_INTEGER_32 T2
#define M2 (INT32_C(0))
#define EIF_INTEGER_BITS ((T2)(CHAR_BIT*sizeof(T2)))
#define EIF_INTEGER_32_BITS EIF_INTEGER_BITS
#define EIF_MINIMUM_INTEGER (INT32_MIN)
#define EIF_MAXIMUM_INTEGER (INT32_MAX)

/*
  Eiffel type INTEGER_64 is #11:
*/
typedef int64_t T11;
#define EIF_INTEGER_64 T11
#define M11 (INT64_C(0))
#define EIF_INTEGER_64_BITS (CHAR_BIT*sizeof(T11))
#define EIF_MINIMUM_INTEGER_64 (INT64_MIN)
#define EIF_MAXIMUM_INTEGER_64 (INT64_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T10)(x))
#define T3to_integer(x) ((signed char)(x))
#define T3to_integer_8(x) ((signed char)(x))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL_32 is #4:
*/
typedef float T4;
typedef T4 real32_t;
#define EIF_REAL_32 T4
#define M4 (0.0)
#define EIF_MINIMUM_REAL_32 (-(FLT_MAX))
#define EIF_MAXIMUM_REAL_32 (FLT_MAX)

/*
  Eiffel type REAL or REAL_64 is #5:
*/
typedef double T5;
typedef T5 real64_t;
#define EIF_REAL T5
#define EIF_REAL_64 T5
#define M5 (0.0)
#define EIF_MINIMUM_REAL_64 (-(DBL_MAX))
#define EIF_MINIMUM_REAL (EIF_MINIMUM_REAL_64)
#define EIF_MAXIMUM_REAL_64 (DBL_MAX)
#define EIF_MAXIMUM_REAL (EIF_MAXIMUM_REAL_64)

/*
  Eiffel type REAL_EXTENDED is #12:
*/
typedef long double T12;
typedef T12 real_extended_t;
#define EIF_REAL_EXTENDED T12
#define EIF_REAL_128 T12
#define M12 (0.0)
#define EIF_MINIMUM_REAL_EXTENDED (-(DBL_MAX))
#define EIF_MAXIMUM_REAL_EXTENDED (DBL_MAX)

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
/* Sometimes, NULL is defined as 0 */
#define M8 ((void*)NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ
#define EIF_ANY EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void* src, size_t size);

/*
   die method.
 */
void se_die(int code);

/*
    Runtime hooks. They allow different runtime modules to be quite independant. In time, they will also allow
    thread-safe operations.

    Currently known modules:
      - boost
      - no_check
      - sedb
      - gc
      - print stack
      - profile
      - plugins

    However, currently only profile uses this method. It will be extended to other modules later.

    The currently defined hooks are described in the enum below (the names should be self-explanatory).
 */
typedef enum {
  SE_HANDLE_EXCEPTION_SET, /* called when an exception handler is set, prior to SETJMP */
  SE_HANDLE_EXCEPTION_CLEAR, /* called when a feature with an exception handler normally returns */
  SE_HANDLE_EXCEPTION_THROWN, /* called when an exception is thrown, prior to the LONGJMP */
  SE_HANDLE_ENTER_GC, /* called when gc_start() begins */
  SE_HANDLE_EXIT_GC, /* called when gc_start() ends */
  SE_HANDLE_ENTER_PRINT_STACK, /* called when se_print_run_time_stack() begins */
  SE_HANDLE_EXIT_PRINT_STACK, /* called when se_print_run_time_stack() ends */
  SE_HANDLE_NO_MORE_MEMORY, /* called by se_alloc() and co */
  SE_HANDLE_SEDB_BREAK, /* called when sedb stops the program */
  SE_HANDLE_SEDB_CONTINUE, /* called when sedb continues the program */
  SE_HANDLE_RUNTIME_ERROR, /* called when a runtime error is raised and not caught by an exception. Cannot be raised in boost mode. */
  SE_HANDLE_DIE_WITH_CODE, /* called when the program is stopped by the die_with_code feature. The data points to the int code. */
  SE_HANDLE_NORMAL_EXIT /* called when the program correctly terminates. The data is null. */
} se_handler_action_t;

extern int handlers_count;
typedef void se_runtime_handler_t(se_handler_action_t action, void*data);
void register_handler(se_runtime_handler_t*handler);
void _handle(se_handler_action_t action, void*data);

#define handle(action,data) do{if(handlers_count>0)_handle(action,data);}while(0)

#endif /* #ifndef _BASE_H */
#define SE_BOOST 1
#define SE_GC_LIB 1
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <dirent.h>
#endif
#ifndef WIN32
#  include <unistd.h>
#endif

EIF_POINTER directory_open(EIF_POINTER path);
EIF_POINTER directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN directory_close(EIF_POINTER dirstream);
#define directory_current_working_directory (directory_cwd())
EIF_POINTER directory_cwd(void);
EIF_BOOLEAN directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN directory_rmdir(EIF_POINTER directory_path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_exec_system_none  0
#define basic_exec_system_posix 1
#define basic_exec_system_win32 2

/***************************
 * Common macros and types *
 * basic_exec_xxx          *
 ***************************/

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE || defined  __APPLE__

/*#  include <unistd.h> done in base.h */
/*#  include <sys/types.h> done in base.h */
#include <sys/wait.h>

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  pid_t id; /* the launched child process id */
  int running; /* true if the process is running */
  int child; /* true if the process is the child itself (useful for duplicate) */
  int status; /* the status of the child process if finished */
};

extern char** environ;

#define basic_exec_id(data) (((se_exec_data_t*)data)->id)
#define basic_exec_is_child(data) (((se_exec_data_t*)data)->child)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)
#define basic_exec_alloc_pipe() (calloc(2, sizeof(int)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)(pipe(p)>=0))
#define basic_exec_system basic_exec_system_posix

#elif defined WIN32
/*#  include <windows.h> done in base.h */

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  PROCESS_INFORMATION process_information;
  int running;
  DWORD status;
};

#define basic_exec_id(data) (((se_exec_data_t*)data)->process_information.dwProcessId)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)

#define basic_exec_alloc_pipe() (calloc(2, sizeof(HANDLE)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_system basic_exec_system_win32

extern EIF_BOOLEAN basic_exec_init_pipe(HANDLE*p);

#else
/* Dummy implementation that always reports an error back to the Eiffel side */
typedef int se_exec_data_t;

#define basic_exec_id(data) (-1)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (0)

#define basic_exec_alloc_pipe() (NULL)
#define basic_exec_free_pipe(p) /* dummy */
#define basic_exec_alloc_data() ((se_exec_data_t*)NULL)
#define basic_exec_free_data(p) /* dummy */
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)0)
#define basic_exec_system basic_exec_system_none

#endif

/***********************************
 * Prototypes for common functions *
 * basic_exec_xxx                  *
 ***********************************/

extern EIF_BOOLEAN basic_exec_is_finished(se_exec_data_t*data);
extern void basic_exec_wait(se_exec_data_t*data);
extern void basic_exec_cleanup(se_exec_data_t*data, int status);

/*************************************************
 * Posix-specific function prototypes and macros *
 * basic_exec_posix_xxx                          *
 *************************************************/

extern EIF_BOOLEAN basic_exec_posix_execute(se_exec_data_t*data, char*prog, char**args, EIF_BOOLEAN keep_env, char**add_env, int*in_fd, int*out_fd, int*err_fd);
extern EIF_INTEGER basic_exec_posix_get_character (EIF_INTEGER fd);
extern void basic_exec_posix_put_character(EIF_INTEGER fd, EIF_CHARACTER c);
extern void basic_exec_posix_wait_any(se_exec_data_t*data);
extern void basic_exec_posix_any_finished(se_exec_data_t*data);

#if basic_exec_system == basic_exec_system_posix
#define basic_exec_posix_flush(fd) (fsync(fd))
#define basic_exec_posix_close(fd) (close(fd))
#define basic_exec_posix_kill(data, sig) (kill((data)->id, (sig)))
#define basic_exec_posix_get_in_descriptor(pipe) (((int*)pipe)[0])
#define basic_exec_posix_get_out_descriptor(pipe) (((int*)pipe)[1])
#else
#define basic_exec_posix_flush(fd) /* dummy */
#define basic_exec_posix_close(fd) /* dummy */
#define basic_exec_posix_kill(data, sig) /* dummy */
#define basic_exec_posix_get_in_descriptor(pipe) 0
#define basic_exec_posix_get_out_descriptor(pipe) 0
#endif

/*************************************************
 * Win32-specific function prototypes and macros *
 * basic_exec_win32_xxx                          *
 *************************************************/

#if basic_exec_system == basic_exec_system_win32
#define basic_exec_win32_flush(h) FlushFileBuffers((HANDLE)h)
#define basic_exec_win32_close(h) CloseHandle((HANDLE)h)
#define basic_exec_win32_handle(data) ((int)((se_exec_data_t*)data)->process_information.hProcess)
#define basic_exec_win32_maximum_wait (MAXIMUM_WAIT_OBJECTS)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, HANDLE*in_h, HANDLE*out_h, HANDLE*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(HANDLE h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (HANDLE h);
#define basic_exec_win32_get_in_handle(pipe) (((HANDLE*)pipe)[0])
#define basic_exec_win32_get_out_handle(pipe) (((HANDLE*)pipe)[1])
#else
#define basic_exec_win32_flush(h) /* dummy */
#define basic_exec_win32_close(h) /* dummy */
#define basic_exec_win32_handle(data) (0)
#define basic_exec_win32_maximum_wait (0)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, void*in_h, void*out_h, void*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(void*handles, int count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(void*handles, int count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(void*h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (void*h);
#define basic_exec_win32_get_in_handle(pipe) NULL
#define basic_exec_win32_get_out_handle(pipe) NULL
#endif

extern void basic_exec_waitpid_init(EIF_OBJECT);
extern EIF_INTEGER basic_exec_waitpid_fd(void);
extern EIF_INTEGER basic_exec_waitpid_read_buffer(void*);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define mbi_unsigned_32_to_integer_64(x) (((int64_t)((uint32_t)(x))))
#define mbi_unsigned_less_than(a,b) ((((uint32_t)(a)) < ((uint32_t)(b))))
#define mbi_unsigned_greater_than(a,b) ((((uint32_t)(a)) > ((uint32_t)(b))))
#define mbi_unsigned_greater_or_equal(a,b) ((((uint32_t)(a)) >= ((uint32_t)(b))))
#define mbi_storage_at(s, n) (((s)+(n)))
EIF_BOOLEAN mbi_inc (int32_t *p);
EIF_BOOLEAN mbi_add (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_add_with_inc (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_dec (int32_t *p);
EIF_BOOLEAN mbi_subtract (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_subtract_with_dec (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply_with_add (int32_t a, int32_t b, int32_t c, int32_t *p);
EIF_INTEGER mbi_multiply_with_2_add (int32_t a, int32_t b, int32_t c, int32_t d, int32_t *p);
EIF_INTEGER mbi_divide (int32_t a, int32_t b, int32_t d, int32_t *r);



/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_getenv(v) (getenv((char*)v))
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#include <errno.h>

#define text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define io_fclose(p) (fclose((FILE*)(p)))
#define io_flush(p) (fflush((FILE*)(p)))
#define io_getc(f) (getc(((FILE*)(f))))
#define io_putc(b, f) (putc((b),((FILE*)(f))))
#define io_ungetc(b, f) (ungetc((b), (FILE*)(f)))
#define io_fread(b, n, f) (fread((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_fwrite(b, n, f) (fwrite((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_feof(f) (feof(((FILE*)(f))))
#define io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define io_remove(f) (remove(((char*)(f))))
#define io_fseek(f, o) (fseek((FILE*)(f),(o),SEEK_SET))
#define io_ftell(f) ((EIF_INTEGER_64)ftell((FILE*)(f)))

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  define read_stdin(b, s) (read(STDIN_FILENO, b, s))
#else
   extern int read_stdin(EIF_CHARACTER *buffer, int size);
#endif

extern void io_copy(char*source, char*target);
extern int io_file_exists(char*source);
extern int io_same_physical_file(char*path1,char*path2);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/

EIF_INTEGER fstat_st_size(EIF_POINTER path);
EIF_INTEGER_64 fstat_st_mtime(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_file(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_dir(EIF_POINTER path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define sprintf_pointer(buffer, pointer) sprintf((char*)(buffer),"%p",pointer)
void sprintf_real_64(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real64_t r);
void sprintf_real_extended(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real_extended_t r);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <sys/time.h>
#endif

extern EIF_INTEGER basic_microsecond_microsecond;
extern EIF_INTEGER_64 basic_microsecond_time;
#define basic_microsecond_update (_basic_microsecond_update())
void _basic_microsecond_update(void);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define pointer_hash_code(p) (((unsigned int)(unsigned long)(p))>>1)
#define pointer_to_natural_32(p) ((unsigned int) (p))
#define pointer_to_any(p) ((T0*)(p))
#define pointer_plus(p, o) (((char*)(p))+o)
/* C Header Pass 1: */
typedef union _se_agent se_agent;
typedef struct _se_agent0 se_agent0;
typedef struct S29 T29;
typedef int T286;
typedef struct S108 T108;
typedef void*T979;
typedef struct S100 T100;
typedef struct S121 T121;
typedef struct S274 T274;
typedef struct S112 T112;
typedef struct S107 T107;
typedef struct S282 T282;
typedef void*T272;
typedef struct S7 T7;
typedef struct S621 T621;
typedef struct S1008 T1008;
typedef int T639;
typedef struct S84 T84;
typedef struct S1009 T1009;
typedef struct S284 T284;
typedef int T285;
typedef int T550;
typedef struct S535 T535;
typedef struct S77 T77;
typedef struct S1010 T1010;
typedef struct S537 T537;
typedef struct S541 T541;
typedef struct S542 T542;
typedef struct S543 T543;
typedef struct S544 T544;
typedef struct S545 T545;
typedef struct S1011 T1011;
typedef struct S1012 T1012;
typedef struct S98 T98;
typedef struct S536 T536;
typedef struct S452 T452;
typedef struct S451 T451;
typedef struct S641 T641;
typedef struct S80 T80;
typedef struct S68 T68;
typedef struct S1013 T1013;
typedef struct S103 T103;
typedef struct S118 T118;
typedef struct S684 T684;
typedef struct S688 T688;
typedef struct S686 T686;
typedef struct S546 T546;
typedef struct S680 T680;
typedef struct S338 T338;
typedef struct S420 T420;
typedef struct S1014 T1014;
typedef struct S319 T319;
typedef struct S683 T683;
typedef struct S1015 T1015;
typedef struct S432 T432;
typedef struct S758 T758;
typedef struct S565 T565;
typedef struct S596 T596;
typedef struct S597 T597;
typedef struct S598 T598;
typedef struct S599 T599;
typedef struct S611 T611;
typedef struct S612 T612;
typedef struct S613 T613;
typedef struct S615 T615;
typedef struct S616 T616;
typedef struct S620 T620;
typedef struct S622 T622;
typedef struct S623 T623;
typedef struct S624 T624;
typedef struct S625 T625;
typedef struct S626 T626;
typedef struct S627 T627;
typedef struct S629 T629;
typedef struct S628 T628;
typedef struct S630 T630;
typedef struct S631 T631;
typedef struct S632 T632;
typedef struct S1016 T1016;
typedef void*T633;
typedef struct S1017 T1017;
typedef struct S1018 T1018;
typedef struct S368 T368;
typedef struct S93 T93;
typedef struct S95 T95;
typedef struct S1019 T1019;
typedef struct S1020 T1020;
typedef struct S1021 T1021;
typedef struct S277 T277;
typedef struct S87 T87;
typedef struct S533 T533;
typedef struct S1023 T1023;
typedef struct S328 T328;
typedef void*T106;
typedef struct S104 T104;
typedef void*T111;
typedef void*T120;
typedef struct S119 T119;
typedef void*T122;
typedef struct S89 T89;
typedef struct S439 T439;
typedef struct S1025 T1025;
typedef struct S1026 T1026;
typedef struct S115 T115;
typedef struct S424 T424;
typedef struct S1029 T1029;
typedef int T564;
typedef struct S1030 T1030;
typedef struct S1031 T1031;
typedef struct S790 T790;
typedef struct S792 T792;
typedef struct S793 T793;
typedef struct S794 T794;
typedef struct S795 T795;
typedef struct S327 T327;
typedef struct S1035 T1035;
typedef struct S1036 T1036;
typedef int T1037;
typedef struct S777 T777;
typedef struct S779 T779;
typedef int T1039;
typedef struct S778 T778;
typedef struct S1040 T1040;
typedef struct S1041 T1041;
typedef struct S58 T58;
typedef struct S1042 T1042;
typedef struct S1043 T1043;
typedef struct S293 T293;
typedef struct S1044 T1044;
typedef struct S1047 T1047;
typedef struct S1049 T1049;
typedef struct S1050 T1050;
typedef struct S1051 T1051;
typedef struct S1052 T1052;
typedef struct S281 T281;
typedef int T79;
typedef int T1054;
typedef struct S1056 T1056;
typedef struct S102 T102;
typedef struct S1059 T1059;
typedef struct S751 T751;
typedef struct S797 T797;
typedef struct S1061 T1061;
typedef struct S1063 T1063;
typedef struct S1065 T1065;
typedef struct S1067 T1067;
typedef struct S753 T753;
typedef struct S472 T472;
typedef struct S1070 T1070;
typedef struct S449 T449;
typedef struct S429 T429;
typedef struct S380 T380;
typedef struct S422 T422;
typedef struct S423 T423;
typedef struct S485 T485;
typedef struct S495 T495;
typedef struct S497 T497;
typedef struct S354 T354;
typedef struct S116 T116;
typedef struct S498 T498;
typedef struct S445 T445;
typedef struct S408 T408;
typedef struct S381 T381;
typedef struct S437 T437;
typedef struct S407 T407;
typedef struct S435 T435;
typedef struct S403 T403;
typedef struct S438 T438;
typedef struct S436 T436;
typedef struct S442 T442;
typedef struct S440 T440;
typedef struct S443 T443;
typedef struct S446 T446;
typedef struct S273 T273;
typedef struct S467 T467;
typedef struct S469 T469;
typedef struct S470 T470;
typedef struct S471 T471;
typedef struct S421 T421;
typedef struct S1071 T1071;
typedef struct S280 T280;
typedef struct S478 T478;
typedef struct S1072 T1072;
typedef struct S519 T519;
typedef struct S487 T487;
typedef struct S401 T401;
typedef struct S474 T474;
typedef struct S371 T371;
typedef struct S475 T475;
typedef struct S476 T476;
typedef struct S339 T339;
typedef struct S348 T348;
typedef struct S351 T351;
typedef struct S353 T353;
typedef struct S342 T342;
typedef struct S346 T346;
typedef struct S347 T347;
typedef struct S489 T489;
typedef struct S490 T490;
typedef struct S491 T491;
typedef struct S480 T480;
typedef struct S385 T385;
typedef struct S456 T456;
typedef struct S462 T462;
typedef struct S481 T481;
typedef struct S516 T516;
typedef struct S517 T517;
typedef struct S1073 T1073;
typedef struct S1074 T1074;
typedef struct S453 T453;
typedef struct S454 T454;
typedef struct S1075 T1075;
typedef struct S391 T391;
typedef struct S1076 T1076;
typedef struct S664 T664;
typedef struct S1077 T1077;
typedef struct S418 T418;
typedef struct S388 T388;
typedef struct S1078 T1078;
typedef struct S392 T392;
typedef struct S448 T448;
typedef struct S518 T518;
typedef struct S1079 T1079;
typedef struct S477 T477;
typedef struct S412 T412;
typedef struct S398 T398;
typedef struct S1080 T1080;
typedef struct S357 T357;
typedef struct S369 T369;
typedef struct S362 T362;
typedef struct S479 T479;
typedef struct S426 T426;
typedef struct S465 T465;
typedef struct S466 T466;
typedef struct S364 T364;
typedef struct S404 T404;
typedef struct S463 T463;
typedef struct S494 T494;
typedef struct S484 T484;
typedef struct S367 T367;
typedef struct S394 T394;
typedef struct S464 T464;
typedef struct S459 T459;
typedef struct S395 T395;
typedef struct S659 T659;
typedef struct S483 T483;
typedef struct S457 T457;
typedef struct S396 T396;
typedef struct S492 T492;
typedef struct S515 T515;
typedef struct S514 T514;
typedef struct S510 T510;
typedef struct S511 T511;
typedef struct S512 T512;
typedef struct S513 T513;
typedef struct S509 T509;
typedef struct S374 T374;
typedef struct S397 T397;
typedef struct S505 T505;
typedef struct S506 T506;
typedef struct S507 T507;
typedef struct S508 T508;
typedef struct S402 T402;
typedef struct S504 T504;
typedef struct S501 T501;
typedef struct S502 T502;
typedef struct S503 T503;
typedef struct S500 T500;
typedef struct S458 T458;
typedef struct S499 T499;
typedef struct S493 T493;
typedef struct S283 T283;
typedef struct S461 T461;
typedef struct S460 T460;
typedef struct S1081 T1081;
typedef struct S419 T419;
typedef struct S431 T431;
typedef struct S752 T752;
typedef struct S455 T455;
typedef struct S358 T358;
typedef struct S410 T410;
typedef struct S393 T393;
typedef struct S1082 T1082;
typedef struct S1083 T1083;
typedef struct S1084 T1084;
typedef struct S1085 T1085;
/*BUG:NA@runtime!*/typedef void*T85;
typedef struct S1089 T1089;
typedef struct S531 T531;
typedef struct S1090 T1090;
typedef struct S1092 T1092;
typedef struct S433 T433;
typedef struct S425 T425;
typedef T0 T1093;
typedef T0 T1096;
typedef struct S1098 T1098;
typedef struct S1099 T1099;
typedef struct S450 T450;
typedef struct S430 T430;
typedef struct S447 T447;
typedef struct S1100 T1100;
typedef struct S428 T428;
typedef struct S1101 T1101;
typedef struct S1103 T1103;
typedef struct S1104 T1104;
typedef struct S1106 T1106;
typedef struct S1108 T1108;
typedef struct S1111 T1111;
typedef struct S1112 T1112;
typedef struct S1115 T1115;
typedef struct S1116 T1116;
typedef struct S1117 T1117;
typedef struct S1118 T1118;
typedef struct S1119 T1119;
typedef struct S1120 T1120;
typedef struct S524 T524;
typedef struct S1122 T1122;
typedef struct S1126 T1126;
typedef struct S1127 T1127;
typedef struct S1128 T1128;
typedef struct S1129 T1129;
typedef struct S1130 T1130;
typedef struct S526 T526;
typedef struct S1131 T1131;
typedef struct S1132 T1132;
typedef struct S559 T559;
typedef struct S1134 T1134;
typedef struct S1135 T1135;
typedef struct S1136 T1136;
typedef struct S400 T400;
/*BUG:NA@runtime!*/typedef struct S365 T365;
typedef struct S1138 T1138;
typedef struct S1139 T1139;
typedef struct S1141 T1141;
typedef struct S1142 T1142;
typedef struct S635 T635;
typedef struct S1143 T1143;
typedef struct S1144 T1144;
typedef struct S1145 T1145;
typedef struct S335 T335;
typedef struct S1146 T1146;
typedef struct S1151 T1151;
typedef struct S1152 T1152;
typedef struct S1153 T1153;
typedef struct S1154 T1154;
typedef struct S1155 T1155;
typedef struct S1156 T1156;
typedef struct S1158 T1158;
typedef struct S1159 T1159;
typedef struct S1162 T1162;
typedef struct S1165 T1165;
typedef struct S1166 T1166;
typedef struct S1167 T1167;
typedef struct S406 T406;
typedef struct S1168 T1168;
typedef struct S560 T560;
typedef struct S1169 T1169;
typedef struct S1170 T1170;
typedef struct S1173 T1173;
typedef struct S1174 T1174;
typedef struct S1176 T1176;
typedef struct S311 T311;
typedef int T714;
typedef struct S1179 T1179;
typedef struct S1180 T1180;
typedef struct S1182 T1182;
typedef struct S1186 T1186;
/*BUG:NA@runtime!*/typedef struct S682 T682;
typedef struct S1189 T1189;
typedef struct S1190 T1190;
typedef struct S523 T523;
typedef struct S1192 T1192;
typedef struct S773 T773;
typedef struct S1194 T1194;
typedef struct S1195 T1195;
typedef struct S1196 T1196;
typedef struct S1197 T1197;
typedef struct S1199 T1199;
typedef struct S1200 T1200;
typedef struct S1203 T1203;
typedef struct S1204 T1204;
typedef struct S1205 T1205;
typedef struct S1206 T1206;
typedef struct S1208 T1208;
typedef struct S697 T697;
typedef struct S642 T642;
typedef struct S650 T650;
typedef struct S561 T561;
typedef struct S655 T655;
typedef struct S652 T652;
typedef struct S653 T653;
typedef struct S648 T648;
typedef struct S651 T651;
typedef struct S649 T649;
typedef struct S654 T654;
typedef struct S645 T645;
typedef struct S644 T644;
typedef struct S647 T647;
typedef struct S1210 T1210;
typedef struct S1211 T1211;
typedef struct S1212 T1212;
typedef struct S690 T690;
/*BUG:NA@runtime!*/typedef void*T340;
/*BUG:NA@runtime!*/typedef void*T389;
/*BUG:NA@runtime!*/typedef void*T387;
typedef struct S1219 T1219;
typedef struct S1223 T1223;
typedef struct S732 T732;
typedef struct S1225 T1225;
typedef struct S379 T379;
typedef struct S678 T678;
typedef struct S668 T668;
typedef struct S1226 T1226;
typedef struct S1227 T1227;
typedef struct S673 T673;
typedef struct S1228 T1228;
typedef struct S1229 T1229;
typedef struct S1230 T1230;
typedef struct S1234 T1234;
typedef struct S1235 T1235;
/*BUG:NA@runtime!*/typedef void*T376;
typedef struct S1237 T1237;
typedef struct S1238 T1238;
typedef struct S1240 T1240;
/*BUG:NA@runtime!*/typedef struct S331 T331;
/*BUG:NA@runtime!*/typedef struct S336 T336;
typedef struct S1246 T1246;
typedef struct S1247 T1247;
typedef struct S1248 T1248;
typedef struct S1249 T1249;
typedef struct S1250 T1250;
typedef struct S1251 T1251;
typedef struct S1253 T1253;
typedef struct S1255 T1255;
typedef struct S1256 T1256;
typedef struct S1260 T1260;
typedef struct S1262 T1262;
typedef struct S1264 T1264;
typedef struct S1265 T1265;
typedef struct S1266 T1266;
/*BUG:NA@runtime!*/typedef void*T341;
typedef struct S1271 T1271;
typedef struct S1272 T1272;
typedef struct S1276 T1276;
typedef struct S1277 T1277;
typedef struct S1278 T1278;
typedef struct S1279 T1279;
typedef struct S1282 T1282;
typedef struct S1283 T1283;
typedef struct S1284 T1284;
typedef struct S1285 T1285;
typedef struct S1288 T1288;
typedef struct S1289 T1289;
typedef struct S1291 T1291;
typedef struct S1292 T1292;
typedef struct S1295 T1295;
typedef struct S1296 T1296;
typedef struct S1297 T1297;
typedef struct S1299 T1299;
typedef struct S413 T413;
typedef struct S733 T733;
typedef struct S1302 T1302;
typedef struct S1303 T1303;
typedef struct S1305 T1305;
typedef struct S1306 T1306;
typedef struct S1309 T1309;
typedef struct S1310 T1310;
typedef struct S1311 T1311;
typedef struct S1312 T1312;
typedef struct S1314 T1314;
typedef struct S1315 T1315;
typedef struct S1319 T1319;
typedef struct S1320 T1320;
typedef struct S356 T356;
typedef struct S1324 T1324;
/*BUG:NA@runtime!*/typedef void*T549;
typedef struct S1326 T1326;
typedef struct S1328 T1328;
typedef struct S1330 T1330;
/*BUG:NA@runtime!*/typedef void*T1183;
/*BUG:NA@runtime!*/typedef T0 T1187;
typedef struct S1334 T1334;
typedef struct S1335 T1335;
typedef struct S1337 T1337;
typedef struct S769 T769;
typedef struct S770 T770;
typedef struct S771 T771;
typedef struct S766 T766;
typedef struct S767 T767;
typedef struct S768 T768;
typedef struct S1339 T1339;
typedef struct S1341 T1341;
typedef struct S1343 T1343;
typedef struct S1344 T1344;
typedef struct S1347 T1347;
typedef struct S1348 T1348;
typedef struct S1350 T1350;
typedef struct S1351 T1351;
typedef struct S1353 T1353;
typedef struct S1354 T1354;
typedef struct S1356 T1356;
/*BUG:NA@runtime!*/typedef void*T378;
/*BUG:NA@runtime!*/typedef void*T344;
typedef struct S1362 T1362;
typedef struct S1364 T1364;
typedef struct S1365 T1365;
typedef struct S1367 T1367;
typedef struct S1368 T1368;
typedef struct S1371 T1371;
typedef struct S1372 T1372;
typedef struct S1378 T1378;
typedef struct S1379 T1379;
typedef struct S823 T823;
typedef struct S1381 T1381;
typedef struct S1382 T1382;
typedef struct S1384 T1384;
typedef struct S1385 T1385;
typedef struct S1387 T1387;
typedef struct S1388 T1388;
typedef int T1391;
typedef struct S1392 T1392;
typedef struct S1393 T1393;
typedef struct S337 T337;
typedef struct S1395 T1395;
typedef struct S1396 T1396;
typedef struct S1397 T1397;
typedef struct S1398 T1398;
typedef struct S1400 T1400;
typedef struct S1402 T1402;
typedef struct S1403 T1403;
typedef struct S1405 T1405;
typedef struct S1409 T1409;
typedef struct S1410 T1410;
typedef struct S1411 T1411;
typedef struct S1412 T1412;
typedef struct S1413 T1413;
typedef struct S1416 T1416;
typedef struct S1417 T1417;
typedef struct S1418 T1418;
typedef struct S1419 T1419;
typedef struct S1422 T1422;
typedef struct S1423 T1423;
typedef struct S60 T60;
typedef struct S775 T775;
typedef int T1425;
typedef struct S736 T736;
typedef struct S660 T660;
typedef T0 T1427;
typedef struct S1429 T1429;
typedef struct S1430 T1430;
typedef struct S1431 T1431;
typedef struct S1432 T1432;
typedef struct S1434 T1434;
typedef struct S1437 T1437;
typedef struct S666 T666;
typedef struct S670 T670;
typedef struct S671 T671;
typedef struct S674 T674;
typedef struct S677 T677;
typedef struct S669 T669;
typedef struct S663 T663;
typedef struct S667 T667;
typedef uint64_t T16; /*NATURAL_64*/
typedef struct S675 T675;
typedef struct S656 T656;
typedef int T329;
typedef struct S1438 T1438;
typedef struct S1439 T1439;
typedef struct S525 T525;
typedef struct S1440 T1440;
typedef struct S679 T679;
typedef struct S665 T665;
typedef struct S661 T661;
typedef struct S1441 T1441;
typedef struct S1442 T1442;
typedef struct S1443 T1443;
typedef int T306;
typedef struct S1444 T1444;
typedef struct S1445 T1445;
typedef struct S1451 T1451;
typedef struct S528 T528;
typedef struct S123 T123;
typedef struct S734 T734;
typedef struct S739 T739;
typedef struct S117 T117;
typedef struct S1453 T1453;
typedef struct S414 T414;
typedef struct S411 T411;
typedef struct S366 T366;
typedef struct S785 T785;
typedef struct S638 T638;
typedef struct S787 T787;
typedef struct S784 T784;
typedef struct S676 T676;
typedef struct S532 T532;
typedef struct S786 T786;
typedef struct S637 T637;
typedef struct S1454 T1454;
typedef struct S825 T825;
typedef struct S827 T827;
typedef struct S828 T828;
typedef struct S829 T829;
typedef struct S1455 T1455;
typedef struct S1457 T1457;
typedef struct S1458 T1458;
typedef struct S1460 T1460;
typedef struct S1462 T1462;
typedef struct S1463 T1463;
typedef struct S1464 T1464;
typedef struct S1465 T1465;
typedef struct S1467 T1467;
typedef struct S1468 T1468;
typedef struct S1470 T1470;
typedef struct S1471 T1471;
typedef struct S1472 T1472;
typedef struct S672 T672;
typedef struct S704 T704;
typedef struct S1477 T1477;
typedef struct S1478 T1478;
typedef int T1483;
typedef struct S980 T980;
typedef struct S634 T634;
typedef struct S558 T558;
typedef T0 T1484;
typedef T0 T1486;
typedef T0 T1487;
typedef T0 T1489;
typedef T0 T1491;
typedef T0 T1493;
typedef struct S1495 T1495;
typedef struct S1496 T1496;
typedef struct S552 T552;
typedef struct S553 T553;
typedef struct S554 T554;
typedef struct S555 T555;
typedef struct S556 T556;
typedef struct S557 T557;
typedef int T1497;
typedef T0 T1499;
typedef struct S1502 T1502;
typedef struct S1506 T1506;
typedef int T1507;
typedef struct S799 T799;
typedef struct S1508 T1508;
typedef T0 T1509;
typedef struct S796 T796;
typedef struct S1514 T1514;
typedef struct S1515 T1515;
typedef struct S709 T709;
typedef struct S1516 T1516;
/*BUG:NA@runtime!*/typedef void*T551;
typedef struct S1520 T1520;
typedef struct S1521 T1521;
typedef struct S1523 T1523;
typedef struct S706 T706;
typedef struct S1527 T1527;
typedef struct S1528 T1528;
typedef T0 T1530;
typedef T0 T1533;
typedef T0 T1536;
typedef T0 T1538;
typedef struct S1541 T1541;
typedef struct S783 T783;
typedef struct S1542 T1542;
typedef struct S781 T781;
typedef int T1544;
typedef struct S1545 T1545;
typedef struct S1547 T1547;
typedef struct S1548 T1548;
/* C Header Pass 2: */
typedef T3*T9;
#define M9 NULL
typedef T0**T1033;
#define M1033 NULL
typedef T0**T1048;
#define M1048 NULL
typedef T0**T1053;
#define M1053 NULL
typedef T0**T1057;
#define M1057 NULL
typedef T10*T1058;
#define M1058 NULL
typedef T0**T1062;
#define M1062 NULL
typedef T0**T1086;
#define M1086 NULL
typedef T0**T1087;
#define M1087 NULL
typedef T0**T1088;
#define M1088 NULL
typedef T0**T1102;
#define M1102 NULL
typedef T0**T1105;
#define M1105 NULL
typedef T2*T1107;
#define M1107 NULL
typedef T0**T1137;
#define M1137 NULL
typedef T0**T1140;
#define M1140 NULL
typedef T0**T1157;
#define M1157 NULL
typedef T0**T1160;
#define M1160 NULL
typedef T0**T1161;
#define M1161 NULL
typedef T0**T1171;
#define M1171 NULL
typedef T338*T1172;
#define M1172 NULL
typedef T0**T1178;
#define M1178 NULL
typedef T0**T1181;
#define M1181 NULL
typedef T0**T1184;
#define M1184 NULL
typedef T0**T1185;
#define M1185 NULL
typedef T0**T1188;
#define M1188 NULL
typedef T0**T1198;
#define M1198 NULL
typedef T0**T1201;
#define M1201 NULL
typedef T0**T1202;
#define M1202 NULL
typedef T0**T1207;
#define M1207 NULL
typedef T0**T1209;
#define M1209 NULL
typedef T0**T1213;
#define M1213 NULL
typedef T0**T1214;
#define M1214 NULL
typedef T0**T1215;
#define M1215 NULL
typedef T0**T1216;
#define M1216 NULL
typedef T0**T1217;
#define M1217 NULL
typedef T0**T1218;
#define M1218 NULL
typedef T0**T1220;
#define M1220 NULL
typedef T0**T1221;
#define M1221 NULL
typedef T0**T1222;
#define M1222 NULL
typedef T0**T1224;
#define M1224 NULL
typedef T0**T1232;
#define M1232 NULL
typedef T0**T1233;
#define M1233 NULL
typedef T0**T1236;
#define M1236 NULL
typedef T0**T1239;
#define M1239 NULL
typedef T0**T1242;
#define M1242 NULL
typedef T0**T1243;
#define M1243 NULL
typedef T0**T1244;
#define M1244 NULL
typedef T0**T1245;
#define M1245 NULL
typedef T0**T1252;
#define M1252 NULL
typedef T0**T1254;
#define M1254 NULL
typedef T0**T1261;
#define M1261 NULL
typedef T0**T1267;
#define M1267 NULL
typedef T0**T1268;
#define M1268 NULL
typedef T0**T1269;
#define M1269 NULL
typedef T0**T1270;
#define M1270 NULL
typedef T0**T1273;
#define M1273 NULL
typedef T0**T1275;
#define M1275 NULL
typedef T0**T1280;
#define M1280 NULL
typedef T0**T1281;
#define M1281 NULL
typedef T0**T1286;
#define M1286 NULL
typedef T0**T1287;
#define M1287 NULL
typedef T0**T1290;
#define M1290 NULL
typedef T0**T1293;
#define M1293 NULL
typedef T0**T1294;
#define M1294 NULL
typedef T0**T1298;
#define M1298 NULL
typedef T0**T1300;
#define M1300 NULL
typedef T0**T1301;
#define M1301 NULL
typedef T0**T1304;
#define M1304 NULL
typedef T0**T1307;
#define M1307 NULL
typedef T0**T1308;
#define M1308 NULL
typedef T0**T1313;
#define M1313 NULL
typedef T0**T1316;
#define M1316 NULL
typedef T0**T1317;
#define M1317 NULL
typedef T1*T1318;
#define M1318 NULL
typedef T0**T1321;
#define M1321 NULL
typedef T0**T1322;
#define M1322 NULL
typedef T0**T1323;
#define M1323 NULL
typedef T0**T1325;
#define M1325 NULL
typedef T0**T1327;
#define M1327 NULL
typedef T311*T1329;
#define M1329 NULL
typedef T0**T1331;
#define M1331 NULL
typedef T0**T1332;
#define M1332 NULL
typedef T0**T1333;
#define M1333 NULL
typedef T0**T1340;
#define M1340 NULL
typedef T0**T1342;
#define M1342 NULL
typedef T0**T1345;
#define M1345 NULL
typedef T0**T1346;
#define M1346 NULL
typedef T0**T1349;
#define M1349 NULL
typedef T0**T1352;
#define M1352 NULL
typedef T0**T1355;
#define M1355 NULL
typedef T0**T1357;
#define M1357 NULL
typedef T0**T1358;
#define M1358 NULL
typedef T0**T1359;
#define M1359 NULL
typedef T0**T1360;
#define M1360 NULL
typedef T0**T1361;
#define M1361 NULL
typedef T0**T1363;
#define M1363 NULL
typedef T0**T1366;
#define M1366 NULL
typedef T0**T1374;
#define M1374 NULL
typedef T0**T1375;
#define M1375 NULL
typedef T0**T1376;
#define M1376 NULL
typedef T0**T1377;
#define M1377 NULL
typedef T0**T1380;
#define M1380 NULL
typedef T0**T1386;
#define M1386 NULL
typedef T0**T1389;
#define M1389 NULL
typedef T0**T1390;
#define M1390 NULL
typedef T0**T1394;
#define M1394 NULL
typedef T0**T1401;
#define M1401 NULL
typedef T0**T1404;
#define M1404 NULL
typedef T0**T1406;
#define M1406 NULL
typedef T0**T1420;
#define M1420 NULL
typedef T0**T1421;
#define M1421 NULL
typedef T0**T1424;
#define M1424 NULL
typedef T0**T1446;
#define M1446 NULL
typedef T0**T1456;
#define M1456 NULL
typedef T0**T1459;
#define M1459 NULL
typedef T0**T1461;
#define M1461 NULL
typedef T0**T1466;
#define M1466 NULL
typedef T0**T1469;
#define M1469 NULL
typedef T0**T1473;
#define M1473 NULL
typedef T0**T1474;
#define M1474 NULL
typedef T0**T1475;
#define M1475 NULL
typedef T0**T1476;
#define M1476 NULL
typedef T0**T1479;
#define M1479 NULL
typedef T0**T1480;
#define M1480 NULL
typedef T8*T1481;
#define M1481 NULL
typedef T0**T1482;
#define M1482 NULL
typedef T0**T1517;
#define M1517 NULL
typedef T0**T1518;
#define M1518 NULL
typedef T0**T1519;
#define M1519 NULL
typedef T0**T1522;
#define M1522 NULL
typedef T0**T1524;
#define M1524 NULL
typedef T0**T1525;
#define M1525 NULL
typedef T0**T1526;
#define M1526 NULL
typedef T0**T1546;
#define M1546 NULL
/* C Header Pass 2: */
struct S535{T8 _current_entry;T8 _directory_stream;};
int se_cmpT535(T535* o1,T535* o2);
struct S338{T2 _mangling;};
int se_cmpT338(T338* o1,T338* o2);
struct S683{int _file_tools;};
int se_cmpT683(T683* o1,T683* o2);
struct S758{T0* _hashed_string_memory;T2 _column;T2 _line;};
int se_cmpT758(T758* o1,T758* o2);
extern T1037 M1037;
extern T1039 M1039;
extern T1054 M1054;
struct S697{T11 _time_memory;};
int se_cmpT697(T697* o1,T697* o2);
struct S472{T2 _microsecond;T697 _time;};
int se_cmpT472(T472* o1,T472* o2);
struct S335{T2 _hash_code;T0* _feature_name;T0* _class_name;};
int se_cmpT335(T335* o1,T335* o2);
struct S311{T0* _item_memory;T2 _capacity;};
int se_cmpT311(T311* o1,T311* o2);
struct S523{T6 _direct_error;T6 _direct_output;T6 _direct_input;T0* _group;T6 _keep_environment;};
int se_cmpT523(T523* o1,T523* o2);
extern T1391 M1391;
extern T1425 M1425;
struct S736{T2 _first_error_character;T2 _first_error_index;T0* _first_error;};
int se_cmpT736(T736* o1,T736* o2);
extern T1483 M1483;
extern T1497 M1497;
extern T1507 M1507;
extern T1544 M1544;
/* C Header Pass 4: */
struct S29{T0* _level_flag;T6 _version_flag;T6 _help_flag;};
extern T29 M29;
extern T286 M286;
struct S108{T0* _plugin_factory;T0* _plugins;T0* _config_loadpath_names;T0* _config_loadpath_files;T0* _extra_loadpath_files;T6 _c_mode_has_explicit_linker_path_or_option;T0* _smarteiffel_options;T0* _ace_linker_options;T0* _ace_compiler_options;T0* _cpp_strip_path;T0* _cpp_linker_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T2 _c_compiler_mode;T0* _c_compiler;T6 _is_alternate_c_mode;T535 _basic_directory;T0* _is_unix_like;T0* _is_win_like;T6 _no_strip;T0* _short_directory;T0* _bin_directory;T0* _sys_directory;T0* _config;T0* _seconf;T0* _system_flavor;T0* _system_name;};
extern T108 M108;
extern T979 M979;
struct S100{T0* _tmp_feature;T2 _eiffel_parser_stamp;T2 _inline_agent_counter;T0* _last_tag_mark;T0* _last_parent_edge;T0* _last_instruction;T0* _last_formal_generic_type_mark;T0* _last_feature_name_list;T0* _last_feature_name;T0* _last_feature_declaration;T0* _last_class_name;T0* _last_type_mark;T0* _last_expression;T6 _ok;T0* _local_vars;T0* _arguments;T0* _formal_generic_list;T6 _tuple_flag;T6 _inside_rescue_flag;T6 _inside_ensure_flag;T6 _inside_function_flag;T0* _last_class_text;T0* _cluster;T10 _current_id;T11 _total_time;T6 _is_running;T6 _no_rescue;T758 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _column;T2 _line;};
extern T100 M100;
struct S121{T0* _output_path;T0* _error_stream;T0* _output_stream;T2 _output_state;T6 _is_verbose;};
extern T121 M121;
struct S274{T6 _sedb_flag;T0* _root_procedure_name_memory;T0* _splitter;T2 _default_assertion_level;T6 _default_trace;T2 _highest_encountered_level;T6 _clean;T6 _precompile_header;T6 _relax;T6 _profile;T6 _high_memory_compiler;T6 _manifest_string_trace;T6 _safety_check;T6 _no_main;T6 _flat_check;T0* _executable_name;T0* _file_path;T0* _default_debug_keys;T758 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T274 M274;
struct S112{T0* _once_mark_list;T0* _registered_natives;T6 _has_c_plus_plus;T0* _include_memory;T6 _executable_is_up_to_date;T0* _out_h;T6 _assignment_evobt;T6 _in_assignment;T2 _function_count_in_file;T6 _assertion_checks_disabled;T2 _pending_c_function_counter;T6 _pending_c_function;T0* _native_array_collector;T0* _native_need_wrapper;T0* _need_struct;T0* _va_arg_type;T0* _argument_type;T0* _result_type;T0* _target_type;T0* _introspection_display;T0* _introspection_function;T0* _native_c_definition;T0* _native_procedure_mapper;T0* _native_function_mapper;T0* _gc_handler;T0* _compound_expression_compiler;T0* _code_compiler;T0* _arg_mapper;T0* _target_mapper;T0* _initializer;T0* _mapper;T0* _live_type_compiler;T0* _header_pass_4;T0* _header_pass_3;T0* _header_pass_2;T0* _header_pass_1;T0* _unused_contexts;T2 _top;T2 _real_function_count;T2 _real_procedure_count;T2 _precursor_routine_count;T2 _function_count;T2 _procedure_count;};
extern T112 M112;
struct S107{int _live_type_sorter;T0* _live_type_map_;T2 _inspect_when_merge_counter;T0* _polymorphic_distribution;T2 _void_target_function_call_count;T2 _void_target_procedure_call_count;T2 _polymorphic_function_call_count;T2 _polymorphic_procedure_call_count;T2 _expanded_target_function_call_count;T2 _expanded_target_procedure_call_count;T2 _monomorphic_function_call_count;T2 _monomorphic_procedure_call_count;T0* _type_real_extended_memory;T0* _type_real_64_memory;T0* _type_real_32_memory;T0* _type_natural_64_memory;T0* _type_natural_32_memory;T0* _type_natural_16_memory;T0* _type_natural_8_memory;T0* _type_integer_64_memory;T0* _type_integer_32_memory;T0* _type_integer_16_memory;T0* _type_integer_8_memory;T0* _type_pointer_memory;T0* _type_unicode_string_memory;T0* _type_native_array_character_memory;T0* _type_string_memory;T0* _type_character_memory;T0* _type_boolean_memory;T0* _type_any_memory;T0* _specializing_feature_local_var_list;T2 _se_atexit_id;T0* _se_atexit_stamp;T6 _simplify_done;T2 _magic_count;T0* _agent_switches;T0* _agent_creations;T0* _class_invariants;T0* _run_features;T0* _root_procedure;T6 _deep_twin_used;T6 _generator_used;T6 _generating_type_used;T6 _no_id;T6 _pretty_flag;T6 _short_or_class_check_flag;};
extern T107 M107;
struct S282{T10 _min_id;T10 _max_id;};
extern T282 M282;
extern T272 M272;
struct S7{Tid id;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;T2 _generation;};
extern T7 M7;
struct S621{T6 _dispose_flag;T0* _need_mark;T0* _before_mark_compiler;T0* _info_compiler;T0* _functions_compiler;T0* _header_compiler;T6 _info_flag;T6 _is_off;};
extern T621 M621;
struct S1008{Tid id;T2 _upper;T2 _capacity;T1033 _storage;T2 _generation;};
extern T1008 M1008;
extern T639 M639;
struct S84{T0* _cecil_files;T2 _state;};
extern T84 M84;
struct S1009{T0* _item;};
extern T1009 M1009;
struct S284{T6 _style_warning;T6 _no_warning;T2 _warning_counter;T2 _error_counter;};
extern T284 M284;
extern T285 M285;
extern T550 M550;
extern T535 M535;
struct S77{Tid id;};
extern T77 M77;
struct S1010{Tid id;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1048 _buckets;T2 _generation;};
extern T1010 M1010;
struct S537{Tid id;T0* _destination_notation;T0* _current_path;};
extern T537 M537;
struct S541{Tid id;T0* _destination_notation;T0* _current_path;};
extern T541 M541;
struct S542{Tid id;};
extern T542 M542;
struct S543{Tid id;};
extern T543 M543;
struct S544{Tid id;};
extern T544 M544;
struct S545{Tid id;};
extern T545 M545;
struct S1011{T0* _item;};
extern T1011 M1011;
struct S1012{T6 _item;};
extern T1012 M1012;
struct S98{T2 _capacity;T2 _buffer_position;T2 _buffer_size;T6 _end_reached;T9 _buffer;T8 _input_stream;T3 _filtered_last_character;T6 _end_of_input;T0* _filter;T0* _path;};
extern T98 M98;
struct S536{T0* _smarteiffel_options;T0* _cpp_linker_options;T0* _cpp_compiler_options;T0* _cpp_linker_path;T0* _cpp_strip_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_linker_options;T0* _c_compiler_options;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T0* _c_compiler;};
extern T536 M536;
struct S452{T6 _busy;T0* _assigned;T0* _names;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _obsolete_mark;T0* _header_comment;T0* _type;T0* _arguments;};
extern T452 M452;
struct S451{Tid id;T8 _output_stream;T2 _capacity;T2 _buffer_position;T9 _buffer;T11 _flushed_character_count;T0* _filter;T0* _path;};
extern T451 M451;
struct S641{Tid id;T0* _stream;};
extern T641 M641;
struct S80{Tid id;T0* _filter;};
extern T80 M80;
struct S68{Tid id;T2 _capacity;T9 _buffer;T2 _buffer_position;T0* _filter;};
extern T68 M68;
struct S1013{T2 _upper;T2 _capacity;T1053 _storage;T2 _generation;};
extern T1013 M1013;
struct S103{T2 _hash_code;T0* _to_string;};
extern T103 M103;
struct S118{T0* _text;T2 _count;T0* _cluster;T0* _hashed_path;};
extern T118 M118;
struct S684{Tid id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T684 M684;
struct S688{Tid id;int _sorter;T0* _ids;T0* _suffixes;T2 _count;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T688 M688;
struct S686{Tid id;T2 _split_id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T686 M686;
struct S546{T0* _name_list;int _collection_sorter;T6 _exists;T0* _path;T0* _name;T535 _basic_directory;};
extern T546 M546;
struct S680{Tid id;T0* _classeses;T535 _basic_directory;T2 _distance;T0* _parent;};
extern T680 M680;
extern T338 M338;
struct S420{Tid id;T0* _list;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T420 M420;
struct S1014{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1033 _storage;T2 _generation;};
extern T1014 M1014;
struct S319{T0* _low_surrogate_values;T0* _low_surrogate_indexes;T2 _capacity;T2 _count;T1058 _storage;T2 _generation;};
extern T319 M319;
extern T683 M683;
struct S1015{T2 _upper;T2 _capacity;T1062 _storage;T2 _generation;};
extern T1015 M1015;
struct S432{T0* _pool;T0* _type_dictionary;T0* _exclude_list;T0* _include_list;T0* _option_trace;T0* _option_debug_keys;T0* _option_assertion_level;T3 _default_trace;T2 _default_assertion_level;T0* _directory_path;T0* _name;T0* _class_text_map;T0* _tree;T0* _default_debug_keys;};
extern T432 M432;
extern T758 M758;
struct S565{Tid id;T0* _compiled;};
extern T565 M565;
struct S596{Tid id;T0* _compiled;};
extern T596 M596;
struct S597{Tid id;T0* _compiled;};
extern T597 M597;
struct S598{Tid id;T0* _compiled;};
extern T598 M598;
struct S599{Tid id;T0* _compiled;};
extern T599 M599;
struct S611{Tid id;};
extern T611 M611;
struct S612{Tid id;};
extern T612 M612;
struct S613{Tid id;T0* _target_formal_type;T0* _type;};
extern T613 M613;
struct S615{Tid id;T0* _type;};
extern T615 M615;
struct S616{Tid id;T0* _type;};
extern T616 M616;
struct S620{Tid id;T6 _is_expression;T0* _continue;T0* _finish;T0* _type;};
extern T620 M620;
struct S622{Tid id;T0* _name;T0* _bcn;T0* _type_of_current;T0* _rf8;};
extern T622 M622;
struct S623{Tid id;T0* _rf7;T0* _name;T0* _bcn;T0* _type_of_current;};
extern T623 M623;
struct S624{Tid id;T0* _external_routine_memory;T0* _rf8;T0* _rf7;};
extern T624 M624;
struct S625{Tid id;T6 _put_else;};
extern T625 M625;
struct S626{Tid id;T6 _put_coma;};
extern T626 M626;
struct S627{Tid id;};
extern T627 M627;
struct S629{Tid id;};
extern T629 M629;
struct S628{Tid id;};
extern T628 M628;
struct S630{Tid id;};
extern T630 M630;
struct S631{Tid id;T6 _flag;};
extern T631 M631;
struct S632{Tid id;T0* _name;T0* _type_of_current;T6 _flag;};
extern T632 M632;
struct S1016{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1086 _buckets;T2 _generation;};
extern T1016 M1016;
extern T633 M633;
struct S1017{T2 _upper;T2 _capacity;T1087 _storage;T2 _generation;};
extern T1017 M1017;
struct S1018{T2 _upper;T2 _capacity;T1088 _storage;T2 _generation;};
extern T1018 M1018;
struct S368{Tid id;T0* _writable_attributes_mem;T0* _default_create_run_feature_memory;T0* _to_internals_stamp;T6 _create_blank_internals_used;T0* _create_blank_internals_instruction;T1 _collect_is_deep_equal_status;T6 _collecting_deep_twin;T0* _structure_signature_memory;T0* _actual_clients_;T0* _memory_dispose_stamp;T0* _default_create_stamp;T2 _tagged_memory;T2 _generating_type_level;T6 _has_been_collected;T6 _is_collecting;T0* _precursor_run_features;T0* _precursor_classes;T0* _create_function_list;T0* _live_features;T2 _hash_code;T0* _run_time_set;T6 _at_run_time;T2 _id;T0* _class_text_name;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _type;T0* _tagged_data_map;};
extern T368 M368;
struct S93{T6 _has_tried_to_load;T0* _class_text_memory;T2 _hash_code;T0* _to_string;T0* _hashed_name;T338 _start_position;};
extern T93 M93;
struct S95{Tid id;T0* _insert_inherit_test_memory_cache;T6 _creation_list_check_done;T2 _assertion_level;T0* _declaration_type_of_like_current_memory;T0* _feature_dictionary;T0* _check_expanded_with_flag;T0* _external_type;T2 _hash_code;T6 _sedb_trace;T0* _end_comment;T0* _class_invariant;T0* _feature_clause_list;T0* _creation_clause_list;T0* _parent_lists;T0* _obsolete_mark;T0* _heading_comment2;T0* _formal_generic_list;T0* _name;T6 _is_expanded;T6 _is_deferred;T0* _heading_comment1;T0* _index_list;T0* _cluster;T0* _path;T10 _id;T0* _tagged_data_map;};
extern T95 M95;
struct S1019{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1102 _buckets;T2 _generation;};
extern T1019 M1019;
struct S1020{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1105 _buckets;T2 _generation;};
extern T1020 M1020;
struct S1021{T2 _upper;T2 _capacity;T1107 _storage;T2 _generation;};
extern T1021 M1021;
struct S277{T0* _insert_inherit_test_memory_cache;T0* _address_of_memory2;T0* _address_of_memory1;T0* _temporary_simple_feature_name;T0* _writable_attributes_memory;T0* _feature_stamps;T0* _external_type;T6 _is_deferred;T0* _class_invariant;T2 _hash_code;T0* _private_generic_list;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _live_type;T6 _default_rescue_collected;T0* _default_rescue_compound;T0* _children_edge_load;T0* _parents_edge_load;T6 _mark;T0* _children_edge;T0* _parents_edge;T0* _children;T0* _parents;T0* _item;};
extern T277 M277;
struct S87{T0* _run_features;T0* _rename_down_child_feature_stamp;T0* _rename_down_edge;T0* _rename_down_child_class;T0* _rename_down_context_class;T0* _rename_up_parent_feature_stamp;T0* _rename_up_edge;T0* _rename_up_parent_class;T0* _rename_up_context_class;T0* _anonymous_features;T0* _roots;T2 _hash_code;T0* _name;};
extern T87 M87;
struct S533{T6 _inlining_dynamic_dispatch_done;T6 _collecting_done;T0* _specializing_type_memory;T2 _safety_check_state;T2 _phase;};
extern T533 M533;
struct S1023{T2 _lower;T2 _upper;T2 _capacity;T1107 _storage;T2 _generation;};
extern T1023 M1023;
struct S328{T2 _sedb_counter;T0* _current_context;T2 _context_level;T0* _code_stack;};
extern T328 M328;
extern T106 M106;
struct S104{T0* _se_ums_;T0* _unicode_string_type;T0* _unicode_string_manifest_initialize_stamp;T6 _first_unicode_manifest_string_collected_flag;T6 _first_manifest_string_collected_flag;};
extern T104 M104;
extern T111 M111;
extern T120 M120;
struct S119{T6 _agent_creation_collected_flag;};
extern T119 M119;
extern T122 M122;
struct S89{T0* _native_array_internals_from_generating_type_args;T338 _native_array_internals_from_generating_type_position;T338 _internals_from_generating_type_position;T6 _has_capacity;T6 _can_twin;T0* _native_array_element_type;T0* _target_type;T0* _new_type;T0* _external_routine;T0* _type_internals_handler;};
extern T89 M89;
struct S439{Tid id;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T439 M439;
struct S1025{T2 _lower;T2 _upper;T2 _capacity;T1137 _storage;T2 _generation;};
extern T1025 M1025;
struct S1026{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1140 _buckets;T2 _generation;};
extern T1026 M1026;
struct S115{T0* _insert_seeds;T0* _seeds;T0* _insert_problem_seeds;T0* _seeds_of_current_feature;T0* _insert_seeds_of_current_feature;T0* _feature_stamps_memory;T0* _features_dictionary;T0* _free;T0* _features;T0* _feature_stamp;T1 _state;T2 _waiting_type;T0* _current_mixer;T6 _specialize_and_check_in_progress;T0* _pending_list;T0* _specialize_and_check_list;T0* _current_fn;T0* _context_type;};
extern T115 M115;
struct S424{Tid id;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T424 M424;
struct S1029{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1157 _buckets;T2 _generation;};
extern T1029 M1029;
extern T564 M564;
struct S1030{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1160 _buckets;T2 _generation;};
extern T1030 M1030;
struct S1031{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1161 _buckets;T2 _generation;};
extern T1031 M1031;
struct S790{Tid id;};
extern T790 M790;
struct S792{Tid id;T0* _wa_cycle;T0* _wa_cyclic_buf;T0* _wa_buf;};
extern T792 M792;
struct S793{Tid id;};
extern T793 M793;
struct S794{Tid id;};
extern T794 M794;
struct S795{Tid id;T6 _flag;};
extern T795 M795;
struct S327{T0* _entries;T0* _path_h;T0* _path;};
extern T327 M327;
struct S1035{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1171 _buckets;T2 _generation;};
extern T1035 M1035;
struct S1036{T2 _upper;T2 _capacity;T1172 _storage;T2 _generation;};
extern T1036 M1036;
struct S777{Tid id;T0* _config;};
extern T777 M777;
struct S779{Tid id;T2 _jobs;T0* _flavor;T0* _os;};
extern T779 M779;
struct S778{Tid id;T0* _my_path;T0* _my_c_modes;T0* _my_tools;T0* _my_loadpaths;T0* _my_environment;T2 _jobs;T0* _flavor;T0* _os;T0* _short;T0* _sys;T0* _bin;};
extern T778 M778;
struct S1040{T2 _upper;T2 _capacity;T1033 _storage;T2 _generation;};
extern T1040 M1040;
struct S1041{T0* _item;};
extern T1041 M1041;
struct S58{int _items_comparator;T0* _strings;T311 _recycling_item;};
extern T58 M58;
struct S1042{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1178 _buckets;T2 _generation;};
extern T1042 M1042;
struct S1043{T2 _upper;T2 _capacity;T1181 _storage;T2 _generation;};
extern T1043 M1043;
struct S293{Tid id;T0* _original;T0* _holders;T6 _is_interned;T6 _immutable;T2 _hash_code;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;};
extern T293 M293;
struct S1044{T0* _next;T0* _key;T0* _item;};
extern T1044 M1044;
struct S1047{Tid id;T0* _item;};
extern T1047 M1047;
struct S1049{Tid id;T0* _item;};
extern T1049 M1049;
struct S1050{T0* _next;T0* _key;T0* _item;};
extern T1050 M1050;
struct S1051{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1184 _buckets;T2 _generation;};
extern T1051 M1051;
struct S1052{T2 _upper;T2 _capacity;T1185 _storage;T2 _generation;};
extern T1052 M1052;
struct S281{T0* _name;T338 _start_position;T2 _name_type;};
extern T281 M281;
extern T79 M79;
struct S1056{T2 _upper;T2 _capacity;T1188 _storage;T2 _generation;};
extern T1056 M1056;
struct S102{T0* _sections;T0* _default_section;T0* _last_key;T0* _last_section;T6 _expand_execute;T6 _expand_var;T10 _id;T6 _is_invalid;T0* _file_path;T758 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T102 M102;
struct S1059{T2 _upper;T2 _capacity;T1058 _storage;T2 _generation;};
extern T1059 M1059;
struct S751{Tid id;T0* _path;T0* _name;T0* _cluster;T0* _classeses;T535 _basic_directory;T2 _distance;T0* _parent;};
extern T751 M751;
struct S797{Tid id;T0* _path;T0* _name;T0* _classeses;T535 _basic_directory;T2 _distance;T0* _parent;};
extern T797 M797;
struct S1061{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1198 _buckets;T2 _generation;};
extern T1061 M1061;
struct S1063{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1201 _buckets;T2 _generation;};
extern T1063 M1063;
struct S1065{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1202 _buckets;T2 _generation;};
extern T1065 M1065;
struct S1067{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1207 _buckets;T2 _generation;};
extern T1067 M1067;
struct S753{T0* _cluster;T0* _classes;};
extern T753 M753;
extern T472 M472;
struct S1070{T2 _upper;T2 _capacity;T1209 _storage;T2 _generation;};
extern T1070 M1070;
struct S449{T6 _is_inline_agent;T338 _sedb_trace_before_exit;T0* _obsolete_mark;T0* _header_comment;T0* _anonymous_feature;T0* _result_type;T0* _arguments;T0* _assigned;T0* _names;T0* _feature_clause;};
extern T449 M449;
struct S429{T0* _list;T0* _tag;};
extern T429 M429;
struct S380{Tid id;T2 _hash_code_memory;T0* _source_view;T0* _once_variable;T0* _initial_storage_id;T0* _alias_link;T0* _unicode_string;T0* _to_string;T6 _unicode_flag;T6 _once_flag;T338 _start_position;};
extern T380 M380;
struct S422{T6 _no_generic_constraint_flag;T0* _list;T338 _start_position;};
extern T422 M422;
struct S423{T2 _rank;T0* _constraint;T0* _name;};
extern T423 M423;
struct S485{Tid id;T2 _rank;T0* _formal_generic_arg;T0* _formal_name;T6 _already_checking;T0* _written_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T485 M485;
struct S495{Tid id;T338 _start_position;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T495 M495;
struct S497{Tid id;T0* _feature_stamp_memory;T0* _declaration_type;T0* _written_name;T0* _like_what;T338 _start_position;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T497 M497;
struct S354{Tid id;T0* _flat_list;T0* _list;};
extern T354 M354;
struct S116{T2 _mode;T6 _semi_colon_flag;};
extern T116 M116;
struct S498{Tid id;T6 _like_argument_computing;T0* _type_marks_memory;T0* _written_name;T0* _like_what;T338 _start_position;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T498 M498;
struct S445{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T445 M445;
struct S408{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T408 M408;
struct S381{Tid id;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T381 M381;
struct S437{Tid id;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T437 M437;
struct S407{Tid id;T2 _bit_count_memory;T0* _pretty_name;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T407 M407;
struct S435{Tid id;T2 _bit_count;T0* _pretty_name;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T435 M435;
struct S403{Tid id;T0* _type_memory;T0* _class_text_name;T0* _long_name_memory;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T403 M403;
struct S438{Tid id;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T438 M438;
struct S436{Tid id;T2 _bit_count;T0* _pretty_name;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T436 M436;
struct S442{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T442 M442;
struct S440{Tid id;T0* _type_memory;T0* _class_text_name;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T440 M440;
struct S443{Tid id;T2 _pretty_code;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T443 M443;
struct S446{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T6 _has_tried_to_load;T0* _class_text_memory;};
extern T446 M446;
struct S273{T2 _idx;T2 _count;T0* _to_string;T0* _manifest_string;};
extern T273 M273;
struct S467{Tid id;T0* _external_tag;};
extern T467 M467;
struct S469{Tid id;T0* _alias_data;T2 _hash_code;T0* _plugin;T0* _feature_name;T0* _external_tag;};
extern T469 M469;
struct S470{Tid id;T0* _rf8_memory;T0* _rf7_memory;T0* _external_tag;};
extern T470 M470;
struct S471{Tid id;T6 _c_inline;T0* _signature;T2 _access_mode;T0* _type;T0* _access;T0* _struct;T6 _macro;T6 _parsing_done;T6 _need_prototype;T0* _external_tag;};
extern T471 M471;
struct S421{T0* _alias_tag;T0* _native;T338 _start_position;T0* _default_value;T0* _type_name;};
extern T421 M421;
struct S1071{T2 _upper;T2 _capacity;T1213 _storage;T2 _generation;};
extern T1071 M1071;
struct S280{T0* _comment;T0* _redefine_list;T0* _undefine_list;T0* _export_list;T0* _rename_list;T6 _is_insert_member;T0* _parent_lists;T0* _class_text_name;T0* _class_text;T0* _type_mark;};
extern T280 M280;
struct S478{T0* _old_name;T0* _new_name;};
extern T478 M478;
struct S1072{T2 _upper;T2 _capacity;T1214 _storage;T2 _generation;};
extern T1072 M1072;
struct S519{Tid id;T0* _list;T338 _start_position;};
extern T519 M519;
struct S487{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T487 M487;
struct S401{Tid id;T0* _right_side;T0* _left_writable;T0* _left_type_mark;};
extern T401 M401;
struct S474{Tid id;T0* _resolved_memory;T2 _rank;T0* _curly_type;T338 _start_position;};
extern T474 M474;
struct S371{Tid id;T0* _pretty_view;T0* _result_type_memory;T2 _size;T11 _value_memory;T338 _start_position;};
extern T371 M371;
struct S475{Tid id;T0* _normalized_memory;T0* _result_type;T0* _pretty_view;T338 _start_position;};
extern T475 M475;
struct S476{Tid id;T338 _irregular_position;T0* _manifest_put_feature_stamp;T0* _manifest_make_feature_stamp;T0* _created_type;T2 _semicolon_count;T0* _item_list;T0* _optional_arguments;T0* _type_mark;T338 _start_position;};
extern T476 M476;
struct S339{T0* _remainder;T0* _first_one;};
extern T339 M339;
struct S348{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T348 M348;
struct S351{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T351 M351;
struct S353{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T353 M353;
struct S342{Tid id;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T342 M342;
struct S346{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T346 M346;
struct S347{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T347 M347;
struct S489{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T489 M489;
struct S490{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T490 M490;
struct S491{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T491 M491;
struct S480{Tid id;T0* _create_expression;T0* _effective_arg_list;T338 _start_position;};
extern T480 M480;
struct S385{Tid id;T338 _start_position;};
extern T385 M385;
struct S456{Tid id;T338 _start_position;};
extern T456 M456;
struct S462{Tid id;T0* _pretty_view;T3 _value;T338 _start_position;};
extern T462 M462;
struct S481{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T338 _start_position;};
extern T481 M481;
struct S516{Tid id;T0* _declaration_type_memory;T0* _explicit_type_mark;T338 _start_position;};
extern T516 M516;
struct S517{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T338 _start_position;};
extern T517 M517;
struct S1073{T2 _upper;T2 _capacity;T1215 _storage;T2 _generation;};
extern T1073 M1073;
struct S1074{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1216 _storage;T2 _generation;};
extern T1074 M1074;
struct S453{Tid id;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T338 _start_position;};
extern T453 M453;
struct S454{Tid id;T0* _name_list;};
extern T454 M454;
struct S1075{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1217 _storage;T2 _generation;};
extern T1075 M1075;
struct S391{Tid id;T0* _name;};
extern T391 M391;
struct S1076{T2 _lower;T2 _upper;T2 _capacity;T1218 _storage;T2 _generation;};
extern T1076 M1076;
struct S664{Tid id;T0* _direct_parents_require;T0* _local_require;T6 _is_require_else;T2 _eiffel_parser_stamp;};
extern T664 M664;
struct S1077{T2 _upper;T2 _capacity;T1220 _storage;T2 _generation;};
extern T1077 M1077;
struct S418{Tid id;T0* _source_view;T0* _comment;T0* _expression;T0* _tag;};
extern T418 M418;
struct S388{Tid id;T2 _live_reference_counter;T2 _parsing_reference_counter;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T338 _start_position;};
extern T388 M388;
struct S1078{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1221 _storage;T2 _generation;};
extern T1078 M1078;
struct S392{Tid id;T0* _flat_list;T0* _list;};
extern T392 M392;
struct S448{T0* _remainder;T0* _first;};
extern T448 M448;
struct S518{Tid id;T0* _assertion_list;T2 _eiffel_parser_stamp;};
extern T518 M518;
struct S1079{T2 _upper;T2 _capacity;T1222 _storage;T2 _generation;};
extern T1079 M1079;
struct S477{Tid id;T0* _compound;T0* _key_list;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T477 M477;
struct S412{Tid id;T0* _then_compound;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T412 M412;
struct S398{Tid id;T0* _else_compound;T0* _elseif_list;T0* _then_compound;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T398 M398;
struct S1080{T2 _upper;T2 _capacity;T1224 _storage;T2 _generation;};
extern T1080 M1080;
struct S357{Tid id;T0* _dispatch_live_type;T0* _strip_condition;T0* _values;T0* _list;T0* _condition_live_type;T0* _compound;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T357 M357;
struct S369{Tid id;T0* _declaration_type;T338 _start_position;};
extern T369 M369;
struct S362{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T338 _else_position;T0* _when_list;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T362 M362;
struct S479{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T338 _else_position;T0* _when_list;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T479 M479;
struct S426{Tid id;T0* _list;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T426 M426;
struct S465{Tid id;T0* _expression;T0* _comment2;T0* _tag;T0* _comment1;};
extern T465 M465;
struct S466{Tid id;T0* _loop_body;T0* _until_expression;T0* _loop_variant;T0* _loop_invariant;T0* _initialize;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T466 M466;
struct S364{Tid id;T0* _once_function;T0* _enclosing_function;T0* _written_declaration_type_mark;T0* _type_mark_memory;T0* _declaration_type;T338 _start_position;};
extern T364 M364;
struct S404{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T404 M404;
struct S463{Tid id;T0* _source_view;T338 _start_position;T0* _c_code;T6 _is_c_inline_c;T2 _eiffel_parser_stamp;};
extern T463 M463;
struct S494{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T494 M494;
struct S484{Tid id;T0* _declaration_type;T338 _start_position;};
extern T484 M484;
struct S367{Tid id;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T367 M367;
struct S394{Tid id;T6 _forced_flag;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T394 M394;
struct S464{Tid id;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T464 M464;
struct S459{Tid id;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T459 M459;
struct S395{Tid id;T0* _list;T2 _eiffel_parser_stamp;};
extern T395 M395;
struct S659{Tid id;T6 _is_ensure_then;T0* _list;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T659 M659;
struct S483{Tid id;T0* _feature_stamp;T0* _inline_feature;T0* _resolved_memory;T0* _closed_operand_list;T0* _open_operand_list;T0* _code;T0* _original_function_call;T338 _start_position;};
extern T483 M483;
struct S457{Tid id;T0* _comment;T0* _expression;};
extern T457 M457;
struct S396{Tid id;T338 _start_position;};
extern T396 M396;
struct S492{Tid id;T0* _expression;T338 _start_position;T0* _tagged_data_map;};
extern T492 M492;
struct S515{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T515 M515;
struct S514{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T514 M514;
struct S510{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T510 M510;
struct S511{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T511 M511;
struct S512{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T512 M512;
struct S513{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T513 M513;
struct S509{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T509 M509;
struct S374{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T374 M374;
struct S397{Tid id;T0* _right_side;T0* _left_side;T338 _operator_position;T6 _eq_flag;};
extern T397 M397;
struct S505{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T505 M505;
struct S506{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T506 M506;
struct S507{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T507 M507;
struct S508{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T508 M508;
struct S402{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T402 M402;
struct S504{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T504 M504;
struct S501{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T501 M501;
struct S502{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T502 M502;
struct S503{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T503 M503;
struct S500{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T500 M500;
struct S458{Tid id;T0* _calling_code;T0* _feature_stamp;T0* _target_type;T0* _feature_name;T0* _local_name;};
extern T458 M458;
struct S499{Tid id;T0* _generic_list_memory;T0* _static_memory;T0* _class_type_mark;T0* _long_name_memory;T0* _class_text_memory;};
extern T499 M499;
struct S493{T0* _remainder;T0* _first;};
extern T493 M493;
struct S283{T0* _eiffel_view_memory;T0* _type_mark_list;T338 _start_position;};
extern T283 M283;
struct S461{T0* _permissions;T0* _items;T0* _for_all;T338 _start_position;};
extern T461 M461;
struct S460{T0* _list;T0* _clients;};
extern T460 M460;
struct S1081{T2 _lower;T2 _upper;T2 _capacity;T1232 _storage;T2 _generation;};
extern T1081 M1081;
struct S419{T0* _procedure_list;T0* _comment;T0* _clients;T338 _start_position;};
extern T419 M419;
struct S431{T0* _list;T0* _class_text;T0* _comment;T0* _clients;};
extern T431 M431;
struct S752{T0* _path;T0* _cluster;T0* _class_name;};
extern T752 M752;
struct S455{T338 _start_position;T0* _hashed_name;};
extern T455 M455;
struct S358{Tid id;T0* _formal_arg_list;T0* _declaration_type;T2 _rank;T338 _start_position;};
extern T358 M358;
struct S410{Tid id;T0* _declaration_type;T0* _written_declaration_type_mark;T0* _feature_stamp;T0* _feature_name;};
extern T410 M410;
struct S393{Tid id;T0* _local_var_list;T0* _written_declaration_type_mark;T0* _declaration_type;T2 _rank;T338 _start_position;};
extern T393 M393;
struct S1082{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1233 _buckets;T2 _generation;};
extern T1082 M1082;
struct S1083{T2 _upper;T2 _capacity;T1236 _storage;T2 _generation;};
extern T1083 M1083;
struct S1084{Tid id;T0* _item;};
extern T1084 M1084;
struct S1085{T0* _next;T0* _key;T0* _item;};
extern T1085 M1085;
struct S1089{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1239 _buckets;T2 _generation;};
extern T1089 M1089;
struct S531{T0* _set;T0* _owner;};
extern T531 M531;
struct S1090{T2 _lower;T2 _upper;T2 _capacity;T1242 _storage;T2 _generation;};
extern T1090 M1090;
struct S1092{T2 _upper;T2 _capacity;T1243 _storage;T2 _generation;};
extern T1092 M1092;
struct S433{Tid id;T2 _rank;T0* _end_comment;T0* _specialized_feature_stamp;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T433 M433;
struct S425{Tid id;T0* _list;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T425 M425;
struct S1098{T2 _upper;T2 _capacity;T1244 _storage;T2 _generation;};
extern T1098 M1098;
struct S1099{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1245 _buckets;T2 _generation;};
extern T1099 M1099;
struct S450{T0* _insert_list;T0* _inherit_list;T6 _default_insert_any_added_flag;T0* _insert_comment;T0* _inherit_comment;T0* _class_text;};
extern T450 M450;
struct S430{T0* _list;};
extern T430 M430;
struct S447{T0* _list;};
extern T447 M447;
struct S1100{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1252 _buckets;T2 _generation;};
extern T1100 M1100;
struct S428{T0* _list;};
extern T428 M428;
struct S1101{T0* _next;T0* _key;T0* _item;};
extern T1101 M1101;
struct S1103{Tid id;T0* _item;};
extern T1103 M1103;
struct S1104{T0* _next;T0* _key;T0* _item;};
extern T1104 M1104;
struct S1106{Tid id;T0* _item;};
extern T1106 M1106;
struct S1108{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1254 _buckets;T2 _generation;};
extern T1108 M1108;
struct S1111{T2 _upper;T2 _capacity;T1242 _storage;T2 _generation;};
extern T1111 M1111;
struct S1112{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _capacity;T1261 _val_buckets;T1261 _key_buckets;T2 _count;T2 _generation;};
extern T1112 M1112;
struct S1115{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1267 _buckets;T2 _generation;};
extern T1115 M1115;
struct S1116{T2 _upper;T2 _capacity;T1057 _storage;T2 _generation;};
extern T1116 M1116;
struct S1117{T2 _upper;T2 _capacity;T1268 _storage;T2 _generation;};
extern T1117 M1117;
struct S1118{T2 _upper;T2 _capacity;T1269 _storage;T2 _generation;};
extern T1118 M1118;
struct S1119{T2 _upper;T2 _capacity;T1270 _storage;T2 _generation;};
extern T1119 M1119;
struct S1120{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1273 _buckets;T2 _generation;};
extern T1120 M1120;
struct S524{T0* _destination_graph_nodes;T2 _hash_code;T0* _source_type;};
extern T524 M524;
struct S1122{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1275 _buckets;T2 _generation;};
extern T1122 M1122;
struct S1126{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1280 _buckets;T2 _generation;};
extern T1126 M1126;
struct S1127{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1281 _buckets;T2 _generation;};
extern T1127 M1127;
struct S1128{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1286 _buckets;T2 _generation;};
extern T1128 M1128;
struct S1129{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1287 _buckets;T2 _generation;};
extern T1129 M1129;
struct S1130{T2 _upper;T2 _capacity;T1290 _storage;T2 _generation;};
extern T1130 M1130;
struct S526{Tid id;T0* _context_type;T0* _feature_stamp;T0* _dynamic_type;};
extern T526 M526;
struct S1131{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1293 _buckets;T2 _generation;};
extern T1131 M1131;
struct S1132{T2 _upper;T2 _capacity;T1446 _storage;T2 _generation;};
extern T1132 M1132;
struct S559{T0* _agent_type;T0* _signature;};
extern T559 M559;
struct S1134{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1294 _buckets;T2 _generation;};
extern T1134 M1134;
struct S1135{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1298 _buckets;T2 _generation;};
extern T1135 M1135;
struct S1136{T2 _upper;T2 _capacity;T1300 _storage;T2 _generation;};
extern T1136 M1136;
struct S400{Tid id;T0* _result_type;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T400 M400;
struct S1138{Tid id;T0* _item;};
extern T1138 M1138;
struct S1139{T0* _next;T0* _key;T0* _item;};
extern T1139 M1139;
struct S1141{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1301 _buckets;T2 _generation;};
extern T1141 M1141;
struct S1142{T2 _upper;T2 _capacity;T1304 _storage;T2 _generation;};
extern T1142 M1142;
struct S635{T6 _local_definition;T6 _signature_ready;T0* _body_inherit;T0* _body_type;T0* _body_feature;T0* _build_definition;T0* _parents_edges;T0* _parents_type;T0* _parents_af;T0* _feature_name;T1 _computing_result_type;};
extern T635 M635;
struct S1143{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1307 _buckets;T2 _generation;};
extern T1143 M1143;
struct S1144{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1242 _storage;T2 _generation;};
extern T1144 M1144;
struct S1145{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1308 _buckets;T2 _generation;};
extern T1145 M1145;
extern T335 M335;
struct S1146{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1313 _buckets;T2 _generation;};
extern T1146 M1146;
struct S1151{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1316 _buckets;T2 _generation;};
extern T1151 M1151;
struct S1152{T2 _lower;T2 _upper;T2 _capacity;T1317 _storage;T2 _generation;};
extern T1152 M1152;
struct S1153{T2 _lower;T2 _upper;T2 _capacity;T1318 _storage;T2 _generation;};
extern T1153 M1153;
struct S1154{T2 _upper;T2 _capacity;T1244 _storage;T2 _generation;};
extern T1154 M1154;
struct S1155{Tid id;T0* _item;};
extern T1155 M1155;
struct S1156{T0* _next;T0* _key;T0* _item;};
extern T1156 M1156;
struct S1158{Tid id;T0* _item;};
extern T1158 M1158;
struct S1159{T0* _next;T0* _key;T10 _item;};
extern T1159 M1159;
struct S1162{T0* _next;T0* _item;};
extern T1162 M1162;
struct S1165{Tid id;T0* _item;};
extern T1165 M1165;
struct S1166{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1321 _buckets;T2 _generation;};
extern T1166 M1166;
struct S1167{T2 _upper;T2 _capacity;T1322 _storage;T2 _generation;};
extern T1167 M1167;
struct S406{Tid id;T0* _ensure_assertion;T0* _require_assertion;T2 _order;T0* _result_type;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T406 M406;
struct S1168{T2 _upper;T2 _capacity;T1323 _storage;T2 _generation;};
extern T1168 M1168;
struct S560{T0* _target_type;T0* _code;T6 _is_creation;T0* _feature_name;T0* _target_type_mark;T0* _c_name;};
extern T560 M560;
struct S1169{Tid id;T0* _item;};
extern T1169 M1169;
struct S1170{T0* _next;T0* _key;T0* _item;};
extern T1170 M1170;
struct S1173{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1325 _storage;T2 _generation;};
extern T1173 M1173;
struct S1174{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1327 _buckets;T2 _generation;};
extern T1174 M1174;
struct S1176{T2 _upper;T2 _capacity;T1329 _storage;T2 _generation;};
extern T1176 M1176;
extern T311 M311;
extern T714 M714;
struct S1179{T0* _next;T2 _key;T0* _item;};
extern T1179 M1179;
struct S1180{Tid id;T0* _item;};
extern T1180 M1180;
struct S1182{T2 _upper;T2 _capacity;T1331 _storage;T2 _generation;};
extern T1182 M1182;
struct S1186{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1332 _storage;T2 _generation;};
extern T1186 M1186;
struct S1189{T0* _ordered_keys;T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1333 _buckets;T2 _generation;};
extern T1189 M1189;
struct S1190{Tid id;T0* _ordered_keys;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1048 _buckets;T2 _generation;};
extern T1190 M1190;
extern T523 M523;
struct S1192{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1340 _buckets;T2 _generation;};
extern T1192 M1192;
struct S773{Tid id;T0* _to_string;};
extern T773 M773;
struct S1194{T2 _upper;T2 _capacity;T1342 _storage;T2 _generation;};
extern T1194 M1194;
struct S1195{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1345 _buckets;T2 _generation;};
extern T1195 M1195;
struct S1196{Tid id;T0* _item;};
extern T1196 M1196;
struct S1197{T0* _next;T0* _key;T0* _item;};
extern T1197 M1197;
struct S1199{Tid id;T0* _item;};
extern T1199 M1199;
struct S1200{T0* _next;T0* _key;T0* _item;};
extern T1200 M1200;
struct S1203{T0* _next;T0* _item;};
extern T1203 M1203;
struct S1204{Tid id;T0* _item;};
extern T1204 M1204;
struct S1205{Tid id;T0* _item;};
extern T1205 M1205;
struct S1206{T0* _next;T0* _key;T2 _item;};
extern T1206 M1206;
struct S1208{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1346 _buckets;T2 _generation;};
extern T1208 M1208;
extern T697 M697;
struct S642{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T642 M642;
struct S650{Tid id;T2 _rank;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T650 M650;
struct S561{Tid id;T0* _result_type;T0* _inline_result;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T561 M561;
struct S655{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T655 M655;
struct S652{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T652 M652;
struct S653{Tid id;T0* _result_type;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T653 M653;
struct S648{Tid id;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T648 M648;
struct S651{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T651 M651;
struct S649{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T649 M649;
struct S654{Tid id;T0* _result_type;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T654 M654;
struct S645{Tid id;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T645 M645;
struct S644{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T644 M644;
struct S647{Tid id;T0* _value_memory;T2 _rank;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T647 M647;
struct S1210{T2 _lower;T2 _upper;T2 _capacity;T1349 _storage;T2 _generation;};
extern T1210 M1210;
struct S1211{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1352 _buckets;T2 _generation;};
extern T1211 M1211;
struct S1212{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1355 _buckets;T2 _generation;};
extern T1212 M1212;
struct S690{T0* _list;};
extern T690 M690;
struct S1219{T2 _upper;T2 _capacity;T1357 _storage;T2 _generation;};
extern T1219 M1219;
struct S1223{T2 _upper;T2 _capacity;T1358 _storage;T2 _generation;};
extern T1223 M1223;
struct S732{Tid id;T0* _lower_manifest_expression;T0* _upper_manifest_expression;T0* _upper;T0* _lower;};
extern T732 M732;
struct S1225{T2 _upper;T2 _capacity;T1359 _storage;T2 _generation;};
extern T1225 M1225;
struct S379{Tid id;T0* _manifest_expression;T0* _expression;};
extern T379 M379;
struct S678{Tid id;T0* _list;};
extern T678 M678;
struct S668{Tid id;T0* _declaration_type;T0* _type_mark;T0* _writable;};
extern T668 M668;
struct S1226{T2 _upper;T2 _capacity;T1360 _storage;T2 _generation;};
extern T1226 M1226;
struct S1227{T2 _upper;T2 _capacity;T1361 _storage;T2 _generation;};
extern T1227 M1227;
struct S673{Tid id;T6 _inside_agent_launcher_flag;T0* _capture_memory;T2 _rank;T0* _original_capture;T338 _start_position;};
extern T673 M673;
struct S1228{T2 _upper;T2 _capacity;T1363 _storage;T2 _generation;};
extern T1228 M1228;
struct S1229{T2 _upper;T2 _capacity;T1137 _storage;T2 _generation;};
extern T1229 M1229;
struct S1230{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1366 _buckets;T2 _generation;};
extern T1230 M1230;
struct S1234{T0* _next;T0* _item;};
extern T1234 M1234;
struct S1235{Tid id;T0* _item;};
extern T1235 M1235;
struct S1237{Tid id;T0* _item;};
extern T1237 M1237;
struct S1238{T0* _next;T0* _key;T0* _item;};
extern T1238 M1238;
struct S1240{T0* _lost_nodes;T6 _map_dirty;T0* _map;T0* _item_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1240 M1240;
struct S1246{T0* _next;T0* _key;T1 _item;};
extern T1246 M1246;
struct S1247{Tid id;T0* _item;};
extern T1247 M1247;
struct S1248{T2 _upper;T2 _capacity;T1374 _storage;T2 _generation;};
extern T1248 M1248;
struct S1249{T2 _upper;T2 _capacity;T1375 _storage;T2 _generation;};
extern T1249 M1249;
struct S1250{Tid id;T0* _item;};
extern T1250 M1250;
struct S1251{T0* _next;T0* _key;T0* _item;};
extern T1251 M1251;
struct S1253{T2 _lower;T2 _upper;T2 _capacity;T1376 _storage;T2 _generation;};
extern T1253 M1253;
struct S1255{T0* _next;T0* _key;T1 _item;};
extern T1255 M1255;
struct S1256{Tid id;T0* _item;};
extern T1256 M1256;
struct S1260{T0* _next_val;T0* _next_key;T0* _key;T0* _val;};
extern T1260 M1260;
struct S1262{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1377 _buckets;T2 _generation;};
extern T1262 M1262;
struct S1264{T0* _item;};
extern T1264 M1264;
struct S1265{Tid id;T0* _item;};
extern T1265 M1265;
struct S1266{T0* _next;T0* _key;T0* _item;};
extern T1266 M1266;
struct S1271{T0* _next;T0* _key;T0* _item;};
extern T1271 M1271;
struct S1272{Tid id;T0* _item;};
extern T1272 M1272;
struct S1276{T0* _next;T0* _item;};
extern T1276 M1276;
struct S1277{Tid id;T0* _item;};
extern T1277 M1277;
struct S1278{Tid id;T0* _item;};
extern T1278 M1278;
struct S1279{T0* _next;T0* _key;T0* _item;};
extern T1279 M1279;
struct S1282{T0* _next;T0* _item;};
extern T1282 M1282;
struct S1283{Tid id;T0* _item;};
extern T1283 M1283;
struct S1284{Tid id;T0* _item;};
extern T1284 M1284;
struct S1285{T0* _next;T0* _key;T0* _item;};
extern T1285 M1285;
struct S1288{T0* _next;T0* _item;};
extern T1288 M1288;
struct S1289{Tid id;T0* _item;};
extern T1289 M1289;
struct S1291{T0* _next;T0* _key;T0* _item;};
extern T1291 M1291;
struct S1292{Tid id;T0* _item;};
extern T1292 M1292;
struct S1295{T0* _next;T0* _item;};
extern T1295 M1295;
struct S1296{Tid id;T0* _item;};
extern T1296 M1296;
struct S1297{T0* _next;T0* _key;T0* _item;};
extern T1297 M1297;
struct S1299{Tid id;T0* _item;};
extern T1299 M1299;
struct S413{Tid id;T0* _compound;T2 _eiffel_parser_stamp;};
extern T413 M413;
struct S733{T338 _empty_position;T0* _headers;T0* _string_pool;};
extern T733 M733;
struct S1302{T0* _next;T0* _key;T0* _item;};
extern T1302 M1302;
struct S1303{Tid id;T0* _item;};
extern T1303 M1303;
struct S1305{Tid id;T0* _item;};
extern T1305 M1305;
struct S1306{T0* _next;T0* _key;T0* _item;};
extern T1306 M1306;
struct S1309{T0* _next;T335 _item;};
extern T1309 M1309;
struct S1310{Tid id;T0* _item;};
extern T1310 M1310;
struct S1311{Tid id;T0* _item;};
extern T1311 M1311;
struct S1312{T0* _next;T335 _key;T0* _item;};
extern T1312 M1312;
struct S1314{Tid id;T0* _item;};
extern T1314 M1314;
struct S1315{T0* _next;T0* _key;T0* _item;};
extern T1315 M1315;
struct S1319{Tid id;T0* _item;};
extern T1319 M1319;
struct S1320{T0* _next;T0* _key;T0* _item;};
extern T1320 M1320;
struct S356{Tid id;T2 _rank;T338 _start_position;T0* _result_type;T0* _declaration_type;};
extern T356 M356;
struct S1324{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1380 _buckets;T2 _generation;};
extern T1324 M1324;
struct S1326{T0* _next;T0* _key;T0* _item;};
extern T1326 M1326;
struct S1328{Tid id;T0* _item;};
extern T1328 M1328;
struct S1330{T0* _item;};
extern T1330 M1330;
struct S1334{T0* _next;T0* _key;T0* _item;};
extern T1334 M1334;
struct S1335{Tid id;T2 _generation;T2 _item_index;T0* _traversable;};
extern T1335 M1335;
struct S1337{Tid id;T0* _item;};
extern T1337 M1337;
struct S769{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T769 M769;
struct S770{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T770 M770;
struct S771{Tid id;T0* _group;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T771 M771;
struct S766{Tid id;T8 _data;T0* _id_map;};
extern T766 M766;
struct S767{Tid id;T8 _data;T6 _handle_list_dirty;T0* _handle_map;};
extern T767 M767;
struct S768{Tid id;};
extern T768 M768;
struct S1339{T0* _next;T0* _key;T0* _item;};
extern T1339 M1339;
struct S1341{Tid id;T0* _item;};
extern T1341 M1341;
struct S1343{Tid id;T0* _item;};
extern T1343 M1343;
struct S1344{T0* _next;T0* _key;T0* _item;};
extern T1344 M1344;
struct S1347{T0* _next;T0* _key;T0* _item;};
extern T1347 M1347;
struct S1348{Tid id;T0* _item;};
extern T1348 M1348;
struct S1350{Tid id;T0* _item;};
extern T1350 M1350;
struct S1351{T0* _next;T0* _key;T0* _item;};
extern T1351 M1351;
struct S1353{Tid id;T0* _item;};
extern T1353 M1353;
struct S1354{T0* _next;T0* _key;T0* _item;};
extern T1354 M1354;
struct S1356{T2 _upper;T2 _capacity;T1386 _storage;T2 _generation;};
extern T1356 M1356;
struct S1362{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1389 _buckets;T2 _generation;};
extern T1362 M1362;
struct S1364{Tid id;T0* _item;};
extern T1364 M1364;
struct S1365{T0* _next;T0* _key;T0* _item;};
extern T1365 M1365;
struct S1367{T2 _upper;T2 _capacity;T1390 _storage;T2 _generation;};
extern T1367 M1367;
struct S1368{T2 _balance;T0* _item;T0* _right;T0* _left;int _safe_equal;};
extern T1368 M1368;
struct S1371{Tid id;T0* _item;};
extern T1371 M1371;
struct S1372{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1394 _buckets;T2 _generation;};
extern T1372 M1372;
struct S1378{T0* _next;T0* _key;T0* _item;};
extern T1378 M1378;
struct S1379{Tid id;T0* _item;};
extern T1379 M1379;
struct S823{T0* _transitions;T0* _headers;T0* _tag_state;T2 _empty_idx;T2 _id;T2 _maxstate;T6 _has_empty;};
extern T823 M823;
struct S1381{T0* _next;T0* _item;};
extern T1381 M1381;
struct S1382{Tid id;T0* _item;};
extern T1382 M1382;
struct S1384{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1401 _buckets;T2 _generation;};
extern T1384 M1384;
struct S1385{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1404 _buckets;T2 _generation;};
extern T1385 M1385;
struct S1387{Tid id;T0* _item;};
extern T1387 M1387;
struct S1388{T0* _next;T0* _key;T0* _item;};
extern T1388 M1388;
struct S1392{Tid id;T0* _item;};
extern T1392 M1392;
struct S1393{T0* _next;T0* _key;T0* _item;};
extern T1393 M1393;
struct S337{T2 _item;};
extern T337 M337;
struct S1395{T2 _upper;T2 _capacity;T1406 _storage;T2 _generation;};
extern T1395 M1395;
struct S1396{T0* _free_nodes;T0* _mem_lnk;T2 _mem_idx;T0* _last_link;T0* _first_link;T2 _upper;T2 _generation;};
extern T1396 M1396;
struct S1397{T2 _item_2;T3 _item_1;};
extern T1397 M1397;
struct S1398{T2 _value_memory;T0* _lost_nodes;T6 _map_dirty;T0* _map;T2 _key_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1398 M1398;
struct S1400{T0* _next;T2 _key;T0* _item;};
extern T1400 M1400;
struct S1402{Tid id;T0* _item;};
extern T1402 M1402;
struct S1403{T0* _next;T2 _key;T0* _item;};
extern T1403 M1403;
struct S1405{Tid id;T0* _item;};
extern T1405 M1405;
struct S1409{T0* _item;};
extern T1409 M1409;
struct S1410{T0* _next;T0* _item;};
extern T1410 M1410;
struct S1411{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1420 _buckets;T2 _generation;};
extern T1411 M1411;
struct S1412{T2 _upper;T2 _capacity;T1421 _storage;T2 _generation;};
extern T1412 M1412;
struct S1413{T2 _value;T2 _balance;T2 _key;T0* _right;T0* _left;int _safe_equal_key;};
extern T1413 M1413;
struct S1416{T0* _item;};
extern T1416 M1416;
struct S1417{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1424 _buckets;T2 _generation;};
extern T1417 M1417;
struct S1418{Tid id;T0* _item;};
extern T1418 M1418;
struct S1419{T0* _next;T0* _key;T0* _item;};
extern T1419 M1419;
struct S1422{Tid id;T0* _item;};
extern T1422 M1422;
struct S1423{T0* _next;T0* _key;T0* _item;};
extern T1423 M1423;
struct S60{T2 _capacity;T9 _buffer;T0* _filter;};
extern T60 M60;
struct S775{Tid id;T6 _valid_cache;T0* _to_string_cache;T3 _drive;T0* _path;};
extern T775 M775;
extern T736 M736;
struct S660{Tid id;T3 _info_code;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T660 M660;
struct S1429{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1456 _buckets;T2 _generation;};
extern T1429 M1429;
struct S1430{T0* _item_2;T0* _item_1;};
extern T1430 M1430;
struct S1431{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1459 _buckets;T2 _generation;};
extern T1431 M1431;
struct S1432{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1461 _buckets;T2 _generation;};
extern T1432 M1432;
struct S1434{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1466 _buckets;T2 _generation;};
extern T1434 M1434;
struct S1437{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1469 _buckets;T2 _generation;};
extern T1437 M1437;
struct S666{Tid id;T0* _dynamic_type;T0* _side_effect_free_expression;};
extern T666 M666;
struct S670{Tid id;T0* _target_type;T0* _target;T0* _tagged_data_map;};
extern T670 M670;
struct S671{Tid id;T0* _live_type;T0* _dynamic_dispatch_temporary1;};
extern T671 M671;
struct S674{Tid id;T0* _target_type;T0* _feature_stamp;T338 _start_position;};
extern T674 M674;
struct S677{Tid id;T0* _dynamic_dispatch_temporary1;};
extern T677 M677;
struct S669{Tid id;T0* _tag;T6 _collect_flag;T0* _original_expression;T338 _start_position;T0* _tagged_data_map;};
extern T669 M669;
struct S663{Tid id;T0* _expression;T2 _eiffel_parser_stamp;};
extern T663 M663;
struct S667{Tid id;T0* _pretty_view;T0* _result_type_memory;T2 _size;uint64_t _value_memory;T338 _start_position;};
extern T667 M667;
struct S675{Tid id;T0* _type_mark;T338 _start_position;};
extern T675 M675;
struct S656{Tid id;T2 _error_code;T0* _error_message;T338 _start_position;T2 _eiffel_parser_stamp;int _exceptions;};
extern T656 M656;
extern T329 M329;
struct S1438{T2 _upper;T2 _capacity;T1446 _storage;T2 _generation;};
extern T1438 M1438;
struct S1439{T0* _lost_nodes;T6 _map_dirty;T0* _map;T338 _item_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1439 M1439;
struct S525{Tid id;T0* _expression_type;T0* _expression;T0* _resolved_memory;};
extern T525 M525;
struct S1440{T2 _upper;T2 _capacity;T1473 _storage;T2 _generation;};
extern T1440 M1440;
struct S679{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _target;T0* _agent_type;};
extern T679 M679;
struct S665{Tid id;T0* _target_type;T0* _feature_stamp;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T665 M665;
struct S661{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _agent_type;T2 _eiffel_parser_stamp;T0* _target;};
extern T661 M661;
struct S1441{T0* _item;};
extern T1441 M1441;
struct S1442{T2 _upper;T2 _capacity;T1474 _storage;T2 _generation;};
extern T1442 M1442;
struct S1443{T2 _upper;T2 _capacity;T1475 _storage;T2 _generation;};
extern T1443 M1443;
extern T306 M306;
struct S1444{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1476 _buckets;T2 _generation;};
extern T1444 M1444;
struct S1445{T2 _upper;T2 _capacity;T1479 _storage;T2 _generation;};
extern T1445 M1445;
struct S1451{T2 _upper;T2 _capacity;T1480 _storage;T2 _generation;};
extern T1451 M1451;
struct S528{T0* _code;};
extern T528 M528;
struct S123{Tid id;T6 _can_be_dropped_flag;T6 _precomputable;};
extern T123 M123;
struct S734{Tid id;T6 _trace_result;T0* _trace;T0* _type;};
extern T734 M734;
struct S739{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T739 M739;
struct S117{T6 _used;};
extern T117 M117;
struct S1453{T2 _lower;T2 _upper;T2 _capacity;T1268 _storage;T2 _generation;};
extern T1453 M1453;
struct S414{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T414 M414;
struct S411{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T411 M411;
struct S366{Tid id;T3 _array_name;T0* _target_type;T338 _start_position;};
extern T366 M366;
struct S785{Tid id;T0* _result_type;T0* _value;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T785 M785;
struct S638{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T638 M638;
struct S787{Tid id;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T787 M787;
struct S784{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T784 M784;
struct S676{Tid id;T338 _start_position;T0* _declaration_type;T0* _index;};
extern T676 M676;
struct S532{Tid id;T6 _side_effect_free_flag;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T532 M532;
struct S786{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T786 M786;
struct S637{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T637 M637;
struct S1454{T2 _upper;T2 _capacity;T1481 _storage;T2 _generation;};
extern T1454 M1454;
struct S825{Tid id;T0* _process;T2 _filtered_descriptor;T6 _is_connected;T8 _pipe;};
extern T825 M825;
struct S827{Tid id;T0* _process;T2 _filtered_descriptor;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T827 M827;
struct S828{Tid id;T8 _handle;T0* _process;T6 _is_connected;T8 _pipe;};
extern T828 M828;
struct S829{Tid id;T8 _handle;T0* _process;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T829 M829;
struct S1455{T0* _next;T0* _key;T0* _item;};
extern T1455 M1455;
struct S1457{Tid id;T0* _item;};
extern T1457 M1457;
struct S1458{T0* _next;T0* _key;T0* _item;};
extern T1458 M1458;
struct S1460{Tid id;T0* _item;};
extern T1460 M1460;
struct S1462{T0* _next;T0* _item;};
extern T1462 M1462;
struct S1463{Tid id;T0* _item;};
extern T1463 M1463;
struct S1464{Tid id;T0* _item;};
extern T1464 M1464;
struct S1465{T0* _next;T0* _key;T0* _item;};
extern T1465 M1465;
struct S1467{Tid id;T0* _item;};
extern T1467 M1467;
struct S1468{T0* _next;T0* _key;T0* _item;};
extern T1468 M1468;
struct S1470{T2 _upper;T2 _capacity;T1482 _storage;T2 _generation;};
extern T1470 M1470;
struct S1471{T2 _balance;T338 _item;T0* _right;T0* _left;int _safe_equal;};
extern T1471 M1471;
struct S1472{Tid id;T0* _item;};
extern T1472 M1472;
struct S672{Tid id;T0* _list;T338 _start_position;};
extern T672 M672;
struct S704{Tid id;T11 _value;};
extern T704 M704;
struct S1477{T0* _next;T0* _item;};
extern T1477 M1477;
struct S1478{Tid id;T0* _item;};
extern T1478 M1478;
struct S980{T0* _c_auto_init_plugin_deps_name;T0* _c_auto_init_plugin_deps_location;T0* _c_auto_init_function_name;T0* _c_compiler_options;T0* _c_linker_options;T0* _c_library_paths;T0* _c_libraries;T0* _c_header_paths;T0* _c_headers;T0* _c_sources;T338 _start_position;T6 _is_included;T6 _auto_init_done;T535 _bd;T0* _path;T0* _name;T2 _hash_code;};
extern T980 M980;
struct S634{T2 _declared_tmp_counter;};
extern T634 M634;
struct S558{T0* _type;T0* _doc_tag;T2 _number;T2 _eiffel_parser_stamp;};
extern T558 M558;
struct S1495{T2 _upper;T2 _capacity;T1517 _storage;T2 _generation;};
extern T1495 M1495;
struct S1496{T2 _lower;T2 _upper;T2 _capacity;T1518 _storage;T2 _generation;};
extern T1496 M1496;
struct S552{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T552 M552;
struct S553{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T553 M553;
struct S554{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T554 M554;
struct S555{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T555 M555;
struct S556{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T556 M556;
struct S557{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T557 M557;
struct S1502{T2 _upper;T2 _capacity;T1519 _storage;T2 _generation;};
extern T1502 M1502;
struct S1506{Tid id;T2 _generation;T2 _item_index;T0* _dictionary;};
extern T1506 M1506;
struct S799{Tid id;T2 _count;T2 _index;};
extern T799 M799;
struct S1508{T2 _lower;T2 _upper;T2 _capacity;T1322 _storage;T2 _generation;};
extern T1508 M1508;
struct S796{Tid id;T6 _item;};
extern T796 M796;
struct S1514{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1522 _buckets;T2 _generation;};
extern T1514 M1514;
struct S1515{T2 _upper;T2 _capacity;T1524 _storage;T2 _generation;};
extern T1515 M1515;
struct S709{T6 _negative;T2 _offset;T2 _integer_length;T2 _capacity;T1107 _storage;};
extern T709 M709;
struct S1516{T2 _upper;T2 _capacity;T1525 _storage;T2 _generation;};
extern T1516 M1516;
struct S1520{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1526 _buckets;T2 _generation;};
extern T1520 M1520;
struct S1521{T0* _next;T0* _key;T0* _item;};
extern T1521 M1521;
struct S1523{Tid id;T0* _item;};
extern T1523 M1523;
struct S706{Tid id;T1107 _storage;T2 _capacity;T6 _negative;};
extern T706 M706;
struct S1527{T0* _next;T0* _key;T0* _item;};
extern T1527 M1527;
struct S1528{Tid id;T0* _item;};
extern T1528 M1528;
struct S1541{T2 _upper;T2 _capacity;T1214 _storage;T2 _generation;};
extern T1541 M1541;
struct S783{Tid id;T0* _item;};
extern T783 M783;
struct S1542{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1546 _buckets;T2 _generation;};
extern T1542 M1542;
struct S781{Tid id;T2 _item;};
extern T781 M781;
struct S1545{T2 _upper;T2 _capacity;T9 _storage;T2 _generation;};
extern T1545 M1545;
struct S1547{T0* _next;T2 _key;T0* _item;};
extern T1547 M1547;
struct S1548{Tid id;T0* _item;};
extern T1548 M1548;
extern char*s345_1195446850A;
extern char*s108_0A;
extern char*s112_1418906530A;
extern char*s33_424424A;
extern char*s622_25969530A;
extern char*s107_10A;
extern char*s33_424430A;
extern char*s367_1114345928A;
extern char*s635_1983193131A;
extern char*s30_199827552A;
extern char*s112_1564992795A;
extern char*s622_59375621A;
extern char*s112_1772404517A;
extern char*s100_1078639380A;
extern char*s419_772854717A;
extern char*s100_1138390195A;
extern char*s112_523400916A;
extern char*s464_218994080A;
extern char*s112_12331A;
extern char*s599_1880914324A;
extern char*s100_34A;
extern char*s33_38A;
extern char*s112_40A;
extern char*s112_41A;
extern char*s614_7233618A;
extern char*s33_42A;
extern char*s33_43A;
extern char*s112_44A;
extern char*s112_36951A;
extern char*s33_45A;
extern char*s452_46A;
extern char*s33_47A;
extern char*s612_48A;
extern char*s29_1889925553A;
extern char*s121_1071750288A;
extern char*s410_532898088A;
extern char*s599_1664036235A;
extern char*s469_58A;
extern char*s599_1023028228A;
extern char*s623_59A;
extern char*s33_60A;
extern char*s33_61A;
extern char*s622_2017590A;
extern char*s33_62A;
extern char*s30_63A;
extern char*s778_1883030297A;
extern char*s33_64A;
extern char*s102_1684808173A;
extern char*s625_1216329562A;
extern char*s100_67A;
extern char*s100_1268871407A;
extern char*s622_219498506A;
extern char*s30_1202957293A;
extern char*s34_212160365A;
extern char*s616_80037A;
extern char*s33_12376A;
extern char*s115_325166540A;
extern char*s112_77A;
extern char*s420_77A;
extern char*s797_79A;
extern char*s112_1206795525A;
extern char*s112_441192857A;
extern char*s599_82A;
extern char*s790_306811962A;
extern char*s792_1665297219A;
extern char*s112_1645835456A;
extern char*s625_84A;
extern char*s112_2189840A;
extern char*s110_301485A;
extern char*s112_392938270A;
extern char*s599_585895143A;
extern char*s623_91A;
extern char*s112_93A;
extern char*s33_94A;
extern char*s100_916596A;
extern char*s797_2008215484A;
extern char*s108_99A;
extern char*s792_101A;
extern char*s274_376816512A;
extern char*s112_273430505A;
extern char*s621_158634393A;
extern char*s30_104A;
extern char*s616_105A;
extern char*s108_109A;
extern char*s432_178490A;
extern char*s33_112335826A;
extern char*s112_114A;
extern char*s95_772983982A;
extern char*s558_1399364920A;
extern char*s30_118A;
extern char*s621_6271A;
extern char*s476_123A;
extern char*s33_124A;
extern char*s33_126A;
extern char*s112_273430530A;
extern char*s112_391886489A;
extern char*s363_1485085274A;
extern char*s394_1089483711A;
extern char*s622_579867211A;
extern char*s100_629850238A;
extern char*s112_1629400044A;
extern char*s33_80109A;
extern char*s616_252339A;
extern char*s115_612971904A;
extern char*s648_726156456A;
extern char*s432_202915491A;
extern char*s392_446205995A;
extern char*s616_6305A;
extern char*s100_280897875A;
extern char*s400_1324593410A;
extern char*s34_1473988901A;
extern char*s560_168A;
extern char*s418_145102259A;
extern char*s100_339436953A;
extern char*s108_539873441A;
extern char*s112_1853640928A;
extern char*s452_1876110531A;
extern char*s100_470853074A;
extern char*s112_6330A;
extern char*s108_180A;
extern char*s112_116813823A;
extern char*s112_1368099455A;
extern char*s112_30942A;
extern char*s112_37095A;
extern char*s792_61699A;
extern char*s34_436911A;
extern char*s616_1341914655A;
extern char*s101_1604340919A;
extern char*s274_1341859296A;
extern char*s100_194A;
extern char*s635_42706587A;
extern char*s107_195A;
extern char*s112_475921520A;
extern char*s598_619030689A;
extern char*s284_200A;
extern char*s616_117385886A;
extern char*s112_6355A;
extern char*s112_204A;
extern char*s614_205A;
extern char*s106_580488532A;
extern char*s792_212314278A;
extern char*s100_639285944A;
extern char*s412_1085830094A;
extern char*s107_215A;
extern char*s380_905138318A;
extern char*s274_216A;
extern char*s329_2070057757A;
extern char*s33_217A;
extern char*s469_218A;
extern char*s33_218A;
extern char*s622_160146A;
extern char*s112_993675817A;
extern char*s33_220A;
extern char*s100_873294598A;
extern char*s33_54688766A;
extern char*s622_4638080A;
extern char*s614_226A;
extern char*s100_1922692108A;
extern char*s112_227A;
extern char*s274_1302880443A;
extern char*s329_1306325004A;
extern char*s112_585944489A;
extern char*s613_230A;
extern char*s614_230A;
extern char*s616_236A;
extern char*s566_237A;
extern char*s112_240A;
extern char*s108_240A;
extern char*s734_241A;
extern char*s100_241A;
extern char*s614_36137368A;
extern char*s565_244A;
extern char*s622_6396A;
extern char*s112_245A;
extern char*s599_246A;
extern char*s599_247A;
extern char*s622_247A;
extern char*s33_1682815431A;
extern char*s112_249A;
extern char*s112_251A;
extern char*s95_251A;
extern char*s284_252A;
extern char*s599_254A;
extern char*s622_255A;
extern char*s566_255A;
extern char*s107_542094038A;
extern char*s595_257A;
extern char*s112_257A;
extern char*s613_258A;
extern char*s599_259A;
extern char*s616_259A;
extern char*s622_6411A;
extern char*s107_262A;
extern char*s34_10703002A;
extern char*s112_1312728230A;
extern char*s616_264A;
extern char*s622_265A;
extern char*s614_184795A;
extern char*s599_436987A;
extern char*s443_1428348580A;
extern char*s116_270A;
extern char*s400_190952A;
extern char*s418_271A;
extern char*s112_272A;
extern char*s622_6425A;
extern char*s614_1097836905A;
extern char*s599_274A;
extern char*s101_116346440A;
extern char*s112_1017947719A;
extern char*s545_276A;
extern char*s112_277B;
extern char*s112_277C;
extern char*s112_277A;
extern char*s797_277A;
extern char*s371_278A;
extern char*s107_1255776138A;
extern char*s107_1131876546A;
extern char*s112_282A;
extern char*s33_282A;
extern char*s112_284B;
extern char*s112_284A;
extern char*s524_287A;
extern char*s524_80251A;
extern char*s628_293A;
extern char*s628_294A;
extern char*s476_594795843A;
extern char*s628_295A;
extern char*s622_296A;
extern char*s33_296A;
extern char*s108_297A;
extern char*s616_244699380A;
extern char*s108_298A;
extern char*s432_299A;
extern char*s284_300A;
extern char*s108_301A;
extern char*s980_302A;
extern char*s112_6455A;
extern char*s476_305A;
extern char*s112_1754886761A;
extern char*s112_317A;
extern char*s33_406284A;
extern char*s33_42134669A;
extern char*s419_325449730A;
extern char*s112_1238750212A;
extern char*s100_1088075316A;
extern char*s280_90592250A;
extern char*s121_322A;
extern char*s621_35343969A;
extern char*s769_324A;
extern char*s622_325A;
extern char*s108_326A;
extern char*s599_327A;
extern char*s621_197159A;
extern char*s108_327A;
extern char*s354_327A;
extern char*s32_329A;
extern char*s566_1710309A;
extern char*s32_331A;
extern char*s112_10739979A;
extern char*s599_815493762A;
extern char*s108_333A;
extern char*s108_334A;
extern char*s32_334A;
extern char*s115_107193812A;
extern char*s35_336A;
extern char*s560_142931125A;
extern char*s108_340A;
extern char*s108_341A;
extern char*s112_881278717A;
extern char*s614_345A;
extern char*s33_1501191A;
extern char*s470_348A;
extern char*s34_437070A;
extern char*s734_351A;
extern char*s117_1568216255A;
extern char*s107_36611104A;
extern char*s33_1578334651A;
extern char*s662_301503927A;
extern char*s519_360A;
extern char*s371_360A;
extern char*s33_361A;
extern char*s405_1136256141A;
extern char*s469_2140868216A;
extern char*s625_754574290A;
extern char*s616_366A;
extern char*s598_775396A;
extern char*s101_1700247488A;
extern char*s33_371A;
extern char*s519_372A;
extern char*s394_376A;
extern char*s792_377A;
extern char*s112_379A;
extern char*s33_548214405A;
extern char*s462_898426A;
extern char*s108_1561265653A;
extern char*s112_175857472A;
extern char*s112_382A;
extern char*s622_6534A;
extern char*s598_197373672A;
extern char*s108_62728285A;
extern char*s614_1639500234A;
extern char*s120_397A;
extern char*s621_6550A;
extern char*s452_1962655329A;
extern char*s110_402A;
extern char*s599_2054563574A;
extern char*s397_1442631340A;
extern char*s34_9909665A;
extern char*s112_6559A;
extern char*s792_1748680500A;
extern char*s100_1011636926A;
extern char*s622_1340573954A;
extern char*s599_1484470448A;
extern char*s599_1212159A;
extern char*s100_1733505988A;
extern char*s112_1601653158A;
extern char*s622_419A;
extern char*s354_892535123A;
extern char*s112_1957408550A;
extern char*s112_781060556A;
extern char*s112_726728775A;
extern char*s419_1604599495A;
extern char*s405_343527626A;
extern char*s101_74239A;
extern char*s599_6580A;
extern char*s378_1808265259A;
extern char*s595_86545A;
extern char*s432_205111678A;
extern char*s101_696478167A;
extern char*s452_1604408825A;
extern char*s277_38905513A;
extern char*s635_1447552176A;
extern char*s33_1603529235A;
extern char*s792_526175446A;
extern char*s33_80416A;
extern char*s112_1793244543A;
extern char*s33_878996813A;
extern char*s107_408537579A;
extern char*s112_10666295A;
extern char*s112_339308075A;
extern char*s400_1297676933A;
extern char*s792_6614A;
extern char*s329_1489034545A;
extern char*s980_1935504882A;
extern char*s112_471A;
extern char*s628_471A;
extern char*s662_1084920002A;
extern char*s628_474A;
extern char*s420_1240817101A;
extern char*s628_476A;
extern char*s108_1192507148A;
extern char*s33_1639475718A;
extern char*s623_529853775A;
extern char*s668_1937147216A;
extern char*s107_1459577427A;
extern char*s432_397816412A;
extern char*s108_1721407046A;
extern char*s470_1577658176A;
extern char*s599_283801480A;
extern char*s635_1655357614A;
extern char*s775_498A;
extern char*s34_2073386A;
extern char*s100_2117894368A;
extern char*s621_6655A;
extern char*s30_613587359A;
extern char*s614_506A;
extern char*s112_215791A;
extern char*s616_1181502A;
extern char*s100_1524784203A;
extern char*s980_1942892277A;
extern char*s112_365905049A;
extern char*s465_334725631A;
extern char*s778_1000694404A;
extern char*s336_25373399A;
extern char*s112_526A;
extern char*s616_1084495643A;
extern char*s400_889865702A;
extern char*s33_534A;
extern char*s622_535A;
extern char*s108_6687A;
extern char*s490_2057854492A;
extern char*s112_932172292A;
extern char*s100_955638361A;
extern char*s100_9897510A;
extern char*s34_10315778A;
extern char*s33_552A;
extern char*s469_1490203324A;
extern char*s29_833055089A;
extern char*s112_1906398440A;
extern char*s112_1901889757A;
extern char*s119_557A;
extern char*s792_25822456A;
extern char*s688_559A;
extern char*s100_1471861047A;
extern char*s616_550508910A;
extern char*s34_1532343833A;
extern char*s778_68224A;
extern char*s367_1744510279A;
extern char*s284_22396357A;
extern char*s614_570A;
extern char*s122_570A;
extern char*s616_1832703325A;
extern char*s34_54418471A;
extern char*s100_1228072329A;
extern char*s112_1988895671A;
extern char*s566_166654A;
extern char*s274_1476966395A;
extern char*s112_1290234339A;
extern char*s100_1961160815A;
extern char*s397_1037594318A;
extern char*s100_751585121A;
extern char*s34_2233396A;
extern char*s30_1724187394A;
extern char*s34_48390502A;
extern char*s104_589A;
extern char*s628_591A;
extern char*s108_2077353217A;
extern char*s274_2132072515A;
extern char*s35_594A;
extern char*s33_9713026A;
extern char*s33_36193081A;
extern char*s511_2080244194A;
extern char*s34_600A;
extern char*s101_1317175740A;
extern char*s107_1463938603A;
extern char*s110_603A;
extern char*s792_6755A;
extern char*s792_604A;
extern char*s100_1207921682A;
extern char*s107_801894175A;
extern char*s423_1773450779A;
extern char*s100_437331A;
extern char*s405_1260488135A;
extern char*s100_611A;
extern char*s33_548331507A;
extern char*s790_614A;
extern char*s621_185146A;
extern char*s112_1419097826A;
extern char*s107_427937988A;
extern char*s108_179868158A;
extern char*s622_475042348A;
extern char*s432_620A;
extern char*s599_68284A;
extern char*s616_6775A;
extern char*s112_625A;
extern char*s112_5395053A;
extern char*s34_627A;
extern char*s616_693716559A;
extern char*s121_354654986A;
extern char*s33_51915068A;
extern char*s115_1661847054A;
extern char*s101_85511833A;
extern char*s614_1367878466A;
extern char*s112_635A;
extern char*s33_636A;
extern char*s97_1861287086A;
extern char*s471_449661A;
extern char*s34_640A;
extern char*s616_2251910A;
extern char*s611_5395074A;
extern char*s107_1174466439A;
extern char*s112_651A;
extern char*s34_1690381566A;
extern char*s33_1744399653A;
extern char*s622_6810A;
extern char*s104_660A;
extern char*s34_661A;
extern char*s106_97543221A;
extern char*s611_4570857A;
extern char*s616_1175100011A;
extern char*s33_669A;
extern char*s622_670A;
extern char*s34_670A;
extern char*s560_671A;
extern char*s30_525197655A;
extern char*s599_43730A;
extern char*s399_925886099A;
extern char*s622_351281A;
extern char*s110_674A;
extern char*s100_1135641353A;
extern char*s792_6830A;
extern char*s635_378711602A;
extern char*s108_1087245292A;
extern char*s89_685A;
extern char*s108_686A;
extern char*s108_689A;
extern char*s112_1713607783A;
extern char*s107_1828403897A;
extern char*s621_1824264277A;
extern char*s621_905827712A;
extern char*s790_699A;
extern char*s622_31455A;
extern char*s596_619166512A;
extern char*s599_228498053A;
extern char*s280_875060418A;
extern char*s33_1115958189A;
extern char*s33_1206543966A;
extern char*s611_4570907A;
extern char*s29_1325879523A;
extern char*s100_316863332A;
extern char*s635_1197649626A;
extern char*s599_10937200A;
extern char*s112_6877A;
extern char*s110_13028A;
extern char*s33_80694A;
extern char*s566_1290234494A;
extern char*s102_1385667261A;
extern char*s33_849712179A;
extern char*s611_4570932A;
extern char*s283_740A;
extern char*s621_101227749A;
extern char*s616_744A;
extern char*s110_1772235A;
extern char*s616_750A;
extern char*s616_1261705A;
extern char*s683_1601130656A;
extern char*s107_1460051321A;
extern char*s274_527202963A;
extern char*s112_1195084695A;
extern char*s400_613384625A;
extern char*s558_2007779419A;
extern char*s108_643573734A;
extern char*s476_589832448A;
extern char*s621_40031469A;
extern char*s611_4570957A;
extern char*s623_68406039A;
extern char*s792_5161461A;
extern char*s616_644847010A;
extern char*s33_567319806A;
extern char*s616_1124563501A;
extern char*s113_6926A;
extern char*s110_51699930A;
extern char*s394_7867907A;
extern char*s33_1597390874A;
extern char*s33_567319812A;
extern char*s112_7720290A;
extern char*s611_4570982A;
extern char*s117_899910547A;
extern char*s792_2092663259A;
extern char*s622_6946A;
extern char*s112_1994813154A;
extern char*s33_567319829A;
extern char*s419_282823780A;
extern char*s622_1824713404A;
extern char*s33_9676326A;
extern char*s598_926003101A;
extern char*s599_80771A;
extern char*s274_1091711046A;
extern char*s622_6965A;
extern char*s611_4571007A;
extern char*s565_1710532409A;
extern char*s33_1671553525A;
extern char*s112_1981256377A;
extern char*s108_10937305A;
extern char*s599_173055A;
extern char*s471_55156846A;
extern char*s100_52979396A;
extern char*s498_1083118122A;
extern char*s616_400650A;
extern char*s616_86950A;
extern char*s34_400652A;
extern char*s622_427390771A;
extern char*s274_1707020207A;
extern char*s611_4571032A;
extern char*s599_345908476A;
extern char*s622_6995A;
extern char*s95_142319A;
extern char*s34_11251026A;
extern char*s419_170383550A;
extern char*s625_7006A;
extern char*s108_373286592A;
extern char*s100_1275558331A;
extern char*s611_4571057A;
extern char*s100_888875725A;
extern char*s792_1648235130A;
extern char*s33_1498845794A;
extern char*s469_1331532446A;
extern char*s397_1769582063A;
extern char*s622_7025A;
extern char*s792_1288623074A;
extern char*s485_672729595A;
extern char*s648_385268764A;
extern char*s794_730579755A;
extern char*s274_1130154866A;
extern char*s400_923532A;
extern char*s980_7037A;
extern char*s107_1814748872A;
extern char*s336_345225764A;
extern char*s616_1291760099A;
extern char*s33_80854A;
extern char*s33_13194A;
extern char*s277_1820580025A;
extern char*s622_1689502217A;
extern char*s611_185428A;
extern char*s34_10193105A;
extern char*s32_831708366A;
extern char*s121_1972884945A;
extern char*s33_10377643A;
extern char*s611_185438A;
extern char*s108_703496930A;
extern char*s794_1295032451A;
extern char*s107_604558099A;
extern char*s611_185443A;
extern char*s662_501491947A;
extern char*s611_185448A;
extern char*s107_1786429697A;
extern char*s400_1552156565A;
extern char*s611_185453A;
extern char*s34_1975394A;
extern char*s33_1594034A;
extern char*s33_2246041A;
extern char*s611_185458A;
extern char*s792_1012357115A;
extern char*s611_185463A;
extern char*s273_51017327A;
extern char*s112_934A;
extern char*s368_1809213019A;
extern char*s452_1284372793A;
extern char*s463_1204053035A;
extern char*s34_1839765037A;
extern char*s611_185468A;
extern char*s108_830570470A;
extern char*s566_481249030A;
extern char*s732_495673125A;
extern char*s115_1752297822A;
extern char*s112_1642367158A;
extern char*s112_273431355A;
extern char*s274_708319A;
extern char*s792_915251302A;
extern char*s422_171706123A;
extern char*s108_50863580A;
extern char*s463_1204053060A;
extern char*s550_1747846A;
extern char*s616_7118A;
extern char*s33_1607595572A;
extern char*s635_557767498A;
extern char*s34_1992063831A;
extern char*s497_1962243783A;
extern char*s112_207160501A;
extern char*s625_124454155A;
extern char*s476_1496963692A;
extern char*s616_54714119A;
extern char*s622_87090A;
extern char*s112_1586448448A;
extern char*s792_77282146A;
extern char*s622_185515A;
extern char*s443_540477054A;
extern char*s84_1761241425A;
extern char*s112_1500500537A;
extern char*s112_437715A;
extern char*s100_1587734026A;
extern char*s792_160930A;
extern char*s100_1703575813A;
extern char*s625_160937A;
extern char*s274_89867121A;
extern char*s400_205616643A;
extern char*s112_514187710A;
extern char*s447_1615634978A;
extern char*s100_2080029331A;
extern char*s100_266191698A;
extern char*s108_851047233A;
extern char*s112_1346694814A;
extern char*s107_1365578385A;
extern char*s100_1090616383A;
extern char*s112_308580A;
extern char*s648_247541875A;
extern char*s452_1436450217A;
extern char*s107_713806135A;
extern char*s345_646901709A;
extern char*s100_1581435442A;
extern char*s446_743946038A;
extern char*s681_1043A;
extern char*s452_69279758A;
extern char*s108_17494489A;
extern char*s682_1047A;
extern char*s284_7207A;
extern char*s34_10876026A;
extern char*s112_437780A;
extern char*s100_1380562254A;
extern char*s635_1092806174A;
extern char*s408_1719402393A;
extern char*s106_23085765A;
extern char*s112_1102979933A;
extern char*s792_1574324912A;
extern char*s35_87180A;
extern char*s95_439490016A;
extern char*s107_385188989A;
extern char*s100_1934613587A;
extern char*s112_965818786A;
extern char*s474_68732A;
extern char*s274_208962844A;
extern char*s100_2091587115A;
extern char*s30_142550A;
extern char*s112_4620481A;
extern char*s479_7232A;
extern char*s452_1305581590A;
extern char*s400_156630152A;
extern char*s614_167166A;
extern char*s30_1090A;
extern char*s623_1102979958A;
extern char*s550_1027113524A;
extern char*s616_1348915394A;
extern char*s112_1901755A;
extern char*s614_580292587A;
extern char*s458_99702656A;
extern char*s107_1839715989A;
extern char*s565_302501127A;
extern char*s452_1630520481A;
extern char*s797_1101A;
extern char*s461_1554555636A;
extern char*s100_879341913A;
extern char*s400_1277330071A;
extern char*s112_893005A;
extern char*s792_2136427942A;
extern char*s476_1034900711A;
extern char*s432_1112A;
extern char*s100_1617443474A;
extern char*s112_588411932A;
extern char*s452_1051699101A;
extern char*s519_1330923746A;
extern char*s95_1121A;
extern char*s363_327012886A;
extern char*s100_1717397235A;
extern char*s100_1003875089A;
extern char*s35_2141685A;
extern char*s614_1446625A;
extern char*s345_1759986771A;
extern char*s112_4620546A;
extern char*s792_7296A;
extern char*s531_927498134A;
extern char*s621_10322525A;
extern char*s410_1099750743A;
extern char*s622_1628970485A;
extern char*s282_1133285999A;
extern char*s33_1157A;
extern char*s328_1981041429A;
extern char*s112_273443870A;
extern char*s595_7317A;
extern char*s112_1350760769A;
extern char*s107_1535001676A;
extern char*s621_419443A;
extern char*s465_1867518592A;
extern char*s108_1964046235A;
extern char*s400_905382A;
extern char*s112_1142598643A;
extern char*s274_305465997A;
extern char*s33_1944903A;
extern char*s434_235492225A;
extern char*s33_55040341A;
extern char*s550_28418819A;
extern char*s34_10648581A;
extern char*s379_1552710436A;
extern char*s100_1819737650A;
extern char*s107_1206593669A;
extern char*s17_1210A;
extern char*s35_2246326A;
extern char*s108_1215A;
extern char*s274_767646015A;
extern char*s277_1641573945A;
extern char*s112_1839365502A;
extern char*s112_1319581398A;
extern char*s33_9529116A;
extern char*s614_11300605A;
extern char*s792_7374A;
extern char*s121_1430004157A;
extern char*s622_1671074150A;
extern char*s400_1324951230A;
extern char*s32_1897129554A;
extern char*s284_188916891A;
extern char*s100_155929078A;
extern char*s107_646243744A;
extern char*s33_276937706A;
extern char*s33_1235A;
extern char*s100_911265735A;
extern char*s614_1240A;
extern char*s792_407207A;
extern char*s419_1700082283A;
extern char*s622_520388145A;
extern char*s33_55040391A;
extern char*s622_704592146A;
extern char*s33_1247A;
extern char*s461_1377394679A;
extern char*s100_445001496A;
extern char*s378_1088174660A;
extern char*s621_52555395A;
extern char*s30_513843490A;
extern char*s33_55040401A;
extern char*s112_499425548A;
extern char*s284_4479182A;
extern char*s599_1485929081A;
extern char*s33_2067995A;
extern char*s622_870841390A;
extern char*s112_1919660703A;
extern char*s112_1264A;
extern char*s107_1265A;
extern char*s599_1269A;
extern char*s112_1271B;
extern char*s112_1271A;
extern char*s95_74133124A;
extern char*s793_1274A;
extern char*s112_148900A;
extern char*s558_38182A;
extern char*s599_182255408A;
extern char*s623_1431664982A;
extern char*s623_1280A;
extern char*s112_1284A;
extern char*s614_1285A;
extern char*s623_1291A;
extern char*s108_932412928A;
extern char*s668_1083579905A;
extern char*s112_81256A;
extern char*s112_1295B;
extern char*s112_1295A;
extern char*s616_25900A;
extern char*s614_1298A;
extern char*s432_1642232185A;
extern char*s452_1952642401A;
extern char*s616_685204250A;
extern char*s612_7454A;
extern char*s611_1312A;
extern char*s327_855586967A;
extern char*s34_1988096A;
extern char*s599_7475A;
extern char*s33_747962924A;
extern char*s112_32080A;
extern char*s533_902076231A;
extern char*s339_10414970A;
extern char*s364_1686701A;
extern char*s34_945182441A;
extern char*s112_1330A;
extern char*s792_26635163A;
extern char*s33_1245671098A;
extern char*s108_1335A;
extern char*s403_13637A;
extern char*s100_2097430832A;
extern char*s101_140920753A;
extern char*s599_37202594A;
extern char*s476_412142950A;
extern char*s419_1304837581A;
extern char*s34_87466A;
extern char*s112_411134193A;
extern char*s280_413151726A;
extern char*s277_1136866084A;
extern char*s625_1068122514A;
extern char*s621_2077255577A;
extern char*s622_116864219A;
extern char*s419_1081673178A;
extern char*s478_869266852A;
extern char*s336_590983311A;
extern char*s116_1382A;
extern char*s367_762122588A;
extern char*s274_139303084A;
extern char*s599_2028521226A;
extern char*s101_996106634A;
extern char*s100_1910692676A;
extern char*s100_1466196812A;
extern char*s792_1396A;
extern char*s112_1618833880A;
extern char*s635_1846931416A;
extern char*s274_86060043A;
extern char*s980_1807195960A;
extern char*s558_7557A;
extern char*s401_1127350535A;
extern char*s283_87520A;
extern char*s621_1407A;
extern char*s621_1994331A;
extern char*s400_1705796732A;
extern char*s790_1414A;
extern char*s101_181806522A;
extern char*s112_1417A;
extern char*s616_32175A;
extern char*s625_32176A;
extern char*s635_39109479A;
extern char*s100_342864313A;
extern char*s405_1732344459A;
extern char*s100_2110077371A;
extern char*s599_1426A;
extern char*s33_87541A;
extern char*s33_1427A;
extern char*s121_210310269A;
extern char*s119_489233515A;
extern char*s363_1459510708A;
extern char*s405_1382321814A;
extern char*s623_29107967A;
extern char*s112_1540494783A;
extern char*s108_1438A;
extern char*s616_1241777620A;
extern char*s112_2087300232A;
extern char*s616_1445A;
extern char*s622_1124779458A;
extern char*s30_941571923A;
extern char*s682_1452A;
extern char*s350_1440516445A;
extern char*s122_150325744A;
extern char*s497_90494969A;
extern char*s274_1689176777A;
extern char*s112_1924772383A;
extern char*s599_1246790712A;
extern char*s469_486705491A;
extern char*s790_81437A;
extern char*s112_1476A;
extern char*s623_813409A;
extern char*s436_1478A;
extern char*s112_188283590A;
extern char*s616_1307328870A;
extern char*s336_934695142A;
extern char*s112_1273572186A;
extern char*s30_579450289A;
extern char*s100_54634669A;
extern char*s598_340114884A;
extern char*s112_1493A;
extern char*s33_1375414302A;
extern char*s100_1744209811A;
extern char*s112_13801A;
extern char*s112_586511651A;
extern char*s690_511703191A;
extern char*s792_479982486A;
extern char*s112_1404852998A;
extern char*s394_35382059A;
extern char*s100_49203356A;
extern char*s112_2142659303A;
extern char*s400_2480364A;
extern char*s394_354065377A;
extern char*s115_582925635A;
extern char*s100_2047201942A;
extern char*s100_1909979286A;
extern char*s121_1680762272A;
extern char*s33_880412606A;
extern char*s34_2234341A;
extern char*s274_1709309070A;
extern char*s108_1102814319A;
extern char*s622_1530A;
extern char*s100_833080669A;
extern char*s621_49806180A;
extern char*s622_1679636650A;
extern char*s471_413651A;
extern char*s792_129037214A;
extern char*s33_279656751A;
extern char*s400_2480394A;
extern char*s100_962885232A;
extern char*s33_859431564A;
extern char*s112_490869799A;
extern char*s100_791727511A;
extern char*s112_1164920984A;
extern char*s100_2099054905A;
extern char*s662_643795973A;
extern char*s599_1111954737A;
extern char*s34_1957581A;
extern char*s274_1553744164A;
extern char*s112_1565A;
extern char*s622_511943145A;
extern char*s100_2037548A;
extern char*s599_491029751A;
extern char*s792_1111960899A;
extern char*s112_1471782099A;
extern char*s100_955584028A;
extern char*s34_407540A;
extern char*s33_438300A;
extern char*s343_242535516A;
extern char*s100_1666553531A;
extern char*s621_1203432441A;
extern char*s616_283285900A;
extern char*s112_1661632742A;
extern char*s621_2006740748A;
extern char*s33_761722990A;
extern char*s476_1319735562A;
extern char*s100_1208507031A;
extern char*s599_1185483839A;
extern char*s112_341357508A;
extern char*s121_3556890A;
extern char*s101_1038536453A;
extern char*s598_1191155066A;
extern char*s108_2011772281A;
extern char*s33_185934049A;
extern char*s108_1626A;
extern char*s400_2480479A;
extern char*s33_185934055A;
extern char*s30_7779A;
extern char*s100_2055333675A;
extern char*s112_1607940692A;
extern char*s112_860532685A;
extern char*s108_2139128753A;
extern char*s621_1783951564A;
extern char*s34_1532344910A;
extern char*s33_619776399A;
extern char*s34_479921113A;
extern char*s469_522818189A;
extern char*s797_1644A;
extern char*s33_185934072A;
extern char*s623_32400A;
extern char*s599_1923813010A;
extern char*s598_1646A;
extern char*s461_2141380032A;
extern char*s100_1254996328A;
extern char*s792_687744958A;
extern char*s616_1650A;
extern char*s792_1651A;
extern char*s419_265238926A;
extern char*s108_7809A;
extern char*s616_180037A;
extern char*s595_386149138A;
extern char*s100_401981819A;
extern char*s112_1164208A;
extern char*s560_1046299075A;
extern char*s792_349661420A;
extern char*s599_1676A;
extern char*s33_1326673961A;
extern char*s622_32435A;
extern char*s792_44739A;
extern char*s35_1994621A;
extern char*s100_1289042164A;
extern char*s622_32456A;
extern char*s112_1946737844A;
extern char*s112_14005A;
extern char*s112_192841706A;
extern char*s368_1348774A;
extern char*s400_1337425939A;
extern char*s115_1875884480A;
extern char*s550_142089811A;
extern char*s423_1110386385A;
extern char*s112_7869A;
extern char*s284_2082988666A;
extern char*s108_7878A;
extern char*s616_1727A;
extern char*s410_183516812A;
extern char*s622_1586596820A;
extern char*s623_29126717A;
extern char*s34_14036A;
extern char*s33_55926626A;
extern char*s112_48520827A;
extern char*s616_1060489498A;
extern char*s596_161665A;
extern char*s419_1857191624A;
extern char*s117_1797674551A;
extern char*s108_1744A;
extern char*s616_1115076A;
extern char*s616_180128A;
extern char*s100_941240074A;
extern char*s274_608446371A;
extern char*s475_1753A;
extern char*s476_112048371A;
extern char*s112_1852104762A;
extern char*s376_316489161A;
extern char*s115_22612837A;
extern char*s112_1765A;
extern char*s405_176104896A;
extern char*s371_1712194128A;
extern char*s101_256559978A;
extern char*s405_1458557644A;
extern char*s95_1052333303A;
extern char*s100_1296817101A;
extern char*s108_1775A;
extern char*s100_376006259A;
extern char*s112_1364588829A;
extern char*s370_7506001A;
extern char*s112_36778611A;
extern char*s100_970900228A;
extern char*s596_565063403A;
extern char*s452_2108232434A;
extern char*s112_308542101A;
extern char*s112_4049151A;
extern char*s792_1523807481A;
extern char*s490_920757291A;
extern char*s394_1801A;
extern char*s100_1917483795A;
extern char*s635_1658151484A;
extern char*s112_1630601156A;
extern char*s107_89019087A;
extern char*s34_2185421A;
extern char*s34_251171752A;
extern char*s100_1778077539A;
extern char*s33_312005144A;
extern char*s100_1665385073A;
extern char*s349_1771711260A;
extern char*s550_1826A;
extern char*s122_75639A;
extern char*s476_1832A;
extern char*s621_54714979A;
extern char*s622_1651828280A;
extern char*s336_1813679543A;
extern char*s622_1214258443A;
extern char*s622_167916A;
extern char*s622_1840A;
extern char*s622_108351709A;
extern char*s33_94407393A;
extern char*s33_14150A;
extern char*s792_32605A;
extern char*s100_50040236A;
extern char*s112_1154403080A;
extern char*s469_1468725331A;
extern char*s112_426087775A;
extern char*s112_57150800A;
extern char*s100_1021024803A;
extern char*s792_47598300A;
extern char*s277_1188332009A;
extern char*s100_603076667A;
extern char*s623_534333098A;
extern char*s792_692075493A;
extern char*s112_107312226A;
extern char*s452_90390825A;
extern char*s112_267478119A;
extern char*s35_2191641A;
extern char*s598_565069653A;
extern char*s623_2001063662A;
extern char*s35_822199910A;
extern char*s100_2047202317A;
extern char*s622_32650A;
extern char*s112_438660461A;
extern char*s100_502181838A;
extern char*s100_307717976A;
extern char*s107_327902A;
extern char*s622_1900A;
extern char*s622_10089540A;
extern char*s100_1938643327A;
extern char*s112_1580612071A;
extern char*s565_1747685533A;
extern char*s33_735034101A;
extern char*s100_376006384A;
extern char*s452_573004463A;
extern char*s33_50778415A;
extern char*s599_505232755A;
extern char*s614_36126743A;
extern char*s112_7918258A;
extern char*s790_413927315A;
extern char*s282_1185293475A;
extern char*s621_1994852A;
extern char*s33_1530432238A;
extern char*s622_5654700A;
extern char*s622_887295984A;
extern char*s100_2061122069A;
extern char*s100_945201499A;
extern char*s100_1933A;
extern char*s560_992810240A;
extern char*s33_88048A;
extern char*s112_950675891A;
extern char*s33_88049A;
extern char*s621_942808765A;
extern char*s100_246527867A;
extern char*s108_69601A;
extern char*s33_55041091A;
extern char*s100_4492176A;
extern char*s599_2111741A;
extern char*s792_27909038A;
extern char*s33_36200588A;
extern char*s560_724183788A;
extern char*s108_683870135A;
extern char*s33_261093457A;
extern char*s100_1991246741A;
extern char*s476_909851733A;
extern char*s33_1286698901A;
extern char*s100_1505459217A;
extern char*s100_1421116705A;
extern char*s622_9794360A;
extern char*s108_1115301A;
extern char*s100_124992A;
extern char*s599_2072064738A;
extern char*s33_1680885744A;
extern char*s108_5525574A;
extern char*s792_525205114A;
extern char*s112_11086084A;
extern char*s599_4996600A;
extern char*s100_676728857A;
extern char*s34_451011A;
extern char*s622_86195952A;
extern char*s33_55041141A;
extern char*s115_1127406485A;
extern char*s107_2029530601A;
extern char*s112_1492394528A;
extern char*s33_55041151A;
extern char*s622_19199275A;
extern char*s121_1711985232A;
extern char*s598_2039095413A;
extern char*s100_1284361566A;
extern char*s107_1378502623A;
extern char*s397_729510616A;
extern char*s616_28032126A;
extern char*s476_1646704683A;
extern char*s112_1965252672A;
extern char*s792_2121801775A;
extern char*s614_161951A;
extern char*s277_1281353746A;
extern char*s112_772432310A;
extern char*s277_169314461A;
extern char*s329_971287994A;
extern char*s33_586229245A;
extern char*s622_484454800A;
extern char*s625_1150927957A;
extern char*s33_1395184171A;
extern char*s622_10089690A;
extern char*s112_1307483215A;
extern char*s107_891552598A;
extern char*s112_1724182721A;
extern char*s622_476433922A;
extern char*s107_1145029170A;
extern char*s101_446380143A;
extern char*s599_826425832A;
extern char*s614_21020045A;
extern char*s622_9954400A;
extern char*s108_186217457A;
extern char*s622_162010A;
extern char*s112_1656195746A;
extern char*s107_1483967746A;
extern char*s394_1747372019A;
extern char*s614_162019A;
extern char*s622_162020A;
extern char*s625_5279655A;
extern char*s401_1993565801A;
extern char*s112_506210947A;
extern char*s33_1300046706A;
extern char*s33_2104A;
extern char*s623_32860A;
extern char*s112_8260A;
extern char*s623_2110A;
extern char*s30_1042405932A;
extern char*s112_32869A;
extern char*s100_2001191A;
extern char*s599_1032053803A;
extern char*s476_1427483140A;
extern char*s328_977955761A;
extern char*s34_408086A;
extern char*s112_531983658A;
extern char*s34_251916328A;
extern char*s100_1176245553A;
extern char*s95_1781104140A;
extern char*s110_57487A;
extern char*s112_451157A;
extern char*s622_8291A;
extern char*s598_205124A;
extern char*s475_2009909053A;
extern char*s622_162070A;
extern char*s34_69805A;
extern char*s625_1113554587A;
extern char*s112_389672A;
extern char*s112_389675A;
extern char*s792_1927425A;
extern char*s793_14464A;
extern char*s368_202031759A;
extern char*s100_2051403723A;
extern char*s616_162095A;
extern char*s622_2138778683A;
extern char*s277_32926A;
extern char*s121_461074983A;
extern char*s400_900982204A;
extern char*s110_2178A;
extern char*s34_401994A;
extern char*s33_2035472654A;
extern char*s980_482960256A;
extern char*s108_69851A;
extern char*s112_1826935309A;
extern char*s34_2032026A;
extern char*s622_1726920051A;
extern char*s34_264667428A;
extern char*s112_351488799A;
extern char*s100_4750778A;
extern char*s112_383570A;
extern char*s622_340514A;
extern char*s622_1240185282A;
extern char*s34_820292A;
extern char*s115_1585514726A;
extern char*s599_1637927398A;
extern char*s274_698011541A;
extern char*s388_529996976A;
extern char*s115_1297180456A;
extern char*s33_1447702A;
extern char*s108_1255802680A;
extern char*s519_922867504A;
extern char*s34_88336A;
extern char*s100_599810839A;
extern char*s598_1112927266A;
extern char*s33_840111968A;
extern char*s476_115013643A;
extern char*s622_234933541A;
extern char*s32_1181006553A;
extern char*s100_1023251859A;
extern char*s733_2114672999A;
extern char*s400_442652821A;
extern char*s107_601041072A;
extern char*s419_797085749A;
extern char*s33_1297432701A;
extern char*s792_5839580A;
extern char*s33_2067759348A;
extern char*s599_832670A;
extern char*s625_8436A;
extern char*s432_408035024A;
extern char*s635_1679625106A;
extern char*s327_864187036A;
extern char*s623_1155996628A;
extern char*s33_1209184326A;
extern char*s100_700613496A;
extern char*s622_45355A;
extern char*s625_1245850444A;
extern char*s115_1041926341A;
extern char*s599_2301A;
extern char*s100_1689577436A;
extern char*s33_1604515261A;
extern char*s622_1096165867A;
extern char*s100_860582570A;
extern char*s622_245384155A;
extern char*s112_1816632501A;
extern char*s115_1811139659A;
extern char*s33_728963476A;
extern char*s33_9647090A;
extern char*s599_8475A;
extern char*s100_28789007A;
extern char*s100_1874765620A;
extern char*s110_395994A;
extern char*s622_8485A;
extern char*s30_546635553A;
extern char*s622_1553763390A;
extern char*s112_20552830A;
extern char*s634_1664721281A;
extern char*s100_1752914319A;
extern char*s100_2020913390A;
extern char*s34_414461A;
extern char*s599_1426099398A;
extern char*s100_156243902A;
extern char*s613_1476205446A;
extern char*s616_1936367907A;
extern char*s274_1955866577A;
extern char*s634_1025503229A;
extern char*s448_914877497A;
extern char*s622_244793715A;
extern char*s365_1360462097A;
extern char*s769_1121854A;
extern char*s336_2084982239A;
extern char*s33_175767198A;
extern char*s635_1238684603A;
extern char*s108_45436A;
extern char*s792_737599544A;
extern char*s112_419316052A;
extern char*s112_2382A;
extern char*s95_1452647150A;
extern char*s365_41841490A;
extern char*s108_217674A;
extern char*s112_149822297A;
extern char*s595_1359151955A;
extern char*s595_8545A;
extern char*s630_2394A;
extern char*s112_2395A;
extern char*s599_126319331A;
extern char*s630_2395A;
extern char*s100_1478844272A;
extern char*s100_1223700793A;
extern char*s100_529554293A;
extern char*s284_63912A;
extern char*s100_2117988535A;
extern char*s107_2114217978A;
extern char*s112_1327517381A;
extern char*s616_2065182209A;
extern char*s112_1530032908A;
extern char*s397_1222747401A;
extern char*s274_2070822678A;
extern char*s34_76226A;
extern char*s100_439136A;
extern char*s112_2417A;
extern char*s432_146113272A;
extern char*s622_714188879A;
extern char*s95_2123229206A;
extern char*s274_763815152A;
extern char*s274_957054969A;
extern char*s482_180503525A;
extern char*s110_2440A;
extern char*s274_556698697A;
extern char*s108_6159594A;
extern char*s121_1974940930A;
extern char*s622_168532A;
extern char*s625_1956008156A;
extern char*s101_274238642A;
extern char*s33_2090604340A;
extern char*s33_591414963A;
extern char*s113_1753572602A;
extern char*s565_11381817A;
extern char*s616_48939825A;
extern char*s101_332623945A;
extern char*s792_8624A;
extern char*s400_282345691A;
extern char*s621_1119207694A;
extern char*s621_118716790A;
extern char*s616_48939847A;
extern char*s100_554066118A;
extern char*s100_1439398002A;
extern char*s469_1917908900A;
extern char*s100_1193216533A;
extern char*s616_279959115A;
extern char*s100_277837020A;
extern char*s33_2504A;
extern char*s102_1656731300A;
extern char*s621_49917876A;
extern char*s550_193194A;
extern char*s110_207986277A;
extern char*s100_180894A;
extern char*s286_1477688005A;
extern char*s329_1777506207A;
extern char*s34_402346A;
extern char*s622_33291A;
extern char*s121_2537A;
extern char*s100_761631659A;
extern char*s371_2126200255A;
extern char*s117_584218374A;
extern char*s112_2545A;
extern char*s599_1575353618A;
extern char*s566_33316A;
extern char*s33_1223768616A;
extern char*s622_308542874A;
extern char*s790_2082029949A;
extern char*s686_2565A;
extern char*s100_1909918820A;
extern char*s635_1711825865A;
extern char*s33_744845610A;
extern char*s400_1670460393A;
extern char*s550_64080A;
extern char*s622_2571A;
extern char*s599_1489891655A;
extern char*s397_1182157125A;
extern char*s622_37173080A;
extern char*s566_3920780A;
extern char*s110_76405A;
extern char*s115_305596576A;
extern char*s112_1361175839A;
extern char*s274_22915075A;
extern char*s112_218061703A;
extern char*s108_98806116A;
extern char*s34_82570A;
extern char*s621_411283072A;
extern char*s100_1731250773A;
extern char*s32_1194182360A;
extern char*s100_1564737054A;
extern char*s30_8771A;
extern char*s621_689812670A;
extern char*s101_894954671A;
extern char*s560_950159899A;
extern char*s100_2992013A;
extern char*s112_2630A;
extern char*s34_114085235A;
extern char*s108_1247935972A;
extern char*s112_1308400309A;
extern char*s623_1773508175A;
extern char*s108_8801A;
extern char*s622_524787520A;
extern char*s108_530877013A;
extern char*s452_789877170A;
extern char*s100_1098712729A;
extern char*s622_1116064705A;
extern char*s452_783418632A;
extern char*s623_2670A;
extern char*s112_33425A;
extern char*s367_292944046A;
extern char*s792_1069766146A;
extern char*s33_88795A;
extern char*s797_480414235A;
extern char*s107_1572647306A;
extern char*s794_585110409A;
extern char*s112_1082664800A;
extern char*s118_138929174A;
extern char*s622_1263916320A;
extern char*s30_1010347497A;
extern char*s34_2063276A;
extern char*s33_201970776A;
extern char*s34_396356A;
extern char*s622_1023363018A;
extern char*s469_1089314041A;
extern char*s107_961022639A;
extern char*s33_201970793A;
extern char*s277_2089269822A;
extern char*s33_756809447A;
extern char*s611_23647157A;
extern char*s35_234165132A;
extern char*s33_201970799A;
extern char*s565_15019A;
extern char*s34_479922190A;
extern char*s622_15020A;
extern char*s112_33475A;
extern char*s461_1172758533A;
extern char*s635_1912840703A;
extern char*s112_1934139A;
extern char*s336_1646268668A;
extern char*s107_66925608A;
extern char*s112_8880A;
extern char*s108_8884A;
extern char*s622_8885A;
extern char*s533_520647979A;
extern char*s397_112006296A;
extern char*s108_8889A;
extern char*s112_941548611A;
extern char*s621_1637595774A;
extern char*s32_8897A;
extern char*s100_45224899A;
extern char*s112_162838175A;
extern char*s33_30191860A;
extern char*s112_2753A;
extern char*s792_1341105285A;
extern char*s274_1251030042A;
extern char*s112_900404594A;
extern char*s29_1525604536A;
extern char*s33_1673345408A;
extern char*s33_954385774A;
extern char*s284_10926944A;
extern char*s422_1666936074A;
extern char*s400_2004103151A;
extern char*s95_672350142A;
extern char*s465_946986142A;
extern char*s792_236525A;
extern char*s33_827429162A;
extern char*s792_2142119302A;
extern char*s621_444775459A;
extern char*s328_311661671A;
extern char*s273_758913190A;
extern char*s33_253393261A;
extern char*s112_1040899642A;
extern char*s273_319940936A;
extern char*s34_1509818A;
extern char*s108_8976A;
extern char*s101_1581369567A;
extern char*s100_2137524537A;
extern char*s621_1246644455A;
extern char*s112_1136523103A;
extern char*s110_2833A;
extern char*s419_1529695024A;
extern char*s336_556920526A;
extern char*s432_1026844627A;
extern char*s599_567426438A;
extern char*s108_8991A;
extern char*s622_2217200A;
extern char*s400_1143055473A;
extern char*s108_1331737400A;
extern char*s483_76659A;
extern char*s112_985140858A;
extern char*s274_961330339A;
extern char*s623_177459204A;
extern char*s410_936707889A;
extern char*s115_612334905A;
extern char*s108_1431838787A;
extern char*s792_52067A;
extern char*s403_1721243342A;
extern char*s100_1207880883A;
extern char*s112_400297641A;
extern char*s368_2870A;
extern char*s112_1746979137A;
extern char*s112_1591358844A;
extern char*s33_52347889A;
extern char*s33_76691A;
extern char*s107_1574136045A;
extern char*s327_36115402A;
extern char*s380_527180488A;
extern char*s112_2883A;
extern char*s100_1910823336A;
extern char*s792_618166083A;
extern char*s33_1095772782A;
extern char*s108_218174A;
extern char*s622_907447617A;
extern char*s466_1057882626A;
extern char*s281_15195A;
extern char*s33_869539012A;
extern char*s599_1728089446A;
extern char*s622_1671063525A;
extern char*s84_522142839A;
extern char*s623_965636096A;
extern char*s112_54734511A;
extern char*s635_1691484858A;
extern char*s622_520377520A;
extern char*s33_1574640467A;
extern char*s108_9073A;
extern char*s622_39831A;
extern char*s595_1971245A;
extern char*s329_580435889A;
extern char*s33_48958735A;
extern char*s100_727272566A;
extern char*s102_1377150320A;
extern char*s33_170256464A;
extern char*s100_1953566687A;
extern char*s635_81368369A;
extern char*s286_624587783A;
extern char*s120_2947A;
extern char*s34_8054609A;
extern char*s108_9107A;
extern char*s452_947318471A;
extern char*s108_9121A;
extern char*s368_181352A;
extern char*s107_1737672775A;
extern char*s621_497096041A;
extern char*s980_387651299A;
extern char*s622_2118444283A;
extern char*s112_9130A;
extern char*s774_1182938696A;
extern char*s108_2109537640A;
extern char*s32_2057783129A;
extern char*s599_759184012A;
extern char*s112_374291339A;
extern char*s112_712350300A;
extern char*s108_415107A;
extern char*s100_1775667520A;
extern char*s622_2996A;
extern char*s792_998144220A;
extern char*s112_1582839830A;
extern char*s33_180965424A;
extern char*s368_732402575A;
extern char*s33_180965430A;
extern char*s368_44462444A;
extern char*s112_1281004126A;
extern char*s112_1450568746A;
extern char*s100_188494264A;
extern char*s112_1982839385A;
extern char*s33_180965447A;
extern char*s100_167445550A;
extern char*s33_10945665A;
extern char*s614_115574176A;
extern char*s112_3040A;
extern char*s621_1757386798A;
extern char*s101_1708886163A;
extern char*s284_1661812564A;
extern char*s274_2028436769A;
extern char*s112_15351A;
extern char*s635_214672950A;
extern char*s33_2174354A;
extern char*s599_1111279623A;
extern char*s635_1961403182A;
extern char*s625_2117730851A;
extern char*s281_15370A;
extern char*s115_69115705A;
extern char*s108_9220A;
extern char*s110_3069A;
extern char*s280_1492303331A;
extern char*s108_9222A;
extern char*s100_723705127A;
extern char*s115_1008693261A;
extern char*s34_3073A;
extern char*s33_3075A;
extern char*s100_1922694958A;
extern char*s792_33836A;
extern char*s274_817932306A;
extern char*s115_840703310A;
extern char*s34_3085A;
extern char*s34_51843716A;
extern char*s112_1145546877A;
extern char*s394_1896547075A;
extern char*s469_1014770470A;
extern char*s108_3094A;
extern char*s599_1125599189A;
extern char*s30_546820847A;
extern char*s110_1663868A;
extern char*s35_89216A;
extern char*s625_138425A;
extern char*s792_15405A;
extern char*s467_384465A;
extern char*s101_1923039443A;
extern char*s621_1197879602A;
extern char*s33_1856946950A;
extern char*s33_39154229A;
extern char*s100_370754643A;
extern char*s100_188014584A;
extern char*s107_1066764899A;
extern char*s792_33875A;
extern char*s100_1502870799A;
extern char*s112_1737592965A;
extern char*s100_144939139A;
extern char*s100_1409701608A;
extern char*s621_1087364605A;
extern char*s100_1550836304A;
extern char*s345_1186844731A;
extern char*s371_30745830A;
extern char*s419_1134247532A;
extern char*s112_375072661A;
extern char*s736_849265556A;
extern char*s107_298390A;
extern char*s100_734506354A;
extern char*s108_721564652A;
extern char*s33_15448A;
extern char*s376_3147A;
extern char*s599_26975282A;
extern char*s100_822318035A;
extern char*s483_10459847A;
extern char*s112_756717624A;
extern char*s33_207673214A;
extern char*s634_1901947715A;
extern char*s599_26975293A;
extern char*s480_1329824754A;
extern char*s112_1811657197A;
extern char*s110_3169A;
extern char*s33_207673231A;
extern char*s616_3175A;
extern char*s35_2248290A;
extern char*s34_3175A;
extern char*s622_653639191A;
extern char*s115_938738041A;
extern char*s792_884381655A;
extern char*s623_3181A;
extern char*s599_156962A;
extern char*s687_46245A;
extern char*s101_1452518781A;
extern char*s107_689013605A;
extern char*s274_1389956963A;
extern char*s112_36460172A;
extern char*s33_7095298A;
extern char*s471_3196A;
extern char*s112_323348966A;
extern char*s112_2101369329A;
extern char*s33_280482649A;
extern char*s792_244523906A;
extern char*s792_3209A;
extern char*s622_802840A;
extern char*s622_1679626025A;
extern char*s599_3212A;
extern char*s480_2088401A;
extern char*s616_602573626A;
extern char*s339_97896378A;
extern char*s621_159025018A;
extern char*s108_9366A;
extern char*s100_1898638542A;
extern char*s100_1460213717A;
extern char*s101_92397395A;
extern char*s614_7224500A;
extern char*s622_15533A;
extern char*s100_1452100558A;
extern char*s100_850458948A;
extern char*s100_246399995A;
extern char*s33_421505A;
extern char*s363_336696676A;
extern char*s732_2068836731A;
extern char*s100_1389575653A;
extern char*s476_1088102843A;
extern char*s616_4179775A;
extern char*s115_2035830473A;
extern char*s100_638895319A;
extern char*s614_40427625A;
extern char*s329_770157670A;
extern char*s633_80501401A;
extern char*s409_835850355A;
extern char*s599_1610470399A;
extern char*s792_834589410A;
extern char*s599_46337A;
extern char*s274_1811847991A;
extern char*s112_660780608A;
extern char*s33_7704337A;
extern char*s112_15589A;
extern char*s622_1206509635A;
extern char*s108_3291A;
extern char*s108_1346168095A;
extern char*s112_46350A;
extern char*s33_33120277A;
extern char*s621_38305571A;
extern char*s108_3294A;
extern char*s107_1255397791A;
extern char*s112_616198177A;
extern char*s107_1928938448A;
extern char*s336_70962A;
extern char*s112_960414291A;
extern char*s34_1072344038A;
extern char*s100_1725672511A;
extern char*s112_2115332211A;
extern char*s120_287218105A;
extern char*s100_2008366323A;
extern char*s107_1896793334A;
extern char*s622_83277A;
extern char*s277_1897894366A;
extern char*s470_1810101146A;
extern char*s108_3320A;
extern char*s400_276773717A;
extern char*s622_104084395A;
extern char*s560_13424808A;
extern char*s614_15629A;
extern char*s339_83290A;
extern char*s470_34086A;
extern char*s623_105695965A;
extern char*s635_58505493A;
extern char*s100_147793411A;
extern char*s34_1223234252A;
extern char*s452_221949868A;
extern char*s368_3337A;
extern char*s100_1297544492A;
extern char*s621_259021955A;
extern char*s566_1500847347A;
extern char*s108_150382995A;
extern char*s282_360205908A;
extern char*s371_1731781A;
extern char*s100_760340765A;
extern char*s736_1398420907A;
extern char*s623_129654140A;
extern char*s733_89481A;
extern char*s112_511465169A;
extern char*s363_240593583A;
extern char*s363_611824887A;
extern char*s112_3374A;
extern char*s476_192265186A;
extern char*s622_83345A;
extern char*s30_1102047298A;
extern char*s100_1109293176A;
extern char*s107_292482A;
extern char*s33_698215697A;
extern char*s107_763853019A;
extern char*s616_23451005A;
extern char*s112_3393A;
extern char*s100_883016350A;
extern char*s405_739187517A;
extern char*s33_89510A;
extern char*s33_1297876698A;
extern char*s112_42279221A;
extern char*s100_1390190909A;
extern char*s616_2024156039A;
extern char*s623_1062582514A;
extern char*s274_1977886A;
extern char*s34_3415A;
extern char*s662_22122412A;
extern char*s110_15721A;
extern char*s33_3421A;
extern char*s112_5164112A;
extern char*s622_1338608648A;
extern char*s112_3430A;
extern char*s100_2053250287A;
extern char*s616_169510A;
extern char*s112_1855175789A;
extern char*s108_759424351A;
extern char*s100_2060176323A;
extern char*s471_83406A;
extern char*s33_15751A;
extern char*s104_1449185201A;
extern char*s112_2123070311A;
extern char*s792_1242450095A;
extern char*s100_239621812A;
extern char*s112_3457A;
extern char*s280_1534075159A;
extern char*s397_362752532A;
extern char*s343_1742784741A;
extern char*s363_1485100899A;
extern char*s33_3460A;
extern char*s112_1203674198A;
extern char*s108_1067454155A;
extern char*s792_46525A;
extern char*s33_3472A;
extern char*s108_270309168A;
extern char*s33_3474A;
extern char*s112_3475A;
extern char*s112_2038260346A;
extern char*s980_10220290A;
extern char*s614_3485A;
extern char*s108_592781506A;
extern char*s622_1821634438A;
extern char*s611_22854451A;
extern char*s112_120095614A;
extern char*s33_1418282620A;
extern char*s599_20240284A;
extern char*s110_3494A;
extern char*s112_325655889A;
extern char*s471_3496A;
extern char*s368_1317154036A;
extern char*s401_176211197A;
extern char*s33_3501A;
extern char*s112_1572014572A;
extern char*s363_1626899946A;
extern char*s100_46597328A;
extern char*s100_1631593164A;
extern char*s792_1973244310A;
extern char*s792_1173325215A;
extern char*s117_253892190A;
extern char*s793_27492334A;
extern char*s478_1387816739A;
extern char*s793_136857117A;
extern char*s598_1199805276A;
extern char*s401_256961544A;
extern char*s115_1129671576A;
extern char*s89_3520A;
extern char*s108_15828A;
extern char*s792_1058430701A;
extern char*s112_1728206941A;
extern char*s33_15831A;
extern char*s452_1606367935A;
extern char*s33_1947246A;
extern char*s29_1767481079A;
extern char*s107_1225577982A;
extern char*s100_1522646678A;
extern char*s33_1947251A;
extern char*s34_77350A;
extern char*s100_1931146896A;
extern char*s422_1379248421A;
extern char*s100_201048978A;
extern char*s778_789213750A;
extern char*s793_692716864A;
extern char*s625_646768902A;
extern char*s100_1167481808A;
extern char*s684_1499315956A;
extern char*s89_1462938943A;
extern char*s558_3557A;
extern char*s112_1965730A;
extern char*s101_176469602A;
extern char*s274_2100317873A;
extern char*s633_936093505A;
extern char*s734_858562A;
extern char*s614_23186700A;
extern char*s623_28273584A;
extern char*s112_357794960A;
extern char*s100_161325869A;
extern char*s622_304601115A;
extern char*s34_3595A;
extern char*s470_852437A;
extern char*s112_77412A;
extern char*s34_3601A;
extern char*s95_1229059519A;
extern char*s112_726227573A;
extern char*s112_434116584A;
extern char*s621_15915A;
extern char*s100_1061217192A;
extern char*s621_1193180751A;
extern char*s93_1554312113A;
extern char*s33_279523519A;
extern char*s274_551231644A;
extern char*s95_620670284A;
extern char*s112_1065652086A;
extern char*s621_1549077634A;
extern char*s616_206626A;
extern char*s34_3645A;
extern char*s624_54686040A;
extern char*s30_1009954795A;
extern char*s112_1723513855A;
extern char*s34_89771A;
extern char*s107_2106290588A;
extern char*s100_1522646803A;
extern char*s33_577213499A;
extern char*s599_1115628985A;
extern char*s100_375534514A;
extern char*s33_3669A;
extern char*s634_1750246116A;
extern char*s598_1199620901A;
extern char*s33_911175911A;
extern char*s616_1631421108A;
extern char*s980_28287A;
extern char*s274_261396584A;
extern char*s33_169371474A;
extern char*s282_1539722017A;
extern char*s34_16001A;
extern char*s112_395316170A;
extern char*s33_1947419A;
extern char*s112_1565125654A;
extern char*s449_1087076085A;
extern char*s405_581709925A;
extern char*s621_89821A;
extern char*s112_1773201687A;
extern char*s95_1914699291A;
extern char*s115_429361964A;
extern char*s100_1453066751A;
extern char*s112_1059359695A;
extern char*s112_56845112A;
extern char*s418_1288915017A;
extern char*s400_1469170081A;
extern char*s797_1635136368A;
extern char*s34_937397683A;
extern char*s336_1524252299A;
extern char*s329_560316788A;
extern char*s33_2218105A;
extern char*s108_89862A;
extern char*s282_411001267A;
extern char*s401_1933023161A;
extern char*s399_1140411454A;
extern char*s33_203589551A;
extern char*s622_9905A;
extern char*s622_34510A;
extern char*s616_3760A;
extern char*s95_510352234A;
extern char*s394_1128496981A;
extern char*s100_407741255A;
extern char*s112_22971612A;
extern char*s733_560556710A;
extern char*s400_944882A;
extern char*s622_437573617A;
extern char*s112_1316373138A;
extern char*s622_2030510390A;
extern char*s410_1931700734A;
extern char*s674_638047023A;
extern char*s274_1737556726A;
extern char*s33_275488632A;
extern char*s274_2044479327A;
extern char*s35_77608A;
extern char*s622_9980719A;
extern char*s121_113009969A;
extern char*s112_122027336A;
extern char*s34_2593373A;
extern char*s461_907165587A;
extern char*s626_2187411A;
extern char*s980_1760616840A;
extern char*s274_1799491166A;
extern char*s432_892969089A;
extern char*s107_1194472660A;
extern char*s100_1943393816A;
extern char*s470_9808515A;
extern char*s778_65332A;
extern char*s599_2187432A;
extern char*s734_16139A;
extern char*s101_372047073A;
extern char*s662_1864907075A;
extern char*s33_440571A;
extern char*s100_2082787810A;
extern char*s107_388205767A;
extern char*s33_1604522960A;
extern char*s284_2064444A;
extern char*s33_2187464A;
extern char*s112_697705640A;
extern char*s282_188525860A;
extern char*s34_49076540A;
extern char*s272_1587749191A;
extern char*s108_143937264A;
extern char*s274_452889A;
extern char*s112_1450791030A;
extern char*s794_1411018665A;
extern char*s419_2134616155A;
extern char*s397_333554149A;
extern char*s112_397592212A;
extern char*s35_16177A;
extern char*s397_461679483A;
extern char*s33_2187483A;
extern char*s566_11241768A;
extern char*s34_59251A;
extern char*s284_1224218969A;
extern char*s792_54686284A;
extern char*s284_1750778A;
extern char*s102_745978733A;
extern char*s792_384078512A;
extern char*s662_191115496A;
extern char*s112_522691310A;
extern char*s106_1442714837A;
extern char*s108_1056930268A;
extern char*s623_2187545A;
extern char*s100_1687580001A;
extern char*s100_1301660112A;
extern char*s493_455005721A;
extern char*s112_1136118256A;
extern char*s466_779913846A;
extern char*s367_389128515A;
extern char*s635_7440512A;
extern char*s622_77767A;
extern char*s112_2060090728A;
extern char*s274_641030424A;
extern char*s622_77773A;
extern char*s34_16264A;
extern char*s34_9790205A;
extern char*s565_1476287022A;
extern char*s112_984785217A;
extern char*s100_99041221A;
extern char*s614_7225250A;
extern char*s614_2187584A;
extern char*s614_2187585A;
extern char*s34_265093627A;
extern char*s112_1234811086A;
extern char*s399_435568604A;
extern char*s32_635943583A;
extern char*s101_175744216A;
extern char*s112_700572143A;
extern char*s33_1223936132A;
extern char*s614_40428375A;
extern char*s329_1207039342A;
extern char*s400_511502716A;
extern char*s33_37186806A;
extern char*s797_1847764413A;
extern char*s599_2187619A;
extern char*s616_809795A;
extern char*s368_4488096A;
extern char*s599_208313786A;
extern char*s101_175744241A;
extern char*s33_77832A;
extern char*s274_1667312535A;
extern char*s274_90141A;
extern char*s388_1814961148A;
extern char*s452_161769183A;
extern char*s365_432936020A;
extern char*s112_889346373A;
extern char*s112_4980205A;
extern char*s100_872019014A;
extern char*s115_7612837A;
extern char*s329_41769343A;
extern char*s274_1984169029A;
extern char*s100_1476889913A;
extern char*s112_2039472678A;
extern char*s560_26108906A;
extern char*s33_65574A;
extern char*s112_136593176A;
extern char*s33_197002151A;
extern char*s616_440120430A;
extern char*s112_533301931A;
extern char*s623_388821092A;
extern char*s100_1160088831A;
extern char*s100_902126A;
extern char*s616_2089246593A;
extern char*s622_234855416A;
extern char*s792_2051940780A;
extern char*s33_550709268A;
extern char*s112_253935823A;
extern char*s95_1468715266A;
extern char*s33_197002168A;
extern char*s100_732932648A;
extern char*s599_657822788A;
extern char*s616_2353775A;
extern char*s101_1836169859A;
extern char*s34_434665A;
extern char*s101_175744316A;
extern char*s410_626532654A;
extern char*s33_197002174A;
extern char*s470_397949195A;
extern char*s396_1543474532A;
extern char*s112_1099040180A;
extern char*s274_1805205737A;
extern char*s33_573080478A;
extern char*s397_2089449608A;
extern char*s736_1139569132A;
extern char*s108_1832417772A;
extern char*s623_84085A;
extern char*s100_1732402521A;
extern char*s790_742356016A;
extern char*s616_47187A;
extern char*s595_1152812249A;
extern char*s115_1248054333A;
extern char*s33_53339A;
extern char*s30_1335263213A;
extern char*s621_1085305030A;
extern char*s282_838840612A;
extern char*s106_1616517694A;
extern char*s565_1476281050A;
extern char*s565_742356033A;
extern char*s33_49076823A;
extern char*s112_1858528797A;
extern char*s599_1949908058A;
extern char*s112_10940631A;
extern char*s107_218672210A;
extern char*s432_397660162A;
extern char*s30_375350487A;
extern char*s108_1361085152A;
extern char*s621_1403828457A;
extern char*s474_1610077639A;
extern char*s112_16487A;
extern char*s100_398318341A;
extern char*s339_731327330A;
extern char*s101_595894613A;
extern char*s100_1174611449A;
extern char*s733_2027238465A;
extern char*s34_78002A;
extern char*s363_165601417A;
extern char*s736_1927020241A;
extern char*s336_1246984134A;
extern char*s616_16510A;
extern char*s33_1202672333A;
extern char*s100_897447412A;
extern char*s108_19761224A;
extern char*s112_1201497496A;
extern char*s797_1959331451A;
extern char*s792_1990989A;
extern char*s112_5367889A;
extern char*s100_586311386A;
extern char*s599_422487A;
extern char*s112_47278A;
extern char*s100_1093012317A;
extern char*s625_41131A;
extern char*s100_1437345301A;
extern char*s980_2072196164A;
extern char*s33_1744612358A;
extern char*s443_1118729658A;
extern char*s112_2096892436A;
extern char*s625_1659544035A;
extern char*s100_4235A;
extern char*s107_1610926534A;
extern char*s100_1154110220A;
extern char*s273_956361723A;
extern char*s112_1110850242A;
extern char*s112_1377391529A;
extern char*s622_884813300A;
extern char*s622_4881995A;
extern char*s112_1197714671A;
extern char*s616_840791A;
extern char*s101_543076045A;
extern char*s621_280766651A;
extern char*s102_42698349A;
extern char*s687_928596125A;
extern char*s112_246893097A;
extern char*s112_1911279888A;
extern char*s112_163909964A;
extern char*s394_332834879A;
extern char*s368_78082A;
extern char*s108_1223801083A;
extern char*s401_1907958363A;
extern char*s476_94643563A;
extern char*s622_17743770A;
extern char*s112_1964848975A;
extern char*s100_688657949A;
extern char*s792_1772045883A;
extern char*s34_90408A;
extern char*s792_1314337673A;
extern char*s101_1242149539A;
extern char*s33_7748406A;
extern char*s519_840796792A;
extern char*s329_198146473A;
extern char*s100_126038302A;
extern char*s33_16616A;
extern char*s108_2121681051A;
extern char*s614_36122993A;
extern char*s400_1718483009A;
extern char*s34_16630A;
extern char*s100_494839979A;
extern char*s102_1784452489A;
extern char*s34_10208843A;
extern char*s34_56255230A;
extern char*s108_725963810A;
extern char*s33_16639A;
extern char*s33_78150A;
extern char*s100_2016523575A;
extern char*s443_1888871872A;
extern char*s34_1730514379A;
extern char*s492_1879799154A;
extern char*s616_1553642381A;
extern char*s646_1166590709A;
extern char*s792_1396798042A;
extern char*s33_705019679A;
extern char*s33_1339128A;
extern char*s33_451899881A;
extern char*s110_59731A;
extern char*s531_2014364610A;
extern char*s108_39204698A;
extern char*s108_61342149A;
extern char*s100_768172015A;
extern char*s469_1979303915A;
extern char*s622_17743865A;
extern char*s339_416499A;
extern char*s101_1226144723A;
extern char*s339_416500A;
extern char*s363_61858840A;
extern char*s33_16686A;
extern char*s792_1279738389A;
extern char*s357_881547256A;
extern char*s35_385751A;
extern char*s793_666336072A;
extern char*s793_41300A;
extern char*s686_355003A;
extern char*s734_78209A;
extern char*s112_561301605A;
extern char*s112_988839165A;
extern char*s371_31214580A;
extern char*s622_106047655A;
extern char*s274_2085574777A;
extern char*s108_84381A;
extern char*s274_416541A;
extern char*s616_4425A;
extern char*s598_1511378937A;
extern char*s33_90544A;
extern char*s112_280139425A;
extern char*s394_29037A;
extern char*s736_888288799A;
extern char*s34_427898753A;
extern char*s616_847125A;
extern char*s622_111269879A;
extern char*s367_1881300092A;
extern char*s336_2084824380A;
extern char*s273_988261007A;
extern char*s112_1240218271A;
extern char*s101_175744666A;
extern char*s688_1085938891A;
extern char*s550_32450971A;
extern char*s614_920950A;
extern char*s34_78263A;
extern char*s616_958274895A;
extern char*s623_804085A;
extern char*s112_561947515A;
extern char*s34_16761A;
extern char*s732_786403659A;
extern char*s100_1559455194A;
extern char*s112_21391495A;
extern char*s101_175744691A;
extern char*s100_1421961899A;
extern char*s350_1479430694A;
extern char*s432_597973944A;
extern char*s112_16782A;
extern char*s34_84443A;
extern char*s680_161074567A;
extern char*s405_182862A;
extern char*s107_1914558593A;
extern char*s107_1450022771A;
extern char*s599_430519127A;
extern char*s100_611217054A;
extern char*s394_138555764A;
extern char*s108_1615398571A;
extern char*s758_1400894751A;
extern char*s104_1880881887A;
extern char*s736_263008962A;
extern char*s33_839855894A;
extern char*s100_1075925125A;
extern char*s100_488830629A;
extern char*s336_2050169721A;
extern char*s622_1174230416A;
extern char*s107_1661328107A;
extern char*s33_2126626A;
extern char*s112_179423058A;
extern char*s107_42846255A;
extern char*s394_1816745449A;
extern char*s469_56907446A;
extern char*s621_614557109A;
extern char*s469_10559665A;
extern char*s565_1208522276A;
extern char*s621_1215177661A;
extern char*s115_576322499A;
extern char*s400_1592935176A;
extern char*s33_324411A;
extern char*s33_1739790308A;
extern char*s95_15142174A;
extern char*s112_1483072174A;
extern char*s622_195246A;
extern char*s566_1502207936A;
extern char*s690_1345295929A;
extern char*s108_149455415A;
extern char*s622_1605175681A;
extern char*s107_22271191A;
extern char*s452_375578482A;
extern char*s599_948421114A;
extern char*s599_35330A;
extern char*s115_784841421A;
extern char*s100_107634778A;
extern char*s400_350193314A;
extern char*s623_269141588A;
extern char*s102_1043946153A;
extern char*s108_1515266530A;
extern char*s112_1065942137A;
extern char*s100_104977558A;
extern char*s121_1662662954A;
extern char*s397_401707956A;
extern char*s470_16902A;
extern char*s419_1878889060A;
extern char*s112_18131599A;
extern char*s550_1185594A;
extern char*s792_784300160A;
extern char*s112_355630820A;
extern char*s33_243411981A;
extern char*s33_1419919903A;
extern char*s100_2102385657A;
extern char*s400_211605167A;
extern char*s100_762747069A;
extern char*s108_466551816A;
extern char*s108_2009849A;
extern char*s112_1743948446A;
extern char*s621_16927A;
extern char*s794_1682659883A;
extern char*s792_1007239A;
extern char*s100_2028592127A;
extern char*s95_1838187926A;
extern char*s470_1163823042A;
extern char*s34_16942A;
extern char*s733_989731302A;
extern char*s394_897982986A;
extern char*s107_1783880762A;
extern char*s34_10049231A;
extern char*s616_206419907A;
extern char*s792_931143030A;
extern char*s611_810433A;
extern char*s277_1973946666A;
extern char*s100_1062177790A;
extern char*s980_1994165009A;
extern char*s599_46733806A;
extern char*s277_1838870713A;
extern char*s616_1008067448A;
extern char*s107_485115581A;
extern char*s466_2101296982A;
extern char*s792_90782A;
extern char*s980_1508488213A;
extern char*s616_20481355A;
extern char*s629_90792A;
extern char*s34_78490A;
extern char*s35_78495A;
extern char*s108_146157A;
extern char*s621_1428771266A;
extern char*s339_931579788A;
extern char*s980_1942675017A;
extern char*s622_252669317A;
extern char*s33_41849945A;
extern char*s121_27561173A;
extern char*s112_1533928773A;
extern char*s797_2007377394A;
extern char*s101_1658160521A;
extern char*s622_933501A;
extern char*s471_1136691048A;
extern char*s112_1170250908A;
extern char*s368_35157672A;
extern char*s100_1436398529A;
extern char*s33_447584A;
extern char*s100_1414519430A;
extern char*s112_1404148845A;
extern char*s112_958964069A;
extern char*s625_90405963A;
extern char*s478_439056951A;
extern char*s345_767649523A;
extern char*s33_1554777A;
extern char*s17_1216703285A;
extern char*s450_22861847A;
extern char*s112_530940601A;
extern char*s112_724500276A;
extern char*s474_1723490337A;
extern char*s112_2109816196A;
extern char*s33_591417242A;
extern char*s622_10895A;
extern char*s100_2096474678A;
extern char*s980_1439959996A;
extern char*s363_1094507536A;
extern char*s622_10430693A;
extern char*s107_445497083A;
extern char*s792_176986A;
extern char*s112_997623147A;
extern char*s599_1623721137A;
extern char*s112_2055072316A;
extern char*s108_631091213A;
extern char*s33_1735712398A;
extern char*s792_73472312A;
extern char*s95_625881326A;
extern char*s34_78591A;
extern char*s616_379993A;
extern char*s400_163270777A;
extern char*s371_561523426A;
extern char*s401_1490189105A;
extern char*s336_1060258809A;
extern char*s274_2108992007A;
extern char*s33_1192911276A;
extern char*s100_631447998A;
extern char*s34_10990481A;
extern char*s622_1514442508A;
extern char*s100_1632732392A;
extern char*s33_167970159A;
extern char*s112_1253959973A;
extern char*s565_565060278A;
extern char*s622_78629A;
extern char*s107_1605895597A;
extern char*s102_126291003A;
extern char*s274_1658492806A;
extern char*s33_48856070A;
extern char*s33_1622700141A;
extern char*s599_1694771411A;
extern char*s112_78646A;
extern char*s280_722230651A;
extern char*s599_404651A;
extern char*s614_8087250A;
extern char*s616_119389596A;
extern char*s100_1453916708A;
extern char*s100_844703215A;
extern char*s112_2237652A;
extern char*s30_1364794873A;
extern char*s401_1256137461A;
extern char*s635_1465905014A;
extern char*s102_618869258A;
extern char*s29_1852009437A;
extern char*s101_174945438A;
extern char*s35_1777434714A;
extern char*s100_501268295A;
extern char*s616_380065A;
extern char*s598_605650769A;
extern char*s107_313299890A;
extern char*s100_1950357785A;
extern char*s100_2077708091A;
extern char*s664_1760457965A;
extern char*s112_850522083A;
extern char*s108_447734A;
extern char*s112_824324978A;
extern char*s350_793028699A;
extern char*s405_2007408328A;
extern char*s34_17176A;
extern char*s397_1090404950A;
extern char*s329_1492212881A;
extern char*s683_78239462A;
extern char*s100_2141291014A;
extern char*s635_1548937422A;
extern char*s121_210141519A;
extern char*s34_2065491A;
extern char*s112_27063164A;
extern char*s623_1719326284A;
extern char*s121_349372A;
extern char*s112_106460275A;
extern char*s33_84881A;
extern char*s34_17221A;
extern char*s112_1917882A;
extern char*s394_1424594977A;
extern char*s794_576790349A;
extern char*s108_129391217A;
extern char*s33_2038667775A;
extern char*s732_1762204931A;
extern char*s792_1497878015A;
extern char*s778_1854402277A;
extern char*s100_2127445170A;
extern char*s33_50246319A;
extern char*s274_926093361A;
extern char*s616_1898591066A;
extern char*s112_545118879A;
extern char*s616_380168A;
extern char*s100_23410A;
extern char*s112_508495830A;
extern char*s792_77562923A;
extern char*s452_1790874766A;
extern char*s363_7238542A;
extern char*s100_469031018A;
extern char*s621_453998A;
extern char*s622_1671077900A;
extern char*s616_1952787551A;
extern char*s792_1739163321A;
extern char*s33_447851A;
extern char*s277_689575137A;
extern char*s476_29585A;
extern char*s566_100561530A;
extern char*s33_2098363273A;
extern char*s107_1004555549A;
extern char*s33_349117293A;
extern char*s30_1812938425A;
extern char*s101_1861857328A;
extern char*s115_1816788953A;
extern char*s635_1541882313A;
extern char*s100_928941315A;
extern char*s107_1836299930A;
extern char*s121_195766720A;
extern char*s100_1680421289A;
extern char*s400_165614527A;
extern char*s33_84969A;
extern char*s599_2142146116A;
extern char*s616_380218A;
extern char*s400_1057872442A;
extern char*s622_204519611A;
extern char*s980_838816886A;
extern char*s115_1998329594A;
extern char*s100_75828399A;
extern char*s112_701821825A;
extern char*s100_1204389280A;
extern char*s432_1628100917A;
extern char*s101_1578831409A;
extern char*s100_1307652273A;
extern char*s100_1690004585A;
extern char*s792_486352305A;
extern char*s419_1627141371A;
extern char*s35_914215870A;
extern char*s108_1588150185A;
extern char*s108_91157A;
extern char*s778_1932458562A;
extern char*s95_8198176A;
extern char*s622_60405A;
extern char*s452_1875641781A;
extern char*s792_1831440704A;
extern char*s401_29662A;
extern char*s732_1309017823A;
extern char*s33_1487451A;
extern char*s274_1453633985A;
extern char*s112_495363549A;
extern char*s621_1240206596A;
extern char*s100_1545228536A;
extern char*s394_277033810A;
extern char*s100_973007162A;
extern char*s108_561720547A;
extern char*s357_197895058A;
extern char*s107_1889118664A;
extern char*s599_1387812168A;
extern char*s379_668815628A;
extern char*s100_2108887750A;
extern char*s33_240810599A;
extern char*s112_2022630A;
extern char*s110_11253A;
extern char*s33_240810604A;
extern char*s616_2022635A;
extern char*s116_128358027A;
extern char*s34_392625A;
extern char*s599_4999725A;
extern char*s100_199494346A;
extern char*s599_706329A;
extern char*s790_1777096676A;
extern char*s622_525503499A;
extern char*s662_143852403A;
extern char*s635_831146693A;
extern char*s33_17422A;
extern char*s33_2054549840A;
extern char*s100_1912621670A;
extern char*s634_265537649A;
extern char*s616_380343A;
extern char*s662_167300030A;
extern char*s621_1384921237A;
extern char*s792_110557057A;
extern char*s100_922446006A;
extern char*s100_66884963A;
extern char*s112_1581747096A;
extern char*s100_134219969A;
extern char*s30_53561911A;
extern char*s112_471553120A;
extern char*s621_1374304640A;
extern char*s616_504830035A;
extern char*s378_128333478A;
extern char*s108_262628264A;
extern char*s616_1888091524A;
extern char*s470_1809088081A;
extern char*s622_114321512A;
extern char*s100_1701980726A;
extern char*s33_337331A;
extern char*s112_17480A;
extern char*s112_1938991062A;
extern char*s95_1056980719A;
extern char*s112_1680956616A;
extern char*s100_2060540980A;
extern char*s625_5313505A;
extern char*s35_17498A;
extern char*s121_1293738877A;
extern char*s33_1483884743A;
extern char*s565_985967445A;
extern char*s623_2102695A;
extern char*s112_17507A;
extern char*s635_139854341A;
extern char*s100_2176510A;
extern char*s100_552734069A;
extern char*s107_1556970935A;
extern char*s623_35966A;
extern char*s625_5313530A;
extern char*s623_1416678934A;
extern char*s379_492964813A;
extern char*s101_1538234998A;
extern char*s34_306165094A;
extern char*s107_921818688A;
extern char*s400_1505530135A;
extern char*s622_46980416A;
extern char*s792_1843146228A;
extern char*s115_870131842A;
extern char*s112_2072467813A;
extern char*s400_177461A;
extern char*s107_572614135A;
extern char*s280_867234734A;
extern char*s792_97510A;
extern char*s95_445214625A;
extern char*s274_929353692A;
extern char*s519_637371887A;
extern char*s112_1130602126A;
extern char*s599_558682149A;
extern char*s550_11429A;
extern char*s623_23692781A;
extern char*s107_170061979A;
extern char*s621_398948A;
extern char*s599_5284A;
extern char*s621_1231257120A;
extern char*s100_755120513A;
extern char*s510_890319497A;
extern char*s100_2087550139A;
extern char*s599_21632225A;
extern char*s792_775406525A;
extern char*s475_1370872538A;
extern char*s622_520373770A;
extern char*s35_10714216A;
extern char*s630_448205A;
extern char*s622_1836091144A;
extern char*s118_300594A;
extern char*s33_1740332382A;
extern char*s107_1379717706A;
extern char*s100_1606714210A;
extern char*s33_1644425991A;
extern char*s635_1677586033A;
extern char*s599_4434071A;
extern char*s616_4766225A;
extern char*s405_1119905623A;
extern char*s34_75797981A;
extern char*s621_49680837A;
extern char*s101_744085684A;
extern char*s112_1173628471A;
extern char*s558_146251545A;
extern char*s33_267647687A;
extern char*s471_380590A;
extern char*s397_988692517A;
extern char*s377_5382A;
extern char*s635_2025498932A;
extern char*s464_789350917A;
extern char*s100_96053257A;
extern char*s274_17696A;
extern char*s100_1066804080A;
extern char*s100_1062283098A;
extern char*s107_109671582A;
extern char*s284_1831619428A;
extern char*s327_1262756502A;
extern char*s112_444175272A;
extern char*s34_17715A;
extern char*s274_880804011A;
extern char*s625_300665A;
extern char*s101_2004339522A;
extern char*s336_1001314405A;
extern char*s280_92467250A;
extern char*s284_878860A;
extern char*s622_537910373A;
extern char*s100_112999293A;
extern char*s621_30034A;
extern char*s112_1968768303A;
extern char*s100_783329131A;
extern char*s599_180709512A;
extern char*s100_1984637890A;
extern char*s115_1605047378A;
extern char*s112_1435285930A;
extern char*s100_79251A;
extern char*s100_756929053A;
extern char*s100_142936234A;
extern char*s635_21306364A;
extern char*s112_738771309A;
extern char*s107_295542551A;
extern char*s599_386819A;
extern char*s367_22401251A;
extern char*s101_348041349A;
extern char*s112_401124480A;
extern char*s419_1837585965A;
extern char*s599_1642168697A;
extern char*s378_305790140A;
extern char*s599_242108838A;
extern char*s599_56760755A;
extern char*s599_60837A;
extern char*s599_1367040625A;
extern char*s33_1979951A;
extern char*s479_1965077754A;
extern char*s112_471707221A;
extern char*s458_1809998749A;
extern char*s110_17794A;
extern char*s33_386854A;
extern char*s112_1844536619A;
extern char*s598_1151663379A;
extern char*s100_776600004A;
extern char*s790_1126647264A;
extern char*s376_2014931627A;
extern char*s100_150329797A;
extern char*s112_802495724A;
extern char*s121_1723571071A;
extern char*s112_719604853A;
extern char*s110_39617954A;
extern char*s108_25704393A;
extern char*s560_5515A;
extern char*s100_397329363A;
extern char*s112_1881374985A;
extern char*s622_134878499A;
extern char*s112_713312393A;
extern char*s100_676769302A;
extern char*s33_79341A;
extern char*s599_882065083A;
extern char*s112_862271166A;
extern char*s284_60894A;
extern char*s33_48672249A;
extern char*s112_23988287A;
extern char*s112_1682814572A;
extern char*s33_572288431A;
extern char*s107_1019367716A;
extern char*s33_572288437A;
extern char*s621_189437896A;
extern char*s400_530141799A;
extern char*s599_560761477A;
extern char*s100_202933204A;
extern char*s33_572288454A;
extern char*s112_1672511676A;
extern char*s100_120546715A;
extern char*s107_479236135A;
extern char*s598_5580A;
extern char*s107_1865554673A;
extern char*s100_922212712A;
extern char*s107_1162901343A;
extern char*s599_674382779A;
extern char*s107_1546692995A;
extern char*s476_1411247976A;
extern char*s112_4692662A;
extern char*s616_312808564A;
extern char*s112_1994596535A;
extern char*s628_17916A;
extern char*s107_5615A;
extern char*s112_4631170A;
extern char*s112_1413407004A;
extern char*s33_1680926299A;
extern char*s34_436196A;
extern char*s476_1142240176A;
extern char*s778_602797481A;
extern char*s108_120239233A;
extern char*s792_28263330A;
extern char*s33_506823435A;
extern char*s35_10554609A;
extern char*s274_816126476A;
extern char*s100_1869854287A;
extern char*s100_2009918711A;
extern char*s686_861846863A;
extern char*s33_39002989A;
extern char*s533_456083848A;
extern char*s29_85614A;
extern char*s616_521905705A;
extern char*s792_291421585A;
extern char*s112_1586354711A;
extern char*s452_865125357A;
extern char*s100_971408488A;
extern char*s107_866669263A;
extern char*s470_1961687A;
extern char*s117_51895507A;
extern char*s121_1635864124A;
extern char*s792_1815688614A;
extern char*s100_210812758A;
extern char*s394_1250079569A;
extern char*s635_1722095007A;
extern char*s419_1333985363A;
extern char*s112_2041682A;
extern char*s345_786054293A;
extern char*s599_988243818A;
extern char*s33_1937220099A;
extern char*s599_5720A;
extern char*s622_829308144A;
extern char*s792_598811726A;
extern char*s736_1613492996A;
extern char*s100_18036A;
extern char*s33_247239028A;
extern char*s623_1942608409A;
extern char*s621_41125176A;
extern char*s793_1506490209A;
extern char*s614_1406782500A;
extern char*s792_69352117A;
extern char*s29_425790270A;
extern char*s112_2103819988A;
extern char*s397_1816888147A;
extern char*s100_1694969179A;
extern char*s112_1836282258A;
extern char*s614_1188262106A;
extern char*s100_825716016A;
extern char*s33_1549680A;
extern char*s790_130382376A;
extern char*s469_1848584263A;
extern char*s336_1642968637A;
extern char*s792_1040644265A;
extern char*s112_1042003640A;
extern char*s367_5787A;
extern char*s34_18090A;
extern char*s450_114137597A;
extern char*s623_946895A;
extern char*s394_1721307786A;
extern char*s33_1549697A;
extern char*s112_1352413868A;
extern char*s595_11952A;
extern char*s33_1549703A;
extern char*s107_98784712A;
extern char*s273_1968202785A;
extern char*s33_18110A;
extern char*s112_1063704391A;
extern char*s599_1566831588A;
extern char*s112_1339521386A;
extern char*s274_374877A;
extern char*s792_2021999449A;
extern char*s635_1849347035A;
extern char*s112_1460025642A;
extern char*s792_484169497A;
extern char*s476_14429929A;
extern char*s121_809686569A;
extern char*s616_6575105A;
extern char*s110_18144A;
extern char*s100_18150A;
extern char*s115_290966604A;
extern char*s623_2122389958A;
extern char*s112_1624663341A;
extern char*s100_1320619413A;
extern char*s100_442256615A;
extern char*s614_112304676A;
extern char*s453_2015374870A;
extern char*s599_472574902A;
extern char*s274_1325140408A;
extern char*s792_171955A;
extern char*s35_267875778A;
extern char*s471_18186A;
extern char*s792_1985327250A;
extern char*s792_1196941282A;
extern char*s33_1176378494A;
extern char*s550_1096544670A;
extern char*s121_203714719A;
extern char*s33_55924644A;
extern char*s790_2097247A;
extern char*s119_2120987577A;
extern char*s394_5912A;
extern char*s280_1153312264A;
extern char*s112_163413385A;
extern char*s792_1800342110A;
extern char*s599_1992825354A;
extern char*s622_854330615A;
extern char*s980_1067567332A;
extern char*s33_1673348567A;
extern char*s107_5873980A;
extern char*s630_399591A;
extern char*s95_1539816514A;
extern char*s121_44975894A;
extern char*s34_56927287A;
extern char*s622_1709245815A;
extern char*s622_4680700A;
extern char*s100_518055462A;
extern char*s476_84293096A;
extern char*s33_1831158645A;
extern char*s100_732257893A;
extern char*s616_352968782A;
extern char*s112_49152444A;
extern char*s368_18257A;
extern char*s401_902517583A;
extern char*s633_496139469A;
extern char*s284_927785894A;
extern char*s329_673829558A;
extern char*s357_1664909434A;
extern char*s452_529299514A;
extern char*s100_1387339410A;
extern char*s100_445504446A;
extern char*s107_1242126608A;
extern char*s35_10714862A;
extern char*s108_1494914262A;
extern char*s452_827998241A;
extern char*s422_983618541A;
extern char*s621_1869700848A;
extern char*s107_1568923104A;
extern char*s110_448859A;
extern char*s33_1553736287A;
extern char*s792_744114A;
extern char*s100_1575461624A;
extern char*s100_1181926797A;
extern char*s623_531809155A;
extern char*s112_8359055A;
extern char*s100_1978106088A;
extern char*s33_9712276A;
extern char*s621_172080A;
extern char*s625_705408837A;
extern char*s34_1168210079A;
extern char*s622_42916A;
extern char*s29_24284008A;
extern char*s621_249330648A;
extern char*s280_1145998825A;
extern char*s622_842552A;
extern char*s112_431043495A;
extern char*s112_490486762A;
extern char*s100_727903062A;
extern char*s108_165012750A;
extern char*s108_2075119688A;
extern char*s418_306215109A;
extern char*s112_1377208779A;
extern char*s622_153655A;
extern char*s107_212031001A;
extern char*s100_12184A;
extern char*s106_1152235958A;
extern char*s112_1160736641A;
extern char*s112_12188A;
extern char*s112_113036818A;
extern char*s112_12201A;
extern char*s100_34383990A;
extern char*s101_35386613A;
extern char*s447_498169402A;
extern char*s100_1593742473A;
extern char*s115_740900172A;
extern char*s100_2018315248A;
extern char*s112_1009317511A;
extern char*s100_124311631A;
extern char*s519_1359629264A;
extern char*s422_1920465143A;
extern char*s680_8777401A;
extern char*s112_1838958244A;
extern char*s29_1394769930A;
extern char*s100_1962710217A;
extern char*s792_365929075A;
extern char*s794_958639438A;
extern char*s792_680177517A;
extern char*s621_1328320695A;
extern char*s108_5578901A;
extern char*s329_176865800A;
extern char*s614_7227375A;
extern char*s100_431394186A;
extern char*s599_9589368A;
extern char*s35_388005040A;
extern char*s108_1319327951A;
extern char*s635_374042271A;
extern char*s107_3579844A;
extern char*s34_1747646688A;
extern char*s566_51582255A;
extern char*s121_141444A;
extern char*s101_432335312A;
extern char*s792_1265395998A;
extern char*s614_40430500A;
extern char*s274_1598804806A;
extern char*s102_356743A;
extern char*s112_209121A;
extern char*s100_1615234134A;
extern char*s599_338723264A;
extern char*s452_1573210512A;
extern char*s112_1790869799A;
extern char*s599_3912034A;
extern char*s659_1257368965A;
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
#define FSOC_SIZE 8192
#define RSOC_SIZE 32768
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
   This file (SmartEiffel/sys/runtime/gc_lib.h) is automatically included
   when the Garbage Collector is used (default, unless option -no_gc has
   been selected).
*/

#define SE_GC_LIB 1

#define SE_GC_LOW_MEMORY_STRATEGY 0
#define SE_GC_HIGH_MEMORY_STRATEGY 1
#define SE_GC_DEFAULT_MEMORY_STRATEGY 2
extern int se_gc_strategy;


#define RSOH_UNMARKED 15253
#define RSOH_FREE 1
#define RSOH_MARKED 2


#define FSOH_UNMARKED ((void *) 1)
#define FSOH_MARKED   ((void *) 2)

/* To codify the state and the type of some Memory Chunk, we are
   using the following definitions :
*/
#define FSO_FREE_CHUNK  (-2)
#define RSO_FREE_CHUNK  (-1)
#define RSO_USED_CHUNK  ( 0)
#define FSO_STORE_CHUNK ( 1)
#define FSO_USED_CHUNK  ( 2)
#define FREE_CHUNK(x) ((x)<0)

/* Minimum size for a store area in a ReSizable Objects Chunk :
 */
#define RSOC_MIN_STORE 512

/* The default channel used to print -gc_info flag information :
*/
#define SE_GCINFO SE_ERR

extern int collector_counter; /* MEMORY.collector_counter */

typedef struct s_mch mch; /* Memory Chunk Header. */
typedef struct s_fsoc fsoc; /* Fixed Size Objects Chunk. */
typedef union u_rsoh rsoh; /* ReSizable Object Header. */
typedef struct s_fll_rsoh fll_rsoh;
typedef struct s_rsoc rsoc; /* ReSizable Objects Chunk. */
typedef struct s_na_env na_env; /* Native Array ENVironment. */


struct s_mch{
  unsigned int size; /* In number of bytes (actual argument of malloc).*/
  int state_type; /* One value in : RSO_USED_CHUNK,
                     FREE_CHUNK, FSO_STORE_CHUNK, FSO_USED_CHUNK */
  void(*amfp)(mch*,void*); /* Align Mark Function Pointer. */
  void(*swfp)(mch*); /* SWeep Function Pointer. */
};

struct s_fsoc{
  mch header; /* Common header for fsoc and rsoc. */
  fsoc* next; /* The next one when in free list (fsocfl). */
  int count_minus_one;
  double first_object;
};

typedef struct _rso_header rso_header;

struct _rso_header{
    unsigned int size;
    int magic_flag;     /* RSOH_MARKED when used,
			   RSOH_FREE when free,
			   else RSOH_UNMARKED */
};

typedef union u_fso_header fso_header;

union u_fso_header{
  void* flag;
  void* next;/* accurately typed as gcXX* in actual fso headers */
};

union u_rsoh{
  rso_header header;
  double padding;
};

struct s_fll_rsoh {
  rso_header rsoh_field;
  fll_rsoh* nextflol;
};

struct s_rsoc{
  mch header; /* Common header for fsoc and rsoc. */
  unsigned int isize; /* Initial size (at malloc time) to detect split chunks. */
  rsoc* next; /* Next one when in free list (rsocfl) or in na_env->chunk_list. */
  fll_rsoh*free_list_of_large; /* Intra. free list. */
  na_env*nae;
  rsoh first_header;
};

struct s_na_env{
  unsigned int store_left;
  rsoh* store;
  rsoc*store_chunk;
  rsoc*chunk_list; /*List of chunks of that type that have a non-null free_list_of_large*/
  void (*gc_mark)(T0*);
  int space_used;
};

extern void**stack_bottom;
extern mch**gcmt;
extern int gcmt_max;
extern int gcmt_used;
extern int gc_is_off;
extern fsoc* fsocfl;
extern unsigned int fsoc_count;
extern unsigned int rsoc_count;
extern void*gcmt_tail_addr;

void gc_sweep(void);
void gc_mark(void* p);
mch* gc_find_chunk(void* p);
int gc_stack_size(void);
int garbage_delayed(void);
void gc_update_ceils(void);
char*new_na(na_env*nae,unsigned int size);
unsigned int fsocfl_count(void);
unsigned int rsocfl_count(void);
void gc_dispose_before_exit(void);
void mark_stack_and_registers (void);
fsoc* gc_fsoc_get1(void);
fsoc* gc_fsoc_get2(void);

int gc_memory_used(void);
/*The generic se_agent0 definition:*/
struct _se_agent0{
Tid id;
Tid creation_mold_id;
void(*afp)(se_agent*);
void(*gc_mark_agent_mold)(se_agent*);
int(*eq)(se_agent*,se_agent*);
};
extern unsigned int fsoc_count_ceil;
extern unsigned int rsoc_count_ceil;
/*INTEGER_32*/T6 r2in_range(T2 C,T2 a1,T2 a2);
/*INTEGER_32*/T2 r2max(T2 C,T2 a1);
/*INTEGER_32*/T6 r2is_even(T2 C);
/*INTEGER_32*/T2 r2min(T2 C,T2 a1);
/*INTEGER_32*/T2 r2_ix_9292(T2 C,T2 a1);
/*INTEGER_32*/T0* r2to_string(T2 C);
/*INTEGER_32*/T2 r2_ix_4747(T2 C,T2 a1);
/*INTEGER_32*/T3 r2hexadecimal_digit(T2 C);
/*INTEGER_32*/T6 r2is_odd(T2 C);
/*INTEGER_32*/T6 r2bit_test(T2 C,T1 a1);
/*INTEGER_32*/void r2append_in(T2 C,T0* a1);
/*INTEGER_32*/T3 r2decimal_digit(T2 C);
extern T0*oBC81string_buffer;
extern int fBC81string_buffer;
/*INTEGER_32*/T0* r2string_buffer(void);
/*INTEGER_32*/void r2to_hexadecimal_in(T2 C,T0* a1);
/*INTEGER_8*/T1 r1min(T1 C,T1 a1);
/*INTEGER_8*/void r1to_octal_in(T1 C,T0* a1);
/*INTEGER_8*/T3 r1hexadecimal_digit(T1 C);
/*INTEGER_8*/T3 r1decimal_digit(T1 C);
/*CHARACTER*/T3 r3to_upper(T3 C);
/*CHARACTER*/T6 r3is_digit(T3 C);
/*CHARACTER*/T6 r3in_range(T3 C,T3 a1,T3 a2);
/*CHARACTER*/T1 r3value(T3 C);
/*CHARACTER*/T6 r3is_separator(T3 C);
/*CHARACTER*/T6 r3is_lower(T3 C);
/*CHARACTER*/T1 r3decimal_value(T3 C);
/*CHARACTER*/T1 r3hexadecimal_value(T3 C);
/*CHARACTER*/T3 r3to_lower(T3 C);
/*CHARACTER*/T6 r3is_hexadecimal_digit(T3 C);
/*CHARACTER*/T6 r3_ix_60(T3 C,T3 a1);
/*CHARACTER*/T6 r3same_as(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_letter(T3 C);
/*CHARACTER*/T6 r3_ix_6061(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_upper(T3 C);
/*CHARACTER*/T6 r3_ix_6261(T3 C,T3 a1);
/*BOOLEAN*/T6 r6_ix_and(T6 C,T6 a1);
/*BOOLEAN*/T6 r6_ix_or(T6 C,T6 a1);
/*INTEGER_16*/T6 r10in_range(T10 C,T10 a1,T10 a2);
/*INTEGER_16*/T10 r10max(T10 C,T10 a1);
/*INTEGER_16*/T10 r10min(T10 C,T10 a1);
/*INTEGER_16*/T2 r10to_integer_32(T10 C);
/*INTEGER_16*/void r10append_in(T10 C,T0* a1);
/*INTEGER_16*/T3 r10decimal_digit(T10 C);
/*REAL_64*/void r5append_in_format(T5 C,T0* a1,T2 a2);
extern T9 oBC302sprintf_buffer;
/*INTEGER_64*/T6 r11in_range(T11 C,T11 a1,T11 a2);
/*INTEGER_64*/T6 r11fit_integer_8(T11 C);
/*INTEGER_64*/T0* r11to_number(T11 C);
/*INTEGER_64*/T2 r11high_32(T11 C);
/*INTEGER_64*/T11 r11_ix_9292(T11 C,T11 a1);
/*INTEGER_64*/T6 r11fit_integer_32(T11 C);
/*INTEGER_64*/T6 r11fit_integer_16(T11 C);
/*INTEGER_64*/T0* r11to_string(T11 C);
/*INTEGER_64*/T11 r11_ix_4747(T11 C,T11 a1);
/*INTEGER_64*/T6 r11is_odd(T11 C);
/*INTEGER_64*/void r11append_in(T11 C,T0* a1);
/*INTEGER_64*/T3 r11decimal_digit(T11 C);
/*INTEGER_64*/T11 r11_ix_94(T11 C,T11 a1);
/*INTEGER_64*/T0* r11string_buffer(void);
/*POINTER*/T8 r8_ix_43(T8 C,T2 a1);
/*POINTER*/T2 r8hash_code(T8 C);
/*POINTER*/void r8append_in(T8 C,T0* a1);
extern T0*oBC8string_buffer;
extern int fBC8string_buffer;
/*POINTER*/T0* r8string_buffer(void);
/*NATURAL_64*/T6 r16fit_natural_32(uint64_t C);
/*NATURAL_64*/T6 r16fit_natural_16(uint64_t C);
/*NATURAL_64*/T6 r16fit_natural_8(uint64_t C);
/*NATURAL_64*/void r16append_in(uint64_t C,T0* a1);
/*NATURAL_64*/T3 r16decimal_digit(uint64_t C);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_reverse_index_of(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T9 r9realloc(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_index_of(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_has(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_from(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9move(T9 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear_all(T9 C,T2 a1);
/*NATIVE_ARRAY[CHARACTER]*/void r9set_all_with(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_memcmp(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_slice_from(T9 C,T9 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9slice_fast_occurrences(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/T1033 r1033realloc(T1033 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r1033fast_index_of(T1033 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/void r1033copy_from(T1033 C,T1033 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T6 r1033safe_equal(T0* a1,T0* a2);
/*NATIVE_ARRAY[STRING]*/void r1033clear(T1033 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1033clear_all(T1033 C,T2 a1);
/*NATIVE_ARRAY[STRING]*/void r1033remove(T1033 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1033set_all_with(T1033 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r1033first_index_of(T1033 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1033copy_slice_from(T1033 C,T1033 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r1048clear_all(T1048 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/T1053 r1053realloc(T1053 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1053copy_from(T1053 C,T1053 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1053clear(T1053 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1053clear_all(T1053 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1053copy_slice_from(T1053 C,T1053 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_TEXT]*/T1057 r1057realloc(T1057 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1057copy_from(T1057 C,T1057 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1057clear(T1057 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1057clear_all(T1057 C,T2 a1);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1057copy_slice_from(T1057 C,T1057 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_16]*/T1058 r1058realloc(T1058 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r1058copy_from(T1058 C,T1058 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r1058clear_all(T1058 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_16]*/void r1058copy_slice_from(T1058 C,T1058 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLUSTER]*/T1062 r1062realloc(T1062 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r1062copy_from(T1062 C,T1062 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r1062clear_all(T1062 C,T2 a1);
/*NATIVE_ARRAY[CLUSTER]*/void r1062copy_slice_from(T1062 C,T1062 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r1086clear_all(T1086 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/T1087 r1087realloc(T1087 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1087copy_from(T1087 C,T1087 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1087clear_all(T1087 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1087copy_slice_from(T1087 C,T1087 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/T1088 r1088realloc(T1088 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/T2 r1088fast_index_of(T1088 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1088copy_from(T1088 C,T1088 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1088clear(T1088 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1088clear_all(T1088 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1088copy_slice_from(T1088 C,T1088 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r1102clear_all(T1102 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r1105clear_all(T1105 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/T1107 r1107realloc(T1107 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/T2 r1107fast_index_of(T1107 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107copy_from(T1107 C,T1107 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107move(T1107 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107clear(T1107 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107clear_all(T1107 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107remove(T1107 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107set_all_with(T1107 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1107copy_slice_from(T1107 C,T1107 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE_MARK]*/T1137 r1137realloc(T1137 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1137copy_from(T1137 C,T1137 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1137clear(T1137 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1137clear_all(T1137 C,T2 a1);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1137set_all_with(T1137 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1137copy_slice_from(T1137 C,T1137 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r1140clear_all(T1140 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1157clear_all(T1157 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1160clear_all(T1160 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[HASHED_STRING]]*/void r1161clear_all(T1161 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1171clear_all(T1171 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/T1172 r1172realloc(T1172 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1172copy_from(T1172 C,T1172 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1172clear(T1172 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1172clear_all(T1172 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/void r1172copy_slice_from(T1172 C,T1172 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1178clear_all(T1178 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/T1181 r1181realloc(T1181 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/T2 r1181fast_index_of(T1181 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1181copy_from(T1181 C,T1181 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1181clear(T1181 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1181clear_all(T1181 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1181remove(T1181 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1181copy_slice_from(T1181 C,T1181 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1184clear_all(T1184 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/T1185 r1185realloc(T1185 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1185copy_from(T1185 C,T1185 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1185clear(T1185 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1185clear_all(T1185 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1185copy_slice_from(T1185 C,T1185 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASSES]*/T1188 r1188realloc(T1188 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1188copy_from(T1188 C,T1188 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1188clear(T1188 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1188clear_all(T1188 C,T2 a1);
/*NATIVE_ARRAY[CLASSES]*/void r1188copy_slice_from(T1188 C,T1188 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1198clear_all(T1198 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1201clear_all(T1201 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[CLASS_NAME]]*/void r1202clear_all(T1202 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1207clear_all(T1207 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/T1209 r1209realloc(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1209copy_from(T1209 C,T1209 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1209clear(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1209clear_all(T1209 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1209copy_slice_from(T1209 C,T1209 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/T1213 r1213realloc(T1213 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/T2 r1213fast_index_of(T1213 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1213copy_from(T1213 C,T1213 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1213clear(T1213 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1213clear_all(T1213 C,T2 a1);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1213remove(T1213 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1213copy_slice_from(T1213 C,T1213 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPRESSION]*/T1214 r1214realloc(T1214 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1214copy_from(T1214 C,T1214 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1214clear(T1214 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1214clear_all(T1214 C,T2 a1);
/*NATIVE_ARRAY[EXPRESSION]*/void r1214copy_slice_from(T1214 C,T1214 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TMP_FEATURE]*/T1215 r1215realloc(T1215 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1215copy_from(T1215 C,T1215 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1215clear(T1215 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1215clear_all(T1215 C,T2 a1);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1215copy_slice_from(T1215 C,T1215 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/T1216 r1216realloc(T1216 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1216copy_from(T1216 C,T1216 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1216clear_all(T1216 C,T2 a1);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1216set_all_with(T1216 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1216copy_slice_from(T1216 C,T1216 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1217clear_all(T1217 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1217set_all_with(T1217 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/T1218 r1218realloc(T1218 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1218copy_from(T1218 C,T1218 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1218clear_all(T1218 C,T2 a1);
/*NATIVE_ARRAY[DECLARATION]*/void r1218set_all_with(T1218 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1218copy_slice_from(T1218 C,T1218 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ASSERTION]*/T1220 r1220realloc(T1220 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1220copy_from(T1220 C,T1220 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1220clear(T1220 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1220clear_all(T1220 C,T2 a1);
/*NATIVE_ARRAY[ASSERTION]*/void r1220copy_slice_from(T1220 C,T1220 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_NAME1]*/T1221 r1221realloc(T1221 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1221copy_from(T1221 C,T1221 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1221clear_all(T1221 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1221set_all_with(T1221 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1221copy_slice_from(T1221 C,T1221 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[MANIFEST_STRING]*/T1222 r1222realloc(T1222 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1222copy_from(T1222 C,T1222 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1222clear(T1222 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1222clear_all(T1222 C,T2 a1);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1222copy_slice_from(T1222 C,T1222 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/T1224 r1224realloc(T1224 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1224copy_from(T1224 C,T1224 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1224clear(T1224 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1224clear_all(T1224 C,T2 a1);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1224remove(T1224 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1224copy_slice_from(T1224 C,T1224 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPORT_ITEM]*/T1232 r1232realloc(T1232 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1232copy_from(T1232 C,T1232 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1232clear_all(T1232 C,T2 a1);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1232set_all_with(T1232 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1232copy_slice_from(T1232 C,T1232 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[LIVE_TYPE]]*/void r1233clear_all(T1233 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T1236 r1236realloc(T1236 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T2 r1236fast_index_of(T1236 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1236copy_from(T1236 C,T1236 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1236clear(T1236 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1236clear_all(T1236 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1236copy_slice_from(T1236 C,T1236 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1239clear_all(T1239 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/T1242 r1242realloc(T1242 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/T2 r1242fast_index_of(T1242 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE]*/void r1242copy_from(T1242 C,T1242 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1242clear(T1242 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1242clear_all(T1242 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/void r1242remove(T1242 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1242set_all_with(T1242 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1242copy_slice_from(T1242 C,T1242 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/T1243 r1243realloc(T1243 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/T2 r1243fast_index_of(T1243 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1243copy_from(T1243 C,T1243 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1243clear(T1243 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1243clear_all(T1243 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1243copy_slice_from(T1243 C,T1243 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T1244 r1244realloc(T1244 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T2 r1244fast_index_of(T1244 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1244copy_from(T1244 C,T1244 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1244clear(T1244 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1244clear_all(T1244 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1244copy_slice_from(T1244 C,T1244 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1245clear_all(T1245 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1252clear_all(T1252 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1254clear_all(T1254 C,T2 a1);
/*NATIVE_ARRAY[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1261clear_all(T1261 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1267clear_all(T1267 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T1268 r1268realloc(T1268 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T2 r1268fast_index_of(T1268 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1268copy_from(T1268 C,T1268 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1268clear(T1268 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1268clear_all(T1268 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1268set_all_with(T1268 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1268copy_slice_from(T1268 C,T1268 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/T1269 r1269realloc(T1269 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1269copy_from(T1269 C,T1269 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1269clear(T1269 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1269clear_all(T1269 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1269copy_slice_from(T1269 C,T1269 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CODE]*/T1270 r1270realloc(T1270 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1270copy_from(T1270 C,T1270 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1270clear(T1270 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1270clear_all(T1270 C,T2 a1);
/*NATIVE_ARRAY[CODE]*/void r1270copy_slice_from(T1270 C,T1270 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1273clear_all(T1273 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[TYPE]]*/void r1275clear_all(T1275 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1280clear_all(T1280 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[STRING]]*/void r1281clear_all(T1281 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1286clear_all(T1286 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1287clear_all(T1287 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T1290 r1290realloc(T1290 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1290fast_index_of(T1290 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1290copy_from(T1290 C,T1290 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1290clear(T1290 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1290clear_all(T1290 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1290copy_slice_from(T1290 C,T1290 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1293clear_all(T1293 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[AGENT_ARGS]]*/void r1294clear_all(T1294 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1298clear_all(T1298 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/T1300 r1300realloc(T1300 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1300copy_from(T1300 C,T1300 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1300clear(T1300 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1300clear_all(T1300 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1300copy_slice_from(T1300 C,T1300 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1301clear_all(T1301 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T1304 r1304realloc(T1304 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1304copy_from(T1304 C,T1304 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1304clear(T1304 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1304clear_all(T1304 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1304copy_slice_from(T1304 C,T1304 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1307clear_all(T1307 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1308clear_all(T1308 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1313clear_all(T1313 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1316clear_all(T1316 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1317clear_all(T1317 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1317set_all_with(T1317 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_8]*/void r1318clear_all(T1318 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_8]*/void r1318set_all_with(T1318 C,T1 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1321clear_all(T1321 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/T1322 r1322realloc(T1322 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1322copy_from(T1322 C,T1322 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1322clear(T1322 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1322clear_all(T1322 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1322set_all_with(T1322 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1322copy_slice_from(T1322 C,T1322 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CECIL_ENTRY]*/T1323 r1323realloc(T1323 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1323copy_from(T1323 C,T1323 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1323clear(T1323 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1323clear_all(T1323 C,T2 a1);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1323copy_slice_from(T1323 C,T1323 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[SE_CONFIG]*/T1325 r1325realloc(T1325 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1325copy_from(T1325 C,T1325 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1325set_slice_with(T1325 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1325clear_all(T1325 C,T2 a1);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1325set_all_with(T1325 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1325copy_slice_from(T1325 C,T1325 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1327clear_all(T1327 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/T1329 r1329realloc(T1329 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1329copy_from(T1329 C,T1329 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1329clear_all(T1329 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1329copy_slice_from(T1329 C,T1329 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T1331 r1331realloc(T1331 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1331copy_from(T1331 C,T1331 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1331clear(T1331 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1331clear_all(T1331 C,T2 a1);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1331copy_slice_from(T1331 C,T1331 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PROCEDURE[TUPLE]]*/void r1332set_slice_with(T1332 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PROCEDURE[TUPLE]]*/void r1332clear_all(T1332 C,T2 a1);
/*NATIVE_ARRAY[PROCEDURE[TUPLE]]*/void r1332set_all_with(T1332 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1333clear_all(T1333 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1340clear_all(T1340 C,T2 a1);
/*NATIVE_ARRAY[TEXT_FILE_READ]*/void r1342clear_all(T1342 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1345clear_all(T1345 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1346clear_all(T1346 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/T1349 r1349realloc(T1349 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1349copy_from(T1349 C,T1349 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1349clear_all(T1349 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1349set_all_with(T1349 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1349copy_slice_from(T1349 C,T1349 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1352clear_all(T1352 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1355clear_all(T1355 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/T1357 r1357realloc(T1357 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1357copy_from(T1357 C,T1357 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1357clear(T1357 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1357clear_all(T1357 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1357copy_slice_from(T1357 C,T1357 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[IFTHEN]*/T1358 r1358realloc(T1358 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1358copy_from(T1358 C,T1358 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1358clear(T1358 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1358clear_all(T1358 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1358remove(T1358 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1358remove_first(T1358 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1358copy_slice_from(T1358 C,T1358 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_ITEM]*/T1359 r1359realloc(T1359 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1359copy_from(T1359 C,T1359 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1359clear(T1359 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1359clear_all(T1359 C,T2 a1);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1359copy_slice_from(T1359 C,T1359 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INSTRUCTION]*/T1360 r1360realloc(T1360 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1360copy_from(T1360 C,T1360 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1360clear(T1360 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1360clear_all(T1360 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1360remove_first(T1360 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1360copy_slice_from(T1360 C,T1360 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[OPEN_OPERAND]*/T1361 r1361realloc(T1361 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1361copy_from(T1361 C,T1361 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1361clear(T1361 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1361clear_all(T1361 C,T2 a1);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1361copy_slice_from(T1361 C,T1361 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/T1363 r1363realloc(T1363 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1363copy_from(T1363 C,T1363 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1363clear(T1363 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1363clear_all(T1363 C,T2 a1);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1363copy_slice_from(T1363 C,T1363 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1366clear_all(T1366 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/T1374 r1374realloc(T1374 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1374copy_from(T1374 C,T1374 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1374clear(T1374 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1374clear_all(T1374 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1374copy_slice_from(T1374 C,T1374 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/T1375 r1375realloc(T1375 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1375copy_from(T1375 C,T1375 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1375clear(T1375 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1375clear_all(T1375 C,T2 a1);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1375copy_slice_from(T1375 C,T1375 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/T1376 r1376realloc(T1376 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1376copy_from(T1376 C,T1376 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1376clear_all(T1376 C,T2 a1);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1376set_all_with(T1376 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1376copy_slice_from(T1376 C,T1376 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1377clear_all(T1377 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[GRAPH_NODE]]*/void r1380clear_all(T1380 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/T1386 r1386realloc(T1386 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1386copy_from(T1386 C,T1386 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1386clear(T1386 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1386clear_all(T1386 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1386copy_slice_from(T1386 C,T1386 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1389clear_all(T1389 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/T1390 r1390realloc(T1390 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1390copy_from(T1390 C,T1390 a1,T2 a2);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1390clear_all(T1390 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1390copy_slice_from(T1390 C,T1390 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1394clear_all(T1394 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1401clear_all(T1401 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1404clear_all(T1404 C,T2 a1);
/*NATIVE_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1406clear_all(T1406 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1420clear_all(T1420 C,T2 a1);
/*NATIVE_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1421clear_all(T1421 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1424clear_all(T1424 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/T1446 r1446realloc(T1446 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/T2 r1446fast_index_of(T1446 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1446copy_from(T1446 C,T1446 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1446clear(T1446 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1446clear_all(T1446 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1446copy_slice_from(T1446 C,T1446 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TUPLE[TYPE,TYPE],TYPE]]*/void r1456clear_all(T1456 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1459clear_all(T1459 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1461clear_all(T1461 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1466clear_all(T1466 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1469clear_all(T1469 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/T1473 r1473realloc(T1473 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1473copy_from(T1473 C,T1473 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1473clear(T1473 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1473clear_all(T1473 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1473copy_slice_from(T1473 C,T1473 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/T1474 r1474realloc(T1474 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1474copy_from(T1474 C,T1474 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1474clear(T1474 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1474clear_all(T1474 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1474copy_slice_from(T1474 C,T1474 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[E_OLD]*/T1475 r1475realloc(T1475 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1475copy_from(T1475 C,T1475 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1475clear(T1475 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1475clear_all(T1475 C,T2 a1);
/*NATIVE_ARRAY[E_OLD]*/void r1475copy_slice_from(T1475 C,T1475 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1476clear_all(T1476 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/T1479 r1479realloc(T1479 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1479copy_from(T1479 C,T1479 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1479clear(T1479 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1479clear_all(T1479 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1479copy_slice_from(T1479 C,T1479 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INLINE_MEMO]*/T1480 r1480realloc(T1480 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1480copy_from(T1480 C,T1480 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1480clear(T1480 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1480clear_all(T1480 C,T2 a1);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1480copy_slice_from(T1480 C,T1480 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[POINTER]*/void r1481clear_all(T1481 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[POSITION]]*/void r1482clear_all(T1482 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/T1517 r1517realloc(T1517 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1517copy_from(T1517 C,T1517 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1517clear(T1517 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1517clear_all(T1517 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1517copy_slice_from(T1517 C,T1517 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T1518 r1518realloc(T1518 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1518copy_from(T1518 C,T1518 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1518move(T1518 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1518clear(T1518 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1518clear_all(T1518 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1518set_all_with(T1518 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1518copy_slice_from(T1518 C,T1518 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/T1519 r1519realloc(T1519 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1519copy_from(T1519 C,T1519 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1519clear(T1519 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1519clear_all(T1519 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1519copy_slice_from(T1519 C,T1519 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1522clear_all(T1522 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/T1524 r1524realloc(T1524 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1524copy_from(T1524 C,T1524 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1524clear(T1524 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1524clear_all(T1524 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1524copy_slice_from(T1524 C,T1524 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/T1525 r1525realloc(T1525 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1525copy_from(T1525 C,T1525 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1525clear(T1525 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1525clear_all(T1525 C,T2 a1);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1525copy_slice_from(T1525 C,T1525 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1526clear_all(T1526 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1546clear_all(T1546 C,T2 a1);
/*STRING*/T2 r7first_index_of(T7* C,T3 a1);
/*STRING*/T0* r7out(T7* C);
/*STRING*/void r7copy(T7* C,T0* a1);
/*STRING*/T0* r7substring(T7* C,T2 a1,T2 a2);
/*STRING*/T2 r7occurrences(T7* C,T3 a1);
/*STRING*/void r7remove_prefix(T7* C,T0* a1);
/*STRING*/T2 r7reverse_index_of(T7* C,T3 a1,T2 a2);
/*STRING*/T0* r7intern(T7* C);
/*STRING*/void r7lock_tagged_out(void);
/*STRING*/void r7remove_first(T7* C);
/*STRING*/T3 r7last(T7* C);
/*STRING*/T2 r7first_substring_index(T7* C,T0* a1);
/*STRING*/void r7remove_suffix(T7* C,T0* a1);
/*STRING*/T2 r7upper(T7* C);
/*STRING*/void r7put(T7* C,T3 a1,T2 a2);
/*STRING*/void r7unlock_tagged_out(void);
/*STRING*/void r7remove_between(T7* C,T2 a1,T2 a2);
/*STRING*/T6 r7is_equal(T7* C,T0* a1);
/*STRING*/void r7insert_character(T7* C,T3 a1,T2 a2);
extern T0*oBC39interned;
extern int fBC39interned;
/*STRING*/T0* r7interned(void);
/*STRING*/T3 r7item(T7* C,T2 a1);
/*STRING*/T0* r7_ix_43(T7* C,T0* a1);
extern T0*oBC39string_buffer;
extern int fBC39string_buffer;
/*STRING*/T0* r7string_buffer(void);
extern T0*oBC39split_buffer;
extern int fBC39split_buffer;
/*STRING*/T0* r7split_buffer(void);
/*STRING*/T0* r7split(T7* C);
/*STRING*/T6 r7valid_index(T7* C,T2 a1);
extern T0*oBC17tagged_out_memory_pool;
extern int fBC17tagged_out_memory_pool;
/*STRING*/T0* r7tagged_out_memory_pool(void);
/*STRING*/void r7append(T7* C,T0* a1);
/*STRING*/void r7print_on(T7* C,T0* a1);
/*STRING*/T6 r7_ix_60(T7* C,T0* a1);
/*STRING*/void r7make_from_string(T7* C,T0* a1);
/*STRING*/T6 r7has_substring(T7* C,T0* a1);
/*STRING*/void r7copy_slice_to_native(T7* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*STRING*/T2 r7index_of(T7* C,T3 a1,T2 a2);
/*STRING*/void r7out_in_tagged_out_memory(T7* C);
/*STRING*/void r7make_empty(T7* C);
/*STRING*/void r7slice_copy(T7* C,T2 a1,T0* a2,T2 a3,T2 a4);
/*STRING*/T6 r7has_suffix(T7* C,T0* a1);
/*STRING*/T6 r7is_integer(T7* C);
/*STRING*/void r7remove_tail(T7* C,T2 a1);
/*STRING*/void r7make(T7* C,T2 a1);
/*STRING*/T6 r7has_prefix(T7* C,T0* a1);
/*STRING*/void r7clear_count(T7* C);
/*STRING*/void r7append_string(T7* C,T0* a1);
/*STRING*/void r7make_filled(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove(T7* C,T2 a1);
/*STRING*/void r7append_substring(T7* C,T0* a1,T2 a2,T2 a3);
extern T0*oBC17tagged_out_memories;
extern int fBC17tagged_out_memories;
/*STRING*/T0* r7tagged_out_memories(void);
/*STRING*/void r7extend(T7* C,T3 a1);
/*STRING*/void r7remove_last(T7* C);
/*STRING*/T6 r7has(T7* C,T3 a1);
/*STRING*/void r7keep_head(T7* C,T2 a1);
/*STRING*/T2 r7to_integer(T7* C);
extern T0*oBC17tagged_out_memory_ref;
/*STRING*/void r7fill_with(T7* C,T3 a1);
/*STRING*/T6 r7same_as(T7* C,T0* a1);
/*STRING*/void r7extend_unless(T7* C,T3 a1);
/*STRING*/void r7add_last(T7* C,T3 a1);
/*STRING*/T3 r7first(T7* C);
/*STRING*/void r7shrink(T7* C,T2 a1,T2 a2);
/*STRING*/void r7resize(T7* C,T2 a1);
/*STRING*/void r7to_upper(T7* C);
/*STRING*/T2 r7substring_index(T7* C,T0* a1,T2 a2);
/*STRING*/void r7ensure_capacity(T7* C,T2 a1);
/*STRING*/void r7from_external_copy(T7* C,T8 a1);
/*STRING*/T2 r7computed_hash_code(T7* C);
/*STRING*/T6 r7is_integer_64(T7* C);
/*STRING*/T8 r7to_external(T7* C);
/*STRING*/void r7extend_multiple(T7* C,T3 a1,T2 a2);
/*STRING*/void r7to_lower(T7* C);
/*STRING*/T2 r7last_index_of(T7* C,T3 a1);
/*STRING*/T0* r7twin(T7* C);
/*STRING*/void r7with_capacity(T7* C,T2 a1);
/*STRING*/void r7extend_to_count(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove_head(T7* C,T2 a1);
/*STRING*/void r7next_generation(T7* C);
/*STRING*/T11 r7to_integer_64(T7* C);
/*STRING*/void r7split_in(T7* C,T0* a1);
/*STRING*/void r7swap(T7* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1008swap(T1008* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1008make(T1008* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r1008put(T1008* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1008manifest_put(T1008* C,T2 a1,T0* a2);
/*FAST_ARRAY[STRING]*/void r1008add(T1008* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1008move(T1008* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING]*/T0* r1008new_iterator(T1008* C);
/*FAST_ARRAY[STRING]*/T2 r1008fast_first_index_of(T1008* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1008add_last(T1008* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1008mark_native_arrays(T1008* C);
/*FAST_ARRAY[STRING]*/void r1008clear_count(T1008* C);
/*FAST_ARRAY[STRING]*/void r1008manifest_make(T1008* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r1008valid_index(T1008* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r1008fast_has(T1008* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1008from_collection(T1008* C,T0* a1);
/*FAST_ARRAY[STRING]*/T2 r1008first_index_of(T1008* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1008with_capacity(T1008* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r1008next_generation(T1008* C);
/*FAST_ARRAY[STRING]*/T2 r1008count(T1008* C);
/*FAST_ARRAY[STRING]*/T6 r1008has(T1008* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/T0* r1013last(T1013* C);
/*FAST_ARRAY[HASHED_STRING]*/void r1013add_last(T1013* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/void r1013mark_native_arrays(T1013* C);
/*FAST_ARRAY[HASHED_STRING]*/void r1013with_capacity(T1013* C,T2 a1);
/*FAST_ARRAY[HASHED_STRING]*/void r1013next_generation(T1013* C);
/*FAST_ARRAY[HASHED_STRING]*/T2 r1013count(T1013* C);
/*ARRAY[STRING]*/void r1014swap(T1014* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/T0* r1014first(T1014* C);
/*ARRAY[STRING]*/void r1014put(T1014* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r1014ensure_capacity_and_bounds(T1014* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r1014add(T1014* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r1014move(T1014* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r1014copy(T1014* C,T0* a1);
/*ARRAY[STRING]*/void r1014add_last(T1014* C,T0* a1);
/*ARRAY[STRING]*/void r1014mark_native_arrays(T1014* C);
/*ARRAY[STRING]*/T0* r1014item(T1014* C,T2 a1);
/*ARRAY[STRING]*/void r1014clear_all(T1014* C);
/*ARRAY[STRING]*/void r1014remove(T1014* C,T2 a1);
/*ARRAY[STRING]*/void r1014clear_count(T1014* C);
/*ARRAY[STRING]*/T6 r1014is_empty(T1014* C);
/*ARRAY[STRING]*/T0* r1014twin(T1014* C);
/*ARRAY[STRING]*/void r1014set_all_with(T1014* C,T0* a1);
/*ARRAY[STRING]*/T6 r1014valid_index(T1014* C,T2 a1);
/*ARRAY[STRING]*/void r1014with_capacity(T1014* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/void r1014next_generation(T1014* C);
/*ARRAY[STRING]*/T2 r1014count(T1014* C);
/*FAST_ARRAY[CLUSTER]*/void r1015make(T1015* C,T2 a1);
/*FAST_ARRAY[CLUSTER]*/T0* r1015first(T1015* C);
/*FAST_ARRAY[CLUSTER]*/void r1015put(T1015* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r1015add(T1015* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r1015move(T1015* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLUSTER]*/void r1015add_last(T1015* C,T0* a1);
/*FAST_ARRAY[CLUSTER]*/void r1015mark_native_arrays(T1015* C);
/*FAST_ARRAY[CLUSTER]*/void r1015clear_count(T1015* C);
/*FAST_ARRAY[CLUSTER]*/T6 r1015is_empty(T1015* C);
/*FAST_ARRAY[CLUSTER]*/void r1015next_generation(T1015* C);
/*FAST_ARRAY[CLUSTER]*/T2 r1015count(T1015* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1017make(T1017* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1017add_last(T1017* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1017mark_native_arrays(T1017* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1017next_generation(T1017* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1017do_all(T1017* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018swap(T1018* C,T2 a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018put(T1018* C,T0* a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r1018fast_first_index_of(T1018* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018add_last(T1018* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018mark_native_arrays(T1018* C);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r1018valid_index(T1018* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r1018fast_has(T1018* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018with_capacity(T1018* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018next_generation(T1018* C);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r1018count(T1018* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r1018do_all(T1018* C,T0* a1);
/*FAST_ARRAY[INTEGER_32]*/void r1021swap(T1021* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1021make(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T2 r1021first(T1021* C);
/*FAST_ARRAY[INTEGER_32]*/void r1021remove_last(T1021* C);
/*FAST_ARRAY[INTEGER_32]*/void r1021put(T1021* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1021add(T1021* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1021move(T1021* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[INTEGER_32]*/T2 r1021last(T1021* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r1021fast_first_index_of(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1021add_last(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1021remove(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1021clear_count(T1021* C);
/*FAST_ARRAY[INTEGER_32]*/void r1021set_all_with(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r1021valid_index(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r1021fast_has(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1021with_capacity(T1021* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1021next_generation(T1021* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r1021count(T1021* C);
/*ARRAY[INTEGER_32]*/void r1023make(T1023* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1023resize(T1023* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1023put(T1023* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1023ensure_capacity_and_bounds(T1023* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_32]*/void r1023add_last(T1023* C,T2 a1);
/*ARRAY[INTEGER_32]*/T2 r1023item(T1023* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1023clear_all(T1023* C);
/*ARRAY[INTEGER_32]*/void r1023set_all_with(T1023* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1023force(T1023* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/T6 r1023valid_index(T1023* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1023with_capacity(T1023* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1023next_generation(T1023* C);
/*ARRAY[INTEGER_32]*/T2 r1023count(T1023* C);
/*ARRAY[TYPE_MARK]*/void r1025make(T1025* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r1025first(T1025* C);
/*ARRAY[TYPE_MARK]*/void r1025put(T1025* C,T0* a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r1025ensure_capacity_and_bounds(T1025* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE_MARK]*/void r1025manifest_put(T1025* C,T2 a1,T0* a2);
/*ARRAY[TYPE_MARK]*/void r1025copy(T1025* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T0* r1025last(T1025* C);
/*ARRAY[TYPE_MARK]*/void r1025add_last(T1025* C,T0* a1);
/*ARRAY[TYPE_MARK]*/void r1025mark_native_arrays(T1025* C);
/*ARRAY[TYPE_MARK]*/T0* r1025item(T1025* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r1025clear_all(T1025* C);
/*ARRAY[TYPE_MARK]*/void r1025manifest_make(T1025* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r1025twin(T1025* C);
/*ARRAY[TYPE_MARK]*/void r1025set_all_with(T1025* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T6 r1025valid_index(T1025* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r1025with_capacity(T1025* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r1025next_generation(T1025* C);
/*ARRAY[TYPE_MARK]*/T2 r1025count(T1025* C);
/*FAST_ARRAY[POSITION]*/void r1036swap(T1036* C,T2 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T338 r1036first(T1036* C);
/*FAST_ARRAY[POSITION]*/void r1036remove_last(T1036* C);
/*FAST_ARRAY[POSITION]*/void r1036put(T1036* C,T338 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T338 r1036last(T1036* C);
/*FAST_ARRAY[POSITION]*/void r1036add_last(T1036* C,T338 a1);
/*FAST_ARRAY[POSITION]*/void r1036clear_count(T1036* C);
/*FAST_ARRAY[POSITION]*/T6 r1036is_empty(T1036* C);
/*FAST_ARRAY[POSITION]*/void r1036with_capacity(T1036* C,T2 a1);
/*FAST_ARRAY[POSITION]*/void r1036next_generation(T1036* C);
/*FAST_ARRAY[POSITION]*/T2 r1036count(T1036* C);
/*FAST_ARRAY[FIXED_STRING]*/void r1043swap(T1043* C,T2 a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r1043put(T1043* C,T0* a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r1043add_last(T1043* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/T2 r1043fast_first_index_of(T1043* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1043mark_native_arrays(T1043* C);
/*FAST_ARRAY[FIXED_STRING]*/void r1043remove(T1043* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1043with_capacity(T1043* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1043next_generation(T1043* C);
/*FAST_ARRAY[FIXED_STRING]*/T2 r1043count(T1043* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052make(T1052* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/T0* r1052first(T1052* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052put(T1052* C,T0* a1,T2 a2);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052add_last(T1052* C,T0* a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052mark_native_arrays(T1052* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052clear_count(T1052* C);
/*FAST_ARRAY[FEATURE_NAME]*/T6 r1052valid_index(T1052* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052with_capacity(T1052* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1052next_generation(T1052* C);
/*FAST_ARRAY[FEATURE_NAME]*/T2 r1052count(T1052* C);
/*FAST_ARRAY[CLASSES]*/void r1056put(T1056* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r1056add(T1056* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r1056move(T1056* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLASSES]*/void r1056add_last(T1056* C,T0* a1);
/*FAST_ARRAY[CLASSES]*/void r1056mark_native_arrays(T1056* C);
/*FAST_ARRAY[CLASSES]*/T6 r1056is_empty(T1056* C);
/*FAST_ARRAY[CLASSES]*/void r1056with_capacity(T1056* C,T2 a1);
/*FAST_ARRAY[CLASSES]*/void r1056next_generation(T1056* C);
/*FAST_ARRAY[INTEGER_16]*/void r1059make(T1059* C,T2 a1);
/*FAST_ARRAY[INTEGER_16]*/void r1059add_last(T1059* C,T10 a1);
/*FAST_ARRAY[INTEGER_16]*/void r1059next_generation(T1059* C);
/*FAST_ARRAY[INTEGER_16]*/T2 r1059count(T1059* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1070copy(T1070* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1070add_last(T1070* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1070mark_native_arrays(T1070* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1070clear_count(T1070* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T6 r1070is_empty(T1070* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T0* r1070twin(T1070* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1070with_capacity(T1070* C,T2 a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1070next_generation(T1070* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071swap(T1071* C,T2 a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071make(T1071* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1071fast_index_of(T1071* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071put(T1071* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/T0* r1071last(T1071* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1071fast_first_index_of(T1071* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071add_last(T1071* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071mark_native_arrays(T1071* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071remove(T1071* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071clear_count(T1071* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1071is_empty(T1071* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1071valid_index(T1071* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1071fast_has(T1071* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071with_capacity(T1071* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1071next_generation(T1071* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1071count(T1071* C);
/*FAST_ARRAY[EXPRESSION]*/void r1072make(T1072* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/T0* r1072first(T1072* C);
/*FAST_ARRAY[EXPRESSION]*/void r1072put(T1072* C,T0* a1,T2 a2);
/*FAST_ARRAY[EXPRESSION]*/void r1072copy(T1072* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r1072add_last(T1072* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r1072mark_native_arrays(T1072* C);
/*FAST_ARRAY[EXPRESSION]*/T0* r1072twin(T1072* C);
/*FAST_ARRAY[EXPRESSION]*/void r1072with_capacity(T1072* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/void r1072next_generation(T1072* C);
/*FAST_ARRAY[EXPRESSION]*/T2 r1072count(T1072* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1074make(T1074* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/T0* r1074first(T1074* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1074put(T1074* C,T0* a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r1074ensure_capacity_and_bounds(T1074* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARGUMENT_NAME1]*/void r1074add_last(T1074* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1074mark_native_arrays(T1074* C);
/*ARRAY[ARGUMENT_NAME1]*/T0* r1074item(T1074* C,T2 a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1074clear_all(T1074* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1074set_all_with(T1074* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1074from_collection(T1074* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1074with_capacity(T1074* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r1074next_generation(T1074* C);
/*ARRAY[ARGUMENT_NAME1]*/T2 r1074count(T1074* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r1075first(T1075* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075put(T1075* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075ensure_capacity_and_bounds(T1075* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075mark_native_arrays(T1075* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r1075item(T1075* C,T2 a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075clear_all(T1075* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075set_all_with(T1075* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075from_collection(T1075* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075with_capacity(T1075* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1075next_generation(T1075* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T2 r1075count(T1075* C);
/*ARRAY[DECLARATION]*/void r1076make(T1076* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1076put(T1076* C,T0* a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1076ensure_capacity_and_bounds(T1076* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[DECLARATION]*/void r1076manifest_put(T1076* C,T2 a1,T0* a2);
/*ARRAY[DECLARATION]*/void r1076add_last(T1076* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1076mark_native_arrays(T1076* C);
/*ARRAY[DECLARATION]*/T0* r1076item(T1076* C,T2 a1);
/*ARRAY[DECLARATION]*/void r1076clear_all(T1076* C);
/*ARRAY[DECLARATION]*/T6 r1076is_empty(T1076* C);
/*ARRAY[DECLARATION]*/void r1076manifest_make(T1076* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1076set_all_with(T1076* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1076from_collection(T1076* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1076with_capacity(T1076* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1076next_generation(T1076* C);
/*ARRAY[DECLARATION]*/T2 r1076count(T1076* C);
/*FAST_ARRAY[ASSERTION]*/void r1077put(T1077* C,T0* a1,T2 a2);
/*FAST_ARRAY[ASSERTION]*/void r1077copy(T1077* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r1077add_last(T1077* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r1077mark_native_arrays(T1077* C);
/*FAST_ARRAY[ASSERTION]*/void r1077clear_count(T1077* C);
/*FAST_ARRAY[ASSERTION]*/T6 r1077is_empty(T1077* C);
/*FAST_ARRAY[ASSERTION]*/T0* r1077twin(T1077* C);
/*FAST_ARRAY[ASSERTION]*/void r1077with_capacity(T1077* C,T2 a1);
/*FAST_ARRAY[ASSERTION]*/void r1077next_generation(T1077* C);
/*FAST_ARRAY[ASSERTION]*/T2 r1077count(T1077* C);
/*FAST_ARRAY[ASSERTION]*/void r1077do_all(T1077* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1078make(T1078* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/T0* r1078first(T1078* C);
/*ARRAY[LOCAL_NAME1]*/void r1078put(T1078* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r1078ensure_capacity_and_bounds(T1078* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_NAME1]*/void r1078add_last(T1078* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1078mark_native_arrays(T1078* C);
/*ARRAY[LOCAL_NAME1]*/T0* r1078item(T1078* C,T2 a1);
/*ARRAY[LOCAL_NAME1]*/void r1078clear_all(T1078* C);
/*ARRAY[LOCAL_NAME1]*/void r1078set_all_with(T1078* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1078from_collection(T1078* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1078with_capacity(T1078* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r1078next_generation(T1078* C);
/*ARRAY[LOCAL_NAME1]*/T2 r1078count(T1078* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1079add_last(T1079* C,T0* a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1079mark_native_arrays(T1079* C);
/*FAST_ARRAY[MANIFEST_STRING]*/T6 r1079is_empty(T1079* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1079with_capacity(T1079* C,T2 a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1079next_generation(T1079* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080make(T1080* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080swap(T1080* C,T2 a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r1080first(T1080* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080put(T1080* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080copy(T1080* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080add_last(T1080* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080mark_native_arrays(T1080* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080remove(T1080* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080clear_count(T1080* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T6 r1080is_empty(T1080* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r1080twin(T1080* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080remove_tail(T1080* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080with_capacity(T1080* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1080next_generation(T1080* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T2 r1080count(T1080* C);
/*ARRAY[EXPORT_ITEM]*/void r1081put(T1081* C,T0* a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r1081ensure_capacity_and_bounds(T1081* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[EXPORT_ITEM]*/void r1081add_last(T1081* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r1081mark_native_arrays(T1081* C);
/*ARRAY[EXPORT_ITEM]*/T0* r1081item(T1081* C,T2 a1);
/*ARRAY[EXPORT_ITEM]*/void r1081clear_all(T1081* C);
/*ARRAY[EXPORT_ITEM]*/void r1081set_all_with(T1081* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r1081with_capacity(T1081* C,T2 a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r1081next_generation(T1081* C);
/*ARRAY[EXPORT_ITEM]*/T2 r1081count(T1081* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1083add_last(T1083* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T2 r1083fast_first_index_of(T1083* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1083mark_native_arrays(T1083* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r1083valid_index(T1083* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r1083fast_has(T1083* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1083with_capacity(T1083* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1083next_generation(T1083* C);
/*ARRAY[TYPE]*/T0* r1090first(T1090* C);
/*ARRAY[TYPE]*/void r1090put(T1090* C,T0* a1,T2 a2);
/*ARRAY[TYPE]*/void r1090ensure_capacity_and_bounds(T1090* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE]*/void r1090add_last(T1090* C,T0* a1);
/*ARRAY[TYPE]*/void r1090mark_native_arrays(T1090* C);
/*ARRAY[TYPE]*/T0* r1090item(T1090* C,T2 a1);
/*ARRAY[TYPE]*/void r1090clear_all(T1090* C);
/*ARRAY[TYPE]*/void r1090set_all_with(T1090* C,T0* a1);
/*ARRAY[TYPE]*/void r1090with_capacity(T1090* C,T2 a1,T2 a2);
/*ARRAY[TYPE]*/void r1090next_generation(T1090* C);
/*ARRAY[TYPE]*/T2 r1090count(T1090* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r1092add_last(T1092* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r1092fast_first_index_of(T1092* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1092mark_native_arrays(T1092* C);
/*FAST_ARRAY[RUN_FEATURE]*/T6 r1092valid_index(T1092* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1092with_capacity(T1092* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1092next_generation(T1092* C);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r1092count(T1092* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r1092do_all(T1092* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1111make(T1111* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T0* r1111first(T1111* C);
/*FAST_ARRAY[TYPE]*/void r1111resize(T1111* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1111remove_last(T1111* C);
/*FAST_ARRAY[TYPE]*/T0* r1111last(T1111* C);
/*FAST_ARRAY[TYPE]*/T2 r1111fast_first_index_of(T1111* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1111add_last(T1111* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1111mark_native_arrays(T1111* C);
/*FAST_ARRAY[TYPE]*/void r1111remove(T1111* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1111clear_count(T1111* C);
/*FAST_ARRAY[TYPE]*/T6 r1111valid_index(T1111* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T6 r1111fast_has(T1111* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1111with_capacity(T1111* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1111next_generation(T1111* C);
/*FAST_ARRAY[TYPE]*/T2 r1111count(T1111* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r1116add_last(T1116* C,T0* a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r1116mark_native_arrays(T1116* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r1116with_capacity(T1116* C,T2 a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r1116next_generation(T1116* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T2 r1117fast_first_index_of(T1117* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1117add_last(T1117* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1117mark_native_arrays(T1117* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1117is_empty(T1117* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1117valid_index(T1117* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1117fast_has(T1117* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1117with_capacity(T1117* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1117next_generation(T1117* C);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1117do_all(T1117* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1118add_last(T1118* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1118mark_native_arrays(T1118* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T6 r1118valid_index(T1118* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1118with_capacity(T1118* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1118next_generation(T1118* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T2 r1118count(T1118* C);
/*FAST_ARRAY[CODE]*/T0* r1119first(T1119* C);
/*FAST_ARRAY[CODE]*/void r1119remove_last(T1119* C);
/*FAST_ARRAY[CODE]*/void r1119put(T1119* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE]*/void r1119copy(T1119* C,T0* a1);
/*FAST_ARRAY[CODE]*/T0* r1119last(T1119* C);
/*FAST_ARRAY[CODE]*/void r1119add_last(T1119* C,T0* a1);
/*FAST_ARRAY[CODE]*/void r1119mark_native_arrays(T1119* C);
/*FAST_ARRAY[CODE]*/void r1119clear_count(T1119* C);
/*FAST_ARRAY[CODE]*/T6 r1119is_empty(T1119* C);
/*FAST_ARRAY[CODE]*/T0* r1119twin(T1119* C);
/*FAST_ARRAY[CODE]*/void r1119with_capacity(T1119* C,T2 a1);
/*FAST_ARRAY[CODE]*/void r1119next_generation(T1119* C);
/*FAST_ARRAY[CODE]*/T2 r1119count(T1119* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1130add_last(T1130* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1130fast_first_index_of(T1130* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1130mark_native_arrays(T1130* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1130clear_count(T1130* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r1130valid_index(T1130* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r1130fast_has(T1130* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1130with_capacity(T1130* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1130next_generation(T1130* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1130do_all(T1130* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r1132fast_first_index_of(T1132* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1132add_last(T1132* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1132mark_native_arrays(T1132* C);
/*FAST_ARRAY[AGENT_CREATION]*/void r1132clear_count(T1132* C);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r1132valid_index(T1132* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r1132fast_has(T1132* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1132with_capacity(T1132* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1132next_generation(T1132* C);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r1132count(T1132* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1136remove_last(T1136* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T0* r1136last(T1136* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1136add_last(T1136* C,T0* a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1136mark_native_arrays(T1136* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T6 r1136is_empty(T1136* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1136with_capacity(T1136* C,T2 a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1136next_generation(T1136* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1142remove_last(T1142* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T0* r1142last(T1142* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1142add_last(T1142* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1142mark_native_arrays(T1142* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1142clear_count(T1142* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T6 r1142is_empty(T1142* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1142with_capacity(T1142* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1142next_generation(T1142* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152make(T1152* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152ensure_capacity_and_bounds(T1152* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152manifest_put(T1152* C,T2 a1,T0* a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152mark_native_arrays(T1152* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T0* r1152item(T1152* C,T2 a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152clear_all(T1152* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152manifest_make(T1152* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152set_all_with(T1152* C,T0* a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1152next_generation(T1152* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T2 r1152count(T1152* C);
/*ARRAY[INTEGER_8]*/void r1153make(T1153* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1153ensure_capacity_and_bounds(T1153* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_8]*/void r1153manifest_put(T1153* C,T2 a1,T1 a2);
/*ARRAY[INTEGER_8]*/T1 r1153item(T1153* C,T2 a1);
/*ARRAY[INTEGER_8]*/void r1153clear_all(T1153* C);
/*ARRAY[INTEGER_8]*/void r1153manifest_make(T1153* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1153set_all_with(T1153* C,T1 a1);
/*ARRAY[INTEGER_8]*/void r1153next_generation(T1153* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154make(T1154* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1154first(T1154* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154remove_last(T1154* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1154last(T1154* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T2 r1154fast_first_index_of(T1154* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154add_last(T1154* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154mark_native_arrays(T1154* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154clear_count(T1154* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1154is_empty(T1154* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1154valid_index(T1154* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1154fast_has(T1154* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154with_capacity(T1154* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1154next_generation(T1154* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1167add_last(T1167* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1167mark_native_arrays(T1167* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1167clear_count(T1167* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T6 r1167is_empty(T1167* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1167with_capacity(T1167* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1167next_generation(T1167* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T2 r1167count(T1167* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1168add_last(T1168* C,T0* a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1168mark_native_arrays(T1168* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1168with_capacity(T1168* C,T2 a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1168next_generation(T1168* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1168do_all(T1168* C,T0* a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176make(T1176* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176put(T1176* C,T311 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176add(T1176* C,T311 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176move(T1176* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176add_last(T1176* C,T311 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1176is_empty(T1176* C);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1176valid_index(T1176* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1176next_generation(T1176* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1182remove_last(T1182* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T0* r1182last(T1182* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1182add_last(T1182* C,T0* a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1182mark_native_arrays(T1182* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T6 r1182is_empty(T1182* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1182with_capacity(T1182* C,T2 a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1182next_generation(T1182* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1194make(T1194* C,T2 a1);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1194remove_last(T1194* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T0* r1194last(T1194* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1194mark_native_arrays(T1194* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T6 r1194is_empty(T1194* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1194next_generation(T1194* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210put(T1210* C,T0* a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210ensure_capacity_and_bounds(T1210* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210add_last(T1210* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210mark_native_arrays(T1210* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T0* r1210item(T1210* C,T2 a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210clear_all(T1210* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210set_all_with(T1210* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210with_capacity(T1210* C,T2 a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1210next_generation(T1210* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T2 r1210count(T1210* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1219first(T1219* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1219put(T1219* C,T0* a1,T2 a2);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1219copy(T1219* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1219add_last(T1219* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1219mark_native_arrays(T1219* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1219twin(T1219* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1219with_capacity(T1219* C,T2 a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1219next_generation(T1219* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T2 r1219count(T1219* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1223first(T1223* C);
/*FAST_ARRAY[IFTHEN]*/void r1223remove_last(T1223* C);
/*FAST_ARRAY[IFTHEN]*/void r1223put(T1223* C,T0* a1,T2 a2);
/*FAST_ARRAY[IFTHEN]*/void r1223copy(T1223* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/T0* r1223last(T1223* C);
/*FAST_ARRAY[IFTHEN]*/void r1223add_last(T1223* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/void r1223mark_native_arrays(T1223* C);
/*FAST_ARRAY[IFTHEN]*/void r1223remove(T1223* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/T6 r1223is_empty(T1223* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1223twin(T1223* C);
/*FAST_ARRAY[IFTHEN]*/void r1223remove_tail(T1223* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1223with_capacity(T1223* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1223next_generation(T1223* C);
/*FAST_ARRAY[IFTHEN]*/void r1223remove_first(T1223* C);
/*FAST_ARRAY[IFTHEN]*/T2 r1223count(T1223* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1225first(T1225* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225put(T1225* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225copy(T1225* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225add_last(T1225* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225mark_native_arrays(T1225* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225append_traversable(T1225* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/T6 r1225is_empty(T1225* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1225twin(T1225* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225with_capacity(T1225* C,T2 a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1225next_generation(T1225* C);
/*FAST_ARRAY[WHEN_ITEM]*/T2 r1225count(T1225* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1226make(T1226* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1226first(T1226* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1226put(T1226* C,T0* a1,T2 a2);
/*FAST_ARRAY[INSTRUCTION]*/void r1226copy(T1226* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1226last(T1226* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1226add_last(T1226* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1226mark_native_arrays(T1226* C);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1226twin(T1226* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1226with_capacity(T1226* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1226next_generation(T1226* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1226remove_first(T1226* C);
/*FAST_ARRAY[INSTRUCTION]*/T2 r1226count(T1226* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1227put(T1227* C,T0* a1,T2 a2);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1227add_last(T1227* C,T0* a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1227mark_native_arrays(T1227* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1227with_capacity(T1227* C,T2 a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1227next_generation(T1227* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1228add_last(T1228* C,T0* a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1228mark_native_arrays(T1228* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1228with_capacity(T1228* C,T2 a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1228next_generation(T1228* C);
/*FAST_ARRAY[TYPE_MARK]*/void r1229add_last(T1229* C,T0* a1);
/*FAST_ARRAY[TYPE_MARK]*/void r1229mark_native_arrays(T1229* C);
/*FAST_ARRAY[TYPE_MARK]*/void r1229with_capacity(T1229* C,T2 a1);
/*FAST_ARRAY[TYPE_MARK]*/void r1229next_generation(T1229* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1248add_last(T1248* C,T0* a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1248mark_native_arrays(T1248* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1248with_capacity(T1248* C,T2 a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1248next_generation(T1248* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/T0* r1249first(T1249* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1249add_last(T1249* C,T0* a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1249mark_native_arrays(T1249* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1249with_capacity(T1249* C,T2 a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1249next_generation(T1249* C);
/*ARRAY[INDEX_CLAUSE]*/void r1253put(T1253* C,T0* a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1253ensure_capacity_and_bounds(T1253* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INDEX_CLAUSE]*/void r1253add_last(T1253* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1253mark_native_arrays(T1253* C);
/*ARRAY[INDEX_CLAUSE]*/void r1253clear_all(T1253* C);
/*ARRAY[INDEX_CLAUSE]*/void r1253set_all_with(T1253* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1253with_capacity(T1253* C,T2 a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1253next_generation(T1253* C);
/*ARRAY[INDEX_CLAUSE]*/T2 r1253count(T1253* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1356add_last(T1356* C,T0* a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1356mark_native_arrays(T1356* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1356with_capacity(T1356* C,T2 a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1356next_generation(T1356* C);
/*FAST_ARRAY[RENAME_PAIR]*/T2 r1356count(T1356* C);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1367make(T1367* C,T2 a1);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1367add_last(T1367* C,T0* a1);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1367mark_native_arrays(T1367* C);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1367clear_count(T1367* C);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1367next_generation(T1367* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1395make(T1395* C,T2 a1);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1395put(T1395* C,T0* a1,T2 a2);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1395mark_native_arrays(T1395* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1395next_generation(T1395* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1412make(T1412* C,T2 a1);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1412mark_native_arrays(T1412* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1412next_generation(T1412* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1440resize(T1440* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1440add_last(T1440* C,T0* a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1440mark_native_arrays(T1440* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1440with_capacity(T1440* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1440next_generation(T1440* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/T2 r1440count(T1440* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1442remove_last(T1442* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1442put(T1442* C,T0* a1,T2 a2);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/T0* r1442last(T1442* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1442add_last(T1442* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1442mark_native_arrays(T1442* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1442with_capacity(T1442* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1442next_generation(T1442* C);
/*FAST_ARRAY[E_OLD]*/void r1443add_last(T1443* C,T0* a1);
/*FAST_ARRAY[E_OLD]*/void r1443mark_native_arrays(T1443* C);
/*FAST_ARRAY[E_OLD]*/void r1443with_capacity(T1443* C,T2 a1);
/*FAST_ARRAY[E_OLD]*/void r1443next_generation(T1443* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1445add_last(T1445* C,T0* a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1445mark_native_arrays(T1445* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1445with_capacity(T1445* C,T2 a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1445next_generation(T1445* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1445do_all(T1445* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1451remove_last(T1451* C);
/*FAST_ARRAY[INLINE_MEMO]*/T0* r1451last(T1451* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1451add_last(T1451* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1451mark_native_arrays(T1451* C);
/*FAST_ARRAY[INLINE_MEMO]*/T6 r1451is_empty(T1451* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1451with_capacity(T1451* C,T2 a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1451next_generation(T1451* C);
/*ARRAY[FEATURE_STAMP]*/void r1453put(T1453* C,T0* a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1453ensure_capacity_and_bounds(T1453* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FEATURE_STAMP]*/void r1453add_last(T1453* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1453mark_native_arrays(T1453* C);
/*ARRAY[FEATURE_STAMP]*/T0* r1453item(T1453* C,T2 a1);
/*ARRAY[FEATURE_STAMP]*/void r1453clear_all(T1453* C);
/*ARRAY[FEATURE_STAMP]*/T6 r1453is_empty(T1453* C);
/*ARRAY[FEATURE_STAMP]*/void r1453set_all_with(T1453* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1453with_capacity(T1453* C,T2 a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1453next_generation(T1453* C);
/*ARRAY[FEATURE_STAMP]*/T2 r1453count(T1453* C);
/*FAST_ARRAY[POINTER]*/void r1454make(T1454* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1454put(T1454* C,T8 a1,T2 a2);
/*FAST_ARRAY[POINTER]*/void r1454manifest_put(T1454* C,T2 a1,T8 a2);
/*FAST_ARRAY[POINTER]*/void r1454manifest_make(T1454* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1454next_generation(T1454* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1470make(T1470* C,T2 a1);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1470mark_native_arrays(T1470* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1470next_generation(T1470* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495make(T1495* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495resize(T1495* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495remove_last(T1495* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495put(T1495* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE_CONTEXT]*/T0* r1495last(T1495* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495add_last(T1495* C,T0* a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495mark_native_arrays(T1495* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T6 r1495is_empty(T1495* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495with_capacity(T1495* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1495next_generation(T1495* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T2 r1495count(T1495* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496make(T1496* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496resize(T1496* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496put(T1496* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496ensure_capacity_and_bounds(T1496* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496add_last(T1496* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496mark_native_arrays(T1496* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T0* r1496item(T1496* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496clear_all(T1496* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496set_all_with(T1496* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496force(T1496* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T6 r1496valid_index(T1496* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1496next_generation(T1496* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T2 r1496count(T1496* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1502add_last(T1502* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1502mark_native_arrays(T1502* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1502with_capacity(T1502* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1502next_generation(T1502* C);
/*ARRAY[RUN_FEATURE_2]*/void r1508swap(T1508* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1508put(T1508* C,T0* a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1508ensure_capacity_and_bounds(T1508* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[RUN_FEATURE_2]*/void r1508add_last(T1508* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1508mark_native_arrays(T1508* C);
/*ARRAY[RUN_FEATURE_2]*/T0* r1508item(T1508* C,T2 a1);
/*ARRAY[RUN_FEATURE_2]*/void r1508clear_all(T1508* C);
/*ARRAY[RUN_FEATURE_2]*/void r1508set_all_with(T1508* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1508with_capacity(T1508* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1508next_generation(T1508* C);
/*ARRAY[RUN_FEATURE_2]*/T2 r1508count(T1508* C);
/*ARRAY[RUN_FEATURE_2]*/void r1508do_all(T1508* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1515add_last(T1515* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1515mark_native_arrays(T1515* C);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1515with_capacity(T1515* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1515next_generation(T1515* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1516add_last(T1516* C,T0* a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1516mark_native_arrays(T1516* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1516with_capacity(T1516* C,T2 a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1516next_generation(T1516* C);
/*FAST_ARRAY[CHARACTER]*/void r1545make(T1545* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1545resize(T1545* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1545put(T1545* C,T3 a1,T2 a2);
/*FAST_ARRAY[CHARACTER]*/void r1545next_generation(T1545* C);
/*FAST_ARRAY[CHARACTER]*/T2 r1545count(T1545* C);
extern T0*oBC295common_free_nodes;
extern int fBC295common_free_nodes;
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010common_free_nodes(void);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010make(T1010* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010key(T1010* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010put(T1010* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010new_node(T1010* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010add(T1010* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010at(T1010* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010set_cache_user(T1010* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r1010prime_capacity(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010buckets_item(T1048 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r1010should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r1010key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010reference_at(T1010* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r1010prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010dispose_node(T1010* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010item(T1010* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010remove(T1010* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010create_with_capacity(T1010* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010increase_capacity(T1010* C);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1010next_generation(T1010* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r1010hash_code(T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r1010has(T1010* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1010new_iterator_on_keys(T1010* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1016common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1016make(T1016* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1016key(T1016* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1016new_node(T1016* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1016add(T1016* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1016set_cache_user(T1016* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1016prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1016buckets_item(T1086 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r1016should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1016prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1016item(T1016* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1016create_with_capacity(T1016* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1016increase_capacity(T1016* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r1016fast_has(T1016* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1016next_generation(T1016* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1016hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1019common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1019make(T1019* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1019put(T1019* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1019new_node(T1019* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1019prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1019buckets_item(T1102 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r1019should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r1019key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1019reference_at(T1019* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1019prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1019create_with_capacity(T1019* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1019increase_capacity(T1019* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1019next_generation(T1019* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1019hash_code(T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1020common_free_nodes(void);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020make(T1020* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020put(T1020* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1020new_node(T1020* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020add(T1020* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020set_cache_user(T1020* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1020prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1020buckets_item(T1105 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r1020should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r1020key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1020reference_at(T1020* C,T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1020prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1020item(T1020* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020create_with_capacity(T1020* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020increase_capacity(T1020* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1020next_generation(T1020* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1020hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1026make(T1026* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1026common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1026new_node(T1026* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1026add(T1026* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1026prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1026buckets_item(T1140 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r1026should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1026prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1026create_with_capacity(T1026* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1026increase_capacity(T1026* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r1026fast_has(T1026* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1026with_capacity(T1026* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1026next_generation(T1026* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1026hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1026fast_reference_at(T1026* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1029common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1029key(T1029* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1029new_node(T1029* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1029add(T1029* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1029set_cache_user(T1029* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1029prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1029buckets_item(T1157 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r1029should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r1029key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1029reference_at(T1029* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1029prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1029upper(T1029* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1029item(T1029* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1029create_with_capacity(T1029* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1029increase_capacity(T1029* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1029with_capacity(T1029* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1029next_generation(T1029* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1029hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1030common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1030key(T1030* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1030fast_key_at(T1030* C,T10 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1030new_node(T1030* C,T10 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030add(T1030* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030set_cache_user(T1030* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1030prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1030buckets_item(T1160 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r1030should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1030prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r1030item(T1030* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r1030fast_at(T1030* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030create_with_capacity(T1030* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030increase_capacity(T1030* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r1030fast_has(T1030* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030with_capacity(T1030* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030next_generation(T1030* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1030fast_put(T1030* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1030hash_code(T0* a1);
extern T0*oBC333common_free_nodes;
extern int fBC333common_free_nodes;
/*HASHED_SET[HASHED_STRING]*/T0* r1031common_free_nodes(void);
/*HASHED_SET[HASHED_STRING]*/T0* r1031new_node(T1031* C,T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T6 r1031safe_equal(T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/void r1031add(T1031* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/void r1031manifest_put(T1031* C,T2 a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T2 r1031prime_capacity(T2 a1);
/*HASHED_SET[HASHED_STRING]*/T6 r1031should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[HASHED_STRING]*/T0* r1031reference_at(T1031* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/T2 r1031prime_number_ceiling(T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1031manifest_make(T1031* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1031create_with_capacity(T1031* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1031increase_capacity(T1031* C);
/*HASHED_SET[HASHED_STRING]*/void r1031with_capacity(T1031* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1031next_generation(T1031* C);
/*HASHED_SET[HASHED_STRING]*/T2 r1031hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1035common_free_nodes(void);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035make(T1035* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1035key(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1035new_node(T1035* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035add(T1035* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035set_cache_user(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1035prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1035buckets_item(T1171 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1035should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1035key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1035prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1035item(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035create_with_capacity(T1035* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035increase_capacity(T1035* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035next_generation(T1035* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1035hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1035do_all(T1035* C,T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1035has(T1035* C,T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1037quick_sort_region(T0* a1,T2 a2,T2 a3);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1037lt(T338 a1,T338 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1037quick_sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1037lte(T338 a1,T338 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1037sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1037is_sorted(T0* a1);
/*COLLECTION_SORTER[STRING]*/void r1039add(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1039quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[STRING]*/T2 r1039insert_index(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/T6 r1039lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1039quick_sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r1039lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1039sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r1039is_sorted(T0* a1);
/*STACK[STRING]*/void r1040make(T1040* C);
/*STACK[STRING]*/void r1040mark_native_arrays(T1040* C);
/*STACK[STRING]*/void r1040push(T1040* C,T0* a1);
/*STACK[STRING]*/void r1040pop(T1040* C);
/*STACK[STRING]*/T0* r1040top(T1040* C);
/*STACK[STRING]*/void r1040with_capacity(T1040* C,T2 a1);
/*STACK[STRING]*/void r1040next_generation(T1040* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1042common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1042make(T1042* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1042new_node(T1042* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1042add(T1042* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1042prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1042buckets_item(T1178 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r1042should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r1042key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1042reference_at(T1042* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1042prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1042create_with_capacity(T1042* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1042increase_capacity(T1042* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1042next_generation(T1042* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1042hash_code(T2 a1);
/*HASHED_DICTIONARY_NODE[STRING,STRING]*/void r1044make(T1044* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r1047set_item(T1047* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1049set_item(T1049* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1050make(T1050* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1051new_node(T1051* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1051add(T1051* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1051prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1051buckets_item(T1184 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T6 r1051should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1051special_common_dictionary(T1051* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1051prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1051increase_capacity(T1051* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1051next_generation(T1051* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1051hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1051fast_reference_at(T1051* C,T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1054quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1054lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1054quick_sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1054lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1054sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1054is_sorted(T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1061common_free_nodes(void);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1061make(T1061* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1061new_node(T1061* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1061add(T1061* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1061prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1061buckets_item(T1198 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r1061should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r1061key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1061reference_at(T1061* C,T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1061prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1061create_with_capacity(T1061* C,T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1061increase_capacity(T1061* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1061next_generation(T1061* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1061hash_code(T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1063common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1063make(T1063* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1063new_node(T1063* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1063add(T1063* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1063prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1063buckets_item(T1201 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r1063should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r1063key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1063reference_at(T1063* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1063prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1063create_with_capacity(T1063* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1063increase_capacity(T1063* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1063next_generation(T1063* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1063hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T0* r1065common_free_nodes(void);
/*HASHED_SET[CLASS_NAME]*/void r1065make(T1065* C);
/*HASHED_SET[CLASS_NAME]*/T0* r1065new_node(T1065* C,T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/void r1065add(T1065* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1065safe_equal(T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/T2 r1065prime_capacity(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1065should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[CLASS_NAME]*/T2 r1065prime_number_ceiling(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T0* r1065dispose_node(T1065* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/void r1065clear_count(T1065* C);
/*HASHED_SET[CLASS_NAME]*/void r1065create_with_capacity(T1065* C,T2 a1);
/*HASHED_SET[CLASS_NAME]*/void r1065increase_capacity(T1065* C);
/*HASHED_SET[CLASS_NAME]*/void r1065next_generation(T1065* C);
/*HASHED_SET[CLASS_NAME]*/T2 r1065hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1065has(T1065* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1067common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1067make(T1067* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1067put(T1067* C,T2 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1067new_node(T1067* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1067at(T1067* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1067internal_key(T1067* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1067prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1067buckets_item(T1207 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1067should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1067key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1067prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1067create_with_capacity(T1067* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1067increase_capacity(T1067* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1067next_generation(T1067* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1067hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1067has(T1067* C,T0* a1);
/*STACK[TMP_FEATURE]*/void r1073make(T1073* C);
/*STACK[TMP_FEATURE]*/void r1073mark_native_arrays(T1073* C);
/*STACK[TMP_FEATURE]*/void r1073push(T1073* C,T0* a1);
/*STACK[TMP_FEATURE]*/T6 r1073is_empty(T1073* C);
/*STACK[TMP_FEATURE]*/void r1073pop(T1073* C);
/*STACK[TMP_FEATURE]*/T0* r1073top(T1073* C);
/*STACK[TMP_FEATURE]*/void r1073with_capacity(T1073* C,T2 a1);
/*STACK[TMP_FEATURE]*/void r1073next_generation(T1073* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r1082common_free_nodes(void);
/*HASHED_SET[LIVE_TYPE]*/void r1082make(T1082* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r1082new_node(T1082* C,T0* a1,T0* a2);
/*HASHED_SET[LIVE_TYPE]*/void r1082set_cache_user(T1082* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T2 r1082prime_capacity(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T6 r1082should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[LIVE_TYPE]*/T2 r1082prime_number_ceiling(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r1082dispose_node(T1082* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r1082item(T1082* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1082clear_count(T1082* C);
/*HASHED_SET[LIVE_TYPE]*/void r1082create_with_capacity(T1082* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1082increase_capacity(T1082* C);
/*HASHED_SET[LIVE_TYPE]*/T6 r1082fast_has(T1082* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r1082with_capacity(T1082* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1082next_generation(T1082* C);
/*HASHED_SET[LIVE_TYPE]*/T2 r1082hash_code(T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r1082fast_add(T1082* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r1084set_item(T1084* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]*/void r1085make(T1085* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089key(T1089* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089new_node(T1089* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089fast_remove(T1089* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089add(T1089* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089set_cache_user(T1089* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1089prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089buckets_item(T1239 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1089should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1089key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1089prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1089upper(T1089* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089dispose_node(T1089* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089item(T1089* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1089fast_at(T1089* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089remove(T1089* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089clear_count(T1089* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089create_with_capacity(T1089* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089increase_capacity(T1089* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1089fast_has(T1089* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089with_capacity(T1089* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089next_generation(T1089* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1089fast_put(T1089* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1089hash_code(T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1098mark_native_arrays(T1098* C);
/*STACK[ANONYMOUS_FEATURE]*/void r1098push(T1098* C,T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1098pop(T1098* C);
/*STACK[ANONYMOUS_FEATURE]*/T0* r1098top(T1098* C);
/*STACK[ANONYMOUS_FEATURE]*/void r1098with_capacity(T1098* C,T2 a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1098next_generation(T1098* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1099common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1099new_node(T1099* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1099add(T1099* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1099prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1099buckets_item(T1245 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r1099should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1099prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T1 r1099fast_at(T1099* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1099create_with_capacity(T1099* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1099increase_capacity(T1099* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r1099fast_has(T1099* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1099with_capacity(T1099* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1099next_generation(T1099* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1099hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1100make(T1100* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100key(T1100* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100new_node(T1100* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1100add(T1100* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100at(T1100* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1100set_cache_user(T1100* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100internal_key(T1100* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1100prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100buckets_item(T1252 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1100should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100reference_at(T1100* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1100key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1100prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1100item(T1100* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1100create_with_capacity(T1100* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1100increase_capacity(T1100* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1100next_generation(T1100* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1100hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1100has(T1100* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1101make(T1101* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r1103set_item(T1103* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]*/void r1104make(T1104* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r1106set_item(T1106* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1108common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1108new_node(T1108* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1108add(T1108* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1108prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1108buckets_item(T1254 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r1108should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1108prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T1 r1108fast_at(T1108* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1108create_with_capacity(T1108* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1108increase_capacity(T1108* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r1108fast_has(T1108* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1108with_capacity(T1108* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1108next_generation(T1108* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1108hash_code(T0* a1);
extern T0*oBC692common_free_nodes;
extern int fBC692common_free_nodes;
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112common_free_nodes(void);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112key(T1112* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112fast_key_at(T1112* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112new_node(T1112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1112add(T1112* C,T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1112set_cache_user(T1112* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112internal_key(T1112* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1112prime_capacity(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1112should_increase_capacity(T2 a1,T2 a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1112key_safe_equal(T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112reference_at(T1112* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1112prime_number_ceiling(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1112item(T1112* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1112increase_capacity(T1112* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1112with_capacity(T1112* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1112next_generation(T1112* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1112basic_make(T1112* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1112has(T1112* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1115common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1115new_node(T1115* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1115add(T1115* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1115prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1115buckets_item(T1267 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r1115should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1115prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1115create_with_capacity(T1115* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1115increase_capacity(T1115* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r1115fast_has(T1115* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1115with_capacity(T1115* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1115next_generation(T1115* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1115hash_code(T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1115fast_reference_at(T1115* C,T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1120common_free_nodes(void);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1120new_node(T1120* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1120add(T1120* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1120set_cache_user(T1120* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1120prime_capacity(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1120buckets_item(T1273 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T6 r1120should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1120prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1120item(T1120* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1120create_with_capacity(T1120* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1120increase_capacity(T1120* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1120with_capacity(T1120* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1120next_generation(T1120* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1120hash_code(T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1120fast_reference_at(T1120* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r1122common_free_nodes(void);
/*HASHED_SET[TYPE]*/void r1122make(T1122* C);
/*HASHED_SET[TYPE]*/T0* r1122new_node(T1122* C,T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/T6 r1122safe_equal(T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/void r1122add(T1122* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1122set_cache_user(T1122* C,T2 a1);
/*HASHED_SET[TYPE]*/T2 r1122prime_capacity(T2 a1);
/*HASHED_SET[TYPE]*/T6 r1122should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[TYPE]*/T2 r1122prime_number_ceiling(T2 a1);
/*HASHED_SET[TYPE]*/T0* r1122dispose_node(T1122* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r1122item(T1122* C,T2 a1);
/*HASHED_SET[TYPE]*/void r1122remove(T1122* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1122clear_count(T1122* C);
/*HASHED_SET[TYPE]*/void r1122create_with_capacity(T1122* C,T2 a1);
/*HASHED_SET[TYPE]*/void r1122increase_capacity(T1122* C);
/*HASHED_SET[TYPE]*/void r1122next_generation(T1122* C);
/*HASHED_SET[TYPE]*/T2 r1122hash_code(T0* a1);
/*HASHED_SET[TYPE]*/T6 r1122has(T1122* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1122fast_add(T1122* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1126common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126put(T1126* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1126new_node(T1126* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126set_cache_user(T1126* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1126prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1126buckets_item(T1280 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1126should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1126key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1126prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1126dispose_node(T1126* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1126item(T1126* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126clear_count(T1126* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126create_with_capacity(T1126* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126increase_capacity(T1126* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126with_capacity(T1126* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1126next_generation(T1126* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1126hash_code(T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1126has(T1126* C,T0* a1);
/*HASHED_SET[STRING]*/void r1127make(T1127* C);
/*HASHED_SET[STRING]*/T0* r1127common_free_nodes(void);
/*HASHED_SET[STRING]*/T0* r1127new_node(T1127* C,T0* a1,T0* a2);
/*HASHED_SET[STRING]*/T6 r1127safe_equal(T0* a1,T0* a2);
/*HASHED_SET[STRING]*/void r1127add(T1127* C,T0* a1);
/*HASHED_SET[STRING]*/void r1127manifest_put(T1127* C,T2 a1,T0* a2);
/*HASHED_SET[STRING]*/T2 r1127prime_capacity(T2 a1);
/*HASHED_SET[STRING]*/T6 r1127should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[STRING]*/T2 r1127prime_number_ceiling(T2 a1);
/*HASHED_SET[STRING]*/T0* r1127dispose_node(T1127* C,T0* a1);
/*HASHED_SET[STRING]*/void r1127clear_count(T1127* C);
/*HASHED_SET[STRING]*/void r1127manifest_make(T1127* C,T2 a1);
/*HASHED_SET[STRING]*/void r1127create_with_capacity(T1127* C,T2 a1);
/*HASHED_SET[STRING]*/void r1127increase_capacity(T1127* C);
/*HASHED_SET[STRING]*/T6 r1127fast_has(T1127* C,T0* a1);
/*HASHED_SET[STRING]*/void r1127with_capacity(T1127* C,T2 a1);
/*HASHED_SET[STRING]*/void r1127next_generation(T1127* C);
/*HASHED_SET[STRING]*/T2 r1127hash_code(T0* a1);
/*HASHED_SET[STRING]*/T6 r1127has(T1127* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1128common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128put(T1128* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1128new_node(T1128* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128set_cache_user(T1128* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1128prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1128buckets_item(T1286 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r1128should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r1128key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1128reference_at(T1128* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1128prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1128dispose_node(T1128* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1128item(T1128* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128clear_count(T1128* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128create_with_capacity(T1128* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128increase_capacity(T1128* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128with_capacity(T1128* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1128next_generation(T1128* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1128hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1129common_free_nodes(void);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129make(T1129* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1129new_node(T1129* C,T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r1129safe_equal(T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129add(T1129* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129set_cache_user(T1129* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1129prime_capacity(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r1129should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1129prime_number_ceiling(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1129dispose_node(T1129* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1129item(T1129* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129clear_count(T1129* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129create_with_capacity(T1129* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129increase_capacity(T1129* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129next_generation(T1129* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1129hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1129do_all(T1129* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1131common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1131make(T1131* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1131key(T1131* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1131new_node(T1131* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1131add(T1131* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1131set_cache_user(T1131* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1131prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1131buckets_item(T1293 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r1131should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r1131key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1131reference_at(T1131* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1131prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1131item(T1131* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1131create_with_capacity(T1131* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1131increase_capacity(T1131* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1131next_generation(T1131* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1131hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1134common_free_nodes(void);
/*HASHED_SET[AGENT_ARGS]*/void r1134make(T1134* C);
/*HASHED_SET[AGENT_ARGS]*/T0* r1134new_node(T1134* C,T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/T6 r1134safe_equal(T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/void r1134add(T1134* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/void r1134set_cache_user(T1134* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T2 r1134prime_capacity(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r1134should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[AGENT_ARGS]*/T2 r1134prime_number_ceiling(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1134dispose_node(T1134* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1134item(T1134* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r1134clear_count(T1134* C);
/*HASHED_SET[AGENT_ARGS]*/void r1134create_with_capacity(T1134* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r1134increase_capacity(T1134* C);
/*HASHED_SET[AGENT_ARGS]*/void r1134next_generation(T1134* C);
/*HASHED_SET[AGENT_ARGS]*/T2 r1134hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r1134has(T1134* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135make(T1135* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135key(T1135* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135new_node(T1135* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135set_cache_user(T1135* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1135prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135buckets_item(T1298 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T6 r1135should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1135prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135dispose_node(T1135* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135item(T1135* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135clear_count(T1135* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135create_with_capacity(T1135* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135increase_capacity(T1135* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135next_generation(T1135* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1135fast_put(T1135* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1135hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1135fast_reference_at(T1135* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r1138set_item(T1138* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]*/void r1139make(T1139* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1141common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1141new_node(T1141* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1141add(T1141* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1141set_cache_user(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1141prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1141buckets_item(T1301 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1141should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1141key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1141reference_at(T1141* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1141prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1141item(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1141create_with_capacity(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1141increase_capacity(T1141* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1141with_capacity(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1141next_generation(T1141* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1141hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1143common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1143new_node(T1143* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1143add(T1143* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1143prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1143buckets_item(T1307 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1143should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1143key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1143reference_at(T1143* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1143prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1143dispose_node(T1143* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1143clear_count(T1143* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1143create_with_capacity(T1143* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1143increase_capacity(T1143* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1143with_capacity(T1143* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1143next_generation(T1143* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1143hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1143has(T1143* C,T0* a1);
/*QUEUE[TYPE]*/T0* r1144first(T1144* C);
/*QUEUE[TYPE]*/void r1144put(T1144* C,T0* a1,T2 a2);
/*QUEUE[TYPE]*/void r1144add(T1144* C,T0* a1);
/*QUEUE[TYPE]*/void r1144move(T1144* C,T2 a1,T2 a2,T2 a3);
/*QUEUE[TYPE]*/void r1144collection_with_capacity(T1144* C,T2 a1,T2 a2);
/*QUEUE[TYPE]*/T2 r1144wrap_point(T1144* C);
/*QUEUE[TYPE]*/void r1144mark_native_arrays(T1144* C);
/*QUEUE[TYPE]*/void r1144make_space_for_one(T1144* C);
/*QUEUE[TYPE]*/void r1144squeeze_bubble(T1144* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*QUEUE[TYPE]*/T0* r1144item(T1144* C,T2 a1);
/*QUEUE[TYPE]*/T2 r1144storage_upper(T1144* C);
/*QUEUE[TYPE]*/void r1144remove(T1144* C);
/*QUEUE[TYPE]*/T6 r1144is_empty(T1144* C);
/*QUEUE[TYPE]*/T6 r1144is_wrapped(T1144* C);
/*QUEUE[TYPE]*/T2 r1144storage_index(T1144* C,T2 a1);
/*QUEUE[TYPE]*/void r1144with_capacity(T1144* C,T2 a1);
/*QUEUE[TYPE]*/void r1144next_generation(T1144* C);
/*QUEUE[TYPE]*/T2 r1144count(T1144* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1145common_free_nodes(void);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145make(T1145* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1145new_node(T1145* C,T335 a1,T0* a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r1145safe_equal(T335 a1,T335 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145add(T1145* C,T335 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145set_cache_user(T1145* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1145prime_capacity(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r1145should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1145prime_number_ceiling(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1145dispose_node(T1145* C,T0* a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T335 r1145item(T1145* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145clear_count(T1145* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145create_with_capacity(T1145* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145increase_capacity(T1145* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1145next_generation(T1145* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1145hash_code(T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146make(T1146* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T335 r1146key(T1146* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146put(T1146* C,T0* a1,T335 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146new_node(T1146* C,T0* a1,T335 a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146add(T1146* C,T0* a1,T335 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146at(T1146* C,T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146set_cache_user(T1146* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1146prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146buckets_item(T1313 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1146should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1146key_safe_equal(T335 a1,T335 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146reference_at(T1146* C,T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1146prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146dispose_node(T1146* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1146item(T1146* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146remove(T1146* C,T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146clear_count(T1146* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146create_with_capacity(T1146* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146increase_capacity(T1146* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1146next_generation(T1146* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1146hash_code(T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1146has(T1146* C,T335 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1151common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1151new_node(T1151* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1151add(T1151* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1151prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1151buckets_item(T1316 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r1151should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1151prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1151fast_at(T1151* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1151create_with_capacity(T1151* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1151increase_capacity(T1151* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r1151fast_has(T1151* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1151with_capacity(T1151* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1151next_generation(T1151* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1151fast_put(T1151* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1151hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1151fast_reference_at(T1151* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1155set_item(T1155* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1156make(T1156* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1158set_item(T1158* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]*/void r1159make(T1159* C,T10 a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[HASHED_STRING]*/void r1162make(T1162* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[HASHED_STRING]]*/void r1165set_item(T1165* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1166common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1166make(T1166* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1166new_node(T1166* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1166add(T1166* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1166prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1166buckets_item(T1321 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T6 r1166should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1166prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1166create_with_capacity(T1166* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1166increase_capacity(T1166* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1166next_generation(T1166* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1166hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1166fast_reference_at(T1166* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1169set_item(T1169* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]*/void r1170make(T1170* C,T0* a1,T0* a2,T0* a3);
/*RING_ARRAY[SE_CONFIG]*/void r1173make(T1173* C,T2 a1,T2 a2);
/*RING_ARRAY[SE_CONFIG]*/void r1173add_first(T1173* C,T0* a1);
/*RING_ARRAY[SE_CONFIG]*/void r1173put(T1173* C,T0* a1,T2 a2);
/*RING_ARRAY[SE_CONFIG]*/void r1173move(T1173* C,T2 a1,T2 a2,T2 a3);
/*RING_ARRAY[SE_CONFIG]*/T2 r1173wrap_point(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/void r1173mark_native_arrays(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/void r1173make_space_for_one(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/void r1173squeeze_bubble(T1173* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*RING_ARRAY[SE_CONFIG]*/T0* r1173item(T1173* C,T2 a1);
/*RING_ARRAY[SE_CONFIG]*/T2 r1173storage_upper(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/void r1173clear_all(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/T6 r1173is_empty(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/T6 r1173is_wrapped(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/T2 r1173storage_index(T1173* C,T2 a1);
/*RING_ARRAY[SE_CONFIG]*/void r1173set_all_with(T1173* C,T0* a1);
/*RING_ARRAY[SE_CONFIG]*/void r1173next_generation(T1173* C);
/*RING_ARRAY[SE_CONFIG]*/T2 r1173count(T1173* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1174common_free_nodes(void);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1174make(T1174* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1174put(T1174* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1174new_node(T1174* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1174prime_capacity(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1174buckets_item(T1327 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1174should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1174reference_at(T1174* C,T0* a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1174key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1174prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1174create_with_capacity(T1174* C,T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1174increase_capacity(T1174* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1174next_generation(T1174* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1174hash_code(T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1179make(T1179* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1180set_item(T1180* C,T0* a1);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1186make(T1186* C,T2 a1,T2 a2);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T0* r1186first(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1186mark_native_arrays(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T2 r1186storage_upper(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1186clear_all(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T6 r1186is_empty(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T6 r1186is_wrapped(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T2 r1186storage_index(T1186* C,T2 a1);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1186set_all_with(T1186* C,T0* a1);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1186next_generation(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1186remove_first(T1186* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T2 r1186count(T1186* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189common_free_nodes(void);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189make(T1189* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189new_node(T1189* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189add(T1189* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189at(T1189* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1189prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189buckets_item(T1333 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1189should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189reference_at(T1189* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1189key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1189prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189dispose_node(T1189* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189clear_count(T1189* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189create_with_capacity(T1189* C,T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189increase_capacity(T1189* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189next_generation(T1189* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1189hash_code(T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1189new_iterator_on_keys(T1189* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1189has(T1189* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189_P_295_add(T1189* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189_P_295_clear_count(T1189* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1189_P_295_create_with_capacity(T1189* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T1190*create1190make(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190common_free_nodes(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190make(T1190* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190key(T1190* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190put(T1190* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190new_node(T1190* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190add(T1190* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190set_cache_user(T1190* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190at(T1190* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1190prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190buckets_item(T1048 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1190should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1190key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190reference_at(T1190* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1190prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190dispose_node(T1190* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190item(T1190* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190remove(T1190* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190clear_count(T1190* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190create_with_capacity(T1190* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190increase_capacity(T1190* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190next_generation(T1190* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1190hash_code(T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1190new_iterator_on_keys(T1190* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1190has(T1190* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190_P_295_put(T1190* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190_P_295_add(T1190* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190_P_295_clear_count(T1190* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1190_P_295_create_with_capacity(T1190* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1192common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1192make(T1192* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1192key(T1192* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1192new_node(T1192* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1192add(T1192* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1192set_cache_user(T1192* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1192prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1192buckets_item(T1340 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1192should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1192key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1192reference_at(T1192* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1192prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1192item(T1192* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1192create_with_capacity(T1192* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1192increase_capacity(T1192* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1192next_generation(T1192* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1192hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1195common_free_nodes(void);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1195make(T1195* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1195put(T1195* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1195new_node(T1195* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1195prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1195buckets_item(T1345 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1195should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1195key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1195prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1195create_with_capacity(T1195* C,T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1195increase_capacity(T1195* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1195next_generation(T1195* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1195hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1195has(T1195* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1196set_item(T1196* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASSES,STRING]*/void r1197make(T1197* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1199set_item(T1199* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]*/void r1200make(T1200* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[CLASS_NAME]*/void r1203make(T1203* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[CLASS_NAME]]*/void r1204set_item(T1204* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1205set_item(T1205* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]*/void r1206make(T1206* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1208common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1208make(T1208* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1208new_node(T1208* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1208add(T1208* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1208prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1208buckets_item(T1346 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1208should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1208prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1208create_with_capacity(T1208* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1208increase_capacity(T1208* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1208fast_has(T1208* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1208next_generation(T1208* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1208hash_code(T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1208fast_reference_at(T1208* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211make(T1211* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211key(T1211* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211put(T1211* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211new_node(T1211* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211add(T1211* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211set_cache_user(T1211* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211copy(T1211* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1211prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211buckets_item(T1352 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1211should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1211key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1211prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211dispose_node(T1211* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211item(T1211* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211clear_count(T1211* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211twin(T1211* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211create_with_capacity(T1211* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211increase_capacity(T1211* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211with_capacity(T1211* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211next_generation(T1211* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1211fast_put(T1211* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1211hash_code(T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1211fast_reference_at(T1211* C,T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212make(T1212* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1212common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1212new_node(T1212* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212add(T1212* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1212prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1212buckets_item(T1355 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T6 r1212should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1212prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212create_with_capacity(T1212* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212increase_capacity(T1212* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212with_capacity(T1212* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212next_generation(T1212* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1212fast_put(T1212* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1212hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1212fast_reference_at(T1212* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1230common_free_nodes(void);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1230put(T1230* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1230new_node(T1230* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1230add(T1230* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1230internal_key(T1230* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1230prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1230buckets_item(T1366 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1230should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1230key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1230reference_at(T1230* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1230prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1230create_with_capacity(T1230* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1230increase_capacity(T1230* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1230with_capacity(T1230* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1230next_generation(T1230* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1230hash_code(T0* a1);
/*HASHED_SET_NODE[LIVE_TYPE]*/void r1234make(T1234* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[LIVE_TYPE]]*/void r1235set_item(T1235* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1237set_item(T1237* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1238make(T1238* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET[LIVE_TYPE]*/T0* r1240a_new_node(void);
/*AVL_SET[LIVE_TYPE]*/void r1240make(T1240* C);
/*AVL_SET[LIVE_TYPE]*/T0* r1240fast_do_insert(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/T0* r1240new_node(T1240* C);
/*AVL_SET[LIVE_TYPE]*/T0* r1240left_grown(T1240* C,T0* a1);
extern T0*oBC728common_lost_nodes;
extern int fBC728common_lost_nodes;
/*AVL_SET[LIVE_TYPE]*/T0* r1240common_lost_nodes(void);
/*AVL_SET[LIVE_TYPE]*/void r1240build_map(T1240* C);
/*AVL_SET[LIVE_TYPE]*/void r1240set_item(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/T0* r1240item(T1240* C,T2 a1);
/*AVL_SET[LIVE_TYPE]*/T0* r1240right_grown(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1240discard_node(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1240clear_count(T1240* C);
/*AVL_SET[LIVE_TYPE]*/void r1240clear_nodes(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/T6 r1240fast_has(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1240next_generation(T1240* C);
/*AVL_SET[LIVE_TYPE]*/T6 r1240ordered(T0* a1,T0* a2);
/*AVL_SET[LIVE_TYPE]*/void r1240do_all(T1240* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1240fast_add(T1240* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]*/void r1246make(T1246* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1247set_item(T1247* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1250set_item(T1250* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1251make(T1251* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]*/void r1255make(T1255* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1256set_item(T1256* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1260make(T1260* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1262common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1262make(T1262* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1262new_node(T1262* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1262add(T1262* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1262prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1262buckets_item(T1377 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T6 r1262should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1262prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1262create_with_capacity(T1262* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1262increase_capacity(T1262* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1262next_generation(T1262* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1262hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1262fast_reference_at(T1262* C,T0* a1);
/*WEAK_REFERENCE[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1264set_item(T1264* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1265set_item(T1265* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]*/void r1266make(T1266* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]*/void r1271make(T1271* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1272set_item(T1272* C,T0* a1);
/*HASHED_SET_NODE[TYPE]*/void r1276make(T1276* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[TYPE]]*/void r1277set_item(T1277* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1278set_item(T1278* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]*/void r1279make(T1279* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[STRING]*/void r1282make(T1282* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[STRING]]*/void r1283set_item(T1283* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1284set_item(T1284* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]*/void r1285make(T1285* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[MANIFEST_GENERIC]*/void r1288make(T1288* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1289set_item(T1289* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1291make(T1291* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1292set_item(T1292* C,T0* a1);
/*HASHED_SET_NODE[AGENT_ARGS]*/void r1295make(T1295* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[AGENT_ARGS]]*/void r1296set_item(T1296* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]*/void r1297make(T1297* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1299set_item(T1299* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1302make(T1302* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1303set_item(T1303* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1305set_item(T1305* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1306make(T1306* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]*/void r1309make(T1309* C,T335 a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1310set_item(T1310* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1311set_item(T1311* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1312make(T1312* C,T0* a1,T335 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1314set_item(T1314* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]*/void r1315make(T1315* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1319set_item(T1319* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1320make(T1320* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET[GRAPH_NODE]*/T0* r1324common_free_nodes(void);
/*HASHED_SET[GRAPH_NODE]*/void r1324make(T1324* C);
/*HASHED_SET[GRAPH_NODE]*/T0* r1324new_node(T1324* C,T0* a1,T0* a2);
/*HASHED_SET[GRAPH_NODE]*/void r1324set_cache_user(T1324* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T2 r1324prime_capacity(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T6 r1324should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[GRAPH_NODE]*/T2 r1324prime_number_ceiling(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1324dispose_node(T1324* C,T0* a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1324item(T1324* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1324clear_count(T1324* C);
/*HASHED_SET[GRAPH_NODE]*/void r1324create_with_capacity(T1324* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1324increase_capacity(T1324* C);
/*HASHED_SET[GRAPH_NODE]*/void r1324next_generation(T1324* C);
/*HASHED_SET[GRAPH_NODE]*/T2 r1324hash_code(T0* a1);
/*HASHED_SET[GRAPH_NODE]*/void r1324fast_add(T1324* C,T0* a1);
/*HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]*/void r1326make(T1326* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1328set_item(T1328* C,T0* a1);
/*WEAK_REFERENCE[STRING]*/void r1330set_item(T1330* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1334make(T1334* C,T0* a1,T0* a2,T0* a3);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1335make(T1335* C,T0* a1);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T6 r1335is_off(T1335* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1335next(T1335* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T2 r1335iterable_generation(T1335* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T0* r1335item(T1335* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1335start(T1335* C);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1337set_item(T1337* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLUSTER,STRING]*/void r1339make(T1339* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1341set_item(T1341* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1343set_item(T1343* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]*/void r1344make(T1344* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]*/void r1347make(T1347* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1348set_item(T1348* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1350set_item(T1350* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]*/void r1351make(T1351* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1353set_item(T1353* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]*/void r1354make(T1354* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1362common_free_nodes(void);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1362make(T1362* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1362put(T1362* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1362new_node(T1362* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1362prime_capacity(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1362buckets_item(T1389 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1362should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1362key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1362reference_at(T1362* C,T0* a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1362prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1362create_with_capacity(T1362* C,T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1362increase_capacity(T1362* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1362next_generation(T1362* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1362hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1364set_item(T1364* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]*/void r1365make(T1365* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET_NODE[LIVE_TYPE]*/T0* r1368rotate_left(T1368* C);
/*AVL_SET_NODE[LIVE_TYPE]*/void r1368set(T1368* C,T0* a1);
/*AVL_SET_NODE[LIVE_TYPE]*/T0* r1368rotate_right(T1368* C);
/*AVL_SET_NODE[LIVE_TYPE]*/T6 r1368fast_has(T1368* C,T0* a1);
/*AVL_SET_NODE[LIVE_TYPE]*/T6 r1368ordered(T0* a1,T0* a2);
/*AVL_SET_NODE[LIVE_TYPE]*/void r1368map_in(T1368* C,T0* a1);
/*WEAK_REFERENCE[AVL_SET_NODE[LIVE_TYPE]]*/void r1371set_item(T1371* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1372common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1372make(T1372* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1372new_node(T1372* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1372add(T1372* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1372prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1372buckets_item(T1394 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1372should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1372key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1372reference_at(T1372* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1372prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1372create_with_capacity(T1372* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1372increase_capacity(T1372* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1372next_generation(T1372* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1372hash_code(T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1378make(T1378* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1379set_item(T1379* C,T0* a1);
/*HASHED_SET_NODE[GRAPH_NODE]*/void r1381make(T1381* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[GRAPH_NODE]]*/void r1382set_item(T1382* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1384common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1384make(T1384* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1384put(T1384* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1384new_node(T1384* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1384prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1384buckets_item(T1401 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1384should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1384key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1384prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1384dispose_node(T1384* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1384remove(T1384* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1384create_with_capacity(T1384* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1384increase_capacity(T1384* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1384next_generation(T1384* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1384hash_code(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1385common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1385make(T1385* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1385put(T1385* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1385new_node(T1385* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1385prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1385buckets_item(T1404 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1385should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1385key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1385prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1385dispose_node(T1385* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1385remove(T1385* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1385create_with_capacity(T1385* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1385increase_capacity(T1385* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1385next_generation(T1385* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1385hash_code(T2 a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1387set_item(T1387* C,T0* a1);
/*HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]*/void r1388make(T1388* C,T0* a1,T0* a2,T0* a3);
/*SAFE_EQUAL[LIVE_TYPE]*/T6 r1391test(T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1392set_item(T1392* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1393make(T1393* C,T0* a1,T0* a2,T0* a3);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T1396*create1396make(void);
extern T0*oBC788common_free_nodes;
extern int fBC788common_free_nodes;
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1396common_free_nodes(void);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1396make(T1396* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1396new_node(T1396* C,T0* a1,T0* a2);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1396go_item(T1396* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1396add_last(T1396* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1396dispose_node(T1396* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1396item(T1396* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1396clear_count(T1396* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1396next_generation(T1396* C);
/*TUPLE[CHARACTER,INTEGER_32]*/T1397*create1397make_2(T3 a1,T2 a2);
/*TUPLE[CHARACTER,INTEGER_32]*/void r1397make_2(T1397* C,T3 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1398a_new_node(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398make(T1398* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1398fast_do_insert(T1398* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398set_value(T1398* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1398new_node(T1398* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398set_value_and_key(T1398* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1398left_grown(T1398* C,T0* a1);
extern T0*oBC849common_lost_nodes;
extern int fBC849common_lost_nodes;
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1398common_lost_nodes(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T2 r1398fast_at(T1398* C,T2 a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1398right_grown(T1398* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398discard_node(T1398* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398clear_count(T1398* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398clear_nodes(T1398* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398next_generation(T1398* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1398fast_put(T1398* C,T2 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T6 r1398ordered(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]*/void r1400make(T1400* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1402set_item(T1402* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]*/void r1403make(T1403* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1405set_item(T1405* C,T0* a1);
/*WEAK_REFERENCE[LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]]*/void r1409set_item(T1409* C,T0* a1);
/*LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]*/void r1410make(T1410* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1411common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1411make(T1411* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1411new_node(T1411* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1411add(T1411* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1411prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1411buckets_item(T1420 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T6 r1411should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1411prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1411create_with_capacity(T1411* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1411increase_capacity(T1411* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1411next_generation(T1411* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1411hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1411fast_reference_at(T1411* C,T0* a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1413rotate_left(T1413* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/void r1413set(T1413* C,T2 a1,T2 a2);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1413rotate_right(T1413* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1413fast_at(T1413* C,T2 a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T6 r1413ordered(T2 a1,T2 a2);
/*WEAK_REFERENCE[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1416set_item(T1416* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1417common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1417make(T1417* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1417new_node(T1417* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1417add(T1417* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1417prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1417buckets_item(T1424 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1417should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1417key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1417reference_at(T1417* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1417prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1417create_with_capacity(T1417* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1417increase_capacity(T1417* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1417next_generation(T1417* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1417hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1418set_item(T1418* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1419make(T1419* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1422set_item(T1422* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1423make(T1423* C,T0* a1,T0* a2,T0* a3);
/*COLLECTION_SORTER[INTEGER_32]*/T2 r1425insert_index(T0* a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1425lt(T2 a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1425lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T0* r1429common_free_nodes(void);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/void r1429make(T1429* C);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T0* r1429new_node(T1429* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T2 r1429prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T0* r1429buckets_item(T1456 a1,T2 a2);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T6 r1429should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T2 r1429prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T0* r1429fast_at(T1429* C,T0* a1);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/void r1429create_with_capacity(T1429* C,T2 a1);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/void r1429increase_capacity(T1429* C);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/void r1429next_generation(T1429* C);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/void r1429fast_put(T1429* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T2 r1429hash_code(T0* a1);
/*HASHED_DICTIONARY[TUPLE[TYPE,TYPE],TYPE]*/T0* r1429fast_reference_at(T1429* C,T0* a1);
/*TUPLE[TYPE,TYPE]*/T1430*create1430make_2(T0* a1,T0* a2);
/*TUPLE[TYPE,TYPE]*/void r1430make_2(T1430* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1431common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1431make(T1431* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1431put(T1431* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1431new_node(T1431* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1431prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1431buckets_item(T1459 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1431should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1431key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1431reference_at(T1431* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1431prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1431create_with_capacity(T1431* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1431increase_capacity(T1431* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1431next_generation(T1431* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1431hash_code(T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1432common_free_nodes(void);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432make(T1432* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1432new_node(T1432* C,T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1432safe_equal(T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432add(T1432* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432set_cache_user(T1432* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1432prime_capacity(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1432should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1432prime_number_ceiling(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1432dispose_node(T1432* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1432item(T1432* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432clear_count(T1432* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432create_with_capacity(T1432* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432increase_capacity(T1432* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432next_generation(T1432* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1432hash_code(T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1432do_all(T1432* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1434common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1434make(T1434* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1434new_node(T1434* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1434add(T1434* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1434set_cache_user(T1434* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1434prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1434buckets_item(T1466 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1434should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1434key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1434reference_at(T1434* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1434prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1434item(T1434* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1434create_with_capacity(T1434* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1434increase_capacity(T1434* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1434next_generation(T1434* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1434hash_code(T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1437common_free_nodes(void);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1437make(T1437* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1437new_node(T1437* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1437add(T1437* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1437set_cache_user(T1437* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1437prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1437buckets_item(T1469 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1437should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1437key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1437reference_at(T1437* C,T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1437prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1437item(T1437* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1437create_with_capacity(T1437* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1437increase_capacity(T1437* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1437next_generation(T1437* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1437hash_code(T0* a1);
/*STACK[AGENT_CREATION]*/void r1438make(T1438* C);
/*STACK[AGENT_CREATION]*/void r1438mark_native_arrays(T1438* C);
/*STACK[AGENT_CREATION]*/void r1438push(T1438* C,T0* a1);
/*STACK[AGENT_CREATION]*/T6 r1438is_empty(T1438* C);
/*STACK[AGENT_CREATION]*/void r1438pop(T1438* C);
/*STACK[AGENT_CREATION]*/T0* r1438top(T1438* C);
/*STACK[AGENT_CREATION]*/void r1438with_capacity(T1438* C,T2 a1);
/*STACK[AGENT_CREATION]*/void r1438next_generation(T1438* C);
/*AVL_SET[POSITION]*/T0* r1439a_new_node(void);
/*AVL_SET[POSITION]*/void r1439make(T1439* C);
/*AVL_SET[POSITION]*/T0* r1439new_node(T1439* C);
/*AVL_SET[POSITION]*/void r1439add(T1439* C,T338 a1);
/*AVL_SET[POSITION]*/T0* r1439left_grown(T1439* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1439common_lost_nodes(void);
/*AVL_SET[POSITION]*/void r1439set_item(T1439* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1439do_insert(T1439* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1439right_grown(T1439* C,T0* a1);
/*AVL_SET[POSITION]*/void r1439discard_node(T1439* C,T0* a1);
/*AVL_SET[POSITION]*/void r1439clear_count(T1439* C);
/*AVL_SET[POSITION]*/void r1439clear_nodes(T1439* C,T0* a1);
/*AVL_SET[POSITION]*/void r1439next_generation(T1439* C);
/*AVL_SET[POSITION]*/T6 r1439ordered(T338 a1,T338 a2);
/*AVL_SET[POSITION]*/T6 r1439has(T1439* C,T338 a1);
/*REFERENCE[E_OLD]*/void r1441clear(T1441* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1444common_free_nodes(void);
/*HASHED_SET[FEATURE_STAMP]*/void r1444make(T1444* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1444new_node(T1444* C,T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/void r1444add(T1444* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1444safe_equal(T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1444prime_capacity(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1444should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1444prime_number_ceiling(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1444dispose_node(T1444* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1444clear_count(T1444* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1444create_with_capacity(T1444* C,T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1444increase_capacity(T1444* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1444next_generation(T1444* C);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1444hash_code(T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1444has(T1444* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TUPLE[TYPE,TYPE],TYPE]*/void r1455make(T1455* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TUPLE[TYPE,TYPE],TYPE]]*/void r1457set_item(T1457* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,TYPE]*/void r1458make(T1458* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1460set_item(T1460* C,T0* a1);
/*HASHED_SET_NODE[NATIVE_PLUG_IN]*/void r1462make(T1462* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1463set_item(T1463* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1464set_item(T1464* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]*/void r1465make(T1465* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1467set_item(T1467* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PLUGIN,STRING]*/void r1468make(T1468* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET_NODE[POSITION]*/T0* r1471rotate_left(T1471* C);
/*AVL_SET_NODE[POSITION]*/void r1471set(T1471* C,T338 a1);
/*AVL_SET_NODE[POSITION]*/T0* r1471rotate_right(T1471* C);
/*AVL_SET_NODE[POSITION]*/T6 r1471ordered(T338 a1,T338 a2);
/*AVL_SET_NODE[POSITION]*/T6 r1471has(T1471* C,T338 a1);
/*WEAK_REFERENCE[AVL_SET_NODE[POSITION]]*/void r1472set_item(T1472* C,T0* a1);
/*HASHED_SET_NODE[FEATURE_STAMP]*/void r1477make(T1477* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1478set_item(T1478* C,T0* a1);
/*SAFE_EQUAL[POSITION]*/T6 r1483test(T338 a1,T338 a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1497quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1497lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1497quick_sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1497lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1497sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1497is_sorted(T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1506make(T1506* C,T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T6 r1506is_off(T1506* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1506next(T1506* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T2 r1506iterable_generation(T1506* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T0* r1506item(T1506* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1506start(T1506* C);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T2 r1507insert_index(T0* a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1507lt(T2 a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1507lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1514common_free_nodes(void);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1514make(T1514* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1514put(T1514* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1514new_node(T1514* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1514prime_capacity(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1514buckets_item(T1522 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1514should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1514key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1514reference_at(T1514* C,T0* a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1514prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1514create_with_capacity(T1514* C,T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1514increase_capacity(T1514* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1514next_generation(T1514* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1514hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1520common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1520make(T1520* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1520new_node(T1520* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1520add(T1520* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1520prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1520buckets_item(T1526 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T6 r1520should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1520prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1520create_with_capacity(T1520* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1520increase_capacity(T1520* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1520next_generation(T1520* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1520hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1520fast_reference_at(T1520* C,T0* a1);
/*HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]*/void r1521make(T1521* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1523set_item(T1523* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]*/void r1527make(T1527* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1528set_item(T1528* C,T0* a1);
/*STACK[EXPRESSION]*/void r1541make(T1541* C);
/*STACK[EXPRESSION]*/void r1541mark_native_arrays(T1541* C);
/*STACK[EXPRESSION]*/void r1541push(T1541* C,T0* a1);
/*STACK[EXPRESSION]*/void r1541pop(T1541* C);
/*STACK[EXPRESSION]*/T0* r1541top(T1541* C);
/*STACK[EXPRESSION]*/void r1541with_capacity(T1541* C,T2 a1);
/*STACK[EXPRESSION]*/void r1541next_generation(T1541* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1542common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1542make(T1542* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1542new_node(T1542* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1542add(T1542* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1542prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1542buckets_item(T1546 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T6 r1542should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1542prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1542create_with_capacity(T1542* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1542increase_capacity(T1542* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1542next_generation(T1542* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1542hash_code(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1542fast_reference_at(T1542* C,T2 a1);
/*SAFE_EQUAL[INTEGER_32]*/T6 r1544test(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]*/void r1547make(T1547* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1548set_item(T1548* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_version_flag(T29* C,T0* a1);
extern T0*oBC32eiffel_parser;
extern int fBC32eiffel_parser;
/*COMPILE_TO_C*/T0* r29eiffel_parser(void);
/*COMPILE_TO_C*/T6 r29is_style_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_output_error_warning_on_flag(T29* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/T6 r29is_version_flag_no_exit(T29* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_relax_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_flat_check_flag(T0* a1);
extern T0*oBC32smart_eiffel;
extern T0*oBC32system_tools;
extern int fBC32system_tools;
/*COMPILE_TO_C*/T0* r29system_tools(void);
/*COMPILE_TO_C*/T6 r29is_cecil_flag(T29* C,T0* a1,T2 a2);
extern T0*oBC31command_arguments;
extern int fBC31command_arguments;
/*COMPILE_TO_C*/T0* r29command_arguments(void);
/*COMPILE_TO_C*/T6 r29ace_file_mode(T29* C);
/*COMPILE_TO_C*/T2 r29argument_count(void);
extern T0*oBC32cpp;
extern int fBC32cpp;
/*COMPILE_TO_C*/T0* r29cpp(void);
/*COMPILE_TO_C*/T6 r29flag_match(T0* a1,T0* a2);
extern T0*oBC32cecil_pool_memory;
/*COMPILE_TO_C*/T6 r29valid_arg_index(T2 a1);
/*COMPILE_TO_C*/T6 r29is_trace_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_o_flag(T29* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/void r29make(T29* C);
/*COMPILE_TO_C*/void r29parse_command_line(T29* C,T2 a1);
extern T0*oBC32echo;
extern int fBC32echo;
/*COMPILE_TO_C*/T0* r29echo(void);
/*COMPILE_TO_C*/T6 r29is_verbose_flag(T0* a1);
/*COMPILE_TO_C*/T0* r29search_for_echo_redirect_flag(T29* C);
extern T0*oBC32string_aliaser;
/*COMPILE_TO_C*/T6 r29is_help_flag(T29* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_no_rescue_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_debug_flag(T0* a1);
extern T0*oBC32ace;
/*COMPILE_TO_C*/T6 r29is_high_memory_compiler(T0* a1);
/*COMPILE_TO_C*/T6 r29is_no_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_safety_check_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_profile(T0* a1);
/*COMPILE_TO_C*/T6 r29is_case_insensitive_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_valid_argument_for_ace_mode(T29* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_manifest_string_trace_flag(T0* a1);
/*COMPILE_TO_C*/void r29search_for_cc_flag(void);
/*COMPILE_TO_C*/T6 r29is_a_compilation_level_flag(T29* C,T0* a1);
extern T0*oBC32id_provider;
extern int fBC32id_provider;
/*COMPILE_TO_C*/T0* r29id_provider(void);
/*COMPILE_TO_C*/void r29search_for_verbose_flag(void);
extern T0*oBC32error_handler;
/*COMPILE_TO_C*/void r29check_for_level(T29* C,T0* a1);
extern int fBC32set_cecil_pool;
/*COMPILE_TO_C*/void r29set_cecil_pool(void);
/*STRING_COMMAND_LINE*/T6 r286is_profile(T0* a1);
/*STRING_COMMAND_LINE*/void r286parse(T0* a1);
extern T0*oBC286command_line_buffer;
extern int fBC286command_line_buffer;
/*STRING_COMMAND_LINE*/T0* r286command_line_buffer(void);
/*STRING_COMMAND_LINE*/T6 r286is_trace_flag(T0* a1);
/*STRING_COMMAND_LINE*/T0* r286echo(void);
/*STRING_COMMAND_LINE*/T0* r286cpp(void);
/*STRING_COMMAND_LINE*/void r286next_option(void);
extern T0*oBC286option_buffer;
extern int fBC286option_buffer;
/*STRING_COMMAND_LINE*/T0* r286option_buffer(void);
/*STRING_COMMAND_LINE*/T0* r286system_tools(void);
/*STRING_COMMAND_LINE*/T6 r286flag_match(T0* a1,T0* a2);
extern T0*oBC108object_suffix;
extern int fBC108object_suffix;
/*SYSTEM_TOOLS*/T0* r108object_suffix(T108* C);
extern T0*oBC108c_mode_memory;
extern int fBC108c_mode_memory;
/*SYSTEM_TOOLS*/T0* r108c_mode_memory(void);
/*SYSTEM_TOOLS*/T0* r108path_h(T108* C);
/*SYSTEM_TOOLS*/T6 r108is_linking_mandatory(void);
/*SYSTEM_TOOLS*/T6 r108is_install(void);
extern T0*oBC32install_memory;
extern T0*oBC108token_buffer;
extern int fBC108token_buffer;
/*SYSTEM_TOOLS*/T0* r108token_buffer(void);
/*SYSTEM_TOOLS*/T0* r108strip_path_or_default(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108linker_command(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r108plugin(T108* C,T0* a1,T0* a2,T338 a3);
/*SYSTEM_TOOLS*/T0* r108absolute_path(T338 a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r108strip_executable(T108* C);
/*SYSTEM_TOOLS*/void r108main_function_return_type_in(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T6 r108is_c_plus_plus_file_path(T0* a1);
/*SYSTEM_TOOLS*/void r108set_alternate_c_mode(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108environment_variable_substitution(T108* C,T0* a1,T0* a2);
extern int fBC108check_c_plus_plus;
/*SYSTEM_TOOLS*/void r108check_c_plus_plus(T108* C);
extern T0*oBC108compiler_list;
extern int fBC108compiler_list;
/*SYSTEM_TOOLS*/T0* r108compiler_list(void);
/*SYSTEM_TOOLS*/void r108append_if_not_already(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108verify_system_name(T108* C);
/*SYSTEM_TOOLS*/void r108add_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r108bad_use_exit(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T2 r108nb_errors(void);
/*SYSTEM_TOOLS*/T0* r108linker_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r108set_c_mode(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108compiler_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r108set_system_name(T108* C,T0* a1);
extern int fBC108add_lib_math;
/*SYSTEM_TOOLS*/void r108add_lib_math(T108* C);
/*SYSTEM_TOOLS*/void r108subdirectory(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T6 r108precompile_header_supported(T108* C);
extern int fBC108set_basic_directory_notation;
/*SYSTEM_TOOLS*/void r108set_basic_directory_notation(T108* C);
/*SYSTEM_TOOLS*/void r108sys_runtime(T108* C,T0* a1,T3 a2);
extern T0*oBC108make_suffix;
extern int fBC108make_suffix;
/*SYSTEM_TOOLS*/T0* r108make_suffix(T108* C);
extern T0*oBC108precompiled_header_suffix;
extern int fBC108precompiled_header_suffix;
/*SYSTEM_TOOLS*/T0* r108precompiled_header_suffix(T108* C);
/*SYSTEM_TOOLS*/T0* r108h_precompiler_command(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108system_name_in(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108echo(void);
extern T0*oBC108external_lib_paths;
extern int fBC108external_lib_paths;
/*SYSTEM_TOOLS*/T0* r108external_lib_paths(void);
extern T0*oBC32tmp_path;
extern int fBC32tmp_path;
/*SYSTEM_TOOLS*/T0* r108tmp_path(void);
extern int fBC108add_lib_profile;
/*SYSTEM_TOOLS*/void r108add_lib_profile(T108* C);
/*SYSTEM_TOOLS*/void r108add_lib_math_do_it_again(T108* C);
extern int fBC108include_config_loadpaths;
/*SYSTEM_TOOLS*/void r108include_config_loadpaths(T108* C);
extern T6 oBC108Scoptions_exists;
extern int fBC108Scoptions_exists;
/*SYSTEM_TOOLS*/T6 r108Scoptions_exists(void);
/*SYSTEM_TOOLS*/void r108set_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r108add_smarteiffel_c_mode_options(T108* C);
/*SYSTEM_TOOLS*/void r108append_tokens(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108add_x_suffix(T108* C,T0* a1);
extern T0*oBC108id_file_path;
extern int fBC108id_file_path;
/*SYSTEM_TOOLS*/T0* r108id_file_path(T108* C);
extern T0*oBC17io;
/*SYSTEM_TOOLS*/T0* r108c_compiler_command(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T2 r108extra_arg(T108* C,T0* a1,T2 a2,T0* a3);
/*SYSTEM_TOOLS*/void r108mandatory_sys_runtime(T108* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r108sys_runtime_(T108* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r108add_loadpath_file(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108read_loadpath_files(T108* C);
/*SYSTEM_TOOLS*/void r108add_config_loadpath_file(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108auto_init_plugins(T108* C);
/*SYSTEM_TOOLS*/void r108add_libraries_from_compiler_options(T108* C);
/*SYSTEM_TOOLS*/void r108add_executable_name(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108environment(T108* C,T0* a1);
extern T0*oBC32tmp_file_read;
/*SYSTEM_TOOLS*/void r108set_automatic_system_name(T108* C);
/*SYSTEM_TOOLS*/void r108set_c_compiler(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108get_started(T108* C);
/*SYSTEM_TOOLS*/void r108file_path(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r108loaded_plugin(T108* C,T0* a1,T0* a2);
extern T0*oBC108c_plus_plus_compiler_list;
extern int fBC108c_plus_plus_compiler_list;
/*SYSTEM_TOOLS*/T0* r108c_plus_plus_compiler_list(void);
extern int fBC108set_config;
/*SYSTEM_TOOLS*/void r108set_config(T108* C);
/*SYSTEM_TOOLS*/void r108set_default_c_mode(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108append_token(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108show_compiler_list_then_exit(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108make(T108* C);
/*SYSTEM_TOOLS*/void r108main_function_exit_in(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108sas_c_compiler_options(T6 a1);
extern T0*oBC108x_suffix;
extern int fBC108x_suffix;
/*SYSTEM_TOOLS*/T0* r108x_suffix(T108* C);
/*SYSTEM_TOOLS*/void r108external_c_files_for_lcc_win32(T108* C,T0* a1);
extern T0*oBC108external_libs;
extern int fBC108external_libs;
/*SYSTEM_TOOLS*/T0* r108external_libs(void);
extern T0*oBC108system_list;
extern int fBC108system_list;
/*SYSTEM_TOOLS*/T0* r108system_list(void);
/*SYSTEM_TOOLS*/void r108add_external_lib_path(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108parent_directory(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108add_external_lib(T108* C,T0* a1);
/*C_PLUGIN_FACTORY*/T979*create979(void);
/*C_PLUGIN_FACTORY*/T0* r979new(T338 a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r100a_parent_edge(T100* C,T6 a1);
extern T0*oBC100and_name;
extern int fBC100and_name;
/*EIFFEL_PARSER*/T0* r100and_name(void);
/*EIFFEL_PARSER*/T6 r100a_local_name2(T100* C);
/*EIFFEL_PARSER*/T6 r100a_local_name1(T100* C);
extern T0*oBC101buffer;
extern int fBC101buffer;
/*EIFFEL_PARSER*/T0* r100buffer(void);
/*EIFFEL_PARSER*/T6 r100a_instruction(T100* C);
/*EIFFEL_PARSER*/T0* r100parse_type_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_function_call(T100* C);
/*EIFFEL_PARSER*/void r100a_new_export_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_conditional(T100* C);
/*EIFFEL_PARSER*/T0* r100connect_to_cecil(T100* C,T0* a1);
/*EIFFEL_PARSER*/T6 r100skip1(T100* C,T3 a1);
/*EIFFEL_PARSER*/T6 r100skip2(T100* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/T6 r100skip3(T100* C,T3 a1,T3 a2,T3 a3);
extern T0*oBC100not_name;
extern int fBC100not_name;
/*EIFFEL_PARSER*/T0* r100not_name(void);
/*EIFFEL_PARSER*/T6 r100a_index_clause(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_true(T100* C);
extern T0*oBC100minus_name;
extern int fBC100minus_name;
/*EIFFEL_PARSER*/T0* r100minus_name(void);
/*EIFFEL_PARSER*/T0* r100a_external(T100* C);
/*EIFFEL_PARSER*/void r100next_char(T100* C);
/*EIFFEL_PARSER*/T0* r100a_external_specification(T100* C);
/*EIFFEL_PARSER*/T0* r100parse_feature_name(T100* C);
/*EIFFEL_PARSER*/T6 r100a_inspect(T100* C);
/*EIFFEL_PARSER*/T6 r100a_prefix(T100* C);
extern T0*oBC100implies_name;
extern int fBC100implies_name;
/*EIFFEL_PARSER*/T0* r100implies_name(void);
/*EIFFEL_PARSER*/void r100a_indexing(T100* C);
/*EIFFEL_PARSER*/T6 r100a_free_operator_usage(T100* C,T6 a1);
/*EIFFEL_PARSER*/T6 r100a_free_operator_definition(T100* C,T6 a1);
/*EIFFEL_PARSER*/T0* r100get_comment(T100* C);
/*EIFFEL_PARSER*/void r100echo_num(T11 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r100a_keyword_false(T100* C);
/*EIFFEL_PARSER*/void r100integer_overflow_error(T100* C,T2 a1,T2 a2,T0* a3);
/*EIFFEL_PARSER*/T6 r100a_keyword_void(T100* C);
/*EIFFEL_PARSER*/T0* r100parse_c_name(T100* C);
extern T0*oBC100inline_agents;
extern int fBC100inline_agents;
/*EIFFEL_PARSER*/T0* r100inline_agents(void);
extern T6 oBC100no_static_simplify;
extern int fBC100no_static_simplify;
/*EIFFEL_PARSER*/T6 r100no_static_simplify(void);
/*EIFFEL_PARSER*/T6 r100a_rename_pair(T100* C);
/*EIFFEL_PARSER*/void r100error_handler_append_info_about_feature_name(void);
/*EIFFEL_PARSER*/void r100void_current_comparison_check_(T0* a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_procedure_call(T100* C);
/*EIFFEL_PARSER*/T6 r100a_class_name(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_precursor(T100* C);
/*EIFFEL_PARSER*/T6 r100a_writable(T100* C);
/*EIFFEL_PARSER*/void r100void_current_comparison_check(T0* a1,T0* a2);
extern T0*oBC100a_assertion_buffer;
extern int fBC100a_assertion_buffer;
/*EIFFEL_PARSER*/T0* r100a_assertion_buffer(void);
extern T0*oBC100gt_name;
extern int fBC100gt_name;
/*EIFFEL_PARSER*/T0* r100gt_name(void);
/*EIFFEL_PARSER*/void r100inside_function_precursor_check(T100* C,T0* a1);
extern T0*oBC32or_else_name;
extern int fBC32or_else_name;
/*EIFFEL_PARSER*/T0* r100or_else_name(void);
/*EIFFEL_PARSER*/void r100no_void_after_elseif_check(T0* a1);
/*EIFFEL_PARSER*/T6 r100a_binary(T100* C,T338 a1);
extern T0*oBC101lcs;
extern int fBC101lcs;
/*EIFFEL_PARSER*/T0* r100lcs(void);
/*EIFFEL_PARSER*/T2 r100a_when_part(T100* C,T2 a1,T0* a2);
extern T0*oBC100unused_tmp_features;
extern int fBC100unused_tmp_features;
/*EIFFEL_PARSER*/T0* r100unused_tmp_features(void);
/*EIFFEL_PARSER*/void r100show_nb_errors(void);
/*EIFFEL_PARSER*/void r100a_feature_clause(T100* C);
/*EIFFEL_PARSER*/void r100unknown_external_language(T0* a1);
/*EIFFEL_PARSER*/T0* r100to_call(T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r100a_infix(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_result(T100* C);
extern T0*oBC100ge_name;
extern int fBC100ge_name;
/*EIFFEL_PARSER*/T0* r100ge_name(void);
/*EIFFEL_PARSER*/T6 r100an_allowed_expression_in_when_of_inspect(T100* C);
/*EIFFEL_PARSER*/T338 r100current_position(T100* C);
/*EIFFEL_PARSER*/T6 r100a_feature_name_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_r10(T100* C,T6 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC100muls_name;
extern int fBC100muls_name;
/*EIFFEL_PARSER*/T0* r100muls_name(void);
extern T0*oBC100sharp_muls_name;
extern int fBC100sharp_muls_name;
/*EIFFEL_PARSER*/T0* r100sharp_muls_name(void);
/*EIFFEL_PARSER*/void r100create_infix_prefix(T100* C,T6 a1,T2 a2,T2 a3);
/*EIFFEL_PARSER*/void r100show_nb_warnings(void);
/*EIFFEL_PARSER*/void r100a_base_class_name1(T100* C);
/*EIFFEL_PARSER*/T6 r100a_check(T100* C);
/*EIFFEL_PARSER*/T6 r100a_feature_name(T100* C);
/*EIFFEL_PARSER*/T6 r100a_character_constant(T100* C,T1 a1);
/*EIFFEL_PARSER*/T6 r100a_manifest_string(T100* C,T6 a1);
/*EIFFEL_PARSER*/T6 r100a_loop(T100* C);
/*EIFFEL_PARSER*/T6 r100a_index_value(T100* C);
/*EIFFEL_PARSER*/T0* r100a_precursor_type_mark(T100* C,T338 a1);
/*EIFFEL_PARSER*/T0* r100a_actuals(T100* C);
/*EIFFEL_PARSER*/T0* r100a_external_name(T100* C);
extern T0*oBC100pow_name;
extern int fBC100pow_name;
/*EIFFEL_PARSER*/T0* r100pow_name(void);
/*EIFFEL_PARSER*/T6 r100a_manifest_or_type_test(T100* C,T1 a1);
/*EIFFEL_PARSER*/void r100echo_information(T100* C);
/*EIFFEL_PARSER*/T0* r100echo(void);
/*EIFFEL_PARSER*/void r100go_back_at(T100* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r100a_address_of(T100* C);
/*EIFFEL_PARSER*/T6 r100a_feature_declaration(T100* C);
/*EIFFEL_PARSER*/T6 r100a_formal_generic_type_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_current(T100* C);
/*EIFFEL_PARSER*/T0* r100a_routine_body(T100* C);
/*EIFFEL_PARSER*/T2 r100nb_warnings(void);
/*EIFFEL_PARSER*/T6 r100a_static_type_mark(T100* C);
/*EIFFEL_PARSER*/T338 r100pos(T100* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r100a_assignment_call_assigner(T100* C,T6 a1);
/*EIFFEL_PARSER*/T0* r100a_routine(T100* C);
/*EIFFEL_PARSER*/void r100a_class_declaration(T100* C);
/*EIFFEL_PARSER*/T6 r100a_expression(T100* C);
extern T0*oBC100slash_slash_name;
extern int fBC100slash_slash_name;
/*EIFFEL_PARSER*/T0* r100slash_slash_name(void);
/*EIFFEL_PARSER*/T0* r100mandatory_writable(T100* C);
extern T0*oBC32parser_buffer;
extern int fBC32parser_buffer;
/*EIFFEL_PARSER*/T0* r100parser_buffer(void);
/*EIFFEL_PARSER*/T6 r100a_e1(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e2(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e3(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e4(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e5(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e6(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e7(T100* C);
/*EIFFEL_PARSER*/void r100a_rename_list(T100* C);
/*EIFFEL_PARSER*/T0* r100a_clients(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e8(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e9(T100* C);
extern T0*oBC100faof;
extern int fBC100faof;
/*EIFFEL_PARSER*/T0* r100faof(void);
/*EIFFEL_PARSER*/T6 r100a_assignment_or_procedure_call(T100* C);
extern T0*oBC32mini_buffer;
/*EIFFEL_PARSER*/T6 r100a_c_inline_c(T100* C);
/*EIFFEL_PARSER*/void r100no_void_check(T0* a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_c_inline_h(T100* C);
extern T0*oBC101unicode_string_buffer;
extern int fBC101unicode_string_buffer;
/*EIFFEL_PARSER*/T0* r100unicode_string_buffer(void);
/*EIFFEL_PARSER*/T6 r100a_keyword(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_parent_list(T100* C);
/*EIFFEL_PARSER*/T0* r100to_proc_call(T100* C,T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T0* r100analyse_class(T100* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/T0* r100a_then_compound(T100* C);
/*EIFFEL_PARSER*/T2 r100nb_errors(void);
/*EIFFEL_PARSER*/void r100a_r1(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r2(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r3(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r4(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r5(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r6(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r7(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r8(T100* C,T0* a1);
/*EIFFEL_PARSER*/T6 r100a_retry(T100* C);
/*EIFFEL_PARSER*/void r100make(T100* C);
/*EIFFEL_PARSER*/void r100anchored_creation_check(T0* a1);
/*EIFFEL_PARSER*/T6 r100a_create_expression(T100* C);
extern T0*oBC100or_name;
extern int fBC100or_name;
/*EIFFEL_PARSER*/T0* r100or_name(void);
/*EIFFEL_PARSER*/T6 r100a_debug(T100* C);
/*EIFFEL_PARSER*/void r100err_exp(T338 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/T0* r100a_inline_agent(T100* C);
/*EIFFEL_PARSER*/void r100show_nb(T2 a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_type_mark_inside_client_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_formal_arg_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_boolean_constant(T100* C);
/*EIFFEL_PARSER*/void r100a_creation_clause(T100* C,T338 a1);
/*EIFFEL_PARSER*/T0* r100id_provider(void);
extern T0*oBC100plus_name;
extern int fBC100plus_name;
/*EIFFEL_PARSER*/T0* r100plus_name(void);
/*EIFFEL_PARSER*/T6 r100a_ordinary_feature_name_or_local_name(T100* C);
extern T0*oBC100backslash_backslash_name;
extern int fBC100backslash_backslash_name;
/*EIFFEL_PARSER*/T0* r100backslash_backslash_name(void);
extern T0*oBC100sharp_plus_name;
extern int fBC100sharp_plus_name;
/*EIFFEL_PARSER*/T0* r100sharp_plus_name(void);
/*EIFFEL_PARSER*/T0* r100analyse_buffer(T100* C);
/*EIFFEL_PARSER*/T0* r100a_assertion(T100* C);
extern T0*oBC32omitted_client_list;
/*EIFFEL_PARSER*/T0* r100expression_with_comment(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_local_var_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_non_allowed_very_strange_identifier(T100* C);
/*EIFFEL_PARSER*/T6 r100a_old_creation(T100* C);
/*EIFFEL_PARSER*/T6 r100a_tag_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_creation_keyword(T100* C);
/*EIFFEL_PARSER*/T6 r100a_create_instruction(T100* C);
extern T0*oBC100xor_name;
extern int fBC100xor_name;
/*EIFFEL_PARSER*/T0* r100xor_name(void);
/*EIFFEL_PARSER*/T6 r100a_possibly_frozen_feature_name(T100* C);
extern T0*oBC100lt_name;
extern int fBC100lt_name;
/*EIFFEL_PARSER*/T0* r100lt_name(void);
extern T0*oBC100slash_name;
extern int fBC100slash_name;
/*EIFFEL_PARSER*/T0* r100slash_name(void);
/*EIFFEL_PARSER*/T6 r100a_base_class_name(T100* C);
extern T0*oBC100sharp_minus_name;
extern int fBC100sharp_minus_name;
/*EIFFEL_PARSER*/T0* r100sharp_minus_name(void);
extern T0*oBC32and_then_name;
extern int fBC32and_then_name;
/*EIFFEL_PARSER*/T0* r100and_then_name(void);
/*EIFFEL_PARSER*/T0* r100a_compound1(T100* C);
/*EIFFEL_PARSER*/T0* r100a_compound2(T100* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/void r100a_formal_generic_list(T100* C);
/*EIFFEL_PARSER*/void r100disconnect(T100* C);
extern T0*oBC100le_name;
extern int fBC100le_name;
/*EIFFEL_PARSER*/T0* r100le_name(void);
/*EIFFEL_PARSER*/T6 r100a_type_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e10(T100* C);
/*EIFFEL_PARSER*/void r100show_total_time(T100* C);
/*EIFFEL_PARSER*/T6 r100manifest_just_after_a_dot(T100* C,T3 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/void r100update_last_manifest_string(T100* C,T338 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*EIFFEL_PARSER*/void r100unused_once_warning_check(T100* C);
/*EIFFEL_PARSER*/T6 r100skip1unless2(T100* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/void r100valid_parent_edge_type_check(T0* a1);
/*EIFFEL_PARSER*/void r100skip_comments(T100* C);
/*EIFFEL_PARSER*/T6 r100just_after_a_dot(T100* C,T6 a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_unary(T100* C);
/*EIFFEL_PARSER*/T6 r100a_argument(T100* C);
/*EIFFEL_PARSER*/T0* r100static_simplify(T0* a1);
/*ECHO*/void r121put_line(T121* C,T0* a1);
/*ECHO*/void r121make(T121* C);
/*ECHO*/void r121tfr_connect_or_exit(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121before_exit_close(T121* C);
/*ECHO*/void r121w_put_string(T121* C,T0* a1);
/*ECHO*/void r121file_renaming(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121tfr_connect(T121* C,T0* a1,T0* a2);
extern T0*oBC17std_output;
extern int fBC17std_output;
/*ECHO*/T0* r121std_output(void);
/*ECHO*/void r121print_count(T121* C,T0* a1,T2 a2);
/*ECHO*/T0* r121getenv(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121tfw_connect(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121w_put_character(T121* C,T3 a1);
/*ECHO*/void r121put_new_line(T121* C);
/*ECHO*/void r121put_string(T121* C,T0* a1);
/*ECHO*/T0* r121system_tools(void);
/*ECHO*/void r121put_real_format(T121* C,T5 a1,T2 a2);
/*ECHO*/void r121w_put_line(T121* C,T0* a1);
/*ECHO*/void r121put_integer(T121* C,T2 a1);
extern T0*oBC17std_error;
/*ECHO*/void r121file_removing(T121* C,T0* a1);
/*ECHO*/void r121w_put_integer(T121* C,T2 a1);
/*ECHO*/void r121redirect_output_on(T121* C,T0* a1);
/*ECHO*/void r121put_character(T121* C,T3 a1);
/*ACE*/T338 r274current_position(T274* C);
/*ACE*/T0* r274cecil_pool(void);
extern T0*oBC274clusters_;
extern int fBC274clusters_;
/*ACE*/T0* r274clusters_(void);
/*ACE*/T0* r274cpp(void);
/*ACE*/void r274go_back_at(T274* C,T2 a1,T2 a2);
/*ACE*/T6 r274no_check(T274* C);
/*ACE*/T2 r274class_text_count(void);
extern T0*oBC274root_class_names;
extern int fBC274root_class_names;
/*ACE*/T0* r274root_class_names(void);
/*ACE*/T6 r274all_check(T274* C);
/*ACE*/T0* r274buffer(void);
/*ACE*/T0* r274a_string(T274* C);
/*ACE*/T6 r274a_manifest_string(T274* C,T6 a1);
/*ACE*/void r274fatal_error_in(T274* C,T0* a1);
/*ACE*/void r274parse_include(T274* C);
/*ACE*/void r274set_highest_encountered_level(T274* C,T2 a1);
/*ACE*/T0* r274a_identifier(T274* C);
/*ACE*/T0* r274class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T0* r274a_debug_key(T274* C);
/*ACE*/T0* r274a_split_key(T274* C);
/*ACE*/T6 r274a_cluster_clause_list(T274* C);
/*ACE*/void r274add_loadpath(T0* a1,T0* a2,T2 a3,T6 a4);
/*ACE*/T6 r274a_keyword(T274* C,T0* a1);
/*ACE*/T0* r274a_cecil_file(T274* C);
/*ACE*/void r274skip_comments(T274* C);
/*ACE*/void r274set_root_class_name_using(T0* a1);
extern T0*oBC274pov_classes;
extern int fBC274pov_classes;
/*ACE*/T0* r274pov_classes(void);
/*ACE*/T6 r274a_option_in_cluster_properties(T274* C);
/*ACE*/T6 r274default_debug(T274* C,T0* a1);
extern T0*oBC274no_pov_classes;
extern int fBC274no_pov_classes;
/*ACE*/T0* r274no_pov_classes(void);
/*ACE*/void r274may_expand_var(T274* C);
/*ACE*/T0* r274parser_buffer(void);
/*ACE*/void r274new_universe_entry(T2 a1,T0* a2,T0* a3);
/*ACE*/void r274a_generate(T274* C);
/*ACE*/T0* r274root_class_name(void);
/*ACE*/T6 r274require_check(T274* C);
/*ACE*/void r274set_default_trace(T274* C);
/*ACE*/void r274set_debug_check(T274* C);
/*ACE*/T0* r274echo(void);
/*ACE*/T6 r274skip1(T274* C,T3 a1);
/*ACE*/void r274view_in(T274* C,T0* a1);
/*ACE*/T0* r274class_name_using(T0* a1);
/*ACE*/T0* r274system_tools(void);
/*ACE*/void r274next_char(T274* C);
extern T0*oBC32is_launcher_memory;
/*ACE*/T0* r274cluster_of(T0* a1,T6 a2);
/*ACE*/T0* r274lcs(void);
/*ACE*/T6 r274trace_of(T274* C,T0* a1);
/*ACE*/T2 r274a_assertion_level(T274* C);
/*ACE*/T6 r274is_debug_checked(T274* C,T0* a1,T0* a2);
/*ACE*/T6 r274a_yes_no_all(T274* C);
/*ACE*/T0* r274find_class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T2 r274cluster_count(void);
/*ACE*/void r274add_default_debug_key(T274* C,T0* a1);
/*ACE*/T6 r274is_launcher(void);
/*ACE*/T0* r274level_name(T2 a1);
/*ACE*/void r274analyse_ace_file(T274* C,T0* a1);
/*ACE*/void r274set_no_split(T274* C,T6 a1);
/*ACE*/void r274set_split(T274* C,T0* a1);
/*ACE*/void r274a_external(T274* C);
/*ACE*/T0* r274best_cluster_of(T0* a1,T0* a2,T6 a3,T0* a4);
/*ACE*/T6 r274ensure_check(T274* C);
/*ACE*/T0* r274unicode_string_buffer(void);
/*ACE*/void r274a_cluster_mark(T274* C);
extern T0*oBC274universe;
extern int fBC274universe;
/*ACE*/T0* r274universe(void);
extern T0*oBC274distances_;
extern int fBC274distances_;
/*ACE*/T0* r274distances_(void);
/*ACE*/void r274set_default_level(T274* C);
/*ACE*/void r274set_command_line_debug(T274* C);
/*ACE*/T0* r274eiffel_parser(void);
/*ACE*/void r274get_started(T274* C);
/*ACE*/T6 r274a_system_level_defaults(T274* C);
/*ACE*/void r274set_default_c_mode(T274* C);
/*ACE*/void r274a_cluster_properties(T274* C);
/*ACE*/T6 r274a_class_name(T274* C);
extern T0*oBC274new_clusters;
extern int fBC274new_clusters;
/*ACE*/T0* r274new_clusters(void);
/*ACE*/void r274command_line_parsed(T274* C,T0* a1);
/*ACE*/T0* r274root_procedure_name(T274* C);
/*ACE*/T338 r274pos(T2 a1,T2 a2);
/*ACE*/T6 r274match_debug_keys(T0* a1,T0* a2);
/*ACE*/T2 r274assertion_level_of(T274* C,T0* a1);
/*ACE*/T6 r274sedb(T274* C);
/*ACE*/T6 r274a_cluster_clause(T274* C);
typedef struct _se_agenT112f112l4023c31 se_agenT112f112l4023c31;
struct _se_agenT112f112l4023c31{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l4023c31*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l4023c31*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT112f112l4023c31(T0* closed_C,T0* closed_a1);
void gc_mark_agenT112f112l4023c31(se_agenT112f112l4023c31*u);
typedef struct _se_agenT112f112l4012c28 se_agenT112f112l4012c28;
struct _se_agenT112f112l4012c28{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l4012c28*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l4012c28*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l4012c28(T0* closed_C);
void gc_mark_agenT112f112l4012c28(se_agenT112f112l4012c28*u);
typedef struct _se_agenT112f112l3783c47 se_agenT112f112l3783c47;
struct _se_agenT112f112l3783c47{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3783c47*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3783c47*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l3783c47(T0* closed_C);
void gc_mark_agenT112f112l3783c47(se_agenT112f112l3783c47*u);
typedef struct _se_agenT112f112l618c22 se_agenT112f112l618c22;
struct _se_agenT112f112l618c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l618c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l618c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT112f112l618c22(void);
void gc_mark_agenT112f112l618c22(se_agenT112f112l618c22*u);
typedef struct _se_agenT112f112l675c22 se_agenT112f112l675c22;
struct _se_agenT112f112l675c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l675c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l675c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT112f112l675c22(void);
void gc_mark_agenT112f112l675c22(se_agenT112f112l675c22*u);
typedef struct _se_agenT112f112l3802c55 se_agenT112f112l3802c55;
struct _se_agenT112f112l3802c55{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3802c55*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3802c55*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a2;};
/*agent creation*/T0*agenT112f112l3802c55(T0* closed_C,T0* closed_a2);
void gc_mark_agenT112f112l3802c55(se_agenT112f112l3802c55*u);
typedef struct _se_agenT112f112l3595c39 se_agenT112f112l3595c39;
struct _se_agenT112f112l3595c39{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3595c39*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3595c39*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l3595c39(T0* closed_C);
void gc_mark_agenT112f112l3595c39(se_agenT112f112l3595c39*u);
typedef struct _se_agenT112f112l3512c38 se_agenT112f112l3512c38;
struct _se_agenT112f112l3512c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3512c38*,T0*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3512c38*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l3512c38(T0* closed_C);
void gc_mark_agenT112f112l3512c38(se_agenT112f112l3512c38*u);
/*C_PRETTY_PRINTER*/T0* r112cecil_pool(void);
extern T0*oBC112c_code;
extern int fBC112c_code;
/*C_PRETTY_PRINTER*/T0* r112c_code(void);
extern T0*oBC112defined_agent_creation;
extern int fBC112defined_agent_creation;
/*C_PRETTY_PRINTER*/T0* r112defined_agent_creation(void);
/*C_PRETTY_PRINTER*/T0* r112stack_top(T112* C);
/*C_PRETTY_PRINTER*/void r112put_target_as_target(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_plus_plus_register(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112print_argument(T2 a1);
/*C_PRETTY_PRINTER*/T6 r112manifest_string_trace(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T2 r112class_invariant_call_opening(T112* C,T0* a1,T6 a2);
/*C_PRETTY_PRINTER*/void r112target_position_in_error_handler(T112* C);
/*C_PRETTY_PRINTER*/void r112put_arguments(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112c_test_o_flag(T0* a1);
/*C_PRETTY_PRINTER*/void r112print_local(T0* a1);
/*C_PRETTY_PRINTER*/void r112initialize_size_table(T112* C);
/*C_PRETTY_PRINTER*/void r112split_c_file_now(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112put_monomorphic_or_void_call(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112inspect_local_compile_to_c(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_define_assignment_test_functions(T112* C);
/*C_PRETTY_PRINTER*/T0* r112reserve_context(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/T0* r112run_features(void);
/*C_PRETTY_PRINTER*/T6 r112target_cannot_be_dropped(T112* C);
/*C_PRETTY_PRINTER*/void r112get_started(T112* C);
extern T0*oBC112path_make;
extern int fBC112path_make;
/*C_PRETTY_PRINTER*/T0* r112path_make(void);
/*C_PRETTY_PRINTER*/void r112c_test_o_flag_recursion(T0* a1);
/*C_PRETTY_PRINTER*/void r112define_agent_launcher_heading(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112se_evobt(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r112cpp(void);
/*C_PRETTY_PRINTER*/void r112compile_routines(T112* C);
/*C_PRETTY_PRINTER*/void r112set_dump_stack_top_for(T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112put_c_inline_h(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/T0* r112tmp_path(void);
/*C_PRETTY_PRINTER*/T6 r112agent_pool_has_only_one_case_for(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112put_file(T112* C,T0* a1,T0* a2);
extern T0*oBC32live_type_extra_collectors;
extern int fBC32live_type_extra_collectors;
/*C_PRETTY_PRINTER*/T0* r112live_type_extra_collectors(void);
/*C_PRETTY_PRINTER*/void r112cecil_define_users_for_file(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112initialize_generating_type(void);
/*C_PRETTY_PRINTER*/T0* r112agent_switches(void);
/*C_PRETTY_PRINTER*/void r112stop_recursive_assertion_opening(T6 a1);
/*C_PRETTY_PRINTER*/void r112add_first_include(T0* a1);
/*C_PRETTY_PRINTER*/void r112cecil_define_users_for_entry(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112put_target_generating_type(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112class_invariant_call_closing(T2 a1,T6 a2);
extern T0*oBC113context_stack;
extern int fBC113context_stack;
/*C_PRETTY_PRINTER*/T0* r112context_stack(void);
/*C_PRETTY_PRINTER*/void r112current_class_invariant(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112push_create_expression(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112add_include(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112recompilation_comment(T0* a1);
/*C_PRETTY_PRINTER*/void r112macro_def(T112* C,T0* a1,T2 a2);
/*C_PRETTY_PRINTER*/void r112sys_runtime_h_and_c(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112se_ms_c_call_in(T0* a1,T0* a2);
extern T0*oBC112pending_c_function_body;
extern int fBC112pending_c_function_body;
/*C_PRETTY_PRINTER*/T0* r112pending_c_function_body(void);
/*C_PRETTY_PRINTER*/void r112start_profile(T0* a1);
/*C_PRETTY_PRINTER*/void r112c_register(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112prepare_c_function(T112* C);
/*C_PRETTY_PRINTER*/void r112c_frame_descriptor_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112va_type_in(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r112class_invariants(void);
/*C_PRETTY_PRINTER*/void r112initialize_path_table(T112* C);
/*C_PRETTY_PRINTER*/void r112define_initialize_eiffel_runtime(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_test_o_flag_introspect(T0* a1);
/*C_PRETTY_PRINTER*/void r112initialize_generator(void);
/*C_PRETTY_PRINTER*/void r112inspect_local_type(T0* a1);
/*C_PRETTY_PRINTER*/void r112begin_c_file(T112* C);
/*C_PRETTY_PRINTER*/void r112stop_recursive_assertion_closing(T6 a1);
/*C_PRETTY_PRINTER*/void r112push_inside_some_wrapper(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112right_hand_side_can_only_be_void(void);
/*C_PRETTY_PRINTER*/void r112check_assertion(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/T0* r112live_type_map(void);
/*C_PRETTY_PRINTER*/void r112put_target_as_value(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define1_manifest_string_pool(T112* C);
/*C_PRETTY_PRINTER*/void r112put_error0(T0* a1);
/*C_PRETTY_PRINTER*/void r112end_c_file(void);
/*C_PRETTY_PRINTER*/void r112begin_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T6 r112arguments_cannot_be_dropped(T112* C);
/*C_PRETTY_PRINTER*/void r112add_extra_collectors(T112* C);
extern T0*oBC112internal_c_local_stamps_stack;
extern int fBC112internal_c_local_stamps_stack;
/*C_PRETTY_PRINTER*/T0* r112internal_c_local_stamps_stack(void);
/*C_PRETTY_PRINTER*/void r112connect_cecil_out_h(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112customize_runtime(T112* C);
/*C_PRETTY_PRINTER*/void r112really_define_c_main(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112push_direct(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC112pending_c_function_signature;
extern int fBC112pending_c_function_signature;
/*C_PRETTY_PRINTER*/T0* r112pending_c_function_signature(void);
/*C_PRETTY_PRINTER*/void r112cecil_define(T112* C);
/*C_PRETTY_PRINTER*/T6 r112once_flag(T112* C,T0* a1);
extern T0*oBC112internal_c_local_list;
/*C_PRETTY_PRINTER*/void r112string_to_c_code(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112show_profile(void);
/*C_PRETTY_PRINTER*/void r112common_put_target(T112* C);
/*C_PRETTY_PRINTER*/void r112free_context(T112* C,T0* a1);
extern T0*oBC112out_make;
extern int fBC112out_make;
/*C_PRETTY_PRINTER*/T0* r112out_make(void);
extern T0*oBC112inspect_local_stack;
extern int fBC112inspect_local_stack;
/*C_PRETTY_PRINTER*/T0* r112inspect_local_stack(void);
/*C_PRETTY_PRINTER*/void r112put_position(T338 a1);
/*C_PRETTY_PRINTER*/void r112write_out_h_buffer(T112* C);
/*C_PRETTY_PRINTER*/void r112incr_real_procedure_count(T112* C);
/*C_PRETTY_PRINTER*/void r112echo_information(T112* C);
/*C_PRETTY_PRINTER*/void r112c_code_for_precomputable_routines(T112* C);
/*C_PRETTY_PRINTER*/void r112variant_check(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r112echo(void);
/*C_PRETTY_PRINTER*/void r112write_out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r112c_define_manifest_generic_functions(T112* C);
extern T0*oBC32manifest_string_pool;
/*C_PRETTY_PRINTER*/T6 r112use_c_function_call_for_attribute_read(T112* C);
/*C_PRETTY_PRINTER*/void r112put_ith_argument(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112add_include_on(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112push_create_instruction(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112pop(T112* C);
/*C_PRETTY_PRINTER*/void r112se_string(T0* a1);
/*C_PRETTY_PRINTER*/void r112put_trace_switch(T112* C);
/*C_PRETTY_PRINTER*/void r112c_code_for_precomputable_routine(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112external_prototype_in(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r112pending_c_function_lock_local(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112args_compile_to_c_ith(T112* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*C_PRETTY_PRINTER*/void r112define_main(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112incr_procedure_count(T112* C);
extern T0*oBC32agent_pool;
/*C_PRETTY_PRINTER*/T6 r112cannot_drop_all(T112* C);
/*C_PRETTY_PRINTER*/void r112push_precursor(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112agent_pool_switch_in(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112c_define_o_flag(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112incr_real_function_count(T112* C);
/*C_PRETTY_PRINTER*/void r112put_object_size(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112start_profile_class_invariant(T0* a1);
extern T0*oBC112out_c_buffer;
extern int fBC112out_c_buffer;
/*C_PRETTY_PRINTER*/T0* r112out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r112put_direct(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112c_define_for_native_array(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_pre_compute_once_function(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112incr_function_count(T112* C);
/*C_PRETTY_PRINTER*/void r112put_banner(T0* a1);
/*C_PRETTY_PRINTER*/void r112put_c_file(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_define_o_result_for(T112* C,T0* a1);
extern T0*oBC112out_h_buffer;
extern int fBC112out_h_buffer;
/*C_PRETTY_PRINTER*/T0* r112out_h_buffer(void);
/*C_PRETTY_PRINTER*/T2 r112nb_errors(void);
/*C_PRETTY_PRINTER*/void r112stack_overflow(T112* C);
/*C_PRETTY_PRINTER*/void r112h_connect(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112compile(T112* C);
/*C_PRETTY_PRINTER*/void r112customize_agent_pool_runtime_1(T112* C);
/*C_PRETTY_PRINTER*/void r112customize_agent_pool_runtime_2(T112* C);
/*C_PRETTY_PRINTER*/void r112c_declare_local(T112* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r112character_to_c_code(T3 a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112initialize_path_table_of(T0* a1);
/*C_PRETTY_PRINTER*/void r112native_array_to_c_code(T2 a1,T9 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112c_call_initialize_manifest_strings(void);
/*C_PRETTY_PRINTER*/void r112se_ums_c_call_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112start_profile_agent_switch(T0* a1);
/*C_PRETTY_PRINTER*/void r112make(T112* C);
/*C_PRETTY_PRINTER*/void r112array_access(T3 a1,T2 a2);
/*C_PRETTY_PRINTER*/void r112write_extern_2(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112write_extern_1(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112write_extern_0(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112stack_push(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112common_body_for_se_string_and_se_ms(T112* C,T6 a1);
/*C_PRETTY_PRINTER*/T0* r112out_c(void);
/*C_PRETTY_PRINTER*/void r112write_make_file(T112* C);
/*C_PRETTY_PRINTER*/void r112start_profile_agent_creation(T0* a1);
/*C_PRETTY_PRINTER*/void r112define_extern_tables(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_for_user_generic(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112start_assignment(T112* C);
/*C_PRETTY_PRINTER*/T0* r112agent_creations(void);
/*C_PRETTY_PRINTER*/T0* r112id_provider(void);
/*C_PRETTY_PRINTER*/T0* r112system_tools(void);
/*C_PRETTY_PRINTER*/void r112prepare_introspection(T112* C);
/*C_PRETTY_PRINTER*/T0* r112need_invariant(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112agent_pool_call_in(T112* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*C_PRETTY_PRINTER*/void r112initialize_profile(void);
/*C_PRETTY_PRINTER*/void r112put_position_comment(T338 a1);
/*C_PRETTY_PRINTER*/void r112inside_twin(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112c_declare_locals(T112* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r112set_live_type(T0* a1);
extern T0*oBC32once_routine_pool;
/*C_PRETTY_PRINTER*/void r112include_register(T112* C,T338 a1,T0* a2);
/*C_PRETTY_PRINTER*/T6 r112c_plus_plus_registered(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112define_agent_launcher_args(T112* C,T0* a1);
extern T0*oBC32assignment_test_pool;
/*C_PRETTY_PRINTER*/void r112initialize_generator_of(T0* a1);
/*C_PRETTY_PRINTER*/void r112put_target_generator(T112* C,T0* a1);
extern T0*oBC112c_inline_h_mem;
extern int fBC112c_inline_h_mem;
/*C_PRETTY_PRINTER*/T0* r112c_inline_h_mem(void);
/*C_PRETTY_PRINTER*/void r112c_variables_for_precomputable_routines(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_manifest_generic_for(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112dump_pending_c_function(T112* C,T6 a1);
extern T0*oBC112tmp_string;
extern int fBC112tmp_string;
/*C_PRETTY_PRINTER*/T0* r112tmp_string(void);
/*C_PRETTY_PRINTER*/void r112c_plus_plus_definitions(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_assignment_test_for(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112put_position_comment_on(T0* a1,T338 a2);
/*C_PRETTY_PRINTER*/void r112c_define2_manifest_string_pool(T112* C);
extern T0*oBC32pretty_printer;
/*C_PRETTY_PRINTER*/void r112write_extern_array_1(T112* C,T0* a1,T2 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112write_extern_array_2(T112* C,T0* a1,T2 a2);
extern T0*oBC32manifest_generic_pool;
extern T0*oBC32exceptions_handler;
/*C_PRETTY_PRINTER*/void r112put_h_file(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112put_position_in_ds(T338 a1);
extern T0*oBC112path_c;
extern int fBC112path_c;
/*C_PRETTY_PRINTER*/T0* r112path_c(void);
/*C_PRETTY_PRINTER*/void r112end_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T0* r112new_context(T2 a1);
extern T0*oBC112path_h;
extern int fBC112path_h;
/*C_PRETTY_PRINTER*/T0* r112path_h(void);
/*C_PRETTY_PRINTER*/void r112put_position_comment_in(T0* a1,T338 a2);
/*C_PRETTY_PRINTER*/void r112put_sedb_breakpoint(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_o_result(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112do_write_make_file(T112* C);
typedef struct _se_agenT107f107l345c38 se_agenT107f107l345c38;
struct _se_agenT107f107l345c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT107f107l345c38*,T0*);
void(*gc_mark_agent_mold)(se_agenT107f107l345c38*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT107f107l345c38(void);
void gc_mark_agenT107f107l345c38(se_agenT107f107l345c38*u);
/*SMART_EIFFEL*/void r107polymorphic_procedure_call_count_increment(T107* C,T2 a1);
/*SMART_EIFFEL*/T0* r107old_list_stack_pop(void);
/*SMART_EIFFEL*/void r107id_extra_information(T0* a1,T0* a2,T0* a3);
extern T0*oBC107old_list_stack;
extern int fBC107old_list_stack;
/*SMART_EIFFEL*/T0* r107old_list_stack(void);
/*SMART_EIFFEL*/T0* r107type_real_32(T107* C);
/*SMART_EIFFEL*/T0* r107feature_stamp(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107cecil_pool(void);
/*SMART_EIFFEL*/void r107register_class_invariant(T107* C,T0* a1);
/*SMART_EIFFEL*/void r107inline_dynamic_dispatch(T107* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107loaded_class_text(T0* a1);
/*SMART_EIFFEL*/T6 r107is_at_run_time(T0* a1);
/*SMART_EIFFEL*/T0* r107long_type_name(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107cluster_named(T0* a1);
/*SMART_EIFFEL*/T0* r107type_string(T107* C);
/*SMART_EIFFEL*/T0* r107type_natural_16(T107* C);
/*SMART_EIFFEL*/T0* r107context_feature(void);
/*SMART_EIFFEL*/T0* r107type_natural_32(T107* C);
/*SMART_EIFFEL*/void r107sort_live_type_map(T107* C);
/*SMART_EIFFEL*/void r107very_last_information(void);
/*SMART_EIFFEL*/T2 r107class_text_count(void);
/*SMART_EIFFEL*/T0* r107type_natural_64(T107* C);
/*SMART_EIFFEL*/T0* r107get_type(T0* a1,T6 a2);
/*SMART_EIFFEL*/T0* r107type_internals_handler_if_exists(void);
/*SMART_EIFFEL*/void r107update_polymorphic_distribution(T107* C,T2 a1);
/*SMART_EIFFEL*/void r107expanded_target_function_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107expanded_target_procedure_call_count_increment(T107* C);
extern T0*oBC107copyright;
extern int fBC107copyright;
/*SMART_EIFFEL*/T0* r107copyright(void);
/*SMART_EIFFEL*/void r107register_run_feature(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107create_type(T0* a1,T6 a2);
/*SMART_EIFFEL*/T0* r107type_natural_8(T107* C);
/*SMART_EIFFEL*/T0* r107get_inline_memo(void);
/*SMART_EIFFEL*/void r107parse_include(T0* a1);
/*SMART_EIFFEL*/void r107void_target_procedure_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107echo_magic_count(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107get_type_for_non_generic(T0* a1,T6 a2);
extern T0*oBC107type_dictionary;
extern int fBC107type_dictionary;
/*SMART_EIFFEL*/T0* r107type_dictionary(void);
/*SMART_EIFFEL*/void r107register_old(T0* a1);
/*SMART_EIFFEL*/void r107simplify(T107* C);
/*SMART_EIFFEL*/void r107collect_se_atexit(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107type_integer_16(T107* C);
/*SMART_EIFFEL*/T0* r107type_native_array_character(T107* C);
/*SMART_EIFFEL*/T0* r107class_text(T0* a1,T6 a2);
/*SMART_EIFFEL*/T0* r107type_integer_32(T107* C);
extern T0*oBC32se_atexit_name;
extern int fBC32se_atexit_name;
/*SMART_EIFFEL*/T0* r107se_atexit_name(void);
extern T0*oBC107agent_creation_error_trap;
extern int fBC107agent_creation_error_trap;
/*SMART_EIFFEL*/T0* r107agent_creation_error_trap(void);
/*SMART_EIFFEL*/T2 r107nb_errors(void);
extern T0*oBC107manifest_creation_name;
extern int fBC107manifest_creation_name;
/*SMART_EIFFEL*/T0* r107manifest_creation_name(T107* C);
/*SMART_EIFFEL*/T0* r107type_integer_64(T107* C);
/*SMART_EIFFEL*/T0* r107parser_buffer(void);
/*SMART_EIFFEL*/void r107polymorphic_function_call_count_increment(T107* C,T2 a1);
/*SMART_EIFFEL*/void r107register_agent_switch(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107type_pointer(T107* C);
/*SMART_EIFFEL*/void r107collect_precomputable(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107analyze_class(T0* a1,T0* a2);
/*SMART_EIFFEL*/void r107collect_external_function(T0* a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r107collect_local_expanded(T0* a1);
/*SMART_EIFFEL*/void r107monomorphic_function_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107register_type(T0* a1);
/*SMART_EIFFEL*/T0* r107echo(void);
/*SMART_EIFFEL*/void r107tuple_class_not_found_fatal_error(T0* a1);
/*SMART_EIFFEL*/void r107do_one_collect_cycle(T107* C);
/*SMART_EIFFEL*/void r107customize_runtime(void);
/*SMART_EIFFEL*/void r107simplify_and_optimize(T107* C,T0* a1,T0* a2);
extern T0*oBC107collected_external_functions;
extern int fBC107collected_external_functions;
/*SMART_EIFFEL*/T0* r107collected_external_functions(void);
/*SMART_EIFFEL*/T0* r107cluster_of(T0* a1,T6 a2);
extern T0*oBC107free_inline_memo;
extern int fBC107free_inline_memo;
/*SMART_EIFFEL*/T0* r107free_inline_memo(void);
/*SMART_EIFFEL*/void r107vffd7_fatal_error(T338 a1);
/*SMART_EIFFEL*/void r107covariance_check(T338 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r107argument_count_check(T0* a1,T338 a2,T0* a3,T0* a4);
/*SMART_EIFFEL*/T0* r107collect(T0* a1,T0* a2,T6 a3);
/*SMART_EIFFEL*/void r107show_live_types(T107* C);
/*SMART_EIFFEL*/T0* r107type_unicode_string(T107* C);
/*SMART_EIFFEL*/T6 r107is_ready(void);
/*SMART_EIFFEL*/T6 r107is_tagged(T107* C,T0* a1);
extern T0*oBC32introspection_handler;
/*SMART_EIFFEL*/void r107register_agent_creation(T107* C,T0* a1);
/*SMART_EIFFEL*/void r107collect_deep_features(T107* C);
extern T0*oBC32feature_accumulator;
extern int fBC32feature_accumulator;
/*SMART_EIFFEL*/T0* r107feature_accumulator(void);
/*SMART_EIFFEL*/void r107front_end(T107* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107type_any(T107* C);
extern T0*oBC107status;
/*SMART_EIFFEL*/T0* r107type_integer_8(T107* C);
/*SMART_EIFFEL*/void r107collect_generic(T0* a1);
/*SMART_EIFFEL*/void r107register_plug_in(T0* a1);
/*SMART_EIFFEL*/void r107monomorphic_procedure_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107unknown_feature_fatal_error(T0* a1,T0* a2,T0* a3);
extern T0*oBC107memory_dispose_stamp;
extern int fBC107memory_dispose_stamp;
/*SMART_EIFFEL*/T0* r107memory_dispose_stamp(void);
/*SMART_EIFFEL*/T0* r107type_boolean(T107* C);
/*SMART_EIFFEL*/void r107compile(T107* C,T0* a1);
extern T0*oBC107collected_plug_in;
extern int fBC107collected_plug_in;
/*SMART_EIFFEL*/T0* r107collected_plug_in(void);
/*SMART_EIFFEL*/void r107clear_agent_creation_error_trap(T0* a1);
extern T0*oBC107context_feature_stack;
extern int fBC107context_feature_stack;
/*SMART_EIFFEL*/T0* r107context_feature_stack(void);
/*SMART_EIFFEL*/T0* r107eiffel_parser(void);
/*SMART_EIFFEL*/void r107collect_from_root(T107* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/void r107collect_external(T0* a1);
extern T0*oBC107code_accumulator;
extern int fBC107code_accumulator;
/*SMART_EIFFEL*/T0* r107code_accumulator(void);
/*SMART_EIFFEL*/T0* r107type_real_extended(T107* C);
/*SMART_EIFFEL*/void r107void_target_function_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107echo_polymorphic_inspect_distribution(T107* C,T0* a1);
/*SMART_EIFFEL*/void r107safety_check(T107* C);
extern int fBC107initialize_any_tuple;
/*SMART_EIFFEL*/void r107initialize_any_tuple(void);
/*SMART_EIFFEL*/T6 r107try_agent_creation_error_trap(T0* a1);
/*SMART_EIFFEL*/T0* r107type_character(T107* C);
/*SMART_EIFFEL*/void r107magic_count_increment(T107* C);
/*SMART_EIFFEL*/void r107pop_context(T0* a1);
/*SMART_EIFFEL*/T0* r107collect_one_type(T0* a1,T6 a2);
extern T0*oBC32assignment_handler;
/*SMART_EIFFEL*/void r107inspect_when_merge_counter_increment(T107* C);
/*SMART_EIFFEL*/void r107collect_create(T0* a1);
/*SMART_EIFFEL*/T0* r107simplify_integer_infix_power(T338 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r107collect_constant(T0* a1);
/*SMART_EIFFEL*/T0* r107type_real_64(T107* C);
/*ID_PROVIDER*/void r282make(T282* C);
/*ID_PROVIDER*/T0* r282alias_of(T10 a1);
extern T0*oBC282id_memory;
extern int fBC282id_memory;
/*ID_PROVIDER*/T0* r282id_memory(void);
/*ID_PROVIDER*/T0* r282echo(void);
extern T0*oBC282per_cluster_id_memory;
extern int fBC282per_cluster_id_memory;
/*ID_PROVIDER*/T0* r282per_cluster_id_memory(void);
/*ID_PROVIDER*/T0* r282cluster_id_memory(T0* a1);
/*ID_PROVIDER*/T10 r282high_item(T282* C,T0* a1);
/*ID_PROVIDER*/void r282cluster_id_memory_add(T10 a1,T0* a2,T0* a3);
/*ID_PROVIDER*/T0* r282class_name_of(T0* a1);
/*ID_PROVIDER*/T10 r282item(T282* C,T0* a1,T0* a2);
extern T0*oBC282temporary_type_name;
extern int fBC282temporary_type_name;
/*ID_PROVIDER*/T0* r282temporary_type_name(void);
/*ID_PROVIDER*/void r282disk_save(T282* C);
/*ID_PROVIDER*/T0* r282system_tools(void);
/*ID_PROVIDER*/void r282disk_save_ids(T282* C,T0* a1,T0* a2,T0* a3);
/*ID_PROVIDER*/void r282disk_restore(T282* C);
/*ID_PROVIDER*/void r282id_memory_add(T10 a1,T0* a2,T6 a3);
/*ID_PROVIDER*/T6 r282is_valid_type_mark(T0* a1);
/*STRING_ALIASER*/T6 r272registered_one(T0* a1);
/*STRING_ALIASER*/T0* r272hashed_string(T0* a1);
/*STRING_ALIASER*/T0* r272create_hashed_string(T0* a1);
extern T0*oBC272memory;
extern int fBC272memory;
/*STRING_ALIASER*/T0* r272memory(void);
/*STRING_ALIASER*/T0* r272string(T0* a1);
/*STRING_ALIASER*/void r272echo_information(void);
/*STRING_ALIASER*/T0* r272echo(void);
extern T0*oBC272tuple_name;
extern int fBC272tuple_name;
/*STRING_ALIASER*/T0* r272tuple_name(void);
extern T0*oBC272hashed_string_buffer;
extern int fBC272hashed_string_buffer;
/*STRING_ALIASER*/T0* r272hashed_string_buffer(void);
/*GC_HANDLER*/void r621make(T621* C);
/*GC_HANDLER*/void r621gc_info_before_exit(T621* C);
/*GC_HANDLER*/void r621free_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621compute_ceils(void);
extern T0*oBC621switch_list;
extern int fBC621switch_list;
/*GC_HANDLER*/T0* r621switch_list(void);
/*GC_HANDLER*/void r621initialize_user_expanded_attributes(T0* a1,T0* a2);
/*GC_HANDLER*/void r621info_nb_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621mark_once_routines(T621* C);
/*GC_HANDLER*/T0* r621echo(void);
/*GC_HANDLER*/void r621align_mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621customize_c_runtime(T621* C);
/*GC_HANDLER*/void r621native9_in(T621* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r621na_env_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621c_dicho(T0* a1,T2 a2,T2 a3);
/*GC_HANDLER*/void r621set_info_flag(T621* C);
/*GC_HANDLER*/void r621mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/T0* r621cpp(void);
/*GC_HANDLER*/void r621allocation_of(T621* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r621define_gc_start(T621* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r621agent_pool_gc_info(void);
/*GC_HANDLER*/void r621no_gc(T621* C);
/*GC_HANDLER*/void r621mark_for(T0* a1,T0* a2,T6 a3);
/*GC_HANDLER*/void r621define1(void);
/*GC_HANDLER*/void r621manifest_string_mark_signature(T2 a1);
/*GC_HANDLER*/void r621define2(T621* C);
/*GC_HANDLER*/void r621initialize_runtime(T621* C);
/*GC_HANDLER*/void r621memory_dispose(T621* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r621store_left_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621store_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621store_chunk_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r621define_gc_info(T621* C,T0* a1);
/*GC_HANDLER*/void r621manifest_string_in(T621* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r621just_before_mark(T621* C,T0* a1);
/*GC_HANDLER*/void r621define_manifest_string_mark(void);
/*GC_HANDLER*/void r621switch_for(T0* a1);
/*SYSTEM*/int create639(void);
/*SYSTEM*/T0* r639get_environment_variable(T0* a1);
/*CECIL_POOL*/T84*create84(void);
/*CECIL_POOL*/T0* r84echo(void);
/*CECIL_POOL*/void r84parse_cecil_files(T84* C);
/*CECIL_POOL*/void r84collect(T84* C);
/*CECIL_POOL*/void r84add_cecil_file(T84* C,T0* a1);
/*CECIL_POOL*/void r84inline_dynamic_dispatch(T84* C,T0* a1,T0* a2);
/*CECIL_POOL*/void r84do_all(T84* C,T0* a1);
/*ERROR_HANDLER*/void r284put_arrows_into(T0* a1,T0* a2);
/*ERROR_HANDLER*/void r284print_as_error(T284* C);
/*ERROR_HANDLER*/void r284get_positions_on_same_line(T0* a1);
/*ERROR_HANDLER*/void r284cancel(void);
/*ERROR_HANDLER*/void r284print_spaces(T2 a1);
extern T0*oBC284positions;
extern int fBC284positions;
/*ERROR_HANDLER*/T0* r284positions(void);
/*ERROR_HANDLER*/T0* r284echo(void);
/*ERROR_HANDLER*/void r284add_position(T338 a1);
/*ERROR_HANDLER*/T2 r284detab_line(T0* a1);
/*ERROR_HANDLER*/void r284print_as_style_warning(T284* C);
/*ERROR_HANDLER*/void r284add_expression(T0* a1);
/*ERROR_HANDLER*/void r284add_instruction(T0* a1);
/*ERROR_HANDLER*/void r284print_as_fatal_error(T284* C);
/*ERROR_HANDLER*/void r284do_print(T0* a1);
/*ERROR_HANDLER*/void r284print_as_warning(T284* C);
/*ERROR_HANDLER*/void r284add_type(T0* a1);
/*ERROR_HANDLER*/void r284add_type_mark(T0* a1);
/*ERROR_HANDLER*/void r284add_context_info(T0* a1);
/*ERROR_HANDLER*/void r284append_integer_64(T11 a1);
/*ERROR_HANDLER*/T6 r284is_empty(void);
/*ERROR_HANDLER*/void r284add_feature_name(T0* a1);
/*ERROR_HANDLER*/void r284crash(T284* C);
/*ERROR_HANDLER*/void r284append_integer(T2 a1);
/*ERROR_HANDLER*/void r284print_as_internal_error(T284* C);
/*ERROR_HANDLER*/void r284print_error_header(T0* a1,T0* a2,T2 a3,T0* a4);
/*ERROR_HANDLER*/void r284display_lines(void);
/*ERROR_HANDLER*/T0* r284get_line(T0* a1,T2 a2);
extern T0*oBC284explanation;
extern int fBC284explanation;
/*ERROR_HANDLER*/T0* r284explanation(void);
/*FILE_TOOLS*/int create285(void);
extern T0*oBC285tfr1;
extern T0*oBC285tfr2;
/*FILE_TOOLS*/T6 r285same_files(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r285is_readable(T0* a1);
/*FILE_TOOLS*/T6 r285file_exists(T0* a1);
/*FILE_TOOLS*/void r285delete(T0* a1);
/*FILE_TOOLS*/T6 r285is_empty(T0* a1);
/*FILE_TOOLS*/T6 r285is_file(T0* a1);
/*FILE_TOOLS*/T6 r285is_directory(T0* a1);
/*FILE_TOOLS*/void r285rename_to(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r285same_physical_file(T0* a1,T0* a2);
/*SERC_FACTORY*/void r550add_to_chain(T0* a1,T0* a2);
extern T0*oBC550config;
extern int fBC550config;
/*SERC_FACTORY*/T0* r550config(T0* a1);
extern T0*oBC550seconf_env;
extern int fBC550seconf_env;
/*SERC_FACTORY*/T0* r550seconf_env(void);
extern T0*oBC550userprofile_env;
extern int fBC550userprofile_env;
/*SERC_FACTORY*/T0* r550userprofile_env(void);
extern T0*oBC550home_env;
extern int fBC550home_env;
/*SERC_FACTORY*/T0* r550home_env(void);
/*SERC_FACTORY*/T0* r550parser_buffer(void);
/*SERC_FACTORY*/T0* r550env(T0* a1);
/*BASIC_DIRECTORY*/void r535compute_file_path_with(T0* a1,T0* a2);
/*BASIC_DIRECTORY*/T6 r535macintosh_notation(void);
/*BASIC_DIRECTORY*/T6 r535openvms_notation(void);
/*BASIC_DIRECTORY*/void r535compute_parent_directory_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r535unix_notation(void);
/*BASIC_DIRECTORY*/void r535compute_absolute_file_path_with(T0* a1);
/*BASIC_DIRECTORY*/void r535connect_to_current_working_directory(T535* C);
/*BASIC_DIRECTORY*/T6 r535windows_notation(void);
/*BASIC_DIRECTORY*/T6 r535amiga_notation(void);
/*BASIC_DIRECTORY*/void r535set_notation_using(T0* a1);
/*BASIC_DIRECTORY*/void r535compute_short_name_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r535cygwin_notation(void);
extern T0*oBC535last_entry;
extern int fBC535last_entry;
/*BASIC_DIRECTORY*/T0* r535last_entry(void);
/*BASIC_DIRECTORY*/T0* r535current_working_directory(void);
/*BASIC_DIRECTORY*/T0* r535system_notation(void);
/*BASIC_DIRECTORY*/void r535compute_subdirectory_with(T0* a1,T0* a2);
extern int fBC535ensure_system_notation;
/*BASIC_DIRECTORY*/void r535ensure_system_notation(void);
/*BASIC_DIRECTORY*/void r535connect_to(T535* C,T0* a1);
/*BASIC_DIRECTORY*/void r535read_entry(T535* C);
/*BASIC_DIRECTORY*/void r535disconnect(T535* C);
extern T0*oBC535system_notation_buffer;
/*STD_INPUT_OUTPUT*/void r77put_line(T77* C,T0* a1);
extern T0*oBC17std_input;
extern int fBC17std_input;
/*STD_INPUT_OUTPUT*/T0* r77std_input(void);
/*STD_INPUT_OUTPUT*/T0* r77std_output(void);
/*STD_INPUT_OUTPUT*/T6 r77is_connected(void);
/*STD_INPUT_OUTPUT*/void r77put_string(T77* C,T0* a1);
extern T0*oBC71tmp_string;
extern int fBC71tmp_string;
/*STD_INPUT_OUTPUT*/T0* r77tmp_string(void);
/*STD_INPUT_OUTPUT*/void r77put_real_format(T77* C,T5 a1,T2 a2);
/*STD_INPUT_OUTPUT*/void r77put_integer(T77* C,T11 a1);
/*STD_INPUT_OUTPUT*/void r77put_abstract_string(T0* a1);
/*STD_INPUT_OUTPUT*/void r77disconnect(void);
/*STD_INPUT_OUTPUT*/T0* r77as_output_stream(T77* C);
/*UNIX_DIRECTORY_NOTATION*/T537*create537(void);
/*UNIX_DIRECTORY_NOTATION*/void r537to_subpath_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/T0* r537from_path_name(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r537to_subdirectory_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537start_join(T537* C,T0* a1,T2 a2);
/*UNIX_DIRECTORY_NOTATION*/void r537to_root(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537join_element(T537* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r537to_directory_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r537to_short_name_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537to_current_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r537to_file_path_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537from_notation(T537* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537to_absolute_path_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537to_parent_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r537join_directory(T537* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T6 r537is_absolute_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T0* r537to_notation(T537* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r537join_up(T537* C);
/*UNIX_DIRECTORY_NOTATION*/void r537to_default_root(T0* a1);
extern T0*oBC537tmp1;
extern int fBC537tmp1;
/*UNIX_DIRECTORY_NOTATION*/T0* r537tmp1(void);
extern T0*oBC537tmp2;
extern int fBC537tmp2;
/*UNIX_DIRECTORY_NOTATION*/T0* r537tmp2(void);
/*WINDOWS_DIRECTORY_NOTATION*/T541*create541(void);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_subpath_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r541from_path_name(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_subdirectory_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541start_join(T541* C,T0* a1,T2 a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_root(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541join_element(T541* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_directory_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_short_name_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_current_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_file_path_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541from_notation(T541* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_absolute_path_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_parent_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r541join_directory(T541* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T6 r541is_absolute_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r541to_notation(T541* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r541join_up(T541* C);
/*WINDOWS_DIRECTORY_NOTATION*/void r541to_default_root(T0* a1);
extern T0*oBC541tmp1;
extern int fBC541tmp1;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r541tmp1(void);
extern T0*oBC541tmp2;
extern int fBC541tmp2;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r541tmp2(void);
/*MACINTOSH_DIRECTORY_NOTATION*/T542*create542(void);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_subpath_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_subdirectory_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_directory_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_short_name_in(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_current_directory(T542* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_file_path_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542from_notation(T542* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_absolute_path_in(T542* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_parent_directory(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r542is_absolute_path(T542* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T0* r542to_notation(T542* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r542is_valid_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542to_default_root(T542* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542crash(T542* C);
/*MACINTOSH_DIRECTORY_NOTATION*/void r542not_yet_implemented(T542* C);
/*AMIGA_DIRECTORY_NOTATION*/T543*create543(void);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_subpath_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_subdirectory_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_directory_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_short_name_in(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_current_directory(T543* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_file_path_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r543from_notation(T543* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_absolute_path_in(T543* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_parent_directory(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T6 r543is_absolute_path(T543* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T0* r543to_notation(T543* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/T6 r543is_valid_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r543to_default_root(T543* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r543crash(T543* C);
/*AMIGA_DIRECTORY_NOTATION*/void r543not_yet_implemented(T543* C);
/*OPENVMS_DIRECTORY_NOTATION*/T544*create544(void);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_subpath_with(T544* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_subdirectory_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_directory_path(T544* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_short_name_in(T544* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_current_directory(T544* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_file_path_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r544from_notation(T544* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_absolute_path_in(T544* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_parent_directory(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r544is_absolute_path(T544* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T0* r544to_notation(T544* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r544is_valid_path(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r544to_default_root(T544* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r544crash(T544* C);
/*OPENVMS_DIRECTORY_NOTATION*/void r544not_yet_implemented(T544* C);
/*CYGWIN_DIRECTORY_NOTATION*/T545*create545(void);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_subpath_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_subdirectory_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_directory_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_short_name_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_current_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_file_path_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r545from_notation(T545* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_absolute_path_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_parent_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r545is_absolute_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T0* r545to_notation(T545* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r545is_valid_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r545to_default_root(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r545crash(T545* C);
/*CYGWIN_DIRECTORY_NOTATION*/void r545not_yet_implemented(T545* C);
/*TEXT_FILE_READ*/void r98unlock_tagged_out(void);
/*TEXT_FILE_READ*/T0* r98tagged_out_memory_pool(void);
/*TEXT_FILE_READ*/void r98filtered_read_character(T98* C);
/*TEXT_FILE_READ*/void r98lock_tagged_out(void);
/*TEXT_FILE_READ*/void r98filtered_read_line_in(T98* C,T0* a1);
/*TEXT_FILE_READ*/void r98set_path(T98* C,T0* a1);
/*TEXT_FILE_READ*/void r98read_line(T98* C);
/*TEXT_FILE_READ*/void r98fill_buffer(T98* C);
/*TEXT_FILE_READ*/T6 r98same_as(T98* C,T0* a1);
/*TEXT_FILE_READ*/void r98connect_to(T98* C,T0* a1);
extern T0*oBC65last_string;
extern int fBC65last_string;
/*TEXT_FILE_READ*/T0* r98last_string(void);
/*TEXT_FILE_READ*/void r98dispose(T98* C);
/*TEXT_FILE_READ*/void r98disconnect(T98* C);
/*TEXT_FILE_READ*/T0* r98tagged_out_memories(void);
/*SE_C_MODE*/void r536make(T536* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8,T0* a9,T0* a10,T0* a11,T0* a12,T0* a13);
/*TMP_FEATURE*/T0* r452as_character_constant(T452* C,T0* a1);
/*TMP_FEATURE*/T0* r452n(T452* C);
/*TMP_FEATURE*/T0* r452as_once_routine(T452* C);
/*TMP_FEATURE*/T0* r452as_deferred_routine(T452* C);
/*TMP_FEATURE*/void r452constant_attribute_common_checks(T452* C,T0* a1);
/*TMP_FEATURE*/T0* r452as_writable_attribute(T452* C);
/*TMP_FEATURE*/void r452initialize(T452* C);
/*TMP_FEATURE*/T0* r452as_string_constant(T452* C,T0* a1);
/*TMP_FEATURE*/void r452set_require(T452* C,T338 a1,T6 a2,T0* a3,T0* a4);
/*TMP_FEATURE*/T0* r452as_constant(T452* C,T0* a1);
/*TMP_FEATURE*/T0* r452as_procedure_or_function(T452* C);
/*TMP_FEATURE*/T0* r452as_unique_constant(T452* C);
/*TMP_FEATURE*/T0* r452as_external_routine(T452* C,T0* a1,T0* a2);
/*TMP_FEATURE*/T0* r452as_boolean_constant(T452* C,T0* a1);
/*TEXT_FILE_WRITE*/void r451put_line(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/T11 r451character_count(T451* C);
/*TEXT_FILE_WRITE*/void r451make(T451* C);
/*TEXT_FILE_WRITE*/void r451unlock_tagged_out(void);
/*TEXT_FILE_WRITE*/T0* r451tagged_out_memory_pool(void);
/*TEXT_FILE_WRITE*/void r451filtered_put_character(T451* C,T3 a1);
/*TEXT_FILE_WRITE*/void r451lock_tagged_out(void);
/*TEXT_FILE_WRITE*/void r451set_path(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/T6 r451is_connected(T451* C);
/*TEXT_FILE_WRITE*/void r451put_string(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/T0* r451tmp_string(void);
/*TEXT_FILE_WRITE*/void r451put_real_format(T451* C,T5 a1,T2 a2);
/*TEXT_FILE_WRITE*/void r451put_integer(T451* C,T11 a1);
/*TEXT_FILE_WRITE*/void r451connect_to(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/void r451filtered_flush(T451* C);
/*TEXT_FILE_WRITE*/void r451put_abstract_string(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/void r451dispose(T451* C);
/*TEXT_FILE_WRITE*/void r451disconnect(T451* C);
/*TEXT_FILE_WRITE*/T0* r451tagged_out_memories(void);
/*TEXT_FILE_WRITE*/T0* r451as_output_stream(T451* C);
/*TEXT_FILE_WRITE*/void r451write_buffer(T451* C);
/*LINES_OUTPUT_STREAM*/void r641put_line(T641* C,T0* a1);
/*LINES_OUTPUT_STREAM*/void r641filtered_put_character(T641* C,T3 a1);
/*LINES_OUTPUT_STREAM*/T6 r641can_disconnect(T641* C);
/*LINES_OUTPUT_STREAM*/T6 r641is_connected(T641* C);
/*LINES_OUTPUT_STREAM*/void r641put_string(T641* C,T0* a1);
/*LINES_OUTPUT_STREAM*/T0* r641tmp_string(void);
/*LINES_OUTPUT_STREAM*/void r641put_real_format(T641* C,T5 a1,T2 a2);
/*LINES_OUTPUT_STREAM*/void r641put_integer(T641* C,T11 a1);
/*LINES_OUTPUT_STREAM*/void r641connect_to(T641* C,T0* a1);
/*LINES_OUTPUT_STREAM*/void r641filtered_flush(T641* C);
/*LINES_OUTPUT_STREAM*/void r641put_abstract_string(T641* C,T0* a1);
/*LINES_OUTPUT_STREAM*/void r641dispose(T641* C);
/*LINES_OUTPUT_STREAM*/void r641disconnect(T641* C);
/*LINES_OUTPUT_STREAM*/T0* r641as_output_stream(T641* C);
/*STD_ERROR*/void r80put_line(T80* C,T0* a1);
/*STD_ERROR*/void r80put_natively_stored_string(T0* a1);
/*STD_ERROR*/T0* r80std_output(void);
/*STD_ERROR*/void r80put_string(T80* C,T0* a1);
/*STD_ERROR*/T0* r80tmp_string(void);
/*STD_ERROR*/void r80put_real_format(T80* C,T5 a1,T2 a2);
/*STD_ERROR*/void r80put_integer(T80* C,T11 a1);
/*STD_ERROR*/void r80filtered_flush(void);
/*STD_ERROR*/T0* r80as_output_stream(T80* C);
/*STD_OUTPUT*/void r68put_line(T68* C,T0* a1);
/*STD_OUTPUT*/void r68make(T68* C);
/*STD_OUTPUT*/void r68filtered_put_character(T68* C,T3 a1);
/*STD_OUTPUT*/void r68put_natively_stored_string(T68* C,T0* a1);
/*STD_OUTPUT*/T0* r68std_output(void);
/*STD_OUTPUT*/void r68flush(T68* C);
/*STD_OUTPUT*/void r68put_string(T68* C,T0* a1);
/*STD_OUTPUT*/T0* r68tmp_string(void);
/*STD_OUTPUT*/void r68put_real_format(T68* C,T5 a1,T2 a2);
/*STD_OUTPUT*/void r68put_integer(T68* C,T11 a1);
/*STD_OUTPUT*/void r68se_atexit(void);
/*STD_OUTPUT*/void r68filtered_flush(T68* C);
/*STD_OUTPUT*/T0* r68as_output_stream(T68* C);
/*STD_OUTPUT*/void r68write_buffer(T68* C);
/*HASHED_STRING*/T6 r103is_equal(T103* C,T0* a1);
/*HASHED_STRING*/void r103make(T103* C,T0* a1,T2 a2);
/*HASHED_STRING*/void r103set(T103* C,T0* a1);
/*HASHED_STRING*/T6 r103is_tuple_related(T103* C);
/*PARSER_BUFFER*/void r118make(T118* C);
/*PARSER_BUFFER*/void r118release(T118* C);
/*PARSER_BUFFER*/void r118load_file(T118* C,T0* a1);
/*PARSER_BUFFER*/T0* r118empty_line_at(T118* C,T2 a1);
/*C_SPLITTER_NO_SPLIT*/void r684make(void);
/*C_SPLITTER_NO_SPLIT*/void r684connect(T684* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/void r684split_now(T684* C);
/*C_SPLITTER_NO_SPLIT*/void r684connect_out_c(T684* C);
/*C_SPLITTER_NO_SPLIT*/T0* r684echo(void);
/*C_SPLITTER_NO_SPLIT*/void r684c_connect(T684* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r684cpp(void);
/*C_SPLITTER_NO_SPLIT*/T0* r684system_tools(void);
extern T0*oBC685out_c;
extern int fBC685out_c;
/*C_SPLITTER_NO_SPLIT*/T0* r684out_c(void);
/*C_SPLITTER_NO_SPLIT*/T6 r684write_make_file(T684* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r684linker_command(T684* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688make(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r688should_split(T688* C,T2 a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688connect(T688* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688split_now(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688connect_out_c(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688echo(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688c_files_suffixes(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T2 r688current_id(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688c_connect(T688* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688cpp(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688current_c_file_suffix(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688tmp_path(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688backup_tfw_connect(T688* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688system_tools(void);
extern T0*oBC687tmp_string;
extern int fBC687tmp_string;
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688tmp_string(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688do_split(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688path_in(T688* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688out_c(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688set_live_type(T688* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688append_suffix(T688* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r688write_make_file(T688* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r688linker_command(T688* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r688_P_685_connect(T688* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r686make(T686* C);
/*C_SPLITTER_LEGACY*/void r686add_objects_(T0* a1,T0* a2,T2 a3,T2 a4);
/*C_SPLITTER_LEGACY*/T6 r686should_split(T686* C,T2 a1);
/*C_SPLITTER_LEGACY*/void r686connect(T686* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r686split_now(T686* C);
/*C_SPLITTER_LEGACY*/void r686connect_out_c(T686* C);
/*C_SPLITTER_LEGACY*/T0* r686echo(void);
/*C_SPLITTER_LEGACY*/T0* r686c_files_suffixes(T686* C);
/*C_SPLITTER_LEGACY*/void r686c_connect(T686* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r686cpp(void);
/*C_SPLITTER_LEGACY*/T0* r686current_c_file_suffix(T686* C);
/*C_SPLITTER_LEGACY*/void r686add_objects(T686* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r686tmp_path(void);
/*C_SPLITTER_LEGACY*/void r686backup_tfw_connect(T686* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r686system_tools(void);
/*C_SPLITTER_LEGACY*/T0* r686tmp_string(void);
/*C_SPLITTER_LEGACY*/void r686do_split(T686* C);
/*C_SPLITTER_LEGACY*/void r686path_in(T686* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_LEGACY*/T0* r686out_c(void);
/*C_SPLITTER_LEGACY*/T6 r686write_make_file(T686* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r686linker_command(T686* C,T0* a1);
/*DIRECTORY*/T0* r546connect_directory(T546* C,T0* a1);
/*DIRECTORY*/void r546scan(T546* C,T0* a1);
/*UNIVERSE*/void r680make(T680* C);
/*UNIVERSE*/void r680add_classes(T680* C,T0* a1);
/*UNIVERSE*/void r680for_all(T680* C,T0* a1);
/*UNIVERSE*/T2 r680cluster_count(T680* C);
extern T0*oBC682classes_notation;
/*UNIVERSE*/T6 r680has_physical_cluster(T680* C,T0* a1);
/*UNIVERSE*/T0* r680echo(void);
/*UNIVERSE*/T0* r680cluster_named(T680* C,T0* a1);
/*UNIVERSE*/T6 r680is_system_path(T680* C,T0* a1);
/*UNIVERSE*/void r680get_started(T680* C,T2 a1);
/*UNIVERSE*/T0* r680system_path_to_classes_path(T680* C,T0* a1);
/*UNIVERSE*/void r680clusters_of(T680* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*UNIVERSE*/void r680add_entry(T680* C,T2 a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*UNIVERSE*/void r680view_in(T680* C,T0* a1);
extern T0*oBC682system_notation;
extern int fBC682system_notation;
/*UNIVERSE*/T0* r680system_notation(T680* C);
/*UNIVERSE*/T2 r680loaded_class_count(T680* C);
/*UNIVERSE*/void r680show_tabs(T2 a1);
/*UNIVERSE*/void r680parse_include(T680* C);
/*UNIVERSE*/T0* r680find_physical_cluster(T680* C,T0* a1);
/*UNIVERSE*/void r680show(T680* C,T2 a1);
/*POSITION*/T6 r338is_equal(T338* C,T338 a1);
/*POSITION*/void r338set(T338* C,T2 a1,T2 a2,T10 a3,T0* a4);
/*POSITION*/T6 r338sedb_trace(T338* C);
/*POSITION*/T6 r338same_line_as(T338* C,T338 a1);
extern T0*oBC32plugin_config;
/*POSITION*/T0* r338path(T338* C);
/*POSITION*/T10 r338id(T338* C);
/*POSITION*/void r338set_in_ace_file(T338* C,T2 a1,T2 a2);
/*POSITION*/T0* r338class_text_name(T338* C);
/*POSITION*/T0* r338id_provider(void);
extern T1057 oBC338class_text_storage;
extern T0*oBC32ini_parser;
/*POSITION*/void r338set_in_ini_file(T338* C,T2 a1,T2 a2,T10 a3);
/*POSITION*/T6 r338_ix_60(T338* C,T338 a1);
/*POSITION*/T0* r338class_text(T338* C);
/*POSITION*/T2 r338column(T338* C);
/*POSITION*/T2 r338line(T338* C);
/*POSITION*/T6 r338before(T338* C,T338 a1);
/*COMMENT*/T0* r420to_expression(T420* C);
/*COMMENT*/void r420make(T420* C,T338 a1,T0* a2);
/*COMMENT*/void r420pretty(T420* C,T2 a1);
/*COMMENT*/T0* r420simplify(T0* a1);
/*COMMENT*/void r420good_end_warning_check(T420* C,T0* a1);
/*COMMENT*/T6 r420is_dummy_feature_end(T420* C,T0* a1);
/*COMMENT*/void r420add_last(T420* C,T0* a1);
/*COMMENT*/void r420append(T420* C,T0* a1);
/*COMMENT*/T6 r420use_current(T0* a1);
/*COMMENT*/T6 r420side_effect_free(T0* a1);
/*COMMENT*/T0* r420inline_dynamic_dispatch(T0* a1,T0* a2);
/*COMMENT*/T2 r420count(T420* C);
/*COMMENT*/T0* r420to_instruction(T420* C);
/*UNICODE_STRING*/void r319make(T319* C,T2 a1);
/*UNICODE_STRING*/void r319make_empty(T319* C);
/*UNICODE_STRING*/T6 r319valid_unicode(T2 a1);
/*UNICODE_STRING*/void r319utf8_character_in(T2 a1,T0* a2);
/*UNICODE_STRING*/void r319extend(T319* C,T2 a1);
/*UNICODE_STRING*/void r319add_last(T319* C,T2 a1);
/*UNICODE_STRING*/T10 r319low_surrogate_value(T319* C,T2 a1);
/*UNICODE_STRING*/T2 r319item(T319* C,T2 a1);
/*UNICODE_STRING*/void r319clear_count(T319* C);
/*UNICODE_STRING*/void r319utf8_encode_in(T319* C,T0* a1);
/*UNICODE_STRING*/void r319next_generation(T319* C);
extern T0*oBC683classes_memory;
extern int fBC683classes_memory;
/*CLASSES_TREE_FACTORY*/T0* r683classes_memory(void);
/*CLASSES_TREE_FACTORY*/T0* r683classes(T683* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
extern T0*oBC683universe;
extern int fBC683universe;
/*CLASSES_TREE_FACTORY*/T0* r683universe(void);
/*CLUSTER*/void r432register_class_text(T432* C,T0* a1);
extern T0*oBC432file_name_buffer;
extern int fBC432file_name_buffer;
/*CLUSTER*/T0* r432file_name_buffer(void);
/*CLUSTER*/void r432exclude_add_last(T432* C,T0* a1);
/*CLUSTER*/void r432include_add_last(T432* C,T0* a1);
/*CLUSTER*/void r432read_classes(T432* C);
/*CLUSTER*/T6 r432trace(T432* C,T0* a1);
/*CLUSTER*/void r432include_parsing(T432* C);
/*CLUSTER*/T0* r432system_tools(void);
/*CLUSTER*/T6 r432debug_check(T432* C,T0* a1,T0* a2);
extern T0*oBC432path_buffer;
extern int fBC432path_buffer;
/*CLUSTER*/T0* r432path_buffer(void);
/*CLUSTER*/T2 r432class_text_count(T432* C);
/*CLUSTER*/void r432add_default_debug_key(T432* C,T0* a1);
/*CLUSTER*/T2 r432assertion_level_of(T432* C,T0* a1);
/*CLUSTER*/T0* r432parser_buffer(void);
/*CLUSTER*/T6 r432parser_buffer_load(T432* C);
/*CLUSTER*/void r432show(T432* C);
/*CLUSTER*/void r432make(T432* C,T0* a1,T0* a2,T0* a3);
/*CLUSTER*/T0* r432echo(void);
/*CLUSTER*/T2 r432loaded_class_count(T432* C);
/*CLUSTER*/void r432init(T432* C,T0* a1,T2 a2);
/*CLUSTER*/T6 r432parser_buffer_for(T432* C,T0* a1,T6 a2);
/*CLUSTER*/T0* r432level_name(T2 a1);
/*CLUSTER*/T6 r432match_debug_keys(T0* a1,T0* a2);
/*CLUSTER*/T6 r432default_trace_or_ace_default_trace(T432* C);
/*CLUSTER*/void r432set_option_assertion_level(T432* C,T0* a1,T2 a2);
/*CLUSTER*/void r432for_all(T432* C,T0* a1);
/*CLUSTER*/T0* r432class_text(T432* C,T0* a1,T6 a2,T6 a3);
/*CLUSTER*/void r432set_default_trace(T432* C,T6 a1);
/*CLUSTER*/void r432add_option_trace(T432* C,T0* a1);
/*CLUSTER*/void r432get_started(T432* C,T2 a1);
/*CLUSTER*/void r432view_in(T432* C,T0* a1);
/*CLUSTER*/T6 r432prepare_parser_buffer_for(T432* C,T0* a1);
/*CLUSTER*/void r432add_option_debug_key(T432* C,T0* a1,T0* a2);
/*TOKEN_BUFFER*/T0* r758to_class_name(T758* C);
/*TOKEN_BUFFER*/T0* r758eiffel_parser(void);
/*TOKEN_BUFFER*/T0* r758to_feature_name(T758* C);
/*TOKEN_BUFFER*/T0* r758to_tag_name(T758* C);
/*TOKEN_BUFFER*/T0* r758to_argument_name1(T758* C);
/*TOKEN_BUFFER*/T0* r758to_argument_name2(T758* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/void r758extend(T3 a1);
/*TOKEN_BUFFER*/T6 r758isa_keyword(void);
/*TOKEN_BUFFER*/T0* r758hashed_string(T758* C);
/*TOKEN_BUFFER*/T338 r758start_position(T758* C);
/*TOKEN_BUFFER*/T0* r758to_manifest_string(T758* C);
/*TOKEN_BUFFER*/T0* r758to_writable_attribute_name(T758* C);
/*TOKEN_BUFFER*/void r758append(T0* a1);
/*TOKEN_BUFFER*/void r758reset(T758* C,T2 a1,T2 a2);
/*TOKEN_BUFFER*/T0* r758to_local_name2(T758* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/T0* r758to_local_name1(T758* C);
typedef struct _se_agenT565f566l25c44 se_agenT565f566l25c44;
struct _se_agenT565f566l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT565f566l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT565f566l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT565f566l25c44(T0* closed_C);
void gc_mark_agenT565f566l25c44(se_agenT565f566l25c44*u);
/*C_HEADER_PASS_1*/void r565make(T565* C);
/*C_HEADER_PASS_1*/void r565compile_live_type(T565* C,T0* a1);
/*C_HEADER_PASS_1*/void r565visit_native_array_type_mark(T565* C,T0* a1);
/*C_HEADER_PASS_1*/void r565visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_1*/void r565standard_c_typedef(T0* a1);
/*C_HEADER_PASS_1*/void r565pre_compile(void);
/*C_HEADER_PASS_1*/void r565visit_agent_type_mark(T0* a1);
/*C_HEADER_PASS_1*/T0* r565cpp(void);
/*C_HEADER_PASS_1*/void r565do_compile(T565* C,T0* a1);
/*C_HEADER_PASS_1*/void r565compile(T565* C);
/*C_HEADER_PASS_1*/void r565flush_out_h(void);
/*C_HEADER_PASS_1*/void r565visit_class_type_mark(T0* a1);
typedef struct _se_agenT596f566l25c44 se_agenT596f566l25c44;
struct _se_agenT596f566l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT596f566l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT596f566l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT596f566l25c44(T0* closed_C);
void gc_mark_agenT596f566l25c44(se_agenT596f566l25c44*u);
/*C_HEADER_PASS_2*/void r596make(T596* C);
/*C_HEADER_PASS_2*/void r596compile_live_type(T596* C,T0* a1);
/*C_HEADER_PASS_2*/void r596visit_native_array_type_mark(T596* C,T0* a1);
/*C_HEADER_PASS_2*/T0* r596cpp(void);
/*C_HEADER_PASS_2*/void r596do_compile(T596* C,T0* a1);
/*C_HEADER_PASS_2*/void r596compile(T596* C);
/*C_HEADER_PASS_2*/void r596native_array_type_in(T0* a1,T0* a2);
/*C_HEADER_PASS_2*/void r596flush_out_h(void);
typedef struct _se_agenT597f597l22c50 se_agenT597f597l22c50;
struct _se_agenT597f597l22c50{Tid id;
int creation_mold_id;
void(*afp)(se_agenT597f597l22c50*,T0*);
void(*gc_mark_agent_mold)(se_agenT597f597l22c50*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT597f597l22c50(T0* closed_C);
void gc_mark_agenT597f597l22c50(se_agenT597f597l22c50*u);
typedef struct _se_agenT597f566l25c44 se_agenT597f566l25c44;
struct _se_agenT597f566l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT597f566l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT597f566l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT597f566l25c44(T0* closed_C);
void gc_mark_agenT597f566l25c44(se_agenT597f566l25c44*u);
/*C_HEADER_PASS_3*/void r597make(T597* C);
/*C_HEADER_PASS_3*/void r597standard_c_object_model(T0* a1);
/*C_HEADER_PASS_3*/void r597compile_expanded(T597* C,T0* a1);
/*C_HEADER_PASS_3*/void r597compile_live_type(T597* C,T0* a1);
/*C_HEADER_PASS_3*/void r597c_object_model_in(T0* a1);
/*C_HEADER_PASS_3*/void r597visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_3*/T0* r597cpp(void);
/*C_HEADER_PASS_3*/void r597do_compile(T597* C,T0* a1);
/*C_HEADER_PASS_3*/void r597compile(T597* C);
/*C_HEADER_PASS_3*/void r597flush_out_h(void);
/*C_HEADER_PASS_3*/void r597standard_c_struct(T0* a1);
/*C_HEADER_PASS_3*/void r597visit_class_type_mark(T0* a1);
typedef struct _se_agenT598f566l25c44 se_agenT598f566l25c44;
struct _se_agenT598f566l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT598f566l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT598f566l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT598f566l25c44(T0* closed_C);
void gc_mark_agenT598f566l25c44(se_agenT598f566l25c44*u);
/*C_HEADER_PASS_4*/void r598visit_empty_tuple_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r598make(T598* C);
/*C_HEADER_PASS_4*/void r598visit_string_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r598standard_c_object_model(T0* a1);
/*C_HEADER_PASS_4*/void r598compile_live_type(T598* C,T0* a1);
/*C_HEADER_PASS_4*/void r598visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r598c_object_model_in(T0* a1);
/*C_HEADER_PASS_4*/void r598visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r598c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r598visit_any_type_mark(T0* a1);
/*C_HEADER_PASS_4*/T0* r598cpp(void);
/*C_HEADER_PASS_4*/void r598do_compile(T598* C,T0* a1);
/*C_HEADER_PASS_4*/void r598compile(T598* C);
/*C_HEADER_PASS_4*/void r598standard_c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r598flush_out_h(void);
/*C_HEADER_PASS_4*/void r598visit_array_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r598standard_c_struct(T0* a1);
/*C_HEADER_PASS_4*/void r598visit_class_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r598visit_non_empty_tuple_type_mark(T0* a1);
typedef struct _se_agenT599f599l77c54 se_agenT599f599l77c54;
struct _se_agenT599f599l77c54{Tid id;
int creation_mold_id;
void(*afp)(se_agenT599f599l77c54*,T0*);
void(*gc_mark_agent_mold)(se_agenT599f599l77c54*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT599f599l77c54(T0* closed_a1);
void gc_mark_agenT599f599l77c54(se_agenT599f599l77c54*u);
typedef struct _se_agenT599f599l106c53 se_agenT599f599l106c53;
struct _se_agenT599f599l106c53{Tid id;
int creation_mold_id;
void(*afp)(se_agenT599f599l106c53*,T0*);
void(*gc_mark_agent_mold)(se_agenT599f599l106c53*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT599f599l106c53(T0* closed_a1);
void gc_mark_agenT599f599l106c53(se_agenT599f599l106c53*u);
typedef struct _se_agenT599f599l117c20 se_agenT599f599l117c20;
struct _se_agenT599f599l117c20{Tid id;
int creation_mold_id;
void(*afp)(se_agenT599f599l117c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT599f599l117c20*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT599f599l117c20(void);
void gc_mark_agenT599f599l117c20(se_agenT599f599l117c20*u);
/*C_LIVE_TYPE_COMPILER*/void r599create_function_define(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r599set_pending_c_function_counter_tag(T0* a1);
extern T0*oBC599c_frame_descriptor_format;
extern int fBC599c_frame_descriptor_format;
/*C_LIVE_TYPE_COMPILER*/T0* r599c_frame_descriptor_format(void);
/*C_LIVE_TYPE_COMPILER*/T0* r599internal_c_local_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599set_internal_c_local_tag(T0* a1,T0* a2);
extern T0*oBC595pending_c_function_counter_tag_key;
extern int fBC595pending_c_function_counter_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r599pending_c_function_counter_tag_key(void);
/*C_LIVE_TYPE_COMPILER*/void r599define_agent_creation_for(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599put_c_field_name(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T6 r599rf7_does_need_c_wrapper(T0* a1);
extern T0*oBC595pending_c_function_counter_tag_values;
extern int fBC595pending_c_function_counter_tag_values;
/*C_LIVE_TYPE_COMPILER*/T0* r599pending_c_function_counter_tag_values(void);
extern T0*oBC595internal_c_local_tag_key;
extern int fBC595internal_c_local_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r599internal_c_local_tag_key(void);
extern T0*oBC599c_frame_descriptor_locals;
extern int fBC599c_frame_descriptor_locals;
/*C_LIVE_TYPE_COMPILER*/T0* r599c_frame_descriptor_locals(void);
/*C_LIVE_TYPE_COMPILER*/T0* r599cpp(void);
/*C_LIVE_TYPE_COMPILER*/void r599define_c_signature(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599is_equal_agent_creation_define_function(T0* a1,T0* a2);
extern T0*oBC599is_equal_agent_creation_type_generated;
extern int fBC599is_equal_agent_creation_type_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r599is_equal_agent_creation_type_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r599rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r599compile_live_type(T599* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599put_c_name_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_2(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_3(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_4(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599c_frame_descriptor(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_5(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599define_agent_creation_function(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_6(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599make(T599* C);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_7(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599args_c_frame_descriptor(T0* a1,T0* a2,T6 a3);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_8(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599visit_run_feature_9(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T0* r599echo(void);
/*C_LIVE_TYPE_COMPILER*/T6 r599rf8_does_need_c_wrapper(T0* a1);
extern T0*oBC599agent_address_of_c_define;
extern int fBC599agent_address_of_c_define;
/*C_LIVE_TYPE_COMPILER*/T0* r599agent_address_of_c_define(void);
/*C_LIVE_TYPE_COMPILER*/void r599is_equal_agent_creation_define_type_for(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r599compile(T599* C,T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/void r599is_equal_mold_id_in(T0* a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r599c_define_opening(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599args_compile_to_c_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r599open_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/T2 r599pending_c_function_counter_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599do_compile(T599* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599define_check_class_invariant_c_function(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599initialize_expanded(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r599address_of_c_define(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r599compile_to_c_old_memory(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r599c_initialize_frame_information(T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/T0* r599define_agent_creation_type(T0* a1,T0* a2,T6 a3,T0* a4,T2 a5);
extern T0*oBC599is_equal_agent_creation_function_generated;
extern int fBC599is_equal_agent_creation_function_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r599is_equal_agent_creation_function_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r599closed_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r599c_define_closing(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_7(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_8(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_9(T0* a1);
/*C_MAPPER*/void r611put_c_field_name(T0* a1);
/*C_MAPPER*/void r611default_mapping_function(T0* a1);
/*C_MAPPER*/T6 r611rf8_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/void r611default_mapping_procedure(T0* a1);
/*C_MAPPER*/T6 r611rf7_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/T0* r611cpp(void);
/*C_MAPPER*/void r611compile(T611* C,T0* a1);
/*C_MAPPER*/void r611visit_run_feature_1(T0* a1);
/*C_MAPPER*/void r611default_mapping_arg(T0* a1,T6 a2,T6 a3,T6 a4);
/*C_MAPPER*/void r611visit_run_feature_2(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_3(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_4(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_5(T0* a1);
/*C_MAPPER*/void r611visit_run_feature_6(T0* a1);
/*C_INITIALIZER*/void r612visit_empty_tuple_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_string_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_like_feature_type_mark(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_real_type_mark(T0* a1);
/*C_INITIALIZER*/T0* r612for(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_native_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_natural_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_like_current_type_mark(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_like_argument_type_mark(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_user_generic_type_mark(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_pointer_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_any_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_agent_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_character_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_formal_generic_type_mark(T612* C,T0* a1);
/*C_INITIALIZER*/void r612c_initialize_user_expanded(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_boolean_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r612crash(T612* C);
/*C_INITIALIZER*/void r612visit_integer_type_mark(T0* a1);
/*C_INITIALIZER*/void r612visit_class_type_mark(T612* C,T0* a1);
/*C_INITIALIZER*/void r612visit_non_empty_tuple_type_mark(T0* a1);
/*C_TARGET_MAPPER*/void r613set_pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_void_call(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_create_expression(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613compile_feature_call(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_fake_tuple(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_e_false(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_call_infix_ge(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_native_array_item(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_implicit_cast(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_integer_constant(T0* a1);
/*C_TARGET_MAPPER*/void r613not_yet_implemented(T613* C);
/*C_TARGET_MAPPER*/T0* r613internal_c_local_tag(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_compound_expression(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613set_internal_c_local_tag(T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r613visit_dynamic_dispatch_temporary1_id(T613* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r613pending_c_function_counter_tag_key(void);
/*C_TARGET_MAPPER*/void r613visit_old_manifest_array(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_call_infix_gt(T613* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r613pending_c_function_counter_tag_values(void);
/*C_TARGET_MAPPER*/void r613compile_expression(T613* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r613internal_c_local_tag_key(void);
/*C_TARGET_MAPPER*/void r613visit_call_infix_le(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_call_prefix_not(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_call_infix_lt(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_implicit_current(T0* a1);
/*C_TARGET_MAPPER*/T0* r613cpp(void);
/*C_TARGET_MAPPER*/void r613args_compile_to_c(T613* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r613visit_real_constant(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_agent_creation(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_static_call_0_c(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_no_dispatch(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_character_constant(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_null_pointer(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_dynamic_dispatch_temporary1(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_dynamic_dispatch_temporary2(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_e_true(T0* a1);
/*C_TARGET_MAPPER*/void r613crash(T613* C);
/*C_TARGET_MAPPER*/void r613visit_natural_constant(T0* a1);
/*C_TARGET_MAPPER*/void r613compile_(T613* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r613visit_assignment_test(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613create_expression_support(T613* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r613visit_written_current(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613compile(T613* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r613visit_expression_with_comment(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_assertion(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_manifest_string(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613c2c_cast_op(T613* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r613visit_non_void_no_dispatch(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_manifest_tuple(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_closed_operand(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613cmp_user_expanded(T613* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/T2 r613pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r613visit_create_writable(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613standard_mapping_c_target(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_writable_attribute_name(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_internal_local2(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_address_of(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_fake_argument(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_e_void(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613compile_character(T3 a1);
/*C_TARGET_MAPPER*/void r613visit_loop_variant(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613cmp_expanded_with_void(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613visit_manifest_generic(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613compile_arg(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613cmp_reference(T613* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r613visit_built_in_eq_neq(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613cmp_basic_eiffel_expanded(T613* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r613_P_614_compile_feature_call(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_native_array_item(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_no_dispatch(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_assignment_test(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_manifest_string(T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_non_void_no_dispatch(T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_manifest_tuple(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_internal_local2(T613* C,T0* a1);
/*C_TARGET_MAPPER*/void r613_P_614_visit_manifest_generic(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r615set_pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r615visit_void_call(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_create_expression(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615compile_feature_call(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_fake_tuple(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_e_false(T0* a1);
/*C_ARG_MAPPER*/void r615visit_call_infix_ge(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_native_array_item(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_implicit_cast(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_integer_constant(T0* a1);
/*C_ARG_MAPPER*/void r615not_yet_implemented(T615* C);
/*C_ARG_MAPPER*/T0* r615internal_c_local_tag(T0* a1);
/*C_ARG_MAPPER*/void r615visit_compound_expression(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615set_internal_c_local_tag(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615visit_argument_name2(T0* a1);
/*C_ARG_MAPPER*/void r615visit_dynamic_dispatch_temporary1_id(T615* C,T0* a1);
/*C_ARG_MAPPER*/T0* r615pending_c_function_counter_tag_key(void);
/*C_ARG_MAPPER*/void r615compile_agent_definition_call(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_old_manifest_array(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_call_infix_gt(T615* C,T0* a1);
/*C_ARG_MAPPER*/T0* r615pending_c_function_counter_tag_values(void);
/*C_ARG_MAPPER*/void r615compile_expression(T615* C,T0* a1);
/*C_ARG_MAPPER*/T0* r615internal_c_local_tag_key(void);
/*C_ARG_MAPPER*/void r615visit_call_infix_le(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_call_prefix_not(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_call_infix_lt(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_generator_generating_type(T0* a1);
/*C_ARG_MAPPER*/T0* r615cpp(void);
/*C_ARG_MAPPER*/void r615args_compile_to_c(T615* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615visit_real_constant(T0* a1);
/*C_ARG_MAPPER*/void r615visit_agent_creation(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r615visit_static_call_0_c(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_no_dispatch(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_character_constant(T0* a1);
/*C_ARG_MAPPER*/void r615visit_null_pointer(T0* a1);
/*C_ARG_MAPPER*/void r615visit_dynamic_dispatch_temporary1(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_dynamic_dispatch_temporary2(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_e_true(T0* a1);
/*C_ARG_MAPPER*/void r615compile_code(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615crash(T615* C);
/*C_ARG_MAPPER*/void r615visit_natural_constant(T0* a1);
/*C_ARG_MAPPER*/void r615compile_agent_void_call(T615* C,T0* a1,T338 a2,T0* a3);
/*C_ARG_MAPPER*/void r615visit_assignment_test(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615create_expression_support(T615* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615compile(T615* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615visit_expression_with_comment(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_abstract_current(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_assertion(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_manifest_string(T0* a1);
/*C_ARG_MAPPER*/void r615c2c_cast_op(T615* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r615visit_non_void_no_dispatch(T0* a1);
/*C_ARG_MAPPER*/void r615visit_manifest_tuple(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_closed_operand(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615open_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615visit_open_operand(T0* a1);
/*C_ARG_MAPPER*/void r615cmp_user_expanded(T615* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615visit_local_name2(T0* a1);
/*C_ARG_MAPPER*/void r615visit_e_old(T0* a1);
/*C_ARG_MAPPER*/T2 r615pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r615visit_create_writable(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_fake_target(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_writable_attribute_name(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_internal_local2(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_address_of(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_fake_argument(T0* a1);
/*C_ARG_MAPPER*/void r615visit_e_void(T0* a1);
/*C_ARG_MAPPER*/void r615compile_character(T3 a1);
/*C_ARG_MAPPER*/void r615visit_agent_expression(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_loop_variant(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615compile_precursor(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615cmp_expanded_with_void(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615visit_manifest_generic(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615compile_arg(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615cmp_reference(T615* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r615visit_built_in_eq_neq(T615* C,T0* a1);
/*C_ARG_MAPPER*/void r615closed_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r615visit_result(T0* a1);
/*C_ARG_MAPPER*/void r615cmp_basic_eiffel_expanded(T615* C,T0* a1,T0* a2,T0* a3);
typedef struct _se_agenT616f616l80c33 se_agenT616f616l80c33;
struct _se_agenT616f616l80c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT616f616l80c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT616f616l80c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT616f616l80c33(T0* closed_C);
void gc_mark_agenT616f616l80c33(se_agenT616f616l80c33*u);
typedef struct _se_agenT616f616l1095c35 se_agenT616f616l1095c35;
struct _se_agenT616f616l1095c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT616f616l1095c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT616f616l1095c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT616f616l1095c35(T0* closed_C);
void gc_mark_agenT616f616l1095c35(se_agenT616f616l1095c35*u);
typedef struct _se_agenT616f616l61c33 se_agenT616f616l61c33;
struct _se_agenT616f616l61c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT616f616l61c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT616f616l61c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT616f616l61c33(T0* closed_C);
void gc_mark_agenT616f616l61c33(se_agenT616f616l61c33*u);
typedef struct _se_agenT616f616l1070c37 se_agenT616f616l1070c37;
struct _se_agenT616f616l1070c37{Tid id;
int creation_mold_id;
void(*afp)(se_agenT616f616l1070c37*,T0*);
void(*gc_mark_agent_mold)(se_agenT616f616l1070c37*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT616f616l1070c37(T0* closed_C);
void gc_mark_agenT616f616l1070c37(se_agenT616f616l1070c37*u);
typedef struct _se_agenT616f616l1078c32 se_agenT616f616l1078c32;
struct _se_agenT616f616l1078c32{Tid id;
int creation_mold_id;
void(*afp)(se_agenT616f616l1078c32*,T0*);
void(*gc_mark_agent_mold)(se_agenT616f616l1078c32*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT616f616l1078c32(T0* closed_C);
void gc_mark_agenT616f616l1078c32(se_agenT616f616l1078c32*u);
typedef struct _se_agenT616f616l1025c35 se_agenT616f616l1025c35;
struct _se_agenT616f616l1025c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT616f616l1025c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT616f616l1025c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT616f616l1025c35(T0* closed_C);
void gc_mark_agenT616f616l1025c35(se_agenT616f616l1025c35*u);
/*C_CODE_COMPILER*/void r616compile_as_require_n(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_compound(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616not_yet_implemented(T616* C);
/*C_CODE_COMPILER*/void r616visit_check_compound(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_inspect_as_switch(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_e_void(T0* a1);
/*C_CODE_COMPILER*/void r616compile_code(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_old_manifest_array(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_class_invariant(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_inspect_statement(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_as_check_compound(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_feature_call(T616* C,T0* a1);
/*C_CODE_COMPILER*/T0* r616cpp(void);
/*C_CODE_COMPILER*/void r616visit_manifest_generic(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_run_time_error_instruction(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_assertion(T616* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616visit_fake_target(T0* a1);
/*C_CODE_COMPILER*/void r616visit_real_constant(T0* a1);
/*C_CODE_COMPILER*/void r616visit_no_dispatch(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_argument_name2(T0* a1);
/*C_CODE_COMPILER*/void r616compile_as_require_1(T616* C,T0* a1);
/*C_CODE_COMPILER*/T0* r616pending_c_function_counter_tag_values(void);
/*C_CODE_COMPILER*/void r616visit_natural_constant(T0* a1);
/*C_CODE_COMPILER*/void r616visit_address_of(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_create_writable(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_inspect_as_ifthenelse(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_assertion_list(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_retry_instruction(T0* a1);
/*C_CODE_COMPILER*/void r616visit_e_false(T0* a1);
/*C_CODE_COMPILER*/void r616visit_manifest_string(T0* a1);
/*C_CODE_COMPILER*/void r616visit_writable_attribute_name(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_c_inline(T0* a1);
/*C_CODE_COMPILER*/void r616visit_call_prefix_not(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_arg(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_assignment_test(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_implicit_cast(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_no_invariant_wrapper(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_internal_local2(T616* C,T0* a1);
/*C_CODE_COMPILER*/T2 r616pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r616open_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616visit_ensure_assertion(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_expression(T616* C,T0* a1);
/*C_CODE_COMPILER*/T0* r616pending_c_function_counter_tag_key(void);
/*C_CODE_COMPILER*/void r616visit_create_expression(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_e_true(T0* a1);
/*C_CODE_COMPILER*/void r616compile_precursor(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616set_internal_c_local_tag(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616unlock_internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/void r616visit_when_clause(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616cmp_expanded_with_void(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_sedb(T0* a1);
/*C_CODE_COMPILER*/void r616visit_built_in_eq_neq(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r616compile_assertion_as_require_n(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_when_clause_as_switch(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616put_start_position(T0* a1);
/*C_CODE_COMPILER*/void r616visit_result(T0* a1);
/*C_CODE_COMPILER*/void r616set_pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r616visit_dynamic_dispatch_temporary1(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616cmp_user_expanded(T616* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616visit_dynamic_dispatch_temporary2(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_manifest_tuple(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_character(T3 a1);
/*C_CODE_COMPILER*/void r616compile_as_require(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_fake_tuple(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_debug_compound(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616create_expression_support(T616* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616visit_character_constant(T0* a1);
/*C_CODE_COMPILER*/void r616visit_integer_constant(T0* a1);
/*C_CODE_COMPILER*/void r616visit_closed_operand(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_agent_instruction(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_abstract_current(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_void_call(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_code_as_expression(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_generator_generating_type(T0* a1);
/*C_CODE_COMPILER*/void r616args_compile_to_c(T616* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616put_c_field_name(T0* a1);
/*C_CODE_COMPILER*/void r616visit_unused_expression(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_null_pointer(T0* a1);
/*C_CODE_COMPILER*/void r616visit_native_array_item(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_e_old(T0* a1);
/*C_CODE_COMPILER*/void r616visit_non_void_no_dispatch(T0* a1);
/*C_CODE_COMPILER*/void r616visit_agent_creation(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_dynamic_dispatch_temporary1_id(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616crash(T616* C);
/*C_CODE_COMPILER*/void r616visit_ifthenelse(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_create_instruction(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_assertion(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_local_name2(T0* a1);
/*C_CODE_COMPILER*/void r616compile_manifest_string_inspector(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_loop_instruction(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile(T616* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616visit_ifthen(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_agent_definition_call(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_require_assertion(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_call_infix_ge(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_compound_expression(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616compile_agent_void_call(T616* C,T0* a1,T338 a2,T0* a3);
/*C_CODE_COMPILER*/void r616visit_agent_expression(T616* C,T0* a1);
/*C_CODE_COMPILER*/T0* r616internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/T0* r616internal_c_local_tag_key(void);
/*C_CODE_COMPILER*/void r616compile_as_loop_invariant(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_call_infix_gt(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_open_operand(T0* a1);
/*C_CODE_COMPILER*/void r616closed_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r616visit_void_proc_call(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_call_infix_le(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_loop_variant(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616c2c_cast_op(T616* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r616visit_assignment_attempt(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_static_call_0_c(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_fake_argument(T0* a1);
/*C_CODE_COMPILER*/void r616cmp_reference(T616* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r616visit_call_infix_lt(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_expression_with_comment(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616visit_assignment(T616* C,T0* a1);
/*C_CODE_COMPILER*/void r616cmp_basic_eiffel_expanded(T616* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r616visit_raw_create_instruction(T616* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_or(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_e_void(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_code(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_old_manifest_array(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_function_call_0(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_function_call_1(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_(T620* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_feature_call(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r620cpp(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_manifest_generic(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_fake_target(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_real_constant(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_no_dispatch(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_argument_name2(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_and_then(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r620pending_c_function_counter_tag_values(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_natural_constant(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_address_of(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_create_writable(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_function_call_n(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_xor(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_e_false(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_manifest_string(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_writable_attribute_name(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_prefix_not(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_arg(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_assignment_test(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_implicit_cast(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_internal_local2(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T2 r620pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_expression_(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620open_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_expression(T620* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r620pending_c_function_counter_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_create_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_e_true(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_precursor(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620set_internal_c_local_tag(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620cmp_expanded_with_void(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_built_in_eq_neq(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_plus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_prefix_freeop(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_result(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620set_pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_dynamic_dispatch_temporary1(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620cmp_user_expanded(T620* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_dynamic_dispatch_temporary2(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_manifest_tuple(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_character(T3 a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620do_compile(T620* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_fake_tuple(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620create_expression_support(T620* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_character_constant(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_integer_constant(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_closed_operand(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_abstract_current(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_freeop(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_div(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_void_call(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_code_as_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_prefix_minus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_generator_generating_type(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620args_compile_to_c(T620* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620put_c_field_name(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_null_pointer(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_native_array_item(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_e_old(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_non_void_no_dispatch(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_agent_creation(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_dynamic_dispatch_temporary1_id(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_int_rem(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620crash(T620* C);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_power(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_assertion(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_local_name2(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_and(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile(T620* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_or_else(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_minus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_agent_definition_call(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_implies(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_times(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_int_div(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_ge(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_compound_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620compile_agent_void_call(T620* C,T0* a1,T338 a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_agent_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r620internal_c_local_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r620internal_c_local_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_gt(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_open_operand(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620closed_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_le(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_loop_variant(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620c2c_cast_op(T620* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_prefix_plus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_static_call_0_c(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_fake_argument(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620cmp_reference(T620* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_call_infix_lt(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_precursor_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620visit_expression_with_comment(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620cmp_basic_eiffel_expanded(T620* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_or(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_e_void(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_old_manifest_array(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_function_call_0(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_function_call_1(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_manifest_generic(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_fake_target(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_real_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_no_dispatch(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_argument_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_and_then(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_natural_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_address_of(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_create_writable(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_function_call_n(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_xor(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_e_false(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_manifest_string(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_writable_attribute_name(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_prefix_not(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_assignment_test(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_implicit_cast(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_internal_local2(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_create_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_e_true(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_built_in_eq_neq(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_plus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_prefix_freeop(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_result(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_dynamic_dispatch_temporary1(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_dynamic_dispatch_temporary2(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_manifest_tuple(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_fake_tuple(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_character_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_integer_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_closed_operand(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_abstract_current(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_freeop(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_div(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_void_call(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_prefix_minus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_generator_generating_type(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_null_pointer(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_native_array_item(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_e_old(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_non_void_no_dispatch(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_agent_creation(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_dynamic_dispatch_temporary1_id(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_int_rem(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_power(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_assertion(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_local_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_and(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_or_else(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_minus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_implies(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_times(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_int_div(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_ge(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_agent_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_gt(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_open_operand(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_le(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_loop_variant(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_prefix_plus(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_static_call_0_c(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_fake_argument(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_call_infix_lt(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_precursor_expression(T620* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r620_P_614_visit_expression_with_comment(T620* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622not_yet_implemented(T622* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r622visit_native_built_in(T622* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r622system_tools(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r622extra_c_prototype_in_cpp_out_h_buffer(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r622extra_c_prototype(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_mapping_integer_function(T622* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r622visit_native_c_plus_plus(T622* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_deep_twin_body(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r622cpp(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r622mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_FUNCTION_MAPPER*/void r622visit_native_c(T622* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_modular_computation(T2 a1,T3 a2);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_field_access(T0* a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r622crash(T622* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r622visit_native_plug_in(T622* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622compile(T622* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_mapping_real(T622* C);
/*C_NATIVE_FUNCTION_MAPPER*/T6 r622expanded_initializer(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622is_deep_equal_c_code(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_mapping_natural_function(T622* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_mapping_native_array_function(T622* C);
extern T0*oBC32capacity_name;
extern int fBC32capacity_name;
/*C_NATIVE_FUNCTION_MAPPER*/T0* r622capacity_name(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r622c_mapping_standard_twin(T622* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r622wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623visit_native_c(T623* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623c_mapping_native_array_procedure(T623* C);
/*C_NATIVE_PROCEDURE_MAPPER*/T0* r623cpp(void);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623compile(T623* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623extra_c_prototype_in_cpp_out_h_buffer(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623visit_native_built_in(T623* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623visit_native_c_plus_plus(T623* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623extra_c_prototype(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623c_mapping_integer_procedure(T623* C);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623visit_native_plug_in(T623* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r623mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_C_DEFINITION*/void r624make(T624* C);
/*C_NATIVE_C_DEFINITION*/void r624c_plus_plus_procedure_definition(T624* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/T0* r624cpp(void);
/*C_NATIVE_C_DEFINITION*/void r624compile(T624* C,T0* a1,T0* a2);
/*C_NATIVE_C_DEFINITION*/void r624extra_c_prototype_in_cpp_out_h_buffer(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_C_DEFINITION*/void r624visit_native_c_plus_plus(T624* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/void r624c_plus_plus_function_definition(T624* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r625put_c_field_name(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r625c_pointer_to_type(T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r625mapping_c_inside_introspect(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r625cpp(void);
/*C_INTROSPECTION_FUNCTION*/void r625compile(T625* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r625c_return_introspect(T0* a1,T0* a2,T0* a3);
/*C_INTROSPECTION_FUNCTION*/void r625visit_live_type(T625* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r625visit_run_feature_2(T625* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r625visit_run_feature_6(T625* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/T0* r626cpp(void);
/*C_INTROSPECTION_DISPLAY*/void r626compile(T626* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r626visit_live_type(T626* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r626visit_run_feature_2(T626* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r626visit_run_feature_6(T626* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_like_feature_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/T0* r627for(T627* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_like_current_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_like_argument_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_formal_generic_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627crash(T627* C);
/*C_TYPE_FOR_TARGET*/void r627visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r627visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_like_feature_type_mark(T629* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r629for(T629* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_like_current_type_mark(T629* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_like_argument_type_mark(T629* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_formal_generic_type_mark(T629* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629crash(T629* C);
/*C_TYPE_FOR_RESULT*/void r629visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r629for_external(T629* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r629visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_like_feature_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/T0* r628for(T628* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_like_current_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_like_argument_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_formal_generic_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628crash(T628* C);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r628visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_like_feature_type_mark(T630* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/T0* r630for(T630* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_like_current_type_mark(T630* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_like_argument_type_mark(T630* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_formal_generic_type_mark(T630* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630crash(T630* C);
/*C_TYPE_FOR_VA_ARG*/void r630visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r630visit_non_empty_tuple_type_mark(T0* a1);
/*C_NEED_STRUCT*/void r631visit_empty_tuple_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631visit_string_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631visit_like_feature_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/T6 r631for(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631visit_like_current_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631visit_like_argument_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631set_flag_for(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631visit_formal_generic_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631visit_array_type_mark(T631* C,T0* a1);
/*C_NEED_STRUCT*/void r631crash(T631* C);
/*C_NEED_STRUCT*/void r631visit_non_empty_tuple_type_mark(T631* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r632visit_native_c(T632* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r632for(T632* C,T0* a1,T0* a2,T0* a3);
/*C_NATIVE_NEED_WRAPPER*/T6 r632expanded_initializer(T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r632visit_native_built_in(T632* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r632visit_native_c_plus_plus(T632* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r632for_rf7(T632* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r632for_rf8(T632* C,T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r633set_tag(T0* a1,T0* a2);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633get_tag(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633is_enabled(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r633is_native_array_collector_enabled_(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633cpp(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633must_collect(T0* a1);
extern T0*oBC32mark_native_arrays_name;
extern int fBC32mark_native_arrays_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633mark_native_arrays_name(void);
extern T0*oBC633yes;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r633collect(T0* a1);
extern T0*oBC633tag_key;
extern int fBC633tag_key;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633tag_key(void);
extern T0*oBC633no;
extern T0*oBC32mark_item_name;
extern int fBC32mark_item_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r633mark_item_name(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r633is_native_array_collector_enabled(T0* a1);
typedef struct _se_agenT368f368l155c36 se_agenT368f368l155c36;
struct _se_agenT368f368l155c36{Tid id;
int creation_mold_id;
void(*afp)(se_agenT368f368l155c36*,T0*);
void(*gc_mark_agent_mold)(se_agenT368f368l155c36*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT368f368l155c36(T0* closed_C,T0* closed_a1);
void gc_mark_agenT368f368l155c36(se_agenT368f368l155c36*u);
typedef struct _se_agenT368f368l473c44 se_agenT368f368l473c44;
struct _se_agenT368f368l473c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT368f368l473c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT368f368l473c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT368f368l473c44(T0* closed_a1);
void gc_mark_agenT368f368l473c44(se_agenT368f368l473c44*u);
/*LIVE_TYPE*/T0* r368tag(T368* C,T0* a1);
/*LIVE_TYPE*/void r368create_function_register(T368* C,T0* a1);
/*LIVE_TYPE*/void r368sort_wam(T0* a1);
/*LIVE_TYPE*/T6 r368generating_type_used(T368* C);
/*LIVE_TYPE*/T0* r368at(T368* C,T0* a1);
/*LIVE_TYPE*/void r368collect(T368* C,T0* a1);
extern T0*oBC32deep_memcmp_name;
extern int fBC32deep_memcmp_name;
/*LIVE_TYPE*/T0* r368deep_memcmp_name(void);
/*LIVE_TYPE*/void r368collect_is_deep_equal(T368* C);
/*LIVE_TYPE*/T6 r368is_native_array(T368* C);
/*LIVE_TYPE*/void r368simplify(T368* C);
/*LIVE_TYPE*/T6 r368generator_used(T368* C);
/*LIVE_TYPE*/T0* r368dynamic_feature(T368* C,T0* a1);
/*LIVE_TYPE*/T6 r368no_dispatch_collect(T368* C,T0* a1);
/*LIVE_TYPE*/void r368propagate_features(T368* C);
/*LIVE_TYPE*/T2 r368feature_count(T368* C);
/*LIVE_TYPE*/void r368do_collect(T368* C);
/*LIVE_TYPE*/T6 r368side_effect_free_default_create(T368* C);
/*LIVE_TYPE*/T6 r368gt(T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r368get_memory_dispose(T368* C);
/*LIVE_TYPE*/void r368safety_check(T368* C);
/*LIVE_TYPE*/void r368make_run_features(T368* C);
/*LIVE_TYPE*/T6 r368_ix_60(T368* C,T0* a1);
/*LIVE_TYPE*/T6 r368is_empty_expanded(T368* C);
/*LIVE_TYPE*/T6 r368can_be_assigned_to(T368* C,T0* a1);
/*LIVE_TYPE*/void r368make(T368* C,T0* a1);
/*LIVE_TYPE*/void r368collect_sub_type(T368* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r368echo(void);
/*LIVE_TYPE*/T0* r368copy_run_feature(T368* C);
/*LIVE_TYPE*/void r368allow_collecting(T368* C,T0* a1);
/*LIVE_TYPE*/void r368adapt_run_features_and_class_invariant(T368* C);
extern T0*oBC32is_deep_equal_name;
extern int fBC32is_deep_equal_name;
/*LIVE_TYPE*/T0* r368is_deep_equal_name(void);
/*LIVE_TYPE*/void r368collect_deep_twin(T368* C);
/*LIVE_TYPE*/void r368set_at_run_time(T368* C);
/*LIVE_TYPE*/T0* r368precursor_run_feature(T368* C,T0* a1,T0* a2);
/*LIVE_TYPE*/void r368set_generator_used(T368* C);
/*LIVE_TYPE*/void r368forbid_collecting(T368* C,T0* a1);
extern T0*oBC32any_is_deep_equal_fs;
extern int fBC32any_is_deep_equal_fs;
/*LIVE_TYPE*/T0* r368any_is_deep_equal_fs(void);
/*LIVE_TYPE*/T6 r368is_reference(T368* C);
/*LIVE_TYPE*/T0* r368default_create_run_feature(T368* C);
extern T0*oBC32deep_twin_from_name;
extern int fBC32deep_twin_from_name;
/*LIVE_TYPE*/T0* r368deep_twin_from_name(void);
/*LIVE_TYPE*/void r368inline_dynamic_dispatch(T368* C,T0* a1);
extern T0*oBC368new_features;
extern int fBC368new_features;
/*LIVE_TYPE*/T0* r368new_features(void);
extern T0*oBC32any_deep_twin_fs;
extern int fBC32any_deep_twin_fs;
/*LIVE_TYPE*/T0* r368any_deep_twin_fs(void);
/*LIVE_TYPE*/T0* r368structure_signature(T368* C);
/*LIVE_TYPE*/T0* r368writable_attributes(T368* C);
/*LIVE_TYPE*/void r368set_tag(T368* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r368id_provider(void);
/*LIVE_TYPE*/void r368id_extra_information(T368* C,T0* a1);
extern T0*oBC32deep_twin_name;
extern int fBC32deep_twin_name;
/*LIVE_TYPE*/T0* r368deep_twin_name(void);
/*LIVE_TYPE*/void r368do_collect_is_deep_equal(T368* C);
/*LIVE_TYPE*/T0* r368live_type_extra_collectors(void);
/*LIVE_TYPE*/void r368accept(T368* C,T0* a1);
/*LIVE_TYPE*/void r368forget_previous_collect(T368* C);
/*LIVE_TYPE*/T6 r368is_tagged(T368* C);
/*LIVE_TYPE*/void r368merge_features_from(T368* C,T0* a1);
/*LIVE_TYPE*/T6 r368collected(T368* C,T0* a1);
/*CLASS_NAME*/T93*create93unknown_position(T0* a1);
/*CLASS_NAME*/T93*create93make(T0* a1,T338 a2);
/*CLASS_NAME*/T6 r93is_equal(T93* C,T0* a1);
/*CLASS_NAME*/void r93make(T93* C,T0* a1,T338 a2);
/*CLASS_NAME*/T0* r93try_class_text(T93* C);
/*CLASS_NAME*/void r93set_hashed_name(T93* C,T0* a1);
/*CLASS_NAME*/void r93unknown_position(T93* C,T0* a1);
/*CLASS_NAME*/T0* r93class_text(T93* C);
/*CLASS_NAME*/T0* r93twin(T93* C);
/*CLASS_NAME*/T6 r93get_export_permission_of(T93* C,T0* a1);
/*CLASS_NAME*/T2 r93tuple_count(T93* C);
/*CLASS_TEXT*/void r95id_extra_information(T95* C,T0* a1);
/*CLASS_TEXT*/void r95create_parent_lists_using(T95* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CLASS_TEXT*/T0* r95proper_name_get(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95declaration_type_of_like_current(T95* C);
extern T0*oBC95fn_buffer;
extern int fBC95fn_buffer;
/*CLASS_TEXT*/T0* r95fn_buffer(void);
/*CLASS_TEXT*/T6 r95has_creation_check(T95* C,T0* a1,T338 a2,T0* a3,T0* a4);
/*CLASS_TEXT*/T0* r95next_tuple(T95* C);
/*CLASS_TEXT*/T0* r95constraints_generic_list(T95* C);
/*CLASS_TEXT*/void r95add_creation_clause(T95* C,T0* a1);
/*CLASS_TEXT*/void r95set_invariant(T95* C,T338 a1,T0* a2,T0* a3);
extern T0*oBC32default_create_name;
extern int fBC32default_create_name;
/*CLASS_TEXT*/T0* r95default_create_name(void);
/*CLASS_TEXT*/T6 r95all_check(T95* C);
/*CLASS_TEXT*/void r95set_is_expanded(T95* C);
/*CLASS_TEXT*/T0* r95default_root_procedure_name(T95* C);
/*CLASS_TEXT*/void r95fatal_error_when_no_creation_clause(T95* C);
/*CLASS_TEXT*/void r95fatal_undefine(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95any_is_equal_feature(T95* C);
/*CLASS_TEXT*/T0* r95proper_get(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95proper_has(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95declaration_type_of_like_current_(T95* C,T338 a1);
/*CLASS_TEXT*/T1 r95insert_inherit_test(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95require_check(T95* C);
/*CLASS_TEXT*/void r95set_is_deferred(T95* C);
/*CLASS_TEXT*/void r95set_tag(T95* C,T0* a1,T0* a2);
/*CLASS_TEXT*/void r95formal_generic_list_count_check(T95* C,T338 a1,T0* a2);
/*CLASS_TEXT*/T0* r95any_copy_feature(T95* C);
/*CLASS_TEXT*/T6 r95inherits_from(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95user_expanded_default_create_stamp(T95* C,T0* a1);
/*CLASS_TEXT*/void r95initialize_and_check_level_1(T95* C);
/*CLASS_TEXT*/T0* r95root_creation_search(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95loop_check(T95* C);
/*CLASS_TEXT*/T0* r95level_name(T2 a1);
/*CLASS_TEXT*/void r95finish_create(T95* C);
/*CLASS_TEXT*/void r95extra_expanded_check(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95ensure_check(T95* C);
/*CLASS_TEXT*/void r95add_feature_clause(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95obvious_resolve_static_binding(T95* C,T0* a1,T6 a2);
/*CLASS_TEXT*/void r95check_level_2(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95non_written(T95* C,T0* a1,T0* a2);
/*CLASS_TEXT*/T0* r95id_provider(void);
/*CLASS_TEXT*/void r95make(T95* C,T0* a1,T0* a2,T0* a3,T10 a4);
/*CLASS_TEXT*/T6 r95invariant_check(T95* C);
/*CLASS_TEXT*/void r95creation_list_check(T95* C,T0* a1);
/*CLASS_TEXT*/void r95add_index_clause(T95* C,T0* a1);
/*CLASS_TEXT*/void r95error_vtec1(T95* C);
extern T0*oBC32any_default_create_fs;
extern int fBC32any_default_create_fs;
/*CLASS_TEXT*/T0* r95any_default_create_fs(void);
/*CLASS_TEXT*/void r95obsolete_warning_check(T95* C,T338 a1);
/*CLASS_TEXT*/T0* r95tag(T95* C,T0* a1);
extern T0*oBC32any_default_rescue_fs;
extern int fBC32any_default_rescue_fs;
/*TYPE*/T0* r277any_default_rescue_fs(void);
/*TYPE*/T6 r277has_simple_feature_name(T277* C,T0* a1);
/*TYPE*/T0* r277name_from_string(T277* C,T0* a1);
/*TYPE*/T6 r277is_agent(T277* C);
/*TYPE*/T0* r277long_name(T277* C);
/*TYPE*/void r277add_parent(T277* C,T0* a1);
/*TYPE*/T0* r277expanded_default_create_stamp(T277* C);
/*TYPE*/void r277collect_features(T277* C);
/*TYPE*/T6 r277is_native_array(T277* C);
/*TYPE*/T2 r277id(T277* C);
/*TYPE*/T6 r277is_pointer(T277* C);
/*TYPE*/void r277collect_default_rescue(T277* C,T0* a1);
/*TYPE*/T0* r277parent_edge_load(T277* C,T2 a1);
/*TYPE*/void r277do_collect(T277* C);
/*TYPE*/T2 r277parents_count(T277* C);
/*TYPE*/T1 r277insert_inherit_test(T277* C,T0* a1);
/*TYPE*/T0* r277has_only_one_conformant_parent(T277* C);
/*TYPE*/T6 r277is_real(T277* C);
/*TYPE*/T0* r277feature_stamp_of(T277* C,T0* a1);
/*TYPE*/T6 r277is_fixed_string(T277* C);
/*TYPE*/T6 r277is_empty_expanded(T277* C);
/*TYPE*/T0* r277find_manifest_expression_for(T277* C,T0* a1,T0* a2);
/*TYPE*/void r277specialize_and_check(T277* C);
/*TYPE*/T0* r277feature_accumulator(void);
/*TYPE*/T6 r277can_be_assigned_to(T277* C,T0* a1);
/*TYPE*/T6 r277is_natural(T277* C);
/*TYPE*/T6 r277print_feature_hierarchy(T277* C,T0* a1,T335 a2,T6 a3);
/*TYPE*/void r277node_init(T277* C,T0* a1);
/*TYPE*/T6 r277is_integer(T277* C);
/*TYPE*/void r277make(T277* C,T0* a1,T6 a2);
/*TYPE*/T6 r277is_character(T277* C);
/*TYPE*/T6 r277is_expanded(T277* C);
/*TYPE*/T0* r277copy_stamp(T277* C);
/*TYPE*/T6 r277is_kernel_expanded(T277* C);
/*TYPE*/void r277adapt_class_invariant(T277* C);
/*TYPE*/void r277add_feature(T277* C,T0* a1,T0* a2);
/*TYPE*/T6 r277is_reference(T277* C);
/*TYPE*/void r277build_actual_invariant(T277* C);
/*TYPE*/void r277inline_dynamic_dispatch_for_class_invariant(T277* C,T0* a1);
/*TYPE*/void r277do_all_address_of(T277* C,T0* a1);
extern T0*oBC32default_rescue_name;
extern int fBC32default_rescue_name;
/*TYPE*/T0* r277default_rescue_name(void);
/*TYPE*/T6 r277inherits_from(T277* C,T0* a1);
/*TYPE*/void r277deconnect_current(T277* C);
/*TYPE*/T0* r277open_arguments(T277* C);
/*TYPE*/void r277collect_local_features(T277* C);
/*TYPE*/T0* r277writable_attributes(T277* C);
/*TYPE*/T0* r277find_anonymous_feature_for(T277* C,T0* a1,T0* a2);
/*TYPE*/T6 r277is_user_expanded(T277* C);
/*TYPE*/T2 r277collected_feature_count(T277* C);
/*TYPE*/T6 r277is_boolean(T277* C);
/*TYPE*/T0* r277is_equal_stamp(T277* C);
/*TYPE*/void r277collect_one_feature(T277* C,T0* a1,T2 a2);
/*TYPE*/void r277add_seeds(T277* C,T0* a1,T0* a2,T6 a3);
/*TYPE*/T6 r277direct_non_void_call_flag(T277* C);
/*TYPE*/T6 r277is_string(T277* C);
/*TYPE*/T6 r277is_tuple(T277* C);
/*TYPE*/void r277print_graph_cycle(T277* C,T0* a1);
/*TYPE*/T0* r277agent_result(T277* C);
/*TYPE*/T6 r277is_always_void(T277* C);
/*TYPE*/void r277inheritance_cycle_check(T277* C);
/*TYPE*/void r277address_of_register(T277* C,T0* a1);
/*TYPE*/void r277_P_278_add_parent(T277* C,T0* a1);
/*TYPE*/void r277_P_279_make(T277* C,T0* a1);
/*TYPE*/void r277_P_279_add_parent(T277* C,T0* a1);
/*FEATURE_STAMP*/void r87specialize_and_check(T87* C,T0* a1);
/*FEATURE_STAMP*/void r87add_anonymous_feature(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r87make(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87simplify(T87* C,T0* a1);
/*FEATURE_STAMP*/T6 r87has_run_feature_for(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87run_feature_for(T87* C,T0* a1);
/*FEATURE_STAMP*/T6 r87has_anonymous_feature_for(T87* C,T0* a1);
/*FEATURE_STAMP*/void r87rename_notify(T87* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T0* r87specialize_thru(T87* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/void r87update_anonymous_feature(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T6 r87has_type(T87* C,T0* a1);
/*FEATURE_STAMP*/void r87register_type(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87resolve_static_binding_for_insert(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r87fake_feature_call(T87* C,T338 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T6 r87print_feature_hierarchy(T87* C,T0* a1,T0* a2,T335 a3,T6 a4);
/*FEATURE_STAMP*/void r87rename_down_notify(T87* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T6 r87add_seeds(T87* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*FEATURE_STAMP*/T0* r87feature_accumulator(void);
/*FEATURE_STAMP*/T0* r87resolve_static_binding_for_inherit(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r87make_run_feature(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r87fake_effective_arg_list(T338 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T0* r87anonymous_feature_if_exist(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87resolve_static_binding_for(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r87anonymous_feature(T87* C,T0* a1);
/*STATUS*/void r533make(T533* C);
/*STATUS*/void r533info(T533* C);
/*STATUS*/void r533push_phase(T533* C,T2 a1);
/*STATUS*/void r533pop_phase(T533* C);
/*STATUS*/void r533set_generating(T533* C);
/*STATUS*/T0* r533echo(void);
/*STATUS*/void r533set_collecting(T533* C);
/*STATUS*/void r533set_inlining_dynamic_dispatch(T533* C);
/*STATUS*/void r533set_adapting(T533* C);
/*STATUS*/void r533set_safety_checking(T533* C);
/*STATUS*/void r533start_specializing(T533* C,T0* a1);
extern T0*oBC533internal_phase_stack;
extern int fBC533internal_phase_stack;
/*STATUS*/T0* r533internal_phase_stack(void);
/*STATUS*/void r533end_specializing(T533* C,T0* a1);
/*CODE_ACCUMULATOR*/void r328make(T328* C);
/*CODE_ACCUMULATOR*/void r328open_new_context(T328* C);
/*CODE_ACCUMULATOR*/T0* r328current_context_to_instruction(T328* C);
/*CODE_ACCUMULATOR*/T0* r328echo(void);
/*CODE_ACCUMULATOR*/void r328add_sedb(T328* C,T338 a1,T3 a2);
/*CODE_ACCUMULATOR*/T0* r328current_context_to_expression(T328* C);
/*CODE_ACCUMULATOR*/void r328echo_information(T328* C);
/*CODE_ACCUMULATOR*/T0* r328current_context_to_code(T328* C);
/*CODE_ACCUMULATOR*/void r328close_current_context(T328* C);
/*ASSIGNMENT_HANDLER*/void r106recompute_all_run_time_sets(void);
/*ASSIGNMENT_HANDLER*/T0* r106echo(void);
extern T0*oBC106external_types;
extern int fBC106external_types;
/*ASSIGNMENT_HANDLER*/T0* r106external_types(void);
/*ASSIGNMENT_HANDLER*/void r106from_external(T106* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r106implicit_cast(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r106graph_node_for(T0* a1);
/*ASSIGNMENT_HANDLER*/void r106collect_force(T106* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r106id_extra_information(T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r106from_external_(T106* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r106echo_information(void);
extern T0*oBC106graph_node_dictionary;
extern int fBC106graph_node_dictionary;
/*ASSIGNMENT_HANDLER*/T0* r106graph_node_dictionary(void);
/*ASSIGNMENT_HANDLER*/void r106reset(void);
/*ASSIGNMENT_HANDLER*/T0* r106implicit_cast_(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/void r106collect_normal(T106* C,T0* a1,T0* a2);
typedef struct _se_agenT104f104l169c20 se_agenT104f104l169c20;
struct _se_agenT104f104l169c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT104f104l169c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l169c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT104f104l169c20(void);
void gc_mark_agenT104f104l169c20(se_agenT104f104l169c20*u);
typedef struct _se_agenT104f104l159c20 se_agenT104f104l159c20;
struct _se_agenT104f104l159c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT104f104l159c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l159c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT104f104l159c20(void);
void gc_mark_agenT104f104l159c20(se_agenT104f104l159c20*u);
/*MANIFEST_STRING_POOL*/void r104collect_string(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r104se_ums(T104* C);
extern T0*oBC104agent_exists_in_collected_storage_id_set;
extern int fBC104agent_exists_in_collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r104agent_exists_in_collected_storage_id_set(void);
/*MANIFEST_STRING_POOL*/void r104make_unique(T0* a1,T0* a2);
extern T0*oBC32calloc_name;
extern int fBC32calloc_name;
/*MANIFEST_STRING_POOL*/T0* r104calloc_name(void);
extern T0*oBC32count_name;
extern int fBC32count_name;
/*MANIFEST_STRING_POOL*/T0* r104count_name(void);
/*MANIFEST_STRING_POOL*/T2 r104storage_alias_count(void);
extern T0*oBC32storage_lower_name;
extern int fBC32storage_lower_name;
/*MANIFEST_STRING_POOL*/T0* r104storage_lower_name(void);
/*MANIFEST_STRING_POOL*/T2 r104collected_once_count(void);
extern T0*oBC104agent_exists_in_collected_once_variables;
extern int fBC104agent_exists_in_collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r104agent_exists_in_collected_once_variables(void);
extern T0*oBC104collected_once_variables;
extern int fBC104collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r104collected_once_variables(void);
/*MANIFEST_STRING_POOL*/T0* r104collect(T104* C,T0* a1,T6 a2,T6 a3,T0* a4);
extern T0*oBC104storage_alias;
extern int fBC104storage_alias;
/*MANIFEST_STRING_POOL*/T0* r104storage_alias(void);
extern T0*oBC32manifest_initialize_name;
extern int fBC32manifest_initialize_name;
/*MANIFEST_STRING_POOL*/T0* r104manifest_initialize_name(void);
/*MANIFEST_STRING_POOL*/T0* r104capacity_name(void);
/*MANIFEST_STRING_POOL*/void r104reset(T104* C);
/*MANIFEST_STRING_POOL*/T6 r104exists_in_collected_storage_id_set(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r104storage_alias_item(T2 a1);
/*MANIFEST_STRING_POOL*/T6 r104exists_in_collected_once_variables(T0* a1);
extern T0*oBC32storage_name;
extern int fBC32storage_name;
/*MANIFEST_STRING_POOL*/T0* r104storage_name(void);
/*MANIFEST_STRING_POOL*/void r104append_once_variable_index(T0* a1,T2 a2);
/*MANIFEST_STRING_POOL*/T0* r104collected_once_item(T2 a1);
extern T0*oBC104collected_storage_id_set;
extern int fBC104collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r104collected_storage_id_set(void);
extern T0*oBC111collected_manifest_generic;
extern int fBC111collected_manifest_generic;
/*MANIFEST_GENERIC_POOL*/T0* r111collected_manifest_generic(void);
extern T0*oBC120function_list;
extern int fBC120function_list;
/*ONCE_ROUTINE_POOL*/T0* r120function_list(void);
/*ONCE_ROUTINE_POOL*/T6 r120is_precomputed(T0* a1);
extern T0*oBC32precomputable_routine_detector;
/*ONCE_ROUTINE_POOL*/void r120unique_result_in(T0* a1,T0* a2);
/*ONCE_ROUTINE_POOL*/T0* r120non_void_no_dispatch_for(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r120o_flag(T0* a1);
/*ONCE_ROUTINE_POOL*/void r120collect_precomputable_function(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r120precomputable_function(T0* a1,T0* a2,T0* a3);
extern T0*oBC120precomputable_function_list;
extern int fBC120precomputable_function_list;
/*ONCE_ROUTINE_POOL*/T0* r120precomputable_function_list(void);
/*ONCE_ROUTINE_POOL*/void r120do_all_precomputed_ordered(T0* a1);
extern T0*oBC120collected_precomputable_function;
extern int fBC120collected_precomputable_function;
/*ONCE_ROUTINE_POOL*/T0* r120collected_precomputable_function(void);
/*ONCE_ROUTINE_POOL*/void r120unique_id_in(T0* a1,T0* a2);
extern T0*oBC120procedure_list;
extern int fBC120procedure_list;
/*ONCE_ROUTINE_POOL*/T0* r120procedure_list(void);
extern T0*oBC119creation_collected_memory;
extern int fBC119creation_collected_memory;
/*AGENT_POOL*/T0* r119creation_collected_memory(void);
extern T0*oBC119launcher_collected_memory;
extern int fBC119launcher_collected_memory;
/*AGENT_POOL*/T0* r119launcher_collected_memory(void);
/*AGENT_POOL*/T0* r119agent_launcher_collect(T0* a1);
/*AGENT_POOL*/void r119notify_assignment_handler_with(T0* a1,T0* a2);
extern T0*oBC119agent_definition_set;
extern int fBC119agent_definition_set;
/*AGENT_POOL*/T0* r119agent_definition_set(void);
/*AGENT_POOL*/void r119agent_creation_collect(T119* C,T0* a1,T0* a2,T0* a3);
/*AGENT_POOL*/void r119reset(T119* C);
extern T0*oBC119launcher_memory;
extern int fBC119launcher_memory;
/*AGENT_POOL*/T0* r119launcher_memory(void);
extern T0*oBC122map;
extern int fBC122map;
/*ASSIGNMENT_TEST_POOL*/T0* r122map(void);
/*ASSIGNMENT_TEST_POOL*/T0* r122new_empty_set(void);
/*ASSIGNMENT_TEST_POOL*/void r122signature_add_last(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r122collect(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r122reset(void);
extern T0*oBC122free_set_list;
extern int fBC122free_set_list;
/*ASSIGNMENT_TEST_POOL*/T0* r122free_set_list(void);
/*ASSIGNMENT_TEST_POOL*/void r122function_name_in(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST_POOL*/T2 r122count(void);
/*ASSIGNMENT_TEST_POOL*/void r122do_all(T0* a1);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_item_generator(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_introspectable_static_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_typed_internals(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_valid_generating_type_for_na_internals(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_set_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_internals_handler(T89* C,T0* a1,T0* a2,T0* a3);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_na_internals_from_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_can_be_assigned_to_item(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89create_blank_internals_instruction_for(T89* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_item_is_expanded(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_count(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_item_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89collect_internals_from_generating_type(T89* C,T0* a1,T338 a2,T0* a3);
/*INTROSPECTION_HANDLER*/void r89collect_native_array_internals_from_generating_type(T89* C,T0* a1,T338 a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_type_attribute_count(T89* C);
/*INTROSPECTION_HANDLER*/void r89start_new_body_for(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_make_blank(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_to_internals(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_any_to_internals(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/T0* r89internals_of(T89* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r89arguments(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_internals_handler(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_is_expanded(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_native_array_internals(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_generator(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_introspectable_dynamic_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89simplify_and_wrap(T89* C,T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_native_array_internals(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_set_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_attribute_count(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_is_equal(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_internals_from_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_can_be_assigned_to_attribute(T89* C);
/*INTROSPECTION_HANDLER*/void r89collect_internals_handler(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_internals_from_generating_type_used(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_generator(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_make_blank(T89* C);
/*INTROSPECTION_HANDLER*/void r89collect_internals_handler_for(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_typed_internals(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_name(T89* C);
/*INTROSPECTION_HANDLER*/void r89set_and_specialize_body(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89wrap(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_valid_generating_type_for_internals(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89create_blank_internals_used_by(T89* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_is_expanded(T89* C);
/*INTROSPECTION_HANDLER*/T338 r89start_position(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_object_as_pointer(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_introspectable_attribute_type(T89* C,T0* a1);
/*STRING_TYPE_MARK*/T439*create439make(T338 a1);
/*STRING_TYPE_MARK*/T6 r439is_tuple(void);
/*STRING_TYPE_MARK*/void r439make(T439* C,T338 a1);
/*STRING_TYPE_MARK*/T0* r439generic_list(void);
/*STRING_TYPE_MARK*/T6 r439is_anchored(void);
/*STRING_TYPE_MARK*/T6 r439is_character(void);
/*STRING_TYPE_MARK*/T0* r439written_mark(void);
extern T0*oBC439written_name;
extern int fBC439written_name;
/*STRING_TYPE_MARK*/T0* r439written_name(void);
/*STRING_TYPE_MARK*/T6 r439is_native_array(void);
/*STRING_TYPE_MARK*/T0* r439at(T439* C,T338 a1);
/*STRING_TYPE_MARK*/T0* r439try_class_text(T439* C);
extern T0*oBC439long_name;
extern int fBC439long_name;
/*STRING_TYPE_MARK*/T0* r439long_name(void);
/*STRING_TYPE_MARK*/T0* r439specialize_thru(T439* C,T0* a1,T0* a2,T0* a3);
/*STRING_TYPE_MARK*/T6 r439is_boolean(void);
/*STRING_TYPE_MARK*/T0* r439typed_internals_type_mark(T439* C,T338 a1);
/*STRING_TYPE_MARK*/T0* r439to_static(T439* C,T0* a1,T6 a2);
/*STRING_TYPE_MARK*/void r439accept(T439* C,T0* a1);
/*STRING_TYPE_MARK*/T6 r439same_signature_type(T439* C,T0* a1,T0* a2);
/*STRING_TYPE_MARK*/T0* r439type(void);
/*STRING_TYPE_MARK*/T0* r439signature_resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r439is_natural(void);
/*STRING_TYPE_MARK*/T0* r439default_expression(T338 a1);
/*STRING_TYPE_MARK*/void r439id_extra_information(T0* a1);
/*STRING_TYPE_MARK*/T0* r439declaration_type(T439* C);
/*STRING_TYPE_MARK*/T6 r439is_pointer(void);
/*STRING_TYPE_MARK*/T338 r439start_position(T439* C);
/*STRING_TYPE_MARK*/T6 r439is_kernel_expanded(void);
/*STRING_TYPE_MARK*/void r439set_start_position(T439* C,T338 a1);
/*STRING_TYPE_MARK*/T6 r439is_fixed_string(void);
/*STRING_TYPE_MARK*/T0* r439class_text(T439* C);
/*STRING_TYPE_MARK*/T0* r439twin(T439* C);
/*STRING_TYPE_MARK*/T6 r439is_real(void);
/*STRING_TYPE_MARK*/T6 r439is_integer(void);
/*STRING_TYPE_MARK*/void r439pretty_in(T0* a1);
/*STRING_TYPE_MARK*/T0* r439resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r439is_agent(void);
/*FEATURE_ACCUMULATOR*/void r115make(T115* C);
/*FEATURE_ACCUMULATOR*/void r115finalize(T115* C);
/*FEATURE_ACCUMULATOR*/void r115finish_insert_seeds(T115* C);
/*FEATURE_ACCUMULATOR*/T0* r115echo(void);
/*FEATURE_ACCUMULATOR*/void r115collect_assigner(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115do_pending_types(T115* C);
/*FEATURE_ACCUMULATOR*/T1 r115next_state(T115* C,T1 a1,T1 a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_ACCUMULATOR*/void r115add_local_definition(T115* C,T0* a1);
extern T0*oBC115transitions;
extern int fBC115transitions;
/*FEATURE_ACCUMULATOR*/T0* r115transitions(void);
/*FEATURE_ACCUMULATOR*/T6 r115is_known(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115new_incomplete_type(T115* C);
/*FEATURE_ACCUMULATOR*/void r115start(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r115anonymous_feature_for(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r115feature_stamp_of(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115echo_information(T115* C);
/*FEATURE_ACCUMULATOR*/void r115register(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115new_feature(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115to_feature(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115add_parent_definition(T115* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_ACCUMULATOR*/void r115check_and_merge_seeds(T115* C);
/*FEATURE_ACCUMULATOR*/T1 r115transition_index(T115* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_ACCUMULATOR*/T0* r115find_type_for(T115* C,T0* a1);
/*ANY_TYPE_MARK*/T424*create424make(T338 a1);
/*ANY_TYPE_MARK*/T6 r424is_tuple(void);
/*ANY_TYPE_MARK*/void r424make(T424* C,T338 a1);
/*ANY_TYPE_MARK*/T0* r424generic_list(void);
/*ANY_TYPE_MARK*/T6 r424is_anchored(void);
/*ANY_TYPE_MARK*/T6 r424is_character(void);
/*ANY_TYPE_MARK*/T0* r424written_mark(T424* C);
/*ANY_TYPE_MARK*/T0* r424written_name(T424* C);
/*ANY_TYPE_MARK*/T6 r424is_native_array(void);
/*ANY_TYPE_MARK*/T0* r424at(T424* C,T338 a1);
/*ANY_TYPE_MARK*/T0* r424try_class_text(T424* C);
extern T0*oBC424long_name;
extern int fBC424long_name;
/*ANY_TYPE_MARK*/T0* r424long_name(void);
/*ANY_TYPE_MARK*/T0* r424specialize_thru(T424* C,T0* a1,T0* a2,T0* a3);
/*ANY_TYPE_MARK*/T6 r424is_boolean(void);
/*ANY_TYPE_MARK*/T0* r424typed_internals_type_mark(T424* C,T338 a1);
/*ANY_TYPE_MARK*/T0* r424to_static(T424* C,T0* a1,T6 a2);
/*ANY_TYPE_MARK*/T2 r424id(T424* C);
/*ANY_TYPE_MARK*/void r424accept(T424* C,T0* a1);
/*ANY_TYPE_MARK*/T6 r424same_signature_type(T424* C,T0* a1,T0* a2);
/*ANY_TYPE_MARK*/T0* r424type(void);
/*ANY_TYPE_MARK*/T0* r424signature_resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r424is_natural(void);
/*ANY_TYPE_MARK*/T0* r424default_expression(T338 a1);
/*ANY_TYPE_MARK*/void r424id_extra_information(T0* a1);
/*ANY_TYPE_MARK*/T0* r424declaration_type(T424* C);
/*ANY_TYPE_MARK*/T6 r424is_pointer(void);
/*ANY_TYPE_MARK*/T338 r424start_position(T424* C);
/*ANY_TYPE_MARK*/T6 r424is_kernel_expanded(void);
/*ANY_TYPE_MARK*/void r424set_start_position(T424* C,T338 a1);
/*ANY_TYPE_MARK*/T6 r424is_fixed_string(T424* C);
/*ANY_TYPE_MARK*/T0* r424class_text(T424* C);
/*ANY_TYPE_MARK*/T0* r424twin(T424* C);
/*ANY_TYPE_MARK*/T6 r424is_real(void);
/*ANY_TYPE_MARK*/T6 r424is_integer(void);
/*ANY_TYPE_MARK*/void r424pretty_in(T424* C,T0* a1);
/*ANY_TYPE_MARK*/T0* r424resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r424is_agent(void);
extern T0*oBC564integer_alias;
extern int fBC564integer_alias;
/*TYPE_ALIASING*/T0* r564integer_alias(void);
/*TYPE_ALIASING*/T0* r564alias_of(T0* a1);
extern T0*oBC564real_alias;
extern int fBC564real_alias;
/*TYPE_ALIASING*/T0* r564real_alias(void);
extern T0*oBC564natural_alias;
extern int fBC564natural_alias;
/*TYPE_ALIASING*/T0* r564natural_alias(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_like_feature_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_like_current_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_like_argument_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_agent_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/T0* r790cpp(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_formal_generic_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790compile(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790crash(T790* C);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r790visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792make(T792* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_like_feature_type_mark(T792* C,T0* a1);
extern T0*oBC32from_pointer_name;
extern int fBC32from_pointer_name;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r792from_pointer_name(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792gc_align_mark_fixed_size(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_like_current_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792mark_attribute(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792gc_expanded(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_like_argument_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_user_generic_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792gc_mark_fixed_size(T792* C,T0* a1,T6 a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792gc_set_fsoh_marked(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r792cpp(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_formal_generic_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792compile(T792* C,T0* a1);
extern int fBC792generate_once_gc_update_weak_ref_item_polymorph;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792generate_once_gc_update_weak_ref_item_polymorph(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792native_array_type_in(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792gc_reference(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T6 r792insert_native_array_collector_flag(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792gc_mark_na(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792crash(T792* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r792visit_class_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_like_feature_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_like_current_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_like_argument_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/T0* r793cpp(void);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_formal_generic_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793compile(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793crash(T793* C);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r793visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_like_feature_type_mark(T794* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_like_current_type_mark(T794* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_like_argument_type_mark(T794* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/T0* r794cpp(void);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_formal_generic_type_mark(T794* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794compile(T794* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794crash(T794* C);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r794visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_empty_tuple_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_string_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_like_feature_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/T6 r795for(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_native_array_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_like_current_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_like_argument_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_user_generic_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_any_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_agent_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_formal_generic_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795gc_mark_to_follow(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_array_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795crash(T795* C);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_class_type_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795need_gc_mark(T795* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r795visit_non_empty_tuple_type_mark(T795* C,T0* a1);
/*CECIL_FILE*/void r327parse(T327* C);
/*CECIL_FILE*/void r327make(T327* C,T0* a1);
/*CECIL_FILE*/T0* r327eiffel_parser(void);
/*CECIL_FILE*/T0* r327echo(void);
/*CECIL_FILE*/void r327collect(T327* C,T0* a1);
/*CECIL_FILE*/void r327inline_dynamic_dispatch(T327* C,T0* a1,T0* a2);
/*SERC_CHAIN*/void r777make(T777* C);
/*SERC_CHAIN*/T0* r777sys(T777* C);
/*SERC_CHAIN*/void r777loadpaths_in(T777* C,T0* a1);
/*SERC_CHAIN*/T0* r777flavor(T777* C);
/*SERC_CHAIN*/T0* r777environment(T777* C,T0* a1);
/*SERC_CHAIN*/T0* r777short(T777* C);
/*SERC_CHAIN*/T0* r777bin(T777* C);
/*SERC_CHAIN*/T0* r777c_mode(T777* C,T0* a1);
/*SERC_CHAIN*/T0* r777os(T777* C);
/*SERC_DEFAULTS*/void r779make(T779* C);
/*SERC_DEFAULTS*/T0* r779environment(T0* a1);
/*SERC*/void r778make(T778* C);
/*SERC*/void r778add_all(T778* C,T0* a1,T0* a2,T0* a3);
/*SERC*/T0* r778echo(void);
/*SERC*/void r778loadpaths_in(T778* C,T0* a1);
/*SERC*/T0* r778parser_buffer(void);
/*STRING_RECYCLING_POOL*/void r58make(T58* C);
/*STRING_RECYCLING_POOL*/void r58recycle(T58* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r58new_twin(T58* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r58best_fit(T58* C,T2 a1);
/*FIXED_STRING*/void r293unlock_tagged_out(void);
/*FIXED_STRING*/T3 r293first(T293* C);
/*FIXED_STRING*/T0* r293tagged_out_memory_pool(void);
/*FIXED_STRING*/void r293fill_tagged_out_memory(T293* C);
/*FIXED_STRING*/void r293lock_tagged_out(void);
extern T0*oBC293weakrefs;
extern int fBC293weakrefs;
/*FIXED_STRING*/T0* r293weakrefs(void);
/*FIXED_STRING*/void r293make_from_string(T293* C,T0* a1);
/*FIXED_STRING*/void r293ensure_capacity(T293* C,T2 a1);
/*FIXED_STRING*/T0* r293new_holders(T293* C);
/*FIXED_STRING*/T6 r293is_shared(T293* C);
/*FIXED_STRING*/void r293unshare(T293* C);
/*FIXED_STRING*/T8 r293to_external(T293* C);
/*FIXED_STRING*/T2 r293computed_hash_code(T293* C);
/*FIXED_STRING*/T2 r293upper(T293* C);
/*FIXED_STRING*/T3 r293item(T293* C,T2 a1);
/*FIXED_STRING*/T6 r293_ix_60(T293* C,T0* a1);
/*FIXED_STRING*/T6 r293same_as(T293* C,T0* a1);
/*FIXED_STRING*/T0* r293tagged_out_memory(void);
extern T0*oBC293holders_memory;
extern int fBC293holders_memory;
/*FIXED_STRING*/T0* r293holders_memory(void);
/*FIXED_STRING*/void r293do_intern(T293* C,T0* a1);
/*FIXED_STRING*/T0* r293out(T293* C);
/*FIXED_STRING*/void r293copy_slice_to_native(T293* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*FIXED_STRING*/T0* r293tagged_out_memories(void);
/*FIXED_STRING*/void r293print_on(T293* C,T0* a1);
/*FIXED_STRING*/T6 r293has(T293* C,T3 a1);
/*FEATURE_NAME*/T281*create281simple_feature_name(T0* a1,T338 a2);
/*FEATURE_NAME*/T281*create281infix_name(T0* a1,T338 a2);
/*FEATURE_NAME*/T6 r281is_equal(T281* C,T0* a1);
/*FEATURE_NAME*/T6 r281is_infix_name(T281* C);
/*FEATURE_NAME*/void r281pretty(T281* C,T2 a1);
/*FEATURE_NAME*/void r281ordinary_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/T6 r281is_frozen(T281* C);
/*FEATURE_NAME*/void r281special_pretty_print(T281* C,T6 a1);
/*FEATURE_NAME*/void r281basic_create_1(T281* C,T2 a1,T0* a2,T338 a3);
/*FEATURE_NAME*/void r281basic_create_0(T281* C,T2 a1,T0* a2,T338 a3);
/*FEATURE_NAME*/T0* r281infix_or_prefix(T281* C);
/*FEATURE_NAME*/void r281unknown_position(T281* C,T0* a1);
/*FEATURE_NAME*/void r281infix_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/void r281declaration_in(T281* C,T0* a1);
/*FEATURE_NAME*/T0* r281twin(T281* C);
/*FEATURE_NAME*/T6 r281is_simple_feature_name(T281* C);
/*FEATURE_NAME*/void r281complete_name_in(T281* C,T0* a1);
/*FEATURE_NAME*/void r281simple_feature_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/void r281set_is_frozen(T281* C);
/*FEATURE_NAME*/T2 r281hash_code(T281* C);
/*FEATURE_NAME*/void r281prefix_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/void r281mapping_c_in(T281* C,T0* a1);
/*FEATURE_NAME*/T6 r281is_prefix_name(T281* C);
extern T0*oBC79is_running_memory;
/*AT_EXIT*/void r79run(void);
extern T0*oBC79actions;
extern int fBC79actions;
/*AT_EXIT*/T0* r79actions(void);
/*INI_PARSER*/void r102goto_next_line(T102* C);
/*INI_PARSER*/T6 r102section_has(T102* C,T0* a1,T0* a2);
/*INI_PARSER*/void r102serc(T102* C);
/*INI_PARSER*/T0* r102lcs(void);
/*INI_PARSER*/T0* r102buffer(void);
/*INI_PARSER*/T6 r102a_section(T102* C);
extern T0*oBC32strings;
extern int fBC32strings;
/*INI_PARSER*/T0* r102strings(void);
/*INI_PARSER*/T0* r102unicode_string_buffer(void);
/*INI_PARSER*/T6 r102is_install(void);
/*INI_PARSER*/void r102a_keys(T102* C);
/*INI_PARSER*/T0* r102parser_buffer(void);
/*INI_PARSER*/void r102a_sections(T102* C);
/*INI_PARSER*/void r102go_back_at(T102* C,T2 a1,T2 a2);
/*INI_PARSER*/T6 r102skip1(T102* C,T3 a1);
/*INI_PARSER*/T6 r102a_string(T102* C);
/*INI_PARSER*/T338 r102current_position(T102* C);
/*INI_PARSER*/T6 r102a_keyword(T102* C,T0* a1);
/*INI_PARSER*/T0* r102echo(void);
/*INI_PARSER*/T6 r102a_identifier(T102* C);
/*INI_PARSER*/T6 r102a_manifest_string(T102* C,T6 a1);
/*INI_PARSER*/void r102fatal_error_except_for_install(T102* C,T0* a1);
/*INI_PARSER*/void r102a_inifile(T102* C);
/*INI_PARSER*/void r102may_expand_var_into(T102* C,T0* a1);
/*INI_PARSER*/T6 r102has(T102* C,T0* a1);
/*INI_PARSER*/void r102skip_comments(T102* C);
/*INI_PARSER*/void r102plugin(T102* C);
/*INI_PARSER*/T0* r102sections_iterator(T102* C);
/*INI_PARSER*/T0* r102section_item(T102* C,T0* a1,T0* a2);
/*INI_PARSER*/void r102next_char(T102* C);
/*INI_PARSER*/T6 r102a_key(T102* C);
/*INI_PARSER*/void r102update_last_manifest_string(T102* C,T338 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*INI_PARSER*/T0* r102section_key_iterator(T102* C,T0* a1);
/*INI_PARSER*/void r102set_value(T102* C,T0* a1);
/*INI_PARSER*/void r102may_expand_var(T102* C);
/*INI_PARSER*/T0* r102key_iterator(T102* C);
/*INI_PARSER*/T0* r102last_value(T102* C);
/*INI_PARSER*/T6 r102skip_spaces(T102* C);
/*INI_PARSER*/T338 r102pos(T102* C,T2 a1,T2 a2);
/*CLASSES_TREE*/T0* r751system_cluster(T751* C,T0* a1,T0* a2);
/*CLASSES_TREE*/void r751make(T751* C,T2 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC751system_clusters;
extern int fBC751system_clusters;
/*CLASSES_TREE*/T0* r751system_clusters(void);
/*CLASSES_TREE*/void r751for_all(T751* C,T0* a1);
/*CLASSES_TREE*/T2 r751cluster_count(T751* C);
/*CLASSES_TREE*/T0* r751echo(void);
/*CLASSES_TREE*/T0* r751cluster_named(T751* C,T0* a1);
/*CLASSES_TREE*/void r751show_name(T751* C);
/*CLASSES_TREE*/T0* r751classes_path_to_system_path(T751* C,T0* a1);
/*CLASSES_TREE*/void r751get_started(T751* C,T2 a1);
/*CLASSES_TREE*/void r751clusters_of(T751* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r751view_in(T751* C,T0* a1);
/*CLASSES_TREE*/T0* r751system_notation(T751* C);
/*CLASSES_TREE*/T2 r751loaded_class_count(T751* C);
/*CLASSES_TREE*/void r751show_tabs(T2 a1);
/*CLASSES_TREE*/T0* r751to_string(T751* C);
/*CLASSES_TREE*/void r751parse_include(T751* C);
/*CLASSES_TREE*/T0* r751find_physical_cluster(T751* C,T0* a1);
/*CLASSES_TREE*/void r751show(T751* C,T2 a1);
/*CLASSES_TREE*/void r751_P_681_for_all(T751* C,T0* a1);
/*CLASSES_TREE*/T2 r751_P_681_cluster_count(T751* C);
/*CLASSES_TREE*/T0* r751_P_681_cluster_named(T751* C,T0* a1);
/*CLASSES_TREE*/void r751_P_681_get_started(T751* C,T2 a1);
/*CLASSES_TREE*/void r751_P_681_clusters_of(T751* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r751_P_681_view_in(T751* C,T0* a1);
/*CLASSES_TREE*/T2 r751_P_681_loaded_class_count(T751* C);
/*CLASSES_TREE*/void r751_P_681_parse_include(T751* C);
/*CLASSES_TREE*/T0* r751_P_681_find_physical_cluster(T751* C,T0* a1);
/*LOADPATH*/void r797make(T797* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
/*LOADPATH*/T0* r797connect(T797* C,T0* a1,T0* a2);
/*LOADPATH*/void r797add_classes(T797* C,T0* a1);
/*LOADPATH*/void r797for_all(T797* C,T0* a1);
/*LOADPATH*/T2 r797cluster_count(T797* C);
/*LOADPATH*/void r797show_cycle(T797* C,T0* a1);
/*LOADPATH*/T0* r797echo(void);
/*LOADPATH*/void r797error_cycle(T797* C);
/*LOADPATH*/T0* r797cluster_named(T797* C,T0* a1);
extern T0*oBC797connected;
extern int fBC797connected;
/*LOADPATH*/T0* r797connected(void);
/*LOADPATH*/T0* r797strings(void);
/*LOADPATH*/void r797create_subtree(T797* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*LOADPATH*/void r797show_name(T797* C);
/*LOADPATH*/T0* r797classes_path_to_system_path(T797* C,T0* a1);
/*LOADPATH*/void r797get_started(T797* C,T2 a1);
/*LOADPATH*/T0* r797system_path_to_classes_path(T797* C,T0* a1);
/*LOADPATH*/void r797clusters_of(T797* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*LOADPATH*/void r797view_in(T797* C,T0* a1);
/*LOADPATH*/T0* r797system_tools(void);
/*LOADPATH*/T0* r797system_notation(T797* C);
/*LOADPATH*/T2 r797loaded_class_count(T797* C);
/*LOADPATH*/void r797show_tabs(T2 a1);
extern T0*oBC797files;
extern int fBC797files;
/*LOADPATH*/T0* r797files(void);
/*LOADPATH*/T0* r797to_string(T797* C);
/*LOADPATH*/void r797parse_include(T797* C);
/*LOADPATH*/T0* r797find_physical_cluster(T797* C,T0* a1);
/*LOADPATH*/void r797show(T797* C,T2 a1);
/*LOADPATH*/T0* r797new_path(T0* a1,T0* a2,T0* a3);
/*LOADPATH*/T0* r797new_name(T797* C,T0* a1,T2 a2);
/*CLUSTER_POOL_DATA*/void r753make(T753* C,T0* a1);
/*CLUSTER_POOL_DATA*/void r753add_cluster_class(T753* C,T0* a1,T0* a2);
/*CLUSTER_POOL_DATA*/T0* r753cluster_class(T753* C,T0* a1);
extern T0*oBC753hash_tuple;
extern int fBC753hash_tuple;
/*CLUSTER_POOL_DATA*/T0* r753hash_tuple(void);
/*CLUSTER_POOL_DATA*/T2 r753class_count(T753* C);
/*CLUSTER_POOL_DATA*/T6 r753has(T753* C,T0* a1);
/*MICROSECOND_TIME*/T11 r472timestamp(T472* C);
/*MICROSECOND_TIME*/void r472update(T472* C);
/*FEATURE_TEXT*/void r449character_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449string_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449once_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449set_ensure_assertion(T449* C,T0* a1);
/*FEATURE_TEXT*/void r449set_rescue_compound(T449* C,T0* a1);
/*FEATURE_TEXT*/void r449real_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449inline_agent_pretty(T449* C,T2 a1);
/*FEATURE_TEXT*/void r449non_written_one(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449boolean_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449set_header_comment(T449* C,T0* a1);
/*FEATURE_TEXT*/void r449deferred_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*FEATURE_TEXT*/void r449external_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449add_into(T449* C,T0* a1,T0* a2);
/*FEATURE_TEXT*/void r449e_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449integer_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449external_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449writable_attribute(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_TEXT*/void r449e_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449deferred_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*FEATURE_TEXT*/void r449once_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449unique_constant(T449* C,T0* a1,T0* a2);
/*INDEX_CLAUSE*/void r429add_last(T429* C,T0* a1);
/*INDEX_CLAUSE*/void r429with_tag(T429* C,T0* a1);
/*INDEX_CLAUSE*/void r429without_tag(T429* C,T0* a1);
/*MANIFEST_STRING*/T0* r380specialize_and_check(T380* C,T0* a1);
/*MANIFEST_STRING*/T6 r380is_equal(T380* C,T0* a1);
/*MANIFEST_STRING*/T0* r380to_expression(T380* C);
/*MANIFEST_STRING*/void r380make(T380* C,T338 a1,T6 a2,T6 a3,T0* a4);
/*MANIFEST_STRING*/void r380pretty(T380* C,T2 a1);
/*MANIFEST_STRING*/T0* r380static_simplify(T380* C);
/*MANIFEST_STRING*/void r380inline_dynamic_dispatch_(T380* C,T0* a1,T0* a2);
/*MANIFEST_STRING*/T6 r380is_static(T380* C);
/*MANIFEST_STRING*/void r380storage_alias_of(T380* C,T0* a1);
/*MANIFEST_STRING*/T6 r380is_stored_in_some_local_variable(void);
/*MANIFEST_STRING*/void r380accept(T380* C,T0* a1);
/*MANIFEST_STRING*/T0* r380declaration_type(T380* C);
/*MANIFEST_STRING*/T0* r380collect(T380* C,T0* a1);
/*MANIFEST_STRING*/void r380pretty_target(T380* C,T2 a1);
/*MANIFEST_STRING*/void r380from_identifier(T380* C,T338 a1,T0* a2);
/*MANIFEST_STRING*/void r380pretty_without_once(T380* C,T2 a1);
/*MANIFEST_STRING*/T0* r380twin(T380* C);
/*MANIFEST_STRING*/T0* r380written_declaration_type_mark(void);
/*MANIFEST_STRING*/T6 r380use_current(T0* a1);
/*MANIFEST_STRING*/void r380bracketed_pretty(T380* C,T2 a1);
/*MANIFEST_STRING*/T0* r380non_void_no_dispatch_type(T380* C,T0* a1);
/*MANIFEST_STRING*/T6 r380side_effect_free(T380* C,T0* a1);
/*MANIFEST_STRING*/T2 r380hash_code(T380* C);
/*MANIFEST_STRING*/T2 r380count(T380* C);
/*MANIFEST_STRING*/T0* r380resolve_in(T380* C,T0* a1);
/*MANIFEST_STRING*/T0* r380to_instruction(T380* C);
/*FORMAL_GENERIC_LIST*/void r422make(T422* C,T338 a1);
/*FORMAL_GENERIC_LIST*/void r422generic_formal_arguments_check(T422* C);
/*FORMAL_GENERIC_LIST*/void r422constraint_genericity_check(T422* C,T0* a1,T0* a2,T338 a3);
/*FORMAL_GENERIC_LIST*/void r422add_last(T422* C,T0* a1);
/*FORMAL_GENERIC_LIST*/T2 r422count(T422* C);
/*FORMAL_GENERIC_ARG*/void r423substitute(T0* a1,T0* a2,T2 a3,T0* a4);
/*FORMAL_GENERIC_ARG*/void r423make(T423* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_ARG*/void r423generic_formal_arguments_check(T423* C);
/*FORMAL_GENERIC_ARG*/T338 r423start_position(T423* C);
/*FORMAL_GENERIC_ARG*/void r423constraint_substitution(T423* C,T0* a1,T2 a2);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_tuple(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r485make(T485* C,T0* a1,T0* a2,T2 a3);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485generic_list(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_anchored(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_character(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485written_mark(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_native_array(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485at(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485try_class_text(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485specialize_thru(T485* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_boolean(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485typed_internals_type_mark(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485to_static(T485* C,T0* a1,T6 a2);
/*FORMAL_GENERIC_TYPE_MARK*/void r485accept(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_reference(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485same_signature_type(T485* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485type(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485signature_resolve_in(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_natural(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485default_expression(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r485id_extra_information(T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485declaration_type(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485class_text_name(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_pointer(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_user_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T338 r485start_position(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_kernel_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r485set_start_position(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_fixed_string(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485class_text(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485twin(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_real(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_integer(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r485pretty_in(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_generic(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485resolve_in(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_agent(void);
/*LIKE_CURRENT_TYPE_MARK*/T495*create495make(T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_tuple(void);
/*LIKE_CURRENT_TYPE_MARK*/void r495make(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495generic_list(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_anchored(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_character(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495written_mark(void);
extern T0*oBC495written_name;
extern int fBC495written_name;
/*LIKE_CURRENT_TYPE_MARK*/T0* r495written_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_native_array(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495at(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495try_class_text(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_boolean(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495typed_internals_type_mark(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495to_static(T0* a1,T6 a2);
/*LIKE_CURRENT_TYPE_MARK*/void r495accept(T495* C,T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_reference(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495same_signature_type(T495* C,T0* a1,T0* a2);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495type(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495signature_resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_natural(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495default_expression(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/void r495id_extra_information(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495declaration_type(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495class_text_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_pointer(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_user_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_kernel_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_fixed_string(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495class_text(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495twin(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_real(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_integer(void);
/*LIKE_CURRENT_TYPE_MARK*/void r495pretty_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_generic(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_agent(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_tuple(void);
/*LIKE_FEATURE_TYPE_MARK*/void r497make(T497* C,T338 a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497generic_list(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_anchored(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_character(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497written_mark(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/void r497specialize_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_native_array(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497at(T497* C,T338 a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497try_class_text(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497specialize_thru(T497* C,T0* a1,T0* a2,T0* a3);
/*LIKE_FEATURE_TYPE_MARK*/void r497twin_feature_stamp_memory(T497* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_boolean(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497typed_internals_type_mark(T497* C,T338 a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497to_static(T497* C,T0* a1,T6 a2);
/*LIKE_FEATURE_TYPE_MARK*/void r497accept(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_reference(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497same_signature_type(T497* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497type(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497signature_resolve_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_natural(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497default_expression(T497* C,T338 a1);
/*LIKE_FEATURE_TYPE_MARK*/void r497id_extra_information(T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497class_text_name(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497feature_accumulator(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_pointer(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_user_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_kernel_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_fixed_string(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497class_text(T497* C);
extern T0*oBC496written_mark_buffer;
extern int fBC496written_mark_buffer;
/*LIKE_FEATURE_TYPE_MARK*/T0* r497written_mark_buffer(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497twin(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_real(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_integer(void);
/*LIKE_FEATURE_TYPE_MARK*/void r497pretty_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_generic(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497resolve_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_agent(void);
/*FORMAL_ARG_LIST*/void r354make(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/void r354pretty(T354* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r354specialize_in(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/void r354add_last(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r354rank_of(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T0* r354specialize_thru(T354* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_ARG_LIST*/T0* r354adapt_for(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r354fast_rank_of(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/void r354name_clash_check(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r354compute_flat_list_count_by_using_list(T354* C);
/*FORMAL_ARG_LIST*/T338 r354start_position(T354* C);
/*FORMAL_ARG_LIST*/T0* r354twin(T354* C);
/*FORMAL_ARG_LIST*/T0* r354type_mark(T354* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r354omitted_open_arguments(T354* C,T0* a1,T0* a2,T338 a3);
/*FORMAL_ARG_LIST*/T2 r354count(T354* C);
/*PRETTY_PRINTER*/void r116make(T116* C);
/*PRETTY_PRINTER*/void r116prepare_for_same_line_comment(void);
/*PRETTY_PRINTER*/T6 r116print_end_of_statement(T116* C);
/*PRETTY_PRINTER*/void r116put_type_mark(T0* a1);
/*PRETTY_PRINTER*/void r116keyword(T0* a1);
extern T0*oBC116buffer;
extern int fBC116buffer;
/*PRETTY_PRINTER*/T0* r116buffer(void);
/*PRETTY_PRINTER*/void r116put_one_line_comment(T2 a1,T0* a2);
/*PRETTY_PRINTER*/void r116expression_in(T0* a1,T0* a2);
/*PRETTY_PRINTER*/void r116put_end_of(T0* a1);
/*PRETTY_PRINTER*/void r116erase_everything_after(T2 a1);
/*PRETTY_PRINTER*/void r116set_semi_colon_flag(T116* C,T6 a1);
/*PRETTY_PRINTER*/void r116instruction_in(T0* a1,T0* a2);
/*PRETTY_PRINTER*/void r116put_string(T0* a1);
/*PRETTY_PRINTER*/void r116left_margin_in(T0* a1);
/*PRETTY_PRINTER*/T6 r116is_opening_bracket_after(T2 a1);
/*PRETTY_PRINTER*/T3 r116last_non_blank_character(void);
/*PRETTY_PRINTER*/T2 r116column(void);
/*PRETTY_PRINTER*/void r116erase_separators_after(T2 a1);
/*PRETTY_PRINTER*/void r116set_indent_level(T2 a1);
/*PRETTY_PRINTER*/T2 r116index_of_last_character(void);
/*PRETTY_PRINTER*/void r116put_character(T3 a1);
/*PRETTY_PRINTER*/T6 r116print_end_of_feature(T116* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_tuple(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498make(T498* C,T338 a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498generic_list(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_anchored(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_character(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498written_mark(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498specialize_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_native_array(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498at(T498* C,T338 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498try_class_text(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498specialize_thru(T498* C,T0* a1,T0* a2,T0* a3);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_boolean(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498typed_internals_type_mark(T498* C,T338 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498to_static(T498* C,T0* a1,T6 a2);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498accept(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_reference(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498same_signature_type(T498* C,T0* a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498type(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498signature_resolve_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_natural(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498default_expression(T498* C,T338 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498id_extra_information(T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498declaration_type(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498class_text_name(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_pointer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_user_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_kernel_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_fixed_string(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498class_text(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498written_mark_buffer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498twin(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_real(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_integer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498pretty_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_generic(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498resolve_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_agent(void);
/*ARRAY_TYPE_MARK*/void r445set_generic_list(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445new_static_type_in(T445* C,T0* a1,T6 a2);
/*ARRAY_TYPE_MARK*/T0* r445declaration_type(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445is_agent(void);
/*ARRAY_TYPE_MARK*/T0* r445long_name(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445written_mark(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445resolve_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445at(T445* C,T338 a1);
/*ARRAY_TYPE_MARK*/T0* r445strings(void);
/*ARRAY_TYPE_MARK*/void r445set_generic_list_with(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r445specialize_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T6 r445is_native_array(void);
/*ARRAY_TYPE_MARK*/T6 r445is_static(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445type(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445is_pointer(void);
/*ARRAY_TYPE_MARK*/T2 r445id(T445* C);
/*ARRAY_TYPE_MARK*/void r445recompute_declaration_type(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445specialize_thru(T445* C,T0* a1,T0* a2,T0* a3);
/*ARRAY_TYPE_MARK*/T6 r445is_real(void);
/*ARRAY_TYPE_MARK*/T6 r445is_fixed_string(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445try_class_text(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445same_signature_type(T445* C,T0* a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r445is_anchored(void);
/*ARRAY_TYPE_MARK*/T6 r445is_natural(void);
/*ARRAY_TYPE_MARK*/T6 r445is_integer(void);
/*ARRAY_TYPE_MARK*/void r445make(T445* C,T338 a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r445is_character(void);
/*ARRAY_TYPE_MARK*/T6 r445is_kernel_expanded(void);
/*ARRAY_TYPE_MARK*/T0* r445written_name(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445default_expression(T338 a1);
extern T0*oBC445array_name;
extern int fBC445array_name;
/*ARRAY_TYPE_MARK*/T0* r445array_name(void);
/*ARRAY_TYPE_MARK*/T0* r445to_static(T445* C,T0* a1,T6 a2);
/*ARRAY_TYPE_MARK*/T0* r445signature_resolve_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445twin(T445* C);
/*ARRAY_TYPE_MARK*/void r445id_extra_information(T0* a1);
/*ARRAY_TYPE_MARK*/void r445set_start_position(T445* C,T338 a1);
/*ARRAY_TYPE_MARK*/T0* r445class_text(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445is_boolean(void);
/*ARRAY_TYPE_MARK*/void r445accept(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r445set_static_generic_list(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r445update_static_memory(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445typed_internals_type_mark(T445* C,T338 a1);
/*ARRAY_TYPE_MARK*/T6 r445is_tuple(void);
/*ARRAY_TYPE_MARK*/void r445pretty_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T338 r445start_position(T445* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r408set_generic_list(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408new_static_type_in(T408* C,T0* a1,T6 a2);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408declaration_type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_agent(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408long_name(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408written_mark(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408resolve_in(T408* C,T0* a1);
extern T0*oBC408native_array_name;
extern int fBC408native_array_name;
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408native_array_name(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408at(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408strings(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408specialize_in(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_native_array(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_static(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_pointer(void);
/*NATIVE_ARRAY_TYPE_MARK*/T2 r408id(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408elements_type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r408recompute_declaration_type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408specialize_thru(T408* C,T0* a1,T0* a2,T0* a3);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_real(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_fixed_string(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408try_class_text(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408same_signature_type(T408* C,T0* a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_anchored(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_natural(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_integer(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408make(T408* C,T338 a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_character(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_kernel_expanded(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408written_name(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408default_expression(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408to_static(T408* C,T0* a1,T6 a2);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408signature_resolve_in(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408twin(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r408id_extra_information(T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r408set_start_position(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408class_text(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_boolean(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408accept(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r408set_static_generic_list(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r408update_static_memory(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408typed_internals_type_mark(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_tuple(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408pretty_in(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T338 r408start_position(T408* C);
/*BOOLEAN_TYPE_MARK*/T381*create381make(T338 a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_tuple(void);
/*BOOLEAN_TYPE_MARK*/void r381make(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T0* r381generic_list(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_anchored(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_character(void);
/*BOOLEAN_TYPE_MARK*/T0* r381written_mark(void);
extern T0*oBC381written_name;
extern int fBC381written_name;
/*BOOLEAN_TYPE_MARK*/T0* r381written_name(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_native_array(void);
/*BOOLEAN_TYPE_MARK*/T0* r381at(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T0* r381try_class_text(T381* C);
extern T0*oBC381long_name;
extern int fBC381long_name;
/*BOOLEAN_TYPE_MARK*/T0* r381long_name(void);
/*BOOLEAN_TYPE_MARK*/T0* r381specialize_thru(T381* C,T0* a1,T0* a2,T0* a3);
/*BOOLEAN_TYPE_MARK*/T6 r381is_boolean(void);
/*BOOLEAN_TYPE_MARK*/T0* r381typed_internals_type_mark(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T0* r381to_static(T381* C,T0* a1,T6 a2);
/*BOOLEAN_TYPE_MARK*/void r381accept(T381* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r381same_signature_type(T381* C,T0* a1,T0* a2);
/*BOOLEAN_TYPE_MARK*/T0* r381type(void);
/*BOOLEAN_TYPE_MARK*/T0* r381signature_resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_natural(void);
/*BOOLEAN_TYPE_MARK*/T0* r381default_expression(T338 a1);
/*BOOLEAN_TYPE_MARK*/void r381id_extra_information(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r381declaration_type(T381* C);
/*BOOLEAN_TYPE_MARK*/T6 r381is_pointer(void);
/*BOOLEAN_TYPE_MARK*/T338 r381start_position(T381* C);
/*BOOLEAN_TYPE_MARK*/T6 r381is_kernel_expanded(void);
/*BOOLEAN_TYPE_MARK*/void r381set_start_position(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_fixed_string(void);
/*BOOLEAN_TYPE_MARK*/T0* r381class_text(T381* C);
/*BOOLEAN_TYPE_MARK*/T0* r381twin(T381* C);
/*BOOLEAN_TYPE_MARK*/T6 r381is_real(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_integer(void);
/*BOOLEAN_TYPE_MARK*/void r381pretty_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r381resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_agent(void);
/*CHARACTER_TYPE_MARK*/T437*create437make(T338 a1);
/*CHARACTER_TYPE_MARK*/T6 r437is_tuple(void);
/*CHARACTER_TYPE_MARK*/void r437make(T437* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T0* r437generic_list(void);
/*CHARACTER_TYPE_MARK*/T6 r437is_anchored(void);
/*CHARACTER_TYPE_MARK*/T6 r437is_character(void);
/*CHARACTER_TYPE_MARK*/T0* r437written_mark(void);
extern T0*oBC437written_name;
extern int fBC437written_name;
/*CHARACTER_TYPE_MARK*/T0* r437written_name(void);
/*CHARACTER_TYPE_MARK*/T6 r437is_native_array(void);
/*CHARACTER_TYPE_MARK*/T0* r437at(T437* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T0* r437try_class_text(T437* C);
extern T0*oBC437long_name;
extern int fBC437long_name;
/*CHARACTER_TYPE_MARK*/T0* r437long_name(void);
/*CHARACTER_TYPE_MARK*/T0* r437specialize_thru(T437* C,T0* a1,T0* a2,T0* a3);
/*CHARACTER_TYPE_MARK*/T6 r437is_boolean(void);
/*CHARACTER_TYPE_MARK*/T0* r437typed_internals_type_mark(T437* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T0* r437to_static(T437* C,T0* a1,T6 a2);
/*CHARACTER_TYPE_MARK*/void r437accept(T437* C,T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r437same_signature_type(T437* C,T0* a1,T0* a2);
/*CHARACTER_TYPE_MARK*/T0* r437type(void);
/*CHARACTER_TYPE_MARK*/T0* r437signature_resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r437is_natural(void);
/*CHARACTER_TYPE_MARK*/T0* r437default_expression(T338 a1);
/*CHARACTER_TYPE_MARK*/void r437id_extra_information(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r437declaration_type(T437* C);
/*CHARACTER_TYPE_MARK*/T6 r437is_pointer(void);
/*CHARACTER_TYPE_MARK*/T338 r437start_position(T437* C);
/*CHARACTER_TYPE_MARK*/T6 r437is_kernel_expanded(void);
/*CHARACTER_TYPE_MARK*/void r437set_start_position(T437* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T6 r437is_fixed_string(void);
/*CHARACTER_TYPE_MARK*/T0* r437class_text(T437* C);
/*CHARACTER_TYPE_MARK*/T0* r437twin(T437* C);
/*CHARACTER_TYPE_MARK*/T6 r437is_real(void);
/*CHARACTER_TYPE_MARK*/T6 r437is_integer(void);
/*CHARACTER_TYPE_MARK*/void r437pretty_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r437resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r437is_agent(void);
/*INTEGER_TYPE_MARK*/T407*create407integer_16(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer_64(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer_8(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer_32(T338 a1);
/*INTEGER_TYPE_MARK*/T0* r407declaration_type(T407* C);
/*INTEGER_TYPE_MARK*/T6 r407is_agent(void);
/*INTEGER_TYPE_MARK*/T0* r407generic_list(void);
/*INTEGER_TYPE_MARK*/T0* r407written_mark(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407resolve_in(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r407at(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_native_array(void);
/*INTEGER_TYPE_MARK*/T3 r407structure_mark(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407type(T407* C);
/*INTEGER_TYPE_MARK*/T6 r407is_pointer(void);
/*INTEGER_TYPE_MARK*/T2 r407id(T407* C);
/*INTEGER_TYPE_MARK*/void r407integer_16(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/void r407integer_32(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T0* r407specialize_thru(T407* C,T0* a1,T0* a2,T0* a3);
/*INTEGER_TYPE_MARK*/T6 r407is_real(void);
/*INTEGER_TYPE_MARK*/T6 r407is_fixed_string(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407try_class_text(T407* C);
extern T0*oBC407integer_64_name;
extern int fBC407integer_64_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_64_name(void);
/*INTEGER_TYPE_MARK*/void r407integer(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407same_signature_type(T407* C,T0* a1,T0* a2);
/*INTEGER_TYPE_MARK*/void r407integer_64(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_anchored(void);
/*INTEGER_TYPE_MARK*/T6 r407can_be_assigned_to(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T6 r407is_natural(void);
/*INTEGER_TYPE_MARK*/void r407integer_8(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_integer(void);
extern T0*oBC407integer_name;
extern int fBC407integer_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_name(void);
/*INTEGER_TYPE_MARK*/T6 r407is_character(void);
/*INTEGER_TYPE_MARK*/T6 r407is_kernel_expanded(void);
extern T0*oBC407integer_8_name;
extern int fBC407integer_8_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_8_name(void);
/*INTEGER_TYPE_MARK*/T0* r407written_name(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407default_expression(T407* C,T338 a1);
extern T0*oBC407integer_32_name;
extern int fBC407integer_32_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_32_name(void);
/*INTEGER_TYPE_MARK*/T0* r407to_static(T407* C,T0* a1,T6 a2);
/*INTEGER_TYPE_MARK*/T0* r407signature_resolve_in(T407* C,T0* a1);
extern T0*oBC407integer_16_name;
extern int fBC407integer_16_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_16_name(void);
/*INTEGER_TYPE_MARK*/T0* r407twin(T407* C);
/*INTEGER_TYPE_MARK*/void r407id_extra_information(T0* a1);
/*INTEGER_TYPE_MARK*/void r407set_start_position(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T0* r407class_text(T407* C);
/*INTEGER_TYPE_MARK*/T6 r407is_boolean(void);
/*INTEGER_TYPE_MARK*/void r407accept(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r407typed_internals_type_mark(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_tuple(void);
/*INTEGER_TYPE_MARK*/void r407pretty_in(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T338 r407start_position(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407_P_365_class_text(T407* C);
/*NATURAL_TYPE_MARK*/T435*create435natural_16(T338 a1);
/*NATURAL_TYPE_MARK*/T435*create435natural_32(T338 a1);
/*NATURAL_TYPE_MARK*/T435*create435natural_64(T338 a1);
/*NATURAL_TYPE_MARK*/T435*create435natural_8(T338 a1);
/*NATURAL_TYPE_MARK*/T0* r435declaration_type(T435* C);
extern T0*oBC435natural_32_name;
extern int fBC435natural_32_name;
/*NATURAL_TYPE_MARK*/T0* r435natural_32_name(void);
/*NATURAL_TYPE_MARK*/T6 r435is_agent(void);
/*NATURAL_TYPE_MARK*/T0* r435generic_list(void);
/*NATURAL_TYPE_MARK*/T0* r435written_mark(T435* C);
/*NATURAL_TYPE_MARK*/T0* r435resolve_in(T435* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r435at(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r435is_native_array(void);
/*NATURAL_TYPE_MARK*/T3 r435structure_mark(T435* C);
extern T0*oBC435natural_name;
extern int fBC435natural_name;
/*NATURAL_TYPE_MARK*/T0* r435natural_name(void);
/*NATURAL_TYPE_MARK*/T0* r435type(T435* C);
/*NATURAL_TYPE_MARK*/T6 r435is_pointer(void);
/*NATURAL_TYPE_MARK*/T2 r435id(T435* C);
/*NATURAL_TYPE_MARK*/void r435natural_8(T435* C,T338 a1);
extern T0*oBC435natural_64_name;
extern int fBC435natural_64_name;
/*NATURAL_TYPE_MARK*/T0* r435natural_64_name(void);
/*NATURAL_TYPE_MARK*/void r435natural(T435* C,T338 a1);
extern T0*oBC435natural_8_name;
extern int fBC435natural_8_name;
/*NATURAL_TYPE_MARK*/T0* r435natural_8_name(void);
/*NATURAL_TYPE_MARK*/T0* r435specialize_thru(T435* C,T0* a1,T0* a2,T0* a3);
/*NATURAL_TYPE_MARK*/T6 r435is_real(void);
/*NATURAL_TYPE_MARK*/T6 r435is_fixed_string(T435* C);
/*NATURAL_TYPE_MARK*/T0* r435try_class_text(T435* C);
/*NATURAL_TYPE_MARK*/T6 r435same_signature_type(T435* C,T0* a1,T0* a2);
/*NATURAL_TYPE_MARK*/T6 r435is_anchored(void);
/*NATURAL_TYPE_MARK*/T6 r435can_be_assigned_to(T435* C,T0* a1);
/*NATURAL_TYPE_MARK*/T6 r435is_natural(void);
/*NATURAL_TYPE_MARK*/void r435natural_16(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r435is_integer(void);
/*NATURAL_TYPE_MARK*/void r435natural_32(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r435is_character(void);
/*NATURAL_TYPE_MARK*/void r435natural_64(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r435is_kernel_expanded(void);
/*NATURAL_TYPE_MARK*/T0* r435written_name(T435* C);
/*NATURAL_TYPE_MARK*/T0* r435default_expression(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T0* r435to_static(T435* C,T0* a1,T6 a2);
/*NATURAL_TYPE_MARK*/T0* r435signature_resolve_in(T435* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r435twin(T435* C);
/*NATURAL_TYPE_MARK*/void r435id_extra_information(T0* a1);
/*NATURAL_TYPE_MARK*/void r435set_start_position(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T0* r435class_text(T435* C);
/*NATURAL_TYPE_MARK*/T6 r435is_boolean(void);
extern T0*oBC435natural_16_name;
extern int fBC435natural_16_name;
/*NATURAL_TYPE_MARK*/T0* r435natural_16_name(void);
/*NATURAL_TYPE_MARK*/void r435accept(T435* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r435typed_internals_type_mark(T435* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r435is_tuple(void);
/*NATURAL_TYPE_MARK*/void r435pretty_in(T435* C,T0* a1);
/*NATURAL_TYPE_MARK*/T338 r435start_position(T435* C);
/*NATURAL_TYPE_MARK*/T0* r435_P_365_class_text(T435* C);
/*CLASS_TYPE_MARK*/T403*create403make(T0* a1);
/*CLASS_TYPE_MARK*/T0* r403declaration_type(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_agent(void);
/*CLASS_TYPE_MARK*/T0* r403generic_list(void);
/*CLASS_TYPE_MARK*/T0* r403canonical_long_name(T403* C);
/*CLASS_TYPE_MARK*/T0* r403written_mark(T403* C);
/*CLASS_TYPE_MARK*/T0* r403resolve_in(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r403at(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T6 r403is_native_array(void);
/*CLASS_TYPE_MARK*/T0* r403type(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_pointer(void);
/*CLASS_TYPE_MARK*/T2 r403id(T403* C);
/*CLASS_TYPE_MARK*/T0* r403specialize_thru(T403* C,T0* a1,T0* a2,T0* a3);
/*CLASS_TYPE_MARK*/T6 r403is_real(void);
/*CLASS_TYPE_MARK*/T6 r403is_fixed_string(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_empty_expanded(T403* C);
/*CLASS_TYPE_MARK*/T0* r403try_class_text(T403* C);
/*CLASS_TYPE_MARK*/T6 r403same_signature_type(T403* C,T0* a1,T0* a2);
/*CLASS_TYPE_MARK*/T6 r403is_anchored(void);
/*CLASS_TYPE_MARK*/T6 r403is_natural(void);
/*CLASS_TYPE_MARK*/T6 r403is_integer(void);
/*CLASS_TYPE_MARK*/void r403make(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r403is_character(void);
/*CLASS_TYPE_MARK*/T6 r403is_expanded(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_kernel_expanded(void);
/*CLASS_TYPE_MARK*/T0* r403written_name(T403* C);
/*CLASS_TYPE_MARK*/T0* r403default_expression(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T0* r403to_static(T403* C,T0* a1,T6 a2);
/*CLASS_TYPE_MARK*/T6 r403is_reference(T403* C);
/*CLASS_TYPE_MARK*/T0* r403signature_resolve_in(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r403twin(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_user_expanded(T403* C);
/*CLASS_TYPE_MARK*/void r403id_extra_information(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/void r403set_start_position(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T0* r403class_text(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_boolean(void);
/*CLASS_TYPE_MARK*/void r403accept(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r403typed_internals_type_mark(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T6 r403is_tuple(void);
/*CLASS_TYPE_MARK*/void r403pretty_in(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T338 r403start_position(T403* C);
/*POINTER_TYPE_MARK*/T438*create438make(T338 a1);
/*POINTER_TYPE_MARK*/T6 r438is_tuple(void);
/*POINTER_TYPE_MARK*/void r438make(T438* C,T338 a1);
/*POINTER_TYPE_MARK*/T0* r438generic_list(void);
/*POINTER_TYPE_MARK*/T6 r438is_anchored(void);
/*POINTER_TYPE_MARK*/T6 r438is_character(void);
/*POINTER_TYPE_MARK*/T0* r438written_mark(void);
extern T0*oBC438written_name;
extern int fBC438written_name;
/*POINTER_TYPE_MARK*/T0* r438written_name(void);
/*POINTER_TYPE_MARK*/T6 r438is_native_array(void);
/*POINTER_TYPE_MARK*/T0* r438at(T438* C,T338 a1);
/*POINTER_TYPE_MARK*/T0* r438try_class_text(T438* C);
extern T0*oBC438long_name;
extern int fBC438long_name;
/*POINTER_TYPE_MARK*/T0* r438long_name(void);
/*POINTER_TYPE_MARK*/T0* r438specialize_thru(T438* C,T0* a1,T0* a2,T0* a3);
/*POINTER_TYPE_MARK*/T6 r438is_boolean(void);
/*POINTER_TYPE_MARK*/T0* r438typed_internals_type_mark(T438* C,T338 a1);
/*POINTER_TYPE_MARK*/T0* r438to_static(T438* C,T0* a1,T6 a2);
/*POINTER_TYPE_MARK*/void r438accept(T438* C,T0* a1);
/*POINTER_TYPE_MARK*/T6 r438same_signature_type(T438* C,T0* a1,T0* a2);
/*POINTER_TYPE_MARK*/T0* r438type(void);
/*POINTER_TYPE_MARK*/T0* r438signature_resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r438is_natural(void);
/*POINTER_TYPE_MARK*/T0* r438default_expression(T438* C,T338 a1);
/*POINTER_TYPE_MARK*/void r438id_extra_information(T0* a1);
/*POINTER_TYPE_MARK*/T0* r438declaration_type(T438* C);
/*POINTER_TYPE_MARK*/T6 r438is_pointer(void);
/*POINTER_TYPE_MARK*/T338 r438start_position(T438* C);
/*POINTER_TYPE_MARK*/T6 r438is_kernel_expanded(void);
/*POINTER_TYPE_MARK*/void r438set_start_position(T438* C,T338 a1);
/*POINTER_TYPE_MARK*/T6 r438is_fixed_string(void);
/*POINTER_TYPE_MARK*/T0* r438class_text(T438* C);
/*POINTER_TYPE_MARK*/T0* r438twin(T438* C);
/*POINTER_TYPE_MARK*/T6 r438is_real(void);
/*POINTER_TYPE_MARK*/T6 r438is_integer(void);
/*POINTER_TYPE_MARK*/void r438pretty_in(T0* a1);
/*POINTER_TYPE_MARK*/T0* r438resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r438is_agent(void);
/*REAL_TYPE_MARK*/T436*create436real_32(T338 a1);
/*REAL_TYPE_MARK*/T436*create436real_extended(T338 a1);
/*REAL_TYPE_MARK*/T436*create436real(T338 a1);
/*REAL_TYPE_MARK*/T0* r436declaration_type(T436* C);
/*REAL_TYPE_MARK*/T6 r436is_agent(void);
/*REAL_TYPE_MARK*/T0* r436generic_list(void);
extern T0*oBC436real_80_name;
extern int fBC436real_80_name;
/*REAL_TYPE_MARK*/T0* r436real_80_name(void);
/*REAL_TYPE_MARK*/T0* r436written_mark(T436* C);
/*REAL_TYPE_MARK*/T0* r436resolve_in(T436* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r436at(T436* C,T338 a1);
/*REAL_TYPE_MARK*/T6 r436is_native_array(void);
/*REAL_TYPE_MARK*/T3 r436structure_mark(T436* C);
extern T0*oBC436real_64_name;
extern int fBC436real_64_name;
/*REAL_TYPE_MARK*/T0* r436real_64_name(void);
/*REAL_TYPE_MARK*/T0* r436type(T436* C);
/*REAL_TYPE_MARK*/T6 r436is_pointer(void);
/*REAL_TYPE_MARK*/T2 r436id(T436* C);
extern T0*oBC436real_128_name;
extern int fBC436real_128_name;
/*REAL_TYPE_MARK*/T0* r436real_128_name(void);
/*REAL_TYPE_MARK*/T0* r436specialize_thru(T436* C,T0* a1,T0* a2,T0* a3);
/*REAL_TYPE_MARK*/T6 r436is_real(void);
/*REAL_TYPE_MARK*/T6 r436is_fixed_string(T436* C);
/*REAL_TYPE_MARK*/T0* r436try_class_text(T436* C);
/*REAL_TYPE_MARK*/T6 r436same_signature_type(T436* C,T0* a1,T0* a2);
/*REAL_TYPE_MARK*/T6 r436is_anchored(void);
/*REAL_TYPE_MARK*/T6 r436can_be_assigned_to(T436* C,T0* a1);
/*REAL_TYPE_MARK*/T6 r436is_natural(void);
extern T0*oBC436real_name;
extern int fBC436real_name;
/*REAL_TYPE_MARK*/T0* r436real_name(void);
/*REAL_TYPE_MARK*/T6 r436is_integer(void);
extern T0*oBC436real_32_name;
extern int fBC436real_32_name;
/*REAL_TYPE_MARK*/T0* r436real_32_name(void);
/*REAL_TYPE_MARK*/T6 r436is_character(void);
/*REAL_TYPE_MARK*/T6 r436is_kernel_expanded(void);
/*REAL_TYPE_MARK*/T0* r436written_name(T436* C);
/*REAL_TYPE_MARK*/T0* r436default_expression(T436* C,T338 a1);
/*REAL_TYPE_MARK*/void r436real_32(T436* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r436to_static(T436* C,T0* a1,T6 a2);
/*REAL_TYPE_MARK*/void r436real_64(T436* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r436signature_resolve_in(T436* C,T0* a1);
/*REAL_TYPE_MARK*/void r436real_80(T436* C,T338 a1);
extern T0*oBC436real_extended_name;
extern int fBC436real_extended_name;
/*REAL_TYPE_MARK*/T0* r436real_extended_name(void);
/*REAL_TYPE_MARK*/void r436real_extended(T436* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r436twin(T436* C);
/*REAL_TYPE_MARK*/void r436id_extra_information(T0* a1);
/*REAL_TYPE_MARK*/void r436set_start_position(T436* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r436class_text(T436* C);
/*REAL_TYPE_MARK*/T6 r436is_boolean(void);
/*REAL_TYPE_MARK*/void r436accept(T436* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r436typed_internals_type_mark(T436* C,T338 a1);
/*REAL_TYPE_MARK*/T6 r436is_tuple(void);
/*REAL_TYPE_MARK*/void r436pretty_in(T436* C,T0* a1);
/*REAL_TYPE_MARK*/T338 r436start_position(T436* C);
/*REAL_TYPE_MARK*/void r436real_128(T436* C,T338 a1);
/*REAL_TYPE_MARK*/void r436real(T436* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442set_generic_list(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442new_static_type_in(T442* C,T0* a1,T6 a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442declaration_type(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_agent(void);
extern T0*oBC441canonical_long_name;
extern int fBC441canonical_long_name;
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442canonical_long_name(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442long_name(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442written_mark(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442resolve_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r442count(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442at(T442* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442strings(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442specialize_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_native_array(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_static(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442type(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_pointer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r442id(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442recompute_declaration_type(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442specialize_thru(T442* C,T0* a1,T0* a2,T0* a3);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_real(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_fixed_string(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442try_class_text(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442same_signature_type(T442* C,T0* a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_anchored(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_natural(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_integer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442make(T442* C,T338 a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_character(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_kernel_expanded(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442written_name(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442default_expression(T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442to_static(T442* C,T0* a1,T6 a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442signature_resolve_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442twin(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442id_extra_information(T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442set_start_position(T442* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442class_text(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_boolean(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442accept(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442set_static_generic_list(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442update_static_memory(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442typed_internals_type_mark(T442* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442pretty_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T338 r442start_position(T442* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r440make(T440* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440generic_list(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_anchored(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_character(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440written_mark(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440canonical_long_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440written_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_native_array(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440at(T440* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440try_class_text(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440specialize_thru(T440* C,T0* a1,T0* a2,T0* a3);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_boolean(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440typed_internals_type_mark(T440* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440to_static(T440* C,T0* a1,T6 a2);
/*EMPTY_TUPLE_TYPE_MARK*/T2 r440id(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r440accept(T440* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440same_signature_type(T440* C,T0* a1,T0* a2);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440type(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440signature_resolve_in(T440* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_natural(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440default_expression(T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/void r440id_extra_information(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440declaration_type(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_pointer(void);
/*EMPTY_TUPLE_TYPE_MARK*/T338 r440start_position(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_kernel_expanded(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r440set_start_position(T440* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_fixed_string(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440class_text(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440twin(T440* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_real(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_integer(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r440pretty_in(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r440resolve_in(T440* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r440is_agent(void);
/*AGENT_TYPE_MARK*/void r443set_generic_list(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443new_static_type_in(T443* C,T0* a1,T6 a2);
/*AGENT_TYPE_MARK*/T0* r443declaration_type(T443* C);
/*AGENT_TYPE_MARK*/T6 r443is_agent(void);
/*AGENT_TYPE_MARK*/T0* r443canonical_long_name(T443* C);
/*AGENT_TYPE_MARK*/T0* r443long_name(T443* C);
/*AGENT_TYPE_MARK*/T0* r443written_mark(T443* C);
/*AGENT_TYPE_MARK*/T0* r443resolve_in(T443* C,T0* a1);
extern T0*oBC443function_name;
extern int fBC443function_name;
/*AGENT_TYPE_MARK*/T0* r443function_name(void);
/*AGENT_TYPE_MARK*/T0* r443at(T443* C,T338 a1);
/*AGENT_TYPE_MARK*/T0* r443written_open(T443* C);
/*AGENT_TYPE_MARK*/T0* r443strings(void);
/*AGENT_TYPE_MARK*/void r443procedure(T443* C,T338 a1,T0* a2);
/*AGENT_TYPE_MARK*/void r443specialize_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T6 r443is_native_array(void);
extern T0*oBC443routine_name;
extern int fBC443routine_name;
/*AGENT_TYPE_MARK*/T0* r443routine_name(void);
/*AGENT_TYPE_MARK*/T6 r443is_static(T443* C);
/*AGENT_TYPE_MARK*/T0* r443type(T443* C);
/*AGENT_TYPE_MARK*/T6 r443is_pointer(void);
/*AGENT_TYPE_MARK*/T2 r443id(T443* C);
/*AGENT_TYPE_MARK*/void r443recompute_declaration_type(T443* C);
/*AGENT_TYPE_MARK*/T0* r443specialize_thru(T443* C,T0* a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r443is_real(void);
/*AGENT_TYPE_MARK*/T6 r443is_fixed_string(T443* C);
/*AGENT_TYPE_MARK*/T0* r443try_class_text(T443* C);
/*AGENT_TYPE_MARK*/T6 r443same_signature_type(T443* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r443is_anchored(void);
/*AGENT_TYPE_MARK*/T6 r443is_natural(void);
/*AGENT_TYPE_MARK*/T6 r443is_integer(void);
/*AGENT_TYPE_MARK*/T6 r443is_character(void);
/*AGENT_TYPE_MARK*/T0* r443result_type(T443* C);
/*AGENT_TYPE_MARK*/void r443predicate(T443* C,T338 a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r443is_kernel_expanded(void);
/*AGENT_TYPE_MARK*/void r443routine(T443* C,T338 a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r443written_name(T443* C);
/*AGENT_TYPE_MARK*/T0* r443default_expression(T338 a1);
/*AGENT_TYPE_MARK*/void r443basic_make(T443* C,T2 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T0* r443to_static(T443* C,T0* a1,T6 a2);
extern T0*oBC443procedure_name;
extern int fBC443procedure_name;
/*AGENT_TYPE_MARK*/T0* r443procedure_name(void);
/*AGENT_TYPE_MARK*/void r443open_check(T443* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r443signature_resolve_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443twin(T443* C);
/*AGENT_TYPE_MARK*/void r443id_extra_information(T0* a1);
/*AGENT_TYPE_MARK*/void r443set_start_position(T443* C,T338 a1);
/*AGENT_TYPE_MARK*/T0* r443class_text(T443* C);
/*AGENT_TYPE_MARK*/void r443function(T443* C,T338 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r443is_boolean(void);
/*AGENT_TYPE_MARK*/void r443accept(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/void r443set_static_generic_list(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/void r443update_static_memory(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443typed_internals_type_mark(T443* C,T338 a1);
/*AGENT_TYPE_MARK*/T6 r443is_tuple(void);
/*AGENT_TYPE_MARK*/void r443pretty_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T338 r443start_position(T443* C);
/*AGENT_TYPE_MARK*/void r443_P_409_specialize_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443_P_409_specialize_thru(T443* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/void r446set_generic_list(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446new_static_type_in(T446* C,T0* a1,T6 a2);
/*USER_GENERIC_TYPE_MARK*/T0* r446declaration_type(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_agent(void);
/*USER_GENERIC_TYPE_MARK*/T0* r446canonical_long_name(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446long_name(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446written_mark(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446resolve_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446at(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446strings(void);
/*USER_GENERIC_TYPE_MARK*/void r446specialize_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_native_array(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_static(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446type(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_pointer(void);
/*USER_GENERIC_TYPE_MARK*/T2 r446id(T446* C);
/*USER_GENERIC_TYPE_MARK*/void r446recompute_declaration_type(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446specialize_thru(T446* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_real(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_fixed_string(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_empty_expanded(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446try_class_text(T446* C);
/*USER_GENERIC_TYPE_MARK*/void r446special_weak_reference_extra_check(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446same_signature_type(T446* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_anchored(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_natural(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_integer(void);
/*USER_GENERIC_TYPE_MARK*/void r446make(T446* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_character(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_expanded(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_kernel_expanded(void);
/*USER_GENERIC_TYPE_MARK*/T0* r446written_name(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446default_expression(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446to_static(T446* C,T0* a1,T6 a2);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_reference(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446signature_resolve_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446twin(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_user_expanded(T446* C);
/*USER_GENERIC_TYPE_MARK*/void r446id_extra_information(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446weak_reference_argument(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r446set_start_position(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446class_text(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_boolean(void);
/*USER_GENERIC_TYPE_MARK*/void r446accept(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r446set_static_generic_list(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r446update_static_memory(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446typed_internals_type_mark(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_tuple(void);
/*USER_GENERIC_TYPE_MARK*/void r446pretty_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T338 r446start_position(T446* C);
/*MINI_BUFFER*/T6 r273is_off(T273* C);
/*MINI_BUFFER*/T0* r273a_include(T273* C);
/*MINI_BUFFER*/void r273next(T273* C);
/*MINI_BUFFER*/T0* r273a_file_or_directory_path(T273* C);
/*MINI_BUFFER*/T0* r273a_type_cast(T273* C);
/*MINI_BUFFER*/T6 r273a_keyword(T273* C,T0* a1);
/*MINI_BUFFER*/void r273skip_separators(T273* C);
/*MINI_BUFFER*/T3 r273item(T273* C);
/*MINI_BUFFER*/T0* r273system_tools(void);
/*MINI_BUFFER*/T0* r273a_signature(T273* C);
/*MINI_BUFFER*/T0* r273an_identifier(T273* C);
/*MINI_BUFFER*/void r273start_with(T273* C,T0* a1);
/*MINI_BUFFER*/void r273show_position_with_fatal_error(T273* C,T0* a1);
/*MINI_BUFFER*/T6 r273a_word(T273* C,T0* a1);
/*NATIVE_BUILT_IN*/void r467make(T467* C,T0* a1);
/*NATIVE_BUILT_IN*/void r467pretty(T467* C,T2 a1,T6 a2);
/*NATIVE_BUILT_IN*/void r467parse_external_type(T467* C,T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r467accept(T467* C,T0* a1);
/*NATIVE_BUILT_IN*/T338 r467start_position(T467* C);
/*NATIVE_BUILT_IN*/T6 r467use_current(T0* a1);
/*NATIVE_BUILT_IN*/void r467crash(T467* C);
/*NATIVE_BUILT_IN*/T6 r467side_effect_free(T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r467not_yet_implemented(T467* C);
/*NATIVE_BUILT_IN*/T2 r467hash_code(T467* C);
/*NATIVE_PLUG_IN*/T6 r469is_equal(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469make(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469pretty(T469* C,T2 a1,T6 a2);
/*NATIVE_PLUG_IN*/void r469parse_external_type(T469* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/void r469parse_alias_string(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469accept(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469do_collect(T469* C);
/*NATIVE_PLUG_IN*/T0* r469required_key(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469check_unused_keys(T469* C);
/*NATIVE_PLUG_IN*/void r469collect(T469* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/T338 r469start_position(T469* C);
/*NATIVE_PLUG_IN*/T0* r469system_tools(void);
/*NATIVE_PLUG_IN*/void r469customize_runtime(T469* C);
/*NATIVE_C_PLUS_PLUS*/void r470make(T470* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/void r470pretty(T470* C,T2 a1,T6 a2);
/*NATIVE_C_PLUS_PLUS*/T2 r470parse_args_in(T470* C,T0* a1,T2 a2,T0* a3,T2 a4,T2 a5);
/*NATIVE_C_PLUS_PLUS*/void r470parse_external_type(T470* C,T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T0* r470cpp(void);
/*NATIVE_C_PLUS_PLUS*/void r470accept(T470* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/T2 r470error_at(T470* C,T2 a1,T0* a2,T2 a3);
/*NATIVE_C_PLUS_PLUS*/void r470notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/void r470collect(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T338 r470start_position(T470* C);
/*NATIVE_C_PLUS_PLUS*/T2 r470parse_cpp_class_in(T470* C,T0* a1,T2 a2,T0* a3);
/*NATIVE_C_PLUS_PLUS*/void r470crash(T470* C);
/*NATIVE_C_PLUS_PLUS*/T2 r470parse_include(T470* C,T2 a1,T0* a2);
extern T0*oBC470include_memory;
extern int fBC470include_memory;
/*NATIVE_C_PLUS_PLUS*/T0* r470include_memory(void);
/*NATIVE_C_PLUS_PLUS*/void r470parse_external_in(T470* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*NATIVE_C_PLUS_PLUS*/void r470not_yet_implemented(T470* C);
/*NATIVE_C_PLUS_PLUS*/T2 r470hash_code(T470* C);
/*NATIVE_C*/void r471make(T471* C,T0* a1);
/*NATIVE_C*/void r471pretty(T471* C,T2 a1,T6 a2);
/*NATIVE_C*/void r471parse_external_type(T471* C,T0* a1,T0* a2);
/*NATIVE_C*/T0* r471cpp(void);
/*NATIVE_C*/void r471accept(T471* C,T0* a1);
/*NATIVE_C*/void r471notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C*/void r471parse_external_tag(T471* C);
/*NATIVE_C*/void r471collect(T0* a1,T0* a2);
/*NATIVE_C*/T338 r471start_position(T471* C);
/*NATIVE_C*/void r471crash(T471* C);
/*NATIVE_C*/void r471not_yet_implemented(T471* C);
/*NATIVE_C*/T2 r471hash_code(T471* C);
/*NATIVE_C*/void r471bad_external(T471* C,T0* a1);
/*EXTERNAL_TYPE*/T421*create421make(T0* a1,T0* a2,T338 a3);
/*EXTERNAL_TYPE*/void r421make(T421* C,T0* a1,T0* a2,T338 a3);
/*EXTERNAL_TYPE*/void r421set(T421* C,T0* a1,T0* a2);
/*EXTERNAL_TYPE*/void r421collect(T421* C);
/*PARENT_EDGE*/T280*create280make(T6 a1,T0* a2);
/*PARENT_EDGE*/void r280check_level_2(T280* C,T0* a1);
/*PARENT_EDGE*/void r280make(T280* C,T6 a1,T0* a2);
/*PARENT_EDGE*/T0* r280exports_for(T280* C,T0* a1);
/*PARENT_EDGE*/void r280add_rename(T280* C,T0* a1);
/*PARENT_EDGE*/T6 r280is_target_of_rename(T280* C,T0* a1);
extern T0*oBC280forbidden_parent_list;
extern int fBC280forbidden_parent_list;
/*PARENT_EDGE*/T0* r280forbidden_parent_list(void);
/*PARENT_EDGE*/void r280initialize_and_check_level_1(T280* C,T0* a1);
/*PARENT_EDGE*/T2 r280rename_count(T280* C);
/*PARENT_EDGE*/void r280id_extra_information(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280get_name_in_child(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280exports_for_all(T280* C);
/*PARENT_EDGE*/T338 r280start_position(T280* C);
/*PARENT_EDGE*/T0* r280do_rename(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280get_undefine(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280get_redefine(T280* C,T0* a1);
/*RENAME_PAIR*/void r478make(T478* C,T0* a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/T0* r519specialize_and_check(T519* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r519to_expression(T519* C);
/*OLD_MANIFEST_ARRAY*/void r519make(T519* C,T338 a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/void r519pretty(T519* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r519static_simplify(T519* C);
/*OLD_MANIFEST_ARRAY*/T0* r519specialize_in(T519* C,T0* a1);
extern T0*oBC519type_set_buffer;
extern int fBC519type_set_buffer;
/*OLD_MANIFEST_ARRAY*/T0* r519type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r519specialize_thru(T519* C,T0* a1,T0* a2,T0* a3);
/*OLD_MANIFEST_ARRAY*/T6 r519is_stored_in_some_local_variable(void);
/*OLD_MANIFEST_ARRAY*/void r519accept(T519* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/void r519pretty_target(T519* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r519twin(T519* C);
/*OLD_MANIFEST_ARRAY*/T0* r519written_declaration_type_mark(void);
/*OLD_MANIFEST_ARRAY*/T6 r519use_current(T0* a1);
/*OLD_MANIFEST_ARRAY*/void r519bracketed_pretty(T519* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r519non_void_no_dispatch_type(T0* a1);
/*OLD_MANIFEST_ARRAY*/T6 r519side_effect_free(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r519smallest_ancestor_from_type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r519resolve_in(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r519to_instruction(T519* C);
/*CALL_PREFIX_NOT*/T0* r487declaration_type(T487* C);
/*CALL_PREFIX_NOT*/T0* r487adapt_for(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487resolve_in(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487eiffel_parser(void);
extern T0*oBC345use_current_stack;
extern int fBC345use_current_stack;
/*CALL_PREFIX_NOT*/T0* r487use_current_stack(void);
/*CALL_PREFIX_NOT*/T0* r487collect(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487specialize_in(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487written_declaration_type_mark(void);
/*CALL_PREFIX_NOT*/T0* r487simplify(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487arguments(void);
/*CALL_PREFIX_NOT*/void r487pretty_target(T487* C,T2 a1);
/*CALL_PREFIX_NOT*/void r487safety_check(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487to_expression(T487* C);
/*CALL_PREFIX_NOT*/T0* r487specialize_thru(T487* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/T0* r487manifest_expression(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487feature_accumulator(void);
/*CALL_PREFIX_NOT*/T0* r487specialize_and_check(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T6 r487simplify_limit_reached(T487* C);
/*CALL_PREFIX_NOT*/void r487inline_dynamic_dispatch_(T487* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r487to_instruction(T487* C);
/*CALL_PREFIX_NOT*/T0* r487current_or_twin_init(T487* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r487standard_check_export_and_obsolete_calls(T487* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/void r487make(T487* C,T338 a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r487echo(void);
/*CALL_PREFIX_NOT*/void r487type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/void r487non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/T6 r487use_current(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487static_simplify(T487* C);
/*CALL_PREFIX_NOT*/T0* r487extra_local_expanded(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/void r487function_and_argument_count_check(T487* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r487pretty(T487* C,T2 a1);
/*CALL_PREFIX_NOT*/T6 r487side_effect_free(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487non_void_no_dispatch_type(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487inline_with(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487twin(T487* C);
/*CALL_PREFIX_NOT*/void r487bracketed_pretty(T487* C,T2 a1);
/*CALL_PREFIX_NOT*/void r487accept(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T338 r487start_position(T487* C);
/*CALL_PREFIX_NOT*/T6 r487is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/T401*create401make(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/T0* r401specialize_and_check(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401to_expression(T401* C);
/*ASSIGNMENT_TEST*/void r401make(T401* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r401pretty(T401* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r401simplify(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401static_simplify(T401* C);
/*ASSIGNMENT_TEST*/T0* r401specialize_in(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401inline_dynamic_dispatch_(T401* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/void r401safety_check(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T6 r401static_left_type_mark(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401specialize_thru(T401* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r401with_writable(T401* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T6 r401is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/void r401accept(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401adapt_for(T401* C,T0* a1);
extern T0*oBC401declaration_type;
extern int fBC401declaration_type;
/*ASSIGNMENT_TEST*/T0* r401declaration_type(void);
/*ASSIGNMENT_TEST*/T0* r401collect(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401pretty_target(T401* C,T2 a1);
/*ASSIGNMENT_TEST*/T338 r401start_position(T401* C);
/*ASSIGNMENT_TEST*/T0* r401twin(T401* C);
/*ASSIGNMENT_TEST*/T0* r401written_declaration_type_mark(void);
/*ASSIGNMENT_TEST*/T6 r401use_current(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401bracketed_pretty(T401* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r401non_void_no_dispatch_type(T0* a1);
/*ASSIGNMENT_TEST*/T6 r401side_effect_free(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401with_type_mark(T401* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T0* r401resolve_in(T0* a1);
/*ASSIGNMENT_TEST*/T0* r401to_instruction(T401* C);
/*OPEN_OPERAND*/T0* r474to_expression(T474* C);
/*OPEN_OPERAND*/void r474question_mark(T474* C,T338 a1);
/*OPEN_OPERAND*/void r474pretty(T474* C,T2 a1);
/*OPEN_OPERAND*/T0* r474static_simplify(T474* C);
/*OPEN_OPERAND*/T0* r474specialize_in(T474* C,T0* a1);
/*OPEN_OPERAND*/void r474inline_dynamic_dispatch_(T474* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/void r474type_holder(T474* C,T338 a1,T0* a2);
/*OPEN_OPERAND*/T0* r474specialize_thru(T474* C,T0* a1,T0* a2,T0* a3);
/*OPEN_OPERAND*/void r474update_resolved_memory(T474* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/T6 r474is_stored_in_some_local_variable(void);
/*OPEN_OPERAND*/void r474accept(T474* C,T0* a1);
/*OPEN_OPERAND*/T0* r474declaration_type(T474* C);
/*OPEN_OPERAND*/void r474pretty_target(T474* C,T2 a1);
/*OPEN_OPERAND*/T0* r474twin(T474* C);
/*OPEN_OPERAND*/T0* r474written_declaration_type_mark(void);
/*OPEN_OPERAND*/T6 r474use_current(T0* a1);
/*OPEN_OPERAND*/void r474bracketed_pretty(T474* C,T2 a1);
/*OPEN_OPERAND*/T0* r474non_void_no_dispatch_type(T0* a1);
/*OPEN_OPERAND*/T6 r474side_effect_free(T0* a1);
/*OPEN_OPERAND*/T0* r474resolve_in(T474* C,T0* a1);
/*OPEN_OPERAND*/T0* r474to_instruction(T474* C);
/*OPEN_OPERAND*/T0* r474current_or_twin_init(T474* C,T0* a1);
/*INTEGER_CONSTANT*/T371*create371make(T11 a1,T338 a2);
/*INTEGER_CONSTANT*/T371*create371with(T11 a1,T338 a2,T0* a3);
/*INTEGER_CONSTANT*/void r371hexadecimal(T371* C,T338 a1,T0* a2,T1 a3,T6 a4,T11 a5);
/*INTEGER_CONSTANT*/T0* r371to_expression(T371* C);
/*INTEGER_CONSTANT*/void r371make(T371* C,T11 a1,T338 a2);
/*INTEGER_CONSTANT*/T0* r371to_real_constant(T371* C);
/*INTEGER_CONSTANT*/void r371pretty(T371* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r371simplify(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T6 r371extra_bracket_flag(T371* C);
/*INTEGER_CONSTANT*/void r371set_value(T371* C,T11 a1);
/*INTEGER_CONSTANT*/T0* r371static_simplify(T371* C);
/*INTEGER_CONSTANT*/void r371inline_dynamic_dispatch_(T371* C,T0* a1,T0* a2);
/*INTEGER_CONSTANT*/void r371special(T371* C,T338 a1,T0* a2,T0* a3,T11 a4);
/*INTEGER_CONSTANT*/T6 r371is_stored_in_some_local_variable(void);
/*INTEGER_CONSTANT*/void r371accept(T371* C,T0* a1);
/*INTEGER_CONSTANT*/void r371with(T371* C,T11 a1,T338 a2,T0* a3);
/*INTEGER_CONSTANT*/T0* r371result_type(T371* C);
/*INTEGER_CONSTANT*/T0* r371declaration_type(T371* C);
/*INTEGER_CONSTANT*/T0* r371collect(T371* C,T0* a1);
/*INTEGER_CONSTANT*/void r371pretty_target(T371* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r371twin(T371* C);
/*INTEGER_CONSTANT*/T0* r371written_declaration_type_mark(void);
/*INTEGER_CONSTANT*/T6 r371use_current(T0* a1);
/*INTEGER_CONSTANT*/void r371bracketed_pretty(T371* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r371non_void_no_dispatch_type(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r371to_string(T371* C);
/*INTEGER_CONSTANT*/T6 r371side_effect_free(T0* a1);
/*INTEGER_CONSTANT*/void r371append_in(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r371resolve_in(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r371to_instruction(T371* C);
/*INTEGER_CONSTANT*/void r371_P_372_pretty_target(T371* C,T2 a1);
/*REAL_CONSTANT*/T0* r475to_expression(T475* C);
/*REAL_CONSTANT*/void r475make(T475* C,T338 a1,T0* a2,T0* a3);
/*REAL_CONSTANT*/void r475pretty(T475* C,T2 a1);
/*REAL_CONSTANT*/T0* r475simplify(T475* C,T0* a1);
/*REAL_CONSTANT*/T0* r475static_simplify(T475* C);
/*REAL_CONSTANT*/void r475inline_dynamic_dispatch_(T475* C,T0* a1,T0* a2);
/*REAL_CONSTANT*/T0* r475normalized_view(T475* C);
/*REAL_CONSTANT*/T6 r475is_stored_in_some_local_variable(void);
/*REAL_CONSTANT*/void r475accept(T475* C,T0* a1);
/*REAL_CONSTANT*/T0* r475declaration_type(T475* C);
/*REAL_CONSTANT*/T0* r475collect(T475* C,T0* a1);
/*REAL_CONSTANT*/void r475pretty_target(T475* C,T2 a1);
/*REAL_CONSTANT*/T0* r475twin(T475* C);
/*REAL_CONSTANT*/T0* r475written_declaration_type_mark(void);
/*REAL_CONSTANT*/T6 r475use_current(T0* a1);
/*REAL_CONSTANT*/void r475bracketed_pretty(T475* C,T2 a1);
/*REAL_CONSTANT*/T0* r475non_void_no_dispatch_type(T475* C,T0* a1);
/*REAL_CONSTANT*/T6 r475side_effect_free(T0* a1);
/*REAL_CONSTANT*/T0* r475resolve_in(T475* C,T0* a1);
/*REAL_CONSTANT*/T0* r475to_instruction(T475* C);
/*MANIFEST_GENERIC*/T6 r476use_current_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r476declaration_type(T476* C);
/*MANIFEST_GENERIC*/T0* r476adapt_for(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476resolve_in(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476optional_arguments_specialize_and_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476collect(T476* C,T0* a1);
extern T0*oBC32manifest_make_name;
extern int fBC32manifest_make_name;
/*MANIFEST_GENERIC*/T0* r476manifest_make_name(void);
/*MANIFEST_GENERIC*/T6 r476is_equal(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476specialize_in(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/T0* r476written_declaration_type_mark(void);
/*MANIFEST_GENERIC*/T0* r476simplify(T476* C,T0* a1);
extern T0*oBC32manifest_semicolon_check_name;
extern int fBC32manifest_semicolon_check_name;
/*MANIFEST_GENERIC*/T0* r476manifest_semicolon_check_name(void);
/*MANIFEST_GENERIC*/void r476pretty_target(T476* C,T2 a1);
/*MANIFEST_GENERIC*/void r476safety_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/void r476specialize_and_check_from_old_manifest_array(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476to_expression(T476* C);
/*MANIFEST_GENERIC*/T0* r476specialize_thru(T476* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/T0* r476specialize_and_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/void r476inline_dynamic_dispatch_(T476* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r476to_instruction(T476* C);
/*MANIFEST_GENERIC*/void r476make(T476* C,T338 a1,T0* a2,T0* a3,T0* a4,T2 a5,T338 a6);
/*MANIFEST_GENERIC*/T0* r476calloc_name(void);
/*MANIFEST_GENERIC*/T2 r476hash_code(T476* C);
/*MANIFEST_GENERIC*/T0* r476simplify_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T6 r476use_current(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476static_simplify(T476* C);
/*MANIFEST_GENERIC*/void r476init(T476* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r476specialize_in_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r476pretty(T476* C,T2 a1);
extern T0*oBC32manifest_put_name;
extern int fBC32manifest_put_name;
/*MANIFEST_GENERIC*/T0* r476manifest_put_name(void);
/*MANIFEST_GENERIC*/T6 r476side_effect_free(T0* a1);
/*MANIFEST_GENERIC*/T0* r476specialize_thru_of(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/T0* r476non_void_no_dispatch_type(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476twin(T476* C);
/*MANIFEST_GENERIC*/T0* r476specialize_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/T0* r476item_list_specialize_and_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476adapt_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r476safety_check_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r476accept(T476* C,T0* a1);
extern T0*oBC32put_name;
extern int fBC32put_name;
/*MANIFEST_GENERIC*/T0* r476put_name(void);
/*MANIFEST_GENERIC*/T6 r476is_stored_in_some_local_variable(void);
/*EFFECTIVE_ARG_LIST*/T339*create339make_1(T0* a1);
/*EFFECTIVE_ARG_LIST*/T339*create339make_2(T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_and_check(T339* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EFFECTIVE_ARG_LIST*/T0* r339to_fake_tuple(T339* C);
/*EFFECTIVE_ARG_LIST*/void r339pretty(T339* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r339unused_expression_inline(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r339simplify(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r339replace_item(T339* C,T2 a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339put(T339* C,T0* a1,T2 a2);
/*EFFECTIVE_ARG_LIST*/void r339static_simplify(T339* C);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_in(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339expression(T339* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r339safety_check(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_and_check_on_expressions(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r339add_last(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_and_check_basic(T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC339collecting_formal_sub_type;
extern int fBC339collecting_formal_sub_type;
/*EFFECTIVE_ARG_LIST*/T0* r339collecting_formal_sub_type(void);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_thru(T339* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/T6 r339is_static(T339* C);
/*EFFECTIVE_ARG_LIST*/void r339accept(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339adapt_for(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339create_inline(T339* C);
/*EFFECTIVE_ARG_LIST*/T0* r339item(T339* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r339make_n(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339unused_expression_in(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339collect(T339* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/void r339simple_collect(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T338 r339start_position(T339* C);
/*EFFECTIVE_ARG_LIST*/T0* r339twin(T339* C);
/*EFFECTIVE_ARG_LIST*/T6 r339use_current(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T6 r339side_effect_free(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339inline_dynamic_dispatch(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339make_1(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r339make_2(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T2 r339count(T339* C);
extern T0*oBC339collecting_formal;
extern int fBC339collecting_formal;
/*EFFECTIVE_ARG_LIST*/T0* r339collecting_formal(void);
/*FUNCTION_CALL_0*/T0* r348declaration_type(T348* C);
/*FUNCTION_CALL_0*/T0* r348adapt_for(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348resolve_in(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348use_current_stack(void);
/*FUNCTION_CALL_0*/T0* r348collect(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348specialize_in(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348written_declaration_type_mark(void);
/*FUNCTION_CALL_0*/T0* r348simplify(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348arguments(void);
/*FUNCTION_CALL_0*/void r348pretty_target(T348* C,T2 a1);
/*FUNCTION_CALL_0*/void r348safety_check(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348to_expression(T348* C);
/*FUNCTION_CALL_0*/T0* r348specialize_thru(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T0* r348manifest_expression(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348feature_accumulator(void);
/*FUNCTION_CALL_0*/T0* r348specialize_and_check(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T6 r348simplify_limit_reached(T348* C);
/*FUNCTION_CALL_0*/void r348inline_dynamic_dispatch_(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r348to_instruction(T348* C);
/*FUNCTION_CALL_0*/T0* r348current_or_twin_init(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r348standard_check_export_and_obsolete_calls(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/void r348make(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r348echo(void);
/*FUNCTION_CALL_0*/void r348type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/void r348non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/T6 r348use_current(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348static_simplify(T348* C);
/*FUNCTION_CALL_0*/T0* r348extra_local_expanded(T348* C,T0* a1);
/*FUNCTION_CALL_0*/void r348function_and_argument_count_check(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r348pretty(T348* C,T2 a1);
/*FUNCTION_CALL_0*/T6 r348side_effect_free(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348non_void_no_dispatch_type(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348inline_with(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348twin(T348* C);
/*FUNCTION_CALL_0*/void r348bracketed_pretty(T348* C,T2 a1);
/*FUNCTION_CALL_0*/void r348accept(T348* C,T0* a1);
/*FUNCTION_CALL_0*/void r348make_specialized(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T338 r348start_position(T348* C);
/*FUNCTION_CALL_0*/T6 r348is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T6 r351is_balanced_operator(T0* a1);
/*FUNCTION_CALL_1*/T0* r351declaration_type(T351* C);
/*FUNCTION_CALL_1*/T0* r351adapt_for(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351resolve_in(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351use_current_stack(void);
/*FUNCTION_CALL_1*/T0* r351collect(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351specialize_in(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351written_declaration_type_mark(void);
/*FUNCTION_CALL_1*/T0* r351simplify(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351pretty_target(T351* C,T2 a1);
/*FUNCTION_CALL_1*/void r351safety_check(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351to_expression(T351* C);
/*FUNCTION_CALL_1*/T0* r351specialize_thru(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r351feature_accumulator(void);
/*FUNCTION_CALL_1*/T0* r351specialize_and_check(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351inline_dynamic_dispatch_(T351* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r351to_instruction(T351* C);
/*FUNCTION_CALL_1*/T0* r351current_or_twin_init(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r351standard_check_export_and_obsolete_calls(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r351make(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r351arg1(T351* C);
/*FUNCTION_CALL_1*/void r351type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/void r351non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T6 r351use_current(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351static_simplify(T351* C);
/*FUNCTION_CALL_1*/void r351init(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r351extra_local_expanded(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351function_and_argument_count_check(T351* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/void r351pretty(T351* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r351side_effect_free(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351non_void_no_dispatch_type(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351run_feature_for(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351inline_with(T351* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r351twin(T351* C);
/*FUNCTION_CALL_1*/void r351bracketed_pretty(T351* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r351is_question_mark_open_operand(T0* a1);
/*FUNCTION_CALL_1*/void r351accept(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351make_specialized(T351* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T338 r351start_position(T351* C);
/*FUNCTION_CALL_1*/T6 r351is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T0* r351_P_350_declaration_type(T351* C);
/*FUNCTION_CALL_N*/T0* r353declaration_type(T353* C);
/*FUNCTION_CALL_N*/T0* r353adapt_for(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353resolve_in(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353use_current_stack(void);
/*FUNCTION_CALL_N*/T0* r353collect(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353specialize_in(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353written_declaration_type_mark(void);
/*FUNCTION_CALL_N*/T0* r353simplify(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353pretty_target(T353* C,T2 a1);
/*FUNCTION_CALL_N*/void r353safety_check(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353to_expression(T353* C);
/*FUNCTION_CALL_N*/T0* r353specialize_thru(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r353feature_accumulator(void);
/*FUNCTION_CALL_N*/T0* r353specialize_and_check(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353inline_dynamic_dispatch_(T353* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/T0* r353to_instruction(T353* C);
/*FUNCTION_CALL_N*/void r353standard_check_export_and_obsolete_calls(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r353make(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r353type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/void r353non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/T6 r353use_current(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353static_simplify(T353* C);
/*FUNCTION_CALL_N*/void r353init(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r353extra_local_expanded(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353function_and_argument_count_check(T353* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/void r353pretty(T353* C,T2 a1);
/*FUNCTION_CALL_N*/T6 r353side_effect_free(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353non_void_no_dispatch_type(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353run_feature_for(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353twin(T353* C);
/*FUNCTION_CALL_N*/void r353bracketed_pretty(T353* C,T2 a1);
/*FUNCTION_CALL_N*/T2 r353arg_count(T353* C);
/*FUNCTION_CALL_N*/void r353accept(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T338 r353start_position(T353* C);
/*FUNCTION_CALL_N*/T6 r353is_stored_in_some_local_variable(void);
/*PROCEDURE_CALL_0*/T0* r342specialize_and_check(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342to_expression(T342* C);
/*PROCEDURE_CALL_0*/void r342make(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r342pretty(T342* C,T2 a1);
/*PROCEDURE_CALL_0*/T0* r342simplify(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/void r342standard_check_export_and_obsolete_calls(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/T0* r342specialize_in(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342inline_dynamic_dispatch_(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r342safety_check(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342run_feature_for(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342specialize_thru(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/void r342accept(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342simplify_arguments(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342adapt_for(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342collect(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T338 r342start_position(T342* C);
/*PROCEDURE_CALL_0*/T0* r342use_current_stack(void);
/*PROCEDURE_CALL_0*/T0* r342twin(T342* C);
/*PROCEDURE_CALL_0*/T6 r342use_current(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/T6 r342side_effect_free(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342arguments(void);
/*PROCEDURE_CALL_0*/T0* r342inline_dynamic_dispatch(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r342inline_with(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342collect_create(T342* C,T0* a1,T0* a2,T338 a3);
/*PROCEDURE_CALL_0*/void r342procedure_and_argument_count_check(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r342to_instruction(T342* C);
/*PROCEDURE_CALL_1*/T0* r346specialize_and_check(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346to_expression(T346* C);
/*PROCEDURE_CALL_1*/void r346make(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r346pretty(T346* C,T2 a1);
/*PROCEDURE_CALL_1*/T0* r346simplify(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/void r346standard_check_export_and_obsolete_calls(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r346specialize_in(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346inline_dynamic_dispatch_(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r346arg1(T346* C);
/*PROCEDURE_CALL_1*/void r346safety_check(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346run_feature_for(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346init(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r346specialize_thru(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r346accept(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346simplify_arguments(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346adapt_for(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346collect(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T338 r346start_position(T346* C);
/*PROCEDURE_CALL_1*/T0* r346use_current_stack(void);
/*PROCEDURE_CALL_1*/T0* r346twin(T346* C);
/*PROCEDURE_CALL_1*/T6 r346use_current(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/T6 r346side_effect_free(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346inline_dynamic_dispatch(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r346inline_with(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/void r346collect_create(T346* C,T0* a1,T0* a2,T338 a3);
/*PROCEDURE_CALL_1*/void r346procedure_and_argument_count_check(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r346to_instruction(T346* C);
/*PROCEDURE_CALL_N*/T0* r347specialize_and_check(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347to_expression(T347* C);
/*PROCEDURE_CALL_N*/T2 r347arg_count(T347* C);
/*PROCEDURE_CALL_N*/void r347make(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r347pretty(T347* C,T2 a1);
/*PROCEDURE_CALL_N*/T0* r347simplify(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/void r347standard_check_export_and_obsolete_calls(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r347specialize_in(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347inline_dynamic_dispatch_(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r347safety_check(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347run_feature_for(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347init(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r347specialize_thru(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r347accept(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347inline_2(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r347simplify_arguments(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347adapt_for(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347collect(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T338 r347start_position(T347* C);
/*PROCEDURE_CALL_N*/T0* r347use_current_stack(void);
/*PROCEDURE_CALL_N*/T0* r347twin(T347* C);
/*PROCEDURE_CALL_N*/T6 r347use_current(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/T6 r347side_effect_free(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347inline_dynamic_dispatch(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r347inline_with(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r347collect_create(T347* C,T0* a1,T0* a2,T338 a3);
/*PROCEDURE_CALL_N*/void r347procedure_and_argument_count_check(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r347to_instruction(T347* C);
/*CALL_PREFIX_PLUS*/T0* r489declaration_type(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489adapt_for(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489resolve_in(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489eiffel_parser(void);
/*CALL_PREFIX_PLUS*/T0* r489use_current_stack(void);
/*CALL_PREFIX_PLUS*/T0* r489collect(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489specialize_in(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489written_declaration_type_mark(void);
/*CALL_PREFIX_PLUS*/T0* r489simplify(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489arguments(void);
/*CALL_PREFIX_PLUS*/void r489pretty_target(T489* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r489safety_check(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489to_expression(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489specialize_thru(T489* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/T0* r489manifest_expression(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489feature_accumulator(void);
/*CALL_PREFIX_PLUS*/T0* r489specialize_and_check(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T6 r489simplify_limit_reached(T489* C);
/*CALL_PREFIX_PLUS*/void r489inline_dynamic_dispatch_(T489* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r489to_instruction(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489current_or_twin_init(T489* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r489standard_check_export_and_obsolete_calls(T489* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/void r489make(T489* C,T338 a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r489echo(void);
/*CALL_PREFIX_PLUS*/void r489type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/void r489non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/T6 r489use_current(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489static_simplify(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489extra_local_expanded(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/void r489function_and_argument_count_check(T489* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r489pretty(T489* C,T2 a1);
/*CALL_PREFIX_PLUS*/T6 r489side_effect_free(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489non_void_no_dispatch_type(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489inline_with(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489twin(T489* C);
/*CALL_PREFIX_PLUS*/void r489bracketed_pretty(T489* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r489accept(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T338 r489start_position(T489* C);
/*CALL_PREFIX_PLUS*/T6 r489is_stored_in_some_local_variable(void);
/*CALL_PREFIX_MINUS*/T0* r490declaration_type(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490adapt_for(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490resolve_in(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490eiffel_parser(void);
/*CALL_PREFIX_MINUS*/T0* r490use_current_stack(void);
/*CALL_PREFIX_MINUS*/T0* r490collect(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490specialize_in(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490written_declaration_type_mark(void);
/*CALL_PREFIX_MINUS*/T0* r490simplify(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490arguments(void);
/*CALL_PREFIX_MINUS*/void r490pretty_target(T490* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r490safety_check(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490to_expression(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490specialize_thru(T490* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/T0* r490manifest_expression(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490feature_accumulator(void);
/*CALL_PREFIX_MINUS*/T0* r490specialize_and_check(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T6 r490simplify_limit_reached(T490* C);
/*CALL_PREFIX_MINUS*/void r490inline_dynamic_dispatch_(T490* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r490to_instruction(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490current_or_twin_init(T490* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r490standard_check_export_and_obsolete_calls(T490* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/void r490make(T490* C,T338 a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r490echo(void);
/*CALL_PREFIX_MINUS*/void r490type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/void r490non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/T6 r490use_current(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490static_simplify(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490extra_local_expanded(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/void r490function_and_argument_count_check(T490* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r490pretty(T490* C,T2 a1);
/*CALL_PREFIX_MINUS*/T6 r490side_effect_free(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490non_void_no_dispatch_type(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490inline_with(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490twin(T490* C);
/*CALL_PREFIX_MINUS*/void r490bracketed_pretty(T490* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r490accept(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T338 r490start_position(T490* C);
/*CALL_PREFIX_MINUS*/T6 r490is_stored_in_some_local_variable(void);
/*CALL_PREFIX_FREEOP*/T0* r491declaration_type(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491adapt_for(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491resolve_in(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491use_current_stack(void);
/*CALL_PREFIX_FREEOP*/T0* r491collect(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491specialize_in(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491written_declaration_type_mark(void);
/*CALL_PREFIX_FREEOP*/T0* r491simplify(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491arguments(void);
/*CALL_PREFIX_FREEOP*/void r491pretty_target(T491* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r491safety_check(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491to_expression(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491specialize_thru(T491* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/T0* r491manifest_expression(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491feature_accumulator(void);
/*CALL_PREFIX_FREEOP*/T0* r491specialize_and_check(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T6 r491simplify_limit_reached(T491* C);
/*CALL_PREFIX_FREEOP*/void r491inline_dynamic_dispatch_(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r491to_instruction(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491current_or_twin_init(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r491standard_check_export_and_obsolete_calls(T491* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/void r491make(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r491echo(void);
/*CALL_PREFIX_FREEOP*/void r491type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/void r491non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/T6 r491use_current(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491static_simplify(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491extra_local_expanded(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/void r491function_and_argument_count_check(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r491pretty(T491* C,T2 a1);
/*CALL_PREFIX_FREEOP*/T6 r491side_effect_free(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491non_void_no_dispatch_type(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491inline_with(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491twin(T491* C);
/*CALL_PREFIX_FREEOP*/void r491bracketed_pretty(T491* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r491accept(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T338 r491start_position(T491* C);
/*CALL_PREFIX_FREEOP*/T6 r491is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/T0* r480specialize_and_check(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480to_expression(T480* C);
/*MANIFEST_TUPLE*/void r480make(T480* C,T338 a1,T0* a2);
/*MANIFEST_TUPLE*/void r480pretty(T480* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r480simplify(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480create_expression_for(T480* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r480static_simplify(T480* C);
/*MANIFEST_TUPLE*/T0* r480specialize_in(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480safety_check(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480init(T480* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r480specialize_thru(T480* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_TUPLE*/T6 r480is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/void r480accept(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480adapt_for(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480pretty_target(T480* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r480twin(T480* C);
/*MANIFEST_TUPLE*/T0* r480written_declaration_type_mark(void);
/*MANIFEST_TUPLE*/T6 r480use_current(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480bracketed_pretty(T480* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r480non_void_no_dispatch_type(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T6 r480side_effect_free(T0* a1);
/*MANIFEST_TUPLE*/T0* r480resolve_in(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480to_instruction(T480* C);
/*MANIFEST_TUPLE*/T0* r480current_or_twin_init(T480* C,T0* a1,T0* a2);
/*E_TRUE*/T385*create385make(T338 a1);
/*E_TRUE*/T0* r385to_expression(T385* C);
/*E_TRUE*/void r385make(T385* C,T338 a1);
/*E_TRUE*/void r385pretty(T2 a1);
/*E_TRUE*/T0* r385simplify(T385* C,T0* a1);
/*E_TRUE*/T0* r385static_simplify(T385* C);
/*E_TRUE*/void r385inline_dynamic_dispatch_(T385* C,T0* a1,T0* a2);
/*E_TRUE*/T6 r385is_stored_in_some_local_variable(void);
/*E_TRUE*/void r385accept(T385* C,T0* a1);
extern T0*oBC386declaration_type;
extern int fBC386declaration_type;
/*E_TRUE*/T0* r385declaration_type(void);
/*E_TRUE*/T0* r385collect(T0* a1);
/*E_TRUE*/void r385pretty_target(T2 a1);
/*E_TRUE*/T0* r385twin(T385* C);
/*E_TRUE*/T0* r385written_declaration_type_mark(void);
/*E_TRUE*/T6 r385use_current(T0* a1);
/*E_TRUE*/void r385bracketed_pretty(T2 a1);
/*E_TRUE*/T0* r385non_void_no_dispatch_type(T0* a1);
/*E_TRUE*/T6 r385side_effect_free(T0* a1);
/*E_TRUE*/T0* r385resolve_in(T0* a1);
/*E_TRUE*/T0* r385to_instruction(T385* C);
/*E_FALSE*/T456*create456make(T338 a1);
/*E_FALSE*/T0* r456to_expression(T456* C);
/*E_FALSE*/void r456make(T456* C,T338 a1);
/*E_FALSE*/void r456pretty(T2 a1);
/*E_FALSE*/T0* r456simplify(T456* C,T0* a1);
/*E_FALSE*/T0* r456static_simplify(T456* C);
/*E_FALSE*/void r456inline_dynamic_dispatch_(T456* C,T0* a1,T0* a2);
/*E_FALSE*/T6 r456is_stored_in_some_local_variable(void);
/*E_FALSE*/void r456accept(T456* C,T0* a1);
/*E_FALSE*/T0* r456declaration_type(void);
/*E_FALSE*/T0* r456collect(T0* a1);
/*E_FALSE*/void r456pretty_target(T2 a1);
/*E_FALSE*/T0* r456twin(T456* C);
/*E_FALSE*/T0* r456written_declaration_type_mark(void);
/*E_FALSE*/T6 r456use_current(T0* a1);
/*E_FALSE*/void r456bracketed_pretty(T2 a1);
/*E_FALSE*/T0* r456non_void_no_dispatch_type(T0* a1);
/*E_FALSE*/T6 r456side_effect_free(T0* a1);
/*E_FALSE*/T0* r456resolve_in(T0* a1);
/*E_FALSE*/T0* r456to_instruction(T456* C);
/*CHARACTER_CONSTANT*/T462*create462with(T338 a1,T3 a2);
/*CHARACTER_CONSTANT*/T0* r462to_expression(T462* C);
/*CHARACTER_CONSTANT*/void r462make(T462* C,T338 a1,T3 a2,T0* a3);
/*CHARACTER_CONSTANT*/void r462character_coding(T3 a1,T0* a2);
/*CHARACTER_CONSTANT*/void r462pretty(T462* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r462simplify(T462* C,T0* a1);
/*CHARACTER_CONSTANT*/T0* r462static_simplify(T462* C);
/*CHARACTER_CONSTANT*/void r462inline_dynamic_dispatch_(T462* C,T0* a1,T0* a2);
/*CHARACTER_CONSTANT*/T6 r462is_stored_in_some_local_variable(void);
/*CHARACTER_CONSTANT*/void r462accept(T462* C,T0* a1);
/*CHARACTER_CONSTANT*/void r462with(T462* C,T338 a1,T3 a2);
extern T0*oBC462declaration_type;
extern int fBC462declaration_type;
/*CHARACTER_CONSTANT*/T0* r462declaration_type(void);
/*CHARACTER_CONSTANT*/T0* r462collect(T0* a1);
/*CHARACTER_CONSTANT*/void r462pretty_target(T462* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r462twin(T462* C);
/*CHARACTER_CONSTANT*/T0* r462written_declaration_type_mark(void);
/*CHARACTER_CONSTANT*/T6 r462use_current(T0* a1);
/*CHARACTER_CONSTANT*/void r462bracketed_pretty(T462* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r462non_void_no_dispatch_type(T0* a1);
/*CHARACTER_CONSTANT*/T0* r462to_string(T462* C);
/*CHARACTER_CONSTANT*/T6 r462side_effect_free(T0* a1);
/*CHARACTER_CONSTANT*/T0* r462resolve_in(T0* a1);
/*CHARACTER_CONSTANT*/T0* r462to_instruction(T462* C);
/*PRECURSOR_EXPRESSION*/T0* r481specialize_and_check(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481to_expression(T481* C);
/*PRECURSOR_EXPRESSION*/void r481make(T481* C,T338 a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T0* r481simplify(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481static_simplify(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481specialize_in(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r481inline_dynamic_dispatch_(T481* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r481safety_check(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r481init(T481* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r481pretty_(T481* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r481specialize_thru(T481* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T6 r481is_stored_in_some_local_variable(void);
/*PRECURSOR_EXPRESSION*/void r481accept(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481adapt_for(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481declaration_type(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481feature_accumulator(void);
/*PRECURSOR_EXPRESSION*/T0* r481collect(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r481pretty_target(T481* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r481twin(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481written_declaration_type_mark(void);
/*PRECURSOR_EXPRESSION*/T6 r481use_current(T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481non_void_no_dispatch_type(T0* a1);
/*PRECURSOR_EXPRESSION*/T6 r481side_effect_free(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481resolve_in(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481to_instruction(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481current_or_twin_init(T481* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r516to_expression(T516* C);
/*FAKE_TARGET*/void r516make(T516* C,T338 a1,T0* a2);
/*FAKE_TARGET*/void r516pretty(T516* C,T2 a1);
/*FAKE_TARGET*/T0* r516static_simplify(T516* C);
/*FAKE_TARGET*/T0* r516specialize_in(T516* C,T0* a1);
/*FAKE_TARGET*/void r516inline_dynamic_dispatch_(T516* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r516specialize_thru(T516* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TARGET*/T6 r516is_stored_in_some_local_variable(void);
/*FAKE_TARGET*/void r516accept(T516* C,T0* a1);
/*FAKE_TARGET*/T0* r516adapt_for(T516* C,T0* a1);
/*FAKE_TARGET*/T0* r516declaration_type(T516* C);
/*FAKE_TARGET*/void r516pretty_target(T516* C,T2 a1);
/*FAKE_TARGET*/T0* r516twin(T516* C);
/*FAKE_TARGET*/T0* r516written_declaration_type_mark(void);
/*FAKE_TARGET*/T6 r516use_current(T0* a1);
/*FAKE_TARGET*/void r516bracketed_pretty(T516* C,T2 a1);
/*FAKE_TARGET*/T0* r516non_void_no_dispatch_type(T0* a1);
/*FAKE_TARGET*/T6 r516side_effect_free(T0* a1);
/*FAKE_TARGET*/T0* r516resolve_in(T516* C,T0* a1);
/*FAKE_TARGET*/T0* r516to_instruction(T516* C);
/*FAKE_TARGET*/T0* r516current_or_twin_init(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r517specialize_and_check(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r517to_expression(T517* C);
/*CREATE_EXPRESSION*/void r517make(T517* C,T338 a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T0* r517created_type(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517pretty(T517* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r517simplify(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517default_user_expanded(T517* C,T338 a1,T0* a2);
/*CREATE_EXPRESSION*/T0* r517static_simplify(T517* C);
/*CREATE_EXPRESSION*/T0* r517specialize_in(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517inline_dynamic_dispatch_(T517* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/void r517safety_check(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517init(T517* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/T0* r517extra_local_expanded(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517specialize_checks(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r517specialize_thru(T517* C,T0* a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T6 r517is_stored_in_some_local_variable(void);
/*CREATE_EXPRESSION*/void r517accept(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r517adapt_for(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r517declaration_type(T517* C);
/*CREATE_EXPRESSION*/T0* r517default_create_name(void);
/*CREATE_EXPRESSION*/T0* r517collect(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517pretty_target(T517* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r517any_default_create_fs(void);
/*CREATE_EXPRESSION*/T0* r517twin(T517* C);
/*CREATE_EXPRESSION*/T0* r517written_declaration_type_mark(void);
/*CREATE_EXPRESSION*/T0* r517creation_procedure(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r517use_current(T517* C,T0* a1);
/*CREATE_EXPRESSION*/void r517bracketed_pretty(T517* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r517non_void_no_dispatch_type(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r517side_effect_free(T0* a1);
/*CREATE_EXPRESSION*/T0* r517arguments(T517* C);
/*CREATE_EXPRESSION*/T0* r517resolve_in(T517* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r517to_instruction(T517* C);
/*CREATE_EXPRESSION*/T0* r517current_or_twin_init(T517* C,T0* a1,T0* a2);
/*ARGUMENT_NAME1*/void r453make(T453* C,T338 a1,T0* a2);
/*ARGUMENT_NAME1*/T0* r453specialize_in(T453* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r453specialize_thru(T453* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME1*/T0* r453adapt_for(T453* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r453collect(T453* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r453twin(T453* C);
/*ARGUMENT_NAME1*/T0* r453resolve_in(T453* C,T0* a1);
/*ARGUMENT_NAME1*/void r453name_clash_check_(T453* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/void r454make(T454* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/T0* r454specialize_in(T454* C,T0* a1);
/*DECLARATION_GROUP*/void r454append_in_local_var_list(T454* C,T0* a1);
/*DECLARATION_GROUP*/T0* r454specialize_thru(T454* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_GROUP*/void r454append_in_formal_arg_list(T454* C,T0* a1);
/*DECLARATION_GROUP*/T0* r454twin(T454* C);
/*DECLARATION_GROUP*/void r454pretty_in(T454* C,T0* a1);
/*DECLARATION_GROUP*/T2 r454count(T454* C);
/*DECLARATION_1*/void r391make(T391* C,T0* a1,T0* a2);
/*DECLARATION_1*/T0* r391specialize_in(T391* C,T0* a1);
/*DECLARATION_1*/void r391append_in_local_var_list(T391* C,T0* a1);
/*DECLARATION_1*/T0* r391specialize_thru(T391* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_1*/void r391append_in_formal_arg_list(T391* C,T0* a1);
/*DECLARATION_1*/T0* r391twin(T391* C);
/*DECLARATION_1*/void r391pretty_in(T391* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r664specialize_and_check(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r664to_expression(T664* C);
/*REQUIRE_ASSERTION*/void r664make(T664* C,T338 a1,T6 a2,T0* a3,T0* a4);
/*REQUIRE_ASSERTION*/void r664pretty(T664* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r664simplify(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r664specialize_in(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/void r664inline_dynamic_dispatch_(T664* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r664add_parent_require(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T6 r664is_always_true(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/void r664safety_check(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/void r664from_parents(T664* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/T6 r664has_item_located_at(T664* C,T338 a1);
/*REQUIRE_ASSERTION*/T0* r664specialize_thru(T664* C,T0* a1,T0* a2,T0* a3);
/*REQUIRE_ASSERTION*/void r664accept(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r664adapt_for(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r664item(T664* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r664collect(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T338 r664start_position(T664* C);
/*REQUIRE_ASSERTION*/T0* r664twin(T664* C);
/*REQUIRE_ASSERTION*/T6 r664use_current(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/void r664crash(T664* C);
/*REQUIRE_ASSERTION*/T6 r664side_effect_free(T664* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r664inline_dynamic_dispatch(T664* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r664not_yet_implemented(T664* C);
/*REQUIRE_ASSERTION*/T2 r664count(T664* C);
/*REQUIRE_ASSERTION*/T0* r664to_instruction(T664* C);
/*ASSERTION*/T0* r418specialize_and_check(T418* C,T0* a1);
/*ASSERTION*/T0* r418to_expression(T418* C);
/*ASSERTION*/void r418make(T418* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/void r418pretty(T418* C,T2 a1);
/*ASSERTION*/T0* r418static_simplify(T418* C);
/*ASSERTION*/T0* r418specialize_in(T418* C,T0* a1);
/*ASSERTION*/void r418inline_dynamic_dispatch_(T418* C,T0* a1,T0* a2);
/*ASSERTION*/T6 r418is_always_true(T418* C,T0* a1);
/*ASSERTION*/void r418safety_check(T418* C,T0* a1);
/*ASSERTION*/T0* r418specialize_thru(T418* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/T6 r418is_static(T418* C);
/*ASSERTION*/void r418specialize_check(T418* C,T0* a1);
/*ASSERTION*/T6 r418is_stored_in_some_local_variable(void);
/*ASSERTION*/void r418accept(T418* C,T0* a1);
/*ASSERTION*/T0* r418adapt_for(T418* C,T0* a1);
/*ASSERTION*/T0* r418collect(T418* C,T0* a1);
/*ASSERTION*/T338 r418start_position(T418* C);
/*ASSERTION*/T0* r418twin(T418* C);
/*ASSERTION*/T0* r418written_declaration_type_mark(void);
/*ASSERTION*/T6 r418use_current(T418* C,T0* a1);
/*ASSERTION*/T0* r418non_void_no_dispatch_type(T0* a1);
/*ASSERTION*/T6 r418side_effect_free(T418* C,T0* a1);
/*ASSERTION*/T0* r418resolve_in(T0* a1);
/*ASSERTION*/T0* r418to_instruction(T418* C);
/*ASSERTION*/T0* r418current_or_twin_init(T418* C,T0* a1);
/*LOCAL_NAME1*/void r388make(T388* C,T338 a1,T0* a2);
/*LOCAL_NAME1*/T0* r388specialize_in(T388* C,T0* a1);
/*LOCAL_NAME1*/void r388parsing_reference_counter_increment(T388* C);
/*LOCAL_NAME1*/void r388live_reference_counter_increment(T388* C);
/*LOCAL_NAME1*/T6 r388is_used(T388* C,T0* a1);
/*LOCAL_NAME1*/T0* r388specialize_thru(T388* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME1*/T0* r388adapt_for(T388* C,T0* a1);
/*LOCAL_NAME1*/T0* r388collect(T388* C,T0* a1);
/*LOCAL_NAME1*/T0* r388twin(T388* C);
/*LOCAL_NAME1*/void r388usage_warning_check(T388* C,T0* a1);
/*LOCAL_NAME1*/void r388name_clash_check_(T388* C,T0* a1,T0* a2);
/*LOCAL_VAR_LIST*/void r392make(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/void r392pretty(T392* C);
/*LOCAL_VAR_LIST*/T0* r392specialize_in(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r392rank_of(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/void r392add_last(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r392specialize_thru(T392* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_VAR_LIST*/void r392accept(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r392adapt_for(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/void r392name_clash_check(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r392compute_flat_list_count_by_using_list(T392* C);
/*LOCAL_VAR_LIST*/void r392collect(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r392twin(T392* C);
/*LOCAL_VAR_LIST*/T0* r392type_mark(T392* C,T2 a1);
/*LOCAL_VAR_LIST*/T6 r392side_effect_free(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r392count(T392* C);
/*FEATURE_NAME_LIST*/void r448fe_multiple(T0* a1,T0* a2);
/*FEATURE_NAME_LIST*/void r448all_positions_in_error_handler(T448* C);
/*FEATURE_NAME_LIST*/T0* r448internal_name(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/void r448add_last(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r448item(T448* C,T2 a1);
/*FEATURE_NAME_LIST*/void r448make_n(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r448index_of(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r448root_creation_search(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T6 r448has_make(T448* C);
/*FEATURE_NAME_LIST*/void r448make_1(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r448count(T448* C);
/*FEATURE_NAME_LIST*/T6 r448has(T448* C,T0* a1);
/*CHECK_COMPOUND*/T0* r518specialize_and_check(T518* C,T0* a1);
/*CHECK_COMPOUND*/T0* r518to_expression(T518* C);
/*CHECK_COMPOUND*/void r518make(T518* C,T338 a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/void r518pretty(T518* C,T2 a1);
/*CHECK_COMPOUND*/T0* r518simplify(T518* C,T0* a1);
/*CHECK_COMPOUND*/T0* r518specialize_in(T518* C,T0* a1);
/*CHECK_COMPOUND*/void r518inline_dynamic_dispatch_(T518* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/void r518safety_check(T518* C,T0* a1);
/*CHECK_COMPOUND*/T0* r518specialize_thru(T518* C,T0* a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/T6 r518must_be_generated(T518* C,T0* a1);
/*CHECK_COMPOUND*/void r518accept(T518* C,T0* a1);
/*CHECK_COMPOUND*/T0* r518adapt_for(T518* C,T0* a1);
/*CHECK_COMPOUND*/T0* r518collect(T518* C,T0* a1);
/*CHECK_COMPOUND*/T338 r518start_position(T518* C);
/*CHECK_COMPOUND*/T0* r518twin(T518* C);
/*CHECK_COMPOUND*/T6 r518use_current(T518* C,T0* a1);
/*CHECK_COMPOUND*/T6 r518side_effect_free(T0* a1);
/*CHECK_COMPOUND*/T0* r518inline_dynamic_dispatch(T518* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/T0* r518to_instruction(T518* C);
/*CHECK_COMPOUND*/T0* r518current_or_twin_init(T518* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477specialize_and_check(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477to_expression(T477* C);
/*DEBUG_COMPOUND*/void r477make(T477* C,T338 a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/void r477pretty(T477* C,T2 a1);
/*DEBUG_COMPOUND*/T0* r477simplify(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477specialize_in(T477* C,T0* a1);
/*DEBUG_COMPOUND*/void r477inline_dynamic_dispatch_(T477* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/void r477safety_check(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477specialize_thru(T477* C,T0* a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/T6 r477must_be_generated(T477* C,T0* a1);
/*DEBUG_COMPOUND*/void r477accept(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477adapt_for(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477collect(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477twin(T477* C);
/*DEBUG_COMPOUND*/T6 r477use_current(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T6 r477side_effect_free(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477inline_dynamic_dispatch(T477* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/T6 r477match_debug_key(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477to_instruction(T477* C);
/*DEBUG_COMPOUND*/T0* r477current_or_twin_init(T477* C,T0* a1);
/*IFTHEN*/T412*create412make(T338 a1,T0* a2,T0* a3);
/*IFTHEN*/T0* r412specialize_and_check(T412* C,T0* a1);
/*IFTHEN*/T0* r412to_expression(T412* C);
/*IFTHEN*/void r412make(T412* C,T338 a1,T0* a2,T0* a3);
/*IFTHEN*/void r412pretty(T412* C,T2 a1);
/*IFTHEN*/T0* r412simplify(T412* C,T0* a1);
/*IFTHEN*/void r412specialize_check_(T412* C,T0* a1);
/*IFTHEN*/void r412pretty_end_if(T2 a1);
/*IFTHEN*/T0* r412specialize_in(T412* C,T0* a1);
/*IFTHEN*/void r412inline_dynamic_dispatch_(T412* C,T0* a1,T0* a2);
/*IFTHEN*/void r412safety_check(T412* C,T0* a1);
/*IFTHEN*/void r412init(T412* C,T0* a1,T0* a2);
/*IFTHEN*/void r412pretty_(T412* C,T2 a1,T0* a2);
/*IFTHEN*/T0* r412specialize_thru(T412* C,T0* a1,T0* a2,T0* a3);
/*IFTHEN*/void r412accept(T412* C,T0* a1);
/*IFTHEN*/T0* r412adapt_for(T412* C,T0* a1);
/*IFTHEN*/T0* r412collect(T412* C,T0* a1);
/*IFTHEN*/T0* r412twin(T412* C);
/*IFTHEN*/T6 r412use_current(T412* C,T0* a1);
/*IFTHEN*/T6 r412side_effect_free(T0* a1);
/*IFTHEN*/T0* r412inline_dynamic_dispatch(T412* C,T0* a1,T0* a2);
/*IFTHEN*/T0* r412to_instruction(T412* C);
/*IFTHEN*/T0* r412current_or_twin_init(T412* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r398specialize_and_check(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398to_expression(T398* C);
/*IFTHENELSE*/void r398pretty(T398* C,T2 a1);
/*IFTHENELSE*/T0* r398simplify(T398* C,T0* a1);
/*IFTHENELSE*/void r398inline_dd(T398* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*IFTHENELSE*/void r398specialize_check_(T398* C,T0* a1);
/*IFTHENELSE*/void r398pretty_end_if(T2 a1);
/*IFTHENELSE*/T0* r398specialize_in(T398* C,T0* a1);
/*IFTHENELSE*/void r398inline_dynamic_dispatch_(T398* C,T0* a1,T0* a2);
/*IFTHENELSE*/void r398safety_check(T398* C,T0* a1);
/*IFTHENELSE*/void r398init(T398* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r398pretty_(T398* C,T2 a1,T0* a2);
/*IFTHENELSE*/T0* r398specialize_thru(T398* C,T0* a1,T0* a2,T0* a3);
/*IFTHENELSE*/T0* r398simplify_elseif_list(T0* a1,T6 a2,T0* a3);
/*IFTHENELSE*/void r398specialize_check(T398* C,T0* a1);
/*IFTHENELSE*/void r398accept(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398adapt_for(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398collect(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398twin(T398* C);
/*IFTHENELSE*/T6 r398use_current(T398* C,T0* a1);
/*IFTHENELSE*/T6 r398side_effect_free(T0* a1);
/*IFTHENELSE*/void r398with_else(T398* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r398with_elseif(T398* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/T0* r398inline_dynamic_dispatch(T398* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r398to_instruction(T398* C);
/*IFTHENELSE*/void r398with_elseif_and_else(T398* C,T338 a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*IFTHENELSE*/T0* r398current_or_twin_init(T398* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WHEN_CLAUSE*/T0* r357adapt_for(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357not_yet_implemented(T357* C);
/*WHEN_CLAUSE*/T0* r357collect(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_in(T357* C,T0* a1);
/*WHEN_CLAUSE*/T6 r357validity_check_continued(T357* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r357make_dynamic_dispatch(T357* C,T0* a1,T338 a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357simplify(T357* C,T0* a1);
/*WHEN_CLAUSE*/T6 r357match_value(T357* C,T2 a1);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_integer(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357safety_check(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357force_internal_character_values(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357to_expression(T357* C);
/*WHEN_CLAUSE*/void r357add_value(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_thru(T357* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357specialize_and_check(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_when_items_integer(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r357inline_dynamic_dispatch_(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T0* r357to_instruction(T357* C);
/*WHEN_CLAUSE*/void r357make(T357* C,T0* a1,T338 a2,T0* a3);
/*WHEN_CLAUSE*/void r357make_strippable(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r357is_live(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357no_manifest_string_slice_check(T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_character(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357crash(T357* C);
/*WHEN_CLAUSE*/T6 r357is_more_complex_than(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357force_internal_integer_values(T357* C,T0* a1);
/*WHEN_CLAUSE*/T2 r357parser_add_value(T357* C,T2 a1,T0* a2);
/*WHEN_CLAUSE*/T6 r357use_current(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357init(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r357validity_check(T357* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_string(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357parser_make(T357* C,T338 a1,T0* a2);
/*WHEN_CLAUSE*/void r357pretty(T357* C,T2 a1);
/*WHEN_CLAUSE*/T0* r357strip_or_set_value(T357* C,T2 a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357inline_dynamic_dispatch(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r357side_effect_free(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357twin(T357* C);
/*WHEN_CLAUSE*/void r357compute_values(T357* C,T0* a1);
/*WHEN_CLAUSE*/T2 r357largest_range_of_values(T357* C);
/*WHEN_CLAUSE*/void r357add_slice(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r357accept(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357create_merged_with(T357* C,T0* a1);
/*IMPLICIT_CURRENT*/T369*create369make(T338 a1);
/*IMPLICIT_CURRENT*/T0* r369to_expression(T369* C);
/*IMPLICIT_CURRENT*/void r369make(T369* C,T338 a1);
/*IMPLICIT_CURRENT*/void r369pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r369simplify(T369* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r369static_simplify(T369* C);
/*IMPLICIT_CURRENT*/T0* r369specialize_in(T369* C,T0* a1);
/*IMPLICIT_CURRENT*/void r369inline_dynamic_dispatch_(T369* C,T0* a1,T0* a2);
/*IMPLICIT_CURRENT*/T6 r369is_stored_in_some_local_variable(void);
/*IMPLICIT_CURRENT*/void r369accept(T369* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r369collect(T0* a1);
/*IMPLICIT_CURRENT*/T0* r369twin(T369* C);
/*IMPLICIT_CURRENT*/T0* r369written_declaration_type_mark(void);
/*IMPLICIT_CURRENT*/T6 r369use_current(T0* a1);
/*IMPLICIT_CURRENT*/void r369bracketed_pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r369non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CURRENT*/T6 r369side_effect_free(T0* a1);
/*IMPLICIT_CURRENT*/T0* r369resolve_in(T0* a1);
/*IMPLICIT_CURRENT*/T0* r369to_instruction(T369* C);
/*OTHER_INSPECT_STATEMENT*/T0* r362specialize_and_check(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362make_strippable(T362* C,T338 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r362to_expression(T362* C);
/*OTHER_INSPECT_STATEMENT*/void r362make(T362* C,T338 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r362with_when_list(T362* C,T338 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r362pretty(T362* C,T2 a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362simplify(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362force_internal_values(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362validity_check(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r362specialize_in(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362inline_dynamic_dispatch_(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T6 r362same_compound(T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r362safety_check(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362init(T362* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r362count_call(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r362set_else_compound(T362* C,T338 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r362specialize_thru(T362* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC363code_comparator;
/*OTHER_INSPECT_STATEMENT*/T0* r362count_name(void);
/*OTHER_INSPECT_STATEMENT*/void r362accept(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362validity_check_continued(T362* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r362add_when(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362adapt_for(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T2 r362largest_range_of_values(T362* C);
/*OTHER_INSPECT_STATEMENT*/T6 r362use_c_switch_statement(T362* C);
/*OTHER_INSPECT_STATEMENT*/T0* r362collect(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362item_call(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r362twin(T362* C);
/*OTHER_INSPECT_STATEMENT*/T6 r362use_current(T362* C,T0* a1);
extern T0*oBC32item_name;
extern int fBC32item_name;
/*OTHER_INSPECT_STATEMENT*/T0* r362item_name(void);
/*OTHER_INSPECT_STATEMENT*/T6 r362side_effect_free(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362inline_dynamic_dispatch(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r362compute_values(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362to_instruction(T362* C);
/*OTHER_INSPECT_STATEMENT*/T0* r362current_or_twin_init(T362* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479specialize_and_check(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479to_expression(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479with_when_list(T479* C,T338 a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479pretty(T479* C,T2 a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479simplify(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479validity_check(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479specialize_in(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479inline_dynamic_dispatch_(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479same_compound(T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479safety_check(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479init(T479* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479count_call(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479set_else_compound(T479* C,T338 a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479specialize_thru(T479* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479count_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479accept(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479validity_check_continued(T479* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479add_when(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479adapt_for(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T2 r479largest_range_of_values(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479use_c_switch_statement(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479collect(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479item_call(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479twin(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479use_current(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479item_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479side_effect_free(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479inline_dynamic_dispatch(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479compute_values(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479to_instruction(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479current_or_twin_init(T479* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/T0* r426specialize_and_check(T426* C,T0* a1);
/*ASSERTION_LIST*/T0* r426to_expression(T426* C);
/*ASSERTION_LIST*/void r426make(T426* C,T338 a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r426pretty(T426* C,T2 a1);
/*ASSERTION_LIST*/T0* r426simplify(T426* C,T0* a1);
/*ASSERTION_LIST*/T0* r426specialize_in(T426* C,T0* a1);
/*ASSERTION_LIST*/void r426inline_dynamic_dispatch_(T426* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/T6 r426is_always_true(T426* C,T0* a1);
/*ASSERTION_LIST*/void r426safety_check(T426* C,T0* a1);
/*ASSERTION_LIST*/void r426set_list(T426* C,T0* a1);
/*ASSERTION_LIST*/T0* r426specialize_thru(T426* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r426pretty_as_loop_invariant(T426* C,T2 a1);
/*ASSERTION_LIST*/T2 r426upper(T426* C);
/*ASSERTION_LIST*/void r426accept(T426* C,T0* a1);
/*ASSERTION_LIST*/void r426set_eiffel_parser_stamp(T426* C,T2 a1);
/*ASSERTION_LIST*/T0* r426adapt_for(T426* C,T0* a1);
/*ASSERTION_LIST*/T0* r426item(T426* C,T2 a1);
/*ASSERTION_LIST*/T0* r426collect(T426* C,T0* a1);
/*ASSERTION_LIST*/void r426pretty_print_with_tag(T426* C,T2 a1,T0* a2);
/*ASSERTION_LIST*/T6 r426is_empty(T426* C);
/*ASSERTION_LIST*/T0* r426twin(T426* C);
/*ASSERTION_LIST*/void r426pretty_as_check_compound(T426* C,T2 a1);
/*ASSERTION_LIST*/T6 r426use_current(T426* C,T0* a1);
/*ASSERTION_LIST*/void r426crash(T426* C);
/*ASSERTION_LIST*/void r426breakpoint(T426* C);
/*ASSERTION_LIST*/T6 r426side_effect_free(T426* C,T0* a1);
/*ASSERTION_LIST*/T0* r426inline_dynamic_dispatch(T426* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/void r426not_yet_implemented(T426* C);
/*ASSERTION_LIST*/void r426do_all(T426* C,T0* a1);
/*ASSERTION_LIST*/T0* r426to_instruction(T426* C);
/*ASSERTION_LIST*/T2 r426lower(T426* C);
/*ASSERTION_LIST*/T0* r426specialize_without_checks(T426* C,T0* a1);
/*LOOP_VARIANT*/T0* r465specialize_and_check(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465to_expression(T465* C);
/*LOOP_VARIANT*/void r465make(T465* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*LOOP_VARIANT*/void r465pretty(T465* C,T2 a1);
/*LOOP_VARIANT*/T0* r465simplify(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465static_simplify(T465* C);
/*LOOP_VARIANT*/T0* r465specialize_in(T465* C,T0* a1);
/*LOOP_VARIANT*/void r465inline_dynamic_dispatch_(T465* C,T0* a1,T0* a2);
/*LOOP_VARIANT*/void r465safety_check(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465specialize_thru(T465* C,T0* a1,T0* a2,T0* a3);
/*LOOP_VARIANT*/void r465specialize_check(T465* C,T0* a1);
/*LOOP_VARIANT*/T6 r465is_stored_in_some_local_variable(void);
/*LOOP_VARIANT*/void r465accept(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465declaration_type(T465* C);
/*LOOP_VARIANT*/T0* r465collect(T465* C,T0* a1);
/*LOOP_VARIANT*/T338 r465start_position(T465* C);
/*LOOP_VARIANT*/T0* r465twin(T465* C);
/*LOOP_VARIANT*/T0* r465written_declaration_type_mark(void);
/*LOOP_VARIANT*/T6 r465use_current(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465non_void_no_dispatch_type(T0* a1);
/*LOOP_VARIANT*/T6 r465side_effect_free(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465resolve_in(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465to_instruction(T465* C);
/*LOOP_INSTRUCTION*/T0* r466specialize_and_check(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466to_expression(T466* C);
/*LOOP_INSTRUCTION*/void r466make(T466* C,T338 a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*LOOP_INSTRUCTION*/void r466pretty(T466* C,T2 a1);
/*LOOP_INSTRUCTION*/T0* r466simplify(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466specialize_in(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/void r466inline_dynamic_dispatch_(T466* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/void r466safety_check(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466specialize_thru(T466* C,T0* a1,T0* a2,T0* a3);
/*LOOP_INSTRUCTION*/void r466specialize_check(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/void r466accept(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466adapt_for(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466collect(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r466use_current(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r466side_effect_free(T0* a1);
/*LOOP_INSTRUCTION*/T0* r466inline_dynamic_dispatch(T466* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/T0* r466to_instruction(T466* C);
/*LOOP_INSTRUCTION*/T6 r466loop_check(T0* a1);
/*RESULT*/T0* r364to_expression(T364* C);
/*RESULT*/void r364make(T364* C,T338 a1);
/*RESULT*/void r364pretty(T2 a1);
/*RESULT*/T0* r364simplify(T364* C,T0* a1);
/*RESULT*/void r364validity_check(T364* C,T0* a1);
/*RESULT*/T0* r364static_simplify(T364* C);
/*RESULT*/T0* r364specialize_in(T364* C,T0* a1);
/*RESULT*/void r364inline_dynamic_dispatch_(T364* C,T0* a1,T0* a2);
/*RESULT*/void r364set_enclosing_function(T364* C,T0* a1);
/*RESULT*/T0* r364specialize_thru(T364* C,T0* a1,T0* a2,T0* a3);
/*RESULT*/void r364set_type_mark_memory(T364* C,T0* a1);
/*RESULT*/T6 r364is_stored_in_some_local_variable(void);
/*RESULT*/void r364accept(T364* C,T0* a1);
/*RESULT*/T0* r364adapt_for(T364* C,T0* a1);
/*RESULT*/T0* r364feature_accumulator(void);
/*RESULT*/T0* r364collect(T0* a1);
/*RESULT*/void r364pretty_target(T2 a1);
/*RESULT*/T0* r364twin(T364* C);
/*RESULT*/T6 r364use_current(T0* a1);
/*RESULT*/void r364bracketed_pretty(T2 a1);
/*RESULT*/T0* r364non_void_no_dispatch_type(T364* C,T0* a1);
/*RESULT*/T6 r364side_effect_free(T0* a1);
/*RESULT*/T0* r364resolve_in(T364* C,T0* a1);
/*RESULT*/T0* r364to_instruction(T364* C);
/*RESULT*/T0* r364current_or_twin_init(T364* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404specialize_and_check(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404to_expression(T404* C);
/*CREATE_INSTRUCTION*/void r404make(T404* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r404created_type(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404typed_internals(T404* C,T338 a1,T0* a2);
/*CREATE_INSTRUCTION*/void r404pretty(T404* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r404simplify(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404specialize_in(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404inline_dynamic_dispatch_(T404* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r404safety_check(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404set_call(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404init(T404* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/void r404specialize_checks(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404specialize_thru(T404* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/void r404accept(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404set_eiffel_parser_stamp(T404* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r404adapt_for(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404default_create_name(void);
/*CREATE_INSTRUCTION*/T0* r404collect(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404any_default_create_fs(void);
/*CREATE_INSTRUCTION*/T0* r404twin(T404* C);
/*CREATE_INSTRUCTION*/T0* r404creation_procedure(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r404use_current(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r404side_effect_free(T0* a1);
/*CREATE_INSTRUCTION*/T0* r404arguments(T404* C);
/*CREATE_INSTRUCTION*/T0* r404inline_dynamic_dispatch(T404* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r404make_specialized(T404* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r404to_instruction(T404* C);
/*CREATE_INSTRUCTION*/T0* r404specialize_without_checks(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404current_or_twin_init(T404* C,T0* a1,T0* a2,T0* a3);
/*C_INLINE*/T0* r463specialize_and_check(T463* C,T0* a1);
/*C_INLINE*/T0* r463to_expression(T463* C);
/*C_INLINE*/void r463pretty(T463* C,T2 a1);
/*C_INLINE*/T0* r463simplify(T463* C,T0* a1);
/*C_INLINE*/void r463inline_dynamic_dispatch_(T463* C,T0* a1,T0* a2);
/*C_INLINE*/void r463accept(T463* C,T0* a1);
/*C_INLINE*/void r463make_c_inline_h(T463* C,T338 a1,T0* a2);
/*C_INLINE*/void r463make_c_inline_c(T463* C,T338 a1,T0* a2);
/*C_INLINE*/T6 r463use_current(T463* C,T0* a1);
/*C_INLINE*/T6 r463side_effect_free(T0* a1);
/*C_INLINE*/T0* r463inline_dynamic_dispatch(T463* C,T0* a1,T0* a2);
/*C_INLINE*/T0* r463to_instruction(T463* C);
/*PRECURSOR_INSTRUCTION*/T0* r494specialize_and_check(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494to_expression(T494* C);
/*PRECURSOR_INSTRUCTION*/void r494make(T494* C,T338 a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r494pretty(T494* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r494simplify(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494specialize_in(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r494inline_dynamic_dispatch_(T494* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r494safety_check(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r494init(T494* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r494pretty_(T494* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r494specialize_thru(T494* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r494accept(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494adapt_for(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494feature_accumulator(void);
/*PRECURSOR_INSTRUCTION*/T0* r494collect(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494twin(T494* C);
/*PRECURSOR_INSTRUCTION*/T6 r494use_current(T0* a1);
/*PRECURSOR_INSTRUCTION*/T6 r494side_effect_free(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494inline_dynamic_dispatch(T494* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/T0* r494to_instruction(T494* C);
/*PRECURSOR_INSTRUCTION*/T0* r494current_or_twin_init(T494* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T484*create484make(T338 a1);
/*WRITTEN_CURRENT*/T0* r484to_expression(T484* C);
/*WRITTEN_CURRENT*/void r484make(T484* C,T338 a1);
/*WRITTEN_CURRENT*/void r484pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r484simplify(T484* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r484static_simplify(T484* C);
/*WRITTEN_CURRENT*/T0* r484specialize_in(T484* C,T0* a1);
/*WRITTEN_CURRENT*/void r484inline_dynamic_dispatch_(T484* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T6 r484is_stored_in_some_local_variable(void);
/*WRITTEN_CURRENT*/void r484accept(T484* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r484collect(T0* a1);
/*WRITTEN_CURRENT*/void r484pretty_target(T2 a1);
/*WRITTEN_CURRENT*/T0* r484twin(T484* C);
/*WRITTEN_CURRENT*/T0* r484written_declaration_type_mark(void);
/*WRITTEN_CURRENT*/T6 r484use_current(T0* a1);
/*WRITTEN_CURRENT*/void r484bracketed_pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r484non_void_no_dispatch_type(T0* a1);
/*WRITTEN_CURRENT*/T6 r484side_effect_free(T0* a1);
/*WRITTEN_CURRENT*/T0* r484resolve_in(T0* a1);
/*WRITTEN_CURRENT*/T0* r484to_instruction(T484* C);
/*ASSIGNMENT*/T367*create367inline_make(T0* a1,T0* a2);
/*ASSIGNMENT*/T367*create367make(T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r367specialize_and_check(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367to_expression(T367* C);
/*ASSIGNMENT*/void r367make(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r367fatal_error_for(T367* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ASSIGNMENT*/void r367pretty(T367* C,T2 a1);
/*ASSIGNMENT*/T0* r367simplify(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367specialize_in(T367* C,T0* a1);
/*ASSIGNMENT*/void r367inline_dynamic_dispatch_(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r367safety_check(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367specialize_thru(T367* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT*/T6 r367reset_default_value_in_local_or_result(T367* C,T0* a1);
/*ASSIGNMENT*/void r367inline_make(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r367accept(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367adapt_for(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367collect(T367* C,T0* a1);
/*ASSIGNMENT*/T338 r367start_position(T367* C);
/*ASSIGNMENT*/T6 r367use_current(T367* C,T0* a1);
/*ASSIGNMENT*/T6 r367side_effect_free(T0* a1);
/*ASSIGNMENT*/T0* r367inline_dynamic_dispatch(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r367to_instruction(T367* C);
/*ASSIGNMENT_ATTEMPT*/T394*create394make(T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/T0* r394specialize_and_check(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394to_expression(T394* C);
/*ASSIGNMENT_ATTEMPT*/void r394make(T394* C,T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/void r394pretty(T394* C,T2 a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394simplify(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394specialize_in(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/void r394inline_dynamic_dispatch_(T394* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/void r394safety_check(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394specialize_thru(T394* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_ATTEMPT*/void r394accept(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394adapt_for(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394collect(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T338 r394start_position(T394* C);
/*ASSIGNMENT_ATTEMPT*/T6 r394use_current(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T6 r394side_effect_free(T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394inline_dynamic_dispatch(T394* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/T0* r394to_instruction(T394* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464specialize_and_check(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464to_expression(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464make(T464* C,T0* a1,T0* a2);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464pretty(T464* C,T2 a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464echo(void);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464specialize_in(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464specialize_thru(T464* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464accept(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T338 r464start_position(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T6 r464use_current(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464crash(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T6 r464side_effect_free(T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464inline_dynamic_dispatch(T0* a1,T0* a2);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464not_yet_implemented(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464to_instruction(T464* C);
/*RETRY_INSTRUCTION*/T0* r459to_expression(T459* C);
/*RETRY_INSTRUCTION*/void r459make(T459* C,T338 a1);
/*RETRY_INSTRUCTION*/void r459pretty(T2 a1);
/*RETRY_INSTRUCTION*/T0* r459simplify(T459* C,T0* a1);
/*RETRY_INSTRUCTION*/void r459inline_dynamic_dispatch_(T459* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/void r459accept(T459* C,T0* a1);
/*RETRY_INSTRUCTION*/T6 r459use_current(T0* a1);
/*RETRY_INSTRUCTION*/T6 r459side_effect_free(T0* a1);
/*RETRY_INSTRUCTION*/T0* r459inline_dynamic_dispatch(T459* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/T0* r459to_instruction(T459* C);
/*COMPOUND*/T395*create395make_2(T0* a1,T0* a2);
/*COMPOUND*/void r395simplify_add(T0* a1,T0* a2);
/*COMPOUND*/T0* r395specialize_and_check(T395* C,T0* a1);
/*COMPOUND*/T0* r395to_expression(T395* C);
/*COMPOUND*/T0* r395first(T395* C);
/*COMPOUND*/void r395pretty(T395* C,T2 a1);
/*COMPOUND*/T0* r395simplify(T395* C,T0* a1);
/*COMPOUND*/T0* r395twin_remove_first(T395* C);
/*COMPOUND*/T0* r395specialize_in(T395* C,T0* a1);
/*COMPOUND*/void r395inline_dynamic_dispatch_(T395* C,T0* a1,T0* a2);
/*COMPOUND*/void r395safety_check(T395* C,T0* a1);
/*COMPOUND*/void r395set_list(T395* C,T0* a1);
/*COMPOUND*/T0* r395specialize_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r395upper(T395* C);
/*COMPOUND*/void r395accept(T395* C,T0* a1);
/*COMPOUND*/T0* r395adapt_for(T395* C,T0* a1);
/*COMPOUND*/void r395from_list(T395* C,T0* a1);
/*COMPOUND*/void r395make_n(T395* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*COMPOUND*/T0* r395collect(T395* C,T0* a1);
/*COMPOUND*/T6 r395is_a_comment(T0* a1);
/*COMPOUND*/T338 r395start_position(T395* C);
/*COMPOUND*/T0* r395twin(T395* C);
/*COMPOUND*/T6 r395use_current(T395* C,T0* a1);
/*COMPOUND*/T6 r395side_effect_free(T395* C,T0* a1);
/*COMPOUND*/T0* r395inline_dynamic_dispatch(T395* C,T0* a1,T0* a2);
/*COMPOUND*/void r395make_2(T395* C,T0* a1,T0* a2);
/*COMPOUND*/void r395make_3(T395* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r395count(T395* C);
/*COMPOUND*/void r395make_4(T395* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*COMPOUND*/T0* r395to_instruction(T395* C);
/*ENSURE_ASSERTION*/T659*create659make(T338 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T0* r659specialize_and_check(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659to_expression(T659* C);
/*ENSURE_ASSERTION*/void r659make(T659* C,T338 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T6 r659has_assertion_located_at(T659* C,T338 a1);
/*ENSURE_ASSERTION*/void r659pretty(T659* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r659simplify(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659specialize_in(T659* C,T0* a1);
/*ENSURE_ASSERTION*/void r659inline_dynamic_dispatch_(T659* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r659is_always_true(T659* C,T0* a1);
/*ENSURE_ASSERTION*/void r659safety_check(T659* C,T0* a1);
/*ENSURE_ASSERTION*/void r659set_list(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659specialize_thru(T659* C,T0* a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r659pretty_as_loop_invariant(T659* C,T2 a1);
/*ENSURE_ASSERTION*/void r659assertion_list_make(T659* C,T338 a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/T2 r659upper(T659* C);
/*ENSURE_ASSERTION*/void r659accept(T659* C,T0* a1);
/*ENSURE_ASSERTION*/void r659set_eiffel_parser_stamp(T659* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r659adapt_for(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659item(T659* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r659add_items_from(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659collect(T659* C,T0* a1);
/*ENSURE_ASSERTION*/void r659pretty_print_with_tag(T659* C,T2 a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r659is_empty(T659* C);
/*ENSURE_ASSERTION*/T0* r659twin(T659* C);
/*ENSURE_ASSERTION*/void r659pretty_as_check_compound(T659* C,T2 a1);
/*ENSURE_ASSERTION*/T6 r659use_current(T659* C,T0* a1);
/*ENSURE_ASSERTION*/void r659breakpoint(T659* C);
/*ENSURE_ASSERTION*/void r659crash(T659* C);
/*ENSURE_ASSERTION*/T6 r659side_effect_free(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659inline_dynamic_dispatch(T659* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/void r659not_yet_implemented(T659* C);
/*ENSURE_ASSERTION*/T2 r659count(T659* C);
/*ENSURE_ASSERTION*/void r659do_all(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659specialize_without_checks(T659* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r659to_instruction(T659* C);
/*ENSURE_ASSERTION*/T2 r659lower(T659* C);
/*AGENT_CREATION*/T0* r483specialize_and_check(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483to_expression(T483* C);
/*AGENT_CREATION*/void r483make(T483* C,T338 a1,T0* a2,T0* a3);
/*AGENT_CREATION*/void r483pretty(T483* C,T2 a1);
/*AGENT_CREATION*/T0* r483simplify(T483* C,T0* a1);
/*AGENT_CREATION*/T6 r483same_mold_id_as(T483* C,T0* a1);
extern T0*oBC32is_equal_name;
extern int fBC32is_equal_name;
/*AGENT_CREATION*/T0* r483is_equal_name(void);
/*AGENT_CREATION*/T6 r483is_equal_used_in(T0* a1);
/*AGENT_CREATION*/T0* r483static_simplify(T483* C);
/*AGENT_CREATION*/T0* r483specialize_in(T483* C,T0* a1);
/*AGENT_CREATION*/void r483inline_dynamic_dispatch_(T483* C,T0* a1,T0* a2);
/*AGENT_CREATION*/void r483safety_check(T483* C,T0* a1);
/*AGENT_CREATION*/void r483mold_id_in(T483* C,T0* a1,T0* a2);
/*AGENT_CREATION*/T0* r483specialize_thru(T483* C,T0* a1,T0* a2,T0* a3);
/*AGENT_CREATION*/T6 r483is_stored_in_some_local_variable(void);
/*AGENT_CREATION*/void r483accept(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483adapt_for(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483declaration_type(T483* C);
/*AGENT_CREATION*/T0* r483collect(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483specialize_and_check_function(T483* C,T0* a1);
/*AGENT_CREATION*/void r483pretty_target(T483* C,T2 a1);
extern T0*oBC32any_is_equal_fs;
extern int fBC32any_is_equal_fs;
/*AGENT_CREATION*/T0* r483any_is_equal_fs(void);
/*AGENT_CREATION*/void r483set_inside_agent_launcher_flag(T483* C,T6 a1);
/*AGENT_CREATION*/T0* r483twin(T483* C);
/*AGENT_CREATION*/T0* r483written_declaration_type_mark(void);
/*AGENT_CREATION*/T6 r483use_current(T483* C,T0* a1);
/*AGENT_CREATION*/void r483bracketed_pretty(T483* C,T2 a1);
/*AGENT_CREATION*/T6 r483stored_closed_operand(T483* C,T0* a1,T0* a2);
/*AGENT_CREATION*/void r483omitted_open_arguments_update(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483non_void_no_dispatch_type(T483* C,T0* a1);
/*AGENT_CREATION*/T6 r483side_effect_free(T0* a1);
/*AGENT_CREATION*/T0* r483specialize_and_check_procedure(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483resolve_in(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483to_instruction(T483* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457specialize_and_check(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457to_expression(T457* C);
/*EXPRESSION_WITH_COMMENT*/void r457make(T457* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r457pretty(T457* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457simplify(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457extra_bracket_flag(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457static_simplify(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457specialize_in(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r457inline_dynamic_dispatch_(T457* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r457safety_check(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_result(T457* C);
/*EXPRESSION_WITH_COMMENT*/T2 r457precedence(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457specialize_thru(T457* C,T0* a1,T0* a2,T0* a3);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_static(T457* C);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_stored_in_some_local_variable(void);
/*EXPRESSION_WITH_COMMENT*/void r457accept(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457adapt_for(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457declaration_type(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457collect(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_current(T457* C);
/*EXPRESSION_WITH_COMMENT*/void r457pretty_target(T457* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T338 r457start_position(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457twin(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457written_declaration_type_mark(void);
/*EXPRESSION_WITH_COMMENT*/T6 r457use_current(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r457bracketed_pretty(T457* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_void(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457non_void_no_dispatch_type(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457side_effect_free(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_manifest_string(T457* C);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_implicit_current(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457resolve_in(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457to_instruction(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457current_or_twin_init(T457* C,T0* a1);
/*E_VOID*/T396*create396make(T338 a1);
/*E_VOID*/T0* r396to_expression(T396* C);
/*E_VOID*/void r396make(T396* C,T338 a1);
/*E_VOID*/void r396pretty(T2 a1);
/*E_VOID*/T0* r396static_simplify(T396* C);
/*E_VOID*/void r396inline_dynamic_dispatch_(T396* C,T0* a1,T0* a2);
/*E_VOID*/T6 r396is_stored_in_some_local_variable(void);
/*E_VOID*/void r396accept(T396* C,T0* a1);
/*E_VOID*/T0* r396collect(T396* C,T0* a1);
/*E_VOID*/T0* r396twin(T396* C);
/*E_VOID*/T0* r396written_declaration_type_mark(void);
/*E_VOID*/T6 r396use_current(T0* a1);
/*E_VOID*/void r396bracketed_pretty(T2 a1);
/*E_VOID*/T0* r396non_void_no_dispatch_type(T0* a1);
/*E_VOID*/T6 r396side_effect_free(T0* a1);
/*E_VOID*/T0* r396resolve_in(T396* C,T0* a1);
/*E_VOID*/T0* r396to_instruction(T396* C);
/*E_OLD*/T0* r492specialize_and_check(T492* C,T0* a1);
/*E_OLD*/T0* r492to_expression(T492* C);
/*E_OLD*/void r492make(T492* C,T338 a1,T0* a2);
extern T0*oBC492vaol_check_memory;
/*E_OLD*/void r492pretty(T492* C,T2 a1);
/*E_OLD*/T0* r492simplify(T492* C,T0* a1);
/*E_OLD*/void r492set_tag(T492* C,T0* a1,T0* a2);
/*E_OLD*/T0* r492static_simplify(T492* C);
/*E_OLD*/T0* r492specialize_in(T492* C,T0* a1);
/*E_OLD*/void r492inline_dynamic_dispatch_(T492* C,T0* a1,T0* a2);
/*E_OLD*/void r492safety_check(T492* C,T0* a1);
/*E_OLD*/T0* r492specialize_thru(T492* C,T0* a1,T0* a2,T0* a3);
/*E_OLD*/T6 r492is_stored_in_some_local_variable(void);
/*E_OLD*/void r492accept(T492* C,T0* a1);
/*E_OLD*/T0* r492adapt_for(T492* C,T0* a1);
/*E_OLD*/T0* r492declaration_type(T492* C);
/*E_OLD*/T0* r492collect(T492* C,T0* a1);
/*E_OLD*/void r492pretty_target(T492* C,T2 a1);
/*E_OLD*/T0* r492twin(T492* C);
/*E_OLD*/T0* r492written_declaration_type_mark(void);
/*E_OLD*/T6 r492use_current(T492* C,T0* a1);
/*E_OLD*/void r492bracketed_pretty(T492* C,T2 a1);
/*E_OLD*/void r492crash(T492* C);
/*E_OLD*/T0* r492non_void_no_dispatch_type(T492* C,T0* a1);
/*E_OLD*/T6 r492side_effect_free(T0* a1);
/*E_OLD*/void r492not_yet_implemented(T492* C);
/*E_OLD*/T0* r492tag(T492* C,T0* a1);
/*E_OLD*/T0* r492resolve_in(T492* C,T0* a1);
/*E_OLD*/T0* r492to_instruction(T492* C);
/*E_OLD*/T0* r492current_or_twin_init(T492* C,T0* a1);
/*CALL_INFIX_FREEOP*/T6 r515is_balanced_operator(T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515declaration_type(T515* C);
/*CALL_INFIX_FREEOP*/T0* r515adapt_for(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515resolve_in(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515use_current_stack(void);
/*CALL_INFIX_FREEOP*/T0* r515collect(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515specialize_in(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515written_declaration_type_mark(void);
/*CALL_INFIX_FREEOP*/T0* r515simplify(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r515pretty_target(T515* C,T2 a1);
/*CALL_INFIX_FREEOP*/void r515safety_check(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515to_expression(T515* C);
/*CALL_INFIX_FREEOP*/T0* r515specialize_thru(T515* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r515feature_accumulator(void);
/*CALL_INFIX_FREEOP*/T0* r515specialize_and_check(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r515inline_dynamic_dispatch_(T515* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r515to_instruction(T515* C);
/*CALL_INFIX_FREEOP*/T0* r515current_or_twin_init(T515* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r515standard_check_export_and_obsolete_calls(T515* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r515make(T515* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r515arg1(T515* C);
/*CALL_INFIX_FREEOP*/void r515type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/void r515non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/T6 r515use_current(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515static_simplify(T515* C);
/*CALL_INFIX_FREEOP*/void r515init(T515* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r515extra_local_expanded(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r515function_and_argument_count_check(T515* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/void r515pretty(T515* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r515side_effect_free(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515non_void_no_dispatch_type(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515run_feature_for(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r515inline_with(T515* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r515twin(T515* C);
/*CALL_INFIX_FREEOP*/void r515bracketed_pretty(T515* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r515is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_FREEOP*/void r515accept(T515* C,T0* a1);
/*CALL_INFIX_FREEOP*/T338 r515start_position(T515* C);
/*CALL_INFIX_FREEOP*/T6 r515is_stored_in_some_local_variable(void);
/*CALL_INFIX_FREEOP*/T0* r515_P_350_declaration_type(T515* C);
/*CALL_INFIX_POWER*/T6 r514is_balanced_operator(T0* a1);
/*CALL_INFIX_POWER*/T0* r514declaration_type(T514* C);
/*CALL_INFIX_POWER*/T0* r514adapt_for(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514resolve_in(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514eiffel_parser(void);
/*CALL_INFIX_POWER*/T0* r514use_current_stack(void);
/*CALL_INFIX_POWER*/T0* r514collect(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514specialize_in(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514written_declaration_type_mark(void);
/*CALL_INFIX_POWER*/T0* r514simplify(T514* C,T0* a1);
/*CALL_INFIX_POWER*/void r514pretty_target(T514* C,T2 a1);
/*CALL_INFIX_POWER*/void r514safety_check(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514to_expression(T514* C);
/*CALL_INFIX_POWER*/T0* r514specialize_thru(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r514feature_accumulator(void);
/*CALL_INFIX_POWER*/T0* r514specialize_and_check(T514* C,T0* a1);
/*CALL_INFIX_POWER*/void r514inline_dynamic_dispatch_(T514* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r514to_instruction(T514* C);
/*CALL_INFIX_POWER*/T0* r514current_or_twin_init(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r514standard_check_export_and_obsolete_calls(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r514make(T514* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r514arg1(T514* C);
/*CALL_INFIX_POWER*/void r514type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/void r514non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/T6 r514use_current(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514static_simplify(T514* C);
/*CALL_INFIX_POWER*/void r514init(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r514extra_local_expanded(T514* C,T0* a1);
/*CALL_INFIX_POWER*/void r514function_and_argument_count_check(T514* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/void r514pretty(T514* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r514side_effect_free(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514non_void_no_dispatch_type(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514run_feature_for(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r514inline_with(T514* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r514twin(T514* C);
/*CALL_INFIX_POWER*/void r514bracketed_pretty(T514* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r514is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_POWER*/void r514accept(T514* C,T0* a1);
/*CALL_INFIX_POWER*/T338 r514start_position(T514* C);
/*CALL_INFIX_POWER*/T6 r514is_stored_in_some_local_variable(void);
/*CALL_INFIX_POWER*/T0* r514_P_350_declaration_type(T514* C);
/*CALL_INFIX_TIMES*/T6 r510is_balanced_operator(T0* a1);
/*CALL_INFIX_TIMES*/T0* r510declaration_type(T510* C);
/*CALL_INFIX_TIMES*/T0* r510adapt_for(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510resolve_in(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510eiffel_parser(void);
/*CALL_INFIX_TIMES*/T0* r510use_current_stack(void);
/*CALL_INFIX_TIMES*/T0* r510collect(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510specialize_in(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510written_declaration_type_mark(void);
/*CALL_INFIX_TIMES*/T0* r510simplify(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/void r510pretty_target(T510* C,T2 a1);
/*CALL_INFIX_TIMES*/void r510safety_check(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510to_expression(T510* C);
/*CALL_INFIX_TIMES*/T0* r510specialize_thru(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r510feature_accumulator(void);
/*CALL_INFIX_TIMES*/T0* r510specialize_and_check(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/void r510inline_dynamic_dispatch_(T510* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r510to_instruction(T510* C);
/*CALL_INFIX_TIMES*/T0* r510current_or_twin_init(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r510standard_check_export_and_obsolete_calls(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r510make(T510* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r510arg1(T510* C);
/*CALL_INFIX_TIMES*/void r510type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/void r510non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/T6 r510use_current(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510static_simplify(T510* C);
/*CALL_INFIX_TIMES*/void r510init(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r510extra_local_expanded(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/void r510function_and_argument_count_check(T510* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/void r510pretty(T510* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r510side_effect_free(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510non_void_no_dispatch_type(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510run_feature_for(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r510inline_with(T510* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r510twin(T510* C);
/*CALL_INFIX_TIMES*/void r510bracketed_pretty(T510* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r510is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_TIMES*/void r510accept(T510* C,T0* a1);
/*CALL_INFIX_TIMES*/T338 r510start_position(T510* C);
/*CALL_INFIX_TIMES*/T6 r510is_stored_in_some_local_variable(void);
/*CALL_INFIX_TIMES*/T0* r510_P_350_declaration_type(T510* C);
/*CALL_INFIX_INT_DIV*/T6 r511is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511declaration_type(T511* C);
/*CALL_INFIX_INT_DIV*/T0* r511adapt_for(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511resolve_in(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511eiffel_parser(void);
/*CALL_INFIX_INT_DIV*/T0* r511use_current_stack(void);
/*CALL_INFIX_INT_DIV*/T0* r511collect(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511specialize_in(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511written_declaration_type_mark(void);
/*CALL_INFIX_INT_DIV*/T0* r511simplify(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r511pretty_target(T511* C,T2 a1);
/*CALL_INFIX_INT_DIV*/void r511safety_check(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511to_expression(T511* C);
/*CALL_INFIX_INT_DIV*/T0* r511specialize_thru(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r511feature_accumulator(void);
/*CALL_INFIX_INT_DIV*/T0* r511specialize_and_check(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r511inline_dynamic_dispatch_(T511* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r511to_instruction(T511* C);
/*CALL_INFIX_INT_DIV*/T0* r511current_or_twin_init(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r511standard_check_export_and_obsolete_calls(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r511make(T511* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r511arg1(T511* C);
/*CALL_INFIX_INT_DIV*/void r511type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/void r511non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/T6 r511use_current(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511static_simplify(T511* C);
/*CALL_INFIX_INT_DIV*/void r511init(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r511extra_local_expanded(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r511function_and_argument_count_check(T511* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/void r511pretty(T511* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r511side_effect_free(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511non_void_no_dispatch_type(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511run_feature_for(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r511inline_with(T511* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r511twin(T511* C);
/*CALL_INFIX_INT_DIV*/void r511bracketed_pretty(T511* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r511is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_DIV*/void r511accept(T511* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T338 r511start_position(T511* C);
/*CALL_INFIX_INT_DIV*/T6 r511is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_DIV*/T0* r511_P_350_declaration_type(T511* C);
/*CALL_INFIX_INT_REM*/T6 r512is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512declaration_type(T512* C);
/*CALL_INFIX_INT_REM*/T0* r512adapt_for(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512resolve_in(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512eiffel_parser(void);
/*CALL_INFIX_INT_REM*/T0* r512use_current_stack(void);
/*CALL_INFIX_INT_REM*/T0* r512collect(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512specialize_in(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512written_declaration_type_mark(void);
/*CALL_INFIX_INT_REM*/T0* r512simplify(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r512pretty_target(T512* C,T2 a1);
/*CALL_INFIX_INT_REM*/void r512safety_check(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512to_expression(T512* C);
/*CALL_INFIX_INT_REM*/T0* r512specialize_thru(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r512feature_accumulator(void);
/*CALL_INFIX_INT_REM*/T0* r512specialize_and_check(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r512inline_dynamic_dispatch_(T512* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r512to_instruction(T512* C);
/*CALL_INFIX_INT_REM*/T0* r512current_or_twin_init(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r512standard_check_export_and_obsolete_calls(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r512make(T512* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r512arg1(T512* C);
/*CALL_INFIX_INT_REM*/void r512type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/void r512non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/T6 r512use_current(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512static_simplify(T512* C);
/*CALL_INFIX_INT_REM*/void r512init(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r512extra_local_expanded(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r512function_and_argument_count_check(T512* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/void r512pretty(T512* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r512side_effect_free(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512non_void_no_dispatch_type(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512run_feature_for(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r512inline_with(T512* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r512twin(T512* C);
/*CALL_INFIX_INT_REM*/void r512bracketed_pretty(T512* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r512is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_REM*/void r512accept(T512* C,T0* a1);
/*CALL_INFIX_INT_REM*/T338 r512start_position(T512* C);
/*CALL_INFIX_INT_REM*/T6 r512is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_REM*/T0* r512_P_350_declaration_type(T512* C);
/*CALL_INFIX_DIV*/T6 r513is_balanced_operator(T0* a1);
/*CALL_INFIX_DIV*/T0* r513declaration_type(T513* C);
/*CALL_INFIX_DIV*/T0* r513adapt_for(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513resolve_in(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513eiffel_parser(void);
/*CALL_INFIX_DIV*/T0* r513use_current_stack(void);
/*CALL_INFIX_DIV*/T0* r513collect(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513specialize_in(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513written_declaration_type_mark(void);
/*CALL_INFIX_DIV*/T0* r513simplify(T513* C,T0* a1);
/*CALL_INFIX_DIV*/void r513pretty_target(T513* C,T2 a1);
/*CALL_INFIX_DIV*/void r513safety_check(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513to_expression(T513* C);
/*CALL_INFIX_DIV*/T0* r513specialize_thru(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r513feature_accumulator(void);
/*CALL_INFIX_DIV*/T0* r513specialize_and_check(T513* C,T0* a1);
/*CALL_INFIX_DIV*/void r513inline_dynamic_dispatch_(T513* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r513to_instruction(T513* C);
/*CALL_INFIX_DIV*/T0* r513current_or_twin_init(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r513standard_check_export_and_obsolete_calls(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r513make(T513* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r513arg1(T513* C);
/*CALL_INFIX_DIV*/void r513type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/void r513non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/T6 r513use_current(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513static_simplify(T513* C);
/*CALL_INFIX_DIV*/void r513init(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r513extra_local_expanded(T513* C,T0* a1);
/*CALL_INFIX_DIV*/void r513function_and_argument_count_check(T513* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/void r513pretty(T513* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r513side_effect_free(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513non_void_no_dispatch_type(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513run_feature_for(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r513inline_with(T513* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r513twin(T513* C);
/*CALL_INFIX_DIV*/void r513bracketed_pretty(T513* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r513is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_DIV*/void r513accept(T513* C,T0* a1);
/*CALL_INFIX_DIV*/T338 r513start_position(T513* C);
/*CALL_INFIX_DIV*/T6 r513is_stored_in_some_local_variable(void);
/*CALL_INFIX_DIV*/T0* r513_P_350_declaration_type(T513* C);
/*CALL_INFIX_PLUS*/T6 r509is_balanced_operator(T0* a1);
/*CALL_INFIX_PLUS*/T0* r509declaration_type(T509* C);
/*CALL_INFIX_PLUS*/T0* r509adapt_for(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509resolve_in(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509eiffel_parser(void);
/*CALL_INFIX_PLUS*/T0* r509use_current_stack(void);
/*CALL_INFIX_PLUS*/T0* r509collect(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509specialize_in(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509written_declaration_type_mark(void);
/*CALL_INFIX_PLUS*/T0* r509simplify(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/void r509pretty_target(T509* C,T2 a1);
/*CALL_INFIX_PLUS*/void r509safety_check(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509to_expression(T509* C);
/*CALL_INFIX_PLUS*/T0* r509specialize_thru(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r509feature_accumulator(void);
/*CALL_INFIX_PLUS*/T0* r509specialize_and_check(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/void r509inline_dynamic_dispatch_(T509* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r509to_instruction(T509* C);
/*CALL_INFIX_PLUS*/T0* r509current_or_twin_init(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r509standard_check_export_and_obsolete_calls(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r509make(T509* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r509arg1(T509* C);
/*CALL_INFIX_PLUS*/void r509type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/void r509non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/T6 r509use_current(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509static_simplify(T509* C);
/*CALL_INFIX_PLUS*/void r509init(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r509extra_local_expanded(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/void r509function_and_argument_count_check(T509* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/void r509pretty(T509* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r509side_effect_free(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509non_void_no_dispatch_type(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509run_feature_for(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r509inline_with(T509* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r509twin(T509* C);
/*CALL_INFIX_PLUS*/void r509bracketed_pretty(T509* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r509is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_PLUS*/void r509accept(T509* C,T0* a1);
/*CALL_INFIX_PLUS*/T338 r509start_position(T509* C);
/*CALL_INFIX_PLUS*/T6 r509is_stored_in_some_local_variable(void);
/*CALL_INFIX_PLUS*/T0* r509_P_350_declaration_type(T509* C);
/*CALL_INFIX_MINUS*/T6 r374is_balanced_operator(T0* a1);
/*CALL_INFIX_MINUS*/T0* r374declaration_type(T374* C);
/*CALL_INFIX_MINUS*/T0* r374adapt_for(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374resolve_in(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374eiffel_parser(void);
/*CALL_INFIX_MINUS*/T0* r374use_current_stack(void);
/*CALL_INFIX_MINUS*/T0* r374collect(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374specialize_in(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374written_declaration_type_mark(void);
/*CALL_INFIX_MINUS*/T0* r374simplify(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374pretty_target(T374* C,T2 a1);
/*CALL_INFIX_MINUS*/void r374safety_check(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374to_expression(T374* C);
/*CALL_INFIX_MINUS*/T0* r374specialize_thru(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r374feature_accumulator(void);
/*CALL_INFIX_MINUS*/T0* r374specialize_and_check(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374inline_dynamic_dispatch_(T374* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r374to_instruction(T374* C);
/*CALL_INFIX_MINUS*/T0* r374current_or_twin_init(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r374standard_check_export_and_obsolete_calls(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r374make(T374* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r374arg1(T374* C);
/*CALL_INFIX_MINUS*/void r374type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/void r374non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/T6 r374use_current(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374static_simplify(T374* C);
/*CALL_INFIX_MINUS*/void r374init(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r374extra_local_expanded(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374function_and_argument_count_check(T374* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/void r374pretty(T374* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r374side_effect_free(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374non_void_no_dispatch_type(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374run_feature_for(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374inline_with(T374* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r374twin(T374* C);
/*CALL_INFIX_MINUS*/void r374bracketed_pretty(T374* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r374is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_MINUS*/void r374accept(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T338 r374start_position(T374* C);
/*CALL_INFIX_MINUS*/T6 r374is_stored_in_some_local_variable(void);
/*CALL_INFIX_MINUS*/T0* r374_P_350_declaration_type(T374* C);
/*BUILT_IN_EQ_NEQ*/T397*create397make_neq(T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T397*create397make_eq(T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397specialize_and_check(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397to_expression(T397* C);
/*BUILT_IN_EQ_NEQ*/void r397make_neq(T397* C,T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/void r397pretty(T397* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397specialized(T397* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*BUILT_IN_EQ_NEQ*/void r397set_left_and_right(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_integer_real(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397static_simplify(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397specialize_in(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397inline_dynamic_dispatch_(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/void r397safety_check(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_null_pointer(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_character_constant(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397specialize_thru(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r397is_static(T397* C);
/*BUILT_IN_EQ_NEQ*/void r397make_eq(T397* C,T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r397is_stored_in_some_local_variable(void);
/*BUILT_IN_EQ_NEQ*/void r397accept(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397specialize_and_check_standard_comparison_check(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397adapt_for(T397* C,T0* a1);
extern T0*oBC397declaration_type;
extern int fBC397declaration_type;
/*BUILT_IN_EQ_NEQ*/T0* r397declaration_type(void);
/*BUILT_IN_EQ_NEQ*/T0* r397collect(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397pretty_target(T397* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T338 r397start_position(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397twin(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397written_declaration_type_mark(void);
/*BUILT_IN_EQ_NEQ*/T6 r397use_current(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397bracketed_pretty(T397* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/void r397void_comparison_check(T397* C,T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397non_void_no_dispatch_type(T0* a1);
/*BUILT_IN_EQ_NEQ*/T6 r397side_effect_free(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_void(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397inline_with(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397true_or_false(T397* C,T6 a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_boolean_constant(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397resolve_in(T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397basic_make(T397* C,T6 a1,T0* a2,T338 a3,T0* a4);
/*BUILT_IN_EQ_NEQ*/T0* r397to_instruction(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397current_or_twin_init(T397* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T6 r505is_balanced_operator(T0* a1);
/*CALL_INFIX_LE*/T0* r505declaration_type(T505* C);
/*CALL_INFIX_LE*/T0* r505adapt_for(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505resolve_in(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505eiffel_parser(void);
/*CALL_INFIX_LE*/T0* r505use_current_stack(void);
/*CALL_INFIX_LE*/T0* r505collect(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505specialize_in(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505written_declaration_type_mark(void);
/*CALL_INFIX_LE*/T0* r505simplify(T505* C,T0* a1);
/*CALL_INFIX_LE*/void r505pretty_target(T505* C,T2 a1);
/*CALL_INFIX_LE*/void r505safety_check(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505to_expression(T505* C);
/*CALL_INFIX_LE*/T0* r505specialize_thru(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r505feature_accumulator(void);
/*CALL_INFIX_LE*/T0* r505specialize_and_check(T505* C,T0* a1);
/*CALL_INFIX_LE*/void r505inline_dynamic_dispatch_(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r505to_instruction(T505* C);
/*CALL_INFIX_LE*/T0* r505current_or_twin_init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r505standard_check_export_and_obsolete_calls(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r505make(T505* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_LE*/T0* r505arg1(T505* C);
/*CALL_INFIX_LE*/void r505type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/void r505non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/T6 r505use_current(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505static_simplify(T505* C);
/*CALL_INFIX_LE*/void r505init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r505extra_local_expanded(T505* C,T0* a1);
/*CALL_INFIX_LE*/void r505function_and_argument_count_check(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/void r505pretty(T505* C,T2 a1);
/*CALL_INFIX_LE*/T6 r505side_effect_free(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505non_void_no_dispatch_type(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505run_feature_for(T505* C,T0* a1);
/*CALL_INFIX_LE*/T0* r505inline_with(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r505twin(T505* C);
/*CALL_INFIX_LE*/void r505bracketed_pretty(T505* C,T2 a1);
/*CALL_INFIX_LE*/T6 r505is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LE*/void r505accept(T505* C,T0* a1);
/*CALL_INFIX_LE*/T338 r505start_position(T505* C);
/*CALL_INFIX_LE*/T6 r505is_stored_in_some_local_variable(void);
/*CALL_INFIX_LE*/T0* r505_P_350_declaration_type(T505* C);
/*CALL_INFIX_GE*/T6 r506is_balanced_operator(T0* a1);
/*CALL_INFIX_GE*/T0* r506declaration_type(T506* C);
/*CALL_INFIX_GE*/T0* r506adapt_for(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506resolve_in(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506eiffel_parser(void);
/*CALL_INFIX_GE*/T0* r506use_current_stack(void);
/*CALL_INFIX_GE*/T0* r506collect(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506specialize_in(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506written_declaration_type_mark(void);
/*CALL_INFIX_GE*/T0* r506simplify(T506* C,T0* a1);
/*CALL_INFIX_GE*/void r506pretty_target(T506* C,T2 a1);
/*CALL_INFIX_GE*/void r506safety_check(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506to_expression(T506* C);
/*CALL_INFIX_GE*/T0* r506specialize_thru(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r506feature_accumulator(void);
/*CALL_INFIX_GE*/T0* r506specialize_and_check(T506* C,T0* a1);
/*CALL_INFIX_GE*/void r506inline_dynamic_dispatch_(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r506to_instruction(T506* C);
/*CALL_INFIX_GE*/T0* r506current_or_twin_init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r506standard_check_export_and_obsolete_calls(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r506make(T506* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_GE*/T0* r506arg1(T506* C);
/*CALL_INFIX_GE*/void r506type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/void r506non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/T6 r506use_current(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506static_simplify(T506* C);
/*CALL_INFIX_GE*/void r506init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r506extra_local_expanded(T506* C,T0* a1);
/*CALL_INFIX_GE*/void r506function_and_argument_count_check(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/void r506pretty(T506* C,T2 a1);
/*CALL_INFIX_GE*/T6 r506side_effect_free(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506non_void_no_dispatch_type(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506run_feature_for(T506* C,T0* a1);
/*CALL_INFIX_GE*/T0* r506inline_with(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r506twin(T506* C);
/*CALL_INFIX_GE*/void r506bracketed_pretty(T506* C,T2 a1);
/*CALL_INFIX_GE*/T6 r506is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GE*/void r506accept(T506* C,T0* a1);
/*CALL_INFIX_GE*/T338 r506start_position(T506* C);
/*CALL_INFIX_GE*/T6 r506is_stored_in_some_local_variable(void);
/*CALL_INFIX_GE*/T0* r506_P_350_declaration_type(T506* C);
/*CALL_INFIX_LT*/T6 r507is_balanced_operator(T0* a1);
/*CALL_INFIX_LT*/T0* r507declaration_type(T507* C);
/*CALL_INFIX_LT*/T0* r507adapt_for(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507resolve_in(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507eiffel_parser(void);
/*CALL_INFIX_LT*/T0* r507use_current_stack(void);
/*CALL_INFIX_LT*/T0* r507collect(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507specialize_in(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507written_declaration_type_mark(void);
/*CALL_INFIX_LT*/T0* r507simplify(T507* C,T0* a1);
/*CALL_INFIX_LT*/void r507pretty_target(T507* C,T2 a1);
/*CALL_INFIX_LT*/void r507safety_check(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507to_expression(T507* C);
/*CALL_INFIX_LT*/T0* r507specialize_thru(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r507feature_accumulator(void);
/*CALL_INFIX_LT*/T0* r507specialize_and_check(T507* C,T0* a1);
/*CALL_INFIX_LT*/void r507inline_dynamic_dispatch_(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r507to_instruction(T507* C);
/*CALL_INFIX_LT*/T0* r507current_or_twin_init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r507standard_check_export_and_obsolete_calls(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r507make(T507* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_LT*/T0* r507arg1(T507* C);
/*CALL_INFIX_LT*/void r507type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/void r507non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/T6 r507use_current(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507static_simplify(T507* C);
/*CALL_INFIX_LT*/void r507init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r507extra_local_expanded(T507* C,T0* a1);
/*CALL_INFIX_LT*/void r507function_and_argument_count_check(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/void r507pretty(T507* C,T2 a1);
/*CALL_INFIX_LT*/T6 r507side_effect_free(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507non_void_no_dispatch_type(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507run_feature_for(T507* C,T0* a1);
/*CALL_INFIX_LT*/T0* r507inline_with(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r507twin(T507* C);
/*CALL_INFIX_LT*/void r507bracketed_pretty(T507* C,T2 a1);
/*CALL_INFIX_LT*/T6 r507is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LT*/void r507accept(T507* C,T0* a1);
/*CALL_INFIX_LT*/T338 r507start_position(T507* C);
/*CALL_INFIX_LT*/T6 r507is_stored_in_some_local_variable(void);
/*CALL_INFIX_LT*/T0* r507_P_350_declaration_type(T507* C);
/*CALL_INFIX_GT*/T6 r508is_balanced_operator(T0* a1);
/*CALL_INFIX_GT*/T0* r508declaration_type(T508* C);
/*CALL_INFIX_GT*/T0* r508adapt_for(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508resolve_in(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508eiffel_parser(void);
/*CALL_INFIX_GT*/T0* r508use_current_stack(void);
/*CALL_INFIX_GT*/T0* r508collect(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508specialize_in(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508written_declaration_type_mark(void);
/*CALL_INFIX_GT*/T0* r508simplify(T508* C,T0* a1);
/*CALL_INFIX_GT*/void r508pretty_target(T508* C,T2 a1);
/*CALL_INFIX_GT*/void r508safety_check(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508to_expression(T508* C);
/*CALL_INFIX_GT*/T0* r508specialize_thru(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r508feature_accumulator(void);
/*CALL_INFIX_GT*/T0* r508specialize_and_check(T508* C,T0* a1);
/*CALL_INFIX_GT*/void r508inline_dynamic_dispatch_(T508* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r508to_instruction(T508* C);
/*CALL_INFIX_GT*/T0* r508current_or_twin_init(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r508standard_check_export_and_obsolete_calls(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r508make(T508* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_GT*/T0* r508arg1(T508* C);
/*CALL_INFIX_GT*/void r508type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/void r508non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/T6 r508use_current(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508static_simplify(T508* C);
/*CALL_INFIX_GT*/void r508init(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r508extra_local_expanded(T508* C,T0* a1);
/*CALL_INFIX_GT*/void r508function_and_argument_count_check(T508* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/void r508pretty(T508* C,T2 a1);
/*CALL_INFIX_GT*/T6 r508side_effect_free(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508non_void_no_dispatch_type(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508run_feature_for(T508* C,T0* a1);
/*CALL_INFIX_GT*/T0* r508inline_with(T508* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r508twin(T508* C);
/*CALL_INFIX_GT*/void r508bracketed_pretty(T508* C,T2 a1);
/*CALL_INFIX_GT*/T6 r508is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GT*/void r508accept(T508* C,T0* a1);
/*CALL_INFIX_GT*/T338 r508start_position(T508* C);
/*CALL_INFIX_GT*/T6 r508is_stored_in_some_local_variable(void);
/*CALL_INFIX_GT*/T0* r508_P_350_declaration_type(T508* C);
/*CALL_INFIX_AND_THEN*/T6 r402is_balanced_operator(T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402declaration_type(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402adapt_for(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402resolve_in(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402use_current_stack(void);
/*CALL_INFIX_AND_THEN*/T0* r402collect(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402specialize_in(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402written_declaration_type_mark(void);
/*CALL_INFIX_AND_THEN*/T0* r402simplify(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402pretty_target(T402* C,T2 a1);
/*CALL_INFIX_AND_THEN*/void r402safety_check(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402to_expression(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402specialize_thru(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r402feature_accumulator(void);
/*CALL_INFIX_AND_THEN*/T0* r402specialize_and_check(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402inline_dynamic_dispatch_(T402* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r402to_instruction(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402current_or_twin_init(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r402standard_check_export_and_obsolete_calls(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r402make(T402* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r402arg1(T402* C);
/*CALL_INFIX_AND_THEN*/T6 r402use_current(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402static_simplify(T402* C);
/*CALL_INFIX_AND_THEN*/void r402init(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r402and_then_name(void);
/*CALL_INFIX_AND_THEN*/T0* r402extra_local_expanded(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402function_and_argument_count_check(T402* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/void r402pretty(T402* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r402side_effect_free(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402non_void_no_dispatch_type(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402run_feature_for(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402inline_with(T402* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r402twin(T402* C);
/*CALL_INFIX_AND_THEN*/void r402bracketed_pretty(T402* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r402is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND_THEN*/void r402accept(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T338 r402start_position(T402* C);
/*CALL_INFIX_AND_THEN*/T6 r402is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND_THEN*/T0* r402_P_350_declaration_type(T402* C);
/*CALL_INFIX_AND*/T6 r504is_balanced_operator(T0* a1);
/*CALL_INFIX_AND*/T0* r504declaration_type(T504* C);
/*CALL_INFIX_AND*/T0* r504adapt_for(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504resolve_in(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504eiffel_parser(void);
/*CALL_INFIX_AND*/T0* r504use_current_stack(void);
/*CALL_INFIX_AND*/T0* r504collect(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504specialize_in(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504written_declaration_type_mark(void);
/*CALL_INFIX_AND*/T0* r504simplify(T504* C,T0* a1);
/*CALL_INFIX_AND*/void r504pretty_target(T504* C,T2 a1);
/*CALL_INFIX_AND*/void r504safety_check(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504to_expression(T504* C);
/*CALL_INFIX_AND*/T0* r504specialize_thru(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r504feature_accumulator(void);
/*CALL_INFIX_AND*/T0* r504specialize_and_check(T504* C,T0* a1);
/*CALL_INFIX_AND*/void r504inline_dynamic_dispatch_(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r504to_instruction(T504* C);
/*CALL_INFIX_AND*/T0* r504current_or_twin_init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r504standard_check_export_and_obsolete_calls(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r504make(T504* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_AND*/T0* r504arg1(T504* C);
/*CALL_INFIX_AND*/void r504type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/void r504non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/T6 r504use_current(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504static_simplify(T504* C);
/*CALL_INFIX_AND*/void r504init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r504extra_local_expanded(T504* C,T0* a1);
/*CALL_INFIX_AND*/void r504function_and_argument_count_check(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/void r504pretty(T504* C,T2 a1);
/*CALL_INFIX_AND*/T6 r504side_effect_free(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504non_void_no_dispatch_type(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504run_feature_for(T504* C,T0* a1);
/*CALL_INFIX_AND*/T0* r504inline_with(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r504twin(T504* C);
/*CALL_INFIX_AND*/void r504bracketed_pretty(T504* C,T2 a1);
/*CALL_INFIX_AND*/T6 r504is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND*/void r504accept(T504* C,T0* a1);
/*CALL_INFIX_AND*/T338 r504start_position(T504* C);
/*CALL_INFIX_AND*/T6 r504is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND*/T0* r504_P_350_declaration_type(T504* C);
/*CALL_INFIX_OR_ELSE*/T6 r501is_balanced_operator(T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501declaration_type(T501* C);
/*CALL_INFIX_OR_ELSE*/T0* r501adapt_for(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501resolve_in(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501use_current_stack(void);
/*CALL_INFIX_OR_ELSE*/T0* r501collect(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501specialize_in(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501written_declaration_type_mark(void);
/*CALL_INFIX_OR_ELSE*/T0* r501simplify(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r501pretty_target(T501* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/void r501safety_check(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501to_expression(T501* C);
/*CALL_INFIX_OR_ELSE*/T0* r501specialize_thru(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r501feature_accumulator(void);
/*CALL_INFIX_OR_ELSE*/T0* r501specialize_and_check(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r501inline_dynamic_dispatch_(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r501to_instruction(T501* C);
/*CALL_INFIX_OR_ELSE*/T0* r501current_or_twin_init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r501standard_check_export_and_obsolete_calls(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r501make(T501* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r501arg1(T501* C);
/*CALL_INFIX_OR_ELSE*/T6 r501use_current(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501static_simplify(T501* C);
/*CALL_INFIX_OR_ELSE*/void r501init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r501extra_local_expanded(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501or_else_name(void);
/*CALL_INFIX_OR_ELSE*/void r501function_and_argument_count_check(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/void r501pretty(T501* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r501side_effect_free(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501non_void_no_dispatch_type(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501run_feature_for(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r501inline_with(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r501twin(T501* C);
/*CALL_INFIX_OR_ELSE*/void r501bracketed_pretty(T501* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r501is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR_ELSE*/void r501accept(T501* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T338 r501start_position(T501* C);
/*CALL_INFIX_OR_ELSE*/T6 r501is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR_ELSE*/T0* r501_P_350_declaration_type(T501* C);
/*CALL_INFIX_OR*/T6 r502is_balanced_operator(T0* a1);
/*CALL_INFIX_OR*/T0* r502declaration_type(T502* C);
/*CALL_INFIX_OR*/T0* r502adapt_for(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502resolve_in(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502eiffel_parser(void);
/*CALL_INFIX_OR*/T0* r502use_current_stack(void);
/*CALL_INFIX_OR*/T0* r502collect(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502specialize_in(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502written_declaration_type_mark(void);
/*CALL_INFIX_OR*/T0* r502simplify(T502* C,T0* a1);
/*CALL_INFIX_OR*/void r502pretty_target(T502* C,T2 a1);
/*CALL_INFIX_OR*/void r502safety_check(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502to_expression(T502* C);
/*CALL_INFIX_OR*/T0* r502specialize_thru(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r502feature_accumulator(void);
/*CALL_INFIX_OR*/T0* r502specialize_and_check(T502* C,T0* a1);
/*CALL_INFIX_OR*/void r502inline_dynamic_dispatch_(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r502to_instruction(T502* C);
/*CALL_INFIX_OR*/T0* r502current_or_twin_init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r502standard_check_export_and_obsolete_calls(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r502make(T502* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_OR*/T0* r502arg1(T502* C);
/*CALL_INFIX_OR*/void r502type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/void r502non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/T6 r502use_current(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502static_simplify(T502* C);
/*CALL_INFIX_OR*/void r502init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r502extra_local_expanded(T502* C,T0* a1);
/*CALL_INFIX_OR*/void r502function_and_argument_count_check(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/void r502pretty(T502* C,T2 a1);
/*CALL_INFIX_OR*/T6 r502side_effect_free(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502non_void_no_dispatch_type(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502run_feature_for(T502* C,T0* a1);
/*CALL_INFIX_OR*/T0* r502inline_with(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r502twin(T502* C);
/*CALL_INFIX_OR*/void r502bracketed_pretty(T502* C,T2 a1);
/*CALL_INFIX_OR*/T6 r502is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR*/void r502accept(T502* C,T0* a1);
/*CALL_INFIX_OR*/T338 r502start_position(T502* C);
/*CALL_INFIX_OR*/T6 r502is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR*/T0* r502_P_350_declaration_type(T502* C);
/*CALL_INFIX_XOR*/T6 r503is_balanced_operator(T0* a1);
/*CALL_INFIX_XOR*/T0* r503declaration_type(T503* C);
/*CALL_INFIX_XOR*/T0* r503adapt_for(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503resolve_in(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503eiffel_parser(void);
/*CALL_INFIX_XOR*/T0* r503use_current_stack(void);
/*CALL_INFIX_XOR*/T0* r503collect(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503specialize_in(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503written_declaration_type_mark(void);
/*CALL_INFIX_XOR*/T0* r503simplify(T503* C,T0* a1);
/*CALL_INFIX_XOR*/void r503pretty_target(T503* C,T2 a1);
/*CALL_INFIX_XOR*/void r503safety_check(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503to_expression(T503* C);
/*CALL_INFIX_XOR*/T0* r503specialize_thru(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r503feature_accumulator(void);
/*CALL_INFIX_XOR*/T0* r503specialize_and_check(T503* C,T0* a1);
/*CALL_INFIX_XOR*/void r503inline_dynamic_dispatch_(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r503to_instruction(T503* C);
/*CALL_INFIX_XOR*/T0* r503current_or_twin_init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r503standard_check_export_and_obsolete_calls(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r503make(T503* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r503arg1(T503* C);
/*CALL_INFIX_XOR*/void r503type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/void r503non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/T6 r503use_current(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503static_simplify(T503* C);
/*CALL_INFIX_XOR*/void r503init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r503extra_local_expanded(T503* C,T0* a1);
/*CALL_INFIX_XOR*/void r503function_and_argument_count_check(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/void r503pretty(T503* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r503side_effect_free(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503non_void_no_dispatch_type(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503run_feature_for(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r503inline_with(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r503twin(T503* C);
/*CALL_INFIX_XOR*/void r503bracketed_pretty(T503* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r503is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_XOR*/void r503accept(T503* C,T0* a1);
/*CALL_INFIX_XOR*/T338 r503start_position(T503* C);
/*CALL_INFIX_XOR*/T6 r503is_stored_in_some_local_variable(void);
/*CALL_INFIX_XOR*/T0* r503_P_350_declaration_type(T503* C);
/*CALL_INFIX_IMPLIES*/T6 r500is_balanced_operator(T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500declaration_type(T500* C);
/*CALL_INFIX_IMPLIES*/T0* r500adapt_for(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500resolve_in(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500eiffel_parser(void);
/*CALL_INFIX_IMPLIES*/T0* r500use_current_stack(void);
/*CALL_INFIX_IMPLIES*/T0* r500collect(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500specialize_in(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500written_declaration_type_mark(void);
/*CALL_INFIX_IMPLIES*/T0* r500simplify(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r500pretty_target(T500* C,T2 a1);
/*CALL_INFIX_IMPLIES*/void r500safety_check(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500to_expression(T500* C);
/*CALL_INFIX_IMPLIES*/T0* r500specialize_thru(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r500feature_accumulator(void);
/*CALL_INFIX_IMPLIES*/T0* r500specialize_and_check(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r500inline_dynamic_dispatch_(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r500to_instruction(T500* C);
/*CALL_INFIX_IMPLIES*/T0* r500current_or_twin_init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r500standard_check_export_and_obsolete_calls(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r500make(T500* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r500arg1(T500* C);
/*CALL_INFIX_IMPLIES*/void r500type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/void r500non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/T6 r500use_current(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500static_simplify(T500* C);
/*CALL_INFIX_IMPLIES*/void r500init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r500extra_local_expanded(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r500function_and_argument_count_check(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/void r500pretty(T500* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r500side_effect_free(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500non_void_no_dispatch_type(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500run_feature_for(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r500inline_with(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r500twin(T500* C);
/*CALL_INFIX_IMPLIES*/void r500bracketed_pretty(T500* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r500is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_IMPLIES*/void r500accept(T500* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T338 r500start_position(T500* C);
/*CALL_INFIX_IMPLIES*/T6 r500is_stored_in_some_local_variable(void);
/*CALL_INFIX_IMPLIES*/T0* r500_P_350_declaration_type(T500* C);
/*CALL_INFIX_IMPLIES*/void r500_P_350_inline_dynamic_dispatch_(T500* C,T0* a1,T0* a2);
/*ADDRESS_OF*/T0* r458specialize_and_check(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458to_expression(T458* C);
/*ADDRESS_OF*/void r458pretty(T458* C,T2 a1);
/*ADDRESS_OF*/T0* r458simplify(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458static_simplify(T458* C);
/*ADDRESS_OF*/T0* r458specialize_in(T458* C,T0* a1);
/*ADDRESS_OF*/void r458inline_dynamic_dispatch_(T458* C,T0* a1,T0* a2);
/*ADDRESS_OF*/void r458safety_check(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458specialize_thru(T458* C,T0* a1,T0* a2,T0* a3);
/*ADDRESS_OF*/T6 r458is_stored_in_some_local_variable(void);
/*ADDRESS_OF*/void r458accept(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458adapt_for(T458* C,T0* a1);
extern T0*oBC458declaration_type;
extern int fBC458declaration_type;
/*ADDRESS_OF*/T0* r458declaration_type(void);
/*ADDRESS_OF*/T0* r458collect(T458* C,T0* a1);
/*ADDRESS_OF*/T338 r458start_position(T458* C);
/*ADDRESS_OF*/T0* r458twin(T458* C);
/*ADDRESS_OF*/T0* r458written_declaration_type_mark(void);
/*ADDRESS_OF*/T6 r458use_current(T458* C,T0* a1);
/*ADDRESS_OF*/void r458bracketed_pretty(T458* C,T2 a1);
/*ADDRESS_OF*/T0* r458non_void_no_dispatch_type(T0* a1);
/*ADDRESS_OF*/T6 r458side_effect_free(T0* a1);
/*ADDRESS_OF*/void r458with_local(T458* C,T0* a1);
/*ADDRESS_OF*/void r458with_feature_name(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458resolve_in(T0* a1);
/*ADDRESS_OF*/T0* r458to_instruction(T458* C);
/*CLIENT_TYPE_MARK*/T6 r499is_tuple(void);
/*CLIENT_TYPE_MARK*/void r499make(T499* C,T0* a1);
/*CLIENT_TYPE_MARK*/T0* r499generic_list(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499is_anchored(void);
/*CLIENT_TYPE_MARK*/T6 r499is_character(void);
/*CLIENT_TYPE_MARK*/T0* r499written_mark(T499* C);
/*CLIENT_TYPE_MARK*/T0* r499canonical_long_name(T499* C);
/*CLIENT_TYPE_MARK*/T0* r499written_name(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499is_native_array(void);
/*CLIENT_TYPE_MARK*/T0* r499at(T499* C,T338 a1);
/*CLIENT_TYPE_MARK*/T6 r499is_expanded(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499is_boolean(void);
/*CLIENT_TYPE_MARK*/T0* r499typed_internals_type_mark(T499* C,T338 a1);
/*CLIENT_TYPE_MARK*/T0* r499to_static(T499* C,T0* a1,T6 a2);
/*CLIENT_TYPE_MARK*/T2 r499id(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499is_reference(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499same_signature_type(T499* C,T0* a1,T0* a2);
/*CLIENT_TYPE_MARK*/T0* r499type(T499* C);
/*CLIENT_TYPE_MARK*/T0* r499signature_resolve_in(T0* a1);
/*CLIENT_TYPE_MARK*/T6 r499is_natural(void);
/*CLIENT_TYPE_MARK*/T0* r499default_expression(T499* C,T338 a1);
/*CLIENT_TYPE_MARK*/void r499id_extra_information(T499* C,T0* a1);
/*CLIENT_TYPE_MARK*/T0* r499class_text_name(void);
/*CLIENT_TYPE_MARK*/T6 r499is_pointer(void);
/*CLIENT_TYPE_MARK*/T6 r499is_user_expanded(T499* C);
/*CLIENT_TYPE_MARK*/T338 r499start_position(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499is_kernel_expanded(void);
/*CLIENT_TYPE_MARK*/T6 r499is_fixed_string(T499* C);
/*CLIENT_TYPE_MARK*/T0* r499class_text(T499* C);
/*CLIENT_TYPE_MARK*/T0* r499twin(T499* C);
/*CLIENT_TYPE_MARK*/T6 r499is_real(void);
/*CLIENT_TYPE_MARK*/T6 r499is_integer(void);
/*CLIENT_TYPE_MARK*/void r499pretty_in(T499* C,T0* a1);
/*CLIENT_TYPE_MARK*/T6 r499is_generic(T499* C);
/*CLIENT_TYPE_MARK*/T0* r499resolve_in(T499* C,T0* a1);
/*CLIENT_TYPE_MARK*/T6 r499is_agent(void);
/*TYPE_MARK_LIST*/T6 r493wider_than(T493* C,T0* a1);
/*TYPE_MARK_LIST*/void r493merge(T493* C,T0* a1,T0* a2);
/*TYPE_MARK_LIST*/void r493add_last(T493* C,T0* a1);
/*TYPE_MARK_LIST*/T0* r493item(T493* C,T2 a1);
/*TYPE_MARK_LIST*/T2 r493index_of(T493* C,T0* a1);
/*TYPE_MARK_LIST*/void r493locate_in_error_handler(T493* C);
/*TYPE_MARK_LIST*/T6 r493gives_permission_to(T493* C,T0* a1,T0* a2);
/*TYPE_MARK_LIST*/void r493make_1(T493* C,T0* a1);
/*TYPE_MARK_LIST*/void r493append_in(T493* C,T0* a1);
/*TYPE_MARK_LIST*/T2 r493count(T493* C);
/*TYPE_MARK_LIST*/T6 r493gives_permission_to_any(T493* C);
/*CLIENT_LIST*/T283*create283make(T338 a1,T0* a2);
/*CLIENT_LIST*/void r283make(T283* C,T338 a1,T0* a2);
/*CLIENT_LIST*/T6 r283wider_than(T283* C,T0* a1);
/*CLIENT_LIST*/void r283merge(T283* C,T338 a1,T0* a2,T0* a3);
/*CLIENT_LIST*/T0* r283eiffel_view(T283* C);
/*CLIENT_LIST*/T6 r283is_omitted(T283* C);
/*CLIENT_LIST*/T6 r283gives_no_permission(T283* C);
/*CLIENT_LIST*/void r283locate_in_error_handler(T283* C);
/*CLIENT_LIST*/T6 r283gives_permission_to(T283* C,T0* a1,T0* a2);
/*CLIENT_LIST*/T0* r283merge_with(T283* C,T0* a1);
/*CLIENT_LIST*/void r283append_in(T283* C,T0* a1);
/*CLIENT_LIST*/T6 r283gives_permission_to_any(T283* C);
/*EXPORT_LIST*/void r461check_level_2(T461* C,T0* a1,T0* a2);
/*EXPORT_LIST*/void r461make(T461* C,T338 a1,T0* a2);
/*EXPORT_LIST*/T0* r461clients_for(T461* C,T0* a1);
/*EXPORT_ITEM*/void r460make(T460* C,T0* a1,T0* a2);
/*EXPORT_ITEM*/void r460make_all(T460* C,T0* a1);
/*CREATION_CLAUSE*/void r419make(T419* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*CREATION_CLAUSE*/void r419check_manifest_semicolon_check(T419* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r419default_root(T419* C);
/*CREATION_CLAUSE*/T0* r419manifest_make_name(void);
/*CREATION_CLAUSE*/void r419check_manifest_make(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r419extra_expanded_check(T419* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/void r419check_manifest_put(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r419manifest_semicolon_check_name(void);
/*CREATION_CLAUSE*/void r419check_for(T419* C,T0* a1);
/*CREATION_CLAUSE*/T0* r419manifest_put_name(void);
/*CREATION_CLAUSE*/T0* r419user_expanded_default_create_stamp(T419* C,T0* a1);
/*FEATURE_CLAUSE*/void r431make(T431* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_CLAUSE*/void r431add_into(T431* C,T0* a1);
/*CLUSTER_CLASS*/void r752make(T752* C,T0* a1,T0* a2,T0* a3);
/*TAG_NAME*/void r455make(T455* C,T0* a1,T338 a2);
/*ARGUMENT_NAME2*/T0* r358to_expression(T358* C);
/*ARGUMENT_NAME2*/void r358pretty(T358* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r358simplify(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358static_simplify(T358* C);
/*ARGUMENT_NAME2*/T0* r358specialize_in(T358* C,T0* a1);
/*ARGUMENT_NAME2*/void r358inline_dynamic_dispatch_(T358* C,T0* a1,T0* a2);
/*ARGUMENT_NAME2*/T0* r358specialize_thru(T358* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME2*/T6 r358is_stored_in_some_local_variable(void);
/*ARGUMENT_NAME2*/void r358accept(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358adapt_for(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358feature_accumulator(void);
/*ARGUMENT_NAME2*/T0* r358collect(T358* C,T0* a1);
/*ARGUMENT_NAME2*/void r358pretty_target(T358* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r358twin(T358* C);
/*ARGUMENT_NAME2*/T0* r358written_declaration_type_mark(void);
/*ARGUMENT_NAME2*/void r358refer_to(T358* C,T338 a1,T0* a2,T2 a3);
/*ARGUMENT_NAME2*/T6 r358use_current(T0* a1);
/*ARGUMENT_NAME2*/T0* r358non_void_no_dispatch_type(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358to_string(T358* C);
/*ARGUMENT_NAME2*/T6 r358side_effect_free(T0* a1);
/*ARGUMENT_NAME2*/T0* r358resolve_in(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358to_instruction(T358* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410specialize_and_check(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410to_expression(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/void r410make(T410* C,T0* a1,T338 a2);
/*WRITABLE_ATTRIBUTE_NAME*/void r410pretty(T410* C,T2 a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410simplify(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410static_simplify(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410specialize_in(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r410inline_dynamic_dispatch_(T410* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410specialize_thru(T410* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r410is_stored_in_some_local_variable(void);
/*WRITABLE_ATTRIBUTE_NAME*/void r410accept(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410feature_accumulator(void);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410collect(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r410set_feature_stamp_and_type(T410* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T338 r410start_position(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410twin(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r410use_current(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410non_void_no_dispatch_type(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r410side_effect_free(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410resolve_in(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410to_instruction(T410* C);
/*LOCAL_NAME2*/T0* r393to_expression(T393* C);
/*LOCAL_NAME2*/void r393pretty(T393* C,T2 a1);
/*LOCAL_NAME2*/T0* r393simplify(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393static_simplify(T393* C);
/*LOCAL_NAME2*/T0* r393specialize_in(T393* C,T0* a1);
/*LOCAL_NAME2*/void r393inline_dynamic_dispatch_(T393* C,T0* a1,T0* a2);
/*LOCAL_NAME2*/T0* r393specialize_thru(T393* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME2*/T6 r393is_stored_in_some_local_variable(void);
/*LOCAL_NAME2*/void r393accept(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393adapt_for(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393collect(T393* C,T0* a1);
/*LOCAL_NAME2*/void r393pretty_target(T393* C,T2 a1);
/*LOCAL_NAME2*/T0* r393twin(T393* C);
/*LOCAL_NAME2*/void r393refer_to(T393* C,T338 a1,T0* a2,T2 a3);
/*LOCAL_NAME2*/T6 r393use_current(T0* a1);
/*LOCAL_NAME2*/T0* r393non_void_no_dispatch_type(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393to_string(T393* C);
/*LOCAL_NAME2*/T6 r393side_effect_free(T0* a1);
/*LOCAL_NAME2*/T0* r393resolve_in(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393to_instruction(T393* C);
/*RUN_TIME_SET*/void r531make(T531* C,T0* a1);
/*RUN_TIME_SET*/T2 r531add_set(T531* C,T0* a1);
/*RUN_TIME_SET*/void r531id_extra_information(T531* C,T0* a1);
/*RUN_TIME_SET*/T6 r531is_empty(T531* C);
/*RUN_TIME_SET*/T2 r531count(T531* C);
/*WRITABLE_ATTRIBUTE*/T0* r433specialized_ensure_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_signature_in(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r433try_to_undefine_aux(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r433collect(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_require_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/void r433with(T433* C,T0* a1,T0* a2,T2 a3);
/*WRITABLE_ATTRIBUTE*/T0* r433simplify(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r433arguments(void);
/*WRITABLE_ATTRIBUTE*/T0* r433specialized_require_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r433first_name(T433* C);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_and_check(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r433names(T433* C);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_require_in(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r433add_into(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r433merge_signature_thru(T433* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*WRITABLE_ATTRIBUTE*/void r433make(T433* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T0* r433try_to_undefine(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r433add_into_(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r433new_run_feature_for(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r433valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T6 r433use_current(T0* a1);
/*WRITABLE_ATTRIBUTE*/void r433obsolete_warning_check(T433* C,T0* a1,T338 a2);
/*WRITABLE_ATTRIBUTE*/T0* r433change_ensure(T433* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r433brand_new_run_feature_for(T433* C,T0* a1,T0* a2,T6 a3);
/*WRITABLE_ATTRIBUTE*/void r433pretty_print_names(T433* C);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_permissions(T433* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/void r433pretty(T433* C,T2 a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T6 r433same_body_as(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r433inline_dynamic_dispatch(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_body_thru(T433* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T6 r433same_signature(T433* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_signature_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_ensure_in(T433* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_ensure_thru(T433* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T0* r433twin(T433* C);
/*WRITABLE_ATTRIBUTE*/void r433accept(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r433inline_expression_0(T433* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*WRITABLE_ATTRIBUTE*/T6 r433valid_redefinition(T433* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T0* r433change_require(T433* C,T0* a1,T6 a2);
extern T0*oBC336obsolete_warning_check_memory;
extern int fBC336obsolete_warning_check_memory;
/*WRITABLE_ATTRIBUTE*/T0* r433obsolete_warning_check_memory(void);
/*WRITABLE_ATTRIBUTE*/T338 r433start_position(T433* C);
/*WRITABLE_ATTRIBUTE*/void r433set_rescue_compound(T433* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r433specialize_body_in(T433* C,T0* a1,T6 a2);
/*CLASS_INVARIANT*/T0* r425specialize_and_check(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425to_expression(T425* C);
/*CLASS_INVARIANT*/void r425make(T425* C,T338 a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/T6 r425has_assertion_located_at(T425* C,T338 a1);
/*CLASS_INVARIANT*/void r425pretty(T425* C,T2 a1);
/*CLASS_INVARIANT*/T0* r425simplify(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425specialize_in(T425* C,T0* a1);
/*CLASS_INVARIANT*/void r425inline_dynamic_dispatch_(T425* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/T6 r425is_always_true(T425* C,T0* a1);
/*CLASS_INVARIANT*/void r425safety_check(T425* C,T0* a1);
/*CLASS_INVARIANT*/void r425set_list(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425specialize_thru(T425* C,T0* a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/void r425pretty_as_loop_invariant(T425* C,T2 a1);
/*CLASS_INVARIANT*/T2 r425upper(T425* C);
/*CLASS_INVARIANT*/void r425accept(T425* C,T0* a1);
/*CLASS_INVARIANT*/void r425set_eiffel_parser_stamp(T425* C,T2 a1);
/*CLASS_INVARIANT*/T0* r425adapt_for(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425item(T425* C,T2 a1);
/*CLASS_INVARIANT*/T0* r425add_items_from(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425collect(T425* C,T0* a1);
/*CLASS_INVARIANT*/void r425pretty_print_with_tag(T425* C,T2 a1,T0* a2);
/*CLASS_INVARIANT*/T6 r425is_empty(T425* C);
/*CLASS_INVARIANT*/T0* r425twin(T425* C);
/*CLASS_INVARIANT*/void r425pretty_as_check_compound(T425* C,T2 a1);
/*CLASS_INVARIANT*/T6 r425use_current(T425* C,T0* a1);
/*CLASS_INVARIANT*/void r425breakpoint(T425* C);
/*CLASS_INVARIANT*/void r425crash(T425* C);
/*CLASS_INVARIANT*/T6 r425side_effect_free(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425inline_dynamic_dispatch(T425* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/void r425not_yet_implemented(T425* C);
/*CLASS_INVARIANT*/T2 r425count(T425* C);
/*CLASS_INVARIANT*/void r425do_all(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425specialize_without_checks(T425* C,T0* a1);
/*CLASS_INVARIANT*/T0* r425to_instruction(T425* C);
/*CLASS_INVARIANT*/T2 r425lower(T425* C);
/*PARENT_LISTS*/void r450check_level_2(T450* C,T0* a1);
/*PARENT_LISTS*/void r450make(T450* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*PARENT_LISTS*/T0* r450insert_edge(T450* C,T2 a1);
/*PARENT_LISTS*/T0* r450inherit_edge(T450* C,T2 a1);
/*PARENT_LISTS*/void r450initialize_and_check_level_1(T450* C);
/*PARENT_LISTS*/T6 r450get_permission_of(T450* C,T0* a1);
/*PARENT_LISTS*/void r450id_extra_information(T450* C,T0* a1);
/*PARENT_LISTS*/T2 r450inherit_count(T450* C);
/*PARENT_LISTS*/T338 r450undefine_position_of(T450* C,T0* a1);
/*PARENT_LISTS*/void r450set_insert_member(T450* C,T2 a1);
/*PARENT_LISTS*/T2 r450insert_count(T450* C);
/*FEATURE_CLAUSE_LIST*/void r430make(T430* C,T0* a1);
/*FEATURE_CLAUSE_LIST*/void r430get_started(T430* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r447make(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r447all_positions_in_error_handler(T447* C);
/*CREATION_CLAUSE_LIST*/T0* r447get_clause(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r447default_root(T447* C);
/*CREATION_CLAUSE_LIST*/void r447extra_expanded_check(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T338 r447start_position(T447* C);
/*CREATION_CLAUSE_LIST*/T0* r447root_creation_search(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r447check_for(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r447user_expanded_default_create_stamp(T447* C,T0* a1);
/*INDEX_LIST*/void r428make(T428* C,T0* a1);
/*GRAPH_NODE*/void r524make(T524* C,T0* a1);
/*GRAPH_NODE*/T2 r524recompute_run_time_set(T524* C,T2 a1);
/*GRAPH_NODE*/void r524id_extra_information(T524* C,T0* a1);
/*GRAPH_NODE*/void r524reset(T524* C);
/*GRAPH_NODE*/void r524collect_way_to(T524* C,T0* a1);
/*GRAPH_NODE*/T2 r524destination_count(T524* C);
/*GRAPH_NODE*/T2 r524run_time_set_add(T524* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T526*create526make(T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r526specialize_and_check(T526* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r526to_expression(T526* C);
/*NON_VOID_NO_DISPATCH*/void r526make(T526* C,T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r526simplify(T526* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r526once_function(T526* C);
/*NON_VOID_NO_DISPATCH*/T0* r526static_simplify(T526* C);
/*NON_VOID_NO_DISPATCH*/void r526inline_dynamic_dispatch_(T526* C,T0* a1,T0* a2);
/*NON_VOID_NO_DISPATCH*/T0* r526run_feature(T526* C);
/*NON_VOID_NO_DISPATCH*/T6 r526is_stored_in_some_local_variable(void);
/*NON_VOID_NO_DISPATCH*/void r526accept(T526* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r526collect(T526* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T338 r526start_position(T526* C);
/*NON_VOID_NO_DISPATCH*/T0* r526twin(T526* C);
/*NON_VOID_NO_DISPATCH*/T0* r526written_declaration_type_mark(void);
/*NON_VOID_NO_DISPATCH*/T6 r526use_current(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r526non_void_no_dispatch_type(T526* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T6 r526side_effect_free(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r526external_function(T526* C);
/*NON_VOID_NO_DISPATCH*/T0* r526resolve_in(T526* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r526to_instruction(T526* C);
/*AGENT_ARGS*/T6 r559is_equal(T559* C,T0* a1);
/*AGENT_ARGS*/void r559make(T559* C,T0* a1,T0* a2);
/*AGENT_ARGS*/T2 r559hash_code(T559* C);
/*EXTERNAL_FUNCTION*/void r400add_into_shared(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400inline_expression_1(T400* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T0* r400inline_expression_0(T400* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_FUNCTION*/void r400inline_dynamic_dispatch(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400specialize_signature_in(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400specialize_require_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400specialize_permissions(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400c_plus_plus_name(T400* C);
/*EXTERNAL_FUNCTION*/T0* r400specialized_ensure_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400external_name(T400* C);
/*EXTERNAL_FUNCTION*/T0* r400specialize_ensure_thru(T400* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r400specialized_require_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400true_or_false(T6 a1,T338 a2);
/*EXTERNAL_FUNCTION*/T0* r400try_to_undefine_aux(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r400make_external_routine(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400specialize_body_thru(T400* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r400specialize_body_in(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400integer_constant(T0* a1);
/*EXTERNAL_FUNCTION*/void r400set_rescue_compound(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400simplify(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400specialize_ensure_in(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400first_name(T400* C);
/*EXTERNAL_FUNCTION*/void r400pretty_print_names(T400* C);
/*EXTERNAL_FUNCTION*/void r400add_into(T400* C,T0* a1,T0* a2);
extern T0*oBC32any_copy_fs;
extern int fBC32any_copy_fs;
/*EXTERNAL_FUNCTION*/T0* r400any_copy_fs(void);
/*EXTERNAL_FUNCTION*/T6 r400same_signature(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400brand_new_run_feature_for(T400* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_FUNCTION*/void r400accept(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400try_to_undefine(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r400hook_collect(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400echo(void);
/*EXTERNAL_FUNCTION*/void r400init(T400* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_FUNCTION*/void r400inline_dynamic_dispatch_(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400change_ensure(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400names(T400* C);
/*EXTERNAL_FUNCTION*/T0* r400specialize_and_check(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400current_or_twin_init(T400* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_FUNCTION*/T0* r400merge_signature_thru(T400* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/void r400make_routine(T400* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/void r400collect(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400twin(T400* C);
/*EXTERNAL_FUNCTION*/T6 r400use_current(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400adapt_routine_body_for(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400collect_internals_handler(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r400pretty(T400* C,T2 a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400specialize_signature_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400new_run_feature_for(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T6 r400valid_redefinition(T400* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r400current_or_twin_init_no_body(T400* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/T0* r400specialize_require_in(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400add_into_(T400* C,T0* a1,T0* a2);
extern T0*oBC32clear_all_name;
extern int fBC32clear_all_name;
/*EXTERNAL_FUNCTION*/T0* r400clear_all_name(void);
/*EXTERNAL_FUNCTION*/void r400collect_body(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r400change_require(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T2 r400argument_rank_of(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T6 r400same_body_as(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400make(T400* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T6 r400side_effect_free(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T338 r400start_position(T400* C);
/*EXTERNAL_FUNCTION*/void r400obsolete_warning_check(T400* C,T0* a1,T338 a2);
extern T0*oBC32copy_name;
extern int fBC32copy_name;
/*EXTERNAL_FUNCTION*/T0* r400copy_name(void);
/*EXTERNAL_FUNCTION*/T0* r400obsolete_warning_check_memory(void);
/*EXTERNAL_FUNCTION*/void r400pretty_print_routine_body(T400* C,T2 a1);
extern T0*oBC635implicit_any;
extern int fBC635implicit_any;
/*ANONYMOUS_FEATURE_MIXER*/T0* r635implicit_any(void);
/*ANONYMOUS_FEATURE_MIXER*/void r635make(T635* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r635error_handler_show_resulting_client_list(T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r635remove_body(T635* C);
/*ANONYMOUS_FEATURE_MIXER*/void r635specialize_feature(T635* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r635build_precursor(T635* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r635set_body(T635* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/void r635add_local_definition(T635* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r635error_handler_add_export_positions(T635* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r635add_inherited_definition(T635* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/T0* r635result_type(T635* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r635specialize_precursor(T635* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ANONYMOUS_FEATURE_MIXER*/T0* r635formal_arg_list(T635* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r635export_status_for(T635* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r635specialize_signature(T635* C,T0* a1);
/*ABSOLUTE_FEATURE_NAME*/T6 r335is_equal(T335* C,T335 a1);
/*ABSOLUTE_FEATURE_NAME*/void r335make(T335* C,T0* a1,T0* a2);
/*ABSOLUTE_FEATURE_NAME*/T6 r335matches(T335* C,T0* a1,T0* a2);
/*RUN_FEATURE_2*/void r406compute_use_current(T406* C);
/*RUN_FEATURE_2*/void r406for(T406* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_2*/T6 r406need_c_function(T406* C);
/*RUN_FEATURE_2*/void r406accept(T406* C,T0* a1);
/*RUN_FEATURE_2*/void r406set_result_type(T406* C);
/*RUN_FEATURE_2*/T338 r406start_position(T406* C);
/*RUN_FEATURE_2*/T6 r406use_current(T406* C);
/*RUN_FEATURE_2*/void r406mapping_name_in(T406* C,T0* a1);
/*RUN_FEATURE_2*/void r406do_adapt(T406* C);
/*RUN_FEATURE_2*/T0* r406arguments(void);
/*RUN_FEATURE_2*/void r406adapt(T406* C);
/*RUN_FEATURE_2*/T0* r406feature_stamp(T406* C);
/*CECIL_ENTRY*/void r560make(T560* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CECIL_ENTRY*/T0* r560echo(void);
/*CECIL_ENTRY*/void r560on_echo(T560* C,T0* a1);
/*CECIL_ENTRY*/void r560get_started(T560* C,T0* a1);
/*CECIL_ENTRY*/T0* r560default_create_name(void);
/*CECIL_ENTRY*/T0* r560collect(T560* C,T0* a1);
/*CECIL_ENTRY*/T0* r560any_default_create_fs(void);
/*CECIL_ENTRY*/void r560inline_dynamic_dispatch(T560* C,T0* a1,T0* a2);
/*CECIL_ENTRY*/T0* r560anonymous_feature(T560* C);
/*STRING_RECYCLING_ITEM*/void r311set_item(T311* C,T0* a1);
/*STRING_RECYCLING_ITEM*/T0* r311item(T311* C);
/*STRING_RECYCLING_ITEM_SORTER*/T2 r714insert_index(T0* a1,T311 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r714lt(T311 a1,T311 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r714lte(T311 a1,T311 a2);
/*PROCESS_FACTORY*/void r523default_create(T523* C);
extern T0*oBC523default_group;
extern int fBC523default_group;
/*PROCESS_FACTORY*/T0* r523default_group(T523* C);
/*PROCESS_FACTORY*/T0* r523create_group(T523* C);
/*PROCESS_FACTORY*/void r523crash(T523* C);
/*PROCESS_FACTORY*/void r523not_yet_implemented(T523* C);
/*PROCESS_FACTORY*/T0* r523create_process(T523* C);
/*POSIX_PATH_NAME*/void r773remove_last(T773* C);
/*POSIX_PATH_NAME*/void r773make_empty(T773* C);
/*POSIX_PATH_NAME*/void r773start_join(T773* C,T0* a1,T2 a2);
/*POSIX_PATH_NAME*/void r773join_element(T773* C,T0* a1);
/*POSIX_PATH_NAME*/T2 r773start_join_to(T773* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r773drive_specification(void);
/*POSIX_PATH_NAME*/void r773end_join(T773* C);
/*POSIX_PATH_NAME*/void r773make_from_string(T773* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r773last(T773* C);
/*POSIX_PATH_NAME*/void r773add_last(T773* C,T0* a1);
/*POSIX_PATH_NAME*/T6 r773is_separator(T3 a1);
/*POSIX_PATH_NAME*/T6 r773is_absolute(T773* C);
/*POSIX_PATH_NAME*/void r773go_up(T773* C);
/*POSIX_PATH_NAME*/void r773make_current(T773* C);
/*POSIX_PATH_NAME*/T2 r773scan_element(T773* C,T2 a1,T0* a2);
/*POSIX_PATH_NAME*/T6 r773is_valid_path(T0* a1);
/*POSIX_PATH_NAME*/void r773join_to(T773* C,T0* a1);
/*POSIX_PATH_NAME*/void r773join(T773* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r773short_name(T773* C);
/*POSIX_PATH_NAME*/void r773join_element_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/void r773join_directory_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/T2 r773count(T773* C);
/*POSIX_PATH_NAME*/void r773make_root(T773* C);
/*CST_ATT_CHARACTER*/T0* r642specialized_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r642try_to_undefine_aux(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r642collect(T642* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r642specialize_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r642simplify(T642* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r642arguments(void);
/*CST_ATT_CHARACTER*/T0* r642specialized_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r642first_name(T642* C);
/*CST_ATT_CHARACTER*/T0* r642specialize_and_check(T642* C,T0* a1);
/*CST_ATT_CHARACTER*/void r642collect_body(T642* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r642names(T642* C);
/*CST_ATT_CHARACTER*/T0* r642specialize_require_in(T642* C,T0* a1);
/*CST_ATT_CHARACTER*/void r642add_into(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r642merge_signature_thru(T642* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_CHARACTER*/void r642make(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r642try_to_undefine(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r642add_into_(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r642new_run_feature_for(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r642valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T6 r642use_current(T0* a1);
/*CST_ATT_CHARACTER*/void r642obsolete_warning_check(T642* C,T0* a1,T338 a2);
/*CST_ATT_CHARACTER*/T0* r642change_ensure(T642* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r642brand_new_run_feature_for(T642* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_CHARACTER*/void r642pretty_print_names(T642* C);
/*CST_ATT_CHARACTER*/T0* r642specialize_permissions(T642* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/void r642pretty(T642* C,T2 a1,T6 a2);
/*CST_ATT_CHARACTER*/T6 r642same_body_as(T642* C,T0* a1);
/*CST_ATT_CHARACTER*/void r642inline_dynamic_dispatch(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T6 r642same_signature(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r642specialize_signature_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r642specialize_ensure_in(T642* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r642specialize_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_CHARACTER*/T0* r642twin(T642* C);
/*CST_ATT_CHARACTER*/void r642add_into_shared(T642* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r642inline_expression_0(T642* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_CHARACTER*/T6 r642valid_redefinition(T642* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T0* r642change_require(T642* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r642obsolete_warning_check_memory(void);
/*CST_ATT_CHARACTER*/T338 r642start_position(T642* C);
/*CST_ATT_CHARACTER*/void r642set_rescue_compound(T642* C,T0* a1);
/*CST_ATT_STRING*/T0* r650specialized_ensure_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r650try_to_undefine_aux(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r650collect(T650* C,T0* a1);
/*CST_ATT_STRING*/T0* r650specialize_require_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/void r650with(T650* C,T0* a1,T0* a2,T2 a3);
/*CST_ATT_STRING*/T0* r650simplify(T650* C,T0* a1);
/*CST_ATT_STRING*/T0* r650arguments(void);
/*CST_ATT_STRING*/T0* r650specialized_require_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r650first_name(T650* C);
/*CST_ATT_STRING*/T0* r650specialize_and_check(T650* C,T0* a1);
/*CST_ATT_STRING*/void r650collect_body(T650* C,T0* a1);
/*CST_ATT_STRING*/T0* r650names(T650* C);
/*CST_ATT_STRING*/T0* r650specialize_require_in(T650* C,T0* a1);
/*CST_ATT_STRING*/void r650add_into(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r650merge_signature_thru(T650* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_STRING*/void r650make(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r650try_to_undefine(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r650add_into_(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r650new_run_feature_for(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r650valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T6 r650use_current(T0* a1);
/*CST_ATT_STRING*/void r650obsolete_warning_check(T650* C,T0* a1,T338 a2);
/*CST_ATT_STRING*/T0* r650change_ensure(T650* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r650brand_new_run_feature_for(T650* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_STRING*/void r650pretty_print_names(T650* C);
/*CST_ATT_STRING*/T0* r650specialize_permissions(T650* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/void r650pretty(T650* C,T2 a1,T6 a2);
/*CST_ATT_STRING*/T6 r650same_body_as(T650* C,T0* a1);
/*CST_ATT_STRING*/void r650inline_dynamic_dispatch(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T6 r650same_signature(T650* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r650specialize_signature_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r650specialize_ensure_in(T650* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r650specialize_ensure_thru(T650* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_STRING*/T0* r650twin(T650* C);
/*CST_ATT_STRING*/T0* r650inline_expression_0(T650* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_STRING*/T6 r650valid_redefinition(T650* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T0* r650change_require(T650* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r650obsolete_warning_check_memory(void);
/*CST_ATT_STRING*/T338 r650start_position(T650* C);
/*CST_ATT_STRING*/void r650set_rescue_compound(T650* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561specialized_ensure_thru(T561* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r561specialize_signature_in(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561try_to_undefine_aux(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r561collect(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561specialize_require_thru(T561* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T6 r561empty_body_side_effect_free_effective_routine(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561simplify(T561* C,T0* a1);
/*ONCE_FUNCTION*/void r561pretty_print_routine_body(T561* C,T2 a1);
extern T0*oBC561type_std_output;
extern int fBC561type_std_output;
/*ONCE_FUNCTION*/T0* r561type_std_output(void);
/*ONCE_FUNCTION*/T0* r561specialized_require_thru(T561* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/void r561pretty_print_rescue(T561* C,T2 a1);
extern T0*oBC32flush_name;
extern int fBC32flush_name;
/*ONCE_FUNCTION*/T0* r561flush_name(void);
/*ONCE_FUNCTION*/T0* r561first_name(T561* C);
/*ONCE_FUNCTION*/T0* r561specialize_and_check(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561rescue_compound_in(T561* C,T0* a1);
/*ONCE_FUNCTION*/void r561collect_body(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561names(T561* C);
/*ONCE_FUNCTION*/T0* r561specialize_require_in(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r561inline_dynamic_dispatch_(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T6 r561no_rescue_no_local_expanded_in(T561* C,T0* a1);
/*ONCE_FUNCTION*/void r561add_into(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r561make_effective_routine(T561* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/void r561make_routine(T561* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r561merge_signature_thru(T561* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_FUNCTION*/void r561make(T561* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*ONCE_FUNCTION*/T0* r561try_to_undefine(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r561add_into_(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r561new_run_feature_for(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r561valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T6 r561use_current(T561* C,T0* a1);
/*ONCE_FUNCTION*/void r561obsolete_warning_check(T561* C,T0* a1,T338 a2);
/*ONCE_FUNCTION*/void r561init(T561* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r561change_ensure(T561* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r561brand_new_run_feature_for(T561* C,T0* a1,T0* a2,T6 a3);
/*ONCE_FUNCTION*/void r561pretty_print_once_or_do(T2 a1);
/*ONCE_FUNCTION*/void r561pretty_print_names(T561* C);
/*ONCE_FUNCTION*/T0* r561specialize_permissions(T561* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/void r561hook_collect(T561* C,T0* a1);
/*ONCE_FUNCTION*/void r561pretty(T561* C,T2 a1,T6 a2);
/*ONCE_FUNCTION*/T6 r561same_body_as(T561* C,T0* a1);
/*ONCE_FUNCTION*/void r561inline_dynamic_dispatch(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r561specialize_body_thru(T561* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T6 r561same_signature(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T338 r561sedb_trace_before_exit(T561* C);
/*ONCE_FUNCTION*/T0* r561specialize_signature_thru(T561* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r561specialize_ensure_in(T561* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r561specialize_ensure_thru(T561* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T0* r561twin(T561* C);
/*ONCE_FUNCTION*/void r561add_into_shared(T561* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r561accept(T561* C,T0* a1);
/*ONCE_FUNCTION*/T0* r561inline_expression_0(T561* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T6 r561valid_redefinition(T561* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r561change_require(T561* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r561obsolete_warning_check_memory(void);
/*ONCE_FUNCTION*/T338 r561start_position(T561* C);
/*ONCE_FUNCTION*/T0* r561specialize_body_in(T561* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T6 r561_P_336_same_body_as(T561* C,T0* a1);
/*CST_ATT_REAL*/T0* r655specialized_ensure_thru(T655* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r655try_to_undefine_aux(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r655collect(T655* C,T0* a1);
/*CST_ATT_REAL*/T0* r655specialize_require_thru(T655* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r655simplify(T655* C,T0* a1);
/*CST_ATT_REAL*/T0* r655arguments(void);
/*CST_ATT_REAL*/T0* r655specialized_require_thru(T655* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r655first_name(T655* C);
/*CST_ATT_REAL*/T0* r655specialize_and_check(T655* C,T0* a1);
/*CST_ATT_REAL*/void r655collect_body(T655* C,T0* a1);
/*CST_ATT_REAL*/T0* r655names(T655* C);
/*CST_ATT_REAL*/T0* r655specialize_require_in(T655* C,T0* a1);
/*CST_ATT_REAL*/void r655add_into(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r655merge_signature_thru(T655* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_REAL*/void r655make(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r655try_to_undefine(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r655add_into_(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r655new_run_feature_for(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r655valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T6 r655use_current(T0* a1);
/*CST_ATT_REAL*/void r655obsolete_warning_check(T655* C,T0* a1,T338 a2);
/*CST_ATT_REAL*/T0* r655change_ensure(T655* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r655brand_new_run_feature_for(T655* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_REAL*/void r655pretty_print_names(T655* C);
/*CST_ATT_REAL*/T0* r655specialize_permissions(T655* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/void r655pretty(T655* C,T2 a1,T6 a2);
/*CST_ATT_REAL*/T6 r655same_body_as(T655* C,T0* a1);
/*CST_ATT_REAL*/void r655inline_dynamic_dispatch(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T6 r655same_signature(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r655specialize_signature_thru(T655* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r655specialize_ensure_in(T655* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r655specialize_ensure_thru(T655* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_REAL*/T0* r655twin(T655* C);
/*CST_ATT_REAL*/void r655add_into_shared(T655* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r655inline_expression_0(T655* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_REAL*/T6 r655valid_redefinition(T655* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T0* r655change_require(T655* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r655obsolete_warning_check_memory(void);
/*CST_ATT_REAL*/T338 r655start_position(T655* C);
/*CST_ATT_REAL*/void r655set_rescue_compound(T655* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r652specialized_ensure_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r652try_to_undefine_aux(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r652collect(T652* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r652specialize_require_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/void r652pretty_constant_value(T652* C,T2 a1);
/*CST_ATT_BOOLEAN*/T0* r652simplify(T652* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r652arguments(void);
/*CST_ATT_BOOLEAN*/T0* r652specialized_require_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r652first_name(T652* C);
/*CST_ATT_BOOLEAN*/T0* r652specialize_and_check(T652* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r652collect_body(T652* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r652names(T652* C);
/*CST_ATT_BOOLEAN*/T0* r652specialize_require_in(T652* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r652add_into(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r652merge_signature_thru(T652* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_BOOLEAN*/void r652make(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r652try_to_undefine(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r652add_into_(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r652new_run_feature_for(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r652valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T6 r652use_current(T0* a1);
/*CST_ATT_BOOLEAN*/void r652obsolete_warning_check(T652* C,T0* a1,T338 a2);
/*CST_ATT_BOOLEAN*/T0* r652change_ensure(T652* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r652brand_new_run_feature_for(T652* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_BOOLEAN*/void r652pretty_print_names(T652* C);
/*CST_ATT_BOOLEAN*/T0* r652specialize_permissions(T652* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/void r652pretty(T652* C,T2 a1,T6 a2);
/*CST_ATT_BOOLEAN*/T6 r652same_body_as(T652* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r652inline_dynamic_dispatch(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T6 r652same_signature(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r652specialize_signature_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r652specialize_ensure_in(T652* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r652specialize_ensure_thru(T652* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_BOOLEAN*/T0* r652twin(T652* C);
/*CST_ATT_BOOLEAN*/void r652add_into_shared(T652* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r652inline_expression_0(T652* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_BOOLEAN*/T6 r652valid_redefinition(T652* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T0* r652change_require(T652* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r652obsolete_warning_check_memory(void);
/*CST_ATT_BOOLEAN*/T338 r652start_position(T652* C);
/*CST_ATT_BOOLEAN*/void r652set_rescue_compound(T652* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r653specialized_ensure_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r653specialize_signature_in(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r653try_to_undefine_aux(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r653collect(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r653specialize_require_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/void r653from_effective(T653* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*DEFERRED_FUNCTION*/T0* r653simplify(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/void r653pretty_print_routine_body(T2 a1);
/*DEFERRED_FUNCTION*/T0* r653specialized_require_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r653first_name(T653* C);
/*DEFERRED_FUNCTION*/T0* r653specialize_and_check(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r653names(T653* C);
/*DEFERRED_FUNCTION*/T0* r653specialize_require_in(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/void r653add_into(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r653make_routine(T653* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r653merge_signature_thru(T653* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_FUNCTION*/T0* r653try_to_undefine(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r653make(T653* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*DEFERRED_FUNCTION*/void r653add_into_(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r653new_run_feature_for(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r653valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T6 r653use_current(T0* a1);
/*DEFERRED_FUNCTION*/void r653obsolete_warning_check(T653* C,T0* a1,T338 a2);
/*DEFERRED_FUNCTION*/T0* r653change_ensure(T653* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r653brand_new_run_feature_for(T653* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_FUNCTION*/void r653pretty_print_names(T653* C);
/*DEFERRED_FUNCTION*/T0* r653specialize_permissions(T653* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/void r653pretty(T653* C,T2 a1,T6 a2);
/*DEFERRED_FUNCTION*/T6 r653same_body_as(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/void r653inline_dynamic_dispatch(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T6 r653same_signature(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r653specialize_signature_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r653specialize_ensure_in(T653* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r653specialize_ensure_thru(T653* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_FUNCTION*/T0* r653twin(T653* C);
/*DEFERRED_FUNCTION*/void r653add_into_shared(T653* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r653accept(T653* C,T0* a1);
/*DEFERRED_FUNCTION*/T6 r653valid_redefinition(T653* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r653change_require(T653* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r653obsolete_warning_check_memory(void);
/*DEFERRED_FUNCTION*/T338 r653start_position(T653* C);
/*DEFERRED_FUNCTION*/void r653set_rescue_compound(T653* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r648specialized_ensure_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r648current_or_twin_init_no_body(T648* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_signature_in(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r648try_to_undefine_aux(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648eiffel_parser(void);
/*EXTERNAL_PROCEDURE*/void r648collect(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_require_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r648simplify(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648pretty_print_routine_body(T648* C,T2 a1);
/*EXTERNAL_PROCEDURE*/T0* r648specialized_require_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/void r648make_external_routine(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648first_name(T648* C);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_and_check(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648collect_body(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r648names(T648* C);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_require_in(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648inline_dynamic_dispatch_(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648current_or_twin_init(T648* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_PROCEDURE*/void r648add_into(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r648make_routine(T648* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r648merge_signature_thru(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/void r648make(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_PROCEDURE*/T0* r648try_to_undefine(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r648add_into_(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648new_run_feature_for(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648echo(void);
/*EXTERNAL_PROCEDURE*/T0* r648result_type(void);
/*EXTERNAL_PROCEDURE*/void r648valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r648adapt_routine_body_for(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r648use_current(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648obsolete_warning_check(T648* C,T0* a1,T338 a2);
/*EXTERNAL_PROCEDURE*/void r648init(T648* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_PROCEDURE*/T2 r648argument_rank_of(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r648external_name(T648* C);
/*EXTERNAL_PROCEDURE*/T0* r648change_ensure(T648* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r648brand_new_run_feature_for(T648* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_PROCEDURE*/T0* r648collect_slice_copy(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648pretty_print_names(T648* C);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_permissions(T648* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/void r648hook_collect(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648pretty(T648* C,T2 a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T6 r648same_body_as(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r648inline_dynamic_dispatch(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_body_thru(T648* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T6 r648same_signature(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_signature_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_ensure_in(T648* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_ensure_thru(T648* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T0* r648twin(T648* C);
/*EXTERNAL_PROCEDURE*/void r648add_into_shared(T648* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r648accept(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r648valid_redefinition(T648* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r648change_require(T648* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r648obsolete_warning_check_memory(void);
/*EXTERNAL_PROCEDURE*/T338 r648start_position(T648* C);
/*EXTERNAL_PROCEDURE*/void r648set_rescue_compound(T648* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r648c_plus_plus_name(T648* C);
/*EXTERNAL_PROCEDURE*/T0* r648specialize_body_in(T648* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r651specialized_ensure_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r651specialize_signature_in(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651inline_instruction_n(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r651try_to_undefine_aux(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r651inline_proc_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T0* r651inline_proc_call_0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r651collect(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651specialize_require_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T6 r651empty_body_side_effect_free_effective_routine(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651simplify(T651* C,T0* a1);
/*E_PROCEDURE*/void r651pretty_print_routine_body(T651* C,T2 a1);
/*E_PROCEDURE*/T0* r651specialized_require_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/void r651pretty_print_rescue(T651* C,T2 a1);
/*E_PROCEDURE*/T0* r651first_name(T651* C);
/*E_PROCEDURE*/T0* r651specialize_and_check(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651inline_instruction_1(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r651inline_instruction_0(T651* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r651rescue_compound_in(T651* C,T0* a1);
/*E_PROCEDURE*/void r651collect_body(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651names(T651* C);
/*E_PROCEDURE*/T0* r651specialize_require_in(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_PROCEDURE*/void r651inline_dynamic_dispatch_(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r651no_rescue_no_local_expanded_in(T651* C,T0* a1);
/*E_PROCEDURE*/void r651add_into(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r651make_routine(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r651merge_signature_thru(T651* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_PROCEDURE*/void r651make(T651* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_PROCEDURE*/T0* r651try_to_undefine(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r651add_into_(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r651new_run_feature_for(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r651result_type(void);
/*E_PROCEDURE*/void r651valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T6 r651use_current(T651* C,T0* a1);
/*E_PROCEDURE*/void r651obsolete_warning_check(T651* C,T0* a1,T338 a2);
/*E_PROCEDURE*/void r651init(T651* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r651change_ensure(T651* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r651brand_new_run_feature_for(T651* C,T0* a1,T0* a2,T6 a3);
/*E_PROCEDURE*/void r651pretty_print_once_or_do(T2 a1);
/*E_PROCEDURE*/void r651pretty_print_names(T651* C);
/*E_PROCEDURE*/T0* r651specialize_permissions(T651* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r651left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r651pretty(T651* C,T2 a1,T6 a2);
/*E_PROCEDURE*/T6 r651same_body_as(T651* C,T0* a1);
/*E_PROCEDURE*/void r651inline_dynamic_dispatch(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r651specialize_body_thru(T651* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r651inline_proc_call_n(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T6 r651same_signature(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T338 r651sedb_trace_before_exit(T651* C);
/*E_PROCEDURE*/T0* r651specialize_signature_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r651specialize_ensure_in(T651* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r651specialize_ensure_thru(T651* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r651twin(T651* C);
/*E_PROCEDURE*/void r651add_into_shared(T651* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r651accept(T651* C,T0* a1);
/*E_PROCEDURE*/T0* r651left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r651valid_redefinition(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r651change_require(T651* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r651obsolete_warning_check_memory(void);
/*E_PROCEDURE*/T338 r651start_position(T651* C);
/*E_PROCEDURE*/T0* r651specialize_body_in(T651* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T6 r651_P_336_same_body_as(T651* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r649specialized_ensure_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r649try_to_undefine_aux(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r649collect(T649* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r649specialize_require_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r649simplify(T649* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r649arguments(void);
/*CST_ATT_INTEGER*/T0* r649specialized_require_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r649first_name(T649* C);
/*CST_ATT_INTEGER*/T0* r649specialize_and_check(T649* C,T0* a1);
/*CST_ATT_INTEGER*/void r649collect_body(T649* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r649names(T649* C);
/*CST_ATT_INTEGER*/T0* r649specialize_require_in(T649* C,T0* a1);
/*CST_ATT_INTEGER*/void r649add_into(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r649merge_signature_thru(T649* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_INTEGER*/void r649make(T649* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r649try_to_undefine(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r649add_into_(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r649new_run_feature_for(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r649valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T6 r649use_current(T0* a1);
/*CST_ATT_INTEGER*/void r649obsolete_warning_check(T649* C,T0* a1,T338 a2);
/*CST_ATT_INTEGER*/T0* r649change_ensure(T649* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r649brand_new_run_feature_for(T649* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_INTEGER*/void r649pretty_print_names(T649* C);
/*CST_ATT_INTEGER*/T0* r649specialize_permissions(T649* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/void r649pretty(T649* C,T2 a1,T6 a2);
/*CST_ATT_INTEGER*/T6 r649same_body_as(T649* C,T0* a1);
/*CST_ATT_INTEGER*/void r649inline_dynamic_dispatch(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T6 r649same_signature(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r649specialize_signature_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r649specialize_ensure_in(T649* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r649specialize_ensure_thru(T649* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_INTEGER*/T0* r649twin(T649* C);
/*CST_ATT_INTEGER*/void r649add_into_shared(T649* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r649inline_expression_0(T649* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_INTEGER*/T6 r649valid_redefinition(T649* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T0* r649change_require(T649* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r649obsolete_warning_check_memory(void);
/*CST_ATT_INTEGER*/T338 r649start_position(T649* C);
/*CST_ATT_INTEGER*/void r649set_rescue_compound(T649* C,T0* a1);
/*E_FUNCTION*/T0* r654specialized_ensure_thru(T654* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r654specialize_signature_in(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654try_to_undefine_aux(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r654collect(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654specialize_require_thru(T654* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T6 r654empty_body_side_effect_free_effective_routine(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654inline_eq_neq1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r654inline_eq_neq0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r654simplify(T654* C,T0* a1);
/*E_FUNCTION*/void r654pretty_print_routine_body(T654* C,T2 a1);
/*E_FUNCTION*/T0* r654specialized_require_thru(T654* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/void r654pretty_print_rescue(T654* C,T2 a1);
/*E_FUNCTION*/T0* r654first_name(T654* C);
/*E_FUNCTION*/T0* r654specialize_and_check(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654rescue_compound_in(T654* C,T0* a1);
/*E_FUNCTION*/void r654collect_body(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654names(T654* C);
/*E_FUNCTION*/T0* r654specialize_require_in(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_FUNCTION*/void r654inline_dynamic_dispatch_(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/T6 r654no_rescue_no_local_expanded_in(T654* C,T0* a1);
/*E_FUNCTION*/void r654add_into(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r654make_effective_routine(T654* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r654inline_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/void r654make_routine(T654* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r654merge_signature_thru(T654* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_FUNCTION*/void r654make(T654* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/T0* r654try_to_undefine(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r654add_into_(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r654new_run_feature_for(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r654inline_eq_neq0_(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/void r654valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T6 r654use_current(T654* C,T0* a1);
/*E_FUNCTION*/void r654obsolete_warning_check(T654* C,T0* a1,T338 a2);
/*E_FUNCTION*/void r654init(T654* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r654inline_expression_n(T654* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r654change_ensure(T654* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r654brand_new_run_feature_for(T654* C,T0* a1,T0* a2,T6 a3);
/*E_FUNCTION*/void r654pretty_print_once_or_do(T2 a1);
/*E_FUNCTION*/void r654pretty_print_names(T654* C);
/*E_FUNCTION*/T0* r654specialize_permissions(T654* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r654left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/void r654pretty(T654* C,T2 a1,T6 a2);
/*E_FUNCTION*/T6 r654same_body_as(T654* C,T0* a1);
/*E_FUNCTION*/void r654inline_dynamic_dispatch(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r654specialize_body_thru(T654* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T6 r654same_signature(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/T338 r654sedb_trace_before_exit(T654* C);
/*E_FUNCTION*/T0* r654specialize_signature_thru(T654* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r654specialize_ensure_in(T654* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r654specialize_ensure_thru(T654* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T0* r654twin(T654* C);
/*E_FUNCTION*/void r654add_into_shared(T654* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r654accept(T654* C,T0* a1);
/*E_FUNCTION*/T0* r654inline_expression_1(T654* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/T0* r654inline_expression_0(T654* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r654left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_FUNCTION*/T6 r654valid_redefinition(T654* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r654change_require(T654* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r654obsolete_warning_check_memory(void);
/*E_FUNCTION*/T338 r654start_position(T654* C);
/*E_FUNCTION*/T0* r654specialize_body_in(T654* C,T0* a1,T6 a2);
/*E_FUNCTION*/T6 r654_P_336_same_body_as(T654* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r645specialized_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r645specialize_signature_in(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r645try_to_undefine_aux(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r645collect(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r645specialize_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/void r645from_effective(T645* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*DEFERRED_PROCEDURE*/T0* r645simplify(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r645pretty_print_routine_body(T2 a1);
/*DEFERRED_PROCEDURE*/T0* r645specialized_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r645first_name(T645* C);
/*DEFERRED_PROCEDURE*/T0* r645specialize_and_check(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r645names(T645* C);
/*DEFERRED_PROCEDURE*/T0* r645specialize_require_in(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r645add_into(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r645make_routine(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r645merge_signature_thru(T645* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_PROCEDURE*/void r645make(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r645try_to_undefine(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r645add_into_(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r645new_run_feature_for(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r645result_type(void);
/*DEFERRED_PROCEDURE*/void r645valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T6 r645use_current(T0* a1);
/*DEFERRED_PROCEDURE*/void r645obsolete_warning_check(T645* C,T0* a1,T338 a2);
/*DEFERRED_PROCEDURE*/T0* r645change_ensure(T645* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r645brand_new_run_feature_for(T645* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_PROCEDURE*/void r645pretty_print_names(T645* C);
/*DEFERRED_PROCEDURE*/T0* r645specialize_permissions(T645* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/void r645pretty(T645* C,T2 a1,T6 a2);
/*DEFERRED_PROCEDURE*/T6 r645same_body_as(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r645inline_dynamic_dispatch(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T6 r645same_signature(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r645specialize_signature_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r645specialize_ensure_in(T645* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r645specialize_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_PROCEDURE*/T0* r645twin(T645* C);
/*DEFERRED_PROCEDURE*/void r645add_into_shared(T645* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r645accept(T645* C,T0* a1);
/*DEFERRED_PROCEDURE*/T6 r645valid_redefinition(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r645change_require(T645* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r645obsolete_warning_check_memory(void);
/*DEFERRED_PROCEDURE*/T338 r645start_position(T645* C);
/*DEFERRED_PROCEDURE*/void r645set_rescue_compound(T645* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644specialized_ensure_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r644specialize_signature_in(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644try_to_undefine_aux(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r644collect(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644specialize_require_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T6 r644empty_body_side_effect_free_effective_routine(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644simplify(T644* C,T0* a1);
/*ONCE_PROCEDURE*/void r644pretty_print_routine_body(T644* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r644specialized_require_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/void r644pretty_print_rescue(T644* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r644first_name(T644* C);
/*ONCE_PROCEDURE*/T0* r644specialize_and_check(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644rescue_compound_in(T644* C,T0* a1);
/*ONCE_PROCEDURE*/void r644collect_body(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644names(T644* C);
/*ONCE_PROCEDURE*/T0* r644specialize_require_in(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r644remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r644inline_dynamic_dispatch_(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T6 r644no_rescue_no_local_expanded_in(T644* C,T0* a1);
/*ONCE_PROCEDURE*/void r644add_into(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r644make_routine(T644* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r644merge_signature_thru(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_PROCEDURE*/void r644make(T644* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_PROCEDURE*/T0* r644try_to_undefine(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r644add_into_(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r644new_run_feature_for(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r644result_type(void);
/*ONCE_PROCEDURE*/void r644valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T6 r644use_current(T644* C,T0* a1);
/*ONCE_PROCEDURE*/void r644obsolete_warning_check(T644* C,T0* a1,T338 a2);
/*ONCE_PROCEDURE*/void r644init(T644* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r644change_ensure(T644* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r644brand_new_run_feature_for(T644* C,T0* a1,T0* a2,T6 a3);
/*ONCE_PROCEDURE*/void r644pretty_print_once_or_do(T2 a1);
/*ONCE_PROCEDURE*/void r644pretty_print_names(T644* C);
/*ONCE_PROCEDURE*/T0* r644specialize_permissions(T644* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/void r644pretty(T644* C,T2 a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r644same_body_as(T644* C,T0* a1);
/*ONCE_PROCEDURE*/void r644inline_dynamic_dispatch(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r644specialize_body_thru(T644* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T6 r644same_signature(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T338 r644sedb_trace_before_exit(T644* C);
/*ONCE_PROCEDURE*/T0* r644specialize_signature_thru(T644* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r644specialize_ensure_in(T644* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r644specialize_ensure_thru(T644* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T0* r644twin(T644* C);
/*ONCE_PROCEDURE*/void r644add_into_shared(T644* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r644accept(T644* C,T0* a1);
/*ONCE_PROCEDURE*/T6 r644valid_redefinition(T644* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r644change_require(T644* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r644obsolete_warning_check_memory(void);
/*ONCE_PROCEDURE*/T338 r644start_position(T644* C);
/*ONCE_PROCEDURE*/T0* r644specialize_body_in(T644* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r644_P_336_same_body_as(T644* C,T0* a1);
/*CST_ATT_UNIQUE*/T647*create647with(T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r647specialized_ensure_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r647try_to_undefine_aux(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r647collect(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r647specialize_require_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/void r647pretty_constant_value(T2 a1);
/*CST_ATT_UNIQUE*/void r647with(T647* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r647simplify(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r647arguments(void);
/*CST_ATT_UNIQUE*/T0* r647specialized_require_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r647first_name(T647* C);
/*CST_ATT_UNIQUE*/T0* r647specialize_and_check(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/void r647collect_body(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r647names(T647* C);
/*CST_ATT_UNIQUE*/T0* r647specialize_require_in(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/void r647add_into(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r647merge_signature_thru(T647* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_UNIQUE*/void r647make(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r647try_to_undefine(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r647add_into_(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r647new_run_feature_for(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r647valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC647counter;
/*CST_ATT_UNIQUE*/T6 r647use_current(T0* a1);
/*CST_ATT_UNIQUE*/void r647obsolete_warning_check(T647* C,T0* a1,T338 a2);
/*CST_ATT_UNIQUE*/T0* r647change_ensure(T647* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r647brand_new_run_feature_for(T647* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_UNIQUE*/void r647pretty_print_names(T647* C);
/*CST_ATT_UNIQUE*/T0* r647specialize_permissions(T647* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/void r647pretty(T647* C,T2 a1,T6 a2);
/*CST_ATT_UNIQUE*/T6 r647same_body_as(T647* C,T0* a1);
/*CST_ATT_UNIQUE*/void r647inline_dynamic_dispatch(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T6 r647same_signature(T647* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r647specialize_signature_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r647specialize_ensure_in(T647* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r647specialize_ensure_thru(T647* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_UNIQUE*/T0* r647twin(T647* C);
/*CST_ATT_UNIQUE*/T0* r647inline_expression_0(T647* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_UNIQUE*/T6 r647valid_redefinition(T647* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r647change_require(T647* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r647obsolete_warning_check_memory(void);
/*CST_ATT_UNIQUE*/T338 r647start_position(T647* C);
/*CST_ATT_UNIQUE*/void r647set_rescue_compound(T647* C,T0* a1);
/*RENAME_LIST*/void r690check_level_2(T690* C,T0* a1);
/*RENAME_LIST*/void r690make(T690* C,T0* a1);
/*RENAME_LIST*/T0* r690name_in_child(T690* C,T0* a1);
/*RENAME_LIST*/T6 r690is_target_of_rename(T690* C,T0* a1);
/*RENAME_LIST*/void r690initialize_and_check_level_1(T690* C);
/*RENAME_LIST*/T0* r690name_in_parent(T690* C,T0* a1);
/*RENAME_LIST*/T0* r690item(T690* C,T2 a1);
/*RENAME_LIST*/T2 r690count(T690* C);
/*WHEN_ITEM_2*/void r732make(T732* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r732pretty(T732* C,T2 a1);
/*WHEN_ITEM_2*/T0* r732specialize_and_check_integer(T732* C,T0* a1);
/*WHEN_ITEM_2*/void r732set_lower_upper_manifest_expression(T732* C,T0* a1);
/*WHEN_ITEM_2*/void r732validity_check(T732* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r732specialize_in(T732* C,T0* a1);
/*WHEN_ITEM_2*/void r732character_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r732init(T732* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r732set_values_integer(T732* C);
/*WHEN_ITEM_2*/T2 r732upper_value(T732* C);
/*WHEN_ITEM_2*/void r732integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r732force_internal_integer_values(T732* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r732specialize_thru(T732* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T6 r732validity_check_continued(T732* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r732specialize_and_check_character(T732* C,T0* a1);
/*WHEN_ITEM_2*/T0* r732adapt_for(T732* C,T0* a1);
/*WHEN_ITEM_2*/T2 r732lower_value(T732* C);
/*WHEN_ITEM_2*/void r732collect(T732* C,T0* a1);
/*WHEN_ITEM_2*/void r732validity_check_continued_when_item_2(T732* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r732validity_check_continued_when_item_1(T732* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r732manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T338 r732start_position(T732* C);
/*WHEN_ITEM_2*/T2 r732integer_value_of(T0* a1);
/*WHEN_ITEM_2*/T0* r732twin(T732* C);
/*WHEN_ITEM_2*/void r732set_values_character(T732* C);
/*WHEN_ITEM_2*/T2 r732locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_2*/T6 r732side_effect_free(T732* C,T0* a1);
/*WHEN_ITEM_2*/void r732lower_upper_value_check(T732* C);
/*WHEN_ITEM_2*/void r732validity_check_continued_(T732* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r732force_internal_character_values(T732* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T6 r732match_value(T732* C,T2 a1);
/*WHEN_ITEM_2*/T0* r732compute_values(T732* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r732explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r732current_or_twin_init(T732* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379set_manifest_expression(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379make(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379pretty(T379* C,T2 a1);
/*WHEN_ITEM_1*/T0* r379specialize_and_check_integer(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379validity_check(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r379specialize_in(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379character_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379set_expression_value(T379* C,T2 a1);
/*WHEN_ITEM_1*/void r379integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379force_internal_integer_values(T379* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r379specialize_thru(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T2 r379expression_value(T379* C);
/*WHEN_ITEM_1*/T6 r379validity_check_continued(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r379specialize_and_check_character(T379* C,T0* a1);
/*WHEN_ITEM_1*/T0* r379adapt_for(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379collect(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379validity_check_continued_when_item_2(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r379validity_check_continued_when_item_1(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r379manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T338 r379start_position(T379* C);
/*WHEN_ITEM_1*/T2 r379integer_value_of(T0* a1);
/*WHEN_ITEM_1*/void r379set_expression_value_character(T379* C);
/*WHEN_ITEM_1*/T0* r379twin(T379* C);
/*WHEN_ITEM_1*/T2 r379locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_1*/T6 r379side_effect_free(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379validity_check_continued_(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r379force_internal_character_values(T379* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T6 r379match_value(T379* C,T2 a1);
/*WHEN_ITEM_1*/T0* r379compute_values(T379* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379set_expression_value_integer(T379* C);
/*WHEN_ITEM_1*/void r379explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r379current_or_twin_init(T379* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r678simplify_add(T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/T0* r678specialize_and_check(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r678to_expression(T678* C);
/*COMPOUND_EXPRESSION*/T0* r678simplify(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r678static_simplify(T678* C);
/*COMPOUND_EXPRESSION*/void r678inline_dynamic_dispatch_(T678* C,T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/void r678safety_check(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r678set_list(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T2 r678upper(T678* C);
/*COMPOUND_EXPRESSION*/T6 r678is_stored_in_some_local_variable(void);
/*COMPOUND_EXPRESSION*/void r678accept(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r678adapt_for(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r678from_list(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r678collect(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T338 r678start_position(T678* C);
/*COMPOUND_EXPRESSION*/T0* r678twin(T678* C);
/*COMPOUND_EXPRESSION*/T0* r678written_declaration_type_mark(void);
/*COMPOUND_EXPRESSION*/T6 r678use_current(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r678crash(T678* C);
/*COMPOUND_EXPRESSION*/T0* r678non_void_no_dispatch_type(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T6 r678side_effect_free(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r678not_yet_implemented(T678* C);
/*COMPOUND_EXPRESSION*/T0* r678resolve_in(T678* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r678to_instruction(T678* C);
/*CREATE_WRITABLE*/T0* r668specialize_and_check(T668* C,T0* a1);
/*CREATE_WRITABLE*/T0* r668to_expression(T668* C);
/*CREATE_WRITABLE*/void r668make(T668* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r668pretty(T668* C,T2 a1);
/*CREATE_WRITABLE*/T0* r668simplify(T668* C,T0* a1);
/*CREATE_WRITABLE*/T6 r668extra_bracket_flag(T668* C);
/*CREATE_WRITABLE*/void r668validity_check(T668* C,T0* a1);
/*CREATE_WRITABLE*/T0* r668static_simplify(T668* C);
/*CREATE_WRITABLE*/T0* r668specialize_in(T668* C,T0* a1);
/*CREATE_WRITABLE*/void r668inline_dynamic_dispatch_(T668* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r668safety_check(T668* C,T0* a1);
/*CREATE_WRITABLE*/void r668init(T668* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T6 r668is_result(T668* C);
/*CREATE_WRITABLE*/T2 r668precedence(T668* C);
/*CREATE_WRITABLE*/T0* r668specialize_thru(T668* C,T0* a1,T0* a2,T0* a3);
/*CREATE_WRITABLE*/T6 r668is_stored_in_some_local_variable(void);
/*CREATE_WRITABLE*/void r668accept(T668* C,T0* a1);
/*CREATE_WRITABLE*/T0* r668adapt_for(T668* C,T0* a1);
/*CREATE_WRITABLE*/T0* r668collect(T668* C,T0* a1);
/*CREATE_WRITABLE*/void r668pretty_target(T668* C,T2 a1);
/*CREATE_WRITABLE*/T338 r668start_position(T668* C);
/*CREATE_WRITABLE*/T0* r668twin(T668* C);
/*CREATE_WRITABLE*/T0* r668written_declaration_type_mark(void);
/*CREATE_WRITABLE*/T6 r668use_current(T668* C,T0* a1);
/*CREATE_WRITABLE*/void r668bracketed_pretty(T668* C,T2 a1);
/*CREATE_WRITABLE*/T0* r668non_void_no_dispatch_type(T0* a1);
/*CREATE_WRITABLE*/T6 r668side_effect_free(T668* C,T0* a1);
/*CREATE_WRITABLE*/void r668make_specialized(T668* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T0* r668resolve_in(T668* C,T0* a1);
/*CREATE_WRITABLE*/T0* r668to_instruction(T668* C);
/*CREATE_WRITABLE*/T0* r668current_or_twin_init(T668* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/T0* r673specialize_and_check(T673* C,T0* a1);
/*CLOSED_OPERAND*/T0* r673to_expression(T673* C);
/*CLOSED_OPERAND*/void r673make(T673* C,T2 a1,T0* a2);
/*CLOSED_OPERAND*/void r673pretty(T673* C,T2 a1);
/*CLOSED_OPERAND*/T0* r673simplify(T673* C,T0* a1);
/*CLOSED_OPERAND*/T6 r673extra_bracket_flag(T673* C);
/*CLOSED_OPERAND*/T0* r673static_simplify(T673* C);
/*CLOSED_OPERAND*/T0* r673specialize_in(T673* C,T0* a1);
/*CLOSED_OPERAND*/void r673inline_dynamic_dispatch_(T673* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/void r673safety_check(T673* C,T0* a1);
/*CLOSED_OPERAND*/T6 r673is_result(T673* C);
/*CLOSED_OPERAND*/T2 r673precedence(T673* C);
/*CLOSED_OPERAND*/T0* r673specialize_thru(T673* C,T0* a1,T0* a2,T0* a3);
/*CLOSED_OPERAND*/T6 r673is_static(T673* C);
/*CLOSED_OPERAND*/T6 r673is_stored_in_some_local_variable(void);
/*CLOSED_OPERAND*/void r673accept(T673* C,T0* a1);
/*CLOSED_OPERAND*/T0* r673adapt_for(T673* C,T0* a1);
/*CLOSED_OPERAND*/T0* r673declaration_type(T673* C);
/*CLOSED_OPERAND*/T0* r673collect(T673* C,T0* a1);
/*CLOSED_OPERAND*/T6 r673is_current(T673* C);
/*CLOSED_OPERAND*/void r673pretty_target(T673* C,T2 a1);
/*CLOSED_OPERAND*/T0* r673twin(T673* C);
/*CLOSED_OPERAND*/T0* r673written_declaration_type_mark(void);
/*CLOSED_OPERAND*/T6 r673use_current(T673* C,T0* a1);
/*CLOSED_OPERAND*/void r673bracketed_pretty(T673* C,T2 a1);
/*CLOSED_OPERAND*/T6 r673is_void(T673* C);
/*CLOSED_OPERAND*/T0* r673non_void_no_dispatch_type(T673* C,T0* a1);
/*CLOSED_OPERAND*/T6 r673side_effect_free(T673* C,T0* a1);
/*CLOSED_OPERAND*/T6 r673is_manifest_string(T673* C);
/*CLOSED_OPERAND*/T6 r673is_implicit_current(T673* C);
/*CLOSED_OPERAND*/T0* r673resolve_in(T673* C,T0* a1);
/*CLOSED_OPERAND*/T0* r673to_instruction(T673* C);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_and_check(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413to_expression(T413* C);
/*NO_INVARIANT_WRAPPER*/void r413make(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413simplify(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_in(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/void r413inline_dynamic_dispatch_(T413* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/void r413safety_check(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_thru(T413* C,T0* a1,T0* a2,T0* a3);
/*NO_INVARIANT_WRAPPER*/void r413accept(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413adapt_for(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413collect(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r413end_mark_comment(T413* C);
/*NO_INVARIANT_WRAPPER*/T338 r413start_position(T413* C);
/*NO_INVARIANT_WRAPPER*/T0* r413twin(T413* C);
/*NO_INVARIANT_WRAPPER*/T6 r413use_current(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r413side_effect_free(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413inline_dynamic_dispatch(T413* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/T0* r413to_instruction(T413* C);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_without_checks(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413current_or_twin_init(T413* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/void r733make(T733* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/T0* r733simplify(T733* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECTOR*/T0* r733strings(void);
/*MANIFEST_STRING_INSPECTOR*/T0* r733inline_inspect(T733* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T338 a6);
/*MANIFEST_STRING_INSPECTOR*/T6 r733has_empty(T733* C);
/*FAKE_ARGUMENT*/T0* r356to_expression(T356* C);
/*FAKE_ARGUMENT*/void r356make(T356* C,T0* a1,T338 a2,T0* a3,T2 a4);
/*FAKE_ARGUMENT*/T0* r356static_simplify(T356* C);
/*FAKE_ARGUMENT*/T0* r356specialize_in(T356* C,T0* a1);
/*FAKE_ARGUMENT*/void r356inline_dynamic_dispatch_(T356* C,T0* a1,T0* a2);
/*FAKE_ARGUMENT*/T6 r356is_stored_in_some_local_variable(void);
/*FAKE_ARGUMENT*/void r356accept(T356* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r356collect(T356* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r356twin(T356* C);
/*FAKE_ARGUMENT*/T0* r356written_declaration_type_mark(void);
/*FAKE_ARGUMENT*/T6 r356use_current(T0* a1);
/*FAKE_ARGUMENT*/T0* r356non_void_no_dispatch_type(T0* a1);
/*FAKE_ARGUMENT*/T6 r356side_effect_free(T0* a1);
/*FAKE_ARGUMENT*/T0* r356resolve_in(T356* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r356to_instruction(T356* C);
/*PROCESS_POSIX*/void r769make(T769* C);
/*PROCESS_POSIX*/T6 r769is_finished(T769* C);
/*PROCESS_POSIX*/void r769cleanup_streams(T769* C);
/*PROCESS_POSIX*/T2 r769id(T769* C);
/*PROCESS_POSIX*/void r769do_execute(T769* C,T8 a1,T8 a2,T6 a3,T8 a4);
/*PROCESS_POSIX*/void r769do_cleanup(T769* C);
/*PROCESS_POSIX*/void r769execute_command_line(T769* C,T0* a1,T6 a2);
/*PROCESS_POSIX*/void r769dispose(T769* C);
/*PROCESS_POSIX*/T6 r769is_child(T769* C);
/*PROCESS_POSIX*/void r769wait(T769* C);
/*PROCESS_WIN32*/void r770make(T770* C);
/*PROCESS_WIN32*/T6 r770is_finished(T770* C);
/*PROCESS_WIN32*/void r770cleanup_streams(T770* C);
/*PROCESS_WIN32*/T2 r770handle(T770* C);
/*PROCESS_WIN32*/void r770do_execute(T770* C,T8 a1,T6 a2);
/*PROCESS_WIN32*/void r770do_cleanup(T770* C);
/*PROCESS_WIN32*/void r770execute_command_line(T770* C,T0* a1,T6 a2);
/*PROCESS_WIN32*/void r770dispose(T770* C);
/*PROCESS_WIN32*/void r770wait(T770* C);
/*PROCESS_NONE*/void r771make(T771* C);
/*PROCESS_NONE*/void r771execute_command_line(T771* C,T0* a1,T6 a2);
/*PROCESS_GROUP_POSIX*/void r766make(T766* C);
/*PROCESS_GROUP_POSIX*/void r766unregister(T766* C,T0* a1);
/*PROCESS_GROUP_POSIX*/void r766register(T766* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r767make(T767* C);
/*PROCESS_GROUP_WIN32*/void r767unregister(T767* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r767register(T767* C,T0* a1);
/*TUPLE_STRING_POOL*/void r823count_states(T823* C);
extern T0*oBC824counter;
/*TUPLE_STRING_POOL*/void r823make_transitions_array(T823* C);
extern T0*oBC824transition_memory;
extern int fBC824transition_memory;
/*TUPLE_STRING_POOL*/T0* r823transition_memory(void);
/*TUPLE_STRING_POOL*/T2 r823external_state(T823* C,T2 a1);
/*TUPLE_STRING_POOL*/T2 r823the_final_state(T823* C,T0* a1,T2 a2,T2 a3);
/*TUPLE_STRING_POOL*/void r823externalize_tags(T823* C,T0* a1);
/*TUPLE_STRING_POOL*/void r823set_state(T823* C,T2 a1,T2 a2,T3 a3);
/*TUPLE_STRING_POOL*/T2 r823state(T823* C,T2 a1,T3 a2);
/*TUPLE_STRING_POOL*/void r823compile_headers(T823* C);
/*TUPLE_STRING_POOL*/void r823from_collection(T823* C,T0* a1);
/*TUPLE_STRING_POOL*/T0* r823transition(T823* C,T2 a1);
/*COUNTER*/void r337next(T337* C);
/*STD_INPUT*/void r60make(T60* C);
/*MICROSOFT_PATH_NAME*/void r775remove_last(T775* C);
/*MICROSOFT_PATH_NAME*/void r775make_empty(T775* C);
/*MICROSOFT_PATH_NAME*/void r775start_join(T775* C,T0* a1,T2 a2);
/*MICROSOFT_PATH_NAME*/void r775join_element(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T2 r775start_join_to(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r775drive_specification(T775* C);
/*MICROSOFT_PATH_NAME*/void r775end_join(T775* C);
/*MICROSOFT_PATH_NAME*/void r775make_from_string(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r775last(T775* C);
/*MICROSOFT_PATH_NAME*/void r775add_last(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T6 r775is_separator(T3 a1);
/*MICROSOFT_PATH_NAME*/T6 r775is_absolute(T775* C);
/*MICROSOFT_PATH_NAME*/void r775go_up(T775* C);
/*MICROSOFT_PATH_NAME*/void r775make_current(T775* C);
/*MICROSOFT_PATH_NAME*/T2 r775scan_element(T775* C,T2 a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T6 r775is_valid_path(T0* a1);
/*MICROSOFT_PATH_NAME*/void r775join_to(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r775join(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r775to_string(T775* C);
/*MICROSOFT_PATH_NAME*/T0* r775short_name(T775* C);
/*MICROSOFT_PATH_NAME*/void r775join_element_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/void r775join_directory_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T2 r775count(T775* C);
/*MICROSOFT_PATH_NAME*/void r775make_root(T775* C);
/*MICROSOFT_PATH_NAME*/void r775_P_774_join_element(T775* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r775_P_772_end_join(T775* C);
/*UTF8_PARSER*/void r736decode(T736* C,T0* a1,T0* a2);
/*SEDB*/T660*create660make(T338 a1,T3 a2);
/*SEDB*/T0* r660to_expression(T660* C);
/*SEDB*/void r660make(T660* C,T338 a1,T3 a2);
/*SEDB*/T0* r660simplify(T660* C,T0* a1);
/*SEDB*/void r660inline_dynamic_dispatch_(T660* C,T0* a1,T0* a2);
/*SEDB*/void r660accept(T660* C,T0* a1);
/*SEDB*/T6 r660use_current(T0* a1);
/*SEDB*/T6 r660side_effect_free(T0* a1);
/*SEDB*/T0* r660inline_dynamic_dispatch(T660* C,T0* a1,T0* a2);
/*SEDB*/T0* r660to_instruction(T660* C);
/*NO_DISPATCH*/T0* r666specialize_and_check(T666* C,T0* a1);
/*NO_DISPATCH*/T0* r666to_expression(T666* C);
/*NO_DISPATCH*/void r666make(T666* C,T0* a1,T0* a2,T0* a3);
/*NO_DISPATCH*/T0* r666simplify(T666* C,T0* a1);
/*NO_DISPATCH*/T0* r666static_simplify(T666* C);
/*NO_DISPATCH*/void r666inline_dynamic_dispatch_(T666* C,T0* a1,T0* a2);
/*NO_DISPATCH*/void r666safety_check(T666* C,T0* a1);
/*NO_DISPATCH*/T6 r666is_result(T666* C);
/*NO_DISPATCH*/T6 r666is_stored_in_some_local_variable(void);
/*NO_DISPATCH*/void r666accept(T666* C,T0* a1);
/*NO_DISPATCH*/T0* r666adapt_for(T666* C,T0* a1);
/*NO_DISPATCH*/T0* r666collect(T666* C,T0* a1);
/*NO_DISPATCH*/T338 r666start_position(T666* C);
/*NO_DISPATCH*/T0* r666twin(T666* C);
/*NO_DISPATCH*/T0* r666written_declaration_type_mark(void);
/*NO_DISPATCH*/T6 r666use_current(T666* C,T0* a1);
/*NO_DISPATCH*/T0* r666non_void_no_dispatch_type(T666* C,T0* a1);
/*NO_DISPATCH*/T6 r666side_effect_free(T0* a1);
/*NO_DISPATCH*/T0* r666resolve_in(T666* C,T0* a1);
/*NO_DISPATCH*/T0* r666to_instruction(T666* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670specialize_and_check(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670to_expression(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r670make(T670* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670simplify(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r670set_tag(T670* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670static_simplify(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r670inline_dynamic_dispatch_(T670* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r670safety_check(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r670is_result(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r670is_static(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r670is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r670accept(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670adapt_for(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670collect(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T338 r670start_position(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670twin(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r670use_current(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r670side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670tag(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670resolve_in(T670* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r670to_instruction(T670* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671specialize_and_check(T671* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671to_expression(T671* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r671make(T671* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671simplify(T671* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671static_simplify(T671* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r671inline_dynamic_dispatch_(T671* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r671is_result(T671* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r671is_static(T671* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r671is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r671accept(T671* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T338 r671start_position(T671* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671twin(T671* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r671use_current(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671non_void_no_dispatch_type(T671* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r671side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671resolve_in(T671* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r671to_instruction(T671* C);
/*VOID_CALL*/T674*create674make(T338 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r674specialize_and_check(T674* C,T0* a1);
/*VOID_CALL*/T0* r674to_expression(T674* C);
/*VOID_CALL*/void r674make(T674* C,T338 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r674simplify(T674* C,T0* a1);
/*VOID_CALL*/T0* r674static_simplify(T674* C);
/*VOID_CALL*/void r674inline_dynamic_dispatch_(T674* C,T0* a1,T0* a2);
/*VOID_CALL*/void r674safety_check(T674* C,T0* a1);
/*VOID_CALL*/T6 r674is_stored_in_some_local_variable(void);
/*VOID_CALL*/void r674accept(T674* C,T0* a1);
/*VOID_CALL*/T0* r674declaration_type(T674* C);
/*VOID_CALL*/T0* r674twin(T674* C);
/*VOID_CALL*/T0* r674written_declaration_type_mark(void);
/*VOID_CALL*/T6 r674use_current(T0* a1);
/*VOID_CALL*/T0* r674non_void_no_dispatch_type(T0* a1);
/*VOID_CALL*/T6 r674side_effect_free(T0* a1);
/*VOID_CALL*/T0* r674resolve_in(T674* C,T0* a1);
/*VOID_CALL*/T0* r674to_instruction(T674* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T677*create677make(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677specialize_and_check(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677to_expression(T677* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r677make(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677simplify(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677static_simplify(T677* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r677inline_dynamic_dispatch_(T677* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r677safety_check(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r677is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r677accept(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677collect(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T338 r677start_position(T677* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677twin(T677* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r677use_current(T677* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r677side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677resolve_in(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r677to_instruction(T677* C);
/*INTERNAL_LOCAL2*/T669*create669make(T338 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r669specialize_and_check(T669* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r669to_expression(T669* C);
/*INTERNAL_LOCAL2*/void r669make(T669* C,T338 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r669simplify(T669* C,T0* a1);
/*INTERNAL_LOCAL2*/void r669set_tag(T669* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r669static_simplify(T669* C);
/*INTERNAL_LOCAL2*/void r669inline_dynamic_dispatch_(T669* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r669tagged_tag(T669* C,T0* a1);
/*INTERNAL_LOCAL2*/T6 r669is_stored_in_some_local_variable(void);
/*INTERNAL_LOCAL2*/void r669accept(T669* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r669declaration_type(T669* C);
/*INTERNAL_LOCAL2*/T0* r669collect(T669* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r669twin(T669* C);
/*INTERNAL_LOCAL2*/T0* r669written_declaration_type_mark(T669* C);
/*INTERNAL_LOCAL2*/T6 r669use_current(T0* a1);
/*INTERNAL_LOCAL2*/T0* r669non_void_no_dispatch_type(T0* a1);
/*INTERNAL_LOCAL2*/T6 r669side_effect_free(T0* a1);
/*INTERNAL_LOCAL2*/T0* r669resolve_in(T669* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r669to_instruction(T669* C);
/*UNUSED_EXPRESSION*/T663*create663make(T0* a1);
/*UNUSED_EXPRESSION*/T0* r663to_expression(T663* C);
/*UNUSED_EXPRESSION*/void r663make(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r663simplify(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/void r663inline_dynamic_dispatch_(T663* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/void r663safety_check(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/void r663accept(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r663adapt_for(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r663collect(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/T338 r663start_position(T663* C);
/*UNUSED_EXPRESSION*/T6 r663use_current(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/T6 r663side_effect_free(T663* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r663inline_dynamic_dispatch(T663* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/T0* r663to_instruction(T663* C);
/*NATURAL_CONSTANT*/T0* r667to_expression(T667* C);
/*NATURAL_CONSTANT*/void r667make(T667* C,uint64_t a1,T338 a2);
/*NATURAL_CONSTANT*/void r667pretty(T667* C,T2 a1);
/*NATURAL_CONSTANT*/T0* r667simplify(T667* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r667static_simplify(T667* C);
/*NATURAL_CONSTANT*/void r667inline_dynamic_dispatch_(T667* C,T0* a1,T0* a2);
/*NATURAL_CONSTANT*/T6 r667is_stored_in_some_local_variable(void);
/*NATURAL_CONSTANT*/void r667accept(T667* C,T0* a1);
/*NATURAL_CONSTANT*/void r667with(T667* C,uint64_t a1,T338 a2,T0* a3);
/*NATURAL_CONSTANT*/T0* r667result_type(T667* C);
/*NATURAL_CONSTANT*/T0* r667declaration_type(T667* C);
/*NATURAL_CONSTANT*/T0* r667collect(T667* C,T0* a1);
/*NATURAL_CONSTANT*/void r667pretty_target(T667* C,T2 a1);
/*NATURAL_CONSTANT*/T0* r667twin(T667* C);
/*NATURAL_CONSTANT*/T0* r667written_declaration_type_mark(void);
/*NATURAL_CONSTANT*/T6 r667use_current(T0* a1);
/*NATURAL_CONSTANT*/void r667bracketed_pretty(T667* C,T2 a1);
/*NATURAL_CONSTANT*/T0* r667non_void_no_dispatch_type(T667* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r667to_string(T667* C);
/*NATURAL_CONSTANT*/T6 r667side_effect_free(T0* a1);
/*NATURAL_CONSTANT*/void r667append_in(T667* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r667resolve_in(T667* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r667to_instruction(T667* C);
/*NATURAL_CONSTANT*/void r667_P_372_pretty_target(T667* C,T2 a1);
/*NULL_POINTER*/T0* r675specialize_and_check(T675* C,T0* a1);
/*NULL_POINTER*/T0* r675to_expression(T675* C);
/*NULL_POINTER*/void r675make(T675* C,T338 a1,T0* a2);
/*NULL_POINTER*/T0* r675simplify(T675* C,T0* a1);
/*NULL_POINTER*/T0* r675static_simplify(T675* C);
/*NULL_POINTER*/void r675inline_dynamic_dispatch_(T675* C,T0* a1,T0* a2);
/*NULL_POINTER*/T6 r675is_stored_in_some_local_variable(void);
/*NULL_POINTER*/void r675accept(T675* C,T0* a1);
extern T0*oBC675declaration_type;
extern int fBC675declaration_type;
/*NULL_POINTER*/T0* r675declaration_type(void);
/*NULL_POINTER*/T0* r675twin(T675* C);
/*NULL_POINTER*/T0* r675written_declaration_type_mark(void);
/*NULL_POINTER*/T6 r675use_current(T0* a1);
/*NULL_POINTER*/T0* r675non_void_no_dispatch_type(T0* a1);
/*NULL_POINTER*/T6 r675side_effect_free(T0* a1);
/*NULL_POINTER*/T0* r675resolve_in(T0* a1);
/*NULL_POINTER*/T0* r675to_instruction(T675* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T656*create656make(T338 a1,T0* a2,T2 a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r656to_expression(T656* C);
/*RUN_TIME_ERROR_INSTRUCTION*/void r656make(T656* C,T338 a1,T0* a2,T2 a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r656simplify(T656* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/void r656inline_dynamic_dispatch_(T656* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/void r656accept(T656* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r656error_name(T656* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r656use_current(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r656side_effect_free(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r656inline_dynamic_dispatch(T656* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r656to_instruction(T656* C);
/*EXCEPTIONS*/T0* r329name_of_exception(T2 a1);
/*IMPLICIT_CAST*/T0* r525specialize_and_check(T525* C,T0* a1);
/*IMPLICIT_CAST*/T0* r525to_expression(T525* C);
/*IMPLICIT_CAST*/void r525make(T525* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/void r525pretty(T525* C,T2 a1);
/*IMPLICIT_CAST*/T0* r525simplify(T525* C,T0* a1);
/*IMPLICIT_CAST*/T6 r525extra_bracket_flag(T525* C);
/*IMPLICIT_CAST*/T0* r525static_simplify(T525* C);
/*IMPLICIT_CAST*/void r525inline_dynamic_dispatch_(T525* C,T0* a1,T0* a2);
/*IMPLICIT_CAST*/void r525safety_check(T525* C,T0* a1);
/*IMPLICIT_CAST*/T6 r525is_result(T525* C);
/*IMPLICIT_CAST*/T2 r525precedence(T525* C);
/*IMPLICIT_CAST*/T0* r525specialize_thru(T525* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/T6 r525is_static(T525* C);
/*IMPLICIT_CAST*/T6 r525is_stored_in_some_local_variable(void);
/*IMPLICIT_CAST*/void r525accept(T525* C,T0* a1);
/*IMPLICIT_CAST*/T0* r525adapt_for(T525* C,T0* a1);
/*IMPLICIT_CAST*/T0* r525collect(T525* C,T0* a1);
/*IMPLICIT_CAST*/T6 r525is_current(void);
/*IMPLICIT_CAST*/void r525pretty_target(T525* C,T2 a1);
/*IMPLICIT_CAST*/T338 r525start_position(T525* C);
/*IMPLICIT_CAST*/T0* r525twin(T525* C);
/*IMPLICIT_CAST*/T0* r525written_declaration_type_mark(void);
/*IMPLICIT_CAST*/T6 r525use_current(T525* C,T0* a1);
/*IMPLICIT_CAST*/void r525bracketed_pretty(T525* C,T2 a1);
/*IMPLICIT_CAST*/T6 r525is_void(T525* C);
/*IMPLICIT_CAST*/T0* r525non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CAST*/T6 r525side_effect_free(T525* C,T0* a1);
/*IMPLICIT_CAST*/T6 r525is_manifest_string(T525* C);
/*IMPLICIT_CAST*/T0* r525resolve_in(T525* C,T0* a1);
/*IMPLICIT_CAST*/T0* r525to_instruction(T525* C);
/*AGENT_EXPRESSION*/T0* r679specialize_and_check(T679* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r679to_expression(T679* C);
/*AGENT_EXPRESSION*/void r679make(T679* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_EXPRESSION*/void r679agent_launcher_collect(T679* C,T0* a1);
/*AGENT_EXPRESSION*/void r679pretty(T679* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r679simplify(T679* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r679static_simplify(T679* C);
/*AGENT_EXPRESSION*/void r679inline_dynamic_dispatch_(T679* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/void r679safety_check(T679* C,T0* a1);
/*AGENT_EXPRESSION*/void r679init(T679* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/T0* r679specialize_thru(T679* C,T0* a1,T0* a2,T0* a3);
/*AGENT_EXPRESSION*/void r679specialize_check(T679* C,T0* a1);
/*AGENT_EXPRESSION*/T6 r679is_stored_in_some_local_variable(void);
/*AGENT_EXPRESSION*/void r679accept(T679* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r679adapt_for(T679* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r679collect(T679* C,T0* a1);
/*AGENT_EXPRESSION*/void r679pretty_target(T679* C,T2 a1);
/*AGENT_EXPRESSION*/T338 r679start_position(T679* C);
/*AGENT_EXPRESSION*/T0* r679twin(T679* C);
/*AGENT_EXPRESSION*/T0* r679written_declaration_type_mark(void);
/*AGENT_EXPRESSION*/T6 r679use_current(T679* C,T0* a1);
/*AGENT_EXPRESSION*/void r679bracketed_pretty(T679* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r679non_void_no_dispatch_type(T0* a1);
/*AGENT_EXPRESSION*/T6 r679side_effect_free(T0* a1);
/*AGENT_EXPRESSION*/T0* r679resolve_in(T679* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r679to_instruction(T679* C);
/*AGENT_EXPRESSION*/T0* r679current_or_twin_init(T679* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T665*create665make(T338 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r665to_expression(T665* C);
/*VOID_PROC_CALL*/void r665make(T665* C,T338 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r665simplify(T665* C,T0* a1);
/*VOID_PROC_CALL*/void r665inline_dynamic_dispatch_(T665* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/void r665safety_check(T665* C,T0* a1);
/*VOID_PROC_CALL*/void r665accept(T665* C,T0* a1);
/*VOID_PROC_CALL*/T6 r665use_current(T0* a1);
/*VOID_PROC_CALL*/T6 r665side_effect_free(T0* a1);
/*VOID_PROC_CALL*/T0* r665inline_dynamic_dispatch(T665* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T0* r665to_instruction(T665* C);
/*AGENT_INSTRUCTION*/T0* r661specialize_and_check(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r661to_expression(T661* C);
/*AGENT_INSTRUCTION*/void r661make(T661* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_INSTRUCTION*/void r661agent_launcher_collect(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r661simplify(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/void r661inline_dynamic_dispatch_(T661* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/void r661safety_check(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/void r661init(T661* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r661specialize_thru(T661* C,T0* a1,T0* a2,T0* a3);
/*AGENT_INSTRUCTION*/void r661specialize_check(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/void r661accept(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r661adapt_for(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r661collect(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/T338 r661start_position(T661* C);
/*AGENT_INSTRUCTION*/T0* r661twin(T661* C);
/*AGENT_INSTRUCTION*/T6 r661use_current(T661* C,T0* a1);
/*AGENT_INSTRUCTION*/T6 r661side_effect_free(T0* a1);
/*AGENT_INSTRUCTION*/T0* r661inline_dynamic_dispatch(T661* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r661to_instruction(T661* C);
/*AGENT_INSTRUCTION*/T0* r661current_or_twin_init(T661* C,T0* a1,T0* a2);
/*NUMBER_TOOLS*/T0* r306from_integer_64(T11 a1);
/*INLINE_MEMO*/T0* r528expression(T528* C);
/*INLINE_MEMO*/T0* r528instruction(T528* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_compound(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123not_yet_implemented(T123* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_check_compound(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_procedure_call_n(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_once_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_plug_in(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_manifest_generic(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_run_time_error_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fake_target(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_no_dispatch(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_call(T123* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_precursor_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_local_var_list(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_anonymous_feature(T123* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_address_of(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_procedure_call_1(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_procedure_call_0(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_inspect_statement(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_built_in(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assertion_list(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_function_call_n(T123* C,T0* a1);
extern T0*oBC123anonymous_feature_stack;
extern int fBC123anonymous_feature_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r123anonymous_feature_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_retry_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_c_inline(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment_test(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_no_invariant_wrapper(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_implicit_cast(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_once_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_deferred_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_create_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_external_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_effective_arg_list(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r123visit(T123* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_when_clause(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_built_in_eq_neq(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_manifest_tuple(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fake_tuple(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_debug_compound(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_e_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_agent_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_closed_operand(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_call_1(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_call_0(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_deferred_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_void_call(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_unused_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_writable_attribute(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_array_item(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_e_old(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_agent_creation(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r123can_be_dropped(T123* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123crash(T123* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_ifthenelse(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_create_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assertion(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_loop_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_e_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_ifthen(T123* C,T0* a1);
extern T0*oBC123type_stack;
extern int fBC123type_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r123type_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment_call_assigner(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_c_plus_plus(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fast_array_of_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_external_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_require_assertion(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_compound_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_c(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_agent_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_open_operand(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_void_proc_call(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment_attempt(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fake_argument(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_precursor_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_expression_with_comment(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment(T123* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_assignment(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_debug_compound(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_class_invariant(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_void_call(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_create_expression(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_fake_tuple(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_e_false(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_native_array_item(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_implicit_cast(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_integer_constant(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_run_time_error_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_manifest_string_inspect_statement(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_compound_expression(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_precursor_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_argument_name2(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_dynamic_dispatch_temporary1_id(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_old_manifest_array(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_sedb(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_require_assertion(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_c_inline(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_create_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_generator_generating_type(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_implicit_current(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_check_compound(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_compound(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_effective_arg_list(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_call_infix_or_else(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_real_constant(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_agent_creation(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_static_call_0_c(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_assignment_call_assigner(T734* C,T0* a1);
/*CODE_COMPARATOR*/T6 r734trace_in(T734* C,T0* a1,T0* a2,T0* a3);
/*CODE_COMPARATOR*/void r734visit_call_infix(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_no_dispatch(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_character_constant(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_dynamic_dispatch_temporary1(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_null_pointer(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_dynamic_dispatch_temporary2(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_e_true(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_ensure_assertion(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_procedure_call_n(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_natural_constant(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_call_infix_implies(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_assignment_attempt(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_assignment_test(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_written_current(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_retry_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_expression_with_comment(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_other_inspect_statement(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_assertion(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_function_call_0(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_manifest_string(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_function_call_1(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_non_void_no_dispatch(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_manifest_tuple(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_closed_operand(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_when_clause(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_ifthen(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_open_operand(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_call_infix_and_then(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_local_name2(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_e_old(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_ifthenelse(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_create_writable(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_fake_target(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_call_prefix(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_writable_attribute_name(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_unused_expression(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_internal_local2(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_procedure_call_1(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_address_of(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_loop_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_procedure_call_0(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_fake_argument(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_void_proc_call(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_raw_create_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_e_void(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_agent_expression(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_loop_variant(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_manifest_generic(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_built_in_eq_neq(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_precursor_expression(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_agent_instruction(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_assertion_list(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_no_invariant_wrapper(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_result(T734* C,T0* a1);
/*CODE_COMPARATOR*/void r734visit_function_call_n(T734* C,T0* a1);
/*RUN_FEATURE_8*/T2 r739arg_count(T739* C);
/*RUN_FEATURE_8*/void r739compute_use_current(T739* C);
/*RUN_FEATURE_8*/void r739std_compute_use_current(T739* C);
/*RUN_FEATURE_8*/void r739for(T739* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_8*/void r739accept(T739* C,T0* a1);
/*RUN_FEATURE_8*/void r739set_result_type(T739* C);
/*RUN_FEATURE_8*/T338 r739start_position(T739* C);
/*RUN_FEATURE_8*/T6 r739use_current(T739* C);
/*RUN_FEATURE_8*/void r739mapping_name_in(T739* C,T0* a1);
/*RUN_FEATURE_8*/void r739do_adapt(T739* C);
/*RUN_FEATURE_8*/void r739adapt(T739* C);
/*RUN_FEATURE_8*/T0* r739feature_stamp(T739* C);
/*EXCEPTIONS_HANDLER*/void r117se_evobt(T117* C);
/*EXCEPTIONS_HANDLER*/void r117customize_c_runtime(T117* C);
/*EXCEPTIONS_HANDLER*/T0* r117cpp(void);
/*EXCEPTIONS_HANDLER*/void r117initialize_runtime(T117* C);
/*EXCEPTIONS_HANDLER*/void r117bad_inspect_value(T117* C,T338 a1);
/*STATIC_CALL_0_C*/T0* r414declaration_type(T414* C);
/*STATIC_CALL_0_C*/T0* r414adapt_for(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414resolve_in(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414use_current_stack(void);
/*STATIC_CALL_0_C*/T0* r414collect(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414specialize_in(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414written_declaration_type_mark(void);
/*STATIC_CALL_0_C*/T0* r414simplify(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414arguments(void);
/*STATIC_CALL_0_C*/void r414pretty_target(T414* C,T2 a1);
/*STATIC_CALL_0_C*/void r414safety_check(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414to_expression(T414* C);
/*STATIC_CALL_0_C*/T0* r414specialize_thru(T414* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/T0* r414manifest_expression(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414feature_accumulator(void);
/*STATIC_CALL_0_C*/T0* r414specialize_and_check(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T6 r414simplify_limit_reached(T414* C);
/*STATIC_CALL_0_C*/void r414inline_dynamic_dispatch_(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r414to_instruction(T414* C);
/*STATIC_CALL_0_C*/T0* r414current_or_twin_init(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r414standard_check_export_and_obsolete_calls(T414* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/void r414make(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r414echo(void);
/*STATIC_CALL_0_C*/void r414type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/void r414non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/T6 r414use_current(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414static_simplify(T414* C);
/*STATIC_CALL_0_C*/T0* r414extra_local_expanded(T414* C,T0* a1);
/*STATIC_CALL_0_C*/void r414function_and_argument_count_check(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r414pretty(T414* C,T2 a1);
/*STATIC_CALL_0_C*/T6 r414side_effect_free(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414non_void_no_dispatch_type(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414inline_with(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414twin(T414* C);
/*STATIC_CALL_0_C*/void r414bracketed_pretty(T414* C,T2 a1);
/*STATIC_CALL_0_C*/void r414accept(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T338 r414start_position(T414* C);
/*STATIC_CALL_0_C*/T6 r414is_stored_in_some_local_variable(void);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_and_check(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411to_expression(T411* C);
/*RAW_CREATE_INSTRUCTION*/void r411make(T411* C,T338 a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/T0* r411created_type(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411typed_internals(T411* C,T338 a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r411pretty(T411* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411simplify(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_in(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411inline_dynamic_dispatch_(T411* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r411safety_check(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411set_call(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411init(T411* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/void r411specialize_checks(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_thru(T411* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/void r411accept(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411set_eiffel_parser_stamp(T411* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411adapt_for(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411default_create_name(void);
/*RAW_CREATE_INSTRUCTION*/T0* r411collect(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411any_default_create_fs(void);
/*RAW_CREATE_INSTRUCTION*/T0* r411twin(T411* C);
/*RAW_CREATE_INSTRUCTION*/T0* r411creation_procedure(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r411use_current(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r411side_effect_free(T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411arguments(T411* C);
/*RAW_CREATE_INSTRUCTION*/T0* r411inline_dynamic_dispatch(T411* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r411make_specialized(T411* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/void r411create_instruction_make(T411* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/T0* r411to_instruction(T411* C);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_without_checks(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411current_or_twin_init(T411* C,T0* a1,T0* a2,T0* a3);
/*GENERATOR_GENERATING_TYPE*/T0* r366to_expression(T366* C);
/*GENERATOR_GENERATING_TYPE*/T0* r366simplify(T366* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366static_simplify(T366* C);
/*GENERATOR_GENERATING_TYPE*/void r366inline_dynamic_dispatch_(T366* C,T0* a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/void r366make_generating_type(T366* C,T338 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T6 r366is_stored_in_some_local_variable(void);
/*GENERATOR_GENERATING_TYPE*/void r366accept(T366* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366declaration_type(void);
/*GENERATOR_GENERATING_TYPE*/T0* r366collect(T366* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366twin(T366* C);
/*GENERATOR_GENERATING_TYPE*/T0* r366written_declaration_type_mark(void);
/*GENERATOR_GENERATING_TYPE*/T6 r366use_current(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366non_void_no_dispatch_type(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T6 r366side_effect_free(T0* a1);
/*GENERATOR_GENERATING_TYPE*/void r366make_generator(T366* C,T338 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T0* r366resolve_in(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366to_instruction(T366* C);
/*RUN_FEATURE_1*/void r785compute_use_current(T785* C);
/*RUN_FEATURE_1*/T0* r785require_assertion(void);
/*RUN_FEATURE_1*/void r785for(T785* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_1*/void r785accept(T785* C,T0* a1);
/*RUN_FEATURE_1*/void r785set_result_type(T785* C);
/*RUN_FEATURE_1*/T338 r785start_position(T785* C);
/*RUN_FEATURE_1*/T6 r785use_current(T785* C);
/*RUN_FEATURE_1*/void r785mapping_name_in(T785* C,T0* a1);
/*RUN_FEATURE_1*/T0* r785arguments(void);
/*RUN_FEATURE_1*/void r785adapt(T785* C);
/*RUN_FEATURE_1*/T0* r785feature_stamp(T785* C);
/*RUN_FEATURE_6*/void r638compute_use_current(T638* C);
/*RUN_FEATURE_6*/void r638std_compute_use_current(T638* C);
/*RUN_FEATURE_6*/void r638for(T638* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_6*/void r638accept(T638* C,T0* a1);
/*RUN_FEATURE_6*/void r638set_result_type(T638* C);
/*RUN_FEATURE_6*/T338 r638start_position(T638* C);
/*RUN_FEATURE_6*/T6 r638use_current(T638* C);
/*RUN_FEATURE_6*/void r638mapping_name_in(T638* C,T0* a1);
/*RUN_FEATURE_6*/void r638do_adapt(T638* C);
/*RUN_FEATURE_6*/void r638adapt(T638* C);
/*RUN_FEATURE_6*/T0* r638feature_stamp(T638* C);
/*RUN_FEATURE_6*/T6 r638is_precomputable_once(T638* C);
/*RUN_FEATURE_9*/void r787compute_use_current(T787* C);
/*RUN_FEATURE_9*/void r787for(T787* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_9*/void r787accept(T787* C,T0* a1);
/*RUN_FEATURE_9*/void r787set_result_type(T787* C);
/*RUN_FEATURE_9*/T338 r787start_position(T787* C);
/*RUN_FEATURE_9*/T6 r787use_current(T787* C);
/*RUN_FEATURE_9*/void r787mapping_name_in(T787* C,T0* a1);
/*RUN_FEATURE_9*/void r787do_adapt(T787* C);
/*RUN_FEATURE_9*/void r787adapt(T787* C);
/*RUN_FEATURE_9*/T0* r787feature_stamp(T787* C);
/*RUN_FEATURE_7*/T2 r784arg_count(T784* C);
/*RUN_FEATURE_7*/void r784compute_use_current(T784* C);
/*RUN_FEATURE_7*/void r784std_compute_use_current(T784* C);
/*RUN_FEATURE_7*/void r784for(T784* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_7*/void r784accept(T784* C,T0* a1);
/*RUN_FEATURE_7*/T338 r784start_position(T784* C);
/*RUN_FEATURE_7*/T6 r784use_current(T784* C);
/*RUN_FEATURE_7*/void r784mapping_name_in(T784* C,T0* a1);
/*RUN_FEATURE_7*/void r784do_adapt(T784* C);
/*RUN_FEATURE_7*/void r784adapt(T784* C);
/*RUN_FEATURE_7*/T0* r784feature_stamp(T784* C);
/*NATIVE_ARRAY_ITEM*/T0* r676specialize_and_check(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676to_expression(T676* C);
/*NATIVE_ARRAY_ITEM*/void r676make(T676* C,T338 a1,T0* a2,T0* a3);
/*NATIVE_ARRAY_ITEM*/T0* r676simplify(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676static_simplify(T676* C);
/*NATIVE_ARRAY_ITEM*/void r676inline_dynamic_dispatch_(T676* C,T0* a1,T0* a2);
/*NATIVE_ARRAY_ITEM*/void r676safety_check(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T6 r676is_stored_in_some_local_variable(void);
/*NATIVE_ARRAY_ITEM*/void r676accept(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676adapt_for(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676collect(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676twin(T676* C);
/*NATIVE_ARRAY_ITEM*/T0* r676written_declaration_type_mark(void);
/*NATIVE_ARRAY_ITEM*/T6 r676use_current(T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676non_void_no_dispatch_type(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T6 r676side_effect_free(T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676resolve_in(T676* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r676to_instruction(T676* C);
/*RUN_FEATURE_3*/void r532compute_use_current(T532* C);
/*RUN_FEATURE_3*/void r532std_compute_use_current(T532* C);
/*RUN_FEATURE_3*/void r532for(T532* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_3*/T6 r532empty_body_side_effect_free_in_boost(T532* C);
/*RUN_FEATURE_3*/T6 r532is_empty_or_null_body(T532* C);
/*RUN_FEATURE_3*/void r532accept(T532* C,T0* a1);
/*RUN_FEATURE_3*/T338 r532start_position(T532* C);
/*RUN_FEATURE_3*/T0* r532memory_dispose(T532* C);
/*RUN_FEATURE_3*/T6 r532use_current(T532* C);
/*RUN_FEATURE_3*/void r532mapping_name_in(T532* C,T0* a1);
/*RUN_FEATURE_3*/void r532do_adapt(T532* C);
/*RUN_FEATURE_3*/T6 r532side_effect_free(T532* C);
/*RUN_FEATURE_3*/void r532adapt(T532* C);
/*RUN_FEATURE_3*/T0* r532feature_stamp(T532* C);
/*RUN_FEATURE_4*/void r786compute_use_current(T786* C);
/*RUN_FEATURE_4*/void r786std_compute_use_current(T786* C);
/*RUN_FEATURE_4*/void r786for(T786* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_4*/void r786accept(T786* C,T0* a1);
/*RUN_FEATURE_4*/void r786set_result_type(T786* C);
/*RUN_FEATURE_4*/T338 r786start_position(T786* C);
/*RUN_FEATURE_4*/T6 r786use_current(T786* C);
/*RUN_FEATURE_4*/void r786mapping_name_in(T786* C,T0* a1);
/*RUN_FEATURE_4*/void r786do_adapt(T786* C);
/*RUN_FEATURE_4*/void r786adapt(T786* C);
/*RUN_FEATURE_4*/T0* r786feature_stamp(T786* C);
/*RUN_FEATURE_5*/void r637compute_use_current(T637* C);
/*RUN_FEATURE_5*/void r637std_compute_use_current(T637* C);
/*RUN_FEATURE_5*/void r637for(T637* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_5*/void r637accept(T637* C,T0* a1);
/*RUN_FEATURE_5*/T338 r637start_position(T637* C);
/*RUN_FEATURE_5*/T6 r637use_current(T637* C);
/*RUN_FEATURE_5*/void r637mapping_name_in(T637* C,T0* a1);
/*RUN_FEATURE_5*/void r637do_adapt(T637* C);
/*RUN_FEATURE_5*/void r637adapt(T637* C);
/*RUN_FEATURE_5*/T0* r637feature_stamp(T637* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825put_line(T825* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825make(T825* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825filtered_put_character(T825* C,T3 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825create_pipe(T825* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825put_string(T825* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r825tmp_string(void);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825put_real_format(T825* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825put_integer(T825* C,T11 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825filtered_flush(T825* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825put_abstract_string(T825* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825dispose(T825* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r825disconnect(T825* C);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r825as_output_stream(T825* C);
/*EXEC_INPUT_STREAM_POSIX*/void r827make(T827* C,T0* a1);
/*EXEC_INPUT_STREAM_POSIX*/void r827filtered_read_character(T827* C);
/*EXEC_INPUT_STREAM_POSIX*/void r827create_pipe(T827* C);
/*EXEC_INPUT_STREAM_POSIX*/void r827swap_unread_buffer(T827* C);
/*EXEC_INPUT_STREAM_POSIX*/void r827dispose(T827* C);
/*EXEC_INPUT_STREAM_POSIX*/void r827disconnect(T827* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828put_line(T828* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828make(T828* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828filtered_put_character(T828* C,T3 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828create_pipe(T828* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828put_string(T828* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r828tmp_string(void);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828put_real_format(T828* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828put_integer(T828* C,T11 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828filtered_flush(T828* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828put_abstract_string(T828* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828dispose(T828* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r828disconnect(T828* C);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r828as_output_stream(T828* C);
/*EXEC_INPUT_STREAM_WIN32*/void r829make(T829* C,T0* a1);
/*EXEC_INPUT_STREAM_WIN32*/void r829filtered_read_character(T829* C);
/*EXEC_INPUT_STREAM_WIN32*/void r829create_pipe(T829* C);
/*EXEC_INPUT_STREAM_WIN32*/void r829swap_unread_buffer(T829* C);
/*EXEC_INPUT_STREAM_WIN32*/void r829dispose(T829* C);
/*EXEC_INPUT_STREAM_WIN32*/void r829disconnect(T829* C);
/*FAKE_TUPLE*/T0* r672specialize_and_check(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672to_expression(T672* C);
/*FAKE_TUPLE*/void r672make(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672simplify(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672static_simplify(T672* C);
/*FAKE_TUPLE*/T0* r672specialize_in(T672* C,T0* a1);
/*FAKE_TUPLE*/void r672inline_dynamic_dispatch_(T672* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r672expression(T672* C,T2 a1);
/*FAKE_TUPLE*/void r672safety_check(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672implicit_cast(T672* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r672specialize_thru(T672* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T6 r672is_stored_in_some_local_variable(void);
/*FAKE_TUPLE*/void r672accept(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672adapt_for(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672declaration_type(T672* C);
/*FAKE_TUPLE*/T0* r672collect(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T0* r672twin(T672* C);
/*FAKE_TUPLE*/T0* r672written_declaration_type_mark(void);
/*FAKE_TUPLE*/T6 r672use_current(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672non_void_no_dispatch_type(T0* a1);
/*FAKE_TUPLE*/T6 r672side_effect_free(T0* a1);
/*FAKE_TUPLE*/T2 r672count(T672* C);
/*FAKE_TUPLE*/T0* r672resolve_in(T672* C,T0* a1);
/*FAKE_TUPLE*/T0* r672to_instruction(T672* C);
/*INTEGER_64_NUMBER*/void r704make(T704* C,T11 a1);
/*INTEGER_64_NUMBER*/T11 r704to_integer_64(T704* C);
/*INTEGER_64_NUMBER*/T0* r704multiply_with_big_integer_number(T704* C,T0* a1);
extern T0*oBC305zero;
extern T0*oBC305mutable_register1;
extern int fBC305mutable_register1;
/*INTEGER_64_NUMBER*/T0* r704mutable_register1(void);
extern T0*oBC305mutable_register2;
extern int fBC305mutable_register2;
/*INTEGER_64_NUMBER*/T0* r704mutable_register2(void);
extern T0*oBC305mutable_register3;
extern int fBC305mutable_register3;
/*INTEGER_64_NUMBER*/T0* r704mutable_register3(void);
/*INTEGER_64_NUMBER*/T0* r704_ix_42(T704* C,T0* a1);
/*INTEGER_64_NUMBER*/T0* r704_ix_43(T704* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r704is_integer_32(T704* C);
/*INTEGER_64_NUMBER*/T0* r704_px_45(T704* C);
/*INTEGER_64_NUMBER*/T0* r704_ix_45(T704* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r704is_integer_16(T704* C);
/*INTEGER_64_NUMBER*/T0* r704add_with_big_integer_number(T704* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r704is_integer_8(T704* C);
/*INTEGER_64_NUMBER*/T0* r704_ix_6442(T704* C,T11 a1);
/*INTEGER_64_NUMBER*/T0* r704_ix_6443(T704* C,T11 a1);
/*INTEGER_64_NUMBER*/T10 r704to_integer_16(T704* C);
/*INTEGER_64_NUMBER*/T0* r704to_string(T704* C);
/*INTEGER_64_NUMBER*/T1 r704to_integer_8(T704* C);
/*INTEGER_64_NUMBER*/T2 r704to_integer_32(T704* C);
/*INTEGER_64_NUMBER*/void r704append_in(T704* C,T0* a1);
extern T0*oBC305string_buffer;
extern int fBC305string_buffer;
/*INTEGER_64_NUMBER*/T0* r704string_buffer(void);
/*C_PLUGIN*/T6 r980is_equal(T980* C,T0* a1);
/*C_PLUGIN*/void r980make(T980* C,T338 a1,T0* a2,T0* a3);
/*C_PLUGIN*/void r980add_c_source(T980* C,T0* a1);
/*C_PLUGIN*/T0* r980echo(void);
/*C_PLUGIN*/void r980add_c_header(T980* C,T0* a1);
extern T0*oBC534tfr;
/*C_PLUGIN*/T0* r980cpp(void);
/*C_PLUGIN*/void r980read_auto_init(T980* C,T0* a1);
/*C_PLUGIN*/T0* r980system_tools(void);
/*C_PLUGIN*/T0* r980absolute_path(T980* C,T0* a1);
/*C_PLUGIN*/void r980try_auto_init(T980* C);
/*C_PLUGIN*/T0* r980parser_buffer(void);
/*C_PLUGIN*/void r980include(T980* C,T338 a1);
/*C_PLUGIN*/T0* r980read(T0* a1);
/*INTERNAL_C_LOCAL_LIST*/T0* r634lock_local(T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL_LIST*/T0* r634echo(void);
/*INTERNAL_C_LOCAL_LIST*/void r634declaration_dump(T634* C,T0* a1);
extern T0*oBC634internal_c_local_pool;
extern int fBC634internal_c_local_pool;
/*INTERNAL_C_LOCAL_LIST*/T0* r634internal_c_local_pool(void);
/*INTERNAL_C_LOCAL_LIST*/void r634echo_information(T634* C);
/*INTERNAL_C_LOCAL*/void r558make(T558* C,T2 a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/T0* r558lock_local(T558* C,T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/void r558unlock(T558* C);
extern T0*oBC558counter;
/*INTERNAL_C_LOCAL*/T6 r558declaration_dump(T558* C,T0* a1);
/*INTERNAL_C_LOCAL*/T0* r558cpp(void);
/*INTERNAL_C_LOCAL*/T6 r558can_be_recycle_with_type(T558* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r558c_type_in(T558* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r558append_in(T558* C,T0* a1);
/*CODE_CONTEXT_DIRECT_CALL*/void r552reserve(T552* C);
/*CODE_CONTEXT_CREATE_INSTRUCTION*/void r553reserve(T553* C);
/*CODE_CONTEXT_CREATE_EXPRESSION*/void r554reserve(T554* C);
/*CODE_CONTEXT_INSIDE_TWIN*/void r555reserve(T555* C);
/*CODE_CONTEXT_PRECURSOR*/void r556reserve(T556* C);
/*CODE_CONTEXT_INSIDE_SOME_WRAPPER*/void r557reserve(T557* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r799make(T799* C,T2 a1);
/*C_SPLITTER_LEGACY_ITERATOR*/void r799next(T799* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r799start(T799* C);
/*C_SPLITTER_LEGACY_ITERATOR*/T0* r799item(T799* C);
/*TAGGED_FLAG*/void r796as_true(T796* C);
/*MUTABLE_BIG_INTEGER*/void r709subtract_magnitude_raw_reverse(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T11 r709to_integer_64(T709* C);
/*MUTABLE_BIG_INTEGER*/T6 r709is_one_negative(T709* C);
/*MUTABLE_BIG_INTEGER*/T2 r709divide_one_word(T709* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r709add(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r709copy(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r709is_integer_64(T709* C);
extern T0*oBC709char_buffer;
extern int fBC709char_buffer;
/*MUTABLE_BIG_INTEGER*/T0* r709char_buffer(void);
/*MUTABLE_BIG_INTEGER*/void r709subtract_magnitude_raw_truncated(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r709add_integer_64(T709* C,T11 a1);
/*MUTABLE_BIG_INTEGER*/void r709negate(T709* C);
/*MUTABLE_BIG_INTEGER*/T2 r709append_in_char_buffer(T709* C);
/*MUTABLE_BIG_INTEGER*/void r709subtract_magnitude_raw(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r709is_one(T709* C);
/*MUTABLE_BIG_INTEGER*/void r709multiply_to(T709* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/void r709subtract_magnitude_raw_reverse_truncated(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T2 r709capacity_from_upper_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r709multiply_to_like_human(T709* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/T0* r709to_integer_general_number(T709* C);
extern T0*oBC709register1;
extern int fBC709register1;
/*MUTABLE_BIG_INTEGER*/T0* r709register1(void);
/*MUTABLE_BIG_INTEGER*/void r709set_with_zero(T709* C);
/*MUTABLE_BIG_INTEGER*/void r709from_integer(T709* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r709subtract_magnitude(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r709from_native_array(T709* C,T1107 a1,T2 a2,T6 a3);
/*MUTABLE_BIG_INTEGER*/T2 r709capacity_from_lower_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r709add_magnitude(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r709set_all(T709* C,T1107 a1,T2 a2,T2 a3,T2 a4,T6 a5);
/*MUTABLE_BIG_INTEGER*/void r709append_in(T709* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r709from_integer_64(T709* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T11 r706to_integer_64(T706* C);
/*BIG_INTEGER_NUMBER*/T0* r706multiply_with_big_integer_number(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r706mutable_register1(void);
/*BIG_INTEGER_NUMBER*/T0* r706mutable_register2(void);
/*BIG_INTEGER_NUMBER*/T0* r706mutable_register3(void);
/*BIG_INTEGER_NUMBER*/T0* r706_ix_42(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r706_ix_43(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/void r706put_into_mutable_big_integer(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r706_ix_45(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r706_px_45(T706* C);
/*BIG_INTEGER_NUMBER*/T0* r706add_with_big_integer_number(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r706_ix_6442(T706* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T0* r706_ix_6443(T706* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T10 r706to_integer_16(T706* C);
/*BIG_INTEGER_NUMBER*/T0* r706to_string(T706* C);
/*BIG_INTEGER_NUMBER*/T1 r706to_integer_8(T706* C);
/*BIG_INTEGER_NUMBER*/void r706from_native_array(T706* C,T1107 a1,T2 a2,T6 a3);
/*BIG_INTEGER_NUMBER*/T2 r706to_integer_32(T706* C);
/*BIG_INTEGER_NUMBER*/void r706append_in(T706* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r706string_buffer(void);
/*TAGGED_INTERNAL_C_LOCAL*/void r783set_item(T783* C,T0* a1);
/*TAGGED_INTEGER*/void r781set_item(T781* C,T2 a1);
void agent_launcher_o469(/*agent*/T0*a,T0* a1);
void agent_launcher_o476(/*agent*/T0*a,T0* a1);
void agent_launcher_o526(/*agent*/T0*a,T0* a1);
void agent_launcher(/*agent*/T0*a);
void agent_launcher_o331(/*agent*/T0*a,T0* a1);
T6 agent_launcher_R6_o7(/*agent*/T0*a,T0* a1);
void agent_launcher_o95(/*agent*/T0*a,T0* a1);
void agent_launcher_o560(/*agent*/T0*a,T0* a1);
void agent_launcher_o87(/*agent*/T0*a,T0* a1);
void agent_launcher_o406(/*agent*/T0*a,T0* a1);
void agent_launcher_o85(/*agent*/T0*a,T0* a1);
void agent_launcher_o327o7(/*agent*/T0*a,T0* a1,T0* a2);
void agent_launcher_o418(/*agent*/T0*a,T0* a1);
void agent_launcher_o368(/*agent*/T0*a,T0* a1);
void agent_launcher_o458(/*agent*/T0*a,T0* a1);
void agent_launcher_o277o277(/*agent*/T0*a,T0* a1,T0* a2);
union _se_agent{T0 s0;se_agent0 u0;
se_agenT112f112l4023c31 uagenT112f112l4023c31;
se_agenT112f112l4012c28 uagenT112f112l4012c28;
se_agenT112f112l3783c47 uagenT112f112l3783c47;
se_agenT112f112l618c22 uagenT112f112l618c22;
se_agenT112f112l675c22 uagenT112f112l675c22;
se_agenT112f112l3802c55 uagenT112f112l3802c55;
se_agenT112f112l3595c39 uagenT112f112l3595c39;
se_agenT112f112l3512c38 uagenT112f112l3512c38;
se_agenT107f107l345c38 uagenT107f107l345c38;
se_agenT565f566l25c44 uagenT565f566l25c44;
se_agenT596f566l25c44 uagenT596f566l25c44;
se_agenT597f597l22c50 uagenT597f597l22c50;
se_agenT597f566l25c44 uagenT597f566l25c44;
se_agenT598f566l25c44 uagenT598f566l25c44;
se_agenT599f599l77c54 uagenT599f599l77c54;
se_agenT599f599l106c53 uagenT599f599l106c53;
se_agenT599f599l117c20 uagenT599f599l117c20;
se_agenT616f616l80c33 uagenT616f616l80c33;
se_agenT616f616l1095c35 uagenT616f616l1095c35;
se_agenT616f616l61c33 uagenT616f616l61c33;
se_agenT616f616l1070c37 uagenT616f616l1070c37;
se_agenT616f616l1078c32 uagenT616f616l1078c32;
se_agenT616f616l1025c35 uagenT616f616l1025c35;
se_agenT368f368l155c36 uagenT368f368l155c36;
se_agenT368f368l473c44 uagenT368f368l473c44;
se_agenT104f104l169c20 uagenT104f104l169c20;
se_agenT104f104l159c20 uagenT104f104l159c20;
};
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_AGENTS 1
#define EIF_AGENT se_agent*

se_agent* new_agent(Tid id);

#ifdef SE_GC_LIB

  typedef struct B_agent gc_agent;

  struct B_agent {
    se_agent object;
    union {
      void *flag;
      gc_agent *next;
    } header;
  };

  extern gc_agent *store_agent;
  extern gc_agent *gc_free_agent;
  extern int       store_left_agent;
  extern fsoc     *store_chunk_agent;
  extern fsoc      H_agent;
  extern int       gc_info_nb_agent;

  void gc_align_mark_agent(fsoc *c, gc_agent* a);
  void gc_sweep_agent(fsoc *c);

#endif
extern T0*ms108_240Abc272A;
extern T0*ms792_1815688614Abc792A;
extern T0*ms792_407207Abc792A;
extern T0*ms108_240Abc274A;
extern T0*ms616_847125Abc616A;
extern T0*ms616_23451005Abc616A;
extern T0*ms33_406284Abc33A;
extern T0*ms104_660Abc104A;
extern T0*ms121_44975894Abc121A;
extern T0*ms33_1639475718Abc33A;
extern T0*ms621_40031469Abc621A;
extern T0*ms107_713806135Abc107A;
extern T0*ms625_705408837Abc625A;
extern T0*ms112_57150800Abc112A;
extern T0*ms101_175744691Abc101A;
extern T0*ms112_257Abc599A;
extern T0*ms112_257Abc599B;
extern T0*ms599_246Abc112A;
extern T0*ms599_246Abc112B;
extern T0*ms623_28273584Abc623A;
extern T0*ms616_1650Abc623A;
extern T0*ms117_51895507Abc117A;
extern T0*ms33_3501Abc33A;
extern T0*ms616_1650Abc616E;
extern T0*ms616_1650Abc616D;
extern T0*ms616_1650Abc616C;
extern T0*ms616_1650Abc616B;
extern T0*ms616_1650Abc616A;
extern T0*ms106_1616517694Abc106A;
extern T0*ms112_1160736641Abc112A;
extern T0*ms599_558682149Abc599A;
extern T0*ms112_1284Abc613A;
extern T0*ms112_1284Abc613B;
extern T0*ms112_1284Abc613C;
extern T0*ms112_1284Abc614A;
extern T0*ms388_529996976Abc388A;
extern T0*ms112_1284Abc621A;
extern T0*ms112_1284Abc621B;
extern T0*ms112_1284Abc622A;
extern T0*ms112_1284Abc622B;
extern T0*ms121_322Abc121A;
extern T0*ms112_1881374985Abc112A;
extern T0*ms628_471Abc628A;
extern T0*ms616_3760Abc112A;
extern T0*ms108_179868158Abc108A;
extern T0*ms100_1689577436Abc100A;
extern T0*ms100_732257893Abc100A;
extern T0*ms115_612334905Abc115A;
extern T0*ms622_247Abc622A;
extern T0*ms107_327902Abc282A;
extern T0*ms107_327902Abc282B;
extern T0*ms115_1752297822Abc115A;
extern T0*ms107_1255776138Abc107A;
extern T0*ms112_389675Abc112A;
extern T0*ms628_471Abc622A;
extern T0*ms625_7006Abc625A;
extern T0*ms792_1196941282Abc792A;
extern T0*ms121_809686569Abc121A;
extern T0*ms792_1111960899Abc792A;
extern T0*ms100_470853074Abc100A;
extern T0*ms792_7374Abc792A;
extern T0*ms622_111269879Abc622A;
extern T0*ms274_926093361Abc274A;
extern T0*ms108_830570470Abc108A;
extern T0*ms550_32450971Abc550A;
extern T0*ms980_1439959996Abc980A;
extern T0*ms33_2246041Abc33A;
extern T0*ms108_1223801083Abc108A;
extern T0*ms33_548331507Abc33A;
extern T0*ms102_1377150320Abc102A;
extern T0*ms112_1919660703Abc112A;
extern T0*ms33_1597390874Abc33A;
extern T0*ms371_30745830Abc371A;
extern T0*ms622_520377520Abc622C;
extern T0*ms622_520377520Abc622B;
extern T0*ms790_2097247Abc790A;
extern T0*ms622_520377520Abc622A;
extern T0*ms100_883016350Abc100A;
extern T0*ms100_883016350Abc100B;
extern T0*ms100_883016350Abc100C;
extern T0*ms470_1810101146Abc470A;
extern T0*ms794_576790349Abc794A;
extern T0*ms34_1839765037Abc34A;
extern T0*ms478_439056951Abc478A;
extern T0*ms30_63Abc30A;
extern T0*ms30_7779Abc30A;
extern T0*ms112_726227573Abc112A;
extern T0*ms112_77412Abc112A;
extern T0*ms112_77412Abc112B;
extern T0*ms112_77412Abc112C;
extern T0*ms100_945201499Abc100A;
extern T0*ms112_772432310Abc112A;
extern T0*ms100_676728857Abc100A;
extern T0*ms112_526Abc112A;
extern T0*ms112_267478119Abc112A;
extern T0*ms100_822318035Abc100A;
extern T0*ms635_374042271Abc635A;
extern T0*ms108_1102814319Abc108A;
extern T0*ms622_32435Abc622B;
extern T0*ms622_32435Abc622A;
extern T0*ms420_1240817101Abc420A;
extern T0*ms476_1142240176Abc476A;
extern T0*ms625_1245850444Abc625A;
extern T0*ms112_1586448448Abc112A;
extern T0*ms616_1898591066Abc616A;
extern T0*ms612_7454Abc612A;
extern T0*ms112_1197714671Abc112A;
extern T0*ms112_18131599Abc112A;
extern T0*ms400_923532Abc400A;
extern T0*ms400_923532Abc400B;
extern T0*ms400_923532Abc400C;
extern T0*ms400_923532Abc400D;
extern T0*ms33_1326673961Abc33A;
extern T0*ms112_1586354711Abc112A;
extern T0*ms614_184795Abc614A;
extern T0*ms452_90390825Abc452A;
extern T0*ms112_1377391529Abc112A;
extern T0*ms599_1575353618Abc599A;
extern T0*ms616_3175Abc112B;
extern T0*ms616_3175Abc112A;
extern T0*ms107_542094038Abc107A;
extern T0*ms616_1832703325Abc616A;
extern T0*ms790_81437Abc790A;
extern T0*ms623_1291Abc623B;
extern T0*ms623_1291Abc623A;
extern T0*ms112_2087300232Abc112A;
extern T0*ms33_60Abc33A;
extern T0*ms112_13801Abc112A;
extern T0*ms452_46Abc106A;
extern T0*ms112_17507Abc112A;
extern T0*ms329_1492212881Abc329A;
extern T0*ms452_46Abc107A;
extern T0*ms625_90405963Abc625A;
extern T0*ms452_46Abc107B;
extern T0*ms452_46Abc107C;
extern T0*ms452_789877170Abc452A;
extern T0*ms100_2060540980Abc100A;
extern T0*ms452_46Abc115A;
extern T0*ms452_46Abc115B;
extern T0*ms452_46Abc115C;
extern T0*ms400_205616643Abc400A;
extern T0*ms410_183516812Abc410A;
extern T0*ms33_1574640467Abc33A;
extern T0*ms790_614Abc792D;
extern T0*ms790_614Abc792C;
extern T0*ms790_614Abc792B;
extern T0*ms790_614Abc792A;
extern T0*ms33_175767198Abc33A;
extern T0*ms980_838816886Abc980A;
extern T0*ms616_2065182209Abc616A;
extern T0*ms790_614Abc790B;
extern T0*ms790_614Abc790A;
extern T0*ms121_322Abc418A;
extern T0*ms108_270309168Abc108A;
extern T0*ms33_880412606Abc33A;
extern T0*ms980_1942892277Abc980A;
extern T0*ms405_1458557644Abc405A;
extern T0*ms792_33836Abc792A;
extern T0*ms100_629850238Abc100A;
extern T0*ms121_322Abc432A;
extern T0*ms112_2630Abc623A;
extern T0*ms34_17221Abc562A;
extern T0*ms121_322Abc433A;
extern T0*ms461_1172758533Abc461A;
extern T0*ms121_322Abc391A;
extern T0*ms112_1130602126Abc112A;
extern T0*ms622_1605175681Abc622A;
extern T0*ms274_2028436769Abc274A;
extern T0*ms452_865125357Abc452A;
extern T0*ms736_1613492996Abc736A;
extern T0*ms769_324Abc108A;
extern T0*ms100_955584028Abc100A;
extern T0*ms33_18110Abc33A;
extern T0*ms376_316489161Abc376A;
extern T0*ms121_322Abc454A;
extern T0*ms550_1826Abc550A;
extern T0*ms357_197895058Abc357A;
extern T0*ms112_2630Abc599A;
extern T0*ms112_120095614Abc112A;
extern T0*ms112_9130Abc792A;
extern T0*ms34_11251026Abc34A;
extern T0*ms100_12184Abc100A;
extern T0*ms100_12184Abc100B;
extern T0*ms33_447584Abc33A;
extern T0*ms112_1844536619Abc599A;
extern T0*ms112_2417Abc112A;
extern T0*ms33_1549680Abc33A;
extern T0*ms112_1591358844Abc112A;
extern T0*ms790_413927315Abc790A;
extern T0*ms35_77608Abc35A;
extern T0*ms461_907165587Abc461A;
extern T0*ms980_302Abc980A;
extern T0*ms100_1466196812Abc100A;
extern T0*ms368_4488096Abc368A;
extern T0*ms599_246Abc613A;
extern T0*ms101_116346440Abc101A;
extern T0*ms329_198146473Abc329A;
extern T0*ms599_246Abc614A;
extern T0*ms599_246Abc614B;
extern T0*ms599_246Abc614C;
extern T0*ms599_246Abc614D;
extern T0*ms599_246Abc614E;
extern T0*ms33_761722990Abc33A;
extern T0*ms599_246Abc614F;
extern T0*ms599_246Abc614G;
extern T0*ms599_246Abc616A;
extern T0*ms599_246Abc622A;
extern T0*ms599_246Abc622B;
extern T0*ms599_246Abc622C;
extern T0*ms599_246Abc622D;
extern T0*ms599_246Abc622E;
extern T0*ms558_38182Abc558A;
extern T0*ms599_246Abc622F;
extern T0*ms599_246Abc622G;
extern T0*ms599_246Abc622H;
extern T0*ms599_246Abc622I;
extern T0*ms336_1642968637Abc336A;
extern T0*ms599_246Abc622J;
extern T0*ms599_246Abc622K;
extern T0*ms599_246Abc622L;
extern T0*ms34_8054609Abc778A;
extern T0*ms599_246Abc622M;
extern T0*ms599_246Abc622N;
extern T0*ms599_246Abc622O;
extern T0*ms599_246Abc622P;
extern T0*ms599_246Abc622Q;
extern T0*ms599_246Abc622R;
extern T0*ms616_2089246593Abc616A;
extern T0*ms599_246Abc622S;
extern T0*ms599_246Abc622T;
extern T0*ms614_1367878466Abc614A;
extern T0*ms635_1912840703Abc635A;
extern T0*ms599_246Abc622U;
extern T0*ms599_246Abc622V;
extern T0*ms599_246Abc622W;
extern T0*ms280_1153312264Abc280A;
extern T0*ms599_246Abc622X;
extern T0*ms599_246Abc622Y;
extern T0*ms599_246Abc622Z;
extern T0*ms30_1090Abc108A;
extern T0*ms30_1090Abc108B;
extern T0*ms107_298390Abc107A;
extern T0*ms599_246Abc622a;
extern T0*ms599_246Abc622b;
extern T0*ms599_246Abc622c;
extern T0*ms599_246Abc622d;
extern T0*ms599_246Abc622e;
extern T0*ms400_1143055473Abc400A;
extern T0*ms599_246Abc622f;
extern T0*ms112_277Cbc112A;
extern T0*ms400_1143055473Abc400B;
extern T0*ms599_246Abc622g;
extern T0*ms400_1143055473Abc400C;
extern T0*ms599_246Abc622h;
extern T0*ms400_1143055473Abc400D;
extern T0*ms599_246Abc622i;
extern T0*ms400_1143055473Abc400E;
extern T0*ms599_246Abc622j;
extern T0*ms30_1090Abc121A;
extern T0*ms599_246Abc622k;
extern T0*ms599_246Abc622l;
extern T0*ms30_1090Abc121B;
extern T0*ms30_1090Abc121C;
extern T0*ms599_246Abc622m;
extern T0*ms277_1838870713Abc277A;
extern T0*ms30_1090Abc121D;
extern T0*ms599_246Abc622n;
extern T0*ms34_17221Abc380A;
extern T0*ms100_1320619413Abc100A;
extern T0*ms623_529853775Abc623A;
extern T0*ms622_9980719Abc622B;
extern T0*ms121_322Abc616A;
extern T0*ms33_55041141Abc33A;
extern T0*ms33_55041091Abc33A;
extern T0*ms622_9980719Abc622A;
extern T0*ms648_385268764Abc648A;
extern T0*ms112_47278Abc112A;
extern T0*ms452_46Abc280A;
extern T0*ms452_46Abc280B;
extern T0*ms112_1377208779Abc112D;
extern T0*ms397_729510616Abc397A;
extern T0*ms112_1377208779Abc112C;
extern T0*ms112_1377208779Abc112B;
extern T0*ms112_1377208779Abc112A;
extern T0*ms112_1672511676Abc112A;
extern T0*ms599_246Abc599A;
extern T0*ms33_55040401Abc33A;
extern T0*ms622_1821634438Abc622A;
extern T0*ms452_46Abc336A;
extern T0*ms452_46Abc336B;
extern T0*ms734_241Abc622A;
extern T0*ms734_241Abc622B;
extern T0*ms33_361Abc33A;
extern T0*ms107_763853019Abc107A;
extern T0*ms452_46Abc339A;
extern T0*ms121_322Abc643A;
extern T0*ms400_1718483009Abc400A;
extern T0*ms616_4766225Abc616A;
extern T0*ms452_46Abc401A;
extern T0*ms400_944882Abc400A;
extern T0*ms400_944882Abc400B;
extern T0*ms400_944882Abc400C;
extern T0*ms400_944882Abc400D;
extern T0*ms34_78002Abc34A;
extern T0*ms101_1581369567Abc101A;
extern T0*ms599_228498053Abc599A;
extern T0*ms101_85511833Abc101A;
extern T0*ms452_46Abc405A;
extern T0*ms452_46Abc410A;
extern T0*ms452_46Abc405B;
extern T0*ms100_1138390195Abc100A;
extern T0*ms112_12331Abc112A;
extern T0*ms100_1098712729Abc100A;
extern T0*ms112_81256Abc112A;
extern T0*ms108_689Abc108A;
extern T0*ms112_1195084695Abc112A;
extern T0*ms622_244793715Abc622B;
extern T0*ms622_244793715Abc622A;
extern T0*ms792_1012357115Abc792A;
extern T0*ms452_46Abc365A;
extern T0*ms112_207160501Abc112A;
extern T0*ms616_1952787551Abc616A;
extern T0*ms470_1961687Abc470A;
extern T0*ms452_46Abc367A;
extern T0*ms452_46Abc367B;
extern T0*ms419_282823780Abc419A;
extern T0*ms599_832670Abc599A;
extern T0*ms614_7224500Abc614A;
extern T0*ms100_1978106088Abc100A;
extern T0*ms107_1737672775Abc107A;
extern T0*ms100_161325869Abc100A;
extern T0*ms401_1933023161Abc401A;
extern T0*ms108_1744Abc108A;
extern T0*ms405_1382321814Abc405A;
extern T0*ms34_400652Abc34A;
extern T0*ms121_322Abc683A;
extern T0*ms121_322Abc683B;
extern T0*ms118_138929174Abc118A;
extern T0*ms622_219498506Abc622A;
extern T0*ms101_74239Abc101A;
extern T0*ms469_56907446Abc469A;
extern T0*ms616_693716559Abc616A;
extern T0*ms112_77412Abc616A;
extern T0*ms112_77412Abc616B;
extern T0*ms112_77412Abc616C;
extern T0*ms112_561947515Abc112A;
extern T0*ms112_77412Abc616D;
extern T0*ms452_46Abc394A;
extern T0*ms107_801894175Abc107A;
extern T0*ms112_1965730Abc616B;
extern T0*ms112_1965730Abc616A;
extern T0*ms336_2084824380Abc336A;
extern T0*ms452_46Abc452A;
extern T0*ms452_46Abc397A;
extern T0*ms112_1564992795Abc112A;
extern T0*ms112_77412Abc625A;
extern T0*ms734_241Abc734A;
extern T0*ms734_241Abc734B;
extern T0*ms452_46Abc449A;
extern T0*ms34_78263Abc34A;
extern T0*ms452_46Abc461A;
extern T0*ms621_1869700848Abc621A;
extern T0*ms622_83345Abc622A;
extern T0*ms112_526Abc626A;
extern T0*ms394_1896547075Abc394A;
extern T0*ms33_1744399653Abc33A;
extern T0*ms394_1721307786Abc394A;
extern T0*ms274_1799491166Abc274A;
extern T0*ms616_400650Abc616A;
extern T0*ms35_385751Abc35A;
extern T0*ms100_2018315248Abc100A;
extern T0*ms595_8545Abc595A;
extern T0*ms394_1424594977Abc394A;
extern T0*ms623_84085Abc623A;
extern T0*ms623_84085Abc623B;
extern T0*ms107_215Abc107A;
extern T0*ms452_46Abc476A;
extern T0*ms107_215Abc107B;
extern T0*ms452_46Abc476B;
extern T0*ms622_87090Abc622A;
extern T0*ms108_62728285Abc108A;
extern T0*ms284_252Abc113A;
extern T0*ms329_1306325004Abc329A;
extern T0*ms112_526Abc599A;
extern T0*ms622_870841390Abc622B;
extern T0*ms452_529299514Abc452A;
extern T0*ms419_170383550Abc419A;
extern T0*ms622_870841390Abc622A;
extern T0*ms363_336696676Abc363A;
extern T0*ms635_1722095007Abc635A;
extern T0*ms452_46Abc545A;
extern T0*ms622_114321512Abc622A;
extern T0*ms625_124454155Abc625A;
extern T0*ms400_1670460393Abc400A;
extern T0*ms100_2137524537Abc100A;
extern T0*ms635_1655357614Abc635A;
extern T0*ms797_2008215484Abc797A;
extern T0*ms662_643795973Abc662A;
extern T0*ms33_1673348567Abc33A;
extern T0*ms452_46Abc560A;
extern T0*ms34_661Abc34A;
extern T0*ms112_1290234339Abc112A;
extern T0*ms100_1075925125Abc100A;
extern T0*ms34_59251Abc397A;
extern T0*ms980_1067567332Abc980A;
extern T0*ms274_767646015Abc274A;
extern T0*ms33_3460Abc33A;
extern T0*ms336_590983311Abc336A;
extern T0*ms112_18131599Abc599A;
extern T0*ms107_2106290588Abc107A;
extern T0*ms100_751585121Abc100A;
extern T0*ms112_860532685Abc112A;
extern T0*ms599_1880914324Abc599A;
extern T0*ms688_1085938891Abc688A;
extern T0*ms100_1023251859Abc100A;
extern T0*ms280_1145998825Abc280A;
extern T0*ms274_1707020207Abc274A;
extern T0*ms622_234933541Abc622A;
extern T0*ms452_46Abc635A;
extern T0*ms100_825716016Abc100A;
extern T0*ms108_98806116Abc108A;
extern T0*ms100_1181926797Abc100A;
extern T0*ms327_855586967Abc327A;
extern T0*ms100_2016523575Abc100A;
extern T0*ms686_861846863Abc686A;
extern T0*ms34_396356Abc34A;
extern T0*ms614_1285Abc614A;
extern T0*ms112_495363549Abc112A;
extern T0*ms371_2126200255Abc371A;
extern T0*ms614_1285Abc623A;
extern T0*ms100_2020913390Abc100A;
extern T0*ms622_32456Abc622A;
extern T0*ms980_7037Abc980A;
extern T0*ms100_1061217192Abc100A;
extern T0*ms630_399591Abc630A;
extern T0*ms115_1816788953Abc115A;
extern T0*ms34_437070Abc34A;
extern T0*ms112_113036818Abc112A;
extern T0*ms33_10945665Abc33A;
extern T0*ms107_1463938603Abc107A;
extern T0*ms100_529554293Abc100A;
extern T0*ms112_1295Abc112A;
extern T0*ms792_97510Abc792A;
extern T0*ms112_2041682Abc112E;
extern T0*ms452_46Abc668A;
extern T0*ms112_985140858Abc112A;
extern T0*ms112_2041682Abc112D;
extern T0*ms112_2041682Abc112C;
extern T0*ms112_2041682Abc112B;
extern T0*ms112_2041682Abc112A;
extern T0*ms599_2187432Abc599A;
extern T0*ms599_2187432Abc599B;
extern T0*ms34_640Abc34A;
extern T0*ms106_580488532Abc106A;
extern T0*ms34_2073386Abc34A;
extern T0*ms614_920950Abc614A;
extern T0*ms452_46Abc690A;
extern T0*ms33_43Abc623A;
extern T0*ms33_43Abc623B;
extern T0*ms284_1661812564Abc284A;
extern T0*ms277_1897894366Abc277A;
extern T0*ms33_3669Abc33A;
extern T0*ms100_124992Abc100A;
extern T0*ms778_602797481Abc778A;
extern T0*ms112_392938270Abc112A;
extern T0*ms621_35343969Abc621A;
extern T0*ms112_2417Abc627A;
extern T0*ms284_252Abc277A;
extern T0*ms284_252Abc277B;
extern T0*ms100_1088075316Abc100A;
extern T0*ms112_273430505Abc108A;
extern T0*ms33_424424Abc33A;
extern T0*ms34_82570Abc34A;
extern T0*ms112_273430505Abc112A;
extern T0*ms599_2111741Abc599A;
extern T0*ms533_902076231Abc533A;
extern T0*ms95_1781104140Abc95A;
extern T0*ms33_37186806Abc33A;
extern T0*ms284_252Abc339A;
extern T0*ms100_1962710217Abc100A;
extern T0*ms34_3601Abc34A;
extern T0*ms452_46Abc773A;
extern T0*ms277_1820580025Abc277A;
extern T0*ms108_109Abc108A;
extern T0*ms452_46Abc775A;
extern T0*ms596_161665Abc596A;
extern T0*ms793_136857117Abc793A;
extern T0*ms107_445497083Abc107A;
extern T0*ms284_252Abc409A;
extern T0*ms34_2065491Abc34A;
extern T0*ms611_23647157Abc611A;
extern T0*ms107_215Abc368A;
extern T0*ms112_1836282258Abc112A;
extern T0*ms100_911265735Abc100A;
extern T0*ms112_107312226Abc112A;
extern T0*ms33_180965447Abc33A;
extern T0*ms34_18090Abc357A;
extern T0*ms432_299Abc432A;
extern T0*ms100_79251Abc100A;
extern T0*ms736_888288799Abc736A;
extern T0*ms566_237Abc566A;
extern T0*ms112_522691310Abc112A;
extern T0*ms112_400297641Abc112A;
extern T0*ms112_400297641Abc112B;
extern T0*ms112_400297641Abc112C;
extern T0*ms108_301Abc108A;
extern T0*ms112_400297641Abc112D;
extern T0*ms622_31455Abc622A;
extern T0*ms470_1577658176Abc470A;
extern T0*ms284_252Abc442A;
extern T0*ms112_23988287Abc112A;
extern T0*ms284_252Abc443A;
extern T0*ms33_217Abc33A;
extern T0*ms112_30942Abc112A;
extern T0*ms792_77282146Abc792A;
extern T0*ms112_12331Abc622A;
extern T0*ms112_12331Abc622B;
extern T0*ms34_436911Abc563A;
extern T0*ms112_12331Abc626A;
extern T0*ms470_1809088081Abc470A;
extern T0*ms30_1090Abc685A;
extern T0*ms376_2014931627Abc376A;
extern T0*ms625_160937Abc625A;
extern T0*ms394_1089483711Abc394A;
extern T0*ms33_203589551Abc33A;
extern T0*ms34_1168210079Abc34A;
extern T0*ms616_105Abc616A;
extern T0*ms419_1700082283Abc419A;
extern T0*ms432_620Abc432A;
extern T0*ms100_28789007Abc100A;
extern T0*ms284_252Abc524A;
extern T0*ms284_252Abc519A;
extern T0*ms284_252Abc519B;
extern T0*ms599_1032053803Abc599A;
extern T0*ms284_252Abc480A;
extern T0*ms280_413151726Abc280A;
extern T0*ms280_413151726Abc280B;
extern T0*ms284_252Abc476A;
extern T0*ms284_252Abc476B;
extern T0*ms107_5873980Abc107A;
extern T0*ms112_116813823Abc112A;
extern T0*ms622_34510Abc622A;
extern T0*ms400_1592935176Abc400E;
extern T0*ms400_1592935176Abc400D;
extern T0*ms400_1592935176Abc400C;
extern T0*ms400_1592935176Abc400B;
extern T0*ms400_1592935176Abc400A;
extern T0*ms33_1578334651Abc33A;
extern T0*ms274_929353692Abc274A;
extern T0*ms112_1483072174Abc112A;
extern T0*ms611_185468Abc611A;
extern T0*ms112_1965730Abc112A;
extern T0*ms371_2126200255Abc112A;
extern T0*ms33_167970159Abc33A;
extern T0*ms622_525503499Abc622A;
extern T0*ms734_78209Abc734A;
extern T0*ms284_252Abc493A;
extern T0*ms475_2009909053Abc475A;
extern T0*ms280_1492303331Abc280A;
extern T0*ms112_54734511Abc112A;
extern T0*ms112_1934139Abc112C;
extern T0*ms112_1934139Abc112B;
extern T0*ms112_1934139Abc112A;
extern T0*ms419_2134616155Abc419A;
extern T0*ms112_2060090728Abc112A;
extern T0*ms112_941548611Abc112C;
extern T0*ms115_1811139659Abc115A;
extern T0*ms112_941548611Abc112B;
extern T0*ms112_941548611Abc112A;
extern T0*ms110_2178Abc110A;
extern T0*ms33_240810604Abc33A;
extern T0*ms625_1068122514Abc625A;
extern T0*ms115_1129671576Abc115A;
extern T0*ms599_254Abc599A;
extern T0*ms614_11300605Abc614A;
extern T0*ms614_11300605Abc614B;
extern T0*ms614_11300605Abc614C;
extern T0*ms614_11300605Abc614D;
extern T0*ms452_1875641781Abc452A;
extern T0*ms112_530940601Abc112A;
extern T0*ms478_1387816739Abc478A;
extern T0*ms107_689013605Abc107A;
extern T0*ms108_165012750Abc108A;
extern T0*ms284_252Abc626A;
extern T0*ms284_252Abc626B;
extern T0*ms498_1083118122Abc498A;
extern T0*ms412_1085830094Abc412A;
extern T0*ms33_1553736287Abc33A;
extern T0*ms107_485115581Abc107A;
extern T0*ms623_91Abc623A;
extern T0*ms614_2187585Abc614A;
extern T0*ms112_6455Abc112A;
extern T0*ms112_1601653158Abc112B;
extern T0*ms112_1164208Abc112A;
extern T0*ms112_1601653158Abc112A;
extern T0*ms616_380218Abc616A;
extern T0*ms616_380168Abc616A;
extern T0*ms469_1490203324Abc469A;
extern T0*ms400_1324593410Abc400A;
extern T0*ms613_1476205446Abc613A;
extern T0*ms100_1752914319Abc100A;
extern T0*ms363_611824887Abc363A;
extern T0*ms34_1223234252Abc34A;
extern T0*ms32_329Abc32A;
extern T0*ms286_624587783Abc286A;
extern T0*ms32_334Abc32A;
extern T0*ms108_9121Abc108A;
extern T0*ms357_1664909434Abc357A;
extern T0*ms349_1771711260Abc349A;
extern T0*ms280_413151726Abc461A;
extern T0*ms100_494839979Abc100A;
extern T0*ms34_1975394Abc34A;
extern T0*ms89_1462938943Abc89A;
extern T0*ms616_380065Abc616A;
extern T0*ms397_461679483Abc397A;
extern T0*ms613_258Abc623A;
extern T0*ms112_1059359695Abc112A;
extern T0*ms32_635943583Abc32A;
extern T0*ms107_215Abc681A;
extern T0*ms280_722230651Abc280A;
extern T0*ms363_61858840Abc363A;
extern T0*ms100_2077708091Abc100A;
extern T0*ms100_2117894368Abc100A;
extern T0*ms613_258Abc613B;
extern T0*ms616_312808564Abc616A;
extern T0*ms613_258Abc613A;
extern T0*ms792_77562923Abc792A;
extern T0*ms599_1426099398Abc599A;
extern T0*ms115_1127406485Abc115A;
extern T0*ms476_94643563Abc405A;
extern T0*ms107_1242126608Abc107A;
extern T0*ms274_608446371Abc274A;
extern T0*ms34_306165094Abc34A;
extern T0*ms33_1487451Abc33A;
extern T0*ms100_2060176323Abc100A;
extern T0*ms100_1665385073Abc100A;
extern T0*ms33_65574Abc33A;
extern T0*ms100_180894Abc100A;
extern T0*ms108_150382995Abc108A;
extern T0*ms121_1071750288Abc121A;
extern T0*ms623_965636096Abc623A;
extern T0*ms33_911175911Abc33A;
extern T0*ms112_1295Abc613A;
extern T0*ms622_265Abc622B;
extern T0*ms622_265Abc622A;
extern T0*ms622_17743770Abc622B;
extern T0*ms112_1295Abc623A;
extern T0*ms622_17743770Abc622A;
extern T0*ms329_176865800Abc329A;
extern T0*ms112_1295Abc623B;
extern T0*ms112_1530032908Abc112A;
extern T0*ms110_448859Abc110A;
extern T0*ms112_1530032908Abc112B;
extern T0*ms112_1530032908Abc112C;
extern T0*ms100_1301660112Abc100A;
extern T0*ms112_1530032908Abc112D;
extern T0*ms662_301503927Abc662A;
extern T0*ms115_69115705Abc115A;
extern T0*ms599_948421114Abc599A;
extern T0*ms629_90792Abc629A;
extern T0*ms394_1747372019Abc394A;
extern T0*ms616_644847010Abc616A;
extern T0*ms622_1023363018Abc622A;
extern T0*ms621_1403828457Abc621A;
extern T0*ms599_1923813010Abc599A;
extern T0*ms34_16001Abc398A;
extern T0*ms408_1719402393Abc408A;
extern T0*ms343_242535516Abc343A;
extern T0*ms443_1428348580Abc443A;
extern T0*ms112_1271Abc599A;
extern T0*ms112_1042003640Abc112A;
extern T0*ms112_6877Abc112A;
extern T0*ms519_840796792Abc519A;
extern T0*ms112_1965252672Abc112A;
extern T0*ms34_264667428Abc34A;
extern T0*ms100_552734069Abc100A;
extern T0*ms622_1586596820Abc623A;
extern T0*ms622_1586596820Abc622B;
extern T0*ms621_1119207694Abc621A;
extern T0*ms622_1586596820Abc622A;
extern T0*ms100_4492176Abc599A;
extern T0*ms614_1240Abc614A;
extern T0*ms622_6534Abc623A;
extern T0*ms405_1136256141Abc405A;
extern T0*ms476_94643563Abc476A;
extern T0*ms622_6534Abc622A;
extern T0*ms112_379Abc112A;
extern T0*ms112_379Abc112B;
extern T0*ms388_1814961148Abc388A;
extern T0*ms34_212160365Abc34A;
extern T0*ms614_1240Abc622A;
extern T0*ms622_9954400Abc622A;
extern T0*ms329_41769343Abc329A;
extern T0*ms792_44739Abc792A;
extern T0*ms659_1257368965Abc659A;
extern T0*ms34_16001Abc363B;
extern T0*ms34_16001Abc363A;
extern T0*ms34_414461Abc34A;
extern T0*ms622_1338608648Abc622A;
extern T0*ms367_22401251Abc367A;
extern T0*ms100_4492176Abc628A;
extern T0*ms367_22401251Abc367B;
extern T0*ms422_983618541Abc422A;
extern T0*ms565_302501127Abc565A;
extern T0*ms33_7704337Abc33A;
extern T0*ms110_1663868Abc110A;
extern T0*ms30_104Abc30A;
extern T0*ms112_724500276Abc112A;
extern T0*ms280_413151726Abc690A;
extern T0*ms630_2394Abc630A;
extern T0*ms30_53561911Abc30A;
extern T0*ms34_10648581Abc433A;
extern T0*ms100_860582570Abc100A;
extern T0*ms34_10648581Abc377A;
extern T0*ms599_1610470399Abc599A;
extern T0*ms100_1559455194Abc100A;
extern T0*ms622_1116064705Abc622A;
extern T0*ms34_408086Abc34A;
extern T0*ms683_78239462Abc683A;
extern T0*ms34_407540Abc281A;
extern T0*ms101_2004339522Abc101A;
extern T0*ms339_731327330Abc339A;
extern T0*ms34_670Abc34A;
extern T0*ms33_1739790308Abc33A;
extern T0*ms107_1556970935Abc107A;
extern T0*ms635_1197649626Abc635A;
extern T0*ms448_914877497Abc448A;
extern T0*ms112_2115332211Abc112A;
extern T0*ms108_0Abc89A;
extern T0*ms112_1855175789Abc112A;
extern T0*ms34_1473988901Abc34A;
extern T0*ms34_402346Abc659A;
extern T0*ms635_1849347035Abc635A;
extern T0*ms599_1023028228Abc599A;
extern T0*ms112_7720290Abc112A;
extern T0*ms108_1561265653Abc108A;
extern T0*ms33_9529116Abc33A;
extern T0*ms112_41Abc112A;
extern T0*ms112_1136118256Abc112A;
extern T0*ms112_932172292Abc112A;
extern T0*ms108_592781506Abc108A;
extern T0*ms34_434665Abc34A;
extern T0*ms379_1552710436Abc379A;
extern T0*ms112_400297641Abc599A;
extern T0*ms112_400297641Abc599B;
extern T0*ms95_251Abc95A;
extern T0*ms34_1509818Abc34A;
extern T0*ms623_1280Abc623B;
extern T0*ms623_1280Abc623A;
extern T0*ms329_971287994Abc329A;
extern T0*ms418_145102259Abc418A;
extern T0*ms399_925886099Abc399A;
extern T0*ms614_1406782500Abc614A;
extern T0*ms107_1836299930Abc107A;
extern T0*ms792_384078512Abc792A;
extern T0*ms485_672729595Abc485A;
extern T0*ms274_1130154866Abc102A;
extern T0*ms115_1127406485Abc434A;
extern T0*ms122_75639Abc122A;
extern T0*ms419_1627141371Abc419A;
extern T0*ms112_1723513855Abc112A;
extern T0*ms616_366Abc616A;
extern T0*ms112_1723513855Abc112B;
extern T0*ms112_1723513855Abc112C;
extern T0*ms112_1723513855Abc112D;
extern T0*ms792_1651Abc792A;
extern T0*ms480_2088401Abc480A;
extern T0*ms616_366Abc614B;
extern T0*ms616_366Abc614A;
extern T0*ms34_10049231Abc34A;
extern T0*ms635_378711602Abc635A;
extern T0*ms274_961330339Abc274A;
extern T0*ms614_1188262106Abc614A;
extern T0*ms33_2035472654Abc33A;
extern T0*ms108_180Abc100A;
extern T0*ms34_1072344038Abc34B;
extern T0*ms34_1072344038Abc34A;
extern T0*ms621_1994852Abc621C;
extern T0*ms621_1994852Abc621B;
extern T0*ms560_992810240Abc560A;
extern T0*ms621_1994852Abc621A;
extern T0*ms519_922867504Abc519A;
extern T0*ms100_75828399Abc100A;
extern T0*ms34_16001Abc34A;
extern T0*ms34_3601Abc471A;
extern T0*ms792_604Abc792B;
extern T0*ms792_604Abc792A;
extern T0*ms100_1297544492Abc100A;
extern T0*ms400_163270777Abc400A;
extern T0*ms400_163270777Abc400B;
extern T0*ms100_922212712Abc100A;
extern T0*ms400_163270777Abc400C;
extern T0*ms108_17494489Abc108A;
extern T0*ms100_407741255Abc100A;
extern T0*ms668_1937147216Abc668A;
extern T0*ms365_432936020Abc365A;
extern T0*ms107_1839715989Abc107A;
extern T0*ms34_78591Abc34A;
extern T0*ms100_761631659Abc100A;
extern T0*ms112_21391495Abc112A;
extern T0*ms616_1124563501Abc616A;
extern T0*ms112_1492394528Abc112A;
extern T0*ms100_1606714210Abc100A;
extern T0*ms30_1090Abc30A;
extern T0*ms34_451011Abc647A;
extern T0*ms452_1051699101Abc452A;
extern T0*ms102_1784452489Abc102A;
extern T0*ms566_1710309Abc566A;
extern T0*ms100_1160088831Abc100A;
extern T0*ms112_6455Abc621A;
extern T0*ms112_6455Abc566A;
extern T0*ms112_6455Abc566B;
extern T0*ms274_374877Abc274A;
extern T0*ms380_905138318Abc380A;
extern T0*ms112_6455Abc622A;
extern T0*ms112_6455Abc622B;
extern T0*ms112_6455Abc623A;
extern T0*ms684_1499315956Abc684A;
extern T0*ms112_6455Abc623B;
extern T0*ms112_6455Abc623C;
extern T0*ms101_1578831409Abc101A;
extern T0*ms33_591417242Abc33A;
extern T0*ms108_333Abc108A;
extern T0*ms108_333Abc108B;
extern T0*ms108_333Abc108C;
extern T0*ms101_274238642Abc101A;
extern T0*ms112_471707221Abc112A;
extern T0*ms100_316863332Abc100A;
extern T0*ms623_531809155Abc623A;
extern T0*ms107_5615Abc107A;
extern T0*ms34_2032026Abc34A;
extern T0*ms400_190952Abc400D;
extern T0*ms33_1744612358Abc33A;
extern T0*ms400_190952Abc400C;
extern T0*ms400_190952Abc400B;
extern T0*ms400_190952Abc400A;
extern T0*ms345_1759986771Abc345A;
extern T0*ms797_2007377394Abc797A;
extern T0*ms112_6455Abc599A;
extern T0*ms112_490486762Abc112A;
extern T0*ms30_1042405932Abc30A;
extern T0*ms101_1708886163Abc101A;
extern T0*ms622_160146Abc622B;
extern T0*ms622_160146Abc622A;
extern T0*ms394_332834879Abc394A;
extern T0*ms107_66925608Abc107A;
extern T0*ms274_2100317873Abc274A;
extern T0*ms100_928941315Abc100A;
extern T0*ms112_1838958244Abc112A;
extern T0*ms354_892535123Abc354A;
extern T0*ms599_1426Abc599A;
extern T0*ms475_1753Abc475A;
extern T0*ms115_784841421Abc115A;
extern T0*ms100_1390190909Abc100A;
extern T0*ms367_5787Abc464A;
extern T0*ms792_171955Abc792A;
extern T0*ms635_58505493Abc635A;
extern T0*ms34_1957581Abc34A;
extern T0*ms100_611Abc651A;
extern T0*ms35_2248290Abc35A;
extern T0*ms418_1288915017Abc112A;
extern T0*ms112_401124480Abc112A;
extern T0*ms115_1248054333Abc115A;
extern T0*ms397_1090404950Abc397A;
extern T0*ms100_611Abc654A;
extern T0*ms112_6355Abc112A;
extern T0*ms622_714188879Abc622A;
extern T0*ms274_1130154866Abc274A;
extern T0*ms33_42Abc33A;
extern T0*ms33_337331Abc33A;
extern T0*ms34_251171752Abc34A;
extern T0*ms112_1924772383Abc112A;
extern T0*ms524_287Abc598A;
extern T0*ms121_210310269Abc121A;
extern T0*ms419_1134247532Abc419A;
extern T0*ms611_4570932Abc611A;
extern T0*ms104_1880881887Abc612A;
extern T0*ms367_5787Abc367A;
extern T0*ms621_189437896Abc621A;
extern T0*ms274_1476966395Abc274A;
extern T0*ms614_1446625Abc614A;
extern T0*ms599_657822788Abc599A;
extern T0*ms470_34086Abc470A;
extern T0*ms33_79341Abc33A;
extern T0*ms33_1375414302Abc33A;
extern T0*ms621_1087364605Abc621A;
extern T0*ms33_1297432701Abc33A;
extern T0*ms329_1207039342Abc329A;
extern T0*ms792_1927425Abc792A;
extern T0*ms101_174945438Abc101A;
extern T0*ms565_1476281050Abc565A;
extern T0*ms282_1185293475Abc282A;
extern T0*ms282_1185293475Abc282B;
extern T0*ms108_1087245292Abc108A;
extern T0*ms107_1019367716Abc107A;
extern T0*ms397_1816888147Abc397A;
extern T0*ms599_560761477Abc599A;
extern T0*ms622_83277Abc622A;
extern T0*ms100_2037548Abc100B;
extern T0*ms100_2037548Abc100A;
extern T0*ms378_305790140Abc378A;
extern T0*ms33_1297876698Abc33A;
extern T0*ms622_17743865Abc622B;
extern T0*ms622_17743865Abc622A;
extern T0*ms100_376006259Abc100A;
extern T0*ms122_150325744Abc122A;
extern T0*ms100_4492176Abc112A;
extern T0*ms107_427937988Abc107A;
extern T0*ms628_476Abc628A;
extern T0*ms107_1145029170Abc107A;
extern T0*ms100_52979396Abc100A;
extern T0*ms614_36126743Abc614A;
extern T0*ms622_2217200Abc622A;
extern T0*ms112_1713607783Abc112A;
extern T0*ms100_4492176Abc100A;
extern T0*ms625_754574290Abc625A;
extern T0*ms790_742356016Abc790A;
extern T0*ms106_1152235958Abc106A;
extern T0*ms32_1194182360Abc32A;
extern T0*ms524_287Abc524A;
extern T0*ms622_185515Abc622A;
extern T0*ms405_581709925Abc405A;
extern T0*ms30_579450289Abc30A;
extern T0*ms33_1530432238Abc33A;
extern T0*ms115_1297180456Abc115A;
extern T0*ms112_588411932Abc112A;
extern T0*ms329_770157670Abc329A;
extern T0*ms401_1256137461Abc401A;
extern T0*ms476_594795843Abc476A;
extern T0*ms33_9713026Abc33A;
extern T0*ms792_110557057Abc792A;
extern T0*ms616_1060489498Abc616A;
extern T0*ms112_41Abc614A;
extern T0*ms100_844703215Abc100A;
extern T0*ms797_1847764413Abc797A;
extern T0*ms34_407540Abc34A;
extern T0*ms112_41Abc616A;
extern T0*ms112_284Abc112A;
extern T0*ms112_41Abc616B;
extern T0*ms628_294Abc628A;
extern T0*ms112_41Abc616C;
extern T0*ms400_1337425939Abc400A;
extern T0*ms400_1337425939Abc400B;
extern T0*ms112_41Abc622A;
extern T0*ms400_1337425939Abc400C;
extern T0*ms112_41Abc622B;
extern T0*ms400_1337425939Abc400D;
extern T0*ms400_1337425939Abc400E;
extern T0*ms403_13637Abc403A;
extern T0*ms614_8087250Abc614A;
extern T0*ms980_10220290Abc980B;
extern T0*ms980_10220290Abc980A;
extern T0*ms121_3556890Abc685A;
extern T0*ms622_5654700Abc622A;
extern T0*ms33_77832Abc33A;
extern T0*ms112_1852104762Abc112A;
extern T0*ms112_411134193Abc112A;
extern T0*ms95_439490016Abc95A;
extern T0*ms622_60405Abc622A;
extern T0*ms100_756929053Abc100A;
extern T0*ms599_2028521226Abc599A;
extern T0*ms101_1923039443Abc101A;
extern T0*ms284_10926944Abc284A;
extern T0*ms112_5367889Abc112A;
extern T0*ms112_1858528797Abc112A;
extern T0*ms100_277837020Abc100A;
extern T0*ms284_10926944Abc281A;
extern T0*ms598_197373672Abc598B;
extern T0*ms100_916596Abc476A;
extern T0*ms598_197373672Abc598A;
extern T0*ms100_307717976Abc100B;
extern T0*ms100_307717976Abc100A;
extern T0*ms112_471Abc112A;
extern T0*ms112_471Abc112B;
extern T0*ms108_2009849Abc779A;
extern T0*ms400_276773717Abc400A;
extern T0*ms101_175744216Abc101A;
extern T0*ms418_1288915017Abc418A;
extern T0*ms792_834589410Abc792A;
extern T0*ms792_73472312Abc792B;
extern T0*ms792_73472312Abc792A;
extern T0*ms625_32176Abc625A;
extern T0*ms34_451011Abc34A;
extern T0*ms792_176986Abc792A;
extern T0*ms599_46733806Abc599A;
extern T0*ms336_1246984134Abc336A;
extern T0*ms336_1246984134Abc336B;
extern T0*ms33_15448Abc33A;
extern T0*ms112_22971612Abc112A;
extern T0*ms621_411283072Abc621A;
extern T0*ms112_1102979933Abc623A;
extern T0*ms560_26108906Abc560A;
extern T0*ms108_1247935972Abc108A;
extern T0*ms100_67Abc100A;
extern T0*ms100_18150Abc100A;
extern T0*ms32_1897129554Abc32A;
extern T0*ms598_1199620901Abc598A;
extern T0*ms622_2118444283Abc622A;
extern T0*ms95_8198176Abc95A;
extern T0*ms623_804085Abc623B;
extern T0*ms623_804085Abc623A;
extern T0*ms34_78490Abc34A;
extern T0*ms100_18150Abc112A;
extern T0*ms100_18150Abc112B;
extern T0*ms100_18150Abc108A;
extern T0*ms110_59731Abc110A;
extern T0*ms107_604558099Abc107A;
extern T0*ms100_188494264Abc100A;
extern T0*ms625_300665Abc625A;
extern T0*ms622_427390771Abc622A;
extern T0*ms112_44Abc112A;
extern T0*ms121_1293738877Abc121A;
extern T0*ms980_387651299Abc980B;
extern T0*ms980_387651299Abc980A;
extern T0*ms112_1493Abc112A;
extern T0*ms476_115013643Abc476A;
extern T0*ms108_1588150185Abc108A;
extern T0*ms115_784841421Abc498A;
extern T0*ms100_2080029331Abc100A;
extern T0*ms100_112999293Abc100A;
extern T0*ms273_758913190Abc273A;
extern T0*ms471_55156846Abc471A;
extern T0*ms792_1739163321Abc792A;
extern T0*ms377_5382Abc377A;
extern T0*ms29_1889925553Abc29A;
extern T0*ms35_2246326Abc35A;
extern T0*ms560_168Abc560A;
extern T0*ms461_1377394679Abc461A;
extern T0*ms34_16942Abc466B;
extern T0*ms34_16942Abc466A;
extern T0*ms101_543076045Abc101B;
extern T0*ms101_543076045Abc101A;
extern T0*ms121_1430004157Abc121A;
extern T0*ms794_958639438Abc794A;
extern T0*ms101_543076045Abc100A;
extern T0*ms419_265238926Abc419A;
extern T0*ms101_432335312Abc101A;
extern T0*ms108_19761224Abc108A;
extern T0*ms112_726728775Abc112A;
extern T0*ms625_8436Abc625C;
extern T0*ms625_8436Abc625B;
extern T0*ms625_8436Abc625A;
extern T0*ms792_244523906Abc792A;
extern T0*ms368_78082Abc368A;
extern T0*ms418_1288915017Abc621A;
extern T0*ms623_32860Abc623A;
extern T0*ms33_39154229Abc33A;
extern T0*ms621_89821Abc621A;
extern T0*ms621_1824264277Abc621A;
extern T0*ms112_1253959973Abc112A;
extern T0*ms614_230Abc614A;
extern T0*ms566_255Abc566A;
extern T0*ms33_567319806Abc33A;
extern T0*ms112_218061703Abc112A;
extern T0*ms33_282Abc33A;
extern T0*ms599_26975293Abc599B;
extern T0*ms100_922446006Abc100A;
extern T0*ms599_26975293Abc599A;
extern T0*ms104_1880881887Abc104A;
extern T0*ms100_1725672511Abc100A;
extern T0*ms621_1757386798Abc621A;
extern T0*ms622_25969530Abc622A;
extern T0*ms790_1777096676Abc790A;
extern T0*ms108_341Abc108A;
extern T0*ms371_278Abc371A;
extern T0*ms33_1671553525Abc33A;
extern T0*ms400_1505530135Abc400A;
extern T0*ms112_323348966Abc112A;
extern T0*ms108_180Abc797A;
extern T0*ms108_180Abc797B;
extern T0*ms558_1399364920Abc558A;
extern T0*ms625_1659544035Abc625A;
extern T0*ms100_1414519430Abc100A;
extern T0*ms112_426087775Abc112A;
extern T0*ms635_1983193131Abc635A;
extern T0*ms33_253393261Abc33A;
extern T0*ms95_1838187926Abc95A;
extern T0*ms611_810433Abc611A;
extern T0*ms533_520647979Abc533A;
extern T0*ms112_660780608Abc112A;
extern T0*ms100_762747069Abc100A;
extern T0*ms33_55926626Abc33A;
extern T0*ms792_52067Abc792A;
extern T0*ms614_7225250Abc614A;
extern T0*ms121_113009969Abc121A;
extern T0*ms400_1297676933Abc400D;
extern T0*ms599_759184012Abc599A;
extern T0*ms400_1297676933Abc400C;
extern T0*ms400_1297676933Abc400B;
extern T0*ms400_1297676933Abc400A;
extern T0*ms394_35382059Abc394A;
extern T0*ms115_325166540Abc115A;
extern T0*ms34_9909665Abc34A;
extern T0*ms599_567426438Abc599A;
extern T0*ms112_700572143Abc112A;
extern T0*ms625_5279655Abc625A;
extern T0*ms100_1632732392Abc100A;
extern T0*ms336_1060258809Abc336A;
extern T0*ms614_167166Abc614A;
extern T0*ms423_1773450779Abc423A;
extern T0*ms112_273443870Abc112A;
extern T0*ms611_4570982Abc611A;
extern T0*ms614_40430500Abc614A;
extern T0*ms107_1783880762Abc107A;
extern T0*ms33_79341Abc616A;
extern T0*ms33_207673214Abc33A;
extern T0*ms108_1626Abc108A;
extern T0*ms108_1626Abc108B;
extern T0*ms436_1478Abc436A;
extern T0*ms792_15405Abc792A;
extern T0*ms33_1501191Abc370A;
extern T0*ms792_2142119302Abc792A;
extern T0*ms112_284Abc566A;
extern T0*ms794_1682659883Abc794A;
extern T0*ms623_388821092Abc623A;
extern T0*ms662_143852403Abc662A;
extern T0*ms100_916596Abc100A;
extern T0*ms112_2096892436Abc112A;
extern T0*ms100_50040236Abc100B;
extern T0*ms452_2108232434Abc452A;
extern T0*ms100_50040236Abc100A;
extern T0*ms112_284Abc625A;
extern T0*ms422_1379248421Abc422A;
extern T0*ms34_937397683Abc34A;
extern T0*ms112_339308075Abc112A;
extern T0*ms112_357794960Abc112A;
extern T0*ms108_61342149Abc108A;
extern T0*ms598_926003101Abc598A;
extern T0*ms34_84443Abc34A;
extern T0*ms463_1204053035Abc463A;
extern T0*ms34_627Abc34A;
extern T0*ms33_1594034Abc33A;
extern T0*ms614_3485Abc614A;
extern T0*ms100_144939139Abc100A;
extern T0*ms112_1234811086Abc112A;
extern T0*ms622_10089690Abc622A;
extern T0*ms107_1225577982Abc107A;
extern T0*ms277_689575137Abc277A;
extern T0*ms112_284Abc599A;
extern T0*ms621_159025018Abc621A;
extern T0*ms112_471Abc622D;
extern T0*ms112_471Abc622E;
extern T0*ms274_2085574777Abc274A;
extern T0*ms35_78495Abc35A;
extern T0*ms100_1062177790Abc100A;
extern T0*ms410_1099750743Abc410A;
extern T0*ms107_2029530601Abc107A;
extern T0*ms100_155929078Abc100A;
extern T0*ms112_824324978Abc112A;
extern T0*ms108_6159594Abc108A;
extern T0*ms419_772854717Abc419A;
extern T0*ms108_539873441Abc108A;
extern T0*ms599_585895143Abc599A;
extern T0*ms274_1984169029Abc274A;
extern T0*ms116_270Abc116A;
extern T0*ms116_270Abc116B;
extern T0*ms112_1968768303Abc112A;
extern T0*ms107_1535001676Abc107A;
extern T0*ms116_270Abc116C;
extern T0*ms560_671Abc599A;
extern T0*ms622_9794360Abc622A;
extern T0*ms471_380590Abc471A;
extern T0*ms510_890319497Abc509A;
extern T0*ms394_277033810Abc394A;
extern T0*ms33_572288431Abc33A;
extern T0*ms115_22612837Abc560A;
extern T0*ms33_42134669Abc482A;
extern T0*ms436_1478Abc612A;
extern T0*ms112_1102979933Abc112A;
extern T0*ms112_471Abc599A;
extern T0*ms121_3556890Abc121A;
extern T0*ms400_211605167Abc400A;
extern T0*ms423_1110386385Abc423A;
extern T0*ms510_890319497Abc510A;
extern T0*ms110_57487Abc110A;
extern T0*ms33_12376Abc33A;
extern T0*ms100_246399995Abc100A;
extern T0*ms115_1008693261Abc115A;
extern T0*ms101_996106634Abc101A;
extern T0*ms104_1449185201Abc104A;
extern T0*ms465_1867518592Abc465A;
extern T0*ms33_438300Abc33A;
extern T0*ms108_186217457Abc108A;
extern T0*ms790_130382376Abc790A;
extern T0*ms100_611217054Abc100A;
extern T0*ms616_2251910Abc616A;
extern T0*ms616_2251910Abc616B;
extern T0*ms100_1775667520Abc100A;
extern T0*ms33_577213499Abc33A;
extern T0*ms622_484454800Abc622A;
extern T0*ms621_1407Abc621A;
extern T0*ms470_1163823042Abc470A;
extern T0*ms432_408035024Abc432A;
extern T0*ms100_18150Abc629A;
extern T0*ms471_83406Abc471A;
extern T0*ms560_168Abc112A;
extern T0*ms510_890319497Abc374A;
extern T0*ms34_17715Abc34A;
extern T0*ms683_1601130656Abc683A;
extern T0*ms100_850458948Abc100A;
extern T0*ms560_671Abc560A;
extern T0*ms599_882065083Abc599B;
extern T0*ms599_882065083Abc599A;
extern T0*ms101_175744316Abc101A;
extern T0*ms100_18150Abc595A;
extern T0*ms100_18150Abc595B;
extern T0*ms599_1489891655Abc599A;
extern T0*ms35_2191641Abc35A;
extern T0*ms34_17176Abc106A;
extern T0*ms100_1703575813Abc100A;
extern T0*ms622_162010Abc623A;
extern T0*ms100_18150Abc599A;
extern T0*ms100_18150Abc599B;
extern T0*ms100_18150Abc599C;
extern T0*ms112_284Abc792A;
extern T0*ms100_18150Abc599D;
extern T0*ms112_284Abc792B;
extern T0*ms622_162010Abc622A;
extern T0*ms100_18150Abc599E;
extern T0*ms112_284Abc792C;
extern T0*ms100_18150Abc599F;
extern T0*ms112_284Abc792D;
extern T0*ms599_1367040625Abc599A;
extern T0*ms33_1549697Abc33A;
extern T0*ms112_383570Abc112A;
extern T0*ms33_42134669Abc33A;
extern T0*ms274_698011541Abc274A;
extern T0*ms30_375350487Abc30A;
extern T0*ms616_602573626Abc616A;
extern T0*ms734_16139Abc734A;
extern T0*ms625_138425Abc625A;
extern T0*ms625_138425Abc625B;
extern T0*ms336_556920526Abc336A;
extern T0*ms100_688657949Abc100A;
extern T0*ms274_708319Abc115A;
extern T0*ms274_708319Abc115B;
extern T0*ms281_15195Abc281A;
extern T0*ms458_99702656Abc458A;
extern T0*ms100_339436953Abc100A;
extern T0*ms100_1744209811Abc100A;
extern T0*ms560_671Abc464B;
extern T0*ms115_7612837Abc115B;
extern T0*ms560_671Abc464A;
extern T0*ms115_7612837Abc115A;
extern T0*ms273_988261007Abc273A;
extern T0*ms108_2009849Abc108A;
extern T0*ms476_1088102843Abc476A;
extern T0*ms622_907447617Abc622A;
extern T0*ms33_1831158645Abc33A;
extern T0*ms614_570Abc614A;
extern T0*ms616_86950Abc616A;
extern T0*ms622_59375621Abc622A;
extern T0*ms621_614557109Abc621A;
extern T0*ms34_10648581Abc34A;
extern T0*ms107_1450022771Abc107A;
extern T0*ms452_1436450217Abc452A;
extern T0*ms621_1374304640Abc621A;
extern T0*ms33_275488632Abc33A;
extern T0*ms112_273431355Abc599D;
extern T0*ms400_1469170081Abc400A;
extern T0*ms112_273431355Abc599C;
extern T0*ms410_936707889Abc410A;
extern T0*ms112_273431355Abc599B;
extern T0*ms112_273431355Abc599A;
extern T0*ms792_1396Abc792A;
extern T0*ms100_1011636926Abc100A;
extern T0*ms100_1522646678Abc100A;
extern T0*ms100_188014584Abc100A;
extern T0*ms33_89510Abc33A;
extern T0*ms399_1140411454Abc399A;
extern T0*ms599_20240284Abc599A;
extern T0*ms33_201970799Abc33A;
extern T0*ms34_75797981Abc34A;
extern T0*ms100_1953566687Abc100A;
extern T0*ms616_1936367907Abc616A;
extern T0*ms112_273431355Abc625A;
extern T0*ms400_2480364Abc400A;
extern T0*ms274_452889Abc274A;
extern T0*ms35_234165132Abc35A;
extern T0*ms112_273431355Abc566A;
extern T0*ms33_53339Abc33A;
extern T0*ms100_1452100558Abc100A;
extern T0*ms116_270Abc420A;
extern T0*ms108_89862Abc108A;
extern T0*ms108_89862Abc108B;
extern T0*ms432_1642232185Abc432A;
extern T0*ms327_864187036Abc327A;
extern T0*ms980_1760616840Abc980A;
extern T0*ms410_1931700734Abc410A;
extern T0*ms33_2054549840Abc33A;
extern T0*ms623_35966Abc623A;
extern T0*ms108_218174Abc108A;
extern T0*ms108_217674Abc108A;
extern T0*ms622_1840Abc622C;
extern T0*ms622_1840Abc622B;
extern T0*ms622_1840Abc622A;
extern T0*ms32_331Abc32A;
extern T0*ms565_1476287022Abc565A;
extern T0*ms100_1174611449Abc100A;
extern T0*ms33_859431564Abc33A;
extern T0*ms110_76405Abc110A;
extern T0*ms560_724183788Abc560A;
extern T0*ms622_884813300Abc622A;
extern T0*ms33_2218105Abc33A;
extern T0*ms34_84443Abc392A;
extern T0*ms100_1731250773Abc100A;
extern T0*ms599_1664036235Abc599A;
extern T0*ms461_2141380032Abc461A;
extern T0*ms434_235492225Abc434A;
extern T0*ms447_1615634978Abc447A;
extern T0*ms566_51582255Abc566A;
extern T0*ms599_9589368Abc599A;
extern T0*ms34_3085Abc34A;
extern T0*ms621_172080Abc621A;
extern T0*ms274_139303084Abc274A;
extern T0*ms980_1994165009Abc980A;
extern T0*ms368_1348774Abc368A;
extern T0*ms34_78263Abc100A;
extern T0*ms112_2109816196Abc112A;
extern T0*ms112_2109816196Abc112B;
extern T0*ms33_7748406Abc33A;
extern T0*ms107_1004555549Abc107A;
extern T0*ms33_1447702Abc33A;
extern T0*ms100_1436398529Abc100A;
extern T0*ms550_193194Abc550A;
extern T0*ms566_166654Abc566A;
extern T0*ms599_82Abc599A;
extern T0*ms34_14036Abc397A;
extern T0*ms33_839855894Abc33A;
extern T0*ms33_1395184171Abc33A;
extern T0*ms616_685204250Abc616A;
extern T0*ms112_78646Abc112A;
extern T0*ms623_129654140Abc623B;
extern T0*ms623_129654140Abc623A;
extern T0*ms33_94Abc107A;
extern T0*ms611_185458Abc611A;
extern T0*ms611_185463Abc611A;
extern T0*ms112_325655889Abc112A;
extern T0*ms623_2122389958Abc623A;
extern T0*ms112_1901755Abc112A;
extern T0*ms112_960414291Abc112A;
extern T0*ms565_985967445Abc565A;
extern T0*ms368_202031759Abc561A;
extern T0*ms621_1231257120Abc621A;
extern T0*ms100_1289042164Abc100A;
extern T0*ms490_2057854492Abc490A;
extern T0*ms598_1646Abc792B;
extern T0*ms598_1646Abc792A;
extern T0*ms34_10990481Abc34A;
extern T0*ms115_22612837Abc115A;
extern T0*ms93_1554312113Abc93A;
extern T0*ms100_1701980726Abc100A;
extern T0*ms616_1084495643Abc616A;
extern T0*ms633_496139469Abc633A;
extern T0*ms34_2593373Abc34A;
extern T0*ms733_2027238465Abc733A;
extern T0*ms274_2070822678Abc274A;
extern T0*ms687_46245Abc687A;
extern T0*ms565_15019Abc565A;
extern T0*ms100_2127445170Abc100A;
extern T0*ms33_197002174Abc33A;
extern T0*ms33_14150Abc33A;
extern T0*ms367_1114345928Abc367A;
extern T0*ms35_1994621Abc35A;
extern T0*ms345_1186844731Abc345A;
extern T0*ms112_419316052Abc112A;
extern T0*ms112_1350760769Abc112A;
extern T0*ms33_16616Abc33A;
extern T0*ms112_1009317511Abc112A;
extern T0*ms100_246527867Abc100A;
extern T0*ms405_1732344459Abc405A;
extern T0*ms115_612971904Abc115A;
extern T0*ms112_1110850242Abc112A;
extern T0*ms397_333554149Abc397A;
extern T0*ms33_15831Abc33A;
extern T0*ms33_2174354Abc33A;
extern T0*ms95_74133124Abc95A;
extern T0*ms100_1910692676Abc100A;
extern T0*ms614_112304676Abc614A;
extern T0*ms622_104084395Abc622B;
extern T0*ms622_104084395Abc622A;
extern T0*ms112_1450568746Abc112A;
extern T0*ms560_671Abc112B;
extern T0*ms560_671Abc112A;
extern T0*ms599_505232755Abc599A;
extern T0*ms329_560316788Abc329A;
extern T0*ms622_6995Abc622A;
extern T0*ms35_594Abc110A;
extern T0*ms622_108351709Abc622A;
extern T0*ms35_2191641Abc112A;
extern T0*ms33_48856070Abc33A;
extern T0*ms519_360Abc622B;
extern T0*ms519_360Abc622A;
extern T0*ms95_1539816514Abc95A;
extern T0*ms107_1572647306Abc107B;
extern T0*ms107_1572647306Abc107A;
extern T0*ms33_312005144Abc33A;
extern T0*ms101_446380143Abc101A;
extern T0*ms599_35330Abc599A;
extern T0*ms33_386854Abc33A;
extern T0*ms112_1938991062Abc112A;
extern T0*ms368_202031759Abc368A;
extern T0*ms34_10876026Abc34A;
extern T0*ms102_42698349Abc102A;
extern T0*ms470_348Abc470A;
extern T0*ms598_1646Abc598B;
extern T0*ms452_1962655329Abc452A;
extern T0*ms598_1646Abc598A;
extern T0*ms107_601041072Abc107A;
extern T0*ms35_10714862Abc35A;
extern T0*ms400_156630152Abc400A;
extern T0*ms400_156630152Abc400B;
extern T0*ms400_156630152Abc400C;
extern T0*ms33_1176378494Abc33A;
extern T0*ms687_928596125Abc687A;
extern T0*ms621_419443Abc621A;
extern T0*ms622_351281Abc622A;
extern T0*ms622_325Abc622A;
extern T0*ms614_36122993Abc614A;
extern T0*ms622_6810Abc622B;
extern T0*ms622_6810Abc622A;
extern T0*ms110_3169Abc110A;
extern T0*ms284_300Abc112A;
extern T0*ms519_360Abc519A;
extern T0*ms112_395316170Abc112A;
extern T0*ms95_1052333303Abc95A;
extern T0*ms792_7296Abc792A;
extern T0*ms107_1174466439Abc107A;
extern T0*ms464_789350917Abc464A;
extern T0*ms107_1460051321Abc107A;
extern T0*ms112_1271Bbc112A;
extern T0*ms100_1617443474Abc100A;
extern T0*ms469_1468725331Abc469A;
extern T0*ms112_561301605Abc112A;
extern T0*ms112_175857472Abc112A;
extern T0*ms732_495673125Abc732A;
extern T0*ms621_1428771266Abc621A;
extern T0*ms616_2022635Abc616A;
extern T0*ms418_271Abc107A;
extern T0*ms418_271Abc107B;
extern T0*ms34_1992063831Abc34A;
extern T0*ms112_1295Bbc112A;
extern T0*ms634_1901947715Abc634A;
extern T0*ms34_400652Abc398A;
extern T0*ms336_70962Abc336A;
extern T0*ms622_168532Abc622A;
extern T0*ms274_1977886Abc274A;
extern T0*ms34_59251Abc34A;
extern T0*ms614_161951Abc614A;
extern T0*ms100_2087550139Abc100A;
extern T0*ms112_20552830Abc112A;
extern T0*ms100_2051403723Abc100A;
extern T0*ms108_466551816Abc108A;
extern T0*ms616_206626Abc616A;
extern T0*ms33_1682815431Abc33A;
extern T0*ms112_4620546Abc112A;
extern T0*ms599_6580Abc599A;
extern T0*ms469_218Abc469A;
extern T0*ms616_750Abc599A;
extern T0*ms100_2102385657Abc100A;
extern T0*ms405_2007408328Abc405A;
extern T0*ms34_1690381566Abc34A;
extern T0*ms371_561523426Abc371A;
extern T0*ms622_32650Abc622B;
extern T0*ms622_32650Abc622A;
extern T0*ms336_70962Abc405A;
extern T0*ms336_70962Abc405B;
extern T0*ms112_273431355Abc112B;
extern T0*ms34_18090Abc34A;
extern T0*ms112_273431355Abc112A;
extern T0*ms33_1740332382Abc33A;
extern T0*ms112_37095Abc112A;
extern T0*ms95_2123229206Abc95A;
extern T0*ms121_1711985232Abc121A;
extern T0*ms33_728963476Abc33A;
extern T0*ms33_534Abc33A;
extern T0*ms112_148900Abc112A;
extern T0*ms33_1245671098Abc33A;
extern T0*ms662_22122412Abc662A;
extern T0*ms622_704592146Abc622A;
extern T0*ms33_207673231Abc33A;
extern T0*ms115_938738041Abc115A;
extern T0*ms792_27909038Abc792A;
extern T0*ms33_1554777Abc33A;
extern T0*ms400_442652821Abc400A;
extern T0*ms616_750Abc616A;
extern T0*ms621_101227749Abc621A;
extern T0*ms112_1264Abc112A;
extern T0*ms329_2070057757Abc329A;
extern T0*ms792_1748680500Abc792A;
extern T0*ms380_527180488Abc380A;
extern T0*ms102_356743Abc102A;
extern T0*ms34_78263Abc477A;
extern T0*ms34_78263Abc477B;
extern T0*ms108_447734Abc108A;
extern T0*ms492_1879799154Abc492A;
extern T0*ms635_139854341Abc635A;
extern T0*ms599_2054563574Abc599A;
extern T0*ms112_635Abc112A;
extern T0*ms112_635Abc112B;
extern T0*ms112_1540494783Abc112A;
extern T0*ms100_888875725Abc100A;
extern T0*ms622_1514442508Abc622A;
extern T0*ms112_1417Abc112A;
extern T0*ms497_1962243783Abc497A;
extern T0*ms34_48390502Abc34A;
extern T0*ms558_2007779419Abc558A;
extern T0*ms327_1262756502Abc327A;
extern T0*ms616_1888091524Abc616A;
extern T0*ms648_247541875Abc648A;
extern T0*ms100_700613496Abc100A;
extern T0*ms102_1656731300Abc102A;
extern T0*ms336_70962Abc476A;
extern T0*ms33_218Abc33A;
extern T0*ms112_1565125654Abc112A;
extern T0*ms33_2038667775Abc33A;
extern T0*ms33_1680885744Abc33A;
extern T0*ms614_162019Abc614A;
extern T0*ms115_429361964Abc115A;
extern T0*ms616_6775Abc616A;
extern T0*ms33_45Abc33A;
extern T0*ms35_17498Abc35A;
extern T0*ms598_775396Abc598A;
extern T0*ms112_585944489Abc112A;
extern T0*ms112_78646Abc616A;
extern T0*ms100_1778077539Abc100A;
extern T0*ms112_1413407004Abc112A;
extern T0*ms34_77350Abc34A;
extern T0*ms336_70962Abc560A;
extern T0*ms792_486352305Abc792A;
extern T0*ms112_8359055Abc112A;
extern T0*ms34_8054609Abc34A;
extern T0*ms623_1431664982Abc623A;
extern T0*ms565_565060278Abc565A;
extern T0*ms113_6926Abc113A;
extern T0*ms100_1615234134Abc100A;
extern T0*ms616_180128Abc616A;
extern T0*ms616_180128Abc616B;
extern T0*ms101_1317175740Abc101A;
extern T0*ms107_292482Abc95A;
extern T0*ms107_292482Abc95B;
extern T0*ms107_292482Abc95C;
extern T0*ms379_668815628Abc379A;
extern T0*ms112_1063704391Abc112A;
extern T0*ms112_1450791030Abc112A;
extern T0*ms598_2039095413Abc598A;
extern T0*ms100_639285944Abc100A;
extern T0*ms33_2187483Abc33A;
extern T0*ms33_39002989Abc33A;
extern T0*ms100_99041221Abc100A;
extern T0*ms662_191115496Abc662A;
extern T0*ms418_271Abc418A;
extern T0*ms112_1765Abc112A;
extern T0*ms599_1676Abc599A;
extern T0*ms622_520388145Abc622B;
extern T0*ms622_520388145Abc622A;
extern T0*ms405_1119905623Abc405A;
extern T0*ms336_934695142Abc336A;
extern T0*ms616_16510Abc792A;
extern T0*ms635_7440512Abc635A;
extern T0*ms112_1746979137Abc112A;
extern T0*ms599_180709512Abc599A;
extern T0*ms736_263008962Abc736A;
extern T0*ms34_10208843Abc376A;
extern T0*ms33_9676326Abc33A;
extern T0*ms100_107634778Abc100A;
extern T0*ms371_561523426Abc667A;
extern T0*ms34_16942Abc34A;
extern T0*ms284_188916891Abc284A;
extern T0*ms599_26975282Abc599A;
extern T0*ms33_1157Abc33A;
extern T0*ms792_377Abc792B;
extern T0*ms792_377Abc792A;
extern T0*ms621_1085305030Abc621A;
extern T0*ms599_5284Abc599A;
extern T0*ms622_933501Abc622A;
extern T0*ms394_29037Abc394A;
extern T0*ms418_271Abc443A;
extern T0*ms418_271Abc394A;
extern T0*ms371_1731781Abc371A;
extern T0*ms33_112335826Abc33A;
extern T0*ms400_2004103151Abc400A;
extern T0*ms371_1731781Abc371B;
extern T0*ms108_297Abc108A;
extern T0*ms371_1731781Abc371C;
extern T0*ms112_36778611Abc112A;
extern T0*ms100_9897510Abc100A;
extern T0*ms621_16927Abc621A;
extern T0*ms792_46525Abc792A;
extern T0*ms121_203714719Abc121A;
extern T0*ms122_570Abc122A;
extern T0*ms336_25373399Abc336A;
extern T0*ms367_762122588Abc367A;
extern T0*ms367_762122588Abc367B;
extern T0*ms792_884381655Abc792A;
extern T0*ms400_1705796732Abc400A;
extern T0*ms621_2077255577Abc621A;
extern T0*ms100_2047202317Abc100A;
extern T0*ms100_2047202317Abc100B;
extern T0*ms797_1635136368Abc797A;
extern T0*ms418_271Abc476A;
extern T0*ms635_1238684603Abc635A;
extern T0*ms112_179423058Abc112A;
extern T0*ms432_205111678Abc432A;
extern T0*ms112_1682814572Abc112A;
extern T0*ms418_271Abc479A;
extern T0*ms95_445214625Abc95A;
extern T0*ms397_1182157125Abc397A;
extern T0*ms622_134878499Abc622A;
extern T0*ms422_1920465143Abc422A;
extern T0*ms621_49917876Abc621A;
extern T0*ms107_1483967746Abc107A;
extern T0*ms33_126Abc33A;
extern T0*ms599_436987Abc599A;
extern T0*ms599_2072064738Abc599A;
extern T0*ms599_247Abc599A;
extern T0*ms33_55040341Abc33A;
extern T0*ms32_1181006553Abc32A;
extern T0*ms284_300Abc616A;
extern T0*ms107_646243744Abc107A;
extern T0*ms397_1222747401Abc397A;
extern T0*ms112_1271Bbc614A;
extern T0*ms400_282345691Abc400A;
extern T0*ms33_371Abc33A;
extern T0*ms400_177461Abc400B;
extern T0*ms33_735034101Abc33A;
extern T0*ms400_177461Abc400A;
extern T0*ms112_1271Bbc621A;
extern T0*ms792_1288623074Abc792A;
extern T0*ms622_670Abc622B;
extern T0*ms284_300Abc625A;
extern T0*ms622_670Abc622A;
extern T0*ms112_36460172Abc112A;
extern T0*ms112_1271Bbc622A;
extern T0*ms112_1271Bbc622B;
extern T0*ms112_1271Bbc622C;
extern T0*ms112_1271Bbc622D;
extern T0*ms599_56760755Abc599A;
extern T0*ms792_1497878015Abc792A;
extern T0*ms29_1394769930Abc29A;
extern T0*ms394_29037Abc616A;
extern T0*ms112_1295Bbc565A;
extern T0*ms100_1898638542Abc100A;
extern T0*ms112_1295Bbc616A;
extern T0*ms112_499425548Abc112A;
extern T0*ms112_1295Bbc616B;
extern T0*ms792_687744958Abc792A;
extern T0*ms95_510352234Abc95A;
extern T0*ms599_4996600Abc599A;
extern T0*ms622_10089540Abc622A;
extern T0*ms476_1319735562Abc476A;
extern T0*ms519_1330923746Abc519A;
extern T0*ms34_90408Abc34A;
extern T0*ms33_15751Abc33A;
extern T0*ms274_641030424Abc274A;
extern T0*ms452_947318471Abc452A;
extern T0*ms623_3181Abc623A;
extern T0*ms112_1811657197Abc112A;
extern T0*ms280_92467250Abc280B;
extern T0*ms280_92467250Abc280A;
extern T0*ms112_37095Abc611A;
extern T0*ms112_431043495Abc112D;
extern T0*ms112_431043495Abc112C;
extern T0*ms112_431043495Abc112B;
extern T0*ms112_431043495Abc112A;
extern T0*ms662_501491947Abc662A;
extern T0*ms792_6614Abc792A;
extern T0*ms108_15828Abc108A;
extern T0*ms732_1309017823Abc732A;
extern T0*ms336_1813679543Abc336A;
extern T0*ms616_16510Abc616A;
extern T0*ms112_3374Abc112A;
extern T0*ms112_3374Abc112B;
extern T0*ms274_1709309070Abc107A;
extern T0*ms418_271Abc599A;
extern T0*ms34_78002Abc426A;
extern T0*ms34_78002Abc426B;
extern T0*ms108_9222Abc108A;
extern T0*ms623_177459204Abc623A;
extern T0*ms418_271Abc662A;
extern T0*ms623_177459204Abc623B;
extern T0*ms418_271Abc662B;
extern T0*ms418_271Abc662C;
extern T0*ms100_2110077371Abc100A;
extern T0*ms622_77767Abc622A;
extern T0*ms107_1365578385Abc107A;
extern T0*ms621_38305571Abc621A;
extern T0*ms622_153655Abc622A;
extern T0*ms108_8801Abc108A;
extern T0*ms110_3069Abc110A;
extern T0*ms34_3073Abc34A;
extern T0*ms622_296Abc623A;
extern T0*ms621_30034Abc621A;
extern T0*ms452_1630520481Abc452A;
extern T0*ms622_296Abc622A;
extern T0*ms792_2021999449Abc792B;
extern T0*ms792_2021999449Abc792A;
extern T0*ms112_1404148845Abc112A;
extern T0*ms792_129037214Abc792A;
extern T0*ms112_1404148845Abc112B;
extern T0*ms112_1404148845Abc112C;
extern T0*ms100_1003875089Abc100A;
extern T0*ms622_4638080Abc622A;
extern T0*ms100_554066118Abc100A;
extern T0*ms112_506210947Abc112A;
extern T0*ms621_52555395Abc621A;
extern T0*ms108_1255802680Abc108A;
extern T0*ms792_6830Abc792A;
extern T0*ms112_635Abc616A;
extern T0*ms112_635Abc616B;
extern T0*ms112_635Abc616C;
extern T0*ms112_635Abc616D;
extern T0*ms112_635Abc616E;
extern T0*ms112_635Abc622A;
extern T0*ms112_635Abc616F;
extern T0*ms112_635Abc622B;
extern T0*ms112_635Abc616G;
extern T0*ms112_635Abc616H;
extern T0*ms33_1735712398Abc33A;
extern T0*ms112_635Abc625A;
extern T0*ms112_635Abc625B;
extern T0*ms107_866669263Abc107A;
extern T0*ms797_480414235Abc797A;
extern T0*ms100_1176245553Abc100A;
extern T0*ms112_245Abc112A;
extern T0*ms107_195Abc107A;
extern T0*ms599_173055Abc599A;
extern T0*ms622_9905Abc622A;
extern T0*ms121_1711985232Abc685A;
extern T0*ms112_1957408550Abc112A;
extern T0*ms101_181806522Abc101A;
extern T0*ms792_479982486Abc792B;
extern T0*ms792_479982486Abc792A;
extern T0*ms403_1721243342Abc403A;
extern T0*ms623_534333098Abc623A;
extern T0*ms100_1453916708Abc100A;
extern T0*ms112_635Abc599A;
extern T0*ms622_1679636650Abc622A;
extern T0*ms108_8991Abc108A;
extern T0*ms622_1679636650Abc622B;
extern T0*ms625_5313505Abc625B;
extern T0*ms108_8991Abc108B;
extern T0*ms625_5313505Abc625A;
extern T0*ms112_713312393Abc112A;
extern T0*ms115_290966604Abc115A;
extern T0*ms100_397329363Abc100A;
extern T0*ms101_256559978Abc101A;
extern T0*ms405_176104896Abc405A;
extern T0*ms112_382Abc112A;
extern T0*ms616_379993Abc616A;
extern T0*ms112_382Abc112B;
extern T0*ms110_402Abc110A;
extern T0*ms33_747962924Abc33A;
extern T0*ms595_1971245Abc595A;
extern T0*ms622_167916Abc622B;
extern T0*ms622_167916Abc622A;
extern T0*ms476_1411247976Abc476A;
extern T0*ms566_1502207936Abc566A;
extern T0*ms792_680177517Abc792A;
extern T0*ms100_1869854287Abc100A;
extern T0*ms616_4425Abc616A;
extern T0*ms635_2025498932Abc635A;
extern T0*ms107_1131876546Abc107A;
extern T0*ms616_119389596Abc616A;
extern T0*ms117_584218374Abc117A;
extern T0*ms108_1319327951Abc108A;
extern T0*ms368_35157672Abc368A;
extern T0*ms274_1709309070Abc274A;
extern T0*ms329_580435889Abc329A;
extern T0*ms34_10193105Abc34A;
extern T0*ms622_1214258443Abc622A;
extern T0*ms110_395994Abc110A;
extern T0*ms622_1553763390Abc622A;
extern T0*ms100_1387339410Abc100A;
extern T0*ms118_300594Abc687A;
extern T0*ms101_35386613Abc101A;
extern T0*ms33_48672249Abc33A;
extern T0*ms107_408537579Abc107A;
extern T0*ms475_1370872538Abc475A;
extern T0*ms622_15533Abc622A;
extern T0*ms34_396356Abc599A;
extern T0*ms112_441192857Abc112A;
extern T0*ms277_1973946666Abc277A;
extern T0*ms108_1361085152Abc108A;
extern T0*ms107_1194472660Abc107A;
extern T0*ms107_10Abc112A;
extern T0*ms107_10Abc107A;
extern T0*ms107_10Abc112B;
extern T0*ms107_10Abc107B;
extern T0*ms452_783418632Abc452A;
extern T0*ms100_2108887750Abc100B;
extern T0*ms797_1644Abc797A;
extern T0*ms107_479236135Abc107A;
extern T0*ms100_2108887750Abc100A;
extern T0*ms797_1644Abc797B;
extern T0*ms107_10Abc115A;
extern T0*ms100_2001191Abc100A;
extern T0*ms274_90141Abc274A;
extern T0*ms112_635Abc792A;
extern T0*ms112_635Abc792B;
extern T0*ms100_676769302Abc100A;
extern T0*ms33_94407393Abc33A;
extern T0*ms121_195766720Abc121A;
extern T0*ms33_88795Abc33A;
extern T0*ms363_240593583Abc363A;
extern T0*ms469_522818189Abc469A;
extern T0*ms100_134219969Abc100A;
extern T0*ms107_921818688Abc107A;
extern T0*ms339_416500Abc339A;
extern T0*ms34_396356Abc614A;
extern T0*ms664_1760457965Abc664A;
extern T0*ms550_1096544670Abc550A;
extern T0*ms623_1773508175Abc623A;
extern T0*ms635_1677586033Abc635B;
extern T0*ms635_1677586033Abc635A;
extern T0*ms100_66884963Abc100A;
extern T0*ms476_1034900711Abc476A;
extern T0*ms980_1942675017Abc980A;
extern T0*ms622_1671077900Abc622B;
extern T0*ms622_1671077900Abc622A;
extern T0*ms33_573080478Abc33A;
extern T0*ms792_1831440704Abc792A;
extern T0*ms29_1852009437Abc29A;
extern T0*ms100_1505459217Abc100A;
extern T0*ms108_725963810Abc108A;
extern T0*ms112_1630601156Abc112A;
extern T0*ms112_1906398440Abc112A;
extern T0*ms100_96053257Abc100A;
extern T0*ms33_361Abc616A;
extern T0*ms33_361Abc616B;
extern T0*ms599_1246790712Abc599A;
extern T0*ms622_829308144Abc622A;
extern T0*ms32_831708366Abc32A;
extern T0*ms100_941240074Abc100A;
extern T0*ms736_1927020241Abc736A;
extern T0*ms34_396356Abc517A;
extern T0*ms100_1478844272Abc100A;
extern T0*ms794_1411018665Abc794A;
extern T0*ms616_236Abc616A;
extern T0*ms622_1824713404Abc622A;
extern T0*ms616_236Abc614A;
extern T0*ms100_202933204Abc100A;
extern T0*ms622_8485Abc622B;
extern T0*ms622_8485Abc622A;
extern T0*ms108_326Abc108A;
extern T0*ms792_1040644265Abc792A;
extern T0*ms108_25704393Abc108A;
extern T0*ms274_1667312535Abc274A;
extern T0*ms336_345225764Abc336A;
extern T0*ms33_47Abc112A;
extern T0*ms400_900982204Abc400A;
extern T0*ms112_3374Abc613A;
extern T0*ms336_1524252299Abc336A;
extern T0*ms272_1587749191Abc272A;
extern T0*ms379_492964813Abc379A;
extern T0*ms449_1087076085Abc449A;
extern T0*ms112_3374Abc616A;
extern T0*ms108_5525574Abc108A;
extern T0*ms112_3374Abc622A;
extern T0*ms112_3374Abc622B;
extern T0*ms112_1773201687Abc112A;
extern T0*ms616_1307328870Abc616A;
extern T0*ms565_11381817Abc596A;
extern T0*ms112_32080Abc112A;
extern T0*ms476_589832448Abc476A;
extern T0*ms112_397592212Abc112A;
extern T0*ms616_521905705Abc616A;
extern T0*ms112_2072467813Abc621A;
extern T0*ms400_1057872442Abc400A;
extern T0*ms621_6271Abc621A;
extern T0*ms112_2072467813Abc614A;
extern T0*ms599_1115628985Abc599A;
extern T0*ms112_2072467813Abc611A;
extern T0*ms35_1777434714Abc35A;
extern T0*ms35_336Abc108A;
extern T0*ms35_914215870Abc35A;
extern T0*ms95_1229059519Abc95A;
extern T0*ms34_396356Abc404A;
extern T0*ms112_1418906530Abc112A;
extern T0*ms112_781060556Abc112A;
extern T0*ms623_68406039Abc623A;
extern T0*ms112_3374Abc599A;
extern T0*ms623_68406039Abc623B;
extern T0*ms565_11381817Abc565A;
extern T0*ms599_1728089446Abc599A;
extern T0*ms635_1691484858Abc635A;
extern T0*ms35_822199910Abc35A;
extern T0*ms34_51843716Abc34A;
extern T0*ms616_958274895Abc616A;
extern T0*ms598_1191155066Abc598B;
extern T0*ms598_1191155066Abc598A;
extern T0*ms33_282Abc773A;
extern T0*ms792_2092663259Abc792A;
extern T0*ms101_1700247488Abc101A;
extern T0*ms33_62Abc33A;
extern T0*ms112_511465169Abc112A;
extern T0*ms400_1552156565Abc400E;
extern T0*ms400_1552156565Abc400D;
extern T0*ms112_245Abc613A;
extern T0*ms400_1552156565Abc400C;
extern T0*ms400_1552156565Abc400B;
extern T0*ms621_1215177661Abc621A;
extern T0*ms400_1552156565Abc400A;
extern T0*ms112_245Abc614A;
extern T0*ms112_245Abc614B;
extern T0*ms112_245Abc614C;
extern T0*ms112_245Abc614D;
extern T0*ms112_5395053Abc790C;
extern T0*ms112_5395053Abc790B;
extern T0*ms112_5395053Abc790A;
extern T0*ms112_508495830Abc112A;
extern T0*ms284_200Abc599A;
extern T0*ms635_81368369Abc635A;
extern T0*ms100_902126Abc100A;
extern T0*ms100_1284361566Abc100A;
extern T0*ms34_16264Abc466A;
extern T0*ms112_1642367158Abc112E;
extern T0*ms112_1642367158Abc112D;
extern T0*ms112_1642367158Abc112C;
extern T0*ms112_1642367158Abc112B;
extern T0*ms101_1604340919Abc101A;
extern T0*ms100_156243902Abc100A;
extern T0*ms112_1642367158Abc112A;
extern T0*ms284_1224218969Abc284A;
extern T0*ms108_50863580Abc108A;
extern T0*ms33_827429162Abc33A;
extern T0*ms34_1988096Abc34A;
extern T0*ms107_313299890Abc107A;
extern T0*ms625_1956008156Abc625A;
extern T0*ms420_77Abc420A;
extern T0*ms682_1452Abc682A;
extern T0*ms797_1101Abc107A;
extern T0*ms112_6559Abc112A;
extern T0*ms616_1291760099Abc616A;
extern T0*ms336_1001314405Abc336A;
extern T0*ms112_6559Abc112B;
extern T0*ms112_149822297Abc112A;
extern T0*ms112_382Abc616A;
extern T0*ms112_382Abc616B;
extern T0*ms112_382Abc616C;
extern T0*ms112_1273572186Abc112A;
extern T0*ms599_1642168697Abc599A;
extern T0*ms112_284Bbc112A;
extern T0*ms112_284Bbc112B;
extern T0*ms792_25822456Abc792A;
extern T0*ms115_1605047378Abc115A;
extern T0*ms792_25822456Abc792B;
extern T0*ms112_122027336Abc112A;
extern T0*ms33_619776399Abc33A;
extern T0*ms35_2141685Abc35A;
extern T0*ms112_1319581398Abc112A;
extern T0*ms614_115574176Abc614A;
extern T0*ms478_869266852Abc478A;
extern T0*ms108_297Abc980A;
extern T0*ms419_797085749Abc419A;
extern T0*ms628_591Abc628A;
extern T0*ms566_33316Abc566A;
extern T0*ms100_2061122069Abc100A;
extern T0*ms84_1761241425Abc84A;
extern T0*ms622_511943145Abc622A;
extern T0*ms100_199494346Abc100A;
extern T0*ms371_31214580Abc371A;
extern T0*ms419_1837585965Abc419A;
extern T0*ms628_591Abc630A;
extern T0*ms100_776600004Abc100A;
extern T0*ms616_1008067448Abc623A;
extern T0*ms616_252339Abc616C;
extern T0*ms616_252339Abc616B;
extern T0*ms363_1485100899Abc363A;
extern T0*ms616_252339Abc616A;
extern T0*ms336_2050169721Abc336A;
extern T0*ms100_1581435442Abc100A;
extern T0*ms107_10Abc483A;
extern T0*ms345_1195446850Abc345A;
extern T0*ms616_1008067448Abc616A;
extern T0*ms277_1188332009Abc277A;
extern T0*ms112_351488799Abc112A;
extern T0*ms112_382Abc599A;
extern T0*ms112_382Abc599B;
extern T0*ms112_382Abc599C;
extern T0*ms599_1566831588Abc599A;
extern T0*ms599_1485929081Abc599A;
extern T0*ms674_638047023Abc674A;
extern T0*ms467_384465Abc467A;
extern T0*ms378_1808265259Abc378A;
extern T0*ms112_1793244543Abc112A;
extern T0*ms674_638047023Abc665A;
extern T0*ms112_5395053Abc599A;
extern T0*ms107_1610926534Abc107A;
extern T0*ms108_373286592Abc108A;
extern T0*ms621_249330648Abc621A;
extern T0*ms623_1942608409Abc623A;
extern T0*ms100_1593742473Abc100A;
extern T0*ms89_3520Abc89A;
extern T0*ms119_2120987577Abc119A;
extern T0*ms100_586311386Abc100A;
extern T0*ms112_277Abc112A;
extern T0*ms112_282Abc112A;
extern T0*ms112_277Abc112B;
extern T0*ms112_277Abc112C;
extern T0*ms112_277Abc112D;
extern T0*ms112_277Abc112E;
extern T0*ms112_277Abc112F;
extern T0*ms112_277Abc112G;
extern T0*ms611_4571007Abc611A;
extern T0*ms625_41131Abc625A;
extern T0*ms33_1947246Abc33A;
extern T0*ms33_1947251Abc33A;
extern T0*ms100_1380562254Abc100A;
extern T0*ms112_5395053Abc614A;
extern T0*ms112_5395053Abc612J;
extern T0*ms625_1216329562Abc625B;
extern T0*ms112_5395053Abc612I;
extern T0*ms625_1216329562Abc625A;
extern T0*ms112_5395053Abc612H;
extern T0*ms112_5395053Abc612G;
extern T0*ms112_5395053Abc612F;
extern T0*ms112_5395053Abc612E;
extern T0*ms112_5395053Abc612D;
extern T0*ms467_384465Abc622A;
extern T0*ms112_5395053Abc612C;
extern T0*ms112_5395053Abc612B;
extern T0*ms112_5395053Abc612A;
extern T0*ms118_300594Abc118A;
extern T0*ms467_384465Abc623A;
extern T0*ms118_300594Abc121A;
extern T0*ms599_37202594Abc599A;
extern T0*ms35_385751Abc274A;
extern T0*ms371_360Abc112A;
extern T0*ms100_2055333675Abc100A;
extern T0*ms100_2055333675Abc100B;
extern T0*ms980_1508488213Abc980A;
extern T0*ms471_449661Abc471A;
extern T0*ms622_162020Abc622A;
extern T0*ms100_1819737650Abc100A;
extern T0*ms100_973007162Abc100A;
extern T0*ms686_355003Abc686A;
extern T0*ms621_280766651Abc621A;
extern T0*ms621_1193180751Abc621A;
extern T0*ms483_10459847Abc483A;
extern T0*ms792_26635163Abc792A;
extern T0*ms599_1992825354Abc599A;
extern T0*ms118_300594Abc100A;
extern T0*ms622_6425Abc622A;
extern T0*ms394_354065377Abc394A;
extern T0*ms112_1330Abc112A;
extern T0*ms112_1330Abc112B;
extern T0*ms112_1330Abc112C;
extern T0*ms112_1330Abc112D;
extern T0*ms112_1330Abc112E;
extern T0*ms112_1330Abc112F;
extern T0*ms112_1330Abc112G;
extern T0*ms112_1330Abc112H;
extern T0*ms112_1330Abc112I;
extern T0*ms635_831146693Abc635A;
extern T0*ms112_1330Abc112J;
extern T0*ms792_291421585Abc792A;
extern T0*ms112_1330Abc112K;
extern T0*ms112_1154403080Abc112A;
extern T0*ms112_1330Abc112L;
extern T0*ms622_537910373Abc622A;
extern T0*ms400_1277330071Abc400A;
extern T0*ms112_1330Abc117A;
extern T0*ms476_1427483140Abc476A;
extern T0*ms339_931579788Abc339A;
extern T0*ms112_651Abc112A;
extern T0*ms112_651Abc112B;
extern T0*ms622_475042348Abc622A;
extern T0*ms100_1471861047Abc100A;
extern T0*ms350_1479430694Abc350A;
extern T0*ms616_47187Abc616A;
extern T0*ms409_835850355Abc409A;
extern T0*ms34_1532344910Abc34A;
extern T0*ms686_2565Abc686A;
extern T0*ms112_36951Abc112A;
extern T0*ms112_756717624Abc112A;
extern T0*ms100_1268871407Abc100A;
extern T0*ms33_3474Abc33A;
extern T0*ms623_1719326284Abc623A;
extern T0*ms792_1314337673Abc792A;
extern T0*ms624_54686040Abc624A;
extern T0*ms621_1240206596Abc621A;
extern T0*ms394_5912Abc394A;
extern T0*ms112_273430530Abc112B;
extern T0*ms112_273430530Abc112A;
extern T0*ms110_674Abc110A;
extern T0*ms599_491029751Abc599A;
extern T0*ms793_1506490209Abc793A;
extern T0*ms599_4434071Abc599A;
extern T0*ms34_16761Abc34A;
extern T0*ms621_1637595774Abc621A;
extern T0*ms112_2072467813Abc112A;
extern T0*ms100_833080669Abc100A;
extern T0*ms115_576322499Abc115A;
extern T0*ms284_927785894Abc284A;
extern T0*ms357_881547256Abc357A;
extern T0*ms112_1565Abc112A;
extern T0*ms112_1565Abc112B;
extern T0*ms112_1565Abc112C;
extern T0*ms100_437331Abc100A;
extern T0*ms112_1565Abc112D;
extern T0*ms792_90782Abc792A;
extern T0*ms792_90782Abc792B;
extern T0*ms792_90782Abc792C;
extern T0*ms29_1767481079Abc29A;
extern T0*ms792_90782Abc792D;
extern T0*ms622_1900Abc622C;
extern T0*ms622_1900Abc622B;
extern T0*ms622_1900Abc622A;
extern T0*ms121_1974940930Abc121A;
extern T0*ms108_69851Abc108A;
extern T0*ms108_69851Abc108B;
extern T0*ms107_1568923104Abc107A;
extern T0*ms274_305465997Abc274A;
extern T0*ms531_927498134Abc531A;
extern T0*ms100_1389575653Abc100A;
extern T0*ms400_530141799Abc400X;
extern T0*ms400_530141799Abc400W;
extern T0*ms400_530141799Abc400V;
extern T0*ms400_530141799Abc400U;
extern T0*ms792_8624Abc792A;
extern T0*ms400_530141799Abc400T;
extern T0*ms599_826425832Abc599C;
extern T0*ms599_826425832Abc599B;
extern T0*ms400_530141799Abc400S;
extern T0*ms599_826425832Abc599A;
extern T0*ms400_530141799Abc400R;
extern T0*ms400_530141799Abc400Q;
extern T0*ms400_530141799Abc400P;
extern T0*ms112_32080Abc598A;
extern T0*ms400_530141799Abc400O;
extern T0*ms400_530141799Abc400N;
extern T0*ms400_530141799Abc400M;
extern T0*ms400_530141799Abc400L;
extern T0*ms400_530141799Abc400K;
extern T0*ms400_530141799Abc400J;
extern T0*ms400_530141799Abc400I;
extern T0*ms400_530141799Abc400H;
extern T0*ms400_530141799Abc400G;
extern T0*ms400_530141799Abc400F;
extern T0*ms400_530141799Abc400E;
extern T0*ms400_530141799Abc400D;
extern T0*ms599_1111954737Abc599A;
extern T0*ms400_530141799Abc400C;
extern T0*ms400_530141799Abc400B;
extern T0*ms400_530141799Abc400A;
extern T0*ms622_10895Abc622A;
extern T0*ms33_1673345408Abc33A;
extern T0*ms100_1666553531Abc100A;
extern T0*ms274_216Abc95A;
extern T0*ms758_1400894751Abc758A;
extern T0*ms33_76691Abc483A;
extern T0*ms112_2142659303Abc112A;
extern T0*ms550_64080Abc550A;
extern T0*ms980_482960256Abc980A;
extern T0*ms397_401707956Abc397A;
extern T0*ms469_58Abc469A;
extern T0*ms394_5912Abc616A;
extern T0*ms470_852437Abc470A;
extern T0*ms112_531983658Abc112A;
extern T0*ms108_334Abc108A;
extern T0*ms33_552Abc33A;
extern T0*ms100_872019014Abc100A;
extern T0*ms793_666336072Abc793A;
extern T0*ms550_1747846Abc550A;
extern T0*ms32_8897Abc32A;
extern T0*ms622_4881995Abc622A;
extern T0*ms108_530877013Abc108A;
extern T0*ms371_360Abc371A;
extern T0*ms452_1305581590Abc452A;
extern T0*ms33_30191860Abc33A;
extern T0*ms112_738771309Abc112A;
extern T0*ms112_1145546877Abc112B;
extern T0*ms112_1145546877Abc112A;
extern T0*ms611_185453Abc611A;
extern T0*ms611_185448Abc611A;
extern T0*ms599_60837Abc599A;
extern T0*ms100_1874765620Abc100A;
extern T0*ms401_902517583Abc401A;
extern T0*ms452_1876110531Abc452A;
extern T0*ms108_415107Abc108A;
extern T0*ms471_3496Abc471A;
extern T0*ms112_2103819988Abc112A;
extern T0*ms110_13028Abc110A;
extern T0*ms401_902517583Abc354A;
extern T0*ms108_84381Abc108A;
extern T0*ms112_391886489Abc112A;
extern T0*ms616_28032126Abc616A;
extern T0*ms616_28032126Abc616B;
extern T0*ms622_2030510390Abc622A;
extern T0*ms616_1115076Abc616A;
extern T0*ms616_28032126Abc616C;
extern T0*ms616_28032126Abc616D;
extern T0*ms34_76226Abc34A;
extern T0*ms621_118716790Abc621A;
extern T0*ms112_2237652Abc470A;
extern T0*ms378_1088174660Abc378A;
extern T0*ms273_956361723Abc273A;
extern T0*ms107_1786429697Abc107A;
extern T0*ms621_905827712Abc621A;
extern T0*ms410_532898088Abc410A;
extern T0*ms33_421505Abc33A;
extern T0*ms35_10554609Abc35A;
extern T0*ms599_1212159Abc599A;
extern T0*ms34_427898753Abc34A;
extern T0*ms108_2109537640Abc108A;
extern T0*ms401_902517583Abc392A;
extern T0*ms108_2109537640Abc108B;
extern T0*ms108_2109537640Abc108C;
extern T0*ms112_616198177Abc112A;
extern T0*ms108_2109537640Abc108D;
extern T0*ms116_128358027Abc116A;
extern T0*ms792_69352117Abc792B;
extern T0*ms792_69352117Abc792A;
extern T0*ms112_48520827Abc112A;
extern T0*ms100_370754643Abc100A;
extern T0*ms621_49680837Abc621A;
extern T0*ms400_613384625Abc400A;
extern T0*ms34_627Abc412A;
extern T0*ms112_2753Abc112A;
extern T0*ms112_277Abc558A;
extern T0*ms100_1909979286Abc100A;
extern T0*ms100_1909979286Abc100B;
extern T0*ms112_277Abc614A;
extern T0*ms100_1021024803Abc100A;
extern T0*ms112_277Abc614B;
extern T0*ms101_176469602Abc101A;
extern T0*ms112_277Abc614C;
extern T0*ms112_277Abc616A;
extern T0*ms115_840703310Abc115A;
extern T0*ms116_1382Abc116A;
extern T0*ms112_282Abc623A;
extern T0*ms733_89481Abc733A;
extern T0*ms112_5395053Abc112C;
extern T0*ms29_833055089Abc29A;
extern T0*ms112_5395053Abc112B;
extern T0*ms392_446205995Abc392A;
extern T0*ms34_661Abc365A;
extern T0*ms623_2670Abc623A;
extern T0*ms112_5395053Abc112A;
extern T0*ms100_1090616383Abc100A;
extern T0*ms33_276937706Abc33A;
extern T0*ms350_1440516445Abc350A;
extern T0*ms112_1238750212Abc112A;
extern T0*ms100_1912621670Abc100A;
extern T0*ms371_360Abc616A;
extern T0*ms100_2008366323Abc100A;
extern T0*ms616_440120430Abc616A;
extern T0*ms625_646768902Abc625A;
extern T0*ms668_1083579905Abc668A;
extern T0*ms101_175744666Abc101A;
extern T0*ms95_15142174Abc95A;
extern T0*ms363_327012886Abc363A;
extern T0*ms34_627Abc398A;
extern T0*ms112_1201497496Abc112A;
extern T0*ms107_3579844Abc107A;
extern T0*ms112_277Abc599A;
extern T0*ms112_277Abc599B;
extern T0*ms34_627Abc399A;
extern T0*ms470_16902Abc470A;
extern T0*ms621_15915Abc621A;
extern T0*ms470_16902Abc470B;
extern T0*ms33_220Abc33A;
extern T0*ms622_245384155Abc622A;
extern T0*ms622_252669317Abc622A;
extern T0*ms112_1330Abc611A;
extern T0*ms33_447851Abc33A;
extern T0*ms613_230Abc622E;
extern T0*ms613_230Abc622D;
extern T0*ms613_230Abc622C;
extern T0*ms613_230Abc622B;
extern T0*ms621_185146Abc621A;
extern T0*ms613_230Abc622A;
extern T0*ms599_3912034Abc599A;
extern T0*ms33_185934049Abc33A;
extern T0*ms112_1330Abc616A;
extern T0*ms112_1330Abc621A;
extern T0*ms33_2090604340Abc33A;
extern T0*ms112_1330Abc621B;
extern T0*ms613_230Abc613A;
extern T0*ms112_1330Abc616B;
extern T0*ms112_1330Abc616C;
extern T0*ms112_1330Abc621C;
extern T0*ms112_1330Abc616D;
extern T0*ms797_1101Abc797A;
extern T0*ms112_1330Abc616E;
extern T0*ms112_1330Abc622A;
extern T0*ms112_1330Abc622B;
extern T0*ms112_1330Abc622C;
extern T0*ms112_1330Abc623A;
extern T0*ms112_1330Abc623B;
extern T0*ms112_1330Abc623C;
extern T0*ms112_1330Abc623D;
extern T0*ms112_1330Abc623E;
extern T0*ms112_1330Abc623F;
extern T0*ms112_1330Abc624A;
extern T0*ms29_85614Abc29A;
extern T0*ms465_334725631Abc465A;
extern T0*ms733_89481Abc616A;
extern T0*ms112_1581747096Abc112A;
extern T0*ms112_227Abc112A;
extern T0*ms611_4571057Abc611A;
extern T0*ms621_1549077634Abc621A;
extern T0*ms371_360Abc667A;
extern T0*ms621_689812670Abc621A;
extern T0*ms616_1348915394Abc616A;
extern T0*ms635_1447552176Abc635A;
extern T0*ms112_36951Abc615A;
extern T0*ms102_1385667261Abc102A;
extern T0*ms100_126038302Abc100A;
extern T0*ms101_1836169859Abc101A;
extern T0*ms108_8889Abc108A;
extern T0*ms33_36193081Abc33A;
extern T0*ms622_304601115Abc622A;
extern T0*ms734_858562Abc734A;
extern T0*ms95_1056980719Abc95A;
extern T0*ms112_1330Abc599A;
extern T0*ms33_180965424Abc33A;
extern T0*ms112_1330Abc599B;
extern T0*ms112_1330Abc599C;
extern T0*ms112_1330Abc599D;
extern T0*ms628_293Abc628A;
extern T0*ms106_1442714837Abc106A;
extern T0*ms33_2067995Abc33A;
extern T0*ms622_162070Abc622A;
extern T0*ms33_261093457Abc33A;
extern T0*ms112_1565Abc611A;
extern T0*ms112_32869Abc112A;
extern T0*ms792_692075493Abc792A;
extern T0*ms616_162095Abc616A;
extern T0*ms108_631091213Abc108A;
extern T0*ms112_1368099455Abc112A;
extern T0*ms112_1565Abc614A;
extern T0*ms112_1565Abc614B;
extern T0*ms622_37173080Abc622A;
extern T0*ms112_1964848975Abc112A;
extern T0*ms112_1565Abc621A;
extern T0*ms112_1565Abc621B;
extern T0*ms599_10937200Abc599A;
extern T0*ms792_1973244310Abc792A;
extern T0*ms363_1459510708Abc107A;
extern T0*ms614_21020045Abc614A;
extern T0*ms33_878996813Abc33A;
extern T0*ms622_7025Abc622B;
extern T0*ms622_7025Abc622A;
extern T0*ms112_850522083Abc112A;
extern T0*ms565_1208522276Abc565A;
extern T0*ms614_21020045Abc622A;
extern T0*ms792_525205114Abc792A;
extern T0*ms100_1733505988Abc100A;
extern T0*ms34_49076540Abc34A;
extern T0*ms622_6396Abc622A;
extern T0*ms662_1864907075Abc662A;
extern T0*ms100_2096474678Abc100A;
extern T0*ms33_669Abc33A;
extern T0*ms107_1255397791Abc107A;
extern T0*ms33_954385774Abc33A;
extern T0*ms33_1223768616Abc33A;
extern T0*ms108_1346168095Abc108A;
extern T0*ms108_3291Abc108A;
extern T0*ms419_1304837581Abc419A;
extern T0*ms112_215791Abc112A;
extern T0*ms792_1242450095Abc792A;
extern T0*ms616_48939847Abc616B;
extern T0*ms112_365905049Abc112A;
extern T0*ms616_48939847Abc616A;
extern T0*ms112_1565Abc599A;
extern T0*ms112_1565Abc599B;
extern T0*ms112_1565Abc599C;
extern T0*ms446_743946038Abc446A;
extern T0*ms33_324411Abc33A;
extern T0*ms792_61699Abc792A;
extern T0*ms792_61699Abc792B;
extern T0*ms792_931143030Abc792A;
extern T0*ms112_625Abc112A;
extern T0*ms112_136593176Abc112A;
extern T0*ms565_1208522276Abc597A;
extern T0*ms33_705019679Abc33A;
extern T0*ms274_1658492806Abc274A;
extern T0*ms112_2237652Abc112A;
extern T0*ms33_451899881Abc33A;
extern T0*ms112_8260Abc112A;
extern T0*ms116_1382Abc433A;
extern T0*ms107_22271191Abc662A;
extern T0*ms33_2098363273Abc33A;
extern T0*ms108_721564652Abc108A;
extern T0*ms274_817932306Abc274A;
extern T0*ms112_163909964Abc112A;
extern T0*ms621_1246644455Abc621A;
extern T0*ms483_76659Abc483A;
extern T0*ms112_1330Abc793A;
extern T0*ms33_60Abc616A;
extern T0*ms419_325449730Abc419A;
extern T0*ms100_150329797Abc100A;
extern T0*ms108_2139128753Abc108A;
extern T0*ms368_3337Abc368A;
extern T0*ms566_3920780Abc566A;
extern T0*ms616_4179775Abc616A;
extern T0*ms328_977955761Abc328A;
extern T0*ms100_1950357785Abc100A;
extern T0*ms329_1489034545Abc329A;
extern T0*ms616_20481355Abc616A;
extern T0*ms33_84969Abc33A;
extern T0*ms34_17176Abc34A;
extern T0*ms792_1265395998Abc792A;
extern T0*ms274_1251030042Abc274A;
extern T0*ms339_10414970Abc339A;
extern T0*ms115_1875884480Abc115A;
extern T0*ms400_165614527Abc400A;
extern T0*ms400_165614527Abc400B;
extern T0*ms400_165614527Abc400C;
extern T0*ms370_7506001Abc370A;
extern T0*ms33_1498845794Abc33A;
extern T0*ms30_118Abc30A;
extern T0*ms614_580292587Abc614A;
extern T0*ms792_1800342110Abc792A;
extern T0*ms566_100561530Abc566A;
extern T0*ms363_165601417Abc363A;
extern T0*ms336_2084982239Abc336A;
extern T0*ms112_253935823Abc112A;
extern T0*ms792_1069766146Abc794A;
extern T0*ms635_39109479Abc635A;
extern T0*ms400_511502716Abc400A;
extern T0*ms282_1133285999Abc282A;
extern T0*ms400_511502716Abc400B;
extern T0*ms100_501268295Abc100A;
extern T0*ms792_1069766146Abc792A;
extern T0*ms452_161769183Abc452A;
extern T0*ms121_354654986Abc121A;
extern T0*ms622_1726920051Abc622A;
extern T0*ms112_437780Abc112A;
extern T0*ms599_430519127Abc599A;
extern T0*ms621_6550Abc621A;
extern T0*ms621_6550Abc616A;
extern T0*ms284_2082988666Abc284A;
extern T0*ms621_398948Abc621A;
extern T0*ms363_1459510708Abc401A;
extern T0*ms33_197002168Abc33A;
extern T0*ms107_1814748872Abc107A;
extern T0*ms400_350193314Abc400A;
extern T0*ms599_815493762Abc599A;
extern T0*ms622_2138778683Abc622A;
extern T0*ms34_3645Abc365A;
extern T0*ms792_365929075Abc792A;
extern T0*ms100_1931146896Abc100A;
extern T0*ms363_1459510708Abc363A;
extern T0*ms34_14036Abc34A;
extern T0*ms364_1686701Abc364A;
extern T0*ms405_1260488135Abc405A;
extern T0*ms100_124311631Abc100A;
extern T0*ms112_1065652086Abc112A;
extern T0*ms476_1646704683Abc476A;
extern T0*ms100_723705127Abc100A;
extern T0*ms453_2015374870Abc453A;
extern T0*ms616_244699380Abc616A;
extern T0*ms616_244699380Abc616B;
extern T0*ms34_3645Abc34A;
extern T0*ms34_3595Abc34A;
extern T0*ms616_244699380Abc616C;
extern T0*ms616_244699380Abc616D;
extern T0*ms616_244699380Abc616E;
extern T0*ms112_1142598643Abc112A;
extern T0*ms107_212031001Abc107A;
extern T0*ms476_305Abc792D;
extern T0*ms476_305Abc792C;
extern T0*ms476_305Abc792B;
extern T0*ms476_305Abc792A;
extern T0*ms101_1242149539Abc101A;
extern T0*ms112_1645835456Abc112A;
extern T0*ms635_1658151484Abc635A;
extern T0*ms622_1174230416Abc622F;
extern T0*ms108_7809Abc108A;
extern T0*ms622_1174230416Abc622E;
extern T0*ms622_1174230416Abc622D;
extern T0*ms622_1174230416Abc622C;
extern T0*ms616_6305Abc622A;
extern T0*ms622_1174230416Abc622B;
extern T0*ms363_1459510708Abc394A;
extern T0*ms622_1174230416Abc622A;
extern T0*ms363_1459510708Abc394B;
extern T0*ms112_2545Abc112A;
extern T0*ms363_1459510708Abc394C;
extern T0*ms599_1387812168Abc599A;
extern T0*ms107_1574136045Abc107A;
extern T0*ms616_6305Abc616A;
extern T0*ms33_1501191Abc33A;
extern T0*ms273_51017327Abc273A;
extern T0*ms363_1459510708Abc397A;
extern T0*ms566_481249030Abc566A;
extern T0*ms363_1459510708Abc397B;
extern T0*ms363_1459510708Abc397C;
extern T0*ms363_1459510708Abc397D;
extern T0*ms108_2109537640Abc687A;
extern T0*ms277_32926Abc277A;
extern T0*ms108_2109537640Abc687B;
extern T0*ms112_1240218271Abc112A;
extern T0*ms100_2053250287Abc100A;
extern T0*ms368_18257Abc368A;
extern T0*ms112_15351Abc112A;
extern T0*ms112_15351Abc112B;
extern T0*ms108_1964046235Abc108A;
extern T0*ms769_1121854Abc769A;
extern T0*ms112_1724182721Abc112A;
extern T0*ms33_55040391Abc33A;
extern T0*ms108_99Abc108A;
extern T0*ms558_7557Abc558A;
extern T0*ms345_646901709Abc345A;
extern T0*ms616_380343Abc616A;
extern T0*ms35_87180Abc35A;
extern T0*ms33_78150Abc33A;
extern T0*ms400_1324951230Abc400A;
extern T0*ms112_1911279888Abc112A;
extern T0*ms112_1580612071Abc112A;
extern T0*ms34_2073386Abc363B;
extern T0*ms34_2073386Abc363A;
extern T0*ms112_12188Abc112A;
extern T0*ms599_988243818Abc599B;
extern T0*ms599_988243818Abc599A;
extern T0*ms599_43730Abc599A;
extern T0*ms107_218672210Abc107A;
extern T0*ms598_5580Abc598A;
extern T0*ms397_1037594318Abc397A;
extern T0*ms621_259021955Abc621A;
extern T0*ms112_712350300Abc112A;
extern T0*ms511_2080244194Abc511A;
extern T0*ms511_2080244194Abc512A;
extern T0*ms95_625881326Abc95A;
extern T0*ms100_760340765Abc100A;
extern T0*ms112_227Abc599A;
extern T0*ms112_227Abc599B;
extern T0*ms34_640Abc377A;
extern T0*ms34_90408Abc466A;
extern T0*ms34_640Abc433A;
extern T0*ms476_305Abc599S;
extern T0*ms599_7475Abc599B;
extern T0*ms476_305Abc599R;
extern T0*ms599_7475Abc599A;
extern T0*ms476_305Abc599Q;
extern T0*ms476_305Abc599P;
extern T0*ms476_305Abc599O;
extern T0*ms476_305Abc599N;
extern T0*ms401_256961544Abc401A;
extern T0*ms394_376Abc394A;
extern T0*ms476_305Abc599M;
extern T0*ms792_349661420Abc792A;
extern T0*ms394_1128496981Abc394A;
extern T0*ms476_305Abc599L;
extern T0*ms476_305Abc599K;
extern T0*ms112_802495724Abc112A;
extern T0*ms476_305Abc599J;
extern T0*ms476_305Abc599I;
extern T0*ms95_772983982Abc95A;
extern T0*ms476_305Abc599H;
extern T0*ms476_305Abc599G;
extern T0*ms476_305Abc599F;
extern T0*ms476_305Abc599E;
extern T0*ms476_305Abc599D;
extern T0*ms476_305Abc599C;
extern T0*ms476_305Abc599B;
extern T0*ms476_305Abc599A;
extern T0*ms470_397949195Abc470A;
extern T0*ms112_893005Abc112A;
extern T0*ms476_305Abc598A;
extern T0*ms599_283801480Abc599A;
extern T0*ms112_2123070311Abc112A;
extern T0*ms476_305Abc597A;
extern T0*ms452_1952642401Abc452A;
extern T0*ms112_958964069Abc112A;
extern T0*ms112_3393Abc112A;
extern T0*ms792_618166083Abc792A;
extern T0*ms419_1878889060Abc419A;
extern T0*ms108_1494914262Abc108A;
extern T0*ms115_870131842Abc115A;
extern T0*ms648_726156456Abc648A;
extern T0*ms112_1316373138Abc112A;
extern T0*ms443_1118729658Abc443A;
extern T0*ms560_5515Abc560A;
extern T0*ms531_2014364610Abc531A;
extern T0*ms792_737599544Abc792A;
extern T0*ms33_2246041Abc616A;
extern T0*ms566_11241768Abc566A;
extern T0*ms112_215791Abc621A;
extern T0*ms112_215791Abc616A;
extern T0*ms476_305Abc626A;
extern T0*ms115_2035830473Abc115A;
extern T0*ms476_305Abc625A;
extern T0*ms476_305Abc616T;
extern T0*ms476_305Abc616S;
extern T0*ms108_3291Abc630A;
extern T0*ms476_305Abc616R;
extern T0*ms108_3291Abc630B;
extern T0*ms476_305Abc616Q;
extern T0*ms108_3291Abc630C;
extern T0*ms476_305Abc616P;
extern T0*ms476_305Abc624A;
extern T0*ms476_305Abc623F;
extern T0*ms476_305Abc623E;
extern T0*ms476_305Abc616O;
extern T0*ms476_305Abc623D;
extern T0*ms476_305Abc616N;
extern T0*ms476_305Abc623C;
extern T0*ms476_305Abc616M;
extern T0*ms476_305Abc623B;
extern T0*ms476_305Abc616L;
extern T0*ms476_305Abc623A;
extern T0*ms476_305Abc616K;
extern T0*ms476_305Abc616J;
extern T0*ms476_305Abc622D;
extern T0*ms476_305Abc616I;
extern T0*ms108_3291Abc627A;
extern T0*ms476_305Abc616H;
extern T0*ms476_305Abc622C;
extern T0*ms108_3291Abc627B;
extern T0*ms476_305Abc622B;
extern T0*ms476_305Abc616G;
extern T0*ms476_305Abc622A;
extern T0*ms476_305Abc616F;
extern T0*ms614_7227375Abc614A;
extern T0*ms476_305Abc616E;
extern T0*ms476_305Abc616D;
extern T0*ms108_3291Abc628A;
extern T0*ms476_305Abc616C;
extern T0*ms108_3291Abc628B;
extern T0*ms690_511703191Abc690A;
extern T0*ms476_305Abc616B;
extern T0*ms476_305Abc621A;
extern T0*ms476_305Abc616A;
extern T0*ms476_305Abc565E;
extern T0*ms476_305Abc565D;
extern T0*ms422_171706123Abc422A;
extern T0*ms476_305Abc565C;
extern T0*ms476_305Abc565B;
extern T0*ms476_305Abc565A;
extern T0*ms447_498169402Abc447A;
extern T0*ms274_1091711046Abc274A;
extern T0*ms622_2996Abc622F;
extern T0*ms622_2996Abc622E;
extern T0*ms622_2996Abc622D;
extern T0*ms622_2996Abc622C;
extern T0*ms476_305Abc558A;
extern T0*ms622_2996Abc622B;
extern T0*ms33_698215697Abc33A;
extern T0*ms622_2996Abc622A;
extern T0*ms112_950675891Abc112A;
extern T0*ms599_706329Abc599A;
extern T0*ms29_1525604536Abc29A;
extern T0*ms476_305Abc611A;
extern T0*ms611_1312Abc611A;
extern T0*ms108_561720547Abc108A;
extern T0*ms100_638895319Abc100A;
extern T0*ms112_240Abc112A;
extern T0*ms100_2097430832Abc100A;
extern T0*ms121_349372Abc121A;
extern T0*ms34_16264Abc34A;
extern T0*ms100_1922692108Abc100A;
extern T0*ms33_280482649Abc33A;
extern T0*ms107_572614135Abc107B;
extern T0*ms112_1618833880Abc112A;
extern T0*ms107_572614135Abc107A;
extern T0*ms100_1307652273Abc100A;
extern T0*ms112_1853640928Abc112A;
extern T0*ms274_89867121Abc274A;
extern T0*ms611_1312Abc622A;
extern T0*ms34_479922190Abc34A;
extern T0*ms550_1185594Abc550A;
extern T0*ms108_703496930Abc108A;
extern T0*ms33_3075Abc33A;
extern T0*ms336_1646268668Abc336A;
extern T0*ms100_1093012317Abc100A;
extern T0*ms108_8976Abc108A;
extern T0*ms476_305Abc476A;
extern T0*ms95_1468715266Abc95A;
extern T0*ms519_637371887Abc519A;
extern T0*ms107_1928938448Abc107A;
extern T0*ms102_126291003Abc102A;
extern T0*ms112_106460275Abc112A;
extern T0*ms107_22271191Abc107B;
extern T0*ms107_22271191Abc107A;
extern T0*ms120_287218105Abc120A;
extern T0*ms343_1742784741Abc405A;
extern T0*ms283_87520Abc283A;
extern T0*ms283_87520Abc283B;
extern T0*ms101_175744241Abc101A;
extern T0*ms112_162838175Abc112A;
extern T0*ms112_162838175Abc112B;
extern T0*ms112_162838175Abc112C;
extern T0*ms476_412142950Abc476A;
extern T0*ms101_372047073Abc101A;
extern T0*ms443_540477054Abc443A;
extern T0*ms980_28287Abc980A;
extern T0*ms34_16630Abc34A;
extern T0*ms112_14005Abc112A;
extern T0*ms112_14005Abc112B;
extern T0*ms343_1742784741Abc343A;
extern T0*ms110_11253Abc110A;
extern T0*ms476_123Abc476A;
extern T0*ms354_327Abc354A;
extern T0*ms33_572288437Abc33A;
extern T0*ms598_1151663379Abc598A;
extern T0*ms33_49076823Abc33A;
extern T0*ms350_793028699Abc350A;
extern T0*ms108_3294Abc108A;
extern T0*ms284_7207Abc797A;
extern T0*ms519_1359629264Abc519A;
extern T0*ms622_204519611Abc622A;
extern T0*ms33_88049Abc33A;
extern T0*ms100_167445550Abc100A;
extern T0*ms112_988839165Abc112A;
extern T0*ms35_16177Abc35A;
extern T0*ms616_32175Abc616A;
extern T0*ms599_126319331Abc599A;
extern T0*ms112_1339521386Abc112A;
extern T0*ms110_603Abc110A;
extern T0*ms394_376Abc734A;
extern T0*ms34_600Abc34A;
extern T0*ms100_1961160815Abc100A;
extern T0*ms33_296Abc397A;
extern T0*ms550_142089811Abc550A;
extern T0*ms112_215791Abc792A;
extern T0*ms284_1831619428Abc284A;
extern T0*ms33_247239028Abc33A;
extern T0*ms100_1910823336Abc100A;
extern T0*ms112_2055072316Abc112A;
extern T0*ms35_388005040Abc35A;
extern T0*ms614_506Abc614B;
extern T0*ms614_506Abc614A;
extern T0*ms274_1737556726Abc274A;
extern T0*ms108_6687Abc108A;
extern T0*ms598_1112927266Abc598A;
extern T0*ms108_6687Abc108B;
extern T0*ms598_1112927266Abc598B;
extern T0*ms35_336Abc35A;
extern T0*ms100_1460213717Abc100A;
extern T0*ms397_1442631340Abc397A;
extern T0*ms790_1126647264Abc790A;
extern T0*ms101_1452518781Abc101A;
extern T0*ms736_849265556Abc736A;
extern T0*ms101_348041349Abc101A;
extern T0*ms34_479921113Abc34A;
extern T0*ms112_77Abc112A;
extern T0*ms115_1998329594Abc115A;
extern T0*ms980_2072196164Abc980A;
extern T0*ms792_3209Abc623A;
extern T0*ms34_10315778Abc34A;
extern T0*ms33_1604522960Abc33A;
extern T0*ms400_2480394Abc400A;
extern T0*ms112_10940631Abc112A;
extern T0*ms284_7207Abc736A;
extern T0*ms100_210812758Abc100A;
extern T0*ms100_45224899Abc100A;
extern T0*ms284_7207Abc683B;
extern T0*ms29_1325879523Abc29A;
extern T0*ms284_7207Abc683A;
extern T0*ms274_1553744164Abc274A;
extern T0*ms100_1409701608Abc100A;
extern T0*ms112_984785217Abc112A;
extern T0*ms465_946986142Abc465A;
extern T0*ms112_280139425Abc112A;
extern T0*ms476_29585Abc476A;
extern T0*ms621_453998Abc621A;
extern T0*ms327_36115402Abc327A;
extern T0*ms34_51843716Abc426A;
extern T0*ms33_1202672333Abc33A;
extern T0*ms112_586511651Abc112A;
extern T0*ms33_1607595572Abc33A;
extern T0*ms102_745978733Abc102A;
extern T0*ms108_1431838787Abc108A;
extern T0*ms108_1331737400Abc108A;
extern T0*ms792_1173325215Abc792A;
extern T0*ms33_52347889Abc33A;
extern T0*ms112_42279221Abc112A;
extern T0*ms95_8198176Abc442A;
extern T0*ms95_142319Abc95A;
extern T0*ms34_69805Abc34A;
extern T0*ms100_266191698Abc100A;
extern T0*ms33_1418282620Abc33A;
extern T0*ms490_920757291Abc490A;
extern T0*ms33_201970793Abc33A;
extern T0*ms616_206419907Abc616A;
extern T0*ms33_849712179Abc33A;
extern T0*ms112_1994596535Abc112A;
extern T0*ms112_1629400044Abc112A;
extern T0*ms112_900404594Abc112A;
extern T0*ms100_1575461624Abc100A;
extern T0*ms33_1427Abc33A;
extern T0*ms599_386819Abc599A;
extern T0*ms558_146251545Abc558A;
extern T0*ms112_1772404517Abc622A;
extern T0*ms793_1274Abc793A;
extern T0*ms283_87520Abc635A;
extern T0*ms112_2395Abc112A;
extern T0*ms112_240Abc470A;
extern T0*ms112_1772404517Abc614B;
extern T0*ms112_1772404517Abc614A;
extern T0*ms490_920757291Abc509A;
extern T0*ms614_40428375Abc614A;
extern T0*ms490_920757291Abc510A;
extern T0*ms599_21632225Abc599A;
extern T0*ms622_1628970485Abc622A;
extern T0*ms778_1932458562Abc778A;
extern T0*ms107_89019087Abc107A;
extern T0*ms107_89019087Abc107B;
extern T0*ms622_10430693Abc622A;
extern T0*ms112_1099040180Abc112A;
extern T0*ms634_1664721281Abc634A;
extern T0*ms365_41841490Abc365A;
extern T0*ms33_506823435Abc33A;
extern T0*ms33_55041151Abc33A;
extern T0*ms476_305Abc112V;
extern T0*ms476_305Abc112U;
extern T0*ms476_305Abc112T;
extern T0*ms397_1769582063Abc397A;
extern T0*ms476_305Abc112S;
extern T0*ms476_305Abc112R;
extern T0*ms792_28263330Abc792A;
extern T0*ms476_305Abc112Q;
extern T0*ms476_305Abc112P;
extern T0*ms476_305Abc112O;
extern T0*ms476_305Abc112N;
extern T0*ms476_305Abc112M;
extern T0*ms476_305Abc112L;
extern T0*ms476_305Abc112K;
extern T0*ms476_305Abc112J;
extern T0*ms476_305Abc112I;
extern T0*ms476_305Abc112H;
extern T0*ms476_305Abc112G;
extern T0*ms474_1723490337Abc474A;
extern T0*ms476_305Abc112F;
extern T0*ms100_1421961899Abc100A;
extern T0*ms476_305Abc112E;
extern T0*ms476_305Abc112D;
extern T0*ms476_305Abc112C;
extern T0*ms476_305Abc112B;
extern T0*ms476_305Abc112A;
extern T0*ms452_573004463Abc452A;
extern T0*ms490_920757291Abc374A;
extern T0*ms792_3209Abc792A;
extern T0*ms112_240Abc613A;
extern T0*ms112_240Abc613B;
extern T0*ms274_139303084Abc34A;
extern T0*ms112_240Abc613C;
extern T0*ms112_240Abc613D;
extern T0*ms33_296Abc33A;
extern T0*ms112_240Abc613E;
extern T0*ms112_240Abc614A;
extern T0*ms112_240Abc614B;
extern T0*ms112_240Abc614C;
extern T0*ms112_1206795525Abc112A;
extern T0*ms277_2089269822Abc277A;
extern T0*ms274_1341859296Abc274A;
extern T0*ms623_1102979958Abc623A;
extern T0*ms598_205124Abc598A;
extern T0*ms599_274Abc599A;
extern T0*ms112_240Abc622A;
extern T0*ms112_240Abc622B;
extern T0*ms112_240Abc622C;
extern T0*ms112_240Abc622D;
extern T0*ms112_240Abc622E;
extern T0*ms100_1938643327Abc100A;
extern T0*ms599_4999725Abc599A;
extern T0*ms112_1680956616Abc112A;
extern T0*ms778_789213750Abc778A;
extern T0*ms33_636Abc33A;
extern T0*ms274_1811847991Abc274A;
extern T0*ms419_1857191624Abc419A;
extern T0*ms32_2057783129Abc32A;
extern T0*ms280_90592250Abc280A;
extern T0*ms405_739187517Abc405A;
extern T0*ms108_1115301Abc108A;
extern T0*ms616_550508910Abc616A;
extern T0*ms108_9107Abc108A;
extern T0*ms110_2440Abc110A;
extern T0*ms463_1204053060Abc463A;
extern T0*ms100_34383990Abc100A;
extern T0*ms100_398318341Abc100A;
extern T0*ms274_816126476Abc274A;
extern T0*ms622_535Abc622A;
extern T0*ms100_1687580001Abc100A;
extern T0*ms622_6965Abc622C;
extern T0*ms284_7207Abc432A;
extern T0*ms622_6965Abc622B;
extern T0*ms476_192265186Abc476A;
extern T0*ms622_6965Abc622A;
extern T0*ms635_1679625106Abc635A;
extern T0*ms112_374291339Abc112A;
extern T0*ms112_15589Abc112A;
extern T0*ms452_827998241Abc452A;
extern T0*ms108_9220Abc108A;
extern T0*ms792_1574324912Abc792A;
extern T0*ms100_375534514Abc100A;
extern T0*ms33_337331Abc364A;
extern T0*ms100_1909918820Abc100A;
extern T0*ms101_92397395Abc101A;
extern T0*ms33_17422Abc33A;
extern T0*ms112_3475Abc112A;
extern T0*ms612_48Abc612A;
extern T0*ms612_48Abc612B;
extern T0*ms612_48Abc612C;
extern T0*ms107_1378502623Abc107A;
extern T0*ms107_1378502623Abc107B;
extern T0*ms34_1532343833Abc34A;
extern T0*ms623_813409Abc623A;
extern T0*ms112_1136523103Abc112A;
extern T0*ms107_1206593669Abc107A;
extern T0*ms284_4479182Abc112A;
extern T0*ms34_1223234252Abc274A;
extern T0*ms565_244Abc565B;
extern T0*ms565_244Abc565A;
extern T0*ms112_2022630Abc112A;
extern T0*ms401_176211197Abc339A;
extern T0*ms107_1661328107Abc107A;
extern T0*ms108_1615398571Abc108A;
extern T0*ms401_176211197Abc401A;
extern T0*ms112_162838175Abc599A;
extern T0*ms284_7207Abc277A;
extern T0*ms100_1680421289Abc100A;
extern T0*ms100_4750778Abc100A;
extern T0*ms680_161074567Abc680A;
extern T0*ms100_239621812Abc100A;
extern T0*ms107_1896793334Abc107A;
extern T0*ms599_1949908058Abc599A;
extern T0*ms401_176211197Abc405A;
extern T0*ms100_1193216533Abc100A;
extern T0*ms100_376006384Abc100A;
extern T0*ms635_1548937422Abc635A;
extern T0*ms400_889865702Abc400A;
extern T0*ms471_18186Abc471A;
extern T0*ms400_889865702Abc400B;
extern T0*ms400_889865702Abc400C;
extern T0*ms108_99Abc980A;
extern T0*ms108_99Abc980B;
extern T0*ms635_1961403182Abc599A;
extern T0*ms107_42846255Abc107A;
extern T0*ms614_506Abc112B;
extern T0*ms614_506Abc112A;
extern T0*ms100_1934613587Abc100A;
extern T0*ms419_1604599495Abc419A;
extern T0*ms108_45436Abc108A;
extern T0*ms432_597973944Abc432A;
extern T0*ms112_317Abc112A;
extern T0*ms112_272Abc112A;
extern T0*ms401_176211197Abc367A;
extern T0*ms401_176211197Abc367B;
extern T0*ms401_176211197Abc367C;
extern T0*ms110_2833Abc110A;
extern T0*ms33_2126626Abc33A;
extern T0*ms622_42916Abc622A;
extern T0*ms622_42916Abc622B;
extern T0*ms622_42916Abc622C;
extern T0*ms622_42916Abc622D;
extern T0*ms794_585110409Abc794A;
extern T0*ms33_567319829Abc33A;
extern T0*ms462_898426Abc462A;
extern T0*ms100_1476889913Abc100A;
extern T0*ms635_1961403182Abc635A;
extern T0*ms476_192265186Abc339A;
extern T0*ms112_4692662Abc112A;
extern T0*ms112_16487Abc112A;
extern T0*ms595_86545Abc595A;
extern T0*ms622_78629Abc622A;
extern T0*ms112_16487Abc112B;
extern T0*ms622_78629Abc622B;
extern T0*ms635_1465905014Abc635A;
extern T0*ms34_89771Abc34A;
extern T0*ms100_727903062Abc100A;
extern T0*ms397_362752532Abc397A;
extern T0*ms401_176211197Abc394A;
extern T0*ms628_17916Abc628A;
extern T0*ms401_176211197Abc394B;
extern T0*ms452_1604408825Abc452A;
extern T0*ms621_1783951564Abc621A;
extern T0*ms614_1097836905Abc614A;
extern T0*ms401_176211197Abc397A;
extern T0*ms614_1097836905Abc614B;
extern T0*ms628_17916Abc630A;
extern T0*ms401_176211197Abc397B;
extern T0*ms34_56255230Abc34A;
extern T0*ms622_46980416Abc622C;
extern T0*ms622_46980416Abc622B;
extern T0*ms622_46980416Abc622A;
extern T0*ms274_957054969Abc274A;
extern T0*ms95_1452647150Abc95A;
extern T0*ms112_471553120Abc112B;
extern T0*ms112_471553120Abc112A;
extern T0*ms100_1938643327Abc343A;
extern T0*ms33_48958735Abc33A;
extern T0*ms110_3494Abc110A;
extern T0*ms33_2104Abc33A;
extern T0*ms616_744Abc616A;
extern T0*ms108_5578901Abc108A;
extern T0*ms117_1797674551Abc117A;
extern T0*ms797_277Abc797A;
extern T0*ms107_1265Abc107A;
extern T0*ms107_1265Abc107B;
extern T0*ms614_15629Abc614A;
extern T0*ms622_6411Abc622A;
extern T0*ms681_1043Abc681A;
extern T0*ms100_873294598Abc100A;
extern T0*ms401_176211197Abc476A;
extern T0*ms115_582925635Abc115A;
extern T0*ms274_2108992007Abc274A;
extern T0*ms101_1658160521Abc101A;
extern T0*ms394_897982986Abc394A;
extern T0*ms598_605650769Abc598A;
extern T0*ms108_69601Abc108A;
extern T0*ms623_1062582514Abc623A;
extern T0*ms107_1605895597Abc107A;
extern T0*ms622_476433922Abc622A;
extern T0*ms622_2571Abc622A;
extern T0*ms112_16782Abc112A;
extern T0*ms112_16782Abc112B;
extern T0*ms112_16782Abc112C;
extern T0*ms100_1204389280Abc100A;
extern T0*ms121_1635864124Abc121A;
extern T0*ms112_1533928773Abc112A;
extern T0*ms792_47598300Abc792A;
extern T0*ms452_1790874766Abc452A;
extern T0*ms280_875060418Abc280A;
extern T0*ms622_1096165867Abc622A;
extern T0*ms339_97896378Abc339A;
extern T0*ms622_1096165867Abc622B;
extern T0*ms622_8885Abc622A;
extern T0*ms732_2068836731Abc732A;
extern T0*ms34_17715Abc399A;
extern T0*ms792_1772045883Abc792A;
extern T0*ms284_7207Abc115A;
extern T0*ms112_1772404517Abc112C;
extern T0*ms112_1772404517Abc112B;
extern T0*ms112_1772404517Abc112A;
extern T0*ms108_39204698Abc108A;
extern T0*ms736_1139569132Abc736A;
extern T0*ms112_1476Abc112A;
extern T0*ms112_7869Abc112A;
extern T0*ms107_1459577427Abc107A;
extern T0*ms100_599810839Abc100A;
extern T0*ms33_185934072Abc33A;
extern T0*ms397_988692517Abc397A;
extern T0*ms599_1185483839Abc599A;
extern T0*ms33_440571Abc33A;
extern T0*ms614_345Abc622A;
extern T0*ms625_84Abc625A;
extern T0*ms345_767649523Abc345A;
extern T0*ms625_1150927957Abc625A;
extern T0*ms792_236525Abc792A;
extern T0*ms623_2187545Abc623A;
extern T0*ms100_2141291014Abc100A;
extern T0*ms614_345Abc614A;
extern T0*ms599_1484470448Abc599A;
extern T0*ms646_1166590709Abc646A;
extern T0*ms622_842552Abc622A;
extern T0*ms621_54714979Abc621A;
extern T0*ms34_17715Abc357A;
extern T0*ms100_1437345301Abc100A;
extern T0*ms33_756809447Abc33A;
extern T0*ms635_21306364Abc635A;
extern T0*ms401_176211197Abc662A;
extern T0*ms471_3196Abc471A;
extern T0*ms622_524787520Abc622A;
extern T0*ms100_518055462Abc100A;
extern T0*ms100_49203356Abc433A;
extern T0*ms97_1861287086Abc97A;
extern T0*ms119_489233515Abc119A;
extern T0*ms662_167300030Abc662A;
extern T0*ms401_176211197Abc668A;
extern T0*ms121_1662662954Abc121A;
extern T0*ms35_17498Abc112A;
extern T0*ms34_2233396Abc34A;
extern T0*ms792_5839580Abc792A;
extern T0*ms100_280897875Abc100A;
extern T0*ms100_1502870799Abc100A;
extern T0*ms405_182862Abc668A;
extern T0*ms616_80037Abc625B;
extern T0*ms33_61Abc33A;
extern T0*ms616_80037Abc625A;
extern T0*ms100_1223700793Abc100A;
extern T0*ms112_965818786Abc112A;
extern T0*ms792_1396798042Abc792A;
extern T0*ms33_54688766Abc33A;
extern T0*ms623_2102695Abc623A;
extern T0*ms274_216Abc100A;
extern T0*ms112_1312728230Abc112A;
extern T0*ms616_1261705Abc616A;
extern T0*ms274_216Abc100B;
extern T0*ms274_216Abc100C;
extern T0*ms274_216Abc100D;
extern T0*ms100_1690004585Abc100A;
extern T0*ms274_216Abc100E;
extern T0*ms108_129391217Abc108A;
extern T0*ms107_1265Abc282A;
extern T0*ms34_3175Abc34A;
extern T0*ms100_2176510Abc100A;
extern T0*ms616_80037Abc616A;
extern T0*ms100_142936234Abc100A;
extern T0*ms108_298Abc108A;
extern T0*ms33_13194Abc33A;
extern T0*ms616_504830035Abc616A;
extern T0*ms274_216Abc107A;
extern T0*ms274_216Abc107B;
extern T0*ms100_1564737054Abc100A;
extern T0*ms33_572288454Abc33A;
extern T0*ms112_2101369329Abc112A;
extern T0*ms397_112006296Abc397A;
extern T0*ms107_98784712Abc107A;
extern T0*ms621_10322525Abc792A;
extern T0*ms599_338723264Abc599A;
extern T0*ms100_1254996328Abc100A;
extern T0*ms611_185443Abc611A;
extern T0*ms611_185438Abc611A;
extern T0*ms100_2009918711Abc100A;
extern T0*ms682_1047Abc682A;
extern T0*ms100_1228072329Abc100A;
extern T0*ms616_2024156039Abc616A;
extern T0*ms599_472574902Abc599A;
extern T0*ms112_8880Abc112A;
extern T0*ms329_673829558Abc329A;
extern T0*ms100_241Abc100A;
extern T0*ms622_1340573954Abc622A;
extern T0*ms112_697705640Abc112A;
extern T0*ms112_697705640Abc112B;
extern T0*ms112_697705640Abc112C;
extern T0*ms622_802840Abc622A;
extern T0*ms622_802840Abc622B;
extern T0*ms100_241Abc107A;
extern T0*ms112_12201Abc112A;
extern T0*ms469_10559665Abc980B;
extern T0*ms469_10559665Abc980A;
extern T0*ms32_331Abc432A;
extern T0*ms452_69279758Abc452A;
extern T0*ms33_80109Abc33A;
extern T0*ms616_1341914655Abc616A;
extern T0*ms112_2039472678Abc112A;
extern T0*ms107_1865554673Abc107A;
extern T0*ms108_7878Abc108A;
extern T0*ms100_727272566Abc100A;
extern T0*ms100_897447412Abc100A;
extern T0*ms100_897447412Abc100B;
extern T0*ms112_545118879Abc112A;
extern T0*ms33_349117293Abc33A;
extern T0*ms100_1550836304Abc100A;
extern T0*ms112_1040899642Abc112A;
extern T0*ms614_23186700Abc614A;
extern T0*ms284_60894Abc284A;
extern T0*ms100_147793411Abc100A;
extern T0*ms394_138555764Abc394A;
extern T0*ms112_1582839830Abc112A;
extern T0*ms100_2117988535Abc100A;
extern T0*ms599_327Abc599A;
extern T0*ms112_3475Abc599A;
extern T0*ms112_3475Abc599B;
extern T0*ms112_3475Abc599C;
extern T0*ms621_1994331Abc621A;
extern T0*ms599_422487Abc599A;
extern T0*ms397_2089449608Abc397A;
extern T0*ms614_2187584Abc614A;
extern T0*ms112_1307483215Abc112A;
extern T0*ms33_10377643Abc33A;
extern T0*ms792_1665297219Abc792A;
extern T0*ms112_533301931Abc112A;
extern T0*ms599_2142146116Abc599A;
extern T0*ms30_8771Abc30A;
extern T0*ms33_1604515261Abc33A;
extern T0*ms476_14429929Abc476B;
extern T0*ms476_14429929Abc476A;
extern T0*ms476_112048371Abc476A;
extern T0*ms33_1856946950Abc33A;
extern T0*ms100_201048978Abc100A;
extern T0*ms34_77350Abc376A;
extern T0*ms623_29126717Abc623A;
extern T0*ms611_4570857Abc611A;
extern T0*ms611_4570907Abc611A;
extern T0*ms550_28418819Abc550A;
extern T0*ms621_444775459Abc621A;
extern T0*ms792_526175446Abc792A;
extern T0*ms400_905382Abc400A;
extern T0*ms400_905382Abc400B;
extern T0*ms112_277Bbc112A;
extern T0*ms400_905382Abc400C;
extern T0*ms400_905382Abc400D;
extern T0*ms400_905382Abc400E;
extern T0*ms112_3430Abc112A;
extern T0*ms400_905382Abc400F;
extern T0*ms112_3430Abc112B;
extern T0*ms400_905382Abc400G;
extern T0*ms400_905382Abc400H;
extern T0*ms100_439136Abc100A;
extern T0*ms33_1644425991Abc33A;
extern T0*ms112_341357508Abc112A;
extern T0*ms108_0Abc100A;
extern T0*ms794_730579755Abc794A;
extern T0*ms34_9790205Abc646A;
extern T0*ms100_1296817101Abc100A;
extern T0*ms108_1775Abc108A;
extern T0*ms792_1843146228Abc792A;
extern T0*ms108_0Abc102A;
extern T0*ms33_169371474Abc33A;
extern T0*ms452_1606367935Abc452A;
extern T0*ms274_216Abc274A;
extern T0*ms622_77773Abc622A;
extern T0*ms622_419Abc622B;
extern T0*ms622_419Abc622A;
extern T0*ms399_435568604Abc399A;
extern T0*ms100_1421116705Abc100A;
extern T0*ms108_0Abc112A;
extern T0*ms108_0Abc107A;
extern T0*ms108_0Abc112B;
extern T0*ms112_114Abc112A;
extern T0*ms108_0Abc112C;
extern T0*ms112_1065942137Abc112A;
extern T0*ms108_0Abc108A;
extern T0*ms108_0Abc108B;
extern T0*ms471_413651Abc471A;
extern T0*ms108_0Abc108C;
extern T0*ms623_946895Abc623B;
extern T0*ms108_0Abc108D;
extern T0*ms623_946895Abc623A;
extern T0*ms108_0Abc108E;
extern T0*ms108_0Abc108F;
extern T0*ms108_0Abc108G;
extern T0*ms108_0Abc108H;
extern T0*ms33_201970776Abc33A;
extern T0*ms621_10322525Abc621A;
extern T0*ms108_0Abc108I;
extern T0*ms108_0Abc108J;
extern T0*ms108_0Abc108K;
extern T0*ms108_0Abc108L;
extern T0*ms108_0Abc108M;
extern T0*ms108_0Abc108N;
extern T0*ms108_0Abc108O;
extern T0*ms108_0Abc108P;
extern T0*ms108_0Abc108Q;
extern T0*ms108_0Abc108R;
extern T0*ms108_0Abc108S;
extern T0*ms277_1281353746Abc277A;
extern T0*ms33_1549703Abc33A;
extern T0*ms405_182862Abc367A;
extern T0*ms100_1587734026Abc100A;
extern T0*ms112_1460025642Abc112A;
extern T0*ms432_1026844627Abc432A;
extern T0*ms100_46597328Abc100A;
extern T0*ms792_598811726Abc792A;
extern T0*ms598_619030689Abc598A;
extern T0*ms108_146157Abc108A;
extern T0*ms622_579867211Abc622A;
extern T0*ms34_10703002Abc34A;
extern T0*ms792_32605Abc792A;
extern T0*ms284_878860Abc284A;
extern T0*ms112_514187710Abc112A;
extern T0*ms734_351Abc734A;
extern T0*ms734_351Abc734B;
extern T0*ms112_308542101Abc112A;
extern T0*ms100_49203356Abc100A;
extern T0*ms112_1082664800Abc112A;
extern T0*ms432_146113272Abc432A;
extern T0*ms112_16782Abc621A;
extern T0*ms405_182862Abc405A;
extern T0*ms621_197159Abc622A;
extern T0*ms112_192841706Abc112A;
extern T0*ms621_197159Abc621A;
extern T0*ms365_1360462097Abc365A;
extern T0*ms112_251Abc112A;
extern T0*ms108_8884Abc108A;
extern T0*ms112_251Abc112B;
extern T0*ms108_8884Abc108B;
extern T0*ms112_1308400309Abc112A;
extern T0*ms112_251Abc112C;
extern T0*ms368_1809213019Abc368A;
extern T0*ms688_559Abc688A;
extern T0*ms688_559Abc688B;
extern T0*ms284_1750778Abc284A;
extern T0*ms33_33120277Abc33A;
extern T0*ms680_8777401Abc680A;
extern T0*ms112_7869Abc614A;
extern T0*ms33_9712276Abc33A;
extern T0*ms112_7869Abc614B;
extern T0*ms112_4049151Abc112A;
extern T0*ms394_1801Abc394A;
extern T0*ms112_7869Abc621A;
extern T0*ms100_1208507031Abc100A;
extern T0*ms108_1515266530Abc108A;
extern T0*ms108_1515266530Abc108B;
extern T0*ms107_961022639Abc107A;
extern T0*ms112_7869Abc622A;
extern T0*ms112_7869Abc622B;
extern T0*ms112_7869Abc622C;
extern T0*ms112_7869Abc622D;
extern T0*ms112_7869Abc622E;
extern T0*ms112_7869Abc622F;
extern T0*ms112_7869Abc622G;
extern T0*ms108_3094Abc108A;
extern T0*ms108_91157Abc108A;
extern T0*ms792_484169497Abc792A;
extern T0*ms476_1832Abc476A;
extern T0*ms84_522142839Abc84B;
extern T0*ms112_7918258Abc112A;
extern T0*ms616_117385886Abc616A;
extern T0*ms84_522142839Abc84A;
extern T0*ms33_1622700141Abc33A;
extern T0*ms112_16782Abc599A;
extern T0*ms112_16782Abc599B;
extern T0*ms112_16782Abc599C;
extern T0*ms112_490869799Abc112A;
extern T0*ms458_1809998749Abc458A;
extern T0*ms281_15370Abc281A;
extern T0*ms34_78591Abc274A;
extern T0*ms33_50246319Abc33A;
extern T0*ms792_1648235130Abc792A;
extern T0*ms34_820292Abc34A;
extern T0*ms623_32400Abc623A;
extern T0*ms115_740900172Abc115A;
extern T0*ms792_212314278Abc792A;
extern T0*ms34_401994Abc34A;
extern T0*ms33_1223936132Abc33A;
extern T0*ms100_4235Abc100A;
extern T0*ms115_1041926341Abc115A;
extern T0*ms115_107193812Abc115A;
extern T0*ms34_392625Abc34A;
extern T0*ms616_1241777620Abc616A;
extern T0*ms112_16487Abc790A;
extern T0*ms112_16487Abc790B;
extern T0*ms112_16487Abc790C;
extern T0*ms274_1302880443Abc274A;
extern T0*ms112_1661632742Abc112A;
extern T0*ms474_68732Abc474B;
extern T0*ms474_68732Abc474A;
extern T0*ms630_2395Abc630A;
extern T0*ms623_1155996628Abc623A;
extern T0*ms100_791727511Abc100A;
extern T0*ms108_1721407046Abc108A;
extern T0*ms100_34Abc100A;
extern T0*ms792_1990989Abc792A;
extern T0*ms34_1747646688Abc34A;
extern T0*ms108_143937264Abc108A;
extern T0*ms790_2082029949Abc790A;
extern T0*ms95_1914699291Abc95A;
extern T0*ms108_0Abc274A;
extern T0*ms108_0Abc274B;
extern T0*ms100_120546715Abc100A;
extern T0*ms599_208313786Abc599A;
extern T0*ms101_1226144723Abc101A;
extern T0*ms100_34Abc107A;
extern T0*ms108_0Abc282A;
extern T0*ms108_0Abc282B;
extern T0*ms100_1984637890Abc100A;
extern T0*ms622_1671063525Abc622B;
extern T0*ms622_1671063525Abc622A;
extern T0*ms274_216Abc560A;
extern T0*ms274_1955866577Abc274A;
extern T0*ms112_451157Abc112A;
extern T0*ms112_451157Abc112B;
extern T0*ms112_451157Abc112C;
extern T0*ms89_685Abc89A;
extern T0*ms112_1917882Abc112A;
extern T0*ms110_17794Abc110A;
extern T0*ms733_2114672999Abc733A;
extern T0*ms34_3415Abc599A;
extern T0*ms33_869539012Abc33A;
extern T0*ms274_1598804806Abc274A;
extern T0*ms112_40Abc112A;
extern T0*ms367_1744510279Abc367A;
extern T0*ms112_40Abc112B;
extern T0*ms792_2136427942Abc792A;
extern T0*ms616_169510Abc616A;
extern T0*ms33_16639Abc33A;
extern T0*ms545_276Abc775A;
extern T0*ms778_1854402277Abc778A;
extern T0*ms614_1639500234Abc614A;
extern T0*ms378_128333478Abc378A;
extern T0*ms545_276Abc773A;
extern T0*ms108_0Abc368A;
extern T0*ms101_696478167Abc101A;
extern T0*ms112_93Abc112A;
extern T0*ms34_436911Abc34A;
extern T0*ms108_0Abc432A;
extern T0*ms112_438660461Abc112A;
extern T0*ms112_1173628471Abc112A;
extern T0*ms596_619166512Abc596A;
extern T0*ms108_0Abc432B;
extern T0*ms108_0Abc432C;
extern T0*ms107_170061979Abc107A;
extern T0*ms108_1067454155Abc108A;
extern T0*ms469_10559665Abc469A;
extern T0*ms112_1607940692Abc112A;
extern T0*ms112_934Abc112A;
extern T0*ms363_1485085274Abc363A;
extern T0*ms339_416499Abc339A;
extern T0*ms339_416499Abc339B;
extern T0*ms112_475921520Abc112A;
extern T0*ms339_416499Abc339C;
extern T0*ms452_375578482Abc452A;
extern T0*ms493_455005721Abc493A;
extern T0*ms117_899910547Abc117A;
extern T0*ms100_1631593164Abc100A;
extern T0*ms95_620670284Abc95A;
extern T0*ms400_2480479Abc400A;
extern T0*ms560_13424808Abc560A;
extern T0*ms110_301485Abc110A;
extern T0*ms778_65332Abc778A;
extern T0*ms565_1747685533Abc565A;
extern T0*ms100_970900228Abc100A;
extern T0*ms616_25900Abc616A;
extern T0*ms616_264Abc616D;
extern T0*ms566_1290234494Abc566A;
extern T0*ms616_264Abc616C;
extern T0*ms616_264Abc616B;
extern T0*ms616_259Abc616A;
extern T0*ms616_264Abc616A;
extern T0*ms112_1500500537Abc112A;
extern T0*ms112_1901889757Abc112A;
extern T0*ms108_683870135Abc108A;
extern T0*ms599_404651Abc599A;
extern T0*ms792_33875Abc792A;
extern T0*ms100_611Abc34A;
extern T0*ms112_209121Abc112A;
extern T0*ms100_1694969179Abc100A;
extern T0*ms599_2301Abc599A;
extern T0*ms112_1656195746Abc112A;
extern T0*ms34_3415Abc492A;
extern T0*ms274_1689176777Abc274A;
extern T0*ms614_205Abc614A;
extern T0*ms545_276Abc732A;
extern T0*ms792_784300160Abc792A;
extern T0*ms112_56845112Abc112A;
extern T0*ms280_1534075159Abc690A;
extern T0*ms33_1947419Abc33A;
extern T0*ms101_744085684Abc101A;
extern T0*ms112_375072661Abc112A;
extern T0*ms479_1965077754Abc479A;
extern T0*ms33_41849945Abc33A;
extern T0*ms108_327Abc108A;
extern T0*ms33_424430Abc33A;
extern T0*ms614_36137368Abc614A;
extern T0*ms474_1610077639Abc474A;
extern T0*ms565_1747685533Abc598A;
extern T0*ms33_1247Abc33A;
extern T0*ms614_7233618Abc614A;
extern T0*ms108_0Abc534A;
extern T0*ms108_0Abc534B;
extern T0*ms33_548214405Abc33A;
extern T0*ms598_565069653Abc598A;
extern T0*ms108_0Abc535A;
extern T0*ms599_1125599189Abc599A;
extern T0*ms112_2382Abc112A;
extern T0*ms274_527202963Abc274A;
extern T0*ms100_34Abc273A;
extern T0*ms34_402346Abc34A;
extern T0*ms100_34Abc273B;
extern T0*ms95_672350142Abc95A;
extern T0*ms108_0Abc550A;
extern T0*ms108_0Abc550B;
extern T0*ms112_3430Abc566A;
extern T0*ms112_1728206941Abc112A;
extern T0*ms33_80854Abc33A;
extern T0*ms100_488830629Abc100A;
extern T0*ms100_734506354Abc100A;
extern T0*ms419_1529695024Abc419A;
extern T0*ms621_41125176Abc621A;
extern T0*ms778_68224Abc778A;
extern T0*ms100_1078639380Abc100A;
extern T0*ms112_1281004126Abc112A;
extern T0*ms112_1816632501Abc112A;
extern T0*ms33_87541Abc33A;
extern T0*ms112_3040Abc112A;
extern T0*ms112_1203674198Abc112A;
extern T0*ms108_0Abc614A;
extern T0*ms33_1339128Abc33A;
extern T0*ms792_1341105285Abc792A;
extern T0*ms616_1175100011Abc616A;
extern T0*ms595_11952Abc595A;
extern T0*ms622_437573617Abc622A;
extern T0*ms419_1333985363Abc419A;
extern T0*ms616_809795Abc622B;
extern T0*ms394_1250079569Abc394A;
extern T0*ms616_809795Abc622A;
extern T0*ms616_809795Abc616A;
extern T0*ms30_941571923Abc30A;
extern T0*ms112_6330Abc112A;
extern T0*ms599_80771Abc599A;
extern T0*ms274_216Abc797A;
extern T0*ms274_216Abc797B;
extern T0*ms100_194Abc112A;
extern T0*ms616_809795Abc614A;
extern T0*ms112_3430Abc599A;
extern T0*ms112_3430Abc599B;
extern T0*ms108_0Abc635A;
extern T0*ms621_158634393Abc621A;
extern T0*ms108_262628264Abc108A;
extern T0*ms107_295542551Abc107A;
extern T0*ms29_85614Abc286A;
extern T0*ms545_276Abc545A;
extern T0*ms33_47Abc33A;
extern T0*ms33_16686Abc33A;
extern T0*ms112_251Abc613A;
extern T0*ms599_1269Abc599A;
extern T0*ms596_565063403Abc597A;
extern T0*ms112_251Abc613B;
extern T0*ms33_185934055Abc33A;
extern T0*ms461_1554555636Abc461A;
extern T0*ms621_497096041Abc621A;
extern T0*ms596_565063403Abc596A;
extern T0*ms622_116864219Abc622A;
extern T0*ms623_59Abc623A;
extern T0*ms108_851047233Abc108A;
extern T0*ms622_86195952Abc622A;
extern T0*ms100_1135641353Abc100A;
extern T0*ms112_251Abc621A;
extern T0*ms112_251Abc621B;
extern T0*ms112_251Abc621C;
extern T0*ms112_251Abc622A;
extern T0*ms112_251Abc622B;
extern T0*ms792_1058430701Abc792B;
extern T0*ms112_251Abc622C;
extern T0*ms792_1058430701Abc792A;
extern T0*ms35_594Abc35A;
extern T0*ms33_84881Abc33A;
extern T0*ms107_385188989Abc107B;
extern T0*ms611_4570957Abc611A;
extern T0*ms107_385188989Abc107A;
extern T0*ms33_279523519Abc33A;
extern T0*ms732_1762204931Abc732A;
extern T0*ms100_1545228536Abc100A;
extern T0*ms100_2082787810Abc100A;
extern T0*ms273_1968202785Abc273A;
extern T0*ms100_2082787810Abc100B;
extern T0*ms112_1361175839Abc112A;
extern T0*ms35_89216Abc35A;
extern T0*ms34_10208843Abc34A;
extern T0*ms690_1345295929Abc690A;
extern T0*ms112_1364588829Abc112A;
extern T0*ms100_445504446Abc100A;
extern T0*ms104_589Abc104A;
extern T0*ms443_1888871872Abc443A;
extern T0*ms452_1573210512Abc452A;
extern T0*ms108_9073Abc108A;
extern T0*ms108_0Abc682A;
extern T0*ms108_9073Abc108B;
extern T0*ms108_0Abc682B;
extern T0*ms274_376816512Abc274A;
extern T0*ms108_9073Abc108C;
extern T0*ms108_9073Abc108D;
extern T0*ms34_251916328Abc34A;
extern T0*ms108_0Abc733A;
extern T0*ms519_372Abc622B;
extern T0*ms519_372Abc622A;
extern T0*ms793_41300Abc793A;
extern T0*ms112_49152444Abc621A;
extern T0*ms100_1207921682Abc100A;
extern T0*ms33_180965430Abc33A;
extern T0*ms108_0Abc686A;
extern T0*ms616_352968782Abc616A;
extern T0*ms108_0Abc736A;
extern T0*ms108_0Abc736B;
extern T0*ms112_308580Abc112A;
extern T0*ms112_251Abc599A;
extern T0*ms108_0Abc688A;
extern T0*ms108_0Abc688B;
extern T0*ms108_0Abc688C;
extern T0*ms112_2883Abc112A;
extern T0*ms108_0Abc751A;
extern T0*ms792_744114Abc792A;
extern T0*ms792_160930Abc792A;
extern T0*ms112_3457Abc112A;
extern T0*ms100_104977558Abc100A;
extern T0*ms363_7238542Abc363A;
extern T0*ms622_653639191Abc622A;
extern T0*ms101_1038536453Abc101A;
extern T0*ms566_1500847347Abc566A;
extern T0*ms616_1631421108Abc616A;
extern T0*ms100_2099054905Abc100A;
extern T0*ms792_6755Abc792A;
extern T0*ms792_6755Abc792B;
extern T0*ms662_1084920002Abc662A;
extern T0*ms401_29662Abc401A;
extern T0*ms599_674382779Abc599A;
extern T0*ms108_0Abc774A;
extern T0*ms274_880804011Abc274A;
extern T0*ms33_76691Abc33A;
extern T0*ms112_523400916Abc112A;
extern T0*ms100_54634669Abc100A;
extern T0*ms519_372Abc519A;
extern T0*ms108_759424351Abc108A;
extern T0*ms33_840111968Abc33A;
extern T0*ms616_2353775Abc616A;
extern T0*ms112_862271166Abc112A;
extern T0*ms616_1181502Abc616A;
extern T0*ms33_7095298Abc33A;
extern T0*ms100_342864313Abc100A;
extern T0*ms100_768172015Abc100A;
extern T0*ms112_114Abc792A;
extern T0*ms112_1839365502Abc112A;
extern T0*ms100_603076667Abc100A;
extern T0*ms33_1419919903Abc33A;
extern T0*ms621_2006740748Abc621A;
extern T0*ms616_1445Abc616A;
extern T0*ms112_451157Abc621A;
extern T0*ms33_1286698901Abc33A;
extern T0*ms115_1661847054Abc115A;
extern T0*ms112_249Abc112A;
extern T0*ms108_0Abc797A;
extern T0*ms120_2947Abc120A;
extern T0*ms108_0Abc797B;
extern T0*ms108_0Abc797C;
extern T0*ms108_0Abc797D;
extern T0*ms108_0Abc797E;
extern T0*ms778_1000694404Abc778A;
extern T0*ms108_0Abc799A;
extern T0*ms100_2028592127Abc100A;
extern T0*ms112_40Abc614A;
extern T0*ms626_2187411Abc626A;
extern T0*ms635_214672950Abc635A;
extern T0*ms108_1192507148Abc108A;
extern T0*ms628_295Abc628A;
extern T0*ms625_5313530Abc625A;
extern T0*ms33_51915068Abc33A;
extern T0*ms33_80416Abc33A;
extern T0*ms100_1154110220Abc100A;
extern T0*ms33_240810599Abc734A;
extern T0*ms622_520373770Abc622C;
extern T0*ms622_520373770Abc622B;
extern T0*ms622_520373770Abc622A;
extern T0*ms101_1538234998Abc101A;
extern T0*ms107_388205767Abc107A;
extern T0*ms599_46337Abc599A;
extern T0*ms121_141444Abc121A;
extern T0*ms345_786054293Abc345A;
extern T0*ms280_1534075159Abc280B;
extern T0*ms33_124Abc33A;
extern T0*ms280_1534075159Abc280A;
extern T0*ms33_1192911276Abc33A;
extern T0*ms100_1066804080Abc100A;
extern T0*ms34_54418471Abc34A;
extern T0*ms112_451157Abc599A;
extern T0*ms33_94Abc33A;
extern T0*ms33_197002151Abc33A;
extern T0*ms980_1935504882Abc980A;
extern T0*ms35_267875778Abc35A;
extern T0*ms401_1127350535Abc401A;
extern T0*ms112_33475Abc112A;
extern T0*ms33_1209184326Abc33A;
extern T0*ms34_114085235Abc34A;
extern T0*ms32_329Abc687A;
extern T0*ms32_329Abc687B;
extern T0*ms32_329Abc687C;
extern T0*ms33_1300046706Abc33A;
extern T0*ms616_6575105Abc616A;
extern T0*ms33_1979951Abc33A;
extern T0*ms622_1206509635Abc622A;
extern T0*ms733_560556710Abc733A;
extern T0*ms394_7867907Abc394A;
extern T0*ms339_83290Abc339A;
extern T0*ms405_343527626Abc405A;
extern T0*ms100_1062283098Abc100A;
extern T0*ms100_18036Abc100A;
extern T0*ms479_7232Abc643A;
extern T0*ms623_105695965Abc623A;
extern T0*ms34_88336Abc34A;
extern T0*ms598_1199805276Abc598A;
extern T0*ms102_618869258Abc102A;
extern T0*ms792_998144220Abc792A;
extern T0*ms33_2504Abc33A;
extern T0*ms113_1753572602Abc113A;
extern T0*ms793_27492334Abc793A;
extern T0*ms616_48939825Abc616A;
extern T0*ms33_591414963Abc33A;
extern T0*ms108_0Abc980A;
extern T0*ms108_0Abc980B;
extern T0*ms108_0Abc980C;
extern T0*ms108_0Abc980D;
extern T0*ms482_180503525Abc482A;
extern T0*ms108_0Abc980E;
extern T0*ms599_2187619Abc614A;
extern T0*ms774_1182938696Abc774A;
extern T0*ms95_251Abc732A;
extern T0*ms107_109671582Abc107A;
extern T0*ms95_251Abc674A;
extern T0*ms277_1136866084Abc277A;
extern T0*ms599_345908476Abc599A;
extern T0*ms376_3147Abc376A;
extern T0*ms621_1203432441Abc621A;
extern T0*ms112_1790869799Abc112A;
extern T0*ms112_2382Abc558A;
extern T0*ms95_251Abc665A;
extern T0*ms450_22861847Abc450A;
extern T0*ms112_2382Abc621A;
extern T0*ms599_1637927398Abc599A;
extern T0*ms599_1637927398Abc599B;
extern T0*ms635_1541882313Abc635A;
extern T0*ms100_1522646803Abc100A;
extern T0*ms100_755120513Abc100A;
extern T0*ms108_932412928Abc108A;
extern T0*ms599_5720Abc599A;
extern T0*ms112_246893097Abc112A;
extern T0*ms625_2117730851Abc625A;
extern T0*ms112_1164920984Abc112A;
extern T0*ms401_29662Abc112A;
extern T0*ms112_2382Abc628A;
extern T0*ms112_2382Abc628B;
extern T0*ms112_2382Abc628C;
extern T0*ms363_1094507536Abc363A;
extern T0*ms112_2382Abc628D;
extern T0*ms112_2382Abc628E;
extern T0*ms112_2382Abc628F;
extern T0*ms33_90544Abc33A;
extern T0*ms622_308542874Abc622A;
extern T0*ms112_2382Abc628G;
extern T0*ms112_2382Abc628H;
extern T0*ms368_44462444Abc368A;
extern T0*ms450_114137597Abc450A;
extern T0*ms33_1115958189Abc33A;
extern T0*ms599_2187619Abc599A;
extern T0*ms479_7232Abc479A;
extern T0*ms33_744845610Abc33A;
extern T0*ms112_17480Abc112A;
extern T0*ms112_17480Abc112B;
extern T0*ms616_180037Abc616A;
extern T0*ms616_180037Abc616B;
extern T0*ms106_23085765Abc106A;
extern T0*ms33_1937220099Abc33A;
extern T0*ms33_243411981Abc33A;
extern T0*ms100_23410Abc100A;
extern T0*ms33_586229245Abc33A;
extern T0*ms112_1404852998Abc112A;
extern T0*ms371_1712194128Abc371A;
extern T0*ms274_416541Abc274A;
extern T0*ms112_437715Abc112A;
extern T0*ms112_2382Abc599A;
extern T0*ms621_6655Abc622A;
extern T0*ms112_46350Abc112A;
extern T0*ms790_306811962Abc790A;
extern T0*ms621_6655Abc621A;
extern T0*ms623_1416678934Abc623A;
extern T0*ms101_332623945Abc101A;
extern T0*ms100_1453066751Abc100A;
extern T0*ms112_6330Abc621A;
extern T0*ms622_1651828280Abc622A;
extern T0*ms432_202915491Abc432A;
extern T0*ms479_7232Abc509A;
extern T0*ms614_40427625Abc614A;
extern T0*ms119_557Abc119A;
extern T0*ms614_226Abc616B;
extern T0*ms479_7232Abc510A;
extern T0*ms614_226Abc616A;
extern T0*ms95_251Abc611A;
extern T0*ms614_226Abc614B;
extern T0*ms614_226Abc614A;
extern T0*ms34_436196Abc34A;
extern T0*ms107_1379717706Abc107A;
extern T0*ms33_1095772782Abc33A;
extern T0*ms452_221949868Abc452A;
extern T0*ms121_1723571071Abc121A;
extern T0*ms100_1917483795Abc100A;
extern T0*ms34_1730514379Abc34A;
extern T0*ms623_23692781Abc623A;
extern T0*ms112_1988895671Abc112B;
extern T0*ms112_1988895671Abc112A;
extern T0*ms599_156962Abc599A;
extern T0*ms100_445001496Abc100C;
extern T0*ms100_445001496Abc100B;
extern T0*ms100_445001496Abc100A;
extern T0*ms622_2017590Abc622A;
extern T0*ms112_4631170Abc112A;
extern T0*ms595_7317Abc595A;
extern T0*ms108_2077353217Abc108A;
extern T0*ms595_1152812249Abc595A;
extern T0*ms479_7232Abc374A;
extern T0*ms108_340Abc108A;
extern T0*ms32_329Abc980A;
extern T0*ms32_334Abc980A;
extern T0*ms32_329Abc980B;
extern T0*ms32_334Abc980B;
extern T0*ms368_732402575Abc368A;
extern T0*ms622_1263916320Abc622A;
extern T0*ms112_2189840Abc112A;
extern T0*ms112_444175272Abc112A;
extern T0*ms466_779913846Abc466A;
extern T0*ms112_701821825Abc112A;
extern T0*ms792_1985327250Abc792A;
extern T0*ms634_265537649Abc634A;
extern T0*ms106_97543221Abc106A;
extern T0*ms34_2063276Abc34A;
extern T0*ms112_49152444Abc112A;
extern T0*ms277_1641573945Abc277A;
extern T0*ms100_1991246741Abc100A;
extern T0*ms112_1435285930Abc112A;
extern T0*ms33_1680926299Abc33A;
extern T0*ms432_178490Abc432A;
extern T0*ms108_1335Abc108A;
extern T0*ms622_1530Abc622A;
extern T0*ms622_39831Abc622A;
extern T0*ms33_279656751Abc33A;
extern T0*ms112_1982839385Abc112A;
extern T0*ms110_15721Abc110A;
extern T0*ms274_17696Abc112A;
extern T0*ms363_1626899946Abc733A;
extern T0*ms34_3175Abc477A;
extern T0*ms101_894954671Abc101A;
extern T0*ms30_142550Abc30A;
extern T0*ms622_45355Abc622A;
extern T0*ms112_1946737844Abc112A;
extern T0*ms368_181352Abc368A;
extern T0*ms112_27063164Abc112A;
extern T0*ms34_3175Abc466A;
extern T0*ms621_1328320695Abc621A;
extern T0*ms394_1816745449Abc394A;
extern T0*ms560_142931125Abc560A;
extern T0*ms792_5161461Abc792A;
extern T0*ms108_1438Abc108A;
extern T0*ms367_389128515Abc367A;
extern T0*ms34_265093627Abc34A;
extern T0*ms110_51699930Abc110A;
extern T0*ms464_218994080Abc464A;
extern T0*ms599_1694771411Abc599B;
extern T0*ms599_1694771411Abc599A;
extern T0*ms476_84293096Abc476A;
extern T0*ms469_1089314041Abc469A;
extern T0*ms100_879341913Abc100A;
extern T0*ms34_3175Abc399A;
extern T0*ms469_1331532446Abc980B;
extern T0*ms469_1331532446Abc980A;
extern T0*ms565_742356033Abc565A;
extern T0*ms732_786403659Abc732A;
extern T0*ms121_210141519Abc121A;
extern T0*ms33_240810599Abc33A;
extern T0*ms100_431394186Abc100A;
extern T0*ms100_431394186Abc100B;
extern T0*ms418_306215109Abc418A;
extern T0*ms108_120239233Abc108A;
extern T0*ms599_259Abc599A;
extern T0*ms112_2038260346Abc112A;
extern T0*ms100_2047201942Abc100A;
extern T0*ms793_692716864Abc793A;
extern T0*ms599_1111279623Abc599A;
extern T0*ms101_140920753Abc101A;
extern T0*ms792_2121801775Abc792A;
extern T0*ms95_251Abc405A;
extern T0*ms34_3175Abc433A;
extern T0*ms533_456083848Abc533A;
extern T0*ms792_101Abc792A;
extern T0*ms34_3175Abc377A;
extern T0*ms34_3175Abc426A;
extern T0*ms33_1206543966Abc33A;
extern T0*ms107_1066764899Abc107A;
extern T0*ms277_169314461Abc277A;
extern T0*ms621_1384921237Abc621A;
extern T0*ms95_251Abc400A;
extern T0*ms112_1572014572Abc112A;
extern T0*ms34_9790205Abc34A;
extern T0*ms595_257Abc595A;
extern T0*ms611_22854451Abc611A;
extern T0*ms34_3175Abc363A;
extern T0*ms794_1295032451Abc794A;
extern T0*ms282_838840612Abc282A;
extern T0*ms112_881278717Abc112A;
extern T0*ms112_10666295Abc112A;
extern T0*ms112_1743948446Abc112A;
extern T0*ms622_854330615Abc622A;
extern T0*ms100_1732402521Abc100A;
extern T0*ms616_1727Abc616A;
extern T0*ms622_6946Abc622B;
extern T0*ms622_6946Abc622A;
extern T0*ms733_989731302Abc733A;
extern T0*ms108_10937305Abc108A;
extern T0*ms107_1162901343Abc107A;
extern T0*ms524_80251Abc524A;
extern T0*ms34_2185421Abc664A;
extern T0*ms33_3421Abc33A;
extern T0*ms100_1922694958Abc100A;
extern T0*ms616_283285900Abc616A;
extern T0*ms274_208962844Abc274A;
extern T0*ms622_1124779458Abc622A;
extern T0*ms635_1092806174Abc635A;
extern T0*ms368_1317154036Abc368A;
extern T0*ms112_993675817Abc112A;
extern T0*ms95_1121Abc95A;
extern T0*ms33_170256464Abc33A;
extern T0*ms622_19199275Abc622A;
extern T0*ms121_44975894Abc685A;
extern T0*ms100_1524784203Abc100A;
extern T0*ms401_1907958363Abc401A;
extern T0*ms560_950159899Abc560A;
extern T0*ms107_292482Abc107A;
extern T0*ms33_43Abc33A;
extern T0*ms33_38Abc33A;
extern T0*ms107_891552598Abc107A;
extern T0*ms980_1807195960Abc980A;
extern T0*ms274_17696Abc274A;
extern T0*ms100_1275558331Abc100A;
extern T0*ms560_142931125Abc405A;
extern T0*ms33_1235Abc33A;
extern T0*ms277_38905513Abc277A;
extern T0*ms616_54714119Abc616A;
extern T0*ms112_355630820Abc112A;
extern T0*ms100_1109293176Abc100A;
extern T0*ms34_56927287Abc34A;
extern T0*ms112_204Abc112A;
extern T0*ms628_474Abc628A;
extern T0*ms625_1113554587Abc625A;
extern T0*ms622_33291Abc622C;
extern T0*ms622_255Abc622B;
extern T0*ms622_255Abc622A;
extern T0*ms622_33291Abc622B;
extern T0*ms622_33291Abc622A;
extern T0*ms112_889346373Abc112A;
extern T0*ms100_631447998Abc100A;
extern T0*ms100_2992013Abc100A;
extern T0*ms112_389672Abc112A;
extern T0*ms797_79Abc797B;
extern T0*ms797_79Abc797A;
extern T0*ms33_240810604Abc734A;
extern T0*ms112_6330Abc980A;
extern T0*ms598_340114884Abc598A;
extern T0*ms469_1917908900Abc469A;
extern T0*ms110_1772235Abc110A;
extern T0*ms33_88048Abc33A;
extern T0*ms112_257Abc112A;
extern T0*ms107_262Abc107A;
extern T0*ms35_10714216Abc35A;
extern T0*ms112_257Abc112B;
extern T0*ms112_257Abc112C;
extern T0*ms282_360205908Abc282B;
extern T0*ms282_360205908Abc282A;
extern T0*ms611_4571032Abc611A;
extern T0*ms110_39617954Abc110A;
extern T0*ms790_1414Abc790A;
extern T0*ms635_1711825865Abc635A;
extern T0*ms112_10739979Abc112A;
extern T0*ms108_932412928Abc625A;
extern T0*ms112_33425Abc112A;
extern T0*ms452_1284372793Abc452A;
extern T0*ms112_33425Abc112B;
extern T0*ms452_1284372793Abc452B;
extern T0*ms452_1284372793Abc452C;
extern T0*ms452_1284372793Abc452D;
extern T0*ms497_90494969Abc497A;
extern T0*ms470_9808515Abc470A;
extern T0*ms633_80501401Abc633A;
extern T0*ms363_1626899946Abc363A;
extern T0*ms100_469031018Abc100A;
extern T0*ms112_4620481Abc112A;
extern T0*ms100_955638361Abc100A;
extern T0*ms112_1327517381Abc112A;
extern T0*ms33_61Abc397A;
extern T0*ms100_502181838Abc100A;
extern T0*ms33_64Abc33A;
extern T0*ms110_207986277Abc110A;
extern T0*ms621_49806180Abc621A;
extern T0*ms283_740Abc283A;
extern T0*ms283_740Abc283B;
extern T0*ms565_1710532409Abc565A;
extern T0*ms112_1737592965Abc112A;
extern T0*ms621_1197879602Abc621A;
extern T0*ms107_36611104Abc107A;
extern T0*ms121_2537Abc121A;
extern T0*ms792_775406525Abc792A;
extern T0*ms736_1398420907Abc736A;
extern T0*ms33_9647090Abc33A;
extern T0*ms110_18144Abc110A;
extern T0*ms419_1081673178Abc419A;
extern T0*ms614_1298Abc614A;
extern T0*ms623_2110Abc623A;
extern T0*ms614_1298Abc614B;
extern T0*ms33_1483884743Abc33A;
extern T0*ms328_311661671Abc328A;
extern T0*ms616_3175Abc794A;
extern T0*ms112_434116584Abc112A;
extern T0*ms616_3175Abc793A;
extern T0*ms34_3175Abc116A;
extern T0*ms112_1284Abc112A;
extern T0*ms112_1284Abc112B;
extern T0*ms599_3212Abc599A;
extern T0*ms616_3175Abc792A;
extern T0*ms622_234855416Abc622A;
extern T0*ms112_163413385Abc112A;
extern T0*ms112_1624663341Abc112A;
extern T0*ms622_1679626025Abc622A;
extern T0*ms112_1624663341Abc112B;
extern T0*ms622_1679626025Abc622B;
extern T0*ms112_997623147Abc112A;
extern T0*ms115_1585514726Abc115B;
extern T0*ms115_1585514726Abc115A;
extern T0*ms616_3760Abc616A;
extern T0*ms792_1279738389Abc792A;
extern T0*ms100_1943393816Abc100A;
extern T0*ms34_87466Abc34A;
extern T0*ms401_1993565801Abc401A;
extern T0*ms100_962885232Abc401A;
extern T0*ms107_292482Abc280A;
extern T0*ms33_2187464Abc33A;
extern T0*ms112_11086084Abc112A;
extern T0*ms112_11086084Abc112B;
extern T0*ms112_5164112Abc112A;
extern T0*ms368_2870Abc368A;
extern T0*ms329_1777506207Abc329A;
extern T0*ms274_1453633985Abc274A;
extern T0*ms112_1754886761Abc112A;
extern T0*ms622_4680700Abc622A;
extern T0*ms790_699Abc790A;
extern T0*ms623_29107967Abc623A;
extern T0*ms33_61Abc616A;
extern T0*ms328_1981041429Abc328A;
extern T0*ms108_2075119688Abc108A;
extern T0*ms622_887295984Abc622B;
extern T0*ms33_50778415Abc33A;
extern T0*ms622_887295984Abc622A;
extern T0*ms112_719604853Abc112A;
extern T0*ms616_279959115Abc616A;
extern T0*ms112_1994813154Abc112A;
extern T0*ms112_4980205Abc112A;
extern T0*ms33_36200588Abc33A;
extern T0*ms635_557767498Abc635A;
extern T0*ms33_550709268Abc33A;
extern T0*ms112_1981256377Abc112A;
extern T0*ms33_267647687Abc33A;
extern T0*ms33_55924644Abc33A;
extern T0*ms616_1553642381Abc616A;
extern T0*ms34_17221Abc34A;
extern T0*ms792_54686284Abc792A;
extern T0*ms107_1889118664Abc107A;
extern T0*ms34_2185421Abc34A;
extern T0*ms33_14150Abc396A;
extern T0*ms107_292482Abc419A;
extern T0*ms107_292482Abc419B;
extern T0*ms107_292482Abc419C;
extern T0*ms598_1511378937Abc598A;
extern T0*ms792_1523807481Abc792A;
extern T0*ms469_1331532446Abc469A;
extern T0*ms476_1496963692Abc476A;
extern T0*ms33_1603529235Abc33A;
extern T0*ms282_411001267Abc282A;
extern T0*ms108_240Abc100A;
extern T0*ms793_14464Abc793A;
extern T0*ms792_915251302Abc792A;
extern T0*ms793_14464Abc793B;
extern T0*ms616_840791Abc616A;
extern T0*ms34_2234341Abc34A;
extern T0*ms112_9130Abc112A;
extern T0*ms616_7118Abc616A;
extern T0*ms769_324Abc769A;
extern T0*ms112_1471782099Abc112A;
extern T0*ms33_65574Abc442A;
extern T0*ms410_626532654Abc410A;
extern T0*ms34_87466Abc459A;
extern T0*ms107_2114217978Abc107A;
extern T0*ms108_240Abc108A;
extern T0*ms401_1490189105Abc401A;
extern T0*ms34_2234341Abc466A;
extern T0*ms422_1666936074Abc422A;
extern T0*ms108_240Abc121A;
extern T0*ms108_240Abc121B;
extern T0*ms100_1717397235Abc100A;
extern T0*ms117_1568216255Abc117A;
extern T0*ms558_3557Abc558A;
extern T0*ms273_319940936Abc273A;
extern T0*ms273_319940936Abc273B;
extern T0*ms101_595894613Abc101A;
extern T0*ms273_319940936Abc273C;
extern T0*ms273_319940936Abc273D;
extern T0*ms623_269141588Abc623A;
extern T0*ms622_15020Abc622G;
extern T0*ms100_1207880883Abc100A;
extern T0*ms101_1861857328Abc101A;
extern T0*ms622_15020Abc622F;
extern T0*ms622_15020Abc622E;
extern T0*ms622_15020Abc622D;
extern T0*ms622_15020Abc622C;
extern T0*ms107_292482Abc476A;
extern T0*ms599_68284Abc599A;
extern T0*ms599_8475Abc599A;
extern T0*ms622_15020Abc622B;
extern T0*ms107_292482Abc476B;
extern T0*ms622_15020Abc622A;
extern T0*ms622_1709245815Abc622A;
extern T0*ms117_253892190Abc117A;
extern T0*ms621_942808765Abc621A;
extern T0*ms616_3175Abc623A;
extern T0*ms616_3175Abc622A;
extern T0*ms34_3415Abc34A;
extern T0*ms616_3175Abc616B;
extern T0*ms476_909851733Abc476A;
extern T0*ms616_3175Abc616A;
extern T0*ms560_1046299075Abc560A;
extern T0*ms121_27561173Abc121A;
extern T0*ms623_2001063662Abc623A;
extern T0*ms120_397Abc120A;
extern T0*ms611_185428Abc611A;
extern T0*ms33_1944903Abc33A;
extern T0*ms466_2101296982Abc466A;
extern T0*ms792_2051940780Abc792A;
extern T0*ms622_106047655Abc622A;
extern T0*ms33_80694Abc33A;
extern T0*ms797_1959331451Abc797A;
extern T0*ms635_1846931416Abc635A;
extern T0*ms100_1933Abc100A;
extern T0*ms622_340514Abc622A;
extern T0*ms401_1490189105Abc397A;
extern T0*ms401_1490189105Abc397B;
extern T0*ms622_8291Abc622D;
extern T0*ms622_8291Abc622C;
extern T0*ms100_2091587115Abc100A;
extern T0*ms622_8291Abc622B;
extern T0*ms622_8291Abc622A;
extern T0*ms630_448205Abc630A;
extern T0*ms34_945182441Abc34A;
extern T0*ms622_195246Abc622A;
extern T0*ms107_1546692995Abc107A;
extern T0*ms115_305596576Abc115A;
extern T0*ms33_567319812Abc33A;
extern T0*ms466_1057882626Abc466A;
extern T0*ms112_2630Abc112A;
extern T0*ms112_2630Abc112B;
extern T0*ms100_962885232Abc100C;
extern T0*ms100_962885232Abc100B;
extern T0*ms100_962885232Abc100A;
extern T0*ms599_242108838Abc599A;
extern T0*ms33_3472Abc33A;
extern T0*ms112_1826935309Abc112A;
extern T0*ms284_2064444Abc281A;
extern T0*ms112_1844536619Abc112A;
extern T0*ms622_1671074150Abc622B;
extern T0*ms622_1671074150Abc622A;
extern T0*ms280_867234734Abc280A;
extern T0*ms33_2067759348Abc33A;
extern T0*ms284_2064444Abc284A;
extern T0*ms611_5395074Abc611A;
extern T0*ms112_257Abc611A;
extern T0*ms112_257Abc611B;
extern T0*ms112_257Abc611C;
extern T0*ms112_257Abc611D;
extern T0*ms112_257Abc611E;
extern T0*ms112_257Abc611F;
extern T0*ms112_257Abc611G;
extern T0*ms112_257Abc611H;
extern T0*ms112_1170250908Abc112A;
extern T0*ms112_257Abc611I;
extern T0*ms792_1007239Abc792A;
extern T0*ms112_257Abc558A;
extern T0*ms112_257Abc558B;
extern T0*ms112_257Abc558C;
extern T0*ms100_401981819Abc100A;
extern T0*ms100_401981819Abc100B;
extern T0*ms112_257Abc614A;
extern T0*ms112_257Abc614B;
extern T0*ms112_257Abc614C;
extern T0*ms100_1439398002Abc100A;
extern T0*ms635_42706587Abc635A;
extern T0*ms112_257Abc616A;
T0*se_ms(int c,char*e);
T0*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void se_msi10(void);
void se_msi11(void);
void se_msi12(void);
void se_msi13(void);
void se_msi14(void);
void se_msi15(void);
void se_msi16(void);
void se_msi17(void);
void se_msi18(void);
void se_msi19(void);
void se_msi20(void);
void se_msi21(void);
void se_msi22(void);
void se_msi23(void);
void se_msi24(void);
void se_msi25(void);
void se_msi26(void);
void se_msi27(void);
void se_msi28(void);
void se_msi29(void);
void se_msi30(void);
void se_msi31(void);
void se_msi32(void);
void se_msi33(void);
void se_msi34(void);
void se_msi35(void);
void se_msi36(void);
void se_msi37(void);
void se_msi38(void);
void se_msi39(void);
void se_msi40(void);
void se_msi41(void);
void se_msi42(void);
void se_msi43(void);
void se_msi44(void);
void se_msi45(void);
void se_msi46(void);
void se_msi47(void);
void se_msi48(void);
void se_msi49(void);
void se_msi50(void);
void se_msi51(void);
void se_msi52(void);
void se_msi53(void);
void se_msi54(void);
void se_msi55(void);
void se_msi56(void);
void se_msi57(void);
void se_msi58(void);
void se_msi59(void);
void se_msi60(void);
void se_msi61(void);
void se_msi62(void);
void se_msi63(void);
void se_msi64(void);
void se_msi65(void);
void se_msi66(void);
void se_msi67(void);
void se_msi68(void);
void se_msi69(void);
void se_msi70(void);
void se_msi71(void);
void se_msi72(void);
void se_msi73(void);
void se_msi74(void);
void se_msi75(void);
void se_msi76(void);
void se_msi77(void);
void se_msi78(void);
void se_msi79(void);
void se_msi80(void);
void se_msi81(void);
void se_msi82(void);
void se_msi83(void);
void manifest_string_mark1(void);
void manifest_string_mark2(void);
void manifest_string_mark3(void);
void manifest_string_mark4(void);
void manifest_string_mark5(void);
void manifest_string_mark6(void);
void manifest_string_mark7(void);
void manifest_string_mark8(void);
void manifest_string_mark9(void);
void manifest_string_mark10(void);
void manifest_string_mark11(void);
void manifest_string_mark12(void);
void manifest_string_mark13(void);
void manifest_string_mark14(void);
void once_function_mark(void);
void gc_start(void);
typedef struct B29 gc29;
struct B29{T29 object;union {void*flag;gc29*next;} header;};
extern gc29*store29;
extern int store_left29;
extern fsoc*store_chunk29;
extern gc29*gc_free29;
typedef struct B108 gc108;
struct B108{T108 object;union {void*flag;gc108*next;} header;};
extern gc108*store108;
extern int store_left108;
extern fsoc*store_chunk108;
extern gc108*gc_free108;
typedef struct B979 gc979;
struct B979{T979 object;union {void*flag;gc979*next;} header;};
extern gc979*store979;
extern int store_left979;
extern fsoc*store_chunk979;
extern gc979*gc_free979;
typedef struct B100 gc100;
struct B100{T100 object;union {void*flag;gc100*next;} header;};
extern gc100*store100;
extern int store_left100;
extern fsoc*store_chunk100;
extern gc100*gc_free100;
typedef struct B121 gc121;
struct B121{T121 object;union {void*flag;gc121*next;} header;};
extern gc121*store121;
extern int store_left121;
extern fsoc*store_chunk121;
extern gc121*gc_free121;
typedef struct B274 gc274;
struct B274{T274 object;union {void*flag;gc274*next;} header;};
extern gc274*store274;
extern int store_left274;
extern fsoc*store_chunk274;
extern gc274*gc_free274;
typedef struct B112 gc112;
struct B112{T112 object;union {void*flag;gc112*next;} header;};
extern gc112*store112;
extern int store_left112;
extern fsoc*store_chunk112;
extern gc112*gc_free112;
typedef struct B107 gc107;
struct B107{T107 object;union {void*flag;gc107*next;} header;};
extern gc107*store107;
extern int store_left107;
extern fsoc*store_chunk107;
extern gc107*gc_free107;
typedef struct B282 gc282;
struct B282{T282 object;union {void*flag;gc282*next;} header;};
extern gc282*store282;
extern int store_left282;
extern fsoc*store_chunk282;
extern gc282*gc_free282;
typedef struct B272 gc272;
struct B272{T272 object;union {void*flag;gc272*next;} header;};
extern gc272*store272;
extern int store_left272;
extern fsoc*store_chunk272;
extern gc272*gc_free272;
typedef struct B7 gc7;
struct B7{T7 object;union {void*flag;gc7*next;} header;};
extern gc7*store7;
extern int store_left7;
extern fsoc*store_chunk7;
extern gc7*gc_free7;
extern na_env na_env9;
typedef struct B621 gc621;
struct B621{T621 object;union {void*flag;gc621*next;} header;};
extern gc621*store621;
extern int store_left621;
extern fsoc*store_chunk621;
extern gc621*gc_free621;
typedef struct B1008 gc1008;
struct B1008{T1008 object;union {void*flag;gc1008*next;} header;};
extern gc1008*store1008;
extern int store_left1008;
extern fsoc*store_chunk1008;
extern gc1008*gc_free1008;
typedef struct B84 gc84;
struct B84{T84 object;union {void*flag;gc84*next;} header;};
extern gc84*store84;
extern int store_left84;
extern fsoc*store_chunk84;
extern gc84*gc_free84;
typedef struct B1009 gc1009;
struct B1009{T1009 object;union {void*flag;gc1009*next;} header;};
extern gc1009*store1009;
extern int store_left1009;
extern fsoc*store_chunk1009;
extern gc1009*gc_free1009;
typedef struct B284 gc284;
struct B284{T284 object;union {void*flag;gc284*next;} header;};
extern gc284*store284;
extern int store_left284;
extern fsoc*store_chunk284;
extern gc284*gc_free284;
typedef struct B77 gc77;
struct B77{T77 object;union {void*flag;gc77*next;} header;};
extern gc77*store77;
extern int store_left77;
extern fsoc*store_chunk77;
extern gc77*gc_free77;
typedef struct B1010 gc1010;
struct B1010{T1010 object;union {void*flag;gc1010*next;} header;};
extern gc1010*store1010;
extern int store_left1010;
extern fsoc*store_chunk1010;
extern gc1010*gc_free1010;
typedef struct B537 gc537;
struct B537{T537 object;union {void*flag;gc537*next;} header;};
extern gc537*store537;
extern int store_left537;
extern fsoc*store_chunk537;
extern gc537*gc_free537;
typedef struct B541 gc541;
struct B541{T541 object;union {void*flag;gc541*next;} header;};
extern gc541*store541;
extern int store_left541;
extern fsoc*store_chunk541;
extern gc541*gc_free541;
typedef struct B542 gc542;
struct B542{T542 object;union {void*flag;gc542*next;} header;};
extern gc542*store542;
extern int store_left542;
extern fsoc*store_chunk542;
extern gc542*gc_free542;
typedef struct B543 gc543;
struct B543{T543 object;union {void*flag;gc543*next;} header;};
extern gc543*store543;
extern int store_left543;
extern fsoc*store_chunk543;
extern gc543*gc_free543;
typedef struct B544 gc544;
struct B544{T544 object;union {void*flag;gc544*next;} header;};
extern gc544*store544;
extern int store_left544;
extern fsoc*store_chunk544;
extern gc544*gc_free544;
typedef struct B545 gc545;
struct B545{T545 object;union {void*flag;gc545*next;} header;};
extern gc545*store545;
extern int store_left545;
extern fsoc*store_chunk545;
extern gc545*gc_free545;
typedef struct B1011 gc1011;
struct B1011{T1011 object;union {void*flag;gc1011*next;} header;};
extern gc1011*store1011;
extern int store_left1011;
extern fsoc*store_chunk1011;
extern gc1011*gc_free1011;
typedef struct B1012 gc1012;
struct B1012{T1012 object;union {void*flag;gc1012*next;} header;};
extern gc1012*store1012;
extern int store_left1012;
extern fsoc*store_chunk1012;
extern gc1012*gc_free1012;
typedef struct B98 gc98;
struct B98{T98 object;union {void*flag;gc98*next;} header;};
extern gc98*store98;
extern int store_left98;
extern fsoc*store_chunk98;
extern gc98*gc_free98;
typedef struct B536 gc536;
struct B536{T536 object;union {void*flag;gc536*next;} header;};
extern gc536*store536;
extern int store_left536;
extern fsoc*store_chunk536;
extern gc536*gc_free536;
typedef struct B452 gc452;
struct B452{T452 object;union {void*flag;gc452*next;} header;};
extern gc452*store452;
extern int store_left452;
extern fsoc*store_chunk452;
extern gc452*gc_free452;
typedef struct B451 gc451;
struct B451{T451 object;union {void*flag;gc451*next;} header;};
extern gc451*store451;
extern int store_left451;
extern fsoc*store_chunk451;
extern gc451*gc_free451;
typedef struct B641 gc641;
struct B641{T641 object;union {void*flag;gc641*next;} header;};
extern gc641*store641;
extern int store_left641;
extern fsoc*store_chunk641;
extern gc641*gc_free641;
typedef struct B80 gc80;
struct B80{T80 object;union {void*flag;gc80*next;} header;};
extern gc80*store80;
extern int store_left80;
extern fsoc*store_chunk80;
extern gc80*gc_free80;
typedef struct B68 gc68;
struct B68{T68 object;union {void*flag;gc68*next;} header;};
extern gc68*store68;
extern int store_left68;
extern fsoc*store_chunk68;
extern gc68*gc_free68;
typedef struct B1013 gc1013;
struct B1013{T1013 object;union {void*flag;gc1013*next;} header;};
extern gc1013*store1013;
extern int store_left1013;
extern fsoc*store_chunk1013;
extern gc1013*gc_free1013;
typedef struct B103 gc103;
struct B103{T103 object;union {void*flag;gc103*next;} header;};
extern gc103*store103;
extern int store_left103;
extern fsoc*store_chunk103;
extern gc103*gc_free103;
typedef struct B118 gc118;
struct B118{T118 object;union {void*flag;gc118*next;} header;};
extern gc118*store118;
extern int store_left118;
extern fsoc*store_chunk118;
extern gc118*gc_free118;
typedef struct B684 gc684;
struct B684{T684 object;union {void*flag;gc684*next;} header;};
extern gc684*store684;
extern int store_left684;
extern fsoc*store_chunk684;
extern gc684*gc_free684;
typedef struct B688 gc688;
struct B688{T688 object;union {void*flag;gc688*next;} header;};
extern gc688*store688;
extern int store_left688;
extern fsoc*store_chunk688;
extern gc688*gc_free688;
typedef struct B686 gc686;
struct B686{T686 object;union {void*flag;gc686*next;} header;};
extern gc686*store686;
extern int store_left686;
extern fsoc*store_chunk686;
extern gc686*gc_free686;
typedef struct B546 gc546;
struct B546{T546 object;union {void*flag;gc546*next;} header;};
extern gc546*store546;
extern int store_left546;
extern fsoc*store_chunk546;
extern gc546*gc_free546;
typedef struct B680 gc680;
struct B680{T680 object;union {void*flag;gc680*next;} header;};
extern gc680*store680;
extern int store_left680;
extern fsoc*store_chunk680;
extern gc680*gc_free680;
typedef struct B420 gc420;
struct B420{T420 object;union {void*flag;gc420*next;} header;};
extern gc420*store420;
extern int store_left420;
extern fsoc*store_chunk420;
extern gc420*gc_free420;
typedef struct B1014 gc1014;
struct B1014{T1014 object;union {void*flag;gc1014*next;} header;};
extern gc1014*store1014;
extern int store_left1014;
extern fsoc*store_chunk1014;
extern gc1014*gc_free1014;
typedef struct B319 gc319;
struct B319{T319 object;union {void*flag;gc319*next;} header;};
extern gc319*store319;
extern int store_left319;
extern fsoc*store_chunk319;
extern gc319*gc_free319;
typedef struct B1015 gc1015;
struct B1015{T1015 object;union {void*flag;gc1015*next;} header;};
extern gc1015*store1015;
extern int store_left1015;
extern fsoc*store_chunk1015;
extern gc1015*gc_free1015;
typedef struct B432 gc432;
struct B432{T432 object;union {void*flag;gc432*next;} header;};
extern gc432*store432;
extern int store_left432;
extern fsoc*store_chunk432;
extern gc432*gc_free432;
typedef struct B565 gc565;
struct B565{T565 object;union {void*flag;gc565*next;} header;};
extern gc565*store565;
extern int store_left565;
extern fsoc*store_chunk565;
extern gc565*gc_free565;
typedef struct B596 gc596;
struct B596{T596 object;union {void*flag;gc596*next;} header;};
extern gc596*store596;
extern int store_left596;
extern fsoc*store_chunk596;
extern gc596*gc_free596;
typedef struct B597 gc597;
struct B597{T597 object;union {void*flag;gc597*next;} header;};
extern gc597*store597;
extern int store_left597;
extern fsoc*store_chunk597;
extern gc597*gc_free597;
typedef struct B598 gc598;
struct B598{T598 object;union {void*flag;gc598*next;} header;};
extern gc598*store598;
extern int store_left598;
extern fsoc*store_chunk598;
extern gc598*gc_free598;
typedef struct B599 gc599;
struct B599{T599 object;union {void*flag;gc599*next;} header;};
extern gc599*store599;
extern int store_left599;
extern fsoc*store_chunk599;
extern gc599*gc_free599;
typedef struct B611 gc611;
struct B611{T611 object;union {void*flag;gc611*next;} header;};
extern gc611*store611;
extern int store_left611;
extern fsoc*store_chunk611;
extern gc611*gc_free611;
typedef struct B612 gc612;
struct B612{T612 object;union {void*flag;gc612*next;} header;};
extern gc612*store612;
extern int store_left612;
extern fsoc*store_chunk612;
extern gc612*gc_free612;
typedef struct B613 gc613;
struct B613{T613 object;union {void*flag;gc613*next;} header;};
extern gc613*store613;
extern int store_left613;
extern fsoc*store_chunk613;
extern gc613*gc_free613;
typedef struct B615 gc615;
struct B615{T615 object;union {void*flag;gc615*next;} header;};
extern gc615*store615;
extern int store_left615;
extern fsoc*store_chunk615;
extern gc615*gc_free615;
typedef struct B616 gc616;
struct B616{T616 object;union {void*flag;gc616*next;} header;};
extern gc616*store616;
extern int store_left616;
extern fsoc*store_chunk616;
extern gc616*gc_free616;
typedef struct B620 gc620;
struct B620{T620 object;union {void*flag;gc620*next;} header;};
extern gc620*store620;
extern int store_left620;
extern fsoc*store_chunk620;
extern gc620*gc_free620;
typedef struct B622 gc622;
struct B622{T622 object;union {void*flag;gc622*next;} header;};
extern gc622*store622;
extern int store_left622;
extern fsoc*store_chunk622;
extern gc622*gc_free622;
typedef struct B623 gc623;
struct B623{T623 object;union {void*flag;gc623*next;} header;};
extern gc623*store623;
extern int store_left623;
extern fsoc*store_chunk623;
extern gc623*gc_free623;
typedef struct B624 gc624;
struct B624{T624 object;union {void*flag;gc624*next;} header;};
extern gc624*store624;
extern int store_left624;
extern fsoc*store_chunk624;
extern gc624*gc_free624;
typedef struct B625 gc625;
struct B625{T625 object;union {void*flag;gc625*next;} header;};
extern gc625*store625;
extern int store_left625;
extern fsoc*store_chunk625;
extern gc625*gc_free625;
typedef struct B626 gc626;
struct B626{T626 object;union {void*flag;gc626*next;} header;};
extern gc626*store626;
extern int store_left626;
extern fsoc*store_chunk626;
extern gc626*gc_free626;
typedef struct B627 gc627;
struct B627{T627 object;union {void*flag;gc627*next;} header;};
extern gc627*store627;
extern int store_left627;
extern fsoc*store_chunk627;
extern gc627*gc_free627;
typedef struct B629 gc629;
struct B629{T629 object;union {void*flag;gc629*next;} header;};
extern gc629*store629;
extern int store_left629;
extern fsoc*store_chunk629;
extern gc629*gc_free629;
typedef struct B628 gc628;
struct B628{T628 object;union {void*flag;gc628*next;} header;};
extern gc628*store628;
extern int store_left628;
extern fsoc*store_chunk628;
extern gc628*gc_free628;
typedef struct B630 gc630;
struct B630{T630 object;union {void*flag;gc630*next;} header;};
extern gc630*store630;
extern int store_left630;
extern fsoc*store_chunk630;
extern gc630*gc_free630;
typedef struct B631 gc631;
struct B631{T631 object;union {void*flag;gc631*next;} header;};
extern gc631*store631;
extern int store_left631;
extern fsoc*store_chunk631;
extern gc631*gc_free631;
typedef struct B632 gc632;
struct B632{T632 object;union {void*flag;gc632*next;} header;};
extern gc632*store632;
extern int store_left632;
extern fsoc*store_chunk632;
extern gc632*gc_free632;
typedef struct B1016 gc1016;
struct B1016{T1016 object;union {void*flag;gc1016*next;} header;};
extern gc1016*store1016;
extern int store_left1016;
extern fsoc*store_chunk1016;
extern gc1016*gc_free1016;
typedef struct B633 gc633;
struct B633{T633 object;union {void*flag;gc633*next;} header;};
extern gc633*store633;
extern int store_left633;
extern fsoc*store_chunk633;
extern gc633*gc_free633;
typedef struct B1017 gc1017;
struct B1017{T1017 object;union {void*flag;gc1017*next;} header;};
extern gc1017*store1017;
extern int store_left1017;
extern fsoc*store_chunk1017;
extern gc1017*gc_free1017;
typedef struct B1018 gc1018;
struct B1018{T1018 object;union {void*flag;gc1018*next;} header;};
extern gc1018*store1018;
extern int store_left1018;
extern fsoc*store_chunk1018;
extern gc1018*gc_free1018;
typedef struct B368 gc368;
struct B368{T368 object;union {void*flag;gc368*next;} header;};
extern gc368*store368;
extern int store_left368;
extern fsoc*store_chunk368;
extern gc368*gc_free368;
typedef struct B93 gc93;
struct B93{T93 object;union {void*flag;gc93*next;} header;};
extern gc93*store93;
extern int store_left93;
extern fsoc*store_chunk93;
extern gc93*gc_free93;
typedef struct B95 gc95;
struct B95{T95 object;union {void*flag;gc95*next;} header;};
extern gc95*store95;
extern int store_left95;
extern fsoc*store_chunk95;
extern gc95*gc_free95;
typedef struct B1019 gc1019;
struct B1019{T1019 object;union {void*flag;gc1019*next;} header;};
extern gc1019*store1019;
extern int store_left1019;
extern fsoc*store_chunk1019;
extern gc1019*gc_free1019;
typedef struct B1020 gc1020;
struct B1020{T1020 object;union {void*flag;gc1020*next;} header;};
extern gc1020*store1020;
extern int store_left1020;
extern fsoc*store_chunk1020;
extern gc1020*gc_free1020;
typedef struct B1021 gc1021;
struct B1021{T1021 object;union {void*flag;gc1021*next;} header;};
extern gc1021*store1021;
extern int store_left1021;
extern fsoc*store_chunk1021;
extern gc1021*gc_free1021;
typedef struct B277 gc277;
struct B277{T277 object;union {void*flag;gc277*next;} header;};
extern gc277*store277;
extern int store_left277;
extern fsoc*store_chunk277;
extern gc277*gc_free277;
typedef struct B87 gc87;
struct B87{T87 object;union {void*flag;gc87*next;} header;};
extern gc87*store87;
extern int store_left87;
extern fsoc*store_chunk87;
extern gc87*gc_free87;
typedef struct B533 gc533;
struct B533{T533 object;union {void*flag;gc533*next;} header;};
extern gc533*store533;
extern int store_left533;
extern fsoc*store_chunk533;
extern gc533*gc_free533;
typedef struct B1023 gc1023;
struct B1023{T1023 object;union {void*flag;gc1023*next;} header;};
extern gc1023*store1023;
extern int store_left1023;
extern fsoc*store_chunk1023;
extern gc1023*gc_free1023;
typedef struct B328 gc328;
struct B328{T328 object;union {void*flag;gc328*next;} header;};
extern gc328*store328;
extern int store_left328;
extern fsoc*store_chunk328;
extern gc328*gc_free328;
typedef struct B106 gc106;
struct B106{T106 object;union {void*flag;gc106*next;} header;};
extern gc106*store106;
extern int store_left106;
extern fsoc*store_chunk106;
extern gc106*gc_free106;
typedef struct B104 gc104;
struct B104{T104 object;union {void*flag;gc104*next;} header;};
extern gc104*store104;
extern int store_left104;
extern fsoc*store_chunk104;
extern gc104*gc_free104;
typedef struct B111 gc111;
struct B111{T111 object;union {void*flag;gc111*next;} header;};
extern gc111*store111;
extern int store_left111;
extern fsoc*store_chunk111;
extern gc111*gc_free111;
typedef struct B120 gc120;
struct B120{T120 object;union {void*flag;gc120*next;} header;};
extern gc120*store120;
extern int store_left120;
extern fsoc*store_chunk120;
extern gc120*gc_free120;
typedef struct B119 gc119;
struct B119{T119 object;union {void*flag;gc119*next;} header;};
extern gc119*store119;
extern int store_left119;
extern fsoc*store_chunk119;
extern gc119*gc_free119;
typedef struct B122 gc122;
struct B122{T122 object;union {void*flag;gc122*next;} header;};
extern gc122*store122;
extern int store_left122;
extern fsoc*store_chunk122;
extern gc122*gc_free122;
typedef struct B89 gc89;
struct B89{T89 object;union {void*flag;gc89*next;} header;};
extern gc89*store89;
extern int store_left89;
extern fsoc*store_chunk89;
extern gc89*gc_free89;
typedef struct B439 gc439;
struct B439{T439 object;union {void*flag;gc439*next;} header;};
extern gc439*store439;
extern int store_left439;
extern fsoc*store_chunk439;
extern gc439*gc_free439;
typedef struct B1025 gc1025;
struct B1025{T1025 object;union {void*flag;gc1025*next;} header;};
extern gc1025*store1025;
extern int store_left1025;
extern fsoc*store_chunk1025;
extern gc1025*gc_free1025;
typedef struct B1026 gc1026;
struct B1026{T1026 object;union {void*flag;gc1026*next;} header;};
extern gc1026*store1026;
extern int store_left1026;
extern fsoc*store_chunk1026;
extern gc1026*gc_free1026;
typedef struct B115 gc115;
struct B115{T115 object;union {void*flag;gc115*next;} header;};
extern gc115*store115;
extern int store_left115;
extern fsoc*store_chunk115;
extern gc115*gc_free115;
typedef struct B424 gc424;
struct B424{T424 object;union {void*flag;gc424*next;} header;};
extern gc424*store424;
extern int store_left424;
extern fsoc*store_chunk424;
extern gc424*gc_free424;
typedef struct B1029 gc1029;
struct B1029{T1029 object;union {void*flag;gc1029*next;} header;};
extern gc1029*store1029;
extern int store_left1029;
extern fsoc*store_chunk1029;
extern gc1029*gc_free1029;
typedef struct B1030 gc1030;
struct B1030{T1030 object;union {void*flag;gc1030*next;} header;};
extern gc1030*store1030;
extern int store_left1030;
extern fsoc*store_chunk1030;
extern gc1030*gc_free1030;
typedef struct B1031 gc1031;
struct B1031{T1031 object;union {void*flag;gc1031*next;} header;};
extern gc1031*store1031;
extern int store_left1031;
extern fsoc*store_chunk1031;
extern gc1031*gc_free1031;
typedef struct B790 gc790;
struct B790{T790 object;union {void*flag;gc790*next;} header;};
extern gc790*store790;
extern int store_left790;
extern fsoc*store_chunk790;
extern gc790*gc_free790;
typedef struct B792 gc792;
struct B792{T792 object;union {void*flag;gc792*next;} header;};
extern gc792*store792;
extern int store_left792;
extern fsoc*store_chunk792;
extern gc792*gc_free792;
typedef struct B793 gc793;
struct B793{T793 object;union {void*flag;gc793*next;} header;};
extern gc793*store793;
extern int store_left793;
extern fsoc*store_chunk793;
extern gc793*gc_free793;
typedef struct B794 gc794;
struct B794{T794 object;union {void*flag;gc794*next;} header;};
extern gc794*store794;
extern int store_left794;
extern fsoc*store_chunk794;
extern gc794*gc_free794;
typedef struct B795 gc795;
struct B795{T795 object;union {void*flag;gc795*next;} header;};
extern gc795*store795;
extern int store_left795;
extern fsoc*store_chunk795;
extern gc795*gc_free795;
extern na_env na_env1033;
typedef struct B327 gc327;
struct B327{T327 object;union {void*flag;gc327*next;} header;};
extern gc327*store327;
extern int store_left327;
extern fsoc*store_chunk327;
extern gc327*gc_free327;
typedef struct B1035 gc1035;
struct B1035{T1035 object;union {void*flag;gc1035*next;} header;};
extern gc1035*store1035;
extern int store_left1035;
extern fsoc*store_chunk1035;
extern gc1035*gc_free1035;
typedef struct B1036 gc1036;
struct B1036{T1036 object;union {void*flag;gc1036*next;} header;};
extern gc1036*store1036;
extern int store_left1036;
extern fsoc*store_chunk1036;
extern gc1036*gc_free1036;
typedef struct B777 gc777;
struct B777{T777 object;union {void*flag;gc777*next;} header;};
extern gc777*store777;
extern int store_left777;
extern fsoc*store_chunk777;
extern gc777*gc_free777;
typedef struct B779 gc779;
struct B779{T779 object;union {void*flag;gc779*next;} header;};
extern gc779*store779;
extern int store_left779;
extern fsoc*store_chunk779;
extern gc779*gc_free779;
typedef struct B778 gc778;
struct B778{T778 object;union {void*flag;gc778*next;} header;};
extern gc778*store778;
extern int store_left778;
extern fsoc*store_chunk778;
extern gc778*gc_free778;
typedef struct B1040 gc1040;
struct B1040{T1040 object;union {void*flag;gc1040*next;} header;};
extern gc1040*store1040;
extern int store_left1040;
extern fsoc*store_chunk1040;
extern gc1040*gc_free1040;
typedef struct B1041 gc1041;
struct B1041{T1041 object;union {void*flag;gc1041*next;} header;};
extern gc1041*store1041;
extern int store_left1041;
extern fsoc*store_chunk1041;
extern gc1041*gc_free1041;
typedef struct B58 gc58;
struct B58{T58 object;union {void*flag;gc58*next;} header;};
extern gc58*store58;
extern int store_left58;
extern fsoc*store_chunk58;
extern gc58*gc_free58;
typedef struct B1042 gc1042;
struct B1042{T1042 object;union {void*flag;gc1042*next;} header;};
extern gc1042*store1042;
extern int store_left1042;
extern fsoc*store_chunk1042;
extern gc1042*gc_free1042;
typedef struct B1043 gc1043;
struct B1043{T1043 object;union {void*flag;gc1043*next;} header;};
extern gc1043*store1043;
extern int store_left1043;
extern fsoc*store_chunk1043;
extern gc1043*gc_free1043;
typedef struct B293 gc293;
struct B293{T293 object;union {void*flag;gc293*next;} header;};
extern gc293*store293;
extern int store_left293;
extern fsoc*store_chunk293;
extern gc293*gc_free293;
typedef struct B1044 gc1044;
struct B1044{T1044 object;union {void*flag;gc1044*next;} header;};
extern gc1044*store1044;
extern int store_left1044;
extern fsoc*store_chunk1044;
extern gc1044*gc_free1044;
typedef struct B1047 gc1047;
struct B1047{T1047 object;union {void*flag;gc1047*next;} header;};
extern gc1047*store1047;
extern int store_left1047;
extern fsoc*store_chunk1047;
extern gc1047*gc_free1047;
extern na_env na_env1048;
typedef struct B1049 gc1049;
struct B1049{T1049 object;union {void*flag;gc1049*next;} header;};
extern gc1049*store1049;
extern int store_left1049;
extern fsoc*store_chunk1049;
extern gc1049*gc_free1049;
typedef struct B1050 gc1050;
struct B1050{T1050 object;union {void*flag;gc1050*next;} header;};
extern gc1050*store1050;
extern int store_left1050;
extern fsoc*store_chunk1050;
extern gc1050*gc_free1050;
typedef struct B1051 gc1051;
struct B1051{T1051 object;union {void*flag;gc1051*next;} header;};
extern gc1051*store1051;
extern int store_left1051;
extern fsoc*store_chunk1051;
extern gc1051*gc_free1051;
typedef struct B1052 gc1052;
struct B1052{T1052 object;union {void*flag;gc1052*next;} header;};
extern gc1052*store1052;
extern int store_left1052;
extern fsoc*store_chunk1052;
extern gc1052*gc_free1052;
typedef struct B281 gc281;
struct B281{T281 object;union {void*flag;gc281*next;} header;};
extern gc281*store281;
extern int store_left281;
extern fsoc*store_chunk281;
extern gc281*gc_free281;
extern na_env na_env1053;
typedef struct B1056 gc1056;
struct B1056{T1056 object;union {void*flag;gc1056*next;} header;};
extern gc1056*store1056;
extern int store_left1056;
extern fsoc*store_chunk1056;
extern gc1056*gc_free1056;
typedef struct B102 gc102;
struct B102{T102 object;union {void*flag;gc102*next;} header;};
extern gc102*store102;
extern int store_left102;
extern fsoc*store_chunk102;
extern gc102*gc_free102;
extern na_env na_env1057;
extern na_env na_env1058;
typedef struct B1059 gc1059;
struct B1059{T1059 object;union {void*flag;gc1059*next;} header;};
extern gc1059*store1059;
extern int store_left1059;
extern fsoc*store_chunk1059;
extern gc1059*gc_free1059;
typedef struct B751 gc751;
struct B751{T751 object;union {void*flag;gc751*next;} header;};
extern gc751*store751;
extern int store_left751;
extern fsoc*store_chunk751;
extern gc751*gc_free751;
typedef struct B797 gc797;
struct B797{T797 object;union {void*flag;gc797*next;} header;};
extern gc797*store797;
extern int store_left797;
extern fsoc*store_chunk797;
extern gc797*gc_free797;
typedef struct B1061 gc1061;
struct B1061{T1061 object;union {void*flag;gc1061*next;} header;};
extern gc1061*store1061;
extern int store_left1061;
extern fsoc*store_chunk1061;
extern gc1061*gc_free1061;
extern na_env na_env1062;
typedef struct B1063 gc1063;
struct B1063{T1063 object;union {void*flag;gc1063*next;} header;};
extern gc1063*store1063;
extern int store_left1063;
extern fsoc*store_chunk1063;
extern gc1063*gc_free1063;
typedef struct B1065 gc1065;
struct B1065{T1065 object;union {void*flag;gc1065*next;} header;};
extern gc1065*store1065;
extern int store_left1065;
extern fsoc*store_chunk1065;
extern gc1065*gc_free1065;
typedef struct B1067 gc1067;
struct B1067{T1067 object;union {void*flag;gc1067*next;} header;};
extern gc1067*store1067;
extern int store_left1067;
extern fsoc*store_chunk1067;
extern gc1067*gc_free1067;
typedef struct B753 gc753;
struct B753{T753 object;union {void*flag;gc753*next;} header;};
extern gc753*store753;
extern int store_left753;
extern fsoc*store_chunk753;
extern gc753*gc_free753;
typedef struct B1070 gc1070;
struct B1070{T1070 object;union {void*flag;gc1070*next;} header;};
extern gc1070*store1070;
extern int store_left1070;
extern fsoc*store_chunk1070;
extern gc1070*gc_free1070;
typedef struct B449 gc449;
struct B449{T449 object;union {void*flag;gc449*next;} header;};
extern gc449*store449;
extern int store_left449;
extern fsoc*store_chunk449;
extern gc449*gc_free449;
typedef struct B429 gc429;
struct B429{T429 object;union {void*flag;gc429*next;} header;};
extern gc429*store429;
extern int store_left429;
extern fsoc*store_chunk429;
extern gc429*gc_free429;
typedef struct B380 gc380;
struct B380{T380 object;union {void*flag;gc380*next;} header;};
extern gc380*store380;
extern int store_left380;
extern fsoc*store_chunk380;
extern gc380*gc_free380;
typedef struct B422 gc422;
struct B422{T422 object;union {void*flag;gc422*next;} header;};
extern gc422*store422;
extern int store_left422;
extern fsoc*store_chunk422;
extern gc422*gc_free422;
typedef struct B423 gc423;
struct B423{T423 object;union {void*flag;gc423*next;} header;};
extern gc423*store423;
extern int store_left423;
extern fsoc*store_chunk423;
extern gc423*gc_free423;
typedef struct B485 gc485;
struct B485{T485 object;union {void*flag;gc485*next;} header;};
extern gc485*store485;
extern int store_left485;
extern fsoc*store_chunk485;
extern gc485*gc_free485;
typedef struct B495 gc495;
struct B495{T495 object;union {void*flag;gc495*next;} header;};
extern gc495*store495;
extern int store_left495;
extern fsoc*store_chunk495;
extern gc495*gc_free495;
typedef struct B497 gc497;
struct B497{T497 object;union {void*flag;gc497*next;} header;};
extern gc497*store497;
extern int store_left497;
extern fsoc*store_chunk497;
extern gc497*gc_free497;
typedef struct B354 gc354;
struct B354{T354 object;union {void*flag;gc354*next;} header;};
extern gc354*store354;
extern int store_left354;
extern fsoc*store_chunk354;
extern gc354*gc_free354;
typedef struct B116 gc116;
struct B116{T116 object;union {void*flag;gc116*next;} header;};
extern gc116*store116;
extern int store_left116;
extern fsoc*store_chunk116;
extern gc116*gc_free116;
typedef struct B498 gc498;
struct B498{T498 object;union {void*flag;gc498*next;} header;};
extern gc498*store498;
extern int store_left498;
extern fsoc*store_chunk498;
extern gc498*gc_free498;
typedef struct B445 gc445;
struct B445{T445 object;union {void*flag;gc445*next;} header;};
extern gc445*store445;
extern int store_left445;
extern fsoc*store_chunk445;
extern gc445*gc_free445;
typedef struct B408 gc408;
struct B408{T408 object;union {void*flag;gc408*next;} header;};
extern gc408*store408;
extern int store_left408;
extern fsoc*store_chunk408;
extern gc408*gc_free408;
typedef struct B381 gc381;
struct B381{T381 object;union {void*flag;gc381*next;} header;};
extern gc381*store381;
extern int store_left381;
extern fsoc*store_chunk381;
extern gc381*gc_free381;
typedef struct B437 gc437;
struct B437{T437 object;union {void*flag;gc437*next;} header;};
extern gc437*store437;
extern int store_left437;
extern fsoc*store_chunk437;
extern gc437*gc_free437;
typedef struct B407 gc407;
struct B407{T407 object;union {void*flag;gc407*next;} header;};
extern gc407*store407;
extern int store_left407;
extern fsoc*store_chunk407;
extern gc407*gc_free407;
typedef struct B435 gc435;
struct B435{T435 object;union {void*flag;gc435*next;} header;};
extern gc435*store435;
extern int store_left435;
extern fsoc*store_chunk435;
extern gc435*gc_free435;
typedef struct B403 gc403;
struct B403{T403 object;union {void*flag;gc403*next;} header;};
extern gc403*store403;
extern int store_left403;
extern fsoc*store_chunk403;
extern gc403*gc_free403;
typedef struct B438 gc438;
struct B438{T438 object;union {void*flag;gc438*next;} header;};
extern gc438*store438;
extern int store_left438;
extern fsoc*store_chunk438;
extern gc438*gc_free438;
typedef struct B436 gc436;
struct B436{T436 object;union {void*flag;gc436*next;} header;};
extern gc436*store436;
extern int store_left436;
extern fsoc*store_chunk436;
extern gc436*gc_free436;
typedef struct B442 gc442;
struct B442{T442 object;union {void*flag;gc442*next;} header;};
extern gc442*store442;
extern int store_left442;
extern fsoc*store_chunk442;
extern gc442*gc_free442;
typedef struct B440 gc440;
struct B440{T440 object;union {void*flag;gc440*next;} header;};
extern gc440*store440;
extern int store_left440;
extern fsoc*store_chunk440;
extern gc440*gc_free440;
typedef struct B443 gc443;
struct B443{T443 object;union {void*flag;gc443*next;} header;};
extern gc443*store443;
extern int store_left443;
extern fsoc*store_chunk443;
extern gc443*gc_free443;
typedef struct B446 gc446;
struct B446{T446 object;union {void*flag;gc446*next;} header;};
extern gc446*store446;
extern int store_left446;
extern fsoc*store_chunk446;
extern gc446*gc_free446;
typedef struct B273 gc273;
struct B273{T273 object;union {void*flag;gc273*next;} header;};
extern gc273*store273;
extern int store_left273;
extern fsoc*store_chunk273;
extern gc273*gc_free273;
typedef struct B467 gc467;
struct B467{T467 object;union {void*flag;gc467*next;} header;};
extern gc467*store467;
extern int store_left467;
extern fsoc*store_chunk467;
extern gc467*gc_free467;
typedef struct B469 gc469;
struct B469{T469 object;union {void*flag;gc469*next;} header;};
extern gc469*store469;
extern int store_left469;
extern fsoc*store_chunk469;
extern gc469*gc_free469;
typedef struct B470 gc470;
struct B470{T470 object;union {void*flag;gc470*next;} header;};
extern gc470*store470;
extern int store_left470;
extern fsoc*store_chunk470;
extern gc470*gc_free470;
typedef struct B471 gc471;
struct B471{T471 object;union {void*flag;gc471*next;} header;};
extern gc471*store471;
extern int store_left471;
extern fsoc*store_chunk471;
extern gc471*gc_free471;
typedef struct B421 gc421;
struct B421{T421 object;union {void*flag;gc421*next;} header;};
extern gc421*store421;
extern int store_left421;
extern fsoc*store_chunk421;
extern gc421*gc_free421;
typedef struct B1071 gc1071;
struct B1071{T1071 object;union {void*flag;gc1071*next;} header;};
extern gc1071*store1071;
extern int store_left1071;
extern fsoc*store_chunk1071;
extern gc1071*gc_free1071;
typedef struct B280 gc280;
struct B280{T280 object;union {void*flag;gc280*next;} header;};
extern gc280*store280;
extern int store_left280;
extern fsoc*store_chunk280;
extern gc280*gc_free280;
typedef struct B478 gc478;
struct B478{T478 object;union {void*flag;gc478*next;} header;};
extern gc478*store478;
extern int store_left478;
extern fsoc*store_chunk478;
extern gc478*gc_free478;
typedef struct B1072 gc1072;
struct B1072{T1072 object;union {void*flag;gc1072*next;} header;};
extern gc1072*store1072;
extern int store_left1072;
extern fsoc*store_chunk1072;
extern gc1072*gc_free1072;
typedef struct B519 gc519;
struct B519{T519 object;union {void*flag;gc519*next;} header;};
extern gc519*store519;
extern int store_left519;
extern fsoc*store_chunk519;
extern gc519*gc_free519;
typedef struct B487 gc487;
struct B487{T487 object;union {void*flag;gc487*next;} header;};
extern gc487*store487;
extern int store_left487;
extern fsoc*store_chunk487;
extern gc487*gc_free487;
typedef struct B401 gc401;
struct B401{T401 object;union {void*flag;gc401*next;} header;};
extern gc401*store401;
extern int store_left401;
extern fsoc*store_chunk401;
extern gc401*gc_free401;
typedef struct B474 gc474;
struct B474{T474 object;union {void*flag;gc474*next;} header;};
extern gc474*store474;
extern int store_left474;
extern fsoc*store_chunk474;
extern gc474*gc_free474;
typedef struct B371 gc371;
struct B371{T371 object;union {void*flag;gc371*next;} header;};
extern gc371*store371;
extern int store_left371;
extern fsoc*store_chunk371;
extern gc371*gc_free371;
typedef struct B475 gc475;
struct B475{T475 object;union {void*flag;gc475*next;} header;};
extern gc475*store475;
extern int store_left475;
extern fsoc*store_chunk475;
extern gc475*gc_free475;
typedef struct B476 gc476;
struct B476{T476 object;union {void*flag;gc476*next;} header;};
extern gc476*store476;
extern int store_left476;
extern fsoc*store_chunk476;
extern gc476*gc_free476;
typedef struct B339 gc339;
struct B339{T339 object;union {void*flag;gc339*next;} header;};
extern gc339*store339;
extern int store_left339;
extern fsoc*store_chunk339;
extern gc339*gc_free339;
typedef struct B348 gc348;
struct B348{T348 object;union {void*flag;gc348*next;} header;};
extern gc348*store348;
extern int store_left348;
extern fsoc*store_chunk348;
extern gc348*gc_free348;
typedef struct B351 gc351;
struct B351{T351 object;union {void*flag;gc351*next;} header;};
extern gc351*store351;
extern int store_left351;
extern fsoc*store_chunk351;
extern gc351*gc_free351;
typedef struct B353 gc353;
struct B353{T353 object;union {void*flag;gc353*next;} header;};
extern gc353*store353;
extern int store_left353;
extern fsoc*store_chunk353;
extern gc353*gc_free353;
typedef struct B342 gc342;
struct B342{T342 object;union {void*flag;gc342*next;} header;};
extern gc342*store342;
extern int store_left342;
extern fsoc*store_chunk342;
extern gc342*gc_free342;
typedef struct B346 gc346;
struct B346{T346 object;union {void*flag;gc346*next;} header;};
extern gc346*store346;
extern int store_left346;
extern fsoc*store_chunk346;
extern gc346*gc_free346;
typedef struct B347 gc347;
struct B347{T347 object;union {void*flag;gc347*next;} header;};
extern gc347*store347;
extern int store_left347;
extern fsoc*store_chunk347;
extern gc347*gc_free347;
typedef struct B489 gc489;
struct B489{T489 object;union {void*flag;gc489*next;} header;};
extern gc489*store489;
extern int store_left489;
extern fsoc*store_chunk489;
extern gc489*gc_free489;
typedef struct B490 gc490;
struct B490{T490 object;union {void*flag;gc490*next;} header;};
extern gc490*store490;
extern int store_left490;
extern fsoc*store_chunk490;
extern gc490*gc_free490;
typedef struct B491 gc491;
struct B491{T491 object;union {void*flag;gc491*next;} header;};
extern gc491*store491;
extern int store_left491;
extern fsoc*store_chunk491;
extern gc491*gc_free491;
typedef struct B480 gc480;
struct B480{T480 object;union {void*flag;gc480*next;} header;};
extern gc480*store480;
extern int store_left480;
extern fsoc*store_chunk480;
extern gc480*gc_free480;
typedef struct B385 gc385;
struct B385{T385 object;union {void*flag;gc385*next;} header;};
extern gc385*store385;
extern int store_left385;
extern fsoc*store_chunk385;
extern gc385*gc_free385;
typedef struct B456 gc456;
struct B456{T456 object;union {void*flag;gc456*next;} header;};
extern gc456*store456;
extern int store_left456;
extern fsoc*store_chunk456;
extern gc456*gc_free456;
typedef struct B462 gc462;
struct B462{T462 object;union {void*flag;gc462*next;} header;};
extern gc462*store462;
extern int store_left462;
extern fsoc*store_chunk462;
extern gc462*gc_free462;
typedef struct B481 gc481;
struct B481{T481 object;union {void*flag;gc481*next;} header;};
extern gc481*store481;
extern int store_left481;
extern fsoc*store_chunk481;
extern gc481*gc_free481;
typedef struct B516 gc516;
struct B516{T516 object;union {void*flag;gc516*next;} header;};
extern gc516*store516;
extern int store_left516;
extern fsoc*store_chunk516;
extern gc516*gc_free516;
typedef struct B517 gc517;
struct B517{T517 object;union {void*flag;gc517*next;} header;};
extern gc517*store517;
extern int store_left517;
extern fsoc*store_chunk517;
extern gc517*gc_free517;
typedef struct B1073 gc1073;
struct B1073{T1073 object;union {void*flag;gc1073*next;} header;};
extern gc1073*store1073;
extern int store_left1073;
extern fsoc*store_chunk1073;
extern gc1073*gc_free1073;
typedef struct B1074 gc1074;
struct B1074{T1074 object;union {void*flag;gc1074*next;} header;};
extern gc1074*store1074;
extern int store_left1074;
extern fsoc*store_chunk1074;
extern gc1074*gc_free1074;
typedef struct B453 gc453;
struct B453{T453 object;union {void*flag;gc453*next;} header;};
extern gc453*store453;
extern int store_left453;
extern fsoc*store_chunk453;
extern gc453*gc_free453;
typedef struct B454 gc454;
struct B454{T454 object;union {void*flag;gc454*next;} header;};
extern gc454*store454;
extern int store_left454;
extern fsoc*store_chunk454;
extern gc454*gc_free454;
typedef struct B1075 gc1075;
struct B1075{T1075 object;union {void*flag;gc1075*next;} header;};
extern gc1075*store1075;
extern int store_left1075;
extern fsoc*store_chunk1075;
extern gc1075*gc_free1075;
typedef struct B391 gc391;
struct B391{T391 object;union {void*flag;gc391*next;} header;};
extern gc391*store391;
extern int store_left391;
extern fsoc*store_chunk391;
extern gc391*gc_free391;
typedef struct B1076 gc1076;
struct B1076{T1076 object;union {void*flag;gc1076*next;} header;};
extern gc1076*store1076;
extern int store_left1076;
extern fsoc*store_chunk1076;
extern gc1076*gc_free1076;
typedef struct B664 gc664;
struct B664{T664 object;union {void*flag;gc664*next;} header;};
extern gc664*store664;
extern int store_left664;
extern fsoc*store_chunk664;
extern gc664*gc_free664;
typedef struct B1077 gc1077;
struct B1077{T1077 object;union {void*flag;gc1077*next;} header;};
extern gc1077*store1077;
extern int store_left1077;
extern fsoc*store_chunk1077;
extern gc1077*gc_free1077;
typedef struct B418 gc418;
struct B418{T418 object;union {void*flag;gc418*next;} header;};
extern gc418*store418;
extern int store_left418;
extern fsoc*store_chunk418;
extern gc418*gc_free418;
typedef struct B388 gc388;
struct B388{T388 object;union {void*flag;gc388*next;} header;};
extern gc388*store388;
extern int store_left388;
extern fsoc*store_chunk388;
extern gc388*gc_free388;
typedef struct B1078 gc1078;
struct B1078{T1078 object;union {void*flag;gc1078*next;} header;};
extern gc1078*store1078;
extern int store_left1078;
extern fsoc*store_chunk1078;
extern gc1078*gc_free1078;
typedef struct B392 gc392;
struct B392{T392 object;union {void*flag;gc392*next;} header;};
extern gc392*store392;
extern int store_left392;
extern fsoc*store_chunk392;
extern gc392*gc_free392;
typedef struct B448 gc448;
struct B448{T448 object;union {void*flag;gc448*next;} header;};
extern gc448*store448;
extern int store_left448;
extern fsoc*store_chunk448;
extern gc448*gc_free448;
typedef struct B518 gc518;
struct B518{T518 object;union {void*flag;gc518*next;} header;};
extern gc518*store518;
extern int store_left518;
extern fsoc*store_chunk518;
extern gc518*gc_free518;
typedef struct B1079 gc1079;
struct B1079{T1079 object;union {void*flag;gc1079*next;} header;};
extern gc1079*store1079;
extern int store_left1079;
extern fsoc*store_chunk1079;
extern gc1079*gc_free1079;
typedef struct B477 gc477;
struct B477{T477 object;union {void*flag;gc477*next;} header;};
extern gc477*store477;
extern int store_left477;
extern fsoc*store_chunk477;
extern gc477*gc_free477;
typedef struct B412 gc412;
struct B412{T412 object;union {void*flag;gc412*next;} header;};
extern gc412*store412;
extern int store_left412;
extern fsoc*store_chunk412;
extern gc412*gc_free412;
typedef struct B398 gc398;
struct B398{T398 object;union {void*flag;gc398*next;} header;};
extern gc398*store398;
extern int store_left398;
extern fsoc*store_chunk398;
extern gc398*gc_free398;
typedef struct B1080 gc1080;
struct B1080{T1080 object;union {void*flag;gc1080*next;} header;};
extern gc1080*store1080;
extern int store_left1080;
extern fsoc*store_chunk1080;
extern gc1080*gc_free1080;
typedef struct B357 gc357;
struct B357{T357 object;union {void*flag;gc357*next;} header;};
extern gc357*store357;
extern int store_left357;
extern fsoc*store_chunk357;
extern gc357*gc_free357;
typedef struct B369 gc369;
struct B369{T369 object;union {void*flag;gc369*next;} header;};
extern gc369*store369;
extern int store_left369;
extern fsoc*store_chunk369;
extern gc369*gc_free369;
typedef struct B362 gc362;
struct B362{T362 object;union {void*flag;gc362*next;} header;};
extern gc362*store362;
extern int store_left362;
extern fsoc*store_chunk362;
extern gc362*gc_free362;
typedef struct B479 gc479;
struct B479{T479 object;union {void*flag;gc479*next;} header;};
extern gc479*store479;
extern int store_left479;
extern fsoc*store_chunk479;
extern gc479*gc_free479;
typedef struct B426 gc426;
struct B426{T426 object;union {void*flag;gc426*next;} header;};
extern gc426*store426;
extern int store_left426;
extern fsoc*store_chunk426;
extern gc426*gc_free426;
typedef struct B465 gc465;
struct B465{T465 object;union {void*flag;gc465*next;} header;};
extern gc465*store465;
extern int store_left465;
extern fsoc*store_chunk465;
extern gc465*gc_free465;
typedef struct B466 gc466;
struct B466{T466 object;union {void*flag;gc466*next;} header;};
extern gc466*store466;
extern int store_left466;
extern fsoc*store_chunk466;
extern gc466*gc_free466;
typedef struct B364 gc364;
struct B364{T364 object;union {void*flag;gc364*next;} header;};
extern gc364*store364;
extern int store_left364;
extern fsoc*store_chunk364;
extern gc364*gc_free364;
typedef struct B404 gc404;
struct B404{T404 object;union {void*flag;gc404*next;} header;};
extern gc404*store404;
extern int store_left404;
extern fsoc*store_chunk404;
extern gc404*gc_free404;
typedef struct B463 gc463;
struct B463{T463 object;union {void*flag;gc463*next;} header;};
extern gc463*store463;
extern int store_left463;
extern fsoc*store_chunk463;
extern gc463*gc_free463;
typedef struct B494 gc494;
struct B494{T494 object;union {void*flag;gc494*next;} header;};
extern gc494*store494;
extern int store_left494;
extern fsoc*store_chunk494;
extern gc494*gc_free494;
typedef struct B484 gc484;
struct B484{T484 object;union {void*flag;gc484*next;} header;};
extern gc484*store484;
extern int store_left484;
extern fsoc*store_chunk484;
extern gc484*gc_free484;
typedef struct B367 gc367;
struct B367{T367 object;union {void*flag;gc367*next;} header;};
extern gc367*store367;
extern int store_left367;
extern fsoc*store_chunk367;
extern gc367*gc_free367;
typedef struct B394 gc394;
struct B394{T394 object;union {void*flag;gc394*next;} header;};
extern gc394*store394;
extern int store_left394;
extern fsoc*store_chunk394;
extern gc394*gc_free394;
typedef struct B464 gc464;
struct B464{T464 object;union {void*flag;gc464*next;} header;};
extern gc464*store464;
extern int store_left464;
extern fsoc*store_chunk464;
extern gc464*gc_free464;
typedef struct B459 gc459;
struct B459{T459 object;union {void*flag;gc459*next;} header;};
extern gc459*store459;
extern int store_left459;
extern fsoc*store_chunk459;
extern gc459*gc_free459;
typedef struct B395 gc395;
struct B395{T395 object;union {void*flag;gc395*next;} header;};
extern gc395*store395;
extern int store_left395;
extern fsoc*store_chunk395;
extern gc395*gc_free395;
typedef struct B659 gc659;
struct B659{T659 object;union {void*flag;gc659*next;} header;};
extern gc659*store659;
extern int store_left659;
extern fsoc*store_chunk659;
extern gc659*gc_free659;
typedef struct B483 gc483;
struct B483{T483 object;union {void*flag;gc483*next;} header;};
extern gc483*store483;
extern int store_left483;
extern fsoc*store_chunk483;
extern gc483*gc_free483;
typedef struct B457 gc457;
struct B457{T457 object;union {void*flag;gc457*next;} header;};
extern gc457*store457;
extern int store_left457;
extern fsoc*store_chunk457;
extern gc457*gc_free457;
typedef struct B396 gc396;
struct B396{T396 object;union {void*flag;gc396*next;} header;};
extern gc396*store396;
extern int store_left396;
extern fsoc*store_chunk396;
extern gc396*gc_free396;
typedef struct B492 gc492;
struct B492{T492 object;union {void*flag;gc492*next;} header;};
extern gc492*store492;
extern int store_left492;
extern fsoc*store_chunk492;
extern gc492*gc_free492;
typedef struct B515 gc515;
struct B515{T515 object;union {void*flag;gc515*next;} header;};
extern gc515*store515;
extern int store_left515;
extern fsoc*store_chunk515;
extern gc515*gc_free515;
typedef struct B514 gc514;
struct B514{T514 object;union {void*flag;gc514*next;} header;};
extern gc514*store514;
extern int store_left514;
extern fsoc*store_chunk514;
extern gc514*gc_free514;
typedef struct B510 gc510;
struct B510{T510 object;union {void*flag;gc510*next;} header;};
extern gc510*store510;
extern int store_left510;
extern fsoc*store_chunk510;
extern gc510*gc_free510;
typedef struct B511 gc511;
struct B511{T511 object;union {void*flag;gc511*next;} header;};
extern gc511*store511;
extern int store_left511;
extern fsoc*store_chunk511;
extern gc511*gc_free511;
typedef struct B512 gc512;
struct B512{T512 object;union {void*flag;gc512*next;} header;};
extern gc512*store512;
extern int store_left512;
extern fsoc*store_chunk512;
extern gc512*gc_free512;
typedef struct B513 gc513;
struct B513{T513 object;union {void*flag;gc513*next;} header;};
extern gc513*store513;
extern int store_left513;
extern fsoc*store_chunk513;
extern gc513*gc_free513;
typedef struct B509 gc509;
struct B509{T509 object;union {void*flag;gc509*next;} header;};
extern gc509*store509;
extern int store_left509;
extern fsoc*store_chunk509;
extern gc509*gc_free509;
typedef struct B374 gc374;
struct B374{T374 object;union {void*flag;gc374*next;} header;};
extern gc374*store374;
extern int store_left374;
extern fsoc*store_chunk374;
extern gc374*gc_free374;
typedef struct B397 gc397;
struct B397{T397 object;union {void*flag;gc397*next;} header;};
extern gc397*store397;
extern int store_left397;
extern fsoc*store_chunk397;
extern gc397*gc_free397;
typedef struct B505 gc505;
struct B505{T505 object;union {void*flag;gc505*next;} header;};
extern gc505*store505;
extern int store_left505;
extern fsoc*store_chunk505;
extern gc505*gc_free505;
typedef struct B506 gc506;
struct B506{T506 object;union {void*flag;gc506*next;} header;};
extern gc506*store506;
extern int store_left506;
extern fsoc*store_chunk506;
extern gc506*gc_free506;
typedef struct B507 gc507;
struct B507{T507 object;union {void*flag;gc507*next;} header;};
extern gc507*store507;
extern int store_left507;
extern fsoc*store_chunk507;
extern gc507*gc_free507;
typedef struct B508 gc508;
struct B508{T508 object;union {void*flag;gc508*next;} header;};
extern gc508*store508;
extern int store_left508;
extern fsoc*store_chunk508;
extern gc508*gc_free508;
typedef struct B402 gc402;
struct B402{T402 object;union {void*flag;gc402*next;} header;};
extern gc402*store402;
extern int store_left402;
extern fsoc*store_chunk402;
extern gc402*gc_free402;
typedef struct B504 gc504;
struct B504{T504 object;union {void*flag;gc504*next;} header;};
extern gc504*store504;
extern int store_left504;
extern fsoc*store_chunk504;
extern gc504*gc_free504;
typedef struct B501 gc501;
struct B501{T501 object;union {void*flag;gc501*next;} header;};
extern gc501*store501;
extern int store_left501;
extern fsoc*store_chunk501;
extern gc501*gc_free501;
typedef struct B502 gc502;
struct B502{T502 object;union {void*flag;gc502*next;} header;};
extern gc502*store502;
extern int store_left502;
extern fsoc*store_chunk502;
extern gc502*gc_free502;
typedef struct B503 gc503;
struct B503{T503 object;union {void*flag;gc503*next;} header;};
extern gc503*store503;
extern int store_left503;
extern fsoc*store_chunk503;
extern gc503*gc_free503;
typedef struct B500 gc500;
struct B500{T500 object;union {void*flag;gc500*next;} header;};
extern gc500*store500;
extern int store_left500;
extern fsoc*store_chunk500;
extern gc500*gc_free500;
typedef struct B458 gc458;
struct B458{T458 object;union {void*flag;gc458*next;} header;};
extern gc458*store458;
extern int store_left458;
extern fsoc*store_chunk458;
extern gc458*gc_free458;
typedef struct B499 gc499;
struct B499{T499 object;union {void*flag;gc499*next;} header;};
extern gc499*store499;
extern int store_left499;
extern fsoc*store_chunk499;
extern gc499*gc_free499;
typedef struct B493 gc493;
struct B493{T493 object;union {void*flag;gc493*next;} header;};
extern gc493*store493;
extern int store_left493;
extern fsoc*store_chunk493;
extern gc493*gc_free493;
typedef struct B283 gc283;
struct B283{T283 object;union {void*flag;gc283*next;} header;};
extern gc283*store283;
extern int store_left283;
extern fsoc*store_chunk283;
extern gc283*gc_free283;
typedef struct B461 gc461;
struct B461{T461 object;union {void*flag;gc461*next;} header;};
extern gc461*store461;
extern int store_left461;
extern fsoc*store_chunk461;
extern gc461*gc_free461;
typedef struct B460 gc460;
struct B460{T460 object;union {void*flag;gc460*next;} header;};
extern gc460*store460;
extern int store_left460;
extern fsoc*store_chunk460;
extern gc460*gc_free460;
typedef struct B1081 gc1081;
struct B1081{T1081 object;union {void*flag;gc1081*next;} header;};
extern gc1081*store1081;
extern int store_left1081;
extern fsoc*store_chunk1081;
extern gc1081*gc_free1081;
typedef struct B419 gc419;
struct B419{T419 object;union {void*flag;gc419*next;} header;};
extern gc419*store419;
extern int store_left419;
extern fsoc*store_chunk419;
extern gc419*gc_free419;
typedef struct B431 gc431;
struct B431{T431 object;union {void*flag;gc431*next;} header;};
extern gc431*store431;
extern int store_left431;
extern fsoc*store_chunk431;
extern gc431*gc_free431;
typedef struct B752 gc752;
struct B752{T752 object;union {void*flag;gc752*next;} header;};
extern gc752*store752;
extern int store_left752;
extern fsoc*store_chunk752;
extern gc752*gc_free752;
typedef struct B455 gc455;
struct B455{T455 object;union {void*flag;gc455*next;} header;};
extern gc455*store455;
extern int store_left455;
extern fsoc*store_chunk455;
extern gc455*gc_free455;
typedef struct B358 gc358;
struct B358{T358 object;union {void*flag;gc358*next;} header;};
extern gc358*store358;
extern int store_left358;
extern fsoc*store_chunk358;
extern gc358*gc_free358;
typedef struct B410 gc410;
struct B410{T410 object;union {void*flag;gc410*next;} header;};
extern gc410*store410;
extern int store_left410;
extern fsoc*store_chunk410;
extern gc410*gc_free410;
typedef struct B393 gc393;
struct B393{T393 object;union {void*flag;gc393*next;} header;};
extern gc393*store393;
extern int store_left393;
extern fsoc*store_chunk393;
extern gc393*gc_free393;
typedef struct B1082 gc1082;
struct B1082{T1082 object;union {void*flag;gc1082*next;} header;};
extern gc1082*store1082;
extern int store_left1082;
extern fsoc*store_chunk1082;
extern gc1082*gc_free1082;
typedef struct B1083 gc1083;
struct B1083{T1083 object;union {void*flag;gc1083*next;} header;};
extern gc1083*store1083;
extern int store_left1083;
extern fsoc*store_chunk1083;
extern gc1083*gc_free1083;
typedef struct B1084 gc1084;
struct B1084{T1084 object;union {void*flag;gc1084*next;} header;};
extern gc1084*store1084;
extern int store_left1084;
extern fsoc*store_chunk1084;
extern gc1084*gc_free1084;
typedef struct B1085 gc1085;
struct B1085{T1085 object;union {void*flag;gc1085*next;} header;};
extern gc1085*store1085;
extern int store_left1085;
extern fsoc*store_chunk1085;
extern gc1085*gc_free1085;
extern na_env na_env1086;
extern na_env na_env1087;
extern na_env na_env1088;
typedef struct B1089 gc1089;
struct B1089{T1089 object;union {void*flag;gc1089*next;} header;};
extern gc1089*store1089;
extern int store_left1089;
extern fsoc*store_chunk1089;
extern gc1089*gc_free1089;
typedef struct B531 gc531;
struct B531{T531 object;union {void*flag;gc531*next;} header;};
extern gc531*store531;
extern int store_left531;
extern fsoc*store_chunk531;
extern gc531*gc_free531;
typedef struct B1090 gc1090;
struct B1090{T1090 object;union {void*flag;gc1090*next;} header;};
extern gc1090*store1090;
extern int store_left1090;
extern fsoc*store_chunk1090;
extern gc1090*gc_free1090;
typedef struct B1092 gc1092;
struct B1092{T1092 object;union {void*flag;gc1092*next;} header;};
extern gc1092*store1092;
extern int store_left1092;
extern fsoc*store_chunk1092;
extern gc1092*gc_free1092;
typedef struct B433 gc433;
struct B433{T433 object;union {void*flag;gc433*next;} header;};
extern gc433*store433;
extern int store_left433;
extern fsoc*store_chunk433;
extern gc433*gc_free433;
typedef struct B425 gc425;
struct B425{T425 object;union {void*flag;gc425*next;} header;};
extern gc425*store425;
extern int store_left425;
extern fsoc*store_chunk425;
extern gc425*gc_free425;

#define gc_mark1093(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1096(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1098 gc1098;
struct B1098{T1098 object;union {void*flag;gc1098*next;} header;};
extern gc1098*store1098;
extern int store_left1098;
extern fsoc*store_chunk1098;
extern gc1098*gc_free1098;
typedef struct B1099 gc1099;
struct B1099{T1099 object;union {void*flag;gc1099*next;} header;};
extern gc1099*store1099;
extern int store_left1099;
extern fsoc*store_chunk1099;
extern gc1099*gc_free1099;
typedef struct B450 gc450;
struct B450{T450 object;union {void*flag;gc450*next;} header;};
extern gc450*store450;
extern int store_left450;
extern fsoc*store_chunk450;
extern gc450*gc_free450;
typedef struct B430 gc430;
struct B430{T430 object;union {void*flag;gc430*next;} header;};
extern gc430*store430;
extern int store_left430;
extern fsoc*store_chunk430;
extern gc430*gc_free430;
typedef struct B447 gc447;
struct B447{T447 object;union {void*flag;gc447*next;} header;};
extern gc447*store447;
extern int store_left447;
extern fsoc*store_chunk447;
extern gc447*gc_free447;
typedef struct B1100 gc1100;
struct B1100{T1100 object;union {void*flag;gc1100*next;} header;};
extern gc1100*store1100;
extern int store_left1100;
extern fsoc*store_chunk1100;
extern gc1100*gc_free1100;
typedef struct B428 gc428;
struct B428{T428 object;union {void*flag;gc428*next;} header;};
extern gc428*store428;
extern int store_left428;
extern fsoc*store_chunk428;
extern gc428*gc_free428;
typedef struct B1101 gc1101;
struct B1101{T1101 object;union {void*flag;gc1101*next;} header;};
extern gc1101*store1101;
extern int store_left1101;
extern fsoc*store_chunk1101;
extern gc1101*gc_free1101;
extern na_env na_env1102;
typedef struct B1103 gc1103;
struct B1103{T1103 object;union {void*flag;gc1103*next;} header;};
extern gc1103*store1103;
extern int store_left1103;
extern fsoc*store_chunk1103;
extern gc1103*gc_free1103;
typedef struct B1104 gc1104;
struct B1104{T1104 object;union {void*flag;gc1104*next;} header;};
extern gc1104*store1104;
extern int store_left1104;
extern fsoc*store_chunk1104;
extern gc1104*gc_free1104;
extern na_env na_env1105;
typedef struct B1106 gc1106;
struct B1106{T1106 object;union {void*flag;gc1106*next;} header;};
extern gc1106*store1106;
extern int store_left1106;
extern fsoc*store_chunk1106;
extern gc1106*gc_free1106;
extern na_env na_env1107;
typedef struct B1108 gc1108;
struct B1108{T1108 object;union {void*flag;gc1108*next;} header;};
extern gc1108*store1108;
extern int store_left1108;
extern fsoc*store_chunk1108;
extern gc1108*gc_free1108;
typedef struct B1111 gc1111;
struct B1111{T1111 object;union {void*flag;gc1111*next;} header;};
extern gc1111*store1111;
extern int store_left1111;
extern fsoc*store_chunk1111;
extern gc1111*gc_free1111;
typedef struct B1112 gc1112;
struct B1112{T1112 object;union {void*flag;gc1112*next;} header;};
extern gc1112*store1112;
extern int store_left1112;
extern fsoc*store_chunk1112;
extern gc1112*gc_free1112;
typedef struct B1115 gc1115;
struct B1115{T1115 object;union {void*flag;gc1115*next;} header;};
extern gc1115*store1115;
extern int store_left1115;
extern fsoc*store_chunk1115;
extern gc1115*gc_free1115;
typedef struct B1116 gc1116;
struct B1116{T1116 object;union {void*flag;gc1116*next;} header;};
extern gc1116*store1116;
extern int store_left1116;
extern fsoc*store_chunk1116;
extern gc1116*gc_free1116;
typedef struct B1117 gc1117;
struct B1117{T1117 object;union {void*flag;gc1117*next;} header;};
extern gc1117*store1117;
extern int store_left1117;
extern fsoc*store_chunk1117;
extern gc1117*gc_free1117;
typedef struct B1118 gc1118;
struct B1118{T1118 object;union {void*flag;gc1118*next;} header;};
extern gc1118*store1118;
extern int store_left1118;
extern fsoc*store_chunk1118;
extern gc1118*gc_free1118;
typedef struct B1119 gc1119;
struct B1119{T1119 object;union {void*flag;gc1119*next;} header;};
extern gc1119*store1119;
extern int store_left1119;
extern fsoc*store_chunk1119;
extern gc1119*gc_free1119;
typedef struct B1120 gc1120;
struct B1120{T1120 object;union {void*flag;gc1120*next;} header;};
extern gc1120*store1120;
extern int store_left1120;
extern fsoc*store_chunk1120;
extern gc1120*gc_free1120;
typedef struct B524 gc524;
struct B524{T524 object;union {void*flag;gc524*next;} header;};
extern gc524*store524;
extern int store_left524;
extern fsoc*store_chunk524;
extern gc524*gc_free524;
typedef struct B1122 gc1122;
struct B1122{T1122 object;union {void*flag;gc1122*next;} header;};
extern gc1122*store1122;
extern int store_left1122;
extern fsoc*store_chunk1122;
extern gc1122*gc_free1122;
typedef struct B1126 gc1126;
struct B1126{T1126 object;union {void*flag;gc1126*next;} header;};
extern gc1126*store1126;
extern int store_left1126;
extern fsoc*store_chunk1126;
extern gc1126*gc_free1126;
typedef struct B1127 gc1127;
struct B1127{T1127 object;union {void*flag;gc1127*next;} header;};
extern gc1127*store1127;
extern int store_left1127;
extern fsoc*store_chunk1127;
extern gc1127*gc_free1127;
typedef struct B1128 gc1128;
struct B1128{T1128 object;union {void*flag;gc1128*next;} header;};
extern gc1128*store1128;
extern int store_left1128;
extern fsoc*store_chunk1128;
extern gc1128*gc_free1128;
typedef struct B1129 gc1129;
struct B1129{T1129 object;union {void*flag;gc1129*next;} header;};
extern gc1129*store1129;
extern int store_left1129;
extern fsoc*store_chunk1129;
extern gc1129*gc_free1129;
typedef struct B1130 gc1130;
struct B1130{T1130 object;union {void*flag;gc1130*next;} header;};
extern gc1130*store1130;
extern int store_left1130;
extern fsoc*store_chunk1130;
extern gc1130*gc_free1130;
typedef struct B526 gc526;
struct B526{T526 object;union {void*flag;gc526*next;} header;};
extern gc526*store526;
extern int store_left526;
extern fsoc*store_chunk526;
extern gc526*gc_free526;
typedef struct B1131 gc1131;
struct B1131{T1131 object;union {void*flag;gc1131*next;} header;};
extern gc1131*store1131;
extern int store_left1131;
extern fsoc*store_chunk1131;
extern gc1131*gc_free1131;
typedef struct B1132 gc1132;
struct B1132{T1132 object;union {void*flag;gc1132*next;} header;};
extern gc1132*store1132;
extern int store_left1132;
extern fsoc*store_chunk1132;
extern gc1132*gc_free1132;
typedef struct B559 gc559;
struct B559{T559 object;union {void*flag;gc559*next;} header;};
extern gc559*store559;
extern int store_left559;
extern fsoc*store_chunk559;
extern gc559*gc_free559;
typedef struct B1134 gc1134;
struct B1134{T1134 object;union {void*flag;gc1134*next;} header;};
extern gc1134*store1134;
extern int store_left1134;
extern fsoc*store_chunk1134;
extern gc1134*gc_free1134;
typedef struct B1135 gc1135;
struct B1135{T1135 object;union {void*flag;gc1135*next;} header;};
extern gc1135*store1135;
extern int store_left1135;
extern fsoc*store_chunk1135;
extern gc1135*gc_free1135;
typedef struct B1136 gc1136;
struct B1136{T1136 object;union {void*flag;gc1136*next;} header;};
extern gc1136*store1136;
extern int store_left1136;
extern fsoc*store_chunk1136;
extern gc1136*gc_free1136;
typedef struct B400 gc400;
struct B400{T400 object;union {void*flag;gc400*next;} header;};
extern gc400*store400;
extern int store_left400;
extern fsoc*store_chunk400;
extern gc400*gc_free400;
extern na_env na_env1137;
typedef struct B1138 gc1138;
struct B1138{T1138 object;union {void*flag;gc1138*next;} header;};
extern gc1138*store1138;
extern int store_left1138;
extern fsoc*store_chunk1138;
extern gc1138*gc_free1138;
typedef struct B1139 gc1139;
struct B1139{T1139 object;union {void*flag;gc1139*next;} header;};
extern gc1139*store1139;
extern int store_left1139;
extern fsoc*store_chunk1139;
extern gc1139*gc_free1139;
extern na_env na_env1140;
typedef struct B1141 gc1141;
struct B1141{T1141 object;union {void*flag;gc1141*next;} header;};
extern gc1141*store1141;
extern int store_left1141;
extern fsoc*store_chunk1141;
extern gc1141*gc_free1141;
typedef struct B1142 gc1142;
struct B1142{T1142 object;union {void*flag;gc1142*next;} header;};
extern gc1142*store1142;
extern int store_left1142;
extern fsoc*store_chunk1142;
extern gc1142*gc_free1142;
typedef struct B635 gc635;
struct B635{T635 object;union {void*flag;gc635*next;} header;};
extern gc635*store635;
extern int store_left635;
extern fsoc*store_chunk635;
extern gc635*gc_free635;
typedef struct B1143 gc1143;
struct B1143{T1143 object;union {void*flag;gc1143*next;} header;};
extern gc1143*store1143;
extern int store_left1143;
extern fsoc*store_chunk1143;
extern gc1143*gc_free1143;
typedef struct B1144 gc1144;
struct B1144{T1144 object;union {void*flag;gc1144*next;} header;};
extern gc1144*store1144;
extern int store_left1144;
extern fsoc*store_chunk1144;
extern gc1144*gc_free1144;
typedef struct B1145 gc1145;
struct B1145{T1145 object;union {void*flag;gc1145*next;} header;};
extern gc1145*store1145;
extern int store_left1145;
extern fsoc*store_chunk1145;
extern gc1145*gc_free1145;
typedef struct B1146 gc1146;
struct B1146{T1146 object;union {void*flag;gc1146*next;} header;};
extern gc1146*store1146;
extern int store_left1146;
extern fsoc*store_chunk1146;
extern gc1146*gc_free1146;
typedef struct B1151 gc1151;
struct B1151{T1151 object;union {void*flag;gc1151*next;} header;};
extern gc1151*store1151;
extern int store_left1151;
extern fsoc*store_chunk1151;
extern gc1151*gc_free1151;
typedef struct B1152 gc1152;
struct B1152{T1152 object;union {void*flag;gc1152*next;} header;};
extern gc1152*store1152;
extern int store_left1152;
extern fsoc*store_chunk1152;
extern gc1152*gc_free1152;
typedef struct B1153 gc1153;
struct B1153{T1153 object;union {void*flag;gc1153*next;} header;};
extern gc1153*store1153;
extern int store_left1153;
extern fsoc*store_chunk1153;
extern gc1153*gc_free1153;
typedef struct B1154 gc1154;
struct B1154{T1154 object;union {void*flag;gc1154*next;} header;};
extern gc1154*store1154;
extern int store_left1154;
extern fsoc*store_chunk1154;
extern gc1154*gc_free1154;
typedef struct B1155 gc1155;
struct B1155{T1155 object;union {void*flag;gc1155*next;} header;};
extern gc1155*store1155;
extern int store_left1155;
extern fsoc*store_chunk1155;
extern gc1155*gc_free1155;
typedef struct B1156 gc1156;
struct B1156{T1156 object;union {void*flag;gc1156*next;} header;};
extern gc1156*store1156;
extern int store_left1156;
extern fsoc*store_chunk1156;
extern gc1156*gc_free1156;
extern na_env na_env1157;
typedef struct B1158 gc1158;
struct B1158{T1158 object;union {void*flag;gc1158*next;} header;};
extern gc1158*store1158;
extern int store_left1158;
extern fsoc*store_chunk1158;
extern gc1158*gc_free1158;
typedef struct B1159 gc1159;
struct B1159{T1159 object;union {void*flag;gc1159*next;} header;};
extern gc1159*store1159;
extern int store_left1159;
extern fsoc*store_chunk1159;
extern gc1159*gc_free1159;
extern na_env na_env1160;
extern na_env na_env1161;
typedef struct B1162 gc1162;
struct B1162{T1162 object;union {void*flag;gc1162*next;} header;};
extern gc1162*store1162;
extern int store_left1162;
extern fsoc*store_chunk1162;
extern gc1162*gc_free1162;
typedef struct B1165 gc1165;
struct B1165{T1165 object;union {void*flag;gc1165*next;} header;};
extern gc1165*store1165;
extern int store_left1165;
extern fsoc*store_chunk1165;
extern gc1165*gc_free1165;
typedef struct B1166 gc1166;
struct B1166{T1166 object;union {void*flag;gc1166*next;} header;};
extern gc1166*store1166;
extern int store_left1166;
extern fsoc*store_chunk1166;
extern gc1166*gc_free1166;
typedef struct B1167 gc1167;
struct B1167{T1167 object;union {void*flag;gc1167*next;} header;};
extern gc1167*store1167;
extern int store_left1167;
extern fsoc*store_chunk1167;
extern gc1167*gc_free1167;
typedef struct B406 gc406;
struct B406{T406 object;union {void*flag;gc406*next;} header;};
extern gc406*store406;
extern int store_left406;
extern fsoc*store_chunk406;
extern gc406*gc_free406;
typedef struct B1168 gc1168;
struct B1168{T1168 object;union {void*flag;gc1168*next;} header;};
extern gc1168*store1168;
extern int store_left1168;
extern fsoc*store_chunk1168;
extern gc1168*gc_free1168;
typedef struct B560 gc560;
struct B560{T560 object;union {void*flag;gc560*next;} header;};
extern gc560*store560;
extern int store_left560;
extern fsoc*store_chunk560;
extern gc560*gc_free560;
typedef struct B1169 gc1169;
struct B1169{T1169 object;union {void*flag;gc1169*next;} header;};
extern gc1169*store1169;
extern int store_left1169;
extern fsoc*store_chunk1169;
extern gc1169*gc_free1169;
typedef struct B1170 gc1170;
struct B1170{T1170 object;union {void*flag;gc1170*next;} header;};
extern gc1170*store1170;
extern int store_left1170;
extern fsoc*store_chunk1170;
extern gc1170*gc_free1170;
extern na_env na_env1171;
extern na_env na_env1172;
typedef struct B1173 gc1173;
struct B1173{T1173 object;union {void*flag;gc1173*next;} header;};
extern gc1173*store1173;
extern int store_left1173;
extern fsoc*store_chunk1173;
extern gc1173*gc_free1173;
typedef struct B1174 gc1174;
struct B1174{T1174 object;union {void*flag;gc1174*next;} header;};
extern gc1174*store1174;
extern int store_left1174;
extern fsoc*store_chunk1174;
extern gc1174*gc_free1174;
typedef struct B1176 gc1176;
struct B1176{T1176 object;union {void*flag;gc1176*next;} header;};
extern gc1176*store1176;
extern int store_left1176;
extern fsoc*store_chunk1176;
extern gc1176*gc_free1176;
extern na_env na_env1178;
typedef struct B1179 gc1179;
struct B1179{T1179 object;union {void*flag;gc1179*next;} header;};
extern gc1179*store1179;
extern int store_left1179;
extern fsoc*store_chunk1179;
extern gc1179*gc_free1179;
typedef struct B1180 gc1180;
struct B1180{T1180 object;union {void*flag;gc1180*next;} header;};
extern gc1180*store1180;
extern int store_left1180;
extern fsoc*store_chunk1180;
extern gc1180*gc_free1180;
extern na_env na_env1181;
typedef struct B1182 gc1182;
struct B1182{T1182 object;union {void*flag;gc1182*next;} header;};
extern gc1182*store1182;
extern int store_left1182;
extern fsoc*store_chunk1182;
extern gc1182*gc_free1182;
extern na_env na_env1184;
extern na_env na_env1185;
typedef struct B1186 gc1186;
struct B1186{T1186 object;union {void*flag;gc1186*next;} header;};
extern gc1186*store1186;
extern int store_left1186;
extern fsoc*store_chunk1186;
extern gc1186*gc_free1186;
extern na_env na_env1188;
typedef struct B1189 gc1189;
struct B1189{T1189 object;union {void*flag;gc1189*next;} header;};
extern gc1189*store1189;
extern int store_left1189;
extern fsoc*store_chunk1189;
extern gc1189*gc_free1189;
typedef struct B1190 gc1190;
struct B1190{T1190 object;union {void*flag;gc1190*next;} header;};
extern gc1190*store1190;
extern int store_left1190;
extern fsoc*store_chunk1190;
extern gc1190*gc_free1190;
typedef struct B1192 gc1192;
struct B1192{T1192 object;union {void*flag;gc1192*next;} header;};
extern gc1192*store1192;
extern int store_left1192;
extern fsoc*store_chunk1192;
extern gc1192*gc_free1192;
typedef struct B773 gc773;
struct B773{T773 object;union {void*flag;gc773*next;} header;};
extern gc773*store773;
extern int store_left773;
extern fsoc*store_chunk773;
extern gc773*gc_free773;
typedef struct B1194 gc1194;
struct B1194{T1194 object;union {void*flag;gc1194*next;} header;};
extern gc1194*store1194;
extern int store_left1194;
extern fsoc*store_chunk1194;
extern gc1194*gc_free1194;
typedef struct B1195 gc1195;
struct B1195{T1195 object;union {void*flag;gc1195*next;} header;};
extern gc1195*store1195;
extern int store_left1195;
extern fsoc*store_chunk1195;
extern gc1195*gc_free1195;
typedef struct B1196 gc1196;
struct B1196{T1196 object;union {void*flag;gc1196*next;} header;};
extern gc1196*store1196;
extern int store_left1196;
extern fsoc*store_chunk1196;
extern gc1196*gc_free1196;
typedef struct B1197 gc1197;
struct B1197{T1197 object;union {void*flag;gc1197*next;} header;};
extern gc1197*store1197;
extern int store_left1197;
extern fsoc*store_chunk1197;
extern gc1197*gc_free1197;
extern na_env na_env1198;
typedef struct B1199 gc1199;
struct B1199{T1199 object;union {void*flag;gc1199*next;} header;};
extern gc1199*store1199;
extern int store_left1199;
extern fsoc*store_chunk1199;
extern gc1199*gc_free1199;
typedef struct B1200 gc1200;
struct B1200{T1200 object;union {void*flag;gc1200*next;} header;};
extern gc1200*store1200;
extern int store_left1200;
extern fsoc*store_chunk1200;
extern gc1200*gc_free1200;
extern na_env na_env1201;
extern na_env na_env1202;
typedef struct B1203 gc1203;
struct B1203{T1203 object;union {void*flag;gc1203*next;} header;};
extern gc1203*store1203;
extern int store_left1203;
extern fsoc*store_chunk1203;
extern gc1203*gc_free1203;
typedef struct B1204 gc1204;
struct B1204{T1204 object;union {void*flag;gc1204*next;} header;};
extern gc1204*store1204;
extern int store_left1204;
extern fsoc*store_chunk1204;
extern gc1204*gc_free1204;
typedef struct B1205 gc1205;
struct B1205{T1205 object;union {void*flag;gc1205*next;} header;};
extern gc1205*store1205;
extern int store_left1205;
extern fsoc*store_chunk1205;
extern gc1205*gc_free1205;
typedef struct B1206 gc1206;
struct B1206{T1206 object;union {void*flag;gc1206*next;} header;};
extern gc1206*store1206;
extern int store_left1206;
extern fsoc*store_chunk1206;
extern gc1206*gc_free1206;
extern na_env na_env1207;
typedef struct B1208 gc1208;
struct B1208{T1208 object;union {void*flag;gc1208*next;} header;};
extern gc1208*store1208;
extern int store_left1208;
extern fsoc*store_chunk1208;
extern gc1208*gc_free1208;
extern na_env na_env1209;
typedef struct B642 gc642;
struct B642{T642 object;union {void*flag;gc642*next;} header;};
extern gc642*store642;
extern int store_left642;
extern fsoc*store_chunk642;
extern gc642*gc_free642;
typedef struct B650 gc650;
struct B650{T650 object;union {void*flag;gc650*next;} header;};
extern gc650*store650;
extern int store_left650;
extern fsoc*store_chunk650;
extern gc650*gc_free650;
typedef struct B561 gc561;
struct B561{T561 object;union {void*flag;gc561*next;} header;};
extern gc561*store561;
extern int store_left561;
extern fsoc*store_chunk561;
extern gc561*gc_free561;
typedef struct B655 gc655;
struct B655{T655 object;union {void*flag;gc655*next;} header;};
extern gc655*store655;
extern int store_left655;
extern fsoc*store_chunk655;
extern gc655*gc_free655;
typedef struct B652 gc652;
struct B652{T652 object;union {void*flag;gc652*next;} header;};
extern gc652*store652;
extern int store_left652;
extern fsoc*store_chunk652;
extern gc652*gc_free652;
typedef struct B653 gc653;
struct B653{T653 object;union {void*flag;gc653*next;} header;};
extern gc653*store653;
extern int store_left653;
extern fsoc*store_chunk653;
extern gc653*gc_free653;
typedef struct B648 gc648;
struct B648{T648 object;union {void*flag;gc648*next;} header;};
extern gc648*store648;
extern int store_left648;
extern fsoc*store_chunk648;
extern gc648*gc_free648;
typedef struct B651 gc651;
struct B651{T651 object;union {void*flag;gc651*next;} header;};
extern gc651*store651;
extern int store_left651;
extern fsoc*store_chunk651;
extern gc651*gc_free651;
typedef struct B649 gc649;
struct B649{T649 object;union {void*flag;gc649*next;} header;};
extern gc649*store649;
extern int store_left649;
extern fsoc*store_chunk649;
extern gc649*gc_free649;
typedef struct B654 gc654;
struct B654{T654 object;union {void*flag;gc654*next;} header;};
extern gc654*store654;
extern int store_left654;
extern fsoc*store_chunk654;
extern gc654*gc_free654;
typedef struct B645 gc645;
struct B645{T645 object;union {void*flag;gc645*next;} header;};
extern gc645*store645;
extern int store_left645;
extern fsoc*store_chunk645;
extern gc645*gc_free645;
typedef struct B644 gc644;
struct B644{T644 object;union {void*flag;gc644*next;} header;};
extern gc644*store644;
extern int store_left644;
extern fsoc*store_chunk644;
extern gc644*gc_free644;
typedef struct B647 gc647;
struct B647{T647 object;union {void*flag;gc647*next;} header;};
extern gc647*store647;
extern int store_left647;
extern fsoc*store_chunk647;
extern gc647*gc_free647;
typedef struct B1210 gc1210;
struct B1210{T1210 object;union {void*flag;gc1210*next;} header;};
extern gc1210*store1210;
extern int store_left1210;
extern fsoc*store_chunk1210;
extern gc1210*gc_free1210;
typedef struct B1211 gc1211;
struct B1211{T1211 object;union {void*flag;gc1211*next;} header;};
extern gc1211*store1211;
extern int store_left1211;
extern fsoc*store_chunk1211;
extern gc1211*gc_free1211;
typedef struct B1212 gc1212;
struct B1212{T1212 object;union {void*flag;gc1212*next;} header;};
extern gc1212*store1212;
extern int store_left1212;
extern fsoc*store_chunk1212;
extern gc1212*gc_free1212;
extern na_env na_env1213;
typedef struct B690 gc690;
struct B690{T690 object;union {void*flag;gc690*next;} header;};
extern gc690*store690;
extern int store_left690;
extern fsoc*store_chunk690;
extern gc690*gc_free690;
extern na_env na_env1214;
extern na_env na_env1215;
extern na_env na_env1216;
extern na_env na_env1217;
extern na_env na_env1218;
typedef struct B1219 gc1219;
struct B1219{T1219 object;union {void*flag;gc1219*next;} header;};
extern gc1219*store1219;
extern int store_left1219;
extern fsoc*store_chunk1219;
extern gc1219*gc_free1219;
extern na_env na_env1220;
extern na_env na_env1221;
extern na_env na_env1222;
typedef struct B1223 gc1223;
struct B1223{T1223 object;union {void*flag;gc1223*next;} header;};
extern gc1223*store1223;
extern int store_left1223;
extern fsoc*store_chunk1223;
extern gc1223*gc_free1223;
extern na_env na_env1224;
typedef struct B732 gc732;
struct B732{T732 object;union {void*flag;gc732*next;} header;};
extern gc732*store732;
extern int store_left732;
extern fsoc*store_chunk732;
extern gc732*gc_free732;
typedef struct B1225 gc1225;
struct B1225{T1225 object;union {void*flag;gc1225*next;} header;};
extern gc1225*store1225;
extern int store_left1225;
extern fsoc*store_chunk1225;
extern gc1225*gc_free1225;
typedef struct B379 gc379;
struct B379{T379 object;union {void*flag;gc379*next;} header;};
extern gc379*store379;
extern int store_left379;
extern fsoc*store_chunk379;
extern gc379*gc_free379;
typedef struct B678 gc678;
struct B678{T678 object;union {void*flag;gc678*next;} header;};
extern gc678*store678;
extern int store_left678;
extern fsoc*store_chunk678;
extern gc678*gc_free678;
typedef struct B668 gc668;
struct B668{T668 object;union {void*flag;gc668*next;} header;};
extern gc668*store668;
extern int store_left668;
extern fsoc*store_chunk668;
extern gc668*gc_free668;
typedef struct B1226 gc1226;
struct B1226{T1226 object;union {void*flag;gc1226*next;} header;};
extern gc1226*store1226;
extern int store_left1226;
extern fsoc*store_chunk1226;
extern gc1226*gc_free1226;
typedef struct B1227 gc1227;
struct B1227{T1227 object;union {void*flag;gc1227*next;} header;};
extern gc1227*store1227;
extern int store_left1227;
extern fsoc*store_chunk1227;
extern gc1227*gc_free1227;
typedef struct B673 gc673;
struct B673{T673 object;union {void*flag;gc673*next;} header;};
extern gc673*store673;
extern int store_left673;
extern fsoc*store_chunk673;
extern gc673*gc_free673;
typedef struct B1228 gc1228;
struct B1228{T1228 object;union {void*flag;gc1228*next;} header;};
extern gc1228*store1228;
extern int store_left1228;
extern fsoc*store_chunk1228;
extern gc1228*gc_free1228;
typedef struct B1229 gc1229;
struct B1229{T1229 object;union {void*flag;gc1229*next;} header;};
extern gc1229*store1229;
extern int store_left1229;
extern fsoc*store_chunk1229;
extern gc1229*gc_free1229;
typedef struct B1230 gc1230;
struct B1230{T1230 object;union {void*flag;gc1230*next;} header;};
extern gc1230*store1230;
extern int store_left1230;
extern fsoc*store_chunk1230;
extern gc1230*gc_free1230;
extern na_env na_env1232;
extern na_env na_env1233;
typedef struct B1234 gc1234;
struct B1234{T1234 object;union {void*flag;gc1234*next;} header;};
extern gc1234*store1234;
extern int store_left1234;
extern fsoc*store_chunk1234;
extern gc1234*gc_free1234;
typedef struct B1235 gc1235;
struct B1235{T1235 object;union {void*flag;gc1235*next;} header;};
extern gc1235*store1235;
extern int store_left1235;
extern fsoc*store_chunk1235;
extern gc1235*gc_free1235;
extern na_env na_env1236;
typedef struct B1237 gc1237;
struct B1237{T1237 object;union {void*flag;gc1237*next;} header;};
extern gc1237*store1237;
extern int store_left1237;
extern fsoc*store_chunk1237;
extern gc1237*gc_free1237;
typedef struct B1238 gc1238;
struct B1238{T1238 object;union {void*flag;gc1238*next;} header;};
extern gc1238*store1238;
extern int store_left1238;
extern fsoc*store_chunk1238;
extern gc1238*gc_free1238;
extern na_env na_env1239;
typedef struct B1240 gc1240;
struct B1240{T1240 object;union {void*flag;gc1240*next;} header;};
extern gc1240*store1240;
extern int store_left1240;
extern fsoc*store_chunk1240;
extern gc1240*gc_free1240;
extern na_env na_env1242;
extern na_env na_env1243;
extern na_env na_env1244;
extern na_env na_env1245;
typedef struct B1246 gc1246;
struct B1246{T1246 object;union {void*flag;gc1246*next;} header;};
extern gc1246*store1246;
extern int store_left1246;
extern fsoc*store_chunk1246;
extern gc1246*gc_free1246;
typedef struct B1247 gc1247;
struct B1247{T1247 object;union {void*flag;gc1247*next;} header;};
extern gc1247*store1247;
extern int store_left1247;
extern fsoc*store_chunk1247;
extern gc1247*gc_free1247;
typedef struct B1248 gc1248;
struct B1248{T1248 object;union {void*flag;gc1248*next;} header;};
extern gc1248*store1248;
extern int store_left1248;
extern fsoc*store_chunk1248;
extern gc1248*gc_free1248;
typedef struct B1249 gc1249;
struct B1249{T1249 object;union {void*flag;gc1249*next;} header;};
extern gc1249*store1249;
extern int store_left1249;
extern fsoc*store_chunk1249;
extern gc1249*gc_free1249;
typedef struct B1250 gc1250;
struct B1250{T1250 object;union {void*flag;gc1250*next;} header;};
extern gc1250*store1250;
extern int store_left1250;
extern fsoc*store_chunk1250;
extern gc1250*gc_free1250;
typedef struct B1251 gc1251;
struct B1251{T1251 object;union {void*flag;gc1251*next;} header;};
extern gc1251*store1251;
extern int store_left1251;
extern fsoc*store_chunk1251;
extern gc1251*gc_free1251;
extern na_env na_env1252;
typedef struct B1253 gc1253;
struct B1253{T1253 object;union {void*flag;gc1253*next;} header;};
extern gc1253*store1253;
extern int store_left1253;
extern fsoc*store_chunk1253;
extern gc1253*gc_free1253;
extern na_env na_env1254;
typedef struct B1255 gc1255;
struct B1255{T1255 object;union {void*flag;gc1255*next;} header;};
extern gc1255*store1255;
extern int store_left1255;
extern fsoc*store_chunk1255;
extern gc1255*gc_free1255;
typedef struct B1256 gc1256;
struct B1256{T1256 object;union {void*flag;gc1256*next;} header;};
extern gc1256*store1256;
extern int store_left1256;
extern fsoc*store_chunk1256;
extern gc1256*gc_free1256;
typedef struct B1260 gc1260;
struct B1260{T1260 object;union {void*flag;gc1260*next;} header;};
extern gc1260*store1260;
extern int store_left1260;
extern fsoc*store_chunk1260;
extern gc1260*gc_free1260;
extern na_env na_env1261;
typedef struct B1262 gc1262;
struct B1262{T1262 object;union {void*flag;gc1262*next;} header;};
extern gc1262*store1262;
extern int store_left1262;
extern fsoc*store_chunk1262;
extern gc1262*gc_free1262;
typedef struct B1264 gc1264;
struct B1264{T1264 object;union {void*flag;gc1264*next;} header;};
extern gc1264*store1264;
extern int store_left1264;
extern fsoc*store_chunk1264;
extern gc1264*gc_free1264;
typedef struct B1265 gc1265;
struct B1265{T1265 object;union {void*flag;gc1265*next;} header;};
extern gc1265*store1265;
extern int store_left1265;
extern fsoc*store_chunk1265;
extern gc1265*gc_free1265;
typedef struct B1266 gc1266;
struct B1266{T1266 object;union {void*flag;gc1266*next;} header;};
extern gc1266*store1266;
extern int store_left1266;
extern fsoc*store_chunk1266;
extern gc1266*gc_free1266;
extern na_env na_env1267;
extern na_env na_env1268;
extern na_env na_env1269;
extern na_env na_env1270;
typedef struct B1271 gc1271;
struct B1271{T1271 object;union {void*flag;gc1271*next;} header;};
extern gc1271*store1271;
extern int store_left1271;
extern fsoc*store_chunk1271;
extern gc1271*gc_free1271;
typedef struct B1272 gc1272;
struct B1272{T1272 object;union {void*flag;gc1272*next;} header;};
extern gc1272*store1272;
extern int store_left1272;
extern fsoc*store_chunk1272;
extern gc1272*gc_free1272;
extern na_env na_env1273;
extern na_env na_env1275;
typedef struct B1276 gc1276;
struct B1276{T1276 object;union {void*flag;gc1276*next;} header;};
extern gc1276*store1276;
extern int store_left1276;
extern fsoc*store_chunk1276;
extern gc1276*gc_free1276;
typedef struct B1277 gc1277;
struct B1277{T1277 object;union {void*flag;gc1277*next;} header;};
extern gc1277*store1277;
extern int store_left1277;
extern fsoc*store_chunk1277;
extern gc1277*gc_free1277;
typedef struct B1278 gc1278;
struct B1278{T1278 object;union {void*flag;gc1278*next;} header;};
extern gc1278*store1278;
extern int store_left1278;
extern fsoc*store_chunk1278;
extern gc1278*gc_free1278;
typedef struct B1279 gc1279;
struct B1279{T1279 object;union {void*flag;gc1279*next;} header;};
extern gc1279*store1279;
extern int store_left1279;
extern fsoc*store_chunk1279;
extern gc1279*gc_free1279;
extern na_env na_env1280;
extern na_env na_env1281;
typedef struct B1282 gc1282;
struct B1282{T1282 object;union {void*flag;gc1282*next;} header;};
extern gc1282*store1282;
extern int store_left1282;
extern fsoc*store_chunk1282;
extern gc1282*gc_free1282;
typedef struct B1283 gc1283;
struct B1283{T1283 object;union {void*flag;gc1283*next;} header;};
extern gc1283*store1283;
extern int store_left1283;
extern fsoc*store_chunk1283;
extern gc1283*gc_free1283;
typedef struct B1284 gc1284;
struct B1284{T1284 object;union {void*flag;gc1284*next;} header;};
extern gc1284*store1284;
extern int store_left1284;
extern fsoc*store_chunk1284;
extern gc1284*gc_free1284;
typedef struct B1285 gc1285;
struct B1285{T1285 object;union {void*flag;gc1285*next;} header;};
extern gc1285*store1285;
extern int store_left1285;
extern fsoc*store_chunk1285;
extern gc1285*gc_free1285;
extern na_env na_env1286;
extern na_env na_env1287;
typedef struct B1288 gc1288;
struct B1288{T1288 object;union {void*flag;gc1288*next;} header;};
extern gc1288*store1288;
extern int store_left1288;
extern fsoc*store_chunk1288;
extern gc1288*gc_free1288;
typedef struct B1289 gc1289;
struct B1289{T1289 object;union {void*flag;gc1289*next;} header;};
extern gc1289*store1289;
extern int store_left1289;
extern fsoc*store_chunk1289;
extern gc1289*gc_free1289;
extern na_env na_env1290;
typedef struct B1291 gc1291;
struct B1291{T1291 object;union {void*flag;gc1291*next;} header;};
extern gc1291*store1291;
extern int store_left1291;
extern fsoc*store_chunk1291;
extern gc1291*gc_free1291;
typedef struct B1292 gc1292;
struct B1292{T1292 object;union {void*flag;gc1292*next;} header;};
extern gc1292*store1292;
extern int store_left1292;
extern fsoc*store_chunk1292;
extern gc1292*gc_free1292;
extern na_env na_env1293;
extern na_env na_env1294;
typedef struct B1295 gc1295;
struct B1295{T1295 object;union {void*flag;gc1295*next;} header;};
extern gc1295*store1295;
extern int store_left1295;
extern fsoc*store_chunk1295;
extern gc1295*gc_free1295;
typedef struct B1296 gc1296;
struct B1296{T1296 object;union {void*flag;gc1296*next;} header;};
extern gc1296*store1296;
extern int store_left1296;
extern fsoc*store_chunk1296;
extern gc1296*gc_free1296;
typedef struct B1297 gc1297;
struct B1297{T1297 object;union {void*flag;gc1297*next;} header;};
extern gc1297*store1297;
extern int store_left1297;
extern fsoc*store_chunk1297;
extern gc1297*gc_free1297;
extern na_env na_env1298;
typedef struct B1299 gc1299;
struct B1299{T1299 object;union {void*flag;gc1299*next;} header;};
extern gc1299*store1299;
extern int store_left1299;
extern fsoc*store_chunk1299;
extern gc1299*gc_free1299;
extern na_env na_env1300;
typedef struct B413 gc413;
struct B413{T413 object;union {void*flag;gc413*next;} header;};
extern gc413*store413;
extern int store_left413;
extern fsoc*store_chunk413;
extern gc413*gc_free413;
typedef struct B733 gc733;
struct B733{T733 object;union {void*flag;gc733*next;} header;};
extern gc733*store733;
extern int store_left733;
extern fsoc*store_chunk733;
extern gc733*gc_free733;
extern na_env na_env1301;
typedef struct B1302 gc1302;
struct B1302{T1302 object;union {void*flag;gc1302*next;} header;};
extern gc1302*store1302;
extern int store_left1302;
extern fsoc*store_chunk1302;
extern gc1302*gc_free1302;
typedef struct B1303 gc1303;
struct B1303{T1303 object;union {void*flag;gc1303*next;} header;};
extern gc1303*store1303;
extern int store_left1303;
extern fsoc*store_chunk1303;
extern gc1303*gc_free1303;
extern na_env na_env1304;
typedef struct B1305 gc1305;
struct B1305{T1305 object;union {void*flag;gc1305*next;} header;};
extern gc1305*store1305;
extern int store_left1305;
extern fsoc*store_chunk1305;
extern gc1305*gc_free1305;
typedef struct B1306 gc1306;
struct B1306{T1306 object;union {void*flag;gc1306*next;} header;};
extern gc1306*store1306;
extern int store_left1306;
extern fsoc*store_chunk1306;
extern gc1306*gc_free1306;
extern na_env na_env1307;
extern na_env na_env1308;
typedef struct B1309 gc1309;
struct B1309{T1309 object;union {void*flag;gc1309*next;} header;};
extern gc1309*store1309;
extern int store_left1309;
extern fsoc*store_chunk1309;
extern gc1309*gc_free1309;
typedef struct B1310 gc1310;
struct B1310{T1310 object;union {void*flag;gc1310*next;} header;};
extern gc1310*store1310;
extern int store_left1310;
extern fsoc*store_chunk1310;
extern gc1310*gc_free1310;
typedef struct B1311 gc1311;
struct B1311{T1311 object;union {void*flag;gc1311*next;} header;};
extern gc1311*store1311;
extern int store_left1311;
extern fsoc*store_chunk1311;
extern gc1311*gc_free1311;
typedef struct B1312 gc1312;
struct B1312{T1312 object;union {void*flag;gc1312*next;} header;};
extern gc1312*store1312;
extern int store_left1312;
extern fsoc*store_chunk1312;
extern gc1312*gc_free1312;
extern na_env na_env1313;
typedef struct B1314 gc1314;
struct B1314{T1314 object;union {void*flag;gc1314*next;} header;};
extern gc1314*store1314;
extern int store_left1314;
extern fsoc*store_chunk1314;
extern gc1314*gc_free1314;
typedef struct B1315 gc1315;
struct B1315{T1315 object;union {void*flag;gc1315*next;} header;};
extern gc1315*store1315;
extern int store_left1315;
extern fsoc*store_chunk1315;
extern gc1315*gc_free1315;
extern na_env na_env1316;
extern na_env na_env1317;
extern na_env na_env1318;
typedef struct B1319 gc1319;
struct B1319{T1319 object;union {void*flag;gc1319*next;} header;};
extern gc1319*store1319;
extern int store_left1319;
extern fsoc*store_chunk1319;
extern gc1319*gc_free1319;
typedef struct B1320 gc1320;
struct B1320{T1320 object;union {void*flag;gc1320*next;} header;};
extern gc1320*store1320;
extern int store_left1320;
extern fsoc*store_chunk1320;
extern gc1320*gc_free1320;
extern na_env na_env1321;
extern na_env na_env1322;
extern na_env na_env1323;
typedef struct B356 gc356;
struct B356{T356 object;union {void*flag;gc356*next;} header;};
extern gc356*store356;
extern int store_left356;
extern fsoc*store_chunk356;
extern gc356*gc_free356;
typedef struct B1324 gc1324;
struct B1324{T1324 object;union {void*flag;gc1324*next;} header;};
extern gc1324*store1324;
extern int store_left1324;
extern fsoc*store_chunk1324;
extern gc1324*gc_free1324;
extern na_env na_env1325;
typedef struct B1326 gc1326;
struct B1326{T1326 object;union {void*flag;gc1326*next;} header;};
extern gc1326*store1326;
extern int store_left1326;
extern fsoc*store_chunk1326;
extern gc1326*gc_free1326;
extern na_env na_env1327;
typedef struct B1328 gc1328;
struct B1328{T1328 object;union {void*flag;gc1328*next;} header;};
extern gc1328*store1328;
extern int store_left1328;
extern fsoc*store_chunk1328;
extern gc1328*gc_free1328;
extern na_env na_env1329;
typedef struct B1330 gc1330;
struct B1330{T1330 object;union {void*flag;gc1330*next;} header;};
extern gc1330*store1330;
extern int store_left1330;
extern fsoc*store_chunk1330;
extern gc1330*gc_free1330;
extern na_env na_env1331;
extern na_env na_env1332;
extern na_env na_env1333;
typedef struct B1334 gc1334;
struct B1334{T1334 object;union {void*flag;gc1334*next;} header;};
extern gc1334*store1334;
extern int store_left1334;
extern fsoc*store_chunk1334;
extern gc1334*gc_free1334;
typedef struct B1335 gc1335;
struct B1335{T1335 object;union {void*flag;gc1335*next;} header;};
extern gc1335*store1335;
extern int store_left1335;
extern fsoc*store_chunk1335;
extern gc1335*gc_free1335;
typedef struct B1337 gc1337;
struct B1337{T1337 object;union {void*flag;gc1337*next;} header;};
extern gc1337*store1337;
extern int store_left1337;
extern fsoc*store_chunk1337;
extern gc1337*gc_free1337;
typedef struct B769 gc769;
struct B769{T769 object;union {void*flag;gc769*next;} header;};
extern gc769*store769;
extern int store_left769;
extern fsoc*store_chunk769;
extern gc769*gc_free769;
typedef struct B770 gc770;
struct B770{T770 object;union {void*flag;gc770*next;} header;};
extern gc770*store770;
extern int store_left770;
extern fsoc*store_chunk770;
extern gc770*gc_free770;
typedef struct B771 gc771;
struct B771{T771 object;union {void*flag;gc771*next;} header;};
extern gc771*store771;
extern int store_left771;
extern fsoc*store_chunk771;
extern gc771*gc_free771;
typedef struct B766 gc766;
struct B766{T766 object;union {void*flag;gc766*next;} header;};
extern gc766*store766;
extern int store_left766;
extern fsoc*store_chunk766;
extern gc766*gc_free766;
typedef struct B767 gc767;
struct B767{T767 object;union {void*flag;gc767*next;} header;};
extern gc767*store767;
extern int store_left767;
extern fsoc*store_chunk767;
extern gc767*gc_free767;
typedef struct B768 gc768;
struct B768{T768 object;union {void*flag;gc768*next;} header;};
extern gc768*store768;
extern int store_left768;
extern fsoc*store_chunk768;
extern gc768*gc_free768;
typedef struct B1339 gc1339;
struct B1339{T1339 object;union {void*flag;gc1339*next;} header;};
extern gc1339*store1339;
extern int store_left1339;
extern fsoc*store_chunk1339;
extern gc1339*gc_free1339;
extern na_env na_env1340;
typedef struct B1341 gc1341;
struct B1341{T1341 object;union {void*flag;gc1341*next;} header;};
extern gc1341*store1341;
extern int store_left1341;
extern fsoc*store_chunk1341;
extern gc1341*gc_free1341;
extern na_env na_env1342;
typedef struct B1343 gc1343;
struct B1343{T1343 object;union {void*flag;gc1343*next;} header;};
extern gc1343*store1343;
extern int store_left1343;
extern fsoc*store_chunk1343;
extern gc1343*gc_free1343;
typedef struct B1344 gc1344;
struct B1344{T1344 object;union {void*flag;gc1344*next;} header;};
extern gc1344*store1344;
extern int store_left1344;
extern fsoc*store_chunk1344;
extern gc1344*gc_free1344;
extern na_env na_env1345;
extern na_env na_env1346;
typedef struct B1347 gc1347;
struct B1347{T1347 object;union {void*flag;gc1347*next;} header;};
extern gc1347*store1347;
extern int store_left1347;
extern fsoc*store_chunk1347;
extern gc1347*gc_free1347;
typedef struct B1348 gc1348;
struct B1348{T1348 object;union {void*flag;gc1348*next;} header;};
extern gc1348*store1348;
extern int store_left1348;
extern fsoc*store_chunk1348;
extern gc1348*gc_free1348;
extern na_env na_env1349;
typedef struct B1350 gc1350;
struct B1350{T1350 object;union {void*flag;gc1350*next;} header;};
extern gc1350*store1350;
extern int store_left1350;
extern fsoc*store_chunk1350;
extern gc1350*gc_free1350;
typedef struct B1351 gc1351;
struct B1351{T1351 object;union {void*flag;gc1351*next;} header;};
extern gc1351*store1351;
extern int store_left1351;
extern fsoc*store_chunk1351;
extern gc1351*gc_free1351;
extern na_env na_env1352;
typedef struct B1353 gc1353;
struct B1353{T1353 object;union {void*flag;gc1353*next;} header;};
extern gc1353*store1353;
extern int store_left1353;
extern fsoc*store_chunk1353;
extern gc1353*gc_free1353;
typedef struct B1354 gc1354;
struct B1354{T1354 object;union {void*flag;gc1354*next;} header;};
extern gc1354*store1354;
extern int store_left1354;
extern fsoc*store_chunk1354;
extern gc1354*gc_free1354;
extern na_env na_env1355;
typedef struct B1356 gc1356;
struct B1356{T1356 object;union {void*flag;gc1356*next;} header;};
extern gc1356*store1356;
extern int store_left1356;
extern fsoc*store_chunk1356;
extern gc1356*gc_free1356;
extern na_env na_env1357;
extern na_env na_env1358;
extern na_env na_env1359;
extern na_env na_env1360;
extern na_env na_env1361;
typedef struct B1362 gc1362;
struct B1362{T1362 object;union {void*flag;gc1362*next;} header;};
extern gc1362*store1362;
extern int store_left1362;
extern fsoc*store_chunk1362;
extern gc1362*gc_free1362;
extern na_env na_env1363;
typedef struct B1364 gc1364;
struct B1364{T1364 object;union {void*flag;gc1364*next;} header;};
extern gc1364*store1364;
extern int store_left1364;
extern fsoc*store_chunk1364;
extern gc1364*gc_free1364;
typedef struct B1365 gc1365;
struct B1365{T1365 object;union {void*flag;gc1365*next;} header;};
extern gc1365*store1365;
extern int store_left1365;
extern fsoc*store_chunk1365;
extern gc1365*gc_free1365;
extern na_env na_env1366;
typedef struct B1367 gc1367;
struct B1367{T1367 object;union {void*flag;gc1367*next;} header;};
extern gc1367*store1367;
extern int store_left1367;
extern fsoc*store_chunk1367;
extern gc1367*gc_free1367;
typedef struct B1368 gc1368;
struct B1368{T1368 object;union {void*flag;gc1368*next;} header;};
extern gc1368*store1368;
extern int store_left1368;
extern fsoc*store_chunk1368;
extern gc1368*gc_free1368;
typedef struct B1371 gc1371;
struct B1371{T1371 object;union {void*flag;gc1371*next;} header;};
extern gc1371*store1371;
extern int store_left1371;
extern fsoc*store_chunk1371;
extern gc1371*gc_free1371;
typedef struct B1372 gc1372;
struct B1372{T1372 object;union {void*flag;gc1372*next;} header;};
extern gc1372*store1372;
extern int store_left1372;
extern fsoc*store_chunk1372;
extern gc1372*gc_free1372;
extern na_env na_env1374;
extern na_env na_env1375;
extern na_env na_env1376;
extern na_env na_env1377;
typedef struct B1378 gc1378;
struct B1378{T1378 object;union {void*flag;gc1378*next;} header;};
extern gc1378*store1378;
extern int store_left1378;
extern fsoc*store_chunk1378;
extern gc1378*gc_free1378;
typedef struct B1379 gc1379;
struct B1379{T1379 object;union {void*flag;gc1379*next;} header;};
extern gc1379*store1379;
extern int store_left1379;
extern fsoc*store_chunk1379;
extern gc1379*gc_free1379;
typedef struct B823 gc823;
struct B823{T823 object;union {void*flag;gc823*next;} header;};
extern gc823*store823;
extern int store_left823;
extern fsoc*store_chunk823;
extern gc823*gc_free823;
extern na_env na_env1380;
typedef struct B1381 gc1381;
struct B1381{T1381 object;union {void*flag;gc1381*next;} header;};
extern gc1381*store1381;
extern int store_left1381;
extern fsoc*store_chunk1381;
extern gc1381*gc_free1381;
typedef struct B1382 gc1382;
struct B1382{T1382 object;union {void*flag;gc1382*next;} header;};
extern gc1382*store1382;
extern int store_left1382;
extern fsoc*store_chunk1382;
extern gc1382*gc_free1382;
typedef struct B1384 gc1384;
struct B1384{T1384 object;union {void*flag;gc1384*next;} header;};
extern gc1384*store1384;
extern int store_left1384;
extern fsoc*store_chunk1384;
extern gc1384*gc_free1384;
typedef struct B1385 gc1385;
struct B1385{T1385 object;union {void*flag;gc1385*next;} header;};
extern gc1385*store1385;
extern int store_left1385;
extern fsoc*store_chunk1385;
extern gc1385*gc_free1385;
extern na_env na_env1386;
typedef struct B1387 gc1387;
struct B1387{T1387 object;union {void*flag;gc1387*next;} header;};
extern gc1387*store1387;
extern int store_left1387;
extern fsoc*store_chunk1387;
extern gc1387*gc_free1387;
typedef struct B1388 gc1388;
struct B1388{T1388 object;union {void*flag;gc1388*next;} header;};
extern gc1388*store1388;
extern int store_left1388;
extern fsoc*store_chunk1388;
extern gc1388*gc_free1388;
extern na_env na_env1389;
extern na_env na_env1390;
typedef struct B1392 gc1392;
struct B1392{T1392 object;union {void*flag;gc1392*next;} header;};
extern gc1392*store1392;
extern int store_left1392;
extern fsoc*store_chunk1392;
extern gc1392*gc_free1392;
typedef struct B1393 gc1393;
struct B1393{T1393 object;union {void*flag;gc1393*next;} header;};
extern gc1393*store1393;
extern int store_left1393;
extern fsoc*store_chunk1393;
extern gc1393*gc_free1393;
extern na_env na_env1394;
typedef struct B337 gc337;
struct B337{T337 object;union {void*flag;gc337*next;} header;};
extern gc337*store337;
extern int store_left337;
extern fsoc*store_chunk337;
extern gc337*gc_free337;
typedef struct B1395 gc1395;
struct B1395{T1395 object;union {void*flag;gc1395*next;} header;};
extern gc1395*store1395;
extern int store_left1395;
extern fsoc*store_chunk1395;
extern gc1395*gc_free1395;
typedef struct B1396 gc1396;
struct B1396{T1396 object;union {void*flag;gc1396*next;} header;};
extern gc1396*store1396;
extern int store_left1396;
extern fsoc*store_chunk1396;
extern gc1396*gc_free1396;
typedef struct B1397 gc1397;
struct B1397{T1397 object;union {void*flag;gc1397*next;} header;};
extern gc1397*store1397;
extern int store_left1397;
extern fsoc*store_chunk1397;
extern gc1397*gc_free1397;
typedef struct B1398 gc1398;
struct B1398{T1398 object;union {void*flag;gc1398*next;} header;};
extern gc1398*store1398;
extern int store_left1398;
extern fsoc*store_chunk1398;
extern gc1398*gc_free1398;
typedef struct B1400 gc1400;
struct B1400{T1400 object;union {void*flag;gc1400*next;} header;};
extern gc1400*store1400;
extern int store_left1400;
extern fsoc*store_chunk1400;
extern gc1400*gc_free1400;
extern na_env na_env1401;
typedef struct B1402 gc1402;
struct B1402{T1402 object;union {void*flag;gc1402*next;} header;};
extern gc1402*store1402;
extern int store_left1402;
extern fsoc*store_chunk1402;
extern gc1402*gc_free1402;
typedef struct B1403 gc1403;
struct B1403{T1403 object;union {void*flag;gc1403*next;} header;};
extern gc1403*store1403;
extern int store_left1403;
extern fsoc*store_chunk1403;
extern gc1403*gc_free1403;
extern na_env na_env1404;
typedef struct B1405 gc1405;
struct B1405{T1405 object;union {void*flag;gc1405*next;} header;};
extern gc1405*store1405;
extern int store_left1405;
extern fsoc*store_chunk1405;
extern gc1405*gc_free1405;
extern na_env na_env1406;
typedef struct B1409 gc1409;
struct B1409{T1409 object;union {void*flag;gc1409*next;} header;};
extern gc1409*store1409;
extern int store_left1409;
extern fsoc*store_chunk1409;
extern gc1409*gc_free1409;
typedef struct B1410 gc1410;
struct B1410{T1410 object;union {void*flag;gc1410*next;} header;};
extern gc1410*store1410;
extern int store_left1410;
extern fsoc*store_chunk1410;
extern gc1410*gc_free1410;
typedef struct B1411 gc1411;
struct B1411{T1411 object;union {void*flag;gc1411*next;} header;};
extern gc1411*store1411;
extern int store_left1411;
extern fsoc*store_chunk1411;
extern gc1411*gc_free1411;
typedef struct B1412 gc1412;
struct B1412{T1412 object;union {void*flag;gc1412*next;} header;};
extern gc1412*store1412;
extern int store_left1412;
extern fsoc*store_chunk1412;
extern gc1412*gc_free1412;
typedef struct B1413 gc1413;
struct B1413{T1413 object;union {void*flag;gc1413*next;} header;};
extern gc1413*store1413;
extern int store_left1413;
extern fsoc*store_chunk1413;
extern gc1413*gc_free1413;
typedef struct B1416 gc1416;
struct B1416{T1416 object;union {void*flag;gc1416*next;} header;};
extern gc1416*store1416;
extern int store_left1416;
extern fsoc*store_chunk1416;
extern gc1416*gc_free1416;
typedef struct B1417 gc1417;
struct B1417{T1417 object;union {void*flag;gc1417*next;} header;};
extern gc1417*store1417;
extern int store_left1417;
extern fsoc*store_chunk1417;
extern gc1417*gc_free1417;
typedef struct B1418 gc1418;
struct B1418{T1418 object;union {void*flag;gc1418*next;} header;};
extern gc1418*store1418;
extern int store_left1418;
extern fsoc*store_chunk1418;
extern gc1418*gc_free1418;
typedef struct B1419 gc1419;
struct B1419{T1419 object;union {void*flag;gc1419*next;} header;};
extern gc1419*store1419;
extern int store_left1419;
extern fsoc*store_chunk1419;
extern gc1419*gc_free1419;
extern na_env na_env1420;
extern na_env na_env1421;
typedef struct B1422 gc1422;
struct B1422{T1422 object;union {void*flag;gc1422*next;} header;};
extern gc1422*store1422;
extern int store_left1422;
extern fsoc*store_chunk1422;
extern gc1422*gc_free1422;
typedef struct B1423 gc1423;
struct B1423{T1423 object;union {void*flag;gc1423*next;} header;};
extern gc1423*store1423;
extern int store_left1423;
extern fsoc*store_chunk1423;
extern gc1423*gc_free1423;
extern na_env na_env1424;
typedef struct B60 gc60;
struct B60{T60 object;union {void*flag;gc60*next;} header;};
extern gc60*store60;
extern int store_left60;
extern fsoc*store_chunk60;
extern gc60*gc_free60;
typedef struct B775 gc775;
struct B775{T775 object;union {void*flag;gc775*next;} header;};
extern gc775*store775;
extern int store_left775;
extern fsoc*store_chunk775;
extern gc775*gc_free775;
typedef struct B660 gc660;
struct B660{T660 object;union {void*flag;gc660*next;} header;};
extern gc660*store660;
extern int store_left660;
extern fsoc*store_chunk660;
extern gc660*gc_free660;

#define gc_mark1427(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1429 gc1429;
struct B1429{T1429 object;union {void*flag;gc1429*next;} header;};
extern gc1429*store1429;
extern int store_left1429;
extern fsoc*store_chunk1429;
extern gc1429*gc_free1429;
typedef struct B1430 gc1430;
struct B1430{T1430 object;union {void*flag;gc1430*next;} header;};
extern gc1430*store1430;
extern int store_left1430;
extern fsoc*store_chunk1430;
extern gc1430*gc_free1430;
typedef struct B1431 gc1431;
struct B1431{T1431 object;union {void*flag;gc1431*next;} header;};
extern gc1431*store1431;
extern int store_left1431;
extern fsoc*store_chunk1431;
extern gc1431*gc_free1431;
typedef struct B1432 gc1432;
struct B1432{T1432 object;union {void*flag;gc1432*next;} header;};
extern gc1432*store1432;
extern int store_left1432;
extern fsoc*store_chunk1432;
extern gc1432*gc_free1432;
typedef struct B1434 gc1434;
struct B1434{T1434 object;union {void*flag;gc1434*next;} header;};
extern gc1434*store1434;
extern int store_left1434;
extern fsoc*store_chunk1434;
extern gc1434*gc_free1434;
typedef struct B1437 gc1437;
struct B1437{T1437 object;union {void*flag;gc1437*next;} header;};
extern gc1437*store1437;
extern int store_left1437;
extern fsoc*store_chunk1437;
extern gc1437*gc_free1437;
typedef struct B666 gc666;
struct B666{T666 object;union {void*flag;gc666*next;} header;};
extern gc666*store666;
extern int store_left666;
extern fsoc*store_chunk666;
extern gc666*gc_free666;
typedef struct B670 gc670;
struct B670{T670 object;union {void*flag;gc670*next;} header;};
extern gc670*store670;
extern int store_left670;
extern fsoc*store_chunk670;
extern gc670*gc_free670;
typedef struct B671 gc671;
struct B671{T671 object;union {void*flag;gc671*next;} header;};
extern gc671*store671;
extern int store_left671;
extern fsoc*store_chunk671;
extern gc671*gc_free671;
typedef struct B674 gc674;
struct B674{T674 object;union {void*flag;gc674*next;} header;};
extern gc674*store674;
extern int store_left674;
extern fsoc*store_chunk674;
extern gc674*gc_free674;
typedef struct B677 gc677;
struct B677{T677 object;union {void*flag;gc677*next;} header;};
extern gc677*store677;
extern int store_left677;
extern fsoc*store_chunk677;
extern gc677*gc_free677;
typedef struct B669 gc669;
struct B669{T669 object;union {void*flag;gc669*next;} header;};
extern gc669*store669;
extern int store_left669;
extern fsoc*store_chunk669;
extern gc669*gc_free669;
typedef struct B663 gc663;
struct B663{T663 object;union {void*flag;gc663*next;} header;};
extern gc663*store663;
extern int store_left663;
extern fsoc*store_chunk663;
extern gc663*gc_free663;
typedef struct B667 gc667;
struct B667{T667 object;union {void*flag;gc667*next;} header;};
extern gc667*store667;
extern int store_left667;
extern fsoc*store_chunk667;
extern gc667*gc_free667;
typedef struct B675 gc675;
struct B675{T675 object;union {void*flag;gc675*next;} header;};
extern gc675*store675;
extern int store_left675;
extern fsoc*store_chunk675;
extern gc675*gc_free675;
typedef struct B656 gc656;
struct B656{T656 object;union {void*flag;gc656*next;} header;};
extern gc656*store656;
extern int store_left656;
extern fsoc*store_chunk656;
extern gc656*gc_free656;
typedef struct B1438 gc1438;
struct B1438{T1438 object;union {void*flag;gc1438*next;} header;};
extern gc1438*store1438;
extern int store_left1438;
extern fsoc*store_chunk1438;
extern gc1438*gc_free1438;
typedef struct B1439 gc1439;
struct B1439{T1439 object;union {void*flag;gc1439*next;} header;};
extern gc1439*store1439;
extern int store_left1439;
extern fsoc*store_chunk1439;
extern gc1439*gc_free1439;
typedef struct B525 gc525;
struct B525{T525 object;union {void*flag;gc525*next;} header;};
extern gc525*store525;
extern int store_left525;
extern fsoc*store_chunk525;
extern gc525*gc_free525;
typedef struct B1440 gc1440;
struct B1440{T1440 object;union {void*flag;gc1440*next;} header;};
extern gc1440*store1440;
extern int store_left1440;
extern fsoc*store_chunk1440;
extern gc1440*gc_free1440;
typedef struct B679 gc679;
struct B679{T679 object;union {void*flag;gc679*next;} header;};
extern gc679*store679;
extern int store_left679;
extern fsoc*store_chunk679;
extern gc679*gc_free679;
typedef struct B665 gc665;
struct B665{T665 object;union {void*flag;gc665*next;} header;};
extern gc665*store665;
extern int store_left665;
extern fsoc*store_chunk665;
extern gc665*gc_free665;
typedef struct B661 gc661;
struct B661{T661 object;union {void*flag;gc661*next;} header;};
extern gc661*store661;
extern int store_left661;
extern fsoc*store_chunk661;
extern gc661*gc_free661;
typedef struct B1441 gc1441;
struct B1441{T1441 object;union {void*flag;gc1441*next;} header;};
extern gc1441*store1441;
extern int store_left1441;
extern fsoc*store_chunk1441;
extern gc1441*gc_free1441;
typedef struct B1442 gc1442;
struct B1442{T1442 object;union {void*flag;gc1442*next;} header;};
extern gc1442*store1442;
extern int store_left1442;
extern fsoc*store_chunk1442;
extern gc1442*gc_free1442;
typedef struct B1443 gc1443;
struct B1443{T1443 object;union {void*flag;gc1443*next;} header;};
extern gc1443*store1443;
extern int store_left1443;
extern fsoc*store_chunk1443;
extern gc1443*gc_free1443;
typedef struct B1444 gc1444;
struct B1444{T1444 object;union {void*flag;gc1444*next;} header;};
extern gc1444*store1444;
extern int store_left1444;
extern fsoc*store_chunk1444;
extern gc1444*gc_free1444;
typedef struct B1445 gc1445;
struct B1445{T1445 object;union {void*flag;gc1445*next;} header;};
extern gc1445*store1445;
extern int store_left1445;
extern fsoc*store_chunk1445;
extern gc1445*gc_free1445;
extern na_env na_env1446;
typedef struct B1451 gc1451;
struct B1451{T1451 object;union {void*flag;gc1451*next;} header;};
extern gc1451*store1451;
extern int store_left1451;
extern fsoc*store_chunk1451;
extern gc1451*gc_free1451;
typedef struct B528 gc528;
struct B528{T528 object;union {void*flag;gc528*next;} header;};
extern gc528*store528;
extern int store_left528;
extern fsoc*store_chunk528;
extern gc528*gc_free528;
typedef struct B123 gc123;
struct B123{T123 object;union {void*flag;gc123*next;} header;};
extern gc123*store123;
extern int store_left123;
extern fsoc*store_chunk123;
extern gc123*gc_free123;
typedef struct B734 gc734;
struct B734{T734 object;union {void*flag;gc734*next;} header;};
extern gc734*store734;
extern int store_left734;
extern fsoc*store_chunk734;
extern gc734*gc_free734;
typedef struct B739 gc739;
struct B739{T739 object;union {void*flag;gc739*next;} header;};
extern gc739*store739;
extern int store_left739;
extern fsoc*store_chunk739;
extern gc739*gc_free739;
typedef struct B117 gc117;
struct B117{T117 object;union {void*flag;gc117*next;} header;};
extern gc117*store117;
extern int store_left117;
extern fsoc*store_chunk117;
extern gc117*gc_free117;
typedef struct B1453 gc1453;
struct B1453{T1453 object;union {void*flag;gc1453*next;} header;};
extern gc1453*store1453;
extern int store_left1453;
extern fsoc*store_chunk1453;
extern gc1453*gc_free1453;
typedef struct B414 gc414;
struct B414{T414 object;union {void*flag;gc414*next;} header;};
extern gc414*store414;
extern int store_left414;
extern fsoc*store_chunk414;
extern gc414*gc_free414;
typedef struct B411 gc411;
struct B411{T411 object;union {void*flag;gc411*next;} header;};
extern gc411*store411;
extern int store_left411;
extern fsoc*store_chunk411;
extern gc411*gc_free411;
typedef struct B366 gc366;
struct B366{T366 object;union {void*flag;gc366*next;} header;};
extern gc366*store366;
extern int store_left366;
extern fsoc*store_chunk366;
extern gc366*gc_free366;
typedef struct B785 gc785;
struct B785{T785 object;union {void*flag;gc785*next;} header;};
extern gc785*store785;
extern int store_left785;
extern fsoc*store_chunk785;
extern gc785*gc_free785;
typedef struct B638 gc638;
struct B638{T638 object;union {void*flag;gc638*next;} header;};
extern gc638*store638;
extern int store_left638;
extern fsoc*store_chunk638;
extern gc638*gc_free638;
typedef struct B787 gc787;
struct B787{T787 object;union {void*flag;gc787*next;} header;};
extern gc787*store787;
extern int store_left787;
extern fsoc*store_chunk787;
extern gc787*gc_free787;
typedef struct B784 gc784;
struct B784{T784 object;union {void*flag;gc784*next;} header;};
extern gc784*store784;
extern int store_left784;
extern fsoc*store_chunk784;
extern gc784*gc_free784;
typedef struct B676 gc676;
struct B676{T676 object;union {void*flag;gc676*next;} header;};
extern gc676*store676;
extern int store_left676;
extern fsoc*store_chunk676;
extern gc676*gc_free676;
typedef struct B532 gc532;
struct B532{T532 object;union {void*flag;gc532*next;} header;};
extern gc532*store532;
extern int store_left532;
extern fsoc*store_chunk532;
extern gc532*gc_free532;
typedef struct B786 gc786;
struct B786{T786 object;union {void*flag;gc786*next;} header;};
extern gc786*store786;
extern int store_left786;
extern fsoc*store_chunk786;
extern gc786*gc_free786;
typedef struct B637 gc637;
struct B637{T637 object;union {void*flag;gc637*next;} header;};
extern gc637*store637;
extern int store_left637;
extern fsoc*store_chunk637;
extern gc637*gc_free637;
typedef struct B1454 gc1454;
struct B1454{T1454 object;union {void*flag;gc1454*next;} header;};
extern gc1454*store1454;
extern int store_left1454;
extern fsoc*store_chunk1454;
extern gc1454*gc_free1454;
typedef struct B825 gc825;
struct B825{T825 object;union {void*flag;gc825*next;} header;};
extern gc825*store825;
extern int store_left825;
extern fsoc*store_chunk825;
extern gc825*gc_free825;
typedef struct B827 gc827;
struct B827{T827 object;union {void*flag;gc827*next;} header;};
extern gc827*store827;
extern int store_left827;
extern fsoc*store_chunk827;
extern gc827*gc_free827;
typedef struct B828 gc828;
struct B828{T828 object;union {void*flag;gc828*next;} header;};
extern gc828*store828;
extern int store_left828;
extern fsoc*store_chunk828;
extern gc828*gc_free828;
typedef struct B829 gc829;
struct B829{T829 object;union {void*flag;gc829*next;} header;};
extern gc829*store829;
extern int store_left829;
extern fsoc*store_chunk829;
extern gc829*gc_free829;
typedef struct B1455 gc1455;
struct B1455{T1455 object;union {void*flag;gc1455*next;} header;};
extern gc1455*store1455;
extern int store_left1455;
extern fsoc*store_chunk1455;
extern gc1455*gc_free1455;
extern na_env na_env1456;
typedef struct B1457 gc1457;
struct B1457{T1457 object;union {void*flag;gc1457*next;} header;};
extern gc1457*store1457;
extern int store_left1457;
extern fsoc*store_chunk1457;
extern gc1457*gc_free1457;
typedef struct B1458 gc1458;
struct B1458{T1458 object;union {void*flag;gc1458*next;} header;};
extern gc1458*store1458;
extern int store_left1458;
extern fsoc*store_chunk1458;
extern gc1458*gc_free1458;
extern na_env na_env1459;
typedef struct B1460 gc1460;
struct B1460{T1460 object;union {void*flag;gc1460*next;} header;};
extern gc1460*store1460;
extern int store_left1460;
extern fsoc*store_chunk1460;
extern gc1460*gc_free1460;
extern na_env na_env1461;
typedef struct B1462 gc1462;
struct B1462{T1462 object;union {void*flag;gc1462*next;} header;};
extern gc1462*store1462;
extern int store_left1462;
extern fsoc*store_chunk1462;
extern gc1462*gc_free1462;
typedef struct B1463 gc1463;
struct B1463{T1463 object;union {void*flag;gc1463*next;} header;};
extern gc1463*store1463;
extern int store_left1463;
extern fsoc*store_chunk1463;
extern gc1463*gc_free1463;
typedef struct B1464 gc1464;
struct B1464{T1464 object;union {void*flag;gc1464*next;} header;};
extern gc1464*store1464;
extern int store_left1464;
extern fsoc*store_chunk1464;
extern gc1464*gc_free1464;
typedef struct B1465 gc1465;
struct B1465{T1465 object;union {void*flag;gc1465*next;} header;};
extern gc1465*store1465;
extern int store_left1465;
extern fsoc*store_chunk1465;
extern gc1465*gc_free1465;
extern na_env na_env1466;
typedef struct B1467 gc1467;
struct B1467{T1467 object;union {void*flag;gc1467*next;} header;};
extern gc1467*store1467;
extern int store_left1467;
extern fsoc*store_chunk1467;
extern gc1467*gc_free1467;
typedef struct B1468 gc1468;
struct B1468{T1468 object;union {void*flag;gc1468*next;} header;};
extern gc1468*store1468;
extern int store_left1468;
extern fsoc*store_chunk1468;
extern gc1468*gc_free1468;
extern na_env na_env1469;
typedef struct B1470 gc1470;
struct B1470{T1470 object;union {void*flag;gc1470*next;} header;};
extern gc1470*store1470;
extern int store_left1470;
extern fsoc*store_chunk1470;
extern gc1470*gc_free1470;
typedef struct B1471 gc1471;
struct B1471{T1471 object;union {void*flag;gc1471*next;} header;};
extern gc1471*store1471;
extern int store_left1471;
extern fsoc*store_chunk1471;
extern gc1471*gc_free1471;
typedef struct B1472 gc1472;
struct B1472{T1472 object;union {void*flag;gc1472*next;} header;};
extern gc1472*store1472;
extern int store_left1472;
extern fsoc*store_chunk1472;
extern gc1472*gc_free1472;
extern na_env na_env1473;
typedef struct B672 gc672;
struct B672{T672 object;union {void*flag;gc672*next;} header;};
extern gc672*store672;
extern int store_left672;
extern fsoc*store_chunk672;
extern gc672*gc_free672;
extern na_env na_env1474;
extern na_env na_env1475;
typedef struct B704 gc704;
struct B704{T704 object;union {void*flag;gc704*next;} header;};
extern gc704*store704;
extern int store_left704;
extern fsoc*store_chunk704;
extern gc704*gc_free704;
extern na_env na_env1476;
typedef struct B1477 gc1477;
struct B1477{T1477 object;union {void*flag;gc1477*next;} header;};
extern gc1477*store1477;
extern int store_left1477;
extern fsoc*store_chunk1477;
extern gc1477*gc_free1477;
typedef struct B1478 gc1478;
struct B1478{T1478 object;union {void*flag;gc1478*next;} header;};
extern gc1478*store1478;
extern int store_left1478;
extern fsoc*store_chunk1478;
extern gc1478*gc_free1478;
extern na_env na_env1479;
extern na_env na_env1480;
extern na_env na_env1481;
extern na_env na_env1482;
typedef struct B980 gc980;
struct B980{T980 object;union {void*flag;gc980*next;} header;};
extern gc980*store980;
extern int store_left980;
extern fsoc*store_chunk980;
extern gc980*gc_free980;
typedef struct B634 gc634;
struct B634{T634 object;union {void*flag;gc634*next;} header;};
extern gc634*store634;
extern int store_left634;
extern fsoc*store_chunk634;
extern gc634*gc_free634;
typedef struct B558 gc558;
struct B558{T558 object;union {void*flag;gc558*next;} header;};
extern gc558*store558;
extern int store_left558;
extern fsoc*store_chunk558;
extern gc558*gc_free558;

#define gc_mark1484(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1486(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1487(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1489(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1491(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1493(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1495 gc1495;
struct B1495{T1495 object;union {void*flag;gc1495*next;} header;};
extern gc1495*store1495;
extern int store_left1495;
extern fsoc*store_chunk1495;
extern gc1495*gc_free1495;
typedef struct B1496 gc1496;
struct B1496{T1496 object;union {void*flag;gc1496*next;} header;};
extern gc1496*store1496;
extern int store_left1496;
extern fsoc*store_chunk1496;
extern gc1496*gc_free1496;
typedef struct B552 gc552;
struct B552{T552 object;union {void*flag;gc552*next;} header;};
extern gc552*store552;
extern int store_left552;
extern fsoc*store_chunk552;
extern gc552*gc_free552;
typedef struct B553 gc553;
struct B553{T553 object;union {void*flag;gc553*next;} header;};
extern gc553*store553;
extern int store_left553;
extern fsoc*store_chunk553;
extern gc553*gc_free553;
typedef struct B554 gc554;
struct B554{T554 object;union {void*flag;gc554*next;} header;};
extern gc554*store554;
extern int store_left554;
extern fsoc*store_chunk554;
extern gc554*gc_free554;
typedef struct B555 gc555;
struct B555{T555 object;union {void*flag;gc555*next;} header;};
extern gc555*store555;
extern int store_left555;
extern fsoc*store_chunk555;
extern gc555*gc_free555;
typedef struct B556 gc556;
struct B556{T556 object;union {void*flag;gc556*next;} header;};
extern gc556*store556;
extern int store_left556;
extern fsoc*store_chunk556;
extern gc556*gc_free556;
typedef struct B557 gc557;
struct B557{T557 object;union {void*flag;gc557*next;} header;};
extern gc557*store557;
extern int store_left557;
extern fsoc*store_chunk557;
extern gc557*gc_free557;

#define gc_mark1499(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1502 gc1502;
struct B1502{T1502 object;union {void*flag;gc1502*next;} header;};
extern gc1502*store1502;
extern int store_left1502;
extern fsoc*store_chunk1502;
extern gc1502*gc_free1502;
typedef struct B1506 gc1506;
struct B1506{T1506 object;union {void*flag;gc1506*next;} header;};
extern gc1506*store1506;
extern int store_left1506;
extern fsoc*store_chunk1506;
extern gc1506*gc_free1506;
typedef struct B799 gc799;
struct B799{T799 object;union {void*flag;gc799*next;} header;};
extern gc799*store799;
extern int store_left799;
extern fsoc*store_chunk799;
extern gc799*gc_free799;
typedef struct B1508 gc1508;
struct B1508{T1508 object;union {void*flag;gc1508*next;} header;};
extern gc1508*store1508;
extern int store_left1508;
extern fsoc*store_chunk1508;
extern gc1508*gc_free1508;

#define gc_mark1509(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B796 gc796;
struct B796{T796 object;union {void*flag;gc796*next;} header;};
extern gc796*store796;
extern int store_left796;
extern fsoc*store_chunk796;
extern gc796*gc_free796;
typedef struct B1514 gc1514;
struct B1514{T1514 object;union {void*flag;gc1514*next;} header;};
extern gc1514*store1514;
extern int store_left1514;
extern fsoc*store_chunk1514;
extern gc1514*gc_free1514;
typedef struct B1515 gc1515;
struct B1515{T1515 object;union {void*flag;gc1515*next;} header;};
extern gc1515*store1515;
extern int store_left1515;
extern fsoc*store_chunk1515;
extern gc1515*gc_free1515;
typedef struct B709 gc709;
struct B709{T709 object;union {void*flag;gc709*next;} header;};
extern gc709*store709;
extern int store_left709;
extern fsoc*store_chunk709;
extern gc709*gc_free709;
typedef struct B1516 gc1516;
struct B1516{T1516 object;union {void*flag;gc1516*next;} header;};
extern gc1516*store1516;
extern int store_left1516;
extern fsoc*store_chunk1516;
extern gc1516*gc_free1516;
extern na_env na_env1517;
extern na_env na_env1518;
extern na_env na_env1519;
typedef struct B1520 gc1520;
struct B1520{T1520 object;union {void*flag;gc1520*next;} header;};
extern gc1520*store1520;
extern int store_left1520;
extern fsoc*store_chunk1520;
extern gc1520*gc_free1520;
typedef struct B1521 gc1521;
struct B1521{T1521 object;union {void*flag;gc1521*next;} header;};
extern gc1521*store1521;
extern int store_left1521;
extern fsoc*store_chunk1521;
extern gc1521*gc_free1521;
extern na_env na_env1522;
typedef struct B1523 gc1523;
struct B1523{T1523 object;union {void*flag;gc1523*next;} header;};
extern gc1523*store1523;
extern int store_left1523;
extern fsoc*store_chunk1523;
extern gc1523*gc_free1523;
extern na_env na_env1524;
typedef struct B706 gc706;
struct B706{T706 object;union {void*flag;gc706*next;} header;};
extern gc706*store706;
extern int store_left706;
extern fsoc*store_chunk706;
extern gc706*gc_free706;
extern na_env na_env1525;
extern na_env na_env1526;
typedef struct B1527 gc1527;
struct B1527{T1527 object;union {void*flag;gc1527*next;} header;};
extern gc1527*store1527;
extern int store_left1527;
extern fsoc*store_chunk1527;
extern gc1527*gc_free1527;
typedef struct B1528 gc1528;
struct B1528{T1528 object;union {void*flag;gc1528*next;} header;};
extern gc1528*store1528;
extern int store_left1528;
extern fsoc*store_chunk1528;
extern gc1528*gc_free1528;

#define gc_mark1530(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1533(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1536(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1538(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1541 gc1541;
struct B1541{T1541 object;union {void*flag;gc1541*next;} header;};
extern gc1541*store1541;
extern int store_left1541;
extern fsoc*store_chunk1541;
extern gc1541*gc_free1541;
typedef struct B783 gc783;
struct B783{T783 object;union {void*flag;gc783*next;} header;};
extern gc783*store783;
extern int store_left783;
extern fsoc*store_chunk783;
extern gc783*gc_free783;
typedef struct B1542 gc1542;
struct B1542{T1542 object;union {void*flag;gc1542*next;} header;};
extern gc1542*store1542;
extern int store_left1542;
extern fsoc*store_chunk1542;
extern gc1542*gc_free1542;
typedef struct B781 gc781;
struct B781{T781 object;union {void*flag;gc781*next;} header;};
extern gc781*store781;
extern int store_left781;
extern fsoc*store_chunk781;
extern gc781*gc_free781;
typedef struct B1545 gc1545;
struct B1545{T1545 object;union {void*flag;gc1545*next;} header;};
extern gc1545*store1545;
extern int store_left1545;
extern fsoc*store_chunk1545;
extern gc1545*gc_free1545;
extern na_env na_env1546;
typedef struct B1547 gc1547;
struct B1547{T1547 object;union {void*flag;gc1547*next;} header;};
extern gc1547*store1547;
extern int store_left1547;
extern fsoc*store_chunk1547;
extern gc1547*gc_free1547;
typedef struct B1548 gc1548;
struct B1548{T1548 object;union {void*flag;gc1548*next;} header;};
extern gc1548*store1548;
extern int store_left1548;
extern fsoc*store_chunk1548;
extern gc1548*gc_free1548;
void gc_sweep29(fsoc*c);
void gc_mark29(T29*o);
void gc_align_mark29(fsoc*c,gc29*p);
extern fsoc H29;
T29*new29(void);
void gc_sweep108(fsoc*c);
void gc_mark108(T108*o);
void gc_align_mark108(fsoc*c,gc108*p);
extern fsoc H108;
T108*new108(void);
void gc_sweep979(fsoc*c);
void gc_mark979(T979*o);
void gc_align_mark979(fsoc*c,gc979*p);
extern fsoc H979;
T979*new979(void);
void gc_sweep100(fsoc*c);
void gc_mark100(T100*o);
void gc_align_mark100(fsoc*c,gc100*p);
extern fsoc H100;
T100*new100(void);
void gc_sweep121(fsoc*c);
void gc_mark121(T121*o);
void gc_align_mark121(fsoc*c,gc121*p);
extern fsoc H121;
T121*new121(void);
void gc_sweep274(fsoc*c);
void gc_mark274(T274*o);
void gc_align_mark274(fsoc*c,gc274*p);
extern fsoc H274;
T274*new274(void);
void gc_sweep112(fsoc*c);
void gc_mark112(T112*o);
void gc_align_mark112(fsoc*c,gc112*p);
extern fsoc H112;
T112*new112(void);
void gc_sweep107(fsoc*c);
void gc_mark107(T107*o);
void gc_align_mark107(fsoc*c,gc107*p);
extern fsoc H107;
T107*new107(void);
void gc_sweep282(fsoc*c);
void gc_mark282(T282*o);
void gc_align_mark282(fsoc*c,gc282*p);
extern fsoc H282;
T282*new282(void);
void gc_sweep272(fsoc*c);
void gc_mark272(T272*o);
void gc_align_mark272(fsoc*c,gc272*p);
extern fsoc H272;
T272*new272(void);
void gc_sweep7(fsoc*c);
void gc_mark7(T7*o);
void gc_align_mark7(fsoc*c,gc7*p);
extern fsoc H7;
T7*new7(void);
void gc_mark9(T9 o);
T9 new9(unsigned int size);
void gc_sweep621(fsoc*c);
void gc_mark621(T621*o);
void gc_align_mark621(fsoc*c,gc621*p);
extern fsoc H621;
T621*new621(void);
void gc_sweep1008(fsoc*c);
void gc_mark1008(T1008*o);
void gc_align_mark1008(fsoc*c,gc1008*p);
extern fsoc H1008;
T1008*new1008(void);
void gc_sweep84(fsoc*c);
void gc_mark84(T84*o);
void gc_align_mark84(fsoc*c,gc84*p);
extern fsoc H84;
T84*new84(void);
void gc_sweep1009(fsoc*c);
void gc_mark1009(T1009*o);
void gc_align_mark1009(fsoc*c,gc1009*p);
extern fsoc H1009;
T1009*new1009(void);
void gc_sweep284(fsoc*c);
void gc_mark284(T284*o);
void gc_align_mark284(fsoc*c,gc284*p);
extern fsoc H284;
T284*new284(void);
void gc_sweep77(fsoc*c);
void gc_mark77(T77*o);
void gc_align_mark77(fsoc*c,gc77*p);
extern fsoc H77;
T77*new77(void);
void gc_sweep1010(fsoc*c);
void gc_mark1010(T1010*o);
void gc_align_mark1010(fsoc*c,gc1010*p);
extern fsoc H1010;
T1010*new1010(void);
void gc_sweep537(fsoc*c);
void gc_mark537(T537*o);
void gc_align_mark537(fsoc*c,gc537*p);
extern fsoc H537;
T537*new537(void);
void gc_sweep541(fsoc*c);
void gc_mark541(T541*o);
void gc_align_mark541(fsoc*c,gc541*p);
extern fsoc H541;
T541*new541(void);
void gc_sweep542(fsoc*c);
void gc_mark542(T542*o);
void gc_align_mark542(fsoc*c,gc542*p);
extern fsoc H542;
T542*new542(void);
void gc_sweep543(fsoc*c);
void gc_mark543(T543*o);
void gc_align_mark543(fsoc*c,gc543*p);
extern fsoc H543;
T543*new543(void);
void gc_sweep544(fsoc*c);
void gc_mark544(T544*o);
void gc_align_mark544(fsoc*c,gc544*p);
extern fsoc H544;
T544*new544(void);
void gc_sweep545(fsoc*c);
void gc_mark545(T545*o);
void gc_align_mark545(fsoc*c,gc545*p);
extern fsoc H545;
T545*new545(void);
void gc_sweep1011(fsoc*c);
void gc_mark1011(T1011*o);
void gc_align_mark1011(fsoc*c,gc1011*p);
extern fsoc H1011;
T1011*new1011(void);
void gc_sweep1012(fsoc*c);
void gc_mark1012(T1012*o);
void gc_align_mark1012(fsoc*c,gc1012*p);
extern fsoc H1012;
T1012*new1012(void);
void gc_sweep98(fsoc*c);
void gc_mark98(T98*o);
void gc_align_mark98(fsoc*c,gc98*p);
extern fsoc H98;
T98*new98(void);
void gc_sweep536(fsoc*c);
void gc_mark536(T536*o);
void gc_align_mark536(fsoc*c,gc536*p);
extern fsoc H536;
T536*new536(void);
void gc_sweep452(fsoc*c);
void gc_mark452(T452*o);
void gc_align_mark452(fsoc*c,gc452*p);
extern fsoc H452;
T452*new452(void);
void gc_sweep451(fsoc*c);
void gc_mark451(T451*o);
void gc_align_mark451(fsoc*c,gc451*p);
extern fsoc H451;
T451*new451(void);
void gc_sweep641(fsoc*c);
void gc_mark641(T641*o);
void gc_align_mark641(fsoc*c,gc641*p);
extern fsoc H641;
T641*new641(void);
void gc_sweep80(fsoc*c);
void gc_mark80(T80*o);
void gc_align_mark80(fsoc*c,gc80*p);
extern fsoc H80;
T80*new80(void);
void gc_sweep68(fsoc*c);
void gc_mark68(T68*o);
void gc_align_mark68(fsoc*c,gc68*p);
extern fsoc H68;
T68*new68(void);
void gc_sweep1013(fsoc*c);
void gc_mark1013(T1013*o);
void gc_align_mark1013(fsoc*c,gc1013*p);
extern fsoc H1013;
T1013*new1013(void);
void gc_sweep103(fsoc*c);
void gc_mark103(T103*o);
void gc_align_mark103(fsoc*c,gc103*p);
extern fsoc H103;
T103*new103(void);
void gc_sweep118(fsoc*c);
void gc_mark118(T118*o);
void gc_align_mark118(fsoc*c,gc118*p);
extern fsoc H118;
T118*new118(void);
void gc_sweep684(fsoc*c);
void gc_mark684(T684*o);
void gc_align_mark684(fsoc*c,gc684*p);
extern fsoc H684;
T684*new684(void);
void gc_sweep688(fsoc*c);
void gc_mark688(T688*o);
void gc_align_mark688(fsoc*c,gc688*p);
extern fsoc H688;
T688*new688(void);
void gc_sweep686(fsoc*c);
void gc_mark686(T686*o);
void gc_align_mark686(fsoc*c,gc686*p);
extern fsoc H686;
T686*new686(void);
void gc_sweep546(fsoc*c);
void gc_mark546(T546*o);
void gc_align_mark546(fsoc*c,gc546*p);
extern fsoc H546;
T546*new546(void);
void gc_sweep680(fsoc*c);
void gc_mark680(T680*o);
void gc_align_mark680(fsoc*c,gc680*p);
extern fsoc H680;
T680*new680(void);
void gc_sweep420(fsoc*c);
void gc_mark420(T420*o);
void gc_align_mark420(fsoc*c,gc420*p);
extern fsoc H420;
T420*new420(void);
void gc_sweep1014(fsoc*c);
void gc_mark1014(T1014*o);
void gc_align_mark1014(fsoc*c,gc1014*p);
extern fsoc H1014;
T1014*new1014(void);
void gc_sweep319(fsoc*c);
void gc_mark319(T319*o);
void gc_align_mark319(fsoc*c,gc319*p);
extern fsoc H319;
T319*new319(void);
void gc_sweep1015(fsoc*c);
void gc_mark1015(T1015*o);
void gc_align_mark1015(fsoc*c,gc1015*p);
extern fsoc H1015;
T1015*new1015(void);
void gc_sweep432(fsoc*c);
void gc_mark432(T432*o);
void gc_align_mark432(fsoc*c,gc432*p);
extern fsoc H432;
T432*new432(void);
void gc_mark758(T758*o);
void gc_sweep565(fsoc*c);
void gc_mark565(T565*o);
void gc_align_mark565(fsoc*c,gc565*p);
extern fsoc H565;
T565*new565(void);
void gc_sweep596(fsoc*c);
void gc_mark596(T596*o);
void gc_align_mark596(fsoc*c,gc596*p);
extern fsoc H596;
T596*new596(void);
void gc_sweep597(fsoc*c);
void gc_mark597(T597*o);
void gc_align_mark597(fsoc*c,gc597*p);
extern fsoc H597;
T597*new597(void);
void gc_sweep598(fsoc*c);
void gc_mark598(T598*o);
void gc_align_mark598(fsoc*c,gc598*p);
extern fsoc H598;
T598*new598(void);
void gc_sweep599(fsoc*c);
void gc_mark599(T599*o);
void gc_align_mark599(fsoc*c,gc599*p);
extern fsoc H599;
T599*new599(void);
void gc_sweep611(fsoc*c);
void gc_mark611(T611*o);
void gc_align_mark611(fsoc*c,gc611*p);
extern fsoc H611;
T611*new611(void);
void gc_sweep612(fsoc*c);
void gc_mark612(T612*o);
void gc_align_mark612(fsoc*c,gc612*p);
extern fsoc H612;
T612*new612(void);
void gc_sweep613(fsoc*c);
void gc_mark613(T613*o);
void gc_align_mark613(fsoc*c,gc613*p);
extern fsoc H613;
T613*new613(void);
void gc_sweep615(fsoc*c);
void gc_mark615(T615*o);
void gc_align_mark615(fsoc*c,gc615*p);
extern fsoc H615;
T615*new615(void);
void gc_sweep616(fsoc*c);
void gc_mark616(T616*o);
void gc_align_mark616(fsoc*c,gc616*p);
extern fsoc H616;
T616*new616(void);
void gc_sweep620(fsoc*c);
void gc_mark620(T620*o);
void gc_align_mark620(fsoc*c,gc620*p);
extern fsoc H620;
T620*new620(void);
void gc_sweep622(fsoc*c);
void gc_mark622(T622*o);
void gc_align_mark622(fsoc*c,gc622*p);
extern fsoc H622;
T622*new622(void);
void gc_sweep623(fsoc*c);
void gc_mark623(T623*o);
void gc_align_mark623(fsoc*c,gc623*p);
extern fsoc H623;
T623*new623(void);
void gc_sweep624(fsoc*c);
void gc_mark624(T624*o);
void gc_align_mark624(fsoc*c,gc624*p);
extern fsoc H624;
T624*new624(void);
void gc_sweep625(fsoc*c);
void gc_mark625(T625*o);
void gc_align_mark625(fsoc*c,gc625*p);
extern fsoc H625;
T625*new625(void);
void gc_sweep626(fsoc*c);
void gc_mark626(T626*o);
void gc_align_mark626(fsoc*c,gc626*p);
extern fsoc H626;
T626*new626(void);
void gc_sweep627(fsoc*c);
void gc_mark627(T627*o);
void gc_align_mark627(fsoc*c,gc627*p);
extern fsoc H627;
T627*new627(void);
void gc_sweep629(fsoc*c);
void gc_mark629(T629*o);
void gc_align_mark629(fsoc*c,gc629*p);
extern fsoc H629;
T629*new629(void);
void gc_sweep628(fsoc*c);
void gc_mark628(T628*o);
void gc_align_mark628(fsoc*c,gc628*p);
extern fsoc H628;
T628*new628(void);
void gc_sweep630(fsoc*c);
void gc_mark630(T630*o);
void gc_align_mark630(fsoc*c,gc630*p);
extern fsoc H630;
T630*new630(void);
void gc_sweep631(fsoc*c);
void gc_mark631(T631*o);
void gc_align_mark631(fsoc*c,gc631*p);
extern fsoc H631;
T631*new631(void);
void gc_sweep632(fsoc*c);
void gc_mark632(T632*o);
void gc_align_mark632(fsoc*c,gc632*p);
extern fsoc H632;
T632*new632(void);
void gc_sweep1016(fsoc*c);
void gc_mark1016(T1016*o);
void gc_align_mark1016(fsoc*c,gc1016*p);
extern fsoc H1016;
T1016*new1016(void);
void gc_sweep633(fsoc*c);
void gc_mark633(T633*o);
void gc_align_mark633(fsoc*c,gc633*p);
extern fsoc H633;
T633*new633(void);
void gc_sweep1017(fsoc*c);
void gc_mark1017(T1017*o);
void gc_align_mark1017(fsoc*c,gc1017*p);
extern fsoc H1017;
T1017*new1017(void);
void gc_sweep1018(fsoc*c);
void gc_mark1018(T1018*o);
void gc_align_mark1018(fsoc*c,gc1018*p);
extern fsoc H1018;
T1018*new1018(void);
void gc_sweep368(fsoc*c);
void gc_mark368(T368*o);
void gc_align_mark368(fsoc*c,gc368*p);
extern fsoc H368;
T368*new368(void);
void gc_sweep93(fsoc*c);
void gc_mark93(T93*o);
void gc_align_mark93(fsoc*c,gc93*p);
extern fsoc H93;
T93*new93(void);
void gc_sweep95(fsoc*c);
void gc_mark95(T95*o);
void gc_align_mark95(fsoc*c,gc95*p);
extern fsoc H95;
T95*new95(void);
void gc_sweep1019(fsoc*c);
void gc_mark1019(T1019*o);
void gc_align_mark1019(fsoc*c,gc1019*p);
extern fsoc H1019;
T1019*new1019(void);
void gc_sweep1020(fsoc*c);
void gc_mark1020(T1020*o);
void gc_align_mark1020(fsoc*c,gc1020*p);
extern fsoc H1020;
T1020*new1020(void);
void gc_sweep1021(fsoc*c);
void gc_mark1021(T1021*o);
void gc_align_mark1021(fsoc*c,gc1021*p);
extern fsoc H1021;
T1021*new1021(void);
void gc_sweep277(fsoc*c);
void gc_mark277(T277*o);
void gc_align_mark277(fsoc*c,gc277*p);
extern fsoc H277;
T277*new277(void);
void gc_sweep87(fsoc*c);
void gc_mark87(T87*o);
void gc_align_mark87(fsoc*c,gc87*p);
extern fsoc H87;
T87*new87(void);
void gc_sweep533(fsoc*c);
void gc_mark533(T533*o);
void gc_align_mark533(fsoc*c,gc533*p);
extern fsoc H533;
T533*new533(void);
void gc_sweep1023(fsoc*c);
void gc_mark1023(T1023*o);
void gc_align_mark1023(fsoc*c,gc1023*p);
extern fsoc H1023;
T1023*new1023(void);
void gc_sweep328(fsoc*c);
void gc_mark328(T328*o);
void gc_align_mark328(fsoc*c,gc328*p);
extern fsoc H328;
T328*new328(void);
void gc_sweep106(fsoc*c);
void gc_mark106(T106*o);
void gc_align_mark106(fsoc*c,gc106*p);
extern fsoc H106;
T106*new106(void);
void gc_sweep104(fsoc*c);
void gc_mark104(T104*o);
void gc_align_mark104(fsoc*c,gc104*p);
extern fsoc H104;
T104*new104(void);
void gc_sweep111(fsoc*c);
void gc_mark111(T111*o);
void gc_align_mark111(fsoc*c,gc111*p);
extern fsoc H111;
T111*new111(void);
void gc_sweep120(fsoc*c);
void gc_mark120(T120*o);
void gc_align_mark120(fsoc*c,gc120*p);
extern fsoc H120;
T120*new120(void);
void gc_sweep119(fsoc*c);
void gc_mark119(T119*o);
void gc_align_mark119(fsoc*c,gc119*p);
extern fsoc H119;
T119*new119(void);
void gc_sweep122(fsoc*c);
void gc_mark122(T122*o);
void gc_align_mark122(fsoc*c,gc122*p);
extern fsoc H122;
T122*new122(void);
void gc_sweep89(fsoc*c);
void gc_mark89(T89*o);
void gc_align_mark89(fsoc*c,gc89*p);
extern fsoc H89;
T89*new89(void);
void gc_sweep439(fsoc*c);
void gc_mark439(T439*o);
void gc_align_mark439(fsoc*c,gc439*p);
extern fsoc H439;
T439*new439(void);
void gc_sweep1025(fsoc*c);
void gc_mark1025(T1025*o);
void gc_align_mark1025(fsoc*c,gc1025*p);
extern fsoc H1025;
T1025*new1025(void);
void gc_sweep1026(fsoc*c);
void gc_mark1026(T1026*o);
void gc_align_mark1026(fsoc*c,gc1026*p);
extern fsoc H1026;
T1026*new1026(void);
void gc_sweep115(fsoc*c);
void gc_mark115(T115*o);
void gc_align_mark115(fsoc*c,gc115*p);
extern fsoc H115;
T115*new115(void);
void gc_sweep424(fsoc*c);
void gc_mark424(T424*o);
void gc_align_mark424(fsoc*c,gc424*p);
extern fsoc H424;
T424*new424(void);
void gc_sweep1029(fsoc*c);
void gc_mark1029(T1029*o);
void gc_align_mark1029(fsoc*c,gc1029*p);
extern fsoc H1029;
T1029*new1029(void);
void gc_sweep1030(fsoc*c);
void gc_mark1030(T1030*o);
void gc_align_mark1030(fsoc*c,gc1030*p);
extern fsoc H1030;
T1030*new1030(void);
void gc_sweep1031(fsoc*c);
void gc_mark1031(T1031*o);
void gc_align_mark1031(fsoc*c,gc1031*p);
extern fsoc H1031;
T1031*new1031(void);
void gc_sweep790(fsoc*c);
void gc_mark790(T790*o);
void gc_align_mark790(fsoc*c,gc790*p);
extern fsoc H790;
T790*new790(void);
void gc_sweep792(fsoc*c);
void gc_mark792(T792*o);
void gc_align_mark792(fsoc*c,gc792*p);
extern fsoc H792;
T792*new792(void);
void gc_sweep793(fsoc*c);
void gc_mark793(T793*o);
void gc_align_mark793(fsoc*c,gc793*p);
extern fsoc H793;
T793*new793(void);
void gc_sweep794(fsoc*c);
void gc_mark794(T794*o);
void gc_align_mark794(fsoc*c,gc794*p);
extern fsoc H794;
T794*new794(void);
void gc_sweep795(fsoc*c);
void gc_mark795(T795*o);
void gc_align_mark795(fsoc*c,gc795*p);
extern fsoc H795;
T795*new795(void);
void gc_mark1033(T1033 o);
T1033 new1033(unsigned int size);
void gc_sweep327(fsoc*c);
void gc_mark327(T327*o);
void gc_align_mark327(fsoc*c,gc327*p);
extern fsoc H327;
T327*new327(void);
void gc_sweep1035(fsoc*c);
void gc_mark1035(T1035*o);
void gc_align_mark1035(fsoc*c,gc1035*p);
extern fsoc H1035;
T1035*new1035(void);
void gc_sweep1036(fsoc*c);
void gc_mark1036(T1036*o);
void gc_align_mark1036(fsoc*c,gc1036*p);
extern fsoc H1036;
T1036*new1036(void);
void gc_sweep777(fsoc*c);
void gc_mark777(T777*o);
void gc_align_mark777(fsoc*c,gc777*p);
extern fsoc H777;
T777*new777(void);
void gc_sweep779(fsoc*c);
void gc_mark779(T779*o);
void gc_align_mark779(fsoc*c,gc779*p);
extern fsoc H779;
T779*new779(void);
void gc_sweep778(fsoc*c);
void gc_mark778(T778*o);
void gc_align_mark778(fsoc*c,gc778*p);
extern fsoc H778;
T778*new778(void);
void gc_sweep1040(fsoc*c);
void gc_mark1040(T1040*o);
void gc_align_mark1040(fsoc*c,gc1040*p);
extern fsoc H1040;
T1040*new1040(void);
void gc_sweep1041(fsoc*c);
void gc_mark1041(T1041*o);
void gc_align_mark1041(fsoc*c,gc1041*p);
extern fsoc H1041;
T1041*new1041(void);
void gc_sweep58(fsoc*c);
void gc_mark58(T58*o);
void gc_align_mark58(fsoc*c,gc58*p);
extern fsoc H58;
T58*new58(void);
void gc_sweep1042(fsoc*c);
void gc_mark1042(T1042*o);
void gc_align_mark1042(fsoc*c,gc1042*p);
extern fsoc H1042;
T1042*new1042(void);
void gc_sweep1043(fsoc*c);
void gc_mark1043(T1043*o);
void gc_align_mark1043(fsoc*c,gc1043*p);
extern fsoc H1043;
T1043*new1043(void);
void gc_sweep293(fsoc*c);
void gc_mark293(T293*o);
void gc_align_mark293(fsoc*c,gc293*p);
extern fsoc H293;
T293*new293(void);
void gc_sweep1044(fsoc*c);
void gc_mark1044(T1044*o);
void gc_align_mark1044(fsoc*c,gc1044*p);
extern fsoc H1044;
T1044*new1044(void);
void gc_sweep1047(fsoc*c);
void gc_update_weak_ref_item1047(T1047* wr);
void gc_mark1047(T1047*o);
void gc_align_mark1047(fsoc*c,gc1047*p);
extern fsoc H1047;
T1047*new1047(void);
void gc_mark1048(T1048 o);
T1048 new1048(unsigned int size);
void gc_sweep1049(fsoc*c);
void gc_update_weak_ref_item1049(T1049* wr);
void gc_mark1049(T1049*o);
void gc_align_mark1049(fsoc*c,gc1049*p);
extern fsoc H1049;
T1049*new1049(void);
void gc_sweep1050(fsoc*c);
void gc_mark1050(T1050*o);
void gc_align_mark1050(fsoc*c,gc1050*p);
extern fsoc H1050;
T1050*new1050(void);
void gc_sweep1051(fsoc*c);
void gc_mark1051(T1051*o);
void gc_align_mark1051(fsoc*c,gc1051*p);
extern fsoc H1051;
T1051*new1051(void);
void gc_sweep1052(fsoc*c);
void gc_mark1052(T1052*o);
void gc_align_mark1052(fsoc*c,gc1052*p);
extern fsoc H1052;
T1052*new1052(void);
void gc_sweep281(fsoc*c);
void gc_mark281(T281*o);
void gc_align_mark281(fsoc*c,gc281*p);
extern fsoc H281;
T281*new281(void);
void gc_mark1053(T1053 o);
T1053 new1053(unsigned int size);
void gc_sweep1056(fsoc*c);
void gc_mark1056(T1056*o);
void gc_align_mark1056(fsoc*c,gc1056*p);
extern fsoc H1056;
T1056*new1056(void);
void gc_sweep102(fsoc*c);
void gc_mark102(T102*o);
void gc_align_mark102(fsoc*c,gc102*p);
extern fsoc H102;
T102*new102(void);
void gc_mark1057(T1057 o);
T1057 new1057(unsigned int size);
void gc_mark1058(T1058 o);
T1058 new1058(unsigned int size);
void gc_sweep1059(fsoc*c);
void gc_mark1059(T1059*o);
void gc_align_mark1059(fsoc*c,gc1059*p);
extern fsoc H1059;
T1059*new1059(void);
void gc_sweep751(fsoc*c);
void gc_mark751(T751*o);
void gc_align_mark751(fsoc*c,gc751*p);
extern fsoc H751;
T751*new751(void);
void gc_sweep797(fsoc*c);
void gc_mark797(T797*o);
void gc_align_mark797(fsoc*c,gc797*p);
extern fsoc H797;
T797*new797(void);
void gc_sweep1061(fsoc*c);
void gc_mark1061(T1061*o);
void gc_align_mark1061(fsoc*c,gc1061*p);
extern fsoc H1061;
T1061*new1061(void);
void gc_mark1062(T1062 o);
T1062 new1062(unsigned int size);
void gc_sweep1063(fsoc*c);
void gc_mark1063(T1063*o);
void gc_align_mark1063(fsoc*c,gc1063*p);
extern fsoc H1063;
T1063*new1063(void);
void gc_sweep1065(fsoc*c);
void gc_mark1065(T1065*o);
void gc_align_mark1065(fsoc*c,gc1065*p);
extern fsoc H1065;
T1065*new1065(void);
void gc_sweep1067(fsoc*c);
void gc_mark1067(T1067*o);
void gc_align_mark1067(fsoc*c,gc1067*p);
extern fsoc H1067;
T1067*new1067(void);
void gc_sweep753(fsoc*c);
void gc_mark753(T753*o);
void gc_align_mark753(fsoc*c,gc753*p);
extern fsoc H753;
T753*new753(void);
void gc_sweep1070(fsoc*c);
void gc_mark1070(T1070*o);
void gc_align_mark1070(fsoc*c,gc1070*p);
extern fsoc H1070;
T1070*new1070(void);
void gc_sweep449(fsoc*c);
void gc_mark449(T449*o);
void gc_align_mark449(fsoc*c,gc449*p);
extern fsoc H449;
T449*new449(void);
void gc_sweep429(fsoc*c);
void gc_mark429(T429*o);
void gc_align_mark429(fsoc*c,gc429*p);
extern fsoc H429;
T429*new429(void);
void gc_sweep380(fsoc*c);
void gc_mark380(T380*o);
void gc_align_mark380(fsoc*c,gc380*p);
extern fsoc H380;
T380*new380(void);
void gc_sweep422(fsoc*c);
void gc_mark422(T422*o);
void gc_align_mark422(fsoc*c,gc422*p);
extern fsoc H422;
T422*new422(void);
void gc_sweep423(fsoc*c);
void gc_mark423(T423*o);
void gc_align_mark423(fsoc*c,gc423*p);
extern fsoc H423;
T423*new423(void);
void gc_sweep485(fsoc*c);
void gc_mark485(T485*o);
void gc_align_mark485(fsoc*c,gc485*p);
extern fsoc H485;
T485*new485(void);
void gc_sweep495(fsoc*c);
void gc_mark495(T495*o);
void gc_align_mark495(fsoc*c,gc495*p);
extern fsoc H495;
T495*new495(void);
void gc_sweep497(fsoc*c);
void gc_mark497(T497*o);
void gc_align_mark497(fsoc*c,gc497*p);
extern fsoc H497;
T497*new497(void);
void gc_sweep354(fsoc*c);
void gc_mark354(T354*o);
void gc_align_mark354(fsoc*c,gc354*p);
extern fsoc H354;
T354*new354(void);
void gc_sweep116(fsoc*c);
void gc_mark116(T116*o);
void gc_align_mark116(fsoc*c,gc116*p);
extern fsoc H116;
T116*new116(void);
void gc_sweep498(fsoc*c);
void gc_mark498(T498*o);
void gc_align_mark498(fsoc*c,gc498*p);
extern fsoc H498;
T498*new498(void);
void gc_sweep445(fsoc*c);
void gc_mark445(T445*o);
void gc_align_mark445(fsoc*c,gc445*p);
extern fsoc H445;
T445*new445(void);
void gc_sweep408(fsoc*c);
void gc_mark408(T408*o);
void gc_align_mark408(fsoc*c,gc408*p);
extern fsoc H408;
T408*new408(void);
void gc_sweep381(fsoc*c);
void gc_mark381(T381*o);
void gc_align_mark381(fsoc*c,gc381*p);
extern fsoc H381;
T381*new381(void);
void gc_sweep437(fsoc*c);
void gc_mark437(T437*o);
void gc_align_mark437(fsoc*c,gc437*p);
extern fsoc H437;
T437*new437(void);
void gc_sweep407(fsoc*c);
void gc_mark407(T407*o);
void gc_align_mark407(fsoc*c,gc407*p);
extern fsoc H407;
T407*new407(void);
void gc_sweep435(fsoc*c);
void gc_mark435(T435*o);
void gc_align_mark435(fsoc*c,gc435*p);
extern fsoc H435;
T435*new435(void);
void gc_sweep403(fsoc*c);
void gc_mark403(T403*o);
void gc_align_mark403(fsoc*c,gc403*p);
extern fsoc H403;
T403*new403(void);
void gc_sweep438(fsoc*c);
void gc_mark438(T438*o);
void gc_align_mark438(fsoc*c,gc438*p);
extern fsoc H438;
T438*new438(void);
void gc_sweep436(fsoc*c);
void gc_mark436(T436*o);
void gc_align_mark436(fsoc*c,gc436*p);
extern fsoc H436;
T436*new436(void);
void gc_sweep442(fsoc*c);
void gc_mark442(T442*o);
void gc_align_mark442(fsoc*c,gc442*p);
extern fsoc H442;
T442*new442(void);
void gc_sweep440(fsoc*c);
void gc_mark440(T440*o);
void gc_align_mark440(fsoc*c,gc440*p);
extern fsoc H440;
T440*new440(void);
void gc_sweep443(fsoc*c);
void gc_mark443(T443*o);
void gc_align_mark443(fsoc*c,gc443*p);
extern fsoc H443;
T443*new443(void);
void gc_sweep446(fsoc*c);
void gc_mark446(T446*o);
void gc_align_mark446(fsoc*c,gc446*p);
extern fsoc H446;
T446*new446(void);
void gc_sweep273(fsoc*c);
void gc_mark273(T273*o);
void gc_align_mark273(fsoc*c,gc273*p);
extern fsoc H273;
T273*new273(void);
void gc_sweep467(fsoc*c);
void gc_mark467(T467*o);
void gc_align_mark467(fsoc*c,gc467*p);
extern fsoc H467;
T467*new467(void);
void gc_sweep469(fsoc*c);
void gc_mark469(T469*o);
void gc_align_mark469(fsoc*c,gc469*p);
extern fsoc H469;
T469*new469(void);
void gc_sweep470(fsoc*c);
void gc_mark470(T470*o);
void gc_align_mark470(fsoc*c,gc470*p);
extern fsoc H470;
T470*new470(void);
void gc_sweep471(fsoc*c);
void gc_mark471(T471*o);
void gc_align_mark471(fsoc*c,gc471*p);
extern fsoc H471;
T471*new471(void);
void gc_sweep421(fsoc*c);
void gc_mark421(T421*o);
void gc_align_mark421(fsoc*c,gc421*p);
extern fsoc H421;
T421*new421(void);
void gc_sweep1071(fsoc*c);
void gc_mark1071(T1071*o);
void gc_align_mark1071(fsoc*c,gc1071*p);
extern fsoc H1071;
T1071*new1071(void);
void gc_sweep280(fsoc*c);
void gc_mark280(T280*o);
void gc_align_mark280(fsoc*c,gc280*p);
extern fsoc H280;
T280*new280(void);
void gc_sweep478(fsoc*c);
void gc_mark478(T478*o);
void gc_align_mark478(fsoc*c,gc478*p);
extern fsoc H478;
T478*new478(void);
void gc_sweep1072(fsoc*c);
void gc_mark1072(T1072*o);
void gc_align_mark1072(fsoc*c,gc1072*p);
extern fsoc H1072;
T1072*new1072(void);
void gc_sweep519(fsoc*c);
void gc_mark519(T519*o);
void gc_align_mark519(fsoc*c,gc519*p);
extern fsoc H519;
T519*new519(void);
void gc_sweep487(fsoc*c);
void gc_mark487(T487*o);
void gc_align_mark487(fsoc*c,gc487*p);
extern fsoc H487;
T487*new487(void);
void gc_sweep401(fsoc*c);
void gc_mark401(T401*o);
void gc_align_mark401(fsoc*c,gc401*p);
extern fsoc H401;
T401*new401(void);
void gc_sweep474(fsoc*c);
void gc_mark474(T474*o);
void gc_align_mark474(fsoc*c,gc474*p);
extern fsoc H474;
T474*new474(void);
void gc_sweep371(fsoc*c);
void gc_mark371(T371*o);
void gc_align_mark371(fsoc*c,gc371*p);
extern fsoc H371;
T371*new371(void);
void gc_sweep475(fsoc*c);
void gc_mark475(T475*o);
void gc_align_mark475(fsoc*c,gc475*p);
extern fsoc H475;
T475*new475(void);
void gc_sweep476(fsoc*c);
void gc_mark476(T476*o);
void gc_align_mark476(fsoc*c,gc476*p);
extern fsoc H476;
T476*new476(void);
void gc_sweep339(fsoc*c);
void gc_mark339(T339*o);
void gc_align_mark339(fsoc*c,gc339*p);
extern fsoc H339;
T339*new339(void);
void gc_sweep348(fsoc*c);
void gc_mark348(T348*o);
void gc_align_mark348(fsoc*c,gc348*p);
extern fsoc H348;
T348*new348(void);
void gc_sweep351(fsoc*c);
void gc_mark351(T351*o);
void gc_align_mark351(fsoc*c,gc351*p);
extern fsoc H351;
T351*new351(void);
void gc_sweep353(fsoc*c);
void gc_mark353(T353*o);
void gc_align_mark353(fsoc*c,gc353*p);
extern fsoc H353;
T353*new353(void);
void gc_sweep342(fsoc*c);
void gc_mark342(T342*o);
void gc_align_mark342(fsoc*c,gc342*p);
extern fsoc H342;
T342*new342(void);
void gc_sweep346(fsoc*c);
void gc_mark346(T346*o);
void gc_align_mark346(fsoc*c,gc346*p);
extern fsoc H346;
T346*new346(void);
void gc_sweep347(fsoc*c);
void gc_mark347(T347*o);
void gc_align_mark347(fsoc*c,gc347*p);
extern fsoc H347;
T347*new347(void);
void gc_sweep489(fsoc*c);
void gc_mark489(T489*o);
void gc_align_mark489(fsoc*c,gc489*p);
extern fsoc H489;
T489*new489(void);
void gc_sweep490(fsoc*c);
void gc_mark490(T490*o);
void gc_align_mark490(fsoc*c,gc490*p);
extern fsoc H490;
T490*new490(void);
void gc_sweep491(fsoc*c);
void gc_mark491(T491*o);
void gc_align_mark491(fsoc*c,gc491*p);
extern fsoc H491;
T491*new491(void);
void gc_sweep480(fsoc*c);
void gc_mark480(T480*o);
void gc_align_mark480(fsoc*c,gc480*p);
extern fsoc H480;
T480*new480(void);
void gc_sweep385(fsoc*c);
void gc_mark385(T385*o);
void gc_align_mark385(fsoc*c,gc385*p);
extern fsoc H385;
T385*new385(void);
void gc_sweep456(fsoc*c);
void gc_mark456(T456*o);
void gc_align_mark456(fsoc*c,gc456*p);
extern fsoc H456;
T456*new456(void);
void gc_sweep462(fsoc*c);
void gc_mark462(T462*o);
void gc_align_mark462(fsoc*c,gc462*p);
extern fsoc H462;
T462*new462(void);
void gc_sweep481(fsoc*c);
void gc_mark481(T481*o);
void gc_align_mark481(fsoc*c,gc481*p);
extern fsoc H481;
T481*new481(void);
void gc_sweep516(fsoc*c);
void gc_mark516(T516*o);
void gc_align_mark516(fsoc*c,gc516*p);
extern fsoc H516;
T516*new516(void);
void gc_sweep517(fsoc*c);
void gc_mark517(T517*o);
void gc_align_mark517(fsoc*c,gc517*p);
extern fsoc H517;
T517*new517(void);
void gc_sweep1073(fsoc*c);
void gc_mark1073(T1073*o);
void gc_align_mark1073(fsoc*c,gc1073*p);
extern fsoc H1073;
T1073*new1073(void);
void gc_sweep1074(fsoc*c);
void gc_mark1074(T1074*o);
void gc_align_mark1074(fsoc*c,gc1074*p);
extern fsoc H1074;
T1074*new1074(void);
void gc_sweep453(fsoc*c);
void gc_mark453(T453*o);
void gc_align_mark453(fsoc*c,gc453*p);
extern fsoc H453;
T453*new453(void);
void gc_sweep454(fsoc*c);
void gc_mark454(T454*o);
void gc_align_mark454(fsoc*c,gc454*p);
extern fsoc H454;
T454*new454(void);
void gc_sweep1075(fsoc*c);
void gc_mark1075(T1075*o);
void gc_align_mark1075(fsoc*c,gc1075*p);
extern fsoc H1075;
T1075*new1075(void);
void gc_sweep391(fsoc*c);
void gc_mark391(T391*o);
void gc_align_mark391(fsoc*c,gc391*p);
extern fsoc H391;
T391*new391(void);
void gc_sweep1076(fsoc*c);
void gc_mark1076(T1076*o);
void gc_align_mark1076(fsoc*c,gc1076*p);
extern fsoc H1076;
T1076*new1076(void);
void gc_sweep664(fsoc*c);
void gc_mark664(T664*o);
void gc_align_mark664(fsoc*c,gc664*p);
extern fsoc H664;
T664*new664(void);
void gc_sweep1077(fsoc*c);
void gc_mark1077(T1077*o);
void gc_align_mark1077(fsoc*c,gc1077*p);
extern fsoc H1077;
T1077*new1077(void);
void gc_sweep418(fsoc*c);
void gc_mark418(T418*o);
void gc_align_mark418(fsoc*c,gc418*p);
extern fsoc H418;
T418*new418(void);
void gc_sweep388(fsoc*c);
void gc_mark388(T388*o);
void gc_align_mark388(fsoc*c,gc388*p);
extern fsoc H388;
T388*new388(void);
void gc_sweep1078(fsoc*c);
void gc_mark1078(T1078*o);
void gc_align_mark1078(fsoc*c,gc1078*p);
extern fsoc H1078;
T1078*new1078(void);
void gc_sweep392(fsoc*c);
void gc_mark392(T392*o);
void gc_align_mark392(fsoc*c,gc392*p);
extern fsoc H392;
T392*new392(void);
void gc_sweep448(fsoc*c);
void gc_mark448(T448*o);
void gc_align_mark448(fsoc*c,gc448*p);
extern fsoc H448;
T448*new448(void);
void gc_sweep518(fsoc*c);
void gc_mark518(T518*o);
void gc_align_mark518(fsoc*c,gc518*p);
extern fsoc H518;
T518*new518(void);
void gc_sweep1079(fsoc*c);
void gc_mark1079(T1079*o);
void gc_align_mark1079(fsoc*c,gc1079*p);
extern fsoc H1079;
T1079*new1079(void);
void gc_sweep477(fsoc*c);
void gc_mark477(T477*o);
void gc_align_mark477(fsoc*c,gc477*p);
extern fsoc H477;
T477*new477(void);
void gc_sweep412(fsoc*c);
void gc_mark412(T412*o);
void gc_align_mark412(fsoc*c,gc412*p);
extern fsoc H412;
T412*new412(void);
void gc_sweep398(fsoc*c);
void gc_mark398(T398*o);
void gc_align_mark398(fsoc*c,gc398*p);
extern fsoc H398;
T398*new398(void);
void gc_sweep1080(fsoc*c);
void gc_mark1080(T1080*o);
void gc_align_mark1080(fsoc*c,gc1080*p);
extern fsoc H1080;
T1080*new1080(void);
void gc_sweep357(fsoc*c);
void gc_mark357(T357*o);
void gc_align_mark357(fsoc*c,gc357*p);
extern fsoc H357;
T357*new357(void);
void gc_sweep369(fsoc*c);
void gc_mark369(T369*o);
void gc_align_mark369(fsoc*c,gc369*p);
extern fsoc H369;
T369*new369(void);
void gc_sweep362(fsoc*c);
void gc_mark362(T362*o);
void gc_align_mark362(fsoc*c,gc362*p);
extern fsoc H362;
T362*new362(void);
void gc_sweep479(fsoc*c);
void gc_mark479(T479*o);
void gc_align_mark479(fsoc*c,gc479*p);
extern fsoc H479;
T479*new479(void);
void gc_sweep426(fsoc*c);
void gc_mark426(T426*o);
void gc_align_mark426(fsoc*c,gc426*p);
extern fsoc H426;
T426*new426(void);
void gc_sweep465(fsoc*c);
void gc_mark465(T465*o);
void gc_align_mark465(fsoc*c,gc465*p);
extern fsoc H465;
T465*new465(void);
void gc_sweep466(fsoc*c);
void gc_mark466(T466*o);
void gc_align_mark466(fsoc*c,gc466*p);
extern fsoc H466;
T466*new466(void);
void gc_sweep364(fsoc*c);
void gc_mark364(T364*o);
void gc_align_mark364(fsoc*c,gc364*p);
extern fsoc H364;
T364*new364(void);
void gc_sweep404(fsoc*c);
void gc_mark404(T404*o);
void gc_align_mark404(fsoc*c,gc404*p);
extern fsoc H404;
T404*new404(void);
void gc_sweep463(fsoc*c);
void gc_mark463(T463*o);
void gc_align_mark463(fsoc*c,gc463*p);
extern fsoc H463;
T463*new463(void);
void gc_sweep494(fsoc*c);
void gc_mark494(T494*o);
void gc_align_mark494(fsoc*c,gc494*p);
extern fsoc H494;
T494*new494(void);
void gc_sweep484(fsoc*c);
void gc_mark484(T484*o);
void gc_align_mark484(fsoc*c,gc484*p);
extern fsoc H484;
T484*new484(void);
void gc_sweep367(fsoc*c);
void gc_mark367(T367*o);
void gc_align_mark367(fsoc*c,gc367*p);
extern fsoc H367;
T367*new367(void);
void gc_sweep394(fsoc*c);
void gc_mark394(T394*o);
void gc_align_mark394(fsoc*c,gc394*p);
extern fsoc H394;
T394*new394(void);
void gc_sweep464(fsoc*c);
void gc_mark464(T464*o);
void gc_align_mark464(fsoc*c,gc464*p);
extern fsoc H464;
T464*new464(void);
void gc_sweep459(fsoc*c);
void gc_mark459(T459*o);
void gc_align_mark459(fsoc*c,gc459*p);
extern fsoc H459;
T459*new459(void);
void gc_sweep395(fsoc*c);
void gc_mark395(T395*o);
void gc_align_mark395(fsoc*c,gc395*p);
extern fsoc H395;
T395*new395(void);
void gc_sweep659(fsoc*c);
void gc_mark659(T659*o);
void gc_align_mark659(fsoc*c,gc659*p);
extern fsoc H659;
T659*new659(void);
void gc_sweep483(fsoc*c);
void gc_mark483(T483*o);
void gc_align_mark483(fsoc*c,gc483*p);
extern fsoc H483;
T483*new483(void);
void gc_sweep457(fsoc*c);
void gc_mark457(T457*o);
void gc_align_mark457(fsoc*c,gc457*p);
extern fsoc H457;
T457*new457(void);
void gc_sweep396(fsoc*c);
void gc_mark396(T396*o);
void gc_align_mark396(fsoc*c,gc396*p);
extern fsoc H396;
T396*new396(void);
void gc_sweep492(fsoc*c);
void gc_mark492(T492*o);
void gc_align_mark492(fsoc*c,gc492*p);
extern fsoc H492;
T492*new492(void);
void gc_sweep515(fsoc*c);
void gc_mark515(T515*o);
void gc_align_mark515(fsoc*c,gc515*p);
extern fsoc H515;
T515*new515(void);
void gc_sweep514(fsoc*c);
void gc_mark514(T514*o);
void gc_align_mark514(fsoc*c,gc514*p);
extern fsoc H514;
T514*new514(void);
void gc_sweep510(fsoc*c);
void gc_mark510(T510*o);
void gc_align_mark510(fsoc*c,gc510*p);
extern fsoc H510;
T510*new510(void);
void gc_sweep511(fsoc*c);
void gc_mark511(T511*o);
void gc_align_mark511(fsoc*c,gc511*p);
extern fsoc H511;
T511*new511(void);
void gc_sweep512(fsoc*c);
void gc_mark512(T512*o);
void gc_align_mark512(fsoc*c,gc512*p);
extern fsoc H512;
T512*new512(void);
void gc_sweep513(fsoc*c);
void gc_mark513(T513*o);
void gc_align_mark513(fsoc*c,gc513*p);
extern fsoc H513;
T513*new513(void);
void gc_sweep509(fsoc*c);
void gc_mark509(T509*o);
void gc_align_mark509(fsoc*c,gc509*p);
extern fsoc H509;
T509*new509(void);
void gc_sweep374(fsoc*c);
void gc_mark374(T374*o);
void gc_align_mark374(fsoc*c,gc374*p);
extern fsoc H374;
T374*new374(void);
void gc_sweep397(fsoc*c);
void gc_mark397(T397*o);
void gc_align_mark397(fsoc*c,gc397*p);
extern fsoc H397;
T397*new397(void);
void gc_sweep505(fsoc*c);
void gc_mark505(T505*o);
void gc_align_mark505(fsoc*c,gc505*p);
extern fsoc H505;
T505*new505(void);
void gc_sweep506(fsoc*c);
void gc_mark506(T506*o);
void gc_align_mark506(fsoc*c,gc506*p);
extern fsoc H506;
T506*new506(void);
void gc_sweep507(fsoc*c);
void gc_mark507(T507*o);
void gc_align_mark507(fsoc*c,gc507*p);
extern fsoc H507;
T507*new507(void);
void gc_sweep508(fsoc*c);
void gc_mark508(T508*o);
void gc_align_mark508(fsoc*c,gc508*p);
extern fsoc H508;
T508*new508(void);
void gc_sweep402(fsoc*c);
void gc_mark402(T402*o);
void gc_align_mark402(fsoc*c,gc402*p);
extern fsoc H402;
T402*new402(void);
void gc_sweep504(fsoc*c);
void gc_mark504(T504*o);
void gc_align_mark504(fsoc*c,gc504*p);
extern fsoc H504;
T504*new504(void);
void gc_sweep501(fsoc*c);
void gc_mark501(T501*o);
void gc_align_mark501(fsoc*c,gc501*p);
extern fsoc H501;
T501*new501(void);
void gc_sweep502(fsoc*c);
void gc_mark502(T502*o);
void gc_align_mark502(fsoc*c,gc502*p);
extern fsoc H502;
T502*new502(void);
void gc_sweep503(fsoc*c);
void gc_mark503(T503*o);
void gc_align_mark503(fsoc*c,gc503*p);
extern fsoc H503;
T503*new503(void);
void gc_sweep500(fsoc*c);
void gc_mark500(T500*o);
void gc_align_mark500(fsoc*c,gc500*p);
extern fsoc H500;
T500*new500(void);
void gc_sweep458(fsoc*c);
void gc_mark458(T458*o);
void gc_align_mark458(fsoc*c,gc458*p);
extern fsoc H458;
T458*new458(void);
void gc_sweep499(fsoc*c);
void gc_mark499(T499*o);
void gc_align_mark499(fsoc*c,gc499*p);
extern fsoc H499;
T499*new499(void);
void gc_sweep493(fsoc*c);
void gc_mark493(T493*o);
void gc_align_mark493(fsoc*c,gc493*p);
extern fsoc H493;
T493*new493(void);
void gc_sweep283(fsoc*c);
void gc_mark283(T283*o);
void gc_align_mark283(fsoc*c,gc283*p);
extern fsoc H283;
T283*new283(void);
void gc_sweep461(fsoc*c);
void gc_mark461(T461*o);
void gc_align_mark461(fsoc*c,gc461*p);
extern fsoc H461;
T461*new461(void);
void gc_sweep460(fsoc*c);
void gc_mark460(T460*o);
void gc_align_mark460(fsoc*c,gc460*p);
extern fsoc H460;
T460*new460(void);
void gc_sweep1081(fsoc*c);
void gc_mark1081(T1081*o);
void gc_align_mark1081(fsoc*c,gc1081*p);
extern fsoc H1081;
T1081*new1081(void);
void gc_sweep419(fsoc*c);
void gc_mark419(T419*o);
void gc_align_mark419(fsoc*c,gc419*p);
extern fsoc H419;
T419*new419(void);
void gc_sweep431(fsoc*c);
void gc_mark431(T431*o);
void gc_align_mark431(fsoc*c,gc431*p);
extern fsoc H431;
T431*new431(void);
void gc_sweep752(fsoc*c);
void gc_mark752(T752*o);
void gc_align_mark752(fsoc*c,gc752*p);
extern fsoc H752;
T752*new752(void);
void gc_sweep455(fsoc*c);
void gc_mark455(T455*o);
void gc_align_mark455(fsoc*c,gc455*p);
extern fsoc H455;
T455*new455(void);
void gc_sweep358(fsoc*c);
void gc_mark358(T358*o);
void gc_align_mark358(fsoc*c,gc358*p);
extern fsoc H358;
T358*new358(void);
void gc_sweep410(fsoc*c);
void gc_mark410(T410*o);
void gc_align_mark410(fsoc*c,gc410*p);
extern fsoc H410;
T410*new410(void);
void gc_sweep393(fsoc*c);
void gc_mark393(T393*o);
void gc_align_mark393(fsoc*c,gc393*p);
extern fsoc H393;
T393*new393(void);
void gc_sweep1082(fsoc*c);
void gc_mark1082(T1082*o);
void gc_align_mark1082(fsoc*c,gc1082*p);
extern fsoc H1082;
T1082*new1082(void);
void gc_sweep1083(fsoc*c);
void gc_mark1083(T1083*o);
void gc_align_mark1083(fsoc*c,gc1083*p);
extern fsoc H1083;
T1083*new1083(void);
void gc_sweep1084(fsoc*c);
void gc_update_weak_ref_item1084(T1084* wr);
void gc_mark1084(T1084*o);
void gc_align_mark1084(fsoc*c,gc1084*p);
extern fsoc H1084;
T1084*new1084(void);
void gc_sweep1085(fsoc*c);
void gc_mark1085(T1085*o);
void gc_align_mark1085(fsoc*c,gc1085*p);
extern fsoc H1085;
T1085*new1085(void);
void gc_mark1086(T1086 o);
T1086 new1086(unsigned int size);
void gc_mark1087(T1087 o);
T1087 new1087(unsigned int size);
void gc_mark1088(T1088 o);
T1088 new1088(unsigned int size);
void gc_sweep1089(fsoc*c);
void gc_mark1089(T1089*o);
void gc_align_mark1089(fsoc*c,gc1089*p);
extern fsoc H1089;
T1089*new1089(void);
void gc_sweep531(fsoc*c);
void gc_mark531(T531*o);
void gc_align_mark531(fsoc*c,gc531*p);
extern fsoc H531;
T531*new531(void);
void gc_sweep1090(fsoc*c);
void gc_mark1090(T1090*o);
void gc_align_mark1090(fsoc*c,gc1090*p);
extern fsoc H1090;
T1090*new1090(void);
void gc_sweep1092(fsoc*c);
void gc_mark1092(T1092*o);
void gc_align_mark1092(fsoc*c,gc1092*p);
extern fsoc H1092;
T1092*new1092(void);
void gc_sweep433(fsoc*c);
void gc_mark433(T433*o);
void gc_align_mark433(fsoc*c,gc433*p);
extern fsoc H433;
T433*new433(void);
void gc_sweep425(fsoc*c);
void gc_mark425(T425*o);
void gc_align_mark425(fsoc*c,gc425*p);
extern fsoc H425;
T425*new425(void);
void gc_sweep1098(fsoc*c);
void gc_mark1098(T1098*o);
void gc_align_mark1098(fsoc*c,gc1098*p);
extern fsoc H1098;
T1098*new1098(void);
void gc_sweep1099(fsoc*c);
void gc_mark1099(T1099*o);
void gc_align_mark1099(fsoc*c,gc1099*p);
extern fsoc H1099;
T1099*new1099(void);
void gc_sweep450(fsoc*c);
void gc_mark450(T450*o);
void gc_align_mark450(fsoc*c,gc450*p);
extern fsoc H450;
T450*new450(void);
void gc_sweep430(fsoc*c);
void gc_mark430(T430*o);
void gc_align_mark430(fsoc*c,gc430*p);
extern fsoc H430;
T430*new430(void);
void gc_sweep447(fsoc*c);
void gc_mark447(T447*o);
void gc_align_mark447(fsoc*c,gc447*p);
extern fsoc H447;
T447*new447(void);
void gc_sweep1100(fsoc*c);
void gc_mark1100(T1100*o);
void gc_align_mark1100(fsoc*c,gc1100*p);
extern fsoc H1100;
T1100*new1100(void);
void gc_sweep428(fsoc*c);
void gc_mark428(T428*o);
void gc_align_mark428(fsoc*c,gc428*p);
extern fsoc H428;
T428*new428(void);
void gc_sweep1101(fsoc*c);
void gc_mark1101(T1101*o);
void gc_align_mark1101(fsoc*c,gc1101*p);
extern fsoc H1101;
T1101*new1101(void);
void gc_mark1102(T1102 o);
T1102 new1102(unsigned int size);
void gc_sweep1103(fsoc*c);
void gc_update_weak_ref_item1103(T1103* wr);
void gc_mark1103(T1103*o);
void gc_align_mark1103(fsoc*c,gc1103*p);
extern fsoc H1103;
T1103*new1103(void);
void gc_sweep1104(fsoc*c);
void gc_mark1104(T1104*o);
void gc_align_mark1104(fsoc*c,gc1104*p);
extern fsoc H1104;
T1104*new1104(void);
void gc_mark1105(T1105 o);
T1105 new1105(unsigned int size);
void gc_sweep1106(fsoc*c);
void gc_update_weak_ref_item1106(T1106* wr);
void gc_mark1106(T1106*o);
void gc_align_mark1106(fsoc*c,gc1106*p);
extern fsoc H1106;
T1106*new1106(void);
void gc_mark1107(T1107 o);
T1107 new1107(unsigned int size);
void gc_sweep1108(fsoc*c);
void gc_mark1108(T1108*o);
void gc_align_mark1108(fsoc*c,gc1108*p);
extern fsoc H1108;
T1108*new1108(void);
void gc_sweep1111(fsoc*c);
void gc_mark1111(T1111*o);
void gc_align_mark1111(fsoc*c,gc1111*p);
extern fsoc H1111;
T1111*new1111(void);
void gc_sweep1112(fsoc*c);
void gc_mark1112(T1112*o);
void gc_align_mark1112(fsoc*c,gc1112*p);
extern fsoc H1112;
T1112*new1112(void);
void gc_sweep1115(fsoc*c);
void gc_mark1115(T1115*o);
void gc_align_mark1115(fsoc*c,gc1115*p);
extern fsoc H1115;
T1115*new1115(void);
void gc_sweep1116(fsoc*c);
void gc_mark1116(T1116*o);
void gc_align_mark1116(fsoc*c,gc1116*p);
extern fsoc H1116;
T1116*new1116(void);
void gc_sweep1117(fsoc*c);
void gc_mark1117(T1117*o);
void gc_align_mark1117(fsoc*c,gc1117*p);
extern fsoc H1117;
T1117*new1117(void);
void gc_sweep1118(fsoc*c);
void gc_mark1118(T1118*o);
void gc_align_mark1118(fsoc*c,gc1118*p);
extern fsoc H1118;
T1118*new1118(void);
void gc_sweep1119(fsoc*c);
void gc_mark1119(T1119*o);
void gc_align_mark1119(fsoc*c,gc1119*p);
extern fsoc H1119;
T1119*new1119(void);
void gc_sweep1120(fsoc*c);
void gc_mark1120(T1120*o);
void gc_align_mark1120(fsoc*c,gc1120*p);
extern fsoc H1120;
T1120*new1120(void);
void gc_sweep524(fsoc*c);
void gc_mark524(T524*o);
void gc_align_mark524(fsoc*c,gc524*p);
extern fsoc H524;
T524*new524(void);
void gc_sweep1122(fsoc*c);
void gc_mark1122(T1122*o);
void gc_align_mark1122(fsoc*c,gc1122*p);
extern fsoc H1122;
T1122*new1122(void);
void gc_sweep1126(fsoc*c);
void gc_mark1126(T1126*o);
void gc_align_mark1126(fsoc*c,gc1126*p);
extern fsoc H1126;
T1126*new1126(void);
void gc_sweep1127(fsoc*c);
void gc_mark1127(T1127*o);
void gc_align_mark1127(fsoc*c,gc1127*p);
extern fsoc H1127;
T1127*new1127(void);
void gc_sweep1128(fsoc*c);
void gc_mark1128(T1128*o);
void gc_align_mark1128(fsoc*c,gc1128*p);
extern fsoc H1128;
T1128*new1128(void);
void gc_sweep1129(fsoc*c);
void gc_mark1129(T1129*o);
void gc_align_mark1129(fsoc*c,gc1129*p);
extern fsoc H1129;
T1129*new1129(void);
void gc_sweep1130(fsoc*c);
void gc_mark1130(T1130*o);
void gc_align_mark1130(fsoc*c,gc1130*p);
extern fsoc H1130;
T1130*new1130(void);
void gc_sweep526(fsoc*c);
void gc_mark526(T526*o);
void gc_align_mark526(fsoc*c,gc526*p);
extern fsoc H526;
T526*new526(void);
void gc_sweep1131(fsoc*c);
void gc_mark1131(T1131*o);
void gc_align_mark1131(fsoc*c,gc1131*p);
extern fsoc H1131;
T1131*new1131(void);
void gc_sweep1132(fsoc*c);
void gc_mark1132(T1132*o);
void gc_align_mark1132(fsoc*c,gc1132*p);
extern fsoc H1132;
T1132*new1132(void);
void gc_sweep559(fsoc*c);
void gc_mark559(T559*o);
void gc_align_mark559(fsoc*c,gc559*p);
extern fsoc H559;
T559*new559(void);
void gc_sweep1134(fsoc*c);
void gc_mark1134(T1134*o);
void gc_align_mark1134(fsoc*c,gc1134*p);
extern fsoc H1134;
T1134*new1134(void);
void gc_sweep1135(fsoc*c);
void gc_mark1135(T1135*o);
void gc_align_mark1135(fsoc*c,gc1135*p);
extern fsoc H1135;
T1135*new1135(void);
void gc_sweep1136(fsoc*c);
void gc_mark1136(T1136*o);
void gc_align_mark1136(fsoc*c,gc1136*p);
extern fsoc H1136;
T1136*new1136(void);
void gc_sweep400(fsoc*c);
void gc_mark400(T400*o);
void gc_align_mark400(fsoc*c,gc400*p);
extern fsoc H400;
T400*new400(void);
void gc_mark1137(T1137 o);
T1137 new1137(unsigned int size);
void gc_sweep1138(fsoc*c);
void gc_update_weak_ref_item1138(T1138* wr);
void gc_mark1138(T1138*o);
void gc_align_mark1138(fsoc*c,gc1138*p);
extern fsoc H1138;
T1138*new1138(void);
void gc_sweep1139(fsoc*c);
void gc_mark1139(T1139*o);
void gc_align_mark1139(fsoc*c,gc1139*p);
extern fsoc H1139;
T1139*new1139(void);
void gc_mark1140(T1140 o);
T1140 new1140(unsigned int size);
void gc_sweep1141(fsoc*c);
void gc_mark1141(T1141*o);
void gc_align_mark1141(fsoc*c,gc1141*p);
extern fsoc H1141;
T1141*new1141(void);
void gc_sweep1142(fsoc*c);
void gc_mark1142(T1142*o);
void gc_align_mark1142(fsoc*c,gc1142*p);
extern fsoc H1142;
T1142*new1142(void);
void gc_sweep635(fsoc*c);
void gc_mark635(T635*o);
void gc_align_mark635(fsoc*c,gc635*p);
extern fsoc H635;
T635*new635(void);
void gc_sweep1143(fsoc*c);
void gc_mark1143(T1143*o);
void gc_align_mark1143(fsoc*c,gc1143*p);
extern fsoc H1143;
T1143*new1143(void);
void gc_sweep1144(fsoc*c);
void gc_mark1144(T1144*o);
void gc_align_mark1144(fsoc*c,gc1144*p);
extern fsoc H1144;
T1144*new1144(void);
void gc_sweep1145(fsoc*c);
void gc_mark1145(T1145*o);
void gc_align_mark1145(fsoc*c,gc1145*p);
extern fsoc H1145;
T1145*new1145(void);
void gc_mark335(T335*o);
void gc_sweep1146(fsoc*c);
void gc_mark1146(T1146*o);
void gc_align_mark1146(fsoc*c,gc1146*p);
extern fsoc H1146;
T1146*new1146(void);
void gc_sweep1151(fsoc*c);
void gc_mark1151(T1151*o);
void gc_align_mark1151(fsoc*c,gc1151*p);
extern fsoc H1151;
T1151*new1151(void);
void gc_sweep1152(fsoc*c);
void gc_mark1152(T1152*o);
void gc_align_mark1152(fsoc*c,gc1152*p);
extern fsoc H1152;
T1152*new1152(void);
void gc_sweep1153(fsoc*c);
void gc_mark1153(T1153*o);
void gc_align_mark1153(fsoc*c,gc1153*p);
extern fsoc H1153;
T1153*new1153(void);
void gc_sweep1154(fsoc*c);
void gc_mark1154(T1154*o);
void gc_align_mark1154(fsoc*c,gc1154*p);
extern fsoc H1154;
T1154*new1154(void);
void gc_sweep1155(fsoc*c);
void gc_update_weak_ref_item1155(T1155* wr);
void gc_mark1155(T1155*o);
void gc_align_mark1155(fsoc*c,gc1155*p);
extern fsoc H1155;
T1155*new1155(void);
void gc_sweep1156(fsoc*c);
void gc_mark1156(T1156*o);
void gc_align_mark1156(fsoc*c,gc1156*p);
extern fsoc H1156;
T1156*new1156(void);
void gc_mark1157(T1157 o);
T1157 new1157(unsigned int size);
void gc_sweep1158(fsoc*c);
void gc_update_weak_ref_item1158(T1158* wr);
void gc_mark1158(T1158*o);
void gc_align_mark1158(fsoc*c,gc1158*p);
extern fsoc H1158;
T1158*new1158(void);
void gc_sweep1159(fsoc*c);
void gc_mark1159(T1159*o);
void gc_align_mark1159(fsoc*c,gc1159*p);
extern fsoc H1159;
T1159*new1159(void);
void gc_mark1160(T1160 o);
T1160 new1160(unsigned int size);
void gc_mark1161(T1161 o);
T1161 new1161(unsigned int size);
void gc_sweep1162(fsoc*c);
void gc_mark1162(T1162*o);
void gc_align_mark1162(fsoc*c,gc1162*p);
extern fsoc H1162;
T1162*new1162(void);
void gc_sweep1165(fsoc*c);
void gc_update_weak_ref_item1165(T1165* wr);
void gc_mark1165(T1165*o);
void gc_align_mark1165(fsoc*c,gc1165*p);
extern fsoc H1165;
T1165*new1165(void);
void gc_sweep1166(fsoc*c);
void gc_mark1166(T1166*o);
void gc_align_mark1166(fsoc*c,gc1166*p);
extern fsoc H1166;
T1166*new1166(void);
void gc_sweep1167(fsoc*c);
void gc_mark1167(T1167*o);
void gc_align_mark1167(fsoc*c,gc1167*p);
extern fsoc H1167;
T1167*new1167(void);
void gc_sweep406(fsoc*c);
void gc_mark406(T406*o);
void gc_align_mark406(fsoc*c,gc406*p);
extern fsoc H406;
T406*new406(void);
void gc_sweep1168(fsoc*c);
void gc_mark1168(T1168*o);
void gc_align_mark1168(fsoc*c,gc1168*p);
extern fsoc H1168;
T1168*new1168(void);
void gc_sweep560(fsoc*c);
void gc_mark560(T560*o);
void gc_align_mark560(fsoc*c,gc560*p);
extern fsoc H560;
T560*new560(void);
void gc_sweep1169(fsoc*c);
void gc_update_weak_ref_item1169(T1169* wr);
void gc_mark1169(T1169*o);
void gc_align_mark1169(fsoc*c,gc1169*p);
extern fsoc H1169;
T1169*new1169(void);
void gc_sweep1170(fsoc*c);
void gc_mark1170(T1170*o);
void gc_align_mark1170(fsoc*c,gc1170*p);
extern fsoc H1170;
T1170*new1170(void);
void gc_mark1171(T1171 o);
T1171 new1171(unsigned int size);
void gc_mark1172(T1172 o);
T1172 new1172(unsigned int size);
void gc_sweep1173(fsoc*c);
void gc_mark1173(T1173*o);
void gc_align_mark1173(fsoc*c,gc1173*p);
extern fsoc H1173;
T1173*new1173(void);
void gc_sweep1174(fsoc*c);
void gc_mark1174(T1174*o);
void gc_align_mark1174(fsoc*c,gc1174*p);
extern fsoc H1174;
T1174*new1174(void);
void gc_sweep1176(fsoc*c);
void gc_mark1176(T1176*o);
void gc_align_mark1176(fsoc*c,gc1176*p);
extern fsoc H1176;
T1176*new1176(void);
void gc_mark311(T311*o);
void gc_mark1178(T1178 o);
T1178 new1178(unsigned int size);
void gc_sweep1179(fsoc*c);
void gc_mark1179(T1179*o);
void gc_align_mark1179(fsoc*c,gc1179*p);
extern fsoc H1179;
T1179*new1179(void);
void gc_sweep1180(fsoc*c);
void gc_update_weak_ref_item1180(T1180* wr);
void gc_mark1180(T1180*o);
void gc_align_mark1180(fsoc*c,gc1180*p);
extern fsoc H1180;
T1180*new1180(void);
void gc_mark1181(T1181 o);
T1181 new1181(unsigned int size);
void gc_sweep1182(fsoc*c);
void gc_mark1182(T1182*o);
void gc_align_mark1182(fsoc*c,gc1182*p);
extern fsoc H1182;
T1182*new1182(void);
void gc_mark1184(T1184 o);
T1184 new1184(unsigned int size);
void gc_mark1185(T1185 o);
T1185 new1185(unsigned int size);
void gc_sweep1186(fsoc*c);
void gc_mark1186(T1186*o);
void gc_align_mark1186(fsoc*c,gc1186*p);
extern fsoc H1186;
T1186*new1186(void);
void gc_mark1188(T1188 o);
T1188 new1188(unsigned int size);
void gc_sweep1189(fsoc*c);
void gc_mark1189(T1189*o);
void gc_align_mark1189(fsoc*c,gc1189*p);
extern fsoc H1189;
T1189*new1189(void);
void gc_sweep1190(fsoc*c);
void gc_mark1190(T1190*o);
void gc_align_mark1190(fsoc*c,gc1190*p);
extern fsoc H1190;
T1190*new1190(void);
void gc_mark523(T523*o);
void gc_sweep1192(fsoc*c);
void gc_mark1192(T1192*o);
void gc_align_mark1192(fsoc*c,gc1192*p);
extern fsoc H1192;
T1192*new1192(void);
void gc_sweep773(fsoc*c);
void gc_mark773(T773*o);
void gc_align_mark773(fsoc*c,gc773*p);
extern fsoc H773;
T773*new773(void);
void gc_sweep1194(fsoc*c);
void gc_mark1194(T1194*o);
void gc_align_mark1194(fsoc*c,gc1194*p);
extern fsoc H1194;
T1194*new1194(void);
void gc_sweep1195(fsoc*c);
void gc_mark1195(T1195*o);
void gc_align_mark1195(fsoc*c,gc1195*p);
extern fsoc H1195;
T1195*new1195(void);
void gc_sweep1196(fsoc*c);
void gc_update_weak_ref_item1196(T1196* wr);
void gc_mark1196(T1196*o);
void gc_align_mark1196(fsoc*c,gc1196*p);
extern fsoc H1196;
T1196*new1196(void);
void gc_sweep1197(fsoc*c);
void gc_mark1197(T1197*o);
void gc_align_mark1197(fsoc*c,gc1197*p);
extern fsoc H1197;
T1197*new1197(void);
void gc_mark1198(T1198 o);
T1198 new1198(unsigned int size);
void gc_sweep1199(fsoc*c);
void gc_update_weak_ref_item1199(T1199* wr);
void gc_mark1199(T1199*o);
void gc_align_mark1199(fsoc*c,gc1199*p);
extern fsoc H1199;
T1199*new1199(void);
void gc_sweep1200(fsoc*c);
void gc_mark1200(T1200*o);
void gc_align_mark1200(fsoc*c,gc1200*p);
extern fsoc H1200;
T1200*new1200(void);
void gc_mark1201(T1201 o);
T1201 new1201(unsigned int size);
void gc_mark1202(T1202 o);
T1202 new1202(unsigned int size);
void gc_sweep1203(fsoc*c);
void gc_mark1203(T1203*o);
void gc_align_mark1203(fsoc*c,gc1203*p);
extern fsoc H1203;
T1203*new1203(void);
void gc_sweep1204(fsoc*c);
void gc_update_weak_ref_item1204(T1204* wr);
void gc_mark1204(T1204*o);
void gc_align_mark1204(fsoc*c,gc1204*p);
extern fsoc H1204;
T1204*new1204(void);
void gc_sweep1205(fsoc*c);
void gc_update_weak_ref_item1205(T1205* wr);
void gc_mark1205(T1205*o);
void gc_align_mark1205(fsoc*c,gc1205*p);
extern fsoc H1205;
T1205*new1205(void);
void gc_sweep1206(fsoc*c);
void gc_mark1206(T1206*o);
void gc_align_mark1206(fsoc*c,gc1206*p);
extern fsoc H1206;
T1206*new1206(void);
void gc_mark1207(T1207 o);
T1207 new1207(unsigned int size);
void gc_sweep1208(fsoc*c);
void gc_mark1208(T1208*o);
void gc_align_mark1208(fsoc*c,gc1208*p);
extern fsoc H1208;
T1208*new1208(void);
void gc_mark1209(T1209 o);
T1209 new1209(unsigned int size);
void gc_sweep642(fsoc*c);
void gc_mark642(T642*o);
void gc_align_mark642(fsoc*c,gc642*p);
extern fsoc H642;
T642*new642(void);
void gc_sweep650(fsoc*c);
void gc_mark650(T650*o);
void gc_align_mark650(fsoc*c,gc650*p);
extern fsoc H650;
T650*new650(void);
void gc_sweep561(fsoc*c);
void gc_mark561(T561*o);
void gc_align_mark561(fsoc*c,gc561*p);
extern fsoc H561;
T561*new561(void);
void gc_sweep655(fsoc*c);
void gc_mark655(T655*o);
void gc_align_mark655(fsoc*c,gc655*p);
extern fsoc H655;
T655*new655(void);
void gc_sweep652(fsoc*c);
void gc_mark652(T652*o);
void gc_align_mark652(fsoc*c,gc652*p);
extern fsoc H652;
T652*new652(void);
void gc_sweep653(fsoc*c);
void gc_mark653(T653*o);
void gc_align_mark653(fsoc*c,gc653*p);
extern fsoc H653;
T653*new653(void);
void gc_sweep648(fsoc*c);
void gc_mark648(T648*o);
void gc_align_mark648(fsoc*c,gc648*p);
extern fsoc H648;
T648*new648(void);
void gc_sweep651(fsoc*c);
void gc_mark651(T651*o);
void gc_align_mark651(fsoc*c,gc651*p);
extern fsoc H651;
T651*new651(void);
void gc_sweep649(fsoc*c);
void gc_mark649(T649*o);
void gc_align_mark649(fsoc*c,gc649*p);
extern fsoc H649;
T649*new649(void);
void gc_sweep654(fsoc*c);
void gc_mark654(T654*o);
void gc_align_mark654(fsoc*c,gc654*p);
extern fsoc H654;
T654*new654(void);
void gc_sweep645(fsoc*c);
void gc_mark645(T645*o);
void gc_align_mark645(fsoc*c,gc645*p);
extern fsoc H645;
T645*new645(void);
void gc_sweep644(fsoc*c);
void gc_mark644(T644*o);
void gc_align_mark644(fsoc*c,gc644*p);
extern fsoc H644;
T644*new644(void);
void gc_sweep647(fsoc*c);
void gc_mark647(T647*o);
void gc_align_mark647(fsoc*c,gc647*p);
extern fsoc H647;
T647*new647(void);
void gc_sweep1210(fsoc*c);
void gc_mark1210(T1210*o);
void gc_align_mark1210(fsoc*c,gc1210*p);
extern fsoc H1210;
T1210*new1210(void);
void gc_sweep1211(fsoc*c);
void gc_mark1211(T1211*o);
void gc_align_mark1211(fsoc*c,gc1211*p);
extern fsoc H1211;
T1211*new1211(void);
void gc_sweep1212(fsoc*c);
void gc_mark1212(T1212*o);
void gc_align_mark1212(fsoc*c,gc1212*p);
extern fsoc H1212;
T1212*new1212(void);
void gc_mark1213(T1213 o);
T1213 new1213(unsigned int size);
void gc_sweep690(fsoc*c);
void gc_mark690(T690*o);
void gc_align_mark690(fsoc*c,gc690*p);
extern fsoc H690;
T690*new690(void);
void gc_mark1214(T1214 o);
T1214 new1214(unsigned int size);
void gc_mark1215(T1215 o);
T1215 new1215(unsigned int size);
void gc_mark1216(T1216 o);
T1216 new1216(unsigned int size);
void gc_mark1217(T1217 o);
T1217 new1217(unsigned int size);
void gc_mark1218(T1218 o);
T1218 new1218(unsigned int size);
void gc_sweep1219(fsoc*c);
void gc_mark1219(T1219*o);
void gc_align_mark1219(fsoc*c,gc1219*p);
extern fsoc H1219;
T1219*new1219(void);
void gc_mark1220(T1220 o);
T1220 new1220(unsigned int size);
void gc_mark1221(T1221 o);
T1221 new1221(unsigned int size);
void gc_mark1222(T1222 o);
T1222 new1222(unsigned int size);
void gc_sweep1223(fsoc*c);
void gc_mark1223(T1223*o);
void gc_align_mark1223(fsoc*c,gc1223*p);
extern fsoc H1223;
T1223*new1223(void);
void gc_mark1224(T1224 o);
T1224 new1224(unsigned int size);
void gc_sweep732(fsoc*c);
void gc_mark732(T732*o);
void gc_align_mark732(fsoc*c,gc732*p);
extern fsoc H732;
T732*new732(void);
void gc_sweep1225(fsoc*c);
void gc_mark1225(T1225*o);
void gc_align_mark1225(fsoc*c,gc1225*p);
extern fsoc H1225;
T1225*new1225(void);
void gc_sweep379(fsoc*c);
void gc_mark379(T379*o);
void gc_align_mark379(fsoc*c,gc379*p);
extern fsoc H379;
T379*new379(void);
void gc_sweep678(fsoc*c);
void gc_mark678(T678*o);
void gc_align_mark678(fsoc*c,gc678*p);
extern fsoc H678;
T678*new678(void);
void gc_sweep668(fsoc*c);
void gc_mark668(T668*o);
void gc_align_mark668(fsoc*c,gc668*p);
extern fsoc H668;
T668*new668(void);
void gc_sweep1226(fsoc*c);
void gc_mark1226(T1226*o);
void gc_align_mark1226(fsoc*c,gc1226*p);
extern fsoc H1226;
T1226*new1226(void);
void gc_sweep1227(fsoc*c);
void gc_mark1227(T1227*o);
void gc_align_mark1227(fsoc*c,gc1227*p);
extern fsoc H1227;
T1227*new1227(void);
void gc_sweep673(fsoc*c);
void gc_mark673(T673*o);
void gc_align_mark673(fsoc*c,gc673*p);
extern fsoc H673;
T673*new673(void);
void gc_sweep1228(fsoc*c);
void gc_mark1228(T1228*o);
void gc_align_mark1228(fsoc*c,gc1228*p);
extern fsoc H1228;
T1228*new1228(void);
void gc_sweep1229(fsoc*c);
void gc_mark1229(T1229*o);
void gc_align_mark1229(fsoc*c,gc1229*p);
extern fsoc H1229;
T1229*new1229(void);
void gc_sweep1230(fsoc*c);
void gc_mark1230(T1230*o);
void gc_align_mark1230(fsoc*c,gc1230*p);
extern fsoc H1230;
T1230*new1230(void);
void gc_mark1232(T1232 o);
T1232 new1232(unsigned int size);
void gc_mark1233(T1233 o);
T1233 new1233(unsigned int size);
void gc_sweep1234(fsoc*c);
void gc_mark1234(T1234*o);
void gc_align_mark1234(fsoc*c,gc1234*p);
extern fsoc H1234;
T1234*new1234(void);
void gc_sweep1235(fsoc*c);
void gc_update_weak_ref_item1235(T1235* wr);
void gc_mark1235(T1235*o);
void gc_align_mark1235(fsoc*c,gc1235*p);
extern fsoc H1235;
T1235*new1235(void);
void gc_mark1236(T1236 o);
T1236 new1236(unsigned int size);
void gc_sweep1237(fsoc*c);
void gc_update_weak_ref_item1237(T1237* wr);
void gc_mark1237(T1237*o);
void gc_align_mark1237(fsoc*c,gc1237*p);
extern fsoc H1237;
T1237*new1237(void);
void gc_sweep1238(fsoc*c);
void gc_mark1238(T1238*o);
void gc_align_mark1238(fsoc*c,gc1238*p);
extern fsoc H1238;
T1238*new1238(void);
void gc_mark1239(T1239 o);
T1239 new1239(unsigned int size);
void gc_sweep1240(fsoc*c);
void gc_mark1240(T1240*o);
void gc_align_mark1240(fsoc*c,gc1240*p);
extern fsoc H1240;
T1240*new1240(void);
void gc_mark1242(T1242 o);
T1242 new1242(unsigned int size);
void gc_mark1243(T1243 o);
T1243 new1243(unsigned int size);
void gc_mark1244(T1244 o);
T1244 new1244(unsigned int size);
void gc_mark1245(T1245 o);
T1245 new1245(unsigned int size);
void gc_sweep1246(fsoc*c);
void gc_mark1246(T1246*o);
void gc_align_mark1246(fsoc*c,gc1246*p);
extern fsoc H1246;
T1246*new1246(void);
void gc_sweep1247(fsoc*c);
void gc_update_weak_ref_item1247(T1247* wr);
void gc_mark1247(T1247*o);
void gc_align_mark1247(fsoc*c,gc1247*p);
extern fsoc H1247;
T1247*new1247(void);
void gc_sweep1248(fsoc*c);
void gc_mark1248(T1248*o);
void gc_align_mark1248(fsoc*c,gc1248*p);
extern fsoc H1248;
T1248*new1248(void);
void gc_sweep1249(fsoc*c);
void gc_mark1249(T1249*o);
void gc_align_mark1249(fsoc*c,gc1249*p);
extern fsoc H1249;
T1249*new1249(void);
void gc_sweep1250(fsoc*c);
void gc_update_weak_ref_item1250(T1250* wr);
void gc_mark1250(T1250*o);
void gc_align_mark1250(fsoc*c,gc1250*p);
extern fsoc H1250;
T1250*new1250(void);
void gc_sweep1251(fsoc*c);
void gc_mark1251(T1251*o);
void gc_align_mark1251(fsoc*c,gc1251*p);
extern fsoc H1251;
T1251*new1251(void);
void gc_mark1252(T1252 o);
T1252 new1252(unsigned int size);
void gc_sweep1253(fsoc*c);
void gc_mark1253(T1253*o);
void gc_align_mark1253(fsoc*c,gc1253*p);
extern fsoc H1253;
T1253*new1253(void);
void gc_mark1254(T1254 o);
T1254 new1254(unsigned int size);
void gc_sweep1255(fsoc*c);
void gc_mark1255(T1255*o);
void gc_align_mark1255(fsoc*c,gc1255*p);
extern fsoc H1255;
T1255*new1255(void);
void gc_sweep1256(fsoc*c);
void gc_update_weak_ref_item1256(T1256* wr);
void gc_mark1256(T1256*o);
void gc_align_mark1256(fsoc*c,gc1256*p);
extern fsoc H1256;
T1256*new1256(void);
void gc_sweep1260(fsoc*c);
void gc_mark1260(T1260*o);
void gc_align_mark1260(fsoc*c,gc1260*p);
extern fsoc H1260;
T1260*new1260(void);
void gc_mark1261(T1261 o);
T1261 new1261(unsigned int size);
void gc_sweep1262(fsoc*c);
void gc_mark1262(T1262*o);
void gc_align_mark1262(fsoc*c,gc1262*p);
extern fsoc H1262;
T1262*new1262(void);
void gc_sweep1264(fsoc*c);
void gc_update_weak_ref_item1264(T1264* wr);
void gc_mark1264(T1264*o);
void gc_align_mark1264(fsoc*c,gc1264*p);
extern fsoc H1264;
T1264*new1264(void);
void gc_sweep1265(fsoc*c);
void gc_update_weak_ref_item1265(T1265* wr);
void gc_mark1265(T1265*o);
void gc_align_mark1265(fsoc*c,gc1265*p);
extern fsoc H1265;
T1265*new1265(void);
void gc_sweep1266(fsoc*c);
void gc_mark1266(T1266*o);
void gc_align_mark1266(fsoc*c,gc1266*p);
extern fsoc H1266;
T1266*new1266(void);
void gc_mark1267(T1267 o);
T1267 new1267(unsigned int size);
void gc_mark1268(T1268 o);
T1268 new1268(unsigned int size);
void gc_mark1269(T1269 o);
T1269 new1269(unsigned int size);
void gc_mark1270(T1270 o);
T1270 new1270(unsigned int size);
void gc_sweep1271(fsoc*c);
void gc_mark1271(T1271*o);
void gc_align_mark1271(fsoc*c,gc1271*p);
extern fsoc H1271;
T1271*new1271(void);
void gc_sweep1272(fsoc*c);
void gc_update_weak_ref_item1272(T1272* wr);
void gc_mark1272(T1272*o);
void gc_align_mark1272(fsoc*c,gc1272*p);
extern fsoc H1272;
T1272*new1272(void);
void gc_mark1273(T1273 o);
T1273 new1273(unsigned int size);
void gc_mark1275(T1275 o);
T1275 new1275(unsigned int size);
void gc_sweep1276(fsoc*c);
void gc_mark1276(T1276*o);
void gc_align_mark1276(fsoc*c,gc1276*p);
extern fsoc H1276;
T1276*new1276(void);
void gc_sweep1277(fsoc*c);
void gc_update_weak_ref_item1277(T1277* wr);
void gc_mark1277(T1277*o);
void gc_align_mark1277(fsoc*c,gc1277*p);
extern fsoc H1277;
T1277*new1277(void);
void gc_sweep1278(fsoc*c);
void gc_update_weak_ref_item1278(T1278* wr);
void gc_mark1278(T1278*o);
void gc_align_mark1278(fsoc*c,gc1278*p);
extern fsoc H1278;
T1278*new1278(void);
void gc_sweep1279(fsoc*c);
void gc_mark1279(T1279*o);
void gc_align_mark1279(fsoc*c,gc1279*p);
extern fsoc H1279;
T1279*new1279(void);
void gc_mark1280(T1280 o);
T1280 new1280(unsigned int size);
void gc_mark1281(T1281 o);
T1281 new1281(unsigned int size);
void gc_sweep1282(fsoc*c);
void gc_mark1282(T1282*o);
void gc_align_mark1282(fsoc*c,gc1282*p);
extern fsoc H1282;
T1282*new1282(void);
void gc_sweep1283(fsoc*c);
void gc_update_weak_ref_item1283(T1283* wr);
void gc_mark1283(T1283*o);
void gc_align_mark1283(fsoc*c,gc1283*p);
extern fsoc H1283;
T1283*new1283(void);
void gc_sweep1284(fsoc*c);
void gc_update_weak_ref_item1284(T1284* wr);
void gc_mark1284(T1284*o);
void gc_align_mark1284(fsoc*c,gc1284*p);
extern fsoc H1284;
T1284*new1284(void);
void gc_sweep1285(fsoc*c);
void gc_mark1285(T1285*o);
void gc_align_mark1285(fsoc*c,gc1285*p);
extern fsoc H1285;
T1285*new1285(void);
void gc_mark1286(T1286 o);
T1286 new1286(unsigned int size);
void gc_mark1287(T1287 o);
T1287 new1287(unsigned int size);
void gc_sweep1288(fsoc*c);
void gc_mark1288(T1288*o);
void gc_align_mark1288(fsoc*c,gc1288*p);
extern fsoc H1288;
T1288*new1288(void);
void gc_sweep1289(fsoc*c);
void gc_update_weak_ref_item1289(T1289* wr);
void gc_mark1289(T1289*o);
void gc_align_mark1289(fsoc*c,gc1289*p);
extern fsoc H1289;
T1289*new1289(void);
void gc_mark1290(T1290 o);
T1290 new1290(unsigned int size);
void gc_sweep1291(fsoc*c);
void gc_mark1291(T1291*o);
void gc_align_mark1291(fsoc*c,gc1291*p);
extern fsoc H1291;
T1291*new1291(void);
void gc_sweep1292(fsoc*c);
void gc_update_weak_ref_item1292(T1292* wr);
void gc_mark1292(T1292*o);
void gc_align_mark1292(fsoc*c,gc1292*p);
extern fsoc H1292;
T1292*new1292(void);
void gc_mark1293(T1293 o);
T1293 new1293(unsigned int size);
void gc_mark1294(T1294 o);
T1294 new1294(unsigned int size);
void gc_sweep1295(fsoc*c);
void gc_mark1295(T1295*o);
void gc_align_mark1295(fsoc*c,gc1295*p);
extern fsoc H1295;
T1295*new1295(void);
void gc_sweep1296(fsoc*c);
void gc_update_weak_ref_item1296(T1296* wr);
void gc_mark1296(T1296*o);
void gc_align_mark1296(fsoc*c,gc1296*p);
extern fsoc H1296;
T1296*new1296(void);
void gc_sweep1297(fsoc*c);
void gc_mark1297(T1297*o);
void gc_align_mark1297(fsoc*c,gc1297*p);
extern fsoc H1297;
T1297*new1297(void);
void gc_mark1298(T1298 o);
T1298 new1298(unsigned int size);
void gc_sweep1299(fsoc*c);
void gc_update_weak_ref_item1299(T1299* wr);
void gc_mark1299(T1299*o);
void gc_align_mark1299(fsoc*c,gc1299*p);
extern fsoc H1299;
T1299*new1299(void);
void gc_mark1300(T1300 o);
T1300 new1300(unsigned int size);
void gc_sweep413(fsoc*c);
void gc_mark413(T413*o);
void gc_align_mark413(fsoc*c,gc413*p);
extern fsoc H413;
T413*new413(void);
void gc_sweep733(fsoc*c);
void gc_mark733(T733*o);
void gc_align_mark733(fsoc*c,gc733*p);
extern fsoc H733;
T733*new733(void);
void gc_mark1301(T1301 o);
T1301 new1301(unsigned int size);
void gc_sweep1302(fsoc*c);
void gc_mark1302(T1302*o);
void gc_align_mark1302(fsoc*c,gc1302*p);
extern fsoc H1302;
T1302*new1302(void);
void gc_sweep1303(fsoc*c);
void gc_update_weak_ref_item1303(T1303* wr);
void gc_mark1303(T1303*o);
void gc_align_mark1303(fsoc*c,gc1303*p);
extern fsoc H1303;
T1303*new1303(void);
void gc_mark1304(T1304 o);
T1304 new1304(unsigned int size);
void gc_sweep1305(fsoc*c);
void gc_update_weak_ref_item1305(T1305* wr);
void gc_mark1305(T1305*o);
void gc_align_mark1305(fsoc*c,gc1305*p);
extern fsoc H1305;
T1305*new1305(void);
void gc_sweep1306(fsoc*c);
void gc_mark1306(T1306*o);
void gc_align_mark1306(fsoc*c,gc1306*p);
extern fsoc H1306;
T1306*new1306(void);
void gc_mark1307(T1307 o);
T1307 new1307(unsigned int size);
void gc_mark1308(T1308 o);
T1308 new1308(unsigned int size);
void gc_sweep1309(fsoc*c);
void gc_mark1309(T1309*o);
void gc_align_mark1309(fsoc*c,gc1309*p);
extern fsoc H1309;
T1309*new1309(void);
void gc_sweep1310(fsoc*c);
void gc_update_weak_ref_item1310(T1310* wr);
void gc_mark1310(T1310*o);
void gc_align_mark1310(fsoc*c,gc1310*p);
extern fsoc H1310;
T1310*new1310(void);
void gc_sweep1311(fsoc*c);
void gc_update_weak_ref_item1311(T1311* wr);
void gc_mark1311(T1311*o);
void gc_align_mark1311(fsoc*c,gc1311*p);
extern fsoc H1311;
T1311*new1311(void);
void gc_sweep1312(fsoc*c);
void gc_mark1312(T1312*o);
void gc_align_mark1312(fsoc*c,gc1312*p);
extern fsoc H1312;
T1312*new1312(void);
void gc_mark1313(T1313 o);
T1313 new1313(unsigned int size);
void gc_sweep1314(fsoc*c);
void gc_update_weak_ref_item1314(T1314* wr);
void gc_mark1314(T1314*o);
void gc_align_mark1314(fsoc*c,gc1314*p);
extern fsoc H1314;
T1314*new1314(void);
void gc_sweep1315(fsoc*c);
void gc_mark1315(T1315*o);
void gc_align_mark1315(fsoc*c,gc1315*p);
extern fsoc H1315;
T1315*new1315(void);
void gc_mark1316(T1316 o);
T1316 new1316(unsigned int size);
void gc_mark1317(T1317 o);
T1317 new1317(unsigned int size);
void gc_mark1318(T1318 o);
T1318 new1318(unsigned int size);
void gc_sweep1319(fsoc*c);
void gc_update_weak_ref_item1319(T1319* wr);
void gc_mark1319(T1319*o);
void gc_align_mark1319(fsoc*c,gc1319*p);
extern fsoc H1319;
T1319*new1319(void);
void gc_sweep1320(fsoc*c);
void gc_mark1320(T1320*o);
void gc_align_mark1320(fsoc*c,gc1320*p);
extern fsoc H1320;
T1320*new1320(void);
void gc_mark1321(T1321 o);
T1321 new1321(unsigned int size);
void gc_mark1322(T1322 o);
T1322 new1322(unsigned int size);
void gc_mark1323(T1323 o);
T1323 new1323(unsigned int size);
void gc_sweep356(fsoc*c);
void gc_mark356(T356*o);
void gc_align_mark356(fsoc*c,gc356*p);
extern fsoc H356;
T356*new356(void);
void gc_sweep1324(fsoc*c);
void gc_mark1324(T1324*o);
void gc_align_mark1324(fsoc*c,gc1324*p);
extern fsoc H1324;
T1324*new1324(void);
void gc_mark1325(T1325 o);
T1325 new1325(unsigned int size);
void gc_sweep1326(fsoc*c);
void gc_mark1326(T1326*o);
void gc_align_mark1326(fsoc*c,gc1326*p);
extern fsoc H1326;
T1326*new1326(void);
void gc_mark1327(T1327 o);
T1327 new1327(unsigned int size);
void gc_sweep1328(fsoc*c);
void gc_update_weak_ref_item1328(T1328* wr);
void gc_mark1328(T1328*o);
void gc_align_mark1328(fsoc*c,gc1328*p);
extern fsoc H1328;
T1328*new1328(void);
void gc_mark1329(T1329 o);
T1329 new1329(unsigned int size);
void gc_sweep1330(fsoc*c);
void gc_update_weak_ref_item1330(T1330* wr);
void gc_mark1330(T1330*o);
void gc_align_mark1330(fsoc*c,gc1330*p);
extern fsoc H1330;
T1330*new1330(void);
void gc_mark1331(T1331 o);
T1331 new1331(unsigned int size);
void gc_mark1332(T1332 o);
T1332 new1332(unsigned int size);
void gc_mark1333(T1333 o);
T1333 new1333(unsigned int size);
void gc_sweep1334(fsoc*c);
void gc_mark1334(T1334*o);
void gc_align_mark1334(fsoc*c,gc1334*p);
extern fsoc H1334;
T1334*new1334(void);
void gc_sweep1335(fsoc*c);
void gc_mark1335(T1335*o);
void gc_align_mark1335(fsoc*c,gc1335*p);
extern fsoc H1335;
T1335*new1335(void);
void gc_sweep1337(fsoc*c);
void gc_update_weak_ref_item1337(T1337* wr);
void gc_mark1337(T1337*o);
void gc_align_mark1337(fsoc*c,gc1337*p);
extern fsoc H1337;
T1337*new1337(void);
void gc_sweep769(fsoc*c);
void gc_mark769(T769*o);
void gc_align_mark769(fsoc*c,gc769*p);
extern fsoc H769;
T769*new769(void);
void gc_sweep770(fsoc*c);
void gc_mark770(T770*o);
void gc_align_mark770(fsoc*c,gc770*p);
extern fsoc H770;
T770*new770(void);
void gc_sweep771(fsoc*c);
void gc_mark771(T771*o);
void gc_align_mark771(fsoc*c,gc771*p);
extern fsoc H771;
T771*new771(void);
void gc_sweep766(fsoc*c);
void gc_mark766(T766*o);
void gc_align_mark766(fsoc*c,gc766*p);
extern fsoc H766;
T766*new766(void);
void gc_sweep767(fsoc*c);
void gc_mark767(T767*o);
void gc_align_mark767(fsoc*c,gc767*p);
extern fsoc H767;
T767*new767(void);
void gc_sweep768(fsoc*c);
void gc_mark768(T768*o);
void gc_align_mark768(fsoc*c,gc768*p);
extern fsoc H768;
T768*new768(void);
void gc_sweep1339(fsoc*c);
void gc_mark1339(T1339*o);
void gc_align_mark1339(fsoc*c,gc1339*p);
extern fsoc H1339;
T1339*new1339(void);
void gc_mark1340(T1340 o);
T1340 new1340(unsigned int size);
void gc_sweep1341(fsoc*c);
void gc_update_weak_ref_item1341(T1341* wr);
void gc_mark1341(T1341*o);
void gc_align_mark1341(fsoc*c,gc1341*p);
extern fsoc H1341;
T1341*new1341(void);
void gc_mark1342(T1342 o);
T1342 new1342(unsigned int size);
void gc_sweep1343(fsoc*c);
void gc_update_weak_ref_item1343(T1343* wr);
void gc_mark1343(T1343*o);
void gc_align_mark1343(fsoc*c,gc1343*p);
extern fsoc H1343;
T1343*new1343(void);
void gc_sweep1344(fsoc*c);
void gc_mark1344(T1344*o);
void gc_align_mark1344(fsoc*c,gc1344*p);
extern fsoc H1344;
T1344*new1344(void);
void gc_mark1345(T1345 o);
T1345 new1345(unsigned int size);
void gc_mark1346(T1346 o);
T1346 new1346(unsigned int size);
void gc_sweep1347(fsoc*c);
void gc_mark1347(T1347*o);
void gc_align_mark1347(fsoc*c,gc1347*p);
extern fsoc H1347;
T1347*new1347(void);
void gc_sweep1348(fsoc*c);
void gc_update_weak_ref_item1348(T1348* wr);
void gc_mark1348(T1348*o);
void gc_align_mark1348(fsoc*c,gc1348*p);
extern fsoc H1348;
T1348*new1348(void);
void gc_mark1349(T1349 o);
T1349 new1349(unsigned int size);
void gc_sweep1350(fsoc*c);
void gc_update_weak_ref_item1350(T1350* wr);
void gc_mark1350(T1350*o);
void gc_align_mark1350(fsoc*c,gc1350*p);
extern fsoc H1350;
T1350*new1350(void);
void gc_sweep1351(fsoc*c);
void gc_mark1351(T1351*o);
void gc_align_mark1351(fsoc*c,gc1351*p);
extern fsoc H1351;
T1351*new1351(void);
void gc_mark1352(T1352 o);
T1352 new1352(unsigned int size);
void gc_sweep1353(fsoc*c);
void gc_update_weak_ref_item1353(T1353* wr);
void gc_mark1353(T1353*o);
void gc_align_mark1353(fsoc*c,gc1353*p);
extern fsoc H1353;
T1353*new1353(void);
void gc_sweep1354(fsoc*c);
void gc_mark1354(T1354*o);
void gc_align_mark1354(fsoc*c,gc1354*p);
extern fsoc H1354;
T1354*new1354(void);
void gc_mark1355(T1355 o);
T1355 new1355(unsigned int size);
void gc_sweep1356(fsoc*c);
void gc_mark1356(T1356*o);
void gc_align_mark1356(fsoc*c,gc1356*p);
extern fsoc H1356;
T1356*new1356(void);
void gc_mark1357(T1357 o);
T1357 new1357(unsigned int size);
void gc_mark1358(T1358 o);
T1358 new1358(unsigned int size);
void gc_mark1359(T1359 o);
T1359 new1359(unsigned int size);
void gc_mark1360(T1360 o);
T1360 new1360(unsigned int size);
void gc_mark1361(T1361 o);
T1361 new1361(unsigned int size);
void gc_sweep1362(fsoc*c);
void gc_mark1362(T1362*o);
void gc_align_mark1362(fsoc*c,gc1362*p);
extern fsoc H1362;
T1362*new1362(void);
void gc_mark1363(T1363 o);
T1363 new1363(unsigned int size);
void gc_sweep1364(fsoc*c);
void gc_update_weak_ref_item1364(T1364* wr);
void gc_mark1364(T1364*o);
void gc_align_mark1364(fsoc*c,gc1364*p);
extern fsoc H1364;
T1364*new1364(void);
void gc_sweep1365(fsoc*c);
void gc_mark1365(T1365*o);
void gc_align_mark1365(fsoc*c,gc1365*p);
extern fsoc H1365;
T1365*new1365(void);
void gc_mark1366(T1366 o);
T1366 new1366(unsigned int size);
void gc_sweep1367(fsoc*c);
void gc_mark1367(T1367*o);
void gc_align_mark1367(fsoc*c,gc1367*p);
extern fsoc H1367;
T1367*new1367(void);
void gc_sweep1368(fsoc*c);
void gc_mark1368(T1368*o);
void gc_align_mark1368(fsoc*c,gc1368*p);
extern fsoc H1368;
T1368*new1368(void);
void gc_sweep1371(fsoc*c);
void gc_update_weak_ref_item1371(T1371* wr);
void gc_mark1371(T1371*o);
void gc_align_mark1371(fsoc*c,gc1371*p);
extern fsoc H1371;
T1371*new1371(void);
void gc_sweep1372(fsoc*c);
void gc_mark1372(T1372*o);
void gc_align_mark1372(fsoc*c,gc1372*p);
extern fsoc H1372;
T1372*new1372(void);
void gc_mark1374(T1374 o);
T1374 new1374(unsigned int size);
void gc_mark1375(T1375 o);
T1375 new1375(unsigned int size);
void gc_mark1376(T1376 o);
T1376 new1376(unsigned int size);
void gc_mark1377(T1377 o);
T1377 new1377(unsigned int size);
void gc_sweep1378(fsoc*c);
void gc_mark1378(T1378*o);
void gc_align_mark1378(fsoc*c,gc1378*p);
extern fsoc H1378;
T1378*new1378(void);
void gc_sweep1379(fsoc*c);
void gc_update_weak_ref_item1379(T1379* wr);
void gc_mark1379(T1379*o);
void gc_align_mark1379(fsoc*c,gc1379*p);
extern fsoc H1379;
T1379*new1379(void);
void gc_sweep823(fsoc*c);
void gc_mark823(T823*o);
void gc_align_mark823(fsoc*c,gc823*p);
extern fsoc H823;
T823*new823(void);
void gc_mark1380(T1380 o);
T1380 new1380(unsigned int size);
void gc_sweep1381(fsoc*c);
void gc_mark1381(T1381*o);
void gc_align_mark1381(fsoc*c,gc1381*p);
extern fsoc H1381;
T1381*new1381(void);
void gc_sweep1382(fsoc*c);
void gc_update_weak_ref_item1382(T1382* wr);
void gc_mark1382(T1382*o);
void gc_align_mark1382(fsoc*c,gc1382*p);
extern fsoc H1382;
T1382*new1382(void);
void gc_sweep1384(fsoc*c);
void gc_mark1384(T1384*o);
void gc_align_mark1384(fsoc*c,gc1384*p);
extern fsoc H1384;
T1384*new1384(void);
void gc_sweep1385(fsoc*c);
void gc_mark1385(T1385*o);
void gc_align_mark1385(fsoc*c,gc1385*p);
extern fsoc H1385;
T1385*new1385(void);
void gc_mark1386(T1386 o);
T1386 new1386(unsigned int size);
void gc_sweep1387(fsoc*c);
void gc_update_weak_ref_item1387(T1387* wr);
void gc_mark1387(T1387*o);
void gc_align_mark1387(fsoc*c,gc1387*p);
extern fsoc H1387;
T1387*new1387(void);
void gc_sweep1388(fsoc*c);
void gc_mark1388(T1388*o);
void gc_align_mark1388(fsoc*c,gc1388*p);
extern fsoc H1388;
T1388*new1388(void);
void gc_mark1389(T1389 o);
T1389 new1389(unsigned int size);
void gc_mark1390(T1390 o);
T1390 new1390(unsigned int size);
void gc_sweep1392(fsoc*c);
void gc_update_weak_ref_item1392(T1392* wr);
void gc_mark1392(T1392*o);
void gc_align_mark1392(fsoc*c,gc1392*p);
extern fsoc H1392;
T1392*new1392(void);
void gc_sweep1393(fsoc*c);
void gc_mark1393(T1393*o);
void gc_align_mark1393(fsoc*c,gc1393*p);
extern fsoc H1393;
T1393*new1393(void);
void gc_mark1394(T1394 o);
T1394 new1394(unsigned int size);
void gc_sweep337(fsoc*c);
void gc_mark337(T337*o);
void gc_align_mark337(fsoc*c,gc337*p);
extern fsoc H337;
T337*new337(void);
void gc_sweep1395(fsoc*c);
void gc_mark1395(T1395*o);
void gc_align_mark1395(fsoc*c,gc1395*p);
extern fsoc H1395;
T1395*new1395(void);
void gc_sweep1396(fsoc*c);
void gc_mark1396(T1396*o);
void gc_align_mark1396(fsoc*c,gc1396*p);
extern fsoc H1396;
T1396*new1396(void);
void gc_sweep1397(fsoc*c);
void gc_mark1397(T1397*o);
void gc_align_mark1397(fsoc*c,gc1397*p);
extern fsoc H1397;
T1397*new1397(void);
void gc_sweep1398(fsoc*c);
void gc_mark1398(T1398*o);
void gc_align_mark1398(fsoc*c,gc1398*p);
extern fsoc H1398;
T1398*new1398(void);
void gc_sweep1400(fsoc*c);
void gc_mark1400(T1400*o);
void gc_align_mark1400(fsoc*c,gc1400*p);
extern fsoc H1400;
T1400*new1400(void);
void gc_mark1401(T1401 o);
T1401 new1401(unsigned int size);
void gc_sweep1402(fsoc*c);
void gc_update_weak_ref_item1402(T1402* wr);
void gc_mark1402(T1402*o);
void gc_align_mark1402(fsoc*c,gc1402*p);
extern fsoc H1402;
T1402*new1402(void);
void gc_sweep1403(fsoc*c);
void gc_mark1403(T1403*o);
void gc_align_mark1403(fsoc*c,gc1403*p);
extern fsoc H1403;
T1403*new1403(void);
void gc_mark1404(T1404 o);
T1404 new1404(unsigned int size);
void gc_sweep1405(fsoc*c);
void gc_update_weak_ref_item1405(T1405* wr);
void gc_mark1405(T1405*o);
void gc_align_mark1405(fsoc*c,gc1405*p);
extern fsoc H1405;
T1405*new1405(void);
void gc_mark1406(T1406 o);
T1406 new1406(unsigned int size);
void gc_sweep1409(fsoc*c);
void gc_update_weak_ref_item1409(T1409* wr);
void gc_mark1409(T1409*o);
void gc_align_mark1409(fsoc*c,gc1409*p);
extern fsoc H1409;
T1409*new1409(void);
void gc_sweep1410(fsoc*c);
void gc_mark1410(T1410*o);
void gc_align_mark1410(fsoc*c,gc1410*p);
extern fsoc H1410;
T1410*new1410(void);
void gc_sweep1411(fsoc*c);
void gc_mark1411(T1411*o);
void gc_align_mark1411(fsoc*c,gc1411*p);
extern fsoc H1411;
T1411*new1411(void);
void gc_sweep1412(fsoc*c);
void gc_mark1412(T1412*o);
void gc_align_mark1412(fsoc*c,gc1412*p);
extern fsoc H1412;
T1412*new1412(void);
void gc_sweep1413(fsoc*c);
void gc_mark1413(T1413*o);
void gc_align_mark1413(fsoc*c,gc1413*p);
extern fsoc H1413;
T1413*new1413(void);
void gc_sweep1416(fsoc*c);
void gc_update_weak_ref_item1416(T1416* wr);
void gc_mark1416(T1416*o);
void gc_align_mark1416(fsoc*c,gc1416*p);
extern fsoc H1416;
T1416*new1416(void);
void gc_sweep1417(fsoc*c);
void gc_mark1417(T1417*o);
void gc_align_mark1417(fsoc*c,gc1417*p);
extern fsoc H1417;
T1417*new1417(void);
void gc_sweep1418(fsoc*c);
void gc_update_weak_ref_item1418(T1418* wr);
void gc_mark1418(T1418*o);
void gc_align_mark1418(fsoc*c,gc1418*p);
extern fsoc H1418;
T1418*new1418(void);
void gc_sweep1419(fsoc*c);
void gc_mark1419(T1419*o);
void gc_align_mark1419(fsoc*c,gc1419*p);
extern fsoc H1419;
T1419*new1419(void);
void gc_mark1420(T1420 o);
T1420 new1420(unsigned int size);
void gc_mark1421(T1421 o);
T1421 new1421(unsigned int size);
void gc_sweep1422(fsoc*c);
void gc_update_weak_ref_item1422(T1422* wr);
void gc_mark1422(T1422*o);
void gc_align_mark1422(fsoc*c,gc1422*p);
extern fsoc H1422;
T1422*new1422(void);
void gc_sweep1423(fsoc*c);
void gc_mark1423(T1423*o);
void gc_align_mark1423(fsoc*c,gc1423*p);
extern fsoc H1423;
T1423*new1423(void);
void gc_mark1424(T1424 o);
T1424 new1424(unsigned int size);
void gc_sweep60(fsoc*c);
void gc_mark60(T60*o);
void gc_align_mark60(fsoc*c,gc60*p);
extern fsoc H60;
T60*new60(void);
void gc_sweep775(fsoc*c);
void gc_mark775(T775*o);
void gc_align_mark775(fsoc*c,gc775*p);
extern fsoc H775;
T775*new775(void);
void gc_mark736(T736*o);
void gc_sweep660(fsoc*c);
void gc_mark660(T660*o);
void gc_align_mark660(fsoc*c,gc660*p);
extern fsoc H660;
T660*new660(void);
void gc_sweep1429(fsoc*c);
void gc_mark1429(T1429*o);
void gc_align_mark1429(fsoc*c,gc1429*p);
extern fsoc H1429;
T1429*new1429(void);
void gc_sweep1430(fsoc*c);
void gc_mark1430(T1430*o);
void gc_align_mark1430(fsoc*c,gc1430*p);
extern fsoc H1430;
T1430*new1430(void);
void gc_sweep1431(fsoc*c);
void gc_mark1431(T1431*o);
void gc_align_mark1431(fsoc*c,gc1431*p);
extern fsoc H1431;
T1431*new1431(void);
void gc_sweep1432(fsoc*c);
void gc_mark1432(T1432*o);
void gc_align_mark1432(fsoc*c,gc1432*p);
extern fsoc H1432;
T1432*new1432(void);
void gc_sweep1434(fsoc*c);
void gc_mark1434(T1434*o);
void gc_align_mark1434(fsoc*c,gc1434*p);
extern fsoc H1434;
T1434*new1434(void);
void gc_sweep1437(fsoc*c);
void gc_mark1437(T1437*o);
void gc_align_mark1437(fsoc*c,gc1437*p);
extern fsoc H1437;
T1437*new1437(void);
void gc_sweep666(fsoc*c);
void gc_mark666(T666*o);
void gc_align_mark666(fsoc*c,gc666*p);
extern fsoc H666;
T666*new666(void);
void gc_sweep670(fsoc*c);
void gc_mark670(T670*o);
void gc_align_mark670(fsoc*c,gc670*p);
extern fsoc H670;
T670*new670(void);
void gc_sweep671(fsoc*c);
void gc_mark671(T671*o);
void gc_align_mark671(fsoc*c,gc671*p);
extern fsoc H671;
T671*new671(void);
void gc_sweep674(fsoc*c);
void gc_mark674(T674*o);
void gc_align_mark674(fsoc*c,gc674*p);
extern fsoc H674;
T674*new674(void);
void gc_sweep677(fsoc*c);
void gc_mark677(T677*o);
void gc_align_mark677(fsoc*c,gc677*p);
extern fsoc H677;
T677*new677(void);
void gc_sweep669(fsoc*c);
void gc_mark669(T669*o);
void gc_align_mark669(fsoc*c,gc669*p);
extern fsoc H669;
T669*new669(void);
void gc_sweep663(fsoc*c);
void gc_mark663(T663*o);
void gc_align_mark663(fsoc*c,gc663*p);
extern fsoc H663;
T663*new663(void);
void gc_sweep667(fsoc*c);
void gc_mark667(T667*o);
void gc_align_mark667(fsoc*c,gc667*p);
extern fsoc H667;
T667*new667(void);
void gc_sweep675(fsoc*c);
void gc_mark675(T675*o);
void gc_align_mark675(fsoc*c,gc675*p);
extern fsoc H675;
T675*new675(void);
void gc_sweep656(fsoc*c);
void gc_mark656(T656*o);
void gc_align_mark656(fsoc*c,gc656*p);
extern fsoc H656;
T656*new656(void);
void gc_sweep1438(fsoc*c);
void gc_mark1438(T1438*o);
void gc_align_mark1438(fsoc*c,gc1438*p);
extern fsoc H1438;
T1438*new1438(void);
void gc_sweep1439(fsoc*c);
void gc_mark1439(T1439*o);
void gc_align_mark1439(fsoc*c,gc1439*p);
extern fsoc H1439;
T1439*new1439(void);
void gc_sweep525(fsoc*c);
void gc_mark525(T525*o);
void gc_align_mark525(fsoc*c,gc525*p);
extern fsoc H525;
T525*new525(void);
void gc_sweep1440(fsoc*c);
void gc_mark1440(T1440*o);
void gc_align_mark1440(fsoc*c,gc1440*p);
extern fsoc H1440;
T1440*new1440(void);
void gc_sweep679(fsoc*c);
void gc_mark679(T679*o);
void gc_align_mark679(fsoc*c,gc679*p);
extern fsoc H679;
T679*new679(void);
void gc_sweep665(fsoc*c);
void gc_mark665(T665*o);
void gc_align_mark665(fsoc*c,gc665*p);
extern fsoc H665;
T665*new665(void);
void gc_sweep661(fsoc*c);
void gc_mark661(T661*o);
void gc_align_mark661(fsoc*c,gc661*p);
extern fsoc H661;
T661*new661(void);
void gc_sweep1441(fsoc*c);
void gc_mark1441(T1441*o);
void gc_align_mark1441(fsoc*c,gc1441*p);
extern fsoc H1441;
T1441*new1441(void);
void gc_sweep1442(fsoc*c);
void gc_mark1442(T1442*o);
void gc_align_mark1442(fsoc*c,gc1442*p);
extern fsoc H1442;
T1442*new1442(void);
void gc_sweep1443(fsoc*c);
void gc_mark1443(T1443*o);
void gc_align_mark1443(fsoc*c,gc1443*p);
extern fsoc H1443;
T1443*new1443(void);
void gc_sweep1444(fsoc*c);
void gc_mark1444(T1444*o);
void gc_align_mark1444(fsoc*c,gc1444*p);
extern fsoc H1444;
T1444*new1444(void);
void gc_sweep1445(fsoc*c);
void gc_mark1445(T1445*o);
void gc_align_mark1445(fsoc*c,gc1445*p);
extern fsoc H1445;
T1445*new1445(void);
void gc_mark1446(T1446 o);
T1446 new1446(unsigned int size);
void gc_sweep1451(fsoc*c);
void gc_mark1451(T1451*o);
void gc_align_mark1451(fsoc*c,gc1451*p);
extern fsoc H1451;
T1451*new1451(void);
void gc_sweep528(fsoc*c);
void gc_mark528(T528*o);
void gc_align_mark528(fsoc*c,gc528*p);
extern fsoc H528;
T528*new528(void);
void gc_sweep123(fsoc*c);
void gc_mark123(T123*o);
void gc_align_mark123(fsoc*c,gc123*p);
extern fsoc H123;
T123*new123(void);
void gc_sweep734(fsoc*c);
void gc_mark734(T734*o);
void gc_align_mark734(fsoc*c,gc734*p);
extern fsoc H734;
T734*new734(void);
void gc_sweep739(fsoc*c);
void gc_mark739(T739*o);
void gc_align_mark739(fsoc*c,gc739*p);
extern fsoc H739;
T739*new739(void);
void gc_sweep117(fsoc*c);
void gc_mark117(T117*o);
void gc_align_mark117(fsoc*c,gc117*p);
extern fsoc H117;
T117*new117(void);
void gc_sweep1453(fsoc*c);
void gc_mark1453(T1453*o);
void gc_align_mark1453(fsoc*c,gc1453*p);
extern fsoc H1453;
T1453*new1453(void);
void gc_sweep414(fsoc*c);
void gc_mark414(T414*o);
void gc_align_mark414(fsoc*c,gc414*p);
extern fsoc H414;
T414*new414(void);
void gc_sweep411(fsoc*c);
void gc_mark411(T411*o);
void gc_align_mark411(fsoc*c,gc411*p);
extern fsoc H411;
T411*new411(void);
void gc_sweep366(fsoc*c);
void gc_mark366(T366*o);
void gc_align_mark366(fsoc*c,gc366*p);
extern fsoc H366;
T366*new366(void);
void gc_sweep785(fsoc*c);
void gc_mark785(T785*o);
void gc_align_mark785(fsoc*c,gc785*p);
extern fsoc H785;
T785*new785(void);
void gc_sweep638(fsoc*c);
void gc_mark638(T638*o);
void gc_align_mark638(fsoc*c,gc638*p);
extern fsoc H638;
T638*new638(void);
void gc_sweep787(fsoc*c);
void gc_mark787(T787*o);
void gc_align_mark787(fsoc*c,gc787*p);
extern fsoc H787;
T787*new787(void);
void gc_sweep784(fsoc*c);
void gc_mark784(T784*o);
void gc_align_mark784(fsoc*c,gc784*p);
extern fsoc H784;
T784*new784(void);
void gc_sweep676(fsoc*c);
void gc_mark676(T676*o);
void gc_align_mark676(fsoc*c,gc676*p);
extern fsoc H676;
T676*new676(void);
void gc_sweep532(fsoc*c);
void gc_mark532(T532*o);
void gc_align_mark532(fsoc*c,gc532*p);
extern fsoc H532;
T532*new532(void);
void gc_sweep786(fsoc*c);
void gc_mark786(T786*o);
void gc_align_mark786(fsoc*c,gc786*p);
extern fsoc H786;
T786*new786(void);
void gc_sweep637(fsoc*c);
void gc_mark637(T637*o);
void gc_align_mark637(fsoc*c,gc637*p);
extern fsoc H637;
T637*new637(void);
void gc_sweep1454(fsoc*c);
void gc_mark1454(T1454*o);
void gc_align_mark1454(fsoc*c,gc1454*p);
extern fsoc H1454;
T1454*new1454(void);
void gc_sweep825(fsoc*c);
void gc_mark825(T825*o);
void gc_align_mark825(fsoc*c,gc825*p);
extern fsoc H825;
T825*new825(void);
void gc_sweep827(fsoc*c);
void gc_mark827(T827*o);
void gc_align_mark827(fsoc*c,gc827*p);
extern fsoc H827;
T827*new827(void);
void gc_sweep828(fsoc*c);
void gc_mark828(T828*o);
void gc_align_mark828(fsoc*c,gc828*p);
extern fsoc H828;
T828*new828(void);
void gc_sweep829(fsoc*c);
void gc_mark829(T829*o);
void gc_align_mark829(fsoc*c,gc829*p);
extern fsoc H829;
T829*new829(void);
void gc_sweep1455(fsoc*c);
void gc_mark1455(T1455*o);
void gc_align_mark1455(fsoc*c,gc1455*p);
extern fsoc H1455;
T1455*new1455(void);
void gc_mark1456(T1456 o);
T1456 new1456(unsigned int size);
void gc_sweep1457(fsoc*c);
void gc_update_weak_ref_item1457(T1457* wr);
void gc_mark1457(T1457*o);
void gc_align_mark1457(fsoc*c,gc1457*p);
extern fsoc H1457;
T1457*new1457(void);
void gc_sweep1458(fsoc*c);
void gc_mark1458(T1458*o);
void gc_align_mark1458(fsoc*c,gc1458*p);
extern fsoc H1458;
T1458*new1458(void);
void gc_mark1459(T1459 o);
T1459 new1459(unsigned int size);
void gc_sweep1460(fsoc*c);
void gc_update_weak_ref_item1460(T1460* wr);
void gc_mark1460(T1460*o);
void gc_align_mark1460(fsoc*c,gc1460*p);
extern fsoc H1460;
T1460*new1460(void);
void gc_mark1461(T1461 o);
T1461 new1461(unsigned int size);
void gc_sweep1462(fsoc*c);
void gc_mark1462(T1462*o);
void gc_align_mark1462(fsoc*c,gc1462*p);
extern fsoc H1462;
T1462*new1462(void);
void gc_sweep1463(fsoc*c);
void gc_update_weak_ref_item1463(T1463* wr);
void gc_mark1463(T1463*o);
void gc_align_mark1463(fsoc*c,gc1463*p);
extern fsoc H1463;
T1463*new1463(void);
void gc_sweep1464(fsoc*c);
void gc_update_weak_ref_item1464(T1464* wr);
void gc_mark1464(T1464*o);
void gc_align_mark1464(fsoc*c,gc1464*p);
extern fsoc H1464;
T1464*new1464(void);
void gc_sweep1465(fsoc*c);
void gc_mark1465(T1465*o);
void gc_align_mark1465(fsoc*c,gc1465*p);
extern fsoc H1465;
T1465*new1465(void);
void gc_mark1466(T1466 o);
T1466 new1466(unsigned int size);
void gc_sweep1467(fsoc*c);
void gc_update_weak_ref_item1467(T1467* wr);
void gc_mark1467(T1467*o);
void gc_align_mark1467(fsoc*c,gc1467*p);
extern fsoc H1467;
T1467*new1467(void);
void gc_sweep1468(fsoc*c);
void gc_mark1468(T1468*o);
void gc_align_mark1468(fsoc*c,gc1468*p);
extern fsoc H1468;
T1468*new1468(void);
void gc_mark1469(T1469 o);
T1469 new1469(unsigned int size);
void gc_sweep1470(fsoc*c);
void gc_mark1470(T1470*o);
void gc_align_mark1470(fsoc*c,gc1470*p);
extern fsoc H1470;
T1470*new1470(void);
void gc_sweep1471(fsoc*c);
void gc_mark1471(T1471*o);
void gc_align_mark1471(fsoc*c,gc1471*p);
extern fsoc H1471;
T1471*new1471(void);
void gc_sweep1472(fsoc*c);
void gc_update_weak_ref_item1472(T1472* wr);
void gc_mark1472(T1472*o);
void gc_align_mark1472(fsoc*c,gc1472*p);
extern fsoc H1472;
T1472*new1472(void);
void gc_mark1473(T1473 o);
T1473 new1473(unsigned int size);
void gc_sweep672(fsoc*c);
void gc_mark672(T672*o);
void gc_align_mark672(fsoc*c,gc672*p);
extern fsoc H672;
T672*new672(void);
void gc_mark1474(T1474 o);
T1474 new1474(unsigned int size);
void gc_mark1475(T1475 o);
T1475 new1475(unsigned int size);
void gc_sweep704(fsoc*c);
void gc_mark704(T704*o);
void gc_align_mark704(fsoc*c,gc704*p);
extern fsoc H704;
T704*new704(void);
void gc_mark1476(T1476 o);
T1476 new1476(unsigned int size);
void gc_sweep1477(fsoc*c);
void gc_mark1477(T1477*o);
void gc_align_mark1477(fsoc*c,gc1477*p);
extern fsoc H1477;
T1477*new1477(void);
void gc_sweep1478(fsoc*c);
void gc_update_weak_ref_item1478(T1478* wr);
void gc_mark1478(T1478*o);
void gc_align_mark1478(fsoc*c,gc1478*p);
extern fsoc H1478;
T1478*new1478(void);
void gc_mark1479(T1479 o);
T1479 new1479(unsigned int size);
void gc_mark1480(T1480 o);
T1480 new1480(unsigned int size);
void gc_mark1481(T1481 o);
T1481 new1481(unsigned int size);
void gc_mark1482(T1482 o);
T1482 new1482(unsigned int size);
void gc_sweep980(fsoc*c);
void gc_mark980(T980*o);
void gc_align_mark980(fsoc*c,gc980*p);
extern fsoc H980;
T980*new980(void);
void gc_sweep634(fsoc*c);
void gc_mark634(T634*o);
void gc_align_mark634(fsoc*c,gc634*p);
extern fsoc H634;
T634*new634(void);
void gc_sweep558(fsoc*c);
void gc_mark558(T558*o);
void gc_align_mark558(fsoc*c,gc558*p);
extern fsoc H558;
T558*new558(void);
void gc_sweep1495(fsoc*c);
void gc_mark1495(T1495*o);
void gc_align_mark1495(fsoc*c,gc1495*p);
extern fsoc H1495;
T1495*new1495(void);
void gc_sweep1496(fsoc*c);
void gc_mark1496(T1496*o);
void gc_align_mark1496(fsoc*c,gc1496*p);
extern fsoc H1496;
T1496*new1496(void);
void gc_sweep552(fsoc*c);
void gc_mark552(T552*o);
void gc_align_mark552(fsoc*c,gc552*p);
extern fsoc H552;
T552*new552(void);
void gc_sweep553(fsoc*c);
void gc_mark553(T553*o);
void gc_align_mark553(fsoc*c,gc553*p);
extern fsoc H553;
T553*new553(void);
void gc_sweep554(fsoc*c);
void gc_mark554(T554*o);
void gc_align_mark554(fsoc*c,gc554*p);
extern fsoc H554;
T554*new554(void);
void gc_sweep555(fsoc*c);
void gc_mark555(T555*o);
void gc_align_mark555(fsoc*c,gc555*p);
extern fsoc H555;
T555*new555(void);
void gc_sweep556(fsoc*c);
void gc_mark556(T556*o);
void gc_align_mark556(fsoc*c,gc556*p);
extern fsoc H556;
T556*new556(void);
void gc_sweep557(fsoc*c);
void gc_mark557(T557*o);
void gc_align_mark557(fsoc*c,gc557*p);
extern fsoc H557;
T557*new557(void);
void gc_sweep1502(fsoc*c);
void gc_mark1502(T1502*o);
void gc_align_mark1502(fsoc*c,gc1502*p);
extern fsoc H1502;
T1502*new1502(void);
void gc_sweep1506(fsoc*c);
void gc_mark1506(T1506*o);
void gc_align_mark1506(fsoc*c,gc1506*p);
extern fsoc H1506;
T1506*new1506(void);
void gc_sweep799(fsoc*c);
void gc_mark799(T799*o);
void gc_align_mark799(fsoc*c,gc799*p);
extern fsoc H799;
T799*new799(void);
void gc_sweep1508(fsoc*c);
void gc_mark1508(T1508*o);
void gc_align_mark1508(fsoc*c,gc1508*p);
extern fsoc H1508;
T1508*new1508(void);
void gc_sweep796(fsoc*c);
void gc_mark796(T796*o);
void gc_align_mark796(fsoc*c,gc796*p);
extern fsoc H796;
T796*new796(void);
void gc_sweep1514(fsoc*c);
void gc_mark1514(T1514*o);
void gc_align_mark1514(fsoc*c,gc1514*p);
extern fsoc H1514;
T1514*new1514(void);
void gc_sweep1515(fsoc*c);
void gc_mark1515(T1515*o);
void gc_align_mark1515(fsoc*c,gc1515*p);
extern fsoc H1515;
T1515*new1515(void);
void gc_sweep709(fsoc*c);
void gc_mark709(T709*o);
void gc_align_mark709(fsoc*c,gc709*p);
extern fsoc H709;
T709*new709(void);
void gc_sweep1516(fsoc*c);
void gc_mark1516(T1516*o);
void gc_align_mark1516(fsoc*c,gc1516*p);
extern fsoc H1516;
T1516*new1516(void);
void gc_mark1517(T1517 o);
T1517 new1517(unsigned int size);
void gc_mark1518(T1518 o);
T1518 new1518(unsigned int size);
void gc_mark1519(T1519 o);
T1519 new1519(unsigned int size);
void gc_sweep1520(fsoc*c);
void gc_mark1520(T1520*o);
void gc_align_mark1520(fsoc*c,gc1520*p);
extern fsoc H1520;
T1520*new1520(void);
void gc_sweep1521(fsoc*c);
void gc_mark1521(T1521*o);
void gc_align_mark1521(fsoc*c,gc1521*p);
extern fsoc H1521;
T1521*new1521(void);
void gc_mark1522(T1522 o);
T1522 new1522(unsigned int size);
void gc_sweep1523(fsoc*c);
void gc_update_weak_ref_item1523(T1523* wr);
void gc_mark1523(T1523*o);
void gc_align_mark1523(fsoc*c,gc1523*p);
extern fsoc H1523;
T1523*new1523(void);
void gc_mark1524(T1524 o);
T1524 new1524(unsigned int size);
void gc_sweep706(fsoc*c);
void gc_mark706(T706*o);
void gc_align_mark706(fsoc*c,gc706*p);
extern fsoc H706;
T706*new706(void);
void gc_mark1525(T1525 o);
T1525 new1525(unsigned int size);
void gc_mark1526(T1526 o);
T1526 new1526(unsigned int size);
void gc_sweep1527(fsoc*c);
void gc_mark1527(T1527*o);
void gc_align_mark1527(fsoc*c,gc1527*p);
extern fsoc H1527;
T1527*new1527(void);
void gc_sweep1528(fsoc*c);
void gc_update_weak_ref_item1528(T1528* wr);
void gc_mark1528(T1528*o);
void gc_align_mark1528(fsoc*c,gc1528*p);
extern fsoc H1528;
T1528*new1528(void);
void gc_sweep1541(fsoc*c);
void gc_mark1541(T1541*o);
void gc_align_mark1541(fsoc*c,gc1541*p);
extern fsoc H1541;
T1541*new1541(void);
void gc_sweep783(fsoc*c);
void gc_mark783(T783*o);
void gc_align_mark783(fsoc*c,gc783*p);
extern fsoc H783;
T783*new783(void);
void gc_sweep1542(fsoc*c);
void gc_mark1542(T1542*o);
void gc_align_mark1542(fsoc*c,gc1542*p);
extern fsoc H1542;
T1542*new1542(void);
void gc_sweep781(fsoc*c);
void gc_mark781(T781*o);
void gc_align_mark781(fsoc*c,gc781*p);
extern fsoc H781;
T781*new781(void);
void gc_sweep1545(fsoc*c);
void gc_mark1545(T1545*o);
void gc_align_mark1545(fsoc*c,gc1545*p);
extern fsoc H1545;
T1545*new1545(void);
void gc_mark1546(T1546 o);
T1546 new1546(unsigned int size);
void gc_sweep1547(fsoc*c);
void gc_mark1547(T1547*o);
void gc_align_mark1547(fsoc*c,gc1547*p);
extern fsoc H1547;
T1547*new1547(void);
void gc_sweep1548(fsoc*c);
void gc_update_weak_ref_item1548(T1548* wr);
void gc_mark1548(T1548*o);
void gc_align_mark1548(fsoc*c,gc1548*p);
extern fsoc H1548;
T1548*new1548(void);
void Xgc_mark365(T0*o);
void Xgc_mark682(T0*o);
void Xgc_mark340(T0*o);
void Xgc_mark389(T0*o);
void Xgc_mark387(T0*o);
void Xgc_mark376(T0*o);
void Xgc_mark331(T0*o);
void Xgc_mark341(T0*o);
void Xgc_mark336(T0*o);
void Xgc_mark378(T0*o);
void Xgc_mark344(T0*o);
void Xgc_mark551(T0*o);
void Xgc_mark549(T0*o);
void Xgc_mark539(T0*o);
void Xgc_mark765(T0*o);
void Xgc_mark70(T0*o);
void Xgc_mark685(T0*o);
void Xgc_mark681(T0*o);
void Xgc_mark404(T0*o);
void Xgc_mark1046(T0*o);
void Xgc_mark1191(T0*o);
void Xgc_mark468(T0*o);
void Xgc_mark343(T0*o);
void Xgc_mark1075(T0*o);
void Xgc_mark426(T0*o);
void Xgc_mark350(T0*o);
void Xgc_mark386(T0*o);
void Xgc_mark373(T0*o);
void Xgc_mark1164(T0*o);
void Xgc_mark1336(T0*o);
void Xgc_mark62(T0*o);
void Xgc_mark1370(T0*o);
void Xgc_mark352(T0*o);
void Xgc_mark643(T0*o);
void Xgc_mark646(T0*o);
void Xgc_mark521(T0*o);
void Xgc_mark416(T0*o);
extern T29*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 1549
extern T7*g[];
extern T7*t[];
extern int se_strucT[];
void se_atexit(void);
void initialize_eiffel_runtime(int argc,char*argv[]);
int main(int argc,char*argv[]);
T0* se_manifest1152(T2 initial_lower,int argc,...);
T0* se_manifest1025(T2 initial_lower,int argc,...);
T0* se_manifest1076(T2 initial_lower,int argc,...);
T0* se_manifest1008(int argc,...);
T0* se_manifest1454(int argc,...);
T0* se_manifest1153(T2 initial_lower,int argc,...);
T0* se_manifest1031(int argc,...);
T0* se_manifest1127(int argc,...);
int can_assign_to379_from378(T0* expression);
int can_assign_to797_from682(T0* expression);
int can_assign_to643_from336(T0* expression);
int can_assign_toATTRIBUTE_from336(T0* expression);
int can_assign_to654_from336(T0* expression);
int can_assign_to561_from336(T0* expression);
int can_assign_to649_from336(T0* expression);
int can_assign_to433_from336(T0* expression);
int can_assign_to651_from336(T0* expression);
int can_assign_to644_from336(T0* expression);
int can_assign_to652_from336(T0* expression);
int can_assign_to456_from386(T0* expression);
int can_assign_to362_from344(T0* expression);
int can_assign_to395_from344(T0* expression);
int can_assign_to420_from344(T0* expression);
int can_assign_to367_from344(T0* expression);
int can_assign_to660_from344(T0* expression);
int can_assign_to784_from331(T0* expression);
int can_assign_to406_from331(T0* expression);
int can_assign_to293_from38(T0* expression);
int can_assign_to344_from341(T0* expression);
int can_assign_to678_from341(T0* expression);
int can_assign_to343_from341(T0* expression);
int can_assign_to395_from341(T0* expression);
int can_assign_to350_from341(T0* expression);
int can_assign_to404_from341(T0* expression);
int can_assign_to340_from341(T0* expression);
int can_assign_to371_from373(T0* expression);
int can_assign_to538_from539(T0* expression);
int can_assign_to542_from539(T0* expression);
int can_assign_to544_from539(T0* expression);
int can_assign_to541_from539(T0* expression);
int can_assign_to537_from539(T0* expression);
int can_assign_to543_from539(T0* expression);
int can_assign_to545_from539(T0* expression);
int can_assign_to498_from365(T0* expression);
int can_assign_to436_from365(T0* expression);
int can_assign_to403_from365(T0* expression);
int can_assign_to407_from365(T0* expression);
int can_assign_to470_from468(T0* expression);
int can_assign_to393_from340(T0* expression);
int can_assign_to456_from340(T0* expression);
int can_assign_to475_from340(T0* expression);
int can_assign_to480_from340(T0* expression);
int can_assign_to525_from340(T0* expression);
int can_assign_to350_from340(T0* expression);
int can_assign_to526_from340(T0* expression);
int can_assign_to474_from340(T0* expression);
int can_assign_to462_from340(T0* expression);
int can_assign_to457_from340(T0* expression);
int can_assign_to516_from340(T0* expression);
int can_assign_to385_from340(T0* expression);
int can_assign_to371_from340(T0* expression);
int can_assign_to386_from340(T0* expression);
int can_assign_to380_from340(T0* expression);
int can_assign_to675_from340(T0* expression);

#ifdef __cplusplus
}
#endif
