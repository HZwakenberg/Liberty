#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by Liberty Eiffel The GNU Eiffel Compiler, Eiffel tools and libraries
Release 2013.03 (Charles Adler, Jr.)
Copyright (C), 1994-2002 - INRIA - LORIA - ESIAL UHP Nancy 1 - FRANCE
Copyright (C), 2003-2005 - INRIA - LORIA - IUT Charlemagne Nancy 2 - FRANCE
D.COLNET, P.RIBET, C.ADRIAN, V.CROIZIER F.MERIZEN

Copyright (C), 2011-2013 - C.ADRIAN
http://liberty-eiffel.blogspot.com
https://github.com/LibertyEiffel/Liberty
C Compiler options used: -pipe -O2 -fno-gcse
*/

/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
  This file (SmartEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/

#ifndef _BASE_H
#define _BASE_H

#if defined(_MSC_VER) && (_MSC_VER >= 1400)       /* VC8+ */
# ifndef _CRT_SECURE_NO_DEPRECATE
#  define _CRT_SECURE_NO_DEPRECATE
# endif
# ifndef _CRT_NONSTDC_NO_DEPRECATE
#  define _CRT_NONSTDC_NO_DEPRECATE
# endif
#endif   /* VC8+ */

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  include <unistd.h>
#endif
#if !defined(WIN32) && \
       (defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
        defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#  define WIN32 1
#endif
#ifdef WIN32
#  include <windows.h>
#else
#  ifndef O_RDONLY
#    include <sys/file.h>
#  endif
#  ifndef O_RDONLY
#    define O_RDONLY 0000
#  endif
#endif

#if defined(_MSC_VER) && (_MSC_VER < 1600) /* MSVC older than v10 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "I64d"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c
#  define INT64_C(c) c ## i64
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## u
#  define UINT64_C(c) c ## ui64
#elif defined(__WATCOMC__) && (__WATCOMC__ <= 1220) /* WATCOM 12.2 or lower */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## UL
#  define UINT64_C(c) c ## ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "I64Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## UL
#  define UINT64_C(c) c ## ui64
#elif defined(__FreeBSD__) && (__FreeBSD__ < 5) /* FreeBSD before 5.0 */ && !defined (_SYS_INTTYPES_H_)
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#elif defined(__CYGWIN__) && defined(__BIT_TYPES_DEFINED__) /* Cygwin defines intxx_t in sys/types.h instead of inttypes.h */
#  include <cygwin/version.h>
#  if defined(CYGWIN_VERSION_DLL_MAJOR) && (CYGWIN_VERSION_DLL_MAJOR<1005)
typedef unsigned char uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
#  endif
#elif defined(SASC)
#    error("Too old SAS/C compiler, sorry.");
#elif defined(__SASC__)
#  if (__SASC__ < 750 ) /*  SAS/C before 7.50 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long int uint64_t;
#  endif
#else
#  include <inttypes.h>
#  if !defined(INT8_MAX) && defined(INT16_MAX)
/* int8_t is not mandatory */
typedef int_least8_t int8_t;
#  endif
#endif

#if !defined(PRId16)
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "lld"
#elif !defined(PRId8)
#  define PRId8 "d"
#endif
#if !defined(INT16_C)
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## LL
#  define UINT8_C(c) c ## u
#  define UINT16_C(c) c ## u
#  define UINT32_C(c) c ## UL
#  define UINT64_C(c) c ## ULL
#elif !defined(INT8_C)
#  define INT8_C(c) c
#  define UINT8_C(c) c ## u
#endif
#if !defined(INT16_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#  define INT8_MAX (INT8_C(127))
#  define INT16_MIN (-INT16_C(32767)-1)
#  define INT16_MAX (INT16_C(32767))
#  define INT32_MIN (-INT32_C(2147483647)-1)
#  define INT32_MAX (INT32_C(2147483647))
#  define INT64_MIN (-INT64_C(9223372036854775807)-1)
#  define INT64_MAX (INT64_C(9223372036854775807))
#elif !defined(INT8_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#endif


/*
  Endian stuff
*/
#if defined(BSD) && (BSD >= 199103)
#  include <machine/endian.h>
#elif defined(__alpha__) || defined(__alpha) || defined(_M_ALPHA)
/* bi-endian processor, current mode should be find in machine/endian.h file */
#  include <machine/endian.h>
#elif defined(linux)
#  include <endian.h>
#endif



#if !defined(BYTE_ORDER) && defined(__BYTE_ORDER)
#  define BYTE_ORDER      __BYTE_ORDER
#endif

#if !defined(LITTLE_ENDIAN) && defined(__LITTLE_ENDIAN)
#  define LITTLE_ENDIAN      __LITTLE_ENDIAN
#endif

#if !defined(BIG_ENDIAN) && defined(__BIG_ENDIAN)
#  define BIG_ENDIAN      __BIG_ENDIAN
#endif

#if !defined(LITTLE_ENDIAN)
#  define LITTLE_ENDIAN   1234    /* LSB first (vax, pc) */
#endif
#if !defined(BIG_ENDIAN)
#  define BIG_ENDIAN      4321    /* MSB first (IBM, net) */
#endif
#if !defined(PDP_ENDIAN)
#  define PDP_ENDIAN      3412    /* LSB first in word, MSW first in long */
#endif

#if !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_RIGHT)
#  define BYTE_ORDER      LITTLE_ENDIAN
#elif !defined(BYTE_ORDER) && defined(BIT_ZERO_ON_LEFT)
#  define BYTE_ORDER      BIG_ENDIAN
#elif !defined(BYTE_ORDER)

/* ARM */
#  if defined(__ARMEL__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(__ARMEB__)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__arm__)
#    error "ARMs are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* HP RISC */
#  if defined(__hppa__) || defined(__hppa) || defined(__hp9000) || \
      defined(__hp9000s300) || defined(hp9000s300) || \
      defined(__hp9000s700) || defined(hp9000s700) || \
      defined(__hp9000s800) || defined(hp9000s800) || defined(hp9000s820)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* IBM */
#  if defined(ibm032) || defined(ibm370) || defined(_IBMR2) || \
      defined(IBM370) || defined(__MVS__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Intel x86 */
#  if defined(i386) || defined(__i386__) || defined(__i386) || \
      defined(_M_IX86) || defined(_X86_) || defined(__THW_INTEL) || \
      defined(sun386)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Intel Itanium */
#  if defined(__ia64__) || defined(_IA64) || defined(__IA64__) || \
      defined(_M_IA64)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Nationnal Semiconductor 32000 serie */
#  if  defined(ns32000)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Motorola 68000 */
#  if defined(mc68000) || defined(is68k) || defined(macII) || defined(m68k)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* MIPS */
#  if defined(MIPSEL) || defined(_MIPSEL)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  elif defined(MIPSEB) || defined(_MIPSEB)
#    define BYTE_ORDER      BIG_ENDIAN
#  elif defined(__mips__) || defined(__mips) || defined(__MIPS__)
#    error "MIPS are bi-endian processors. Endianness is unknown for this system, please drop an e-mail to SmartEiffel@loria.fr"
#  endif

/* Power PC */
/* this processor is bi-endian, how to know if little-endian is set? */
#  if defined(__powerpc) || defined(__powerpc__) || defined(__POWERPC__) || \
      defined(__ppc__) || defined(__ppc) || defined(_M_PPC) || \
      defined(__PPC) || defined(__PPC__)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* Pyramid 9810 */
#  if defined(pyr)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* RS/6000 */
#  if defined(__THW_RS6000) || defined(_IBMR2) || defined(_POWER) || \
      defined(_ARCH_PWR) || defined(_ARCH_PWR2)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* SPARC */
#  if defined(__sparc__) || defined(sparc) || defined(__sparc)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* CCI Tahoe */
#  if defined(tahoe)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif

/* VAX */
#  if defined(vax) || defined(VAX) || defined(__vax__) || defined(_vax_) || \
      defined(__vax) || defined(__VAX)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* ELATE is a virtual OS with a little endian Virtual Processor */
#  if defined(__ELATE__)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous little endian */
#  if defined(wrltitan)
#    define BYTE_ORDER      LITTLE_ENDIAN
#  endif

/* Miscellaneous big endian */
#  if defined(apollo) || defined(__convex__) || defined(_CRAY) || defined(sel)
#    define BYTE_ORDER      BIG_ENDIAN
#  endif
#endif


#if !defined(BYTE_ORDER)
#  error "Unknown byte order. Add your system in above macros once you know your system type. Please drop an e-mail to SmartEiffel@loria.fr"
#endif
#if (BYTE_ORDER != BIG_ENDIAN && BYTE_ORDER != LITTLE_ENDIAN)
#  error "Only little-endian and big-endian are valid at this time. Please drop an e-mail to SmartEiffel@loria.fr"
#endif


/*
  Byte swapping stuff
*/
extern void copy_swap_16(const uint16_t *src, uint16_t *dest, int count);


/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#  define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#  define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.

   NOTE: with gcc, -ansi is used for SmartEiffel generated files EXCEPT in
   -no_split mode. ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#  define JMP_BUF    sigjmp_buf
#  define SETJMP(x)  sigsetjmp( (x), 1)
#  define LONGJMP    siglongjmp
#else
#  define JMP_BUF    jmp_buf
#  define SETJMP(x)  setjmp( (x) )
#  define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER_8 is #1:
*/
typedef int8_t T1;
#define EIF_INTEGER_8 T1
#define M1 (INT8_C(0))
#define EIF_INTEGER_8_BITS (CHAR_BIT)
#define EIF_MINIMUM_INTEGER_8 (INT8_MIN)
#define EIF_MAXIMUM_INTEGER_8 (INT8_MAX)

/*
  Eiffel type INTEGER_16 is #10:
*/
typedef int16_t T10;
#define EIF_INTEGER_16 T10
#define M10 (INT16_C(0))
#define EIF_INTEGER_16_BITS (CHAR_BIT*sizeof(T10t))
#define EIF_MINIMUM_INTEGER_16 (INT16_MIN) /*-32768*/
#define EIF_MAXIMUM_INTEGER_16 (INT16_MAX) /*+32767*/

/*
  Eiffel type INTEGER or INTEGER_32 is #2:
*/
typedef int32_t T2;
#define EIF_INTEGER T2
#define EIF_INTEGER_32 T2
#define M2 (INT32_C(0))
#define EIF_INTEGER_BITS ((T2)(CHAR_BIT*sizeof(T2)))
#define EIF_INTEGER_32_BITS EIF_INTEGER_BITS
#define EIF_MINIMUM_INTEGER (INT32_MIN)
#define EIF_MAXIMUM_INTEGER (INT32_MAX)

/*
  Eiffel type INTEGER_64 is #11:
*/
typedef int64_t T11;
#define EIF_INTEGER_64 T11
#define M11 (INT64_C(0))
#define EIF_INTEGER_64_BITS (CHAR_BIT*sizeof(T11))
#define EIF_MINIMUM_INTEGER_64 (INT64_MIN)
#define EIF_MAXIMUM_INTEGER_64 (INT64_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T10)(x))
#define T3to_integer(x) ((signed char)(x))
#define T3to_integer_8(x) ((signed char)(x))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL_32 is #4:
*/
typedef float T4;
typedef T4 real32_t;
#define EIF_REAL_32 T4
#define M4 (0.0)
#define EIF_MINIMUM_REAL_32 (-(FLT_MAX))
#define EIF_MAXIMUM_REAL_32 (FLT_MAX)

/*
  Eiffel type REAL or REAL_64 is #5:
*/
typedef double T5;
typedef T5 real64_t;
#define EIF_REAL T5
#define EIF_REAL_64 T5
#define M5 (0.0)
#define EIF_MINIMUM_REAL_64 (-(DBL_MAX))
#define EIF_MINIMUM_REAL (EIF_MINIMUM_REAL_64)
#define EIF_MAXIMUM_REAL_64 (DBL_MAX)
#define EIF_MAXIMUM_REAL (EIF_MAXIMUM_REAL_64)

/*
  Eiffel type REAL_EXTENDED is #12:
*/
typedef long double T12;
typedef T12 real_extended_t;
#define EIF_REAL_EXTENDED T12
#define EIF_REAL_128 T12
#define M12 (0.0)
#define EIF_MINIMUM_REAL_EXTENDED (-(DBL_MAX))
#define EIF_MAXIMUM_REAL_EXTENDED (DBL_MAX)

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
/* Sometimes, NULL is defined as 0 */
#define M8 ((void*)NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ
#define EIF_ANY EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void* src, size_t size);

/*
   die method.
 */
void se_die(int code);

/*
    Runtime hooks. They allow different runtime modules to be quite independant. In time, they will also allow
    thread-safe operations.

    Currently known modules:
      - boost
      - no_check
      - sedb
      - gc
      - print stack
      - profile
      - plugins

    However, currently only profile uses this method. It will be extended to other modules later.

    The currently defined hooks are described in the enum below (the names should be self-explanatory).
 */
typedef enum {
  SE_HANDLE_EXCEPTION_SET, /* called when an exception handler is set, prior to SETJMP */
  SE_HANDLE_EXCEPTION_CLEAR, /* called when a feature with an exception handler normally returns */
  SE_HANDLE_EXCEPTION_THROWN, /* called when an exception is thrown, prior to the LONGJMP */
  SE_HANDLE_ENTER_GC, /* called when gc_start() begins */
  SE_HANDLE_EXIT_GC, /* called when gc_start() ends */
  SE_HANDLE_ENTER_PRINT_STACK, /* called when se_print_run_time_stack() begins */
  SE_HANDLE_EXIT_PRINT_STACK, /* called when se_print_run_time_stack() ends */
  SE_HANDLE_NO_MORE_MEMORY, /* called by se_alloc() and co */
  SE_HANDLE_SEDB_BREAK, /* called when sedb stops the program */
  SE_HANDLE_SEDB_CONTINUE, /* called when sedb continues the program */
  SE_HANDLE_RUNTIME_ERROR, /* called when a runtime error is raised and not caught by an exception. Cannot be raised in boost mode. */
  SE_HANDLE_DIE_WITH_CODE, /* called when the program is stopped by the die_with_code feature. The data points to the int code. */
  SE_HANDLE_NORMAL_EXIT /* called when the program correctly terminates. The data is null. */
} se_handler_action_t;

extern int handlers_count;
typedef void se_runtime_handler_t(se_handler_action_t action, void*data);
void register_handler(se_runtime_handler_t*handler);
void _handle(se_handler_action_t action, void*data);

#define handle(action,data) do{if(handlers_count>0)_handle(action,data);}while(0)

#endif /* #ifndef _BASE_H */
#define SE_BOOST 1
#define SE_GC_LIB 1
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <dirent.h>
#endif
#ifndef WIN32
#  include <unistd.h>
#endif

EIF_POINTER directory_open(EIF_POINTER path);
EIF_POINTER directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN directory_close(EIF_POINTER dirstream);
#define directory_current_working_directory (directory_cwd())
EIF_POINTER directory_cwd(void);
EIF_BOOLEAN directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN directory_rmdir(EIF_POINTER directory_path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_exec_system_none  0
#define basic_exec_system_posix 1
#define basic_exec_system_win32 2

/***************************
 * Common macros and types *
 * basic_exec_xxx          *
 ***************************/

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE || defined  __APPLE__

/*#  include <unistd.h> done in base.h */
/*#  include <sys/types.h> done in base.h */
#include <sys/wait.h>

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  pid_t id; /* the launched child process id */
  int running; /* true if the process is running */
  int child; /* true if the process is the child itself (useful for duplicate) */
  int status; /* the status of the child process if finished */
};

extern char** environ;

#define basic_exec_id(data) (((se_exec_data_t*)data)->id)
#define basic_exec_is_child(data) (((se_exec_data_t*)data)->child)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)
#define basic_exec_alloc_pipe() (calloc(2, sizeof(int)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)(pipe(p)>=0))
#define basic_exec_system basic_exec_system_posix

#elif defined WIN32
/*#  include <windows.h> done in base.h */

typedef struct se_exec_data se_exec_data_t;
struct se_exec_data {
  PROCESS_INFORMATION process_information;
  int running;
  DWORD status;
};

#define basic_exec_id(data) (((se_exec_data_t*)data)->process_information.dwProcessId)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (((se_exec_data_t*)data)->status)

#define basic_exec_alloc_pipe() (calloc(2, sizeof(HANDLE)))
#define basic_exec_free_pipe(p) (free(p))
#define basic_exec_alloc_data() ((se_exec_data_t*)se_malloc(sizeof(se_exec_data_t)))
#define basic_exec_free_data(p) (free(p))
#define basic_exec_system basic_exec_system_win32

extern EIF_BOOLEAN basic_exec_init_pipe(HANDLE*p);

#else
/* Dummy implementation that always reports an error back to the Eiffel side */
typedef int se_exec_data_t;

#define basic_exec_id(data) (-1)
#define basic_exec_is_child(data) (0)
#define basic_exec_status(data) (0)

#define basic_exec_alloc_pipe() (NULL)
#define basic_exec_free_pipe(p) /* dummy */
#define basic_exec_alloc_data() ((se_exec_data_t*)NULL)
#define basic_exec_free_data(p) /* dummy */
#define basic_exec_init_pipe(p) ((EIF_BOOLEAN)0)
#define basic_exec_system basic_exec_system_none

#endif

/***********************************
 * Prototypes for common functions *
 * basic_exec_xxx                  *
 ***********************************/

extern EIF_BOOLEAN basic_exec_is_finished(se_exec_data_t*data);
extern void basic_exec_wait(se_exec_data_t*data);
extern void basic_exec_cleanup(se_exec_data_t*data, int status);

/*************************************************
 * Posix-specific function prototypes and macros *
 * basic_exec_posix_xxx                          *
 *************************************************/

extern EIF_BOOLEAN basic_exec_posix_execute(se_exec_data_t*data, char*prog, char**args, EIF_BOOLEAN keep_env, char**add_env, int*in_fd, int*out_fd, int*err_fd);
extern EIF_INTEGER basic_exec_posix_get_character (EIF_INTEGER fd);
extern void basic_exec_posix_put_character(EIF_INTEGER fd, EIF_CHARACTER c);
extern void basic_exec_posix_wait_any(se_exec_data_t*data);
extern void basic_exec_posix_any_finished(se_exec_data_t*data);

#if basic_exec_system == basic_exec_system_posix
#define basic_exec_posix_flush(fd) (fsync(fd))
#define basic_exec_posix_close(fd) (close(fd))
#define basic_exec_posix_kill(data, sig) (kill((data)->id, (sig)))
#define basic_exec_posix_get_in_descriptor(pipe) (((int*)pipe)[0])
#define basic_exec_posix_get_out_descriptor(pipe) (((int*)pipe)[1])
#else
#define basic_exec_posix_flush(fd) /* dummy */
#define basic_exec_posix_close(fd) /* dummy */
#define basic_exec_posix_kill(data, sig) /* dummy */
#define basic_exec_posix_get_in_descriptor(pipe) 0
#define basic_exec_posix_get_out_descriptor(pipe) 0
#endif

/*************************************************
 * Win32-specific function prototypes and macros *
 * basic_exec_win32_xxx                          *
 *************************************************/

#if basic_exec_system == basic_exec_system_win32
#define basic_exec_win32_flush(h) FlushFileBuffers((HANDLE)h)
#define basic_exec_win32_close(h) CloseHandle((HANDLE)h)
#define basic_exec_win32_handle(data) ((int)((se_exec_data_t*)data)->process_information.hProcess)
#define basic_exec_win32_maximum_wait (MAXIMUM_WAIT_OBJECTS)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, HANDLE*in_h, HANDLE*out_h, HANDLE*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(HANDLE*handles, DWORD count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(HANDLE h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (HANDLE h);
#define basic_exec_win32_get_in_handle(pipe) (((HANDLE*)pipe)[0])
#define basic_exec_win32_get_out_handle(pipe) (((HANDLE*)pipe)[1])
#else
#define basic_exec_win32_flush(h) /* dummy */
#define basic_exec_win32_close(h) /* dummy */
#define basic_exec_win32_handle(data) (0)
#define basic_exec_win32_maximum_wait (0)
extern EIF_BOOLEAN basic_exec_win32_execute(se_exec_data_t*data, char*args, EIF_BOOLEAN keep_env, char*add_env, void*in_h, void*out_h, void*err_h);
extern EIF_BOOLEAN basic_exec_win32_wait_any(void*handles, int count, se_exec_data_t*data);
extern EIF_BOOLEAN basic_exec_win32_any_finished(void*handles, int count, se_exec_data_t*data);
extern void basic_exec_win32_put_character(void*h, EIF_CHARACTER c);
extern EIF_INTEGER basic_exec_win32_get_character (void*h);
#define basic_exec_win32_get_in_handle(pipe) NULL
#define basic_exec_win32_get_out_handle(pipe) NULL
#endif

extern void basic_exec_waitpid_init(EIF_OBJECT);
extern EIF_INTEGER basic_exec_waitpid_fd(void);
extern EIF_INTEGER basic_exec_waitpid_read_buffer(void*);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define mbi_unsigned_32_to_integer_64(x) (((int64_t)((uint32_t)(x))))
#define mbi_unsigned_less_than(a,b) ((((uint32_t)(a)) < ((uint32_t)(b))))
#define mbi_unsigned_greater_than(a,b) ((((uint32_t)(a)) > ((uint32_t)(b))))
#define mbi_unsigned_greater_or_equal(a,b) ((((uint32_t)(a)) >= ((uint32_t)(b))))
#define mbi_storage_at(s, n) (((s)+(n)))
EIF_BOOLEAN mbi_inc (int32_t *p);
EIF_BOOLEAN mbi_add (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_add_with_inc (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_dec (int32_t *p);
EIF_BOOLEAN mbi_subtract (int32_t a, int32_t b, int32_t *p);
EIF_BOOLEAN mbi_subtract_with_dec (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply (int32_t a, int32_t b, int32_t *p);
EIF_INTEGER mbi_multiply_with_add (int32_t a, int32_t b, int32_t c, int32_t *p);
EIF_INTEGER mbi_multiply_with_2_add (int32_t a, int32_t b, int32_t c, int32_t d, int32_t *p);
EIF_INTEGER mbi_divide (int32_t a, int32_t b, int32_t d, int32_t *r);



/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define basic_getenv(v) (getenv((char*)v))
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#include <errno.h>

#define text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define io_fclose(p) (fclose((FILE*)(p)))
#define io_flush(p) (fflush((FILE*)(p)))
#define io_getc(f) (getc(((FILE*)(f))))
#define io_putc(b, f) (putc((b),((FILE*)(f))))
#define io_ungetc(b, f) (ungetc((b), (FILE*)(f)))
#define io_fread(b, n, f) (fread((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_fwrite(b, n, f) (fwrite((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define io_feof(f) (feof(((FILE*)(f))))
#define io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define io_remove(f) (remove(((char*)(f))))
#define io_fseek(f, o) (fseek((FILE*)(f),(o),SEEK_SET))
#define io_ftell(f) ((EIF_INTEGER_64)ftell((FILE*)(f)))

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  define read_stdin(b, s) (read(STDIN_FILENO, b, s))
#else
   extern int read_stdin(EIF_CHARACTER *buffer, int size);
#endif

extern void io_copy(char*source, char*target);
extern int io_file_exists(char*source);
extern int io_same_physical_file(char*path1,char*path2);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/

EIF_INTEGER fstat_st_size(EIF_POINTER path);
EIF_INTEGER_64 fstat_st_mtime(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_file(EIF_POINTER path);
EIF_BOOLEAN fstat_st_is_dir(EIF_POINTER path);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define sprintf_pointer(buffer, pointer) sprintf((char*)(buffer),"%p",pointer)
void sprintf_real_64(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real64_t r);
void sprintf_real_extended(EIF_CHARACTER* b, EIF_CHARACTER m, int32_t f, real_extended_t r);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#ifndef WIN32
#  include <sys/time.h>
#endif

extern EIF_INTEGER basic_microsecond_microsecond;
extern EIF_INTEGER_64 basic_microsecond_time;
#define basic_microsecond_update (_basic_microsecond_update())
void _basic_microsecond_update(void);
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define pointer_hash_code(p) (((unsigned int)(unsigned long)(p))>>1)
#define pointer_to_natural_32(p) ((unsigned int) (p))
#define pointer_to_any(p) ((T0*)(p))
#define pointer_plus(p, o) (((char*)(p))+o)
/* C Header Pass 1: */
typedef union _se_agent se_agent;
typedef struct _se_agent0 se_agent0;
typedef struct S29 T29;
typedef int T286;
typedef struct S108 T108;
typedef void*T975;
typedef struct S100 T100;
typedef struct S121 T121;
typedef struct S274 T274;
typedef struct S112 T112;
typedef struct S107 T107;
typedef struct S282 T282;
typedef void*T272;
typedef struct S7 T7;
typedef struct S619 T619;
typedef struct S1003 T1003;
typedef int T637;
typedef struct S84 T84;
typedef struct S1004 T1004;
typedef struct S284 T284;
typedef int T285;
typedef int T549;
typedef struct S534 T534;
typedef struct S77 T77;
typedef struct S1005 T1005;
typedef struct S536 T536;
typedef struct S540 T540;
typedef struct S541 T541;
typedef struct S542 T542;
typedef struct S543 T543;
typedef struct S544 T544;
typedef struct S1006 T1006;
typedef struct S1007 T1007;
typedef struct S98 T98;
typedef struct S535 T535;
typedef struct S452 T452;
typedef struct S451 T451;
typedef struct S639 T639;
typedef struct S80 T80;
typedef struct S68 T68;
typedef struct S1008 T1008;
typedef struct S103 T103;
typedef struct S118 T118;
typedef struct S682 T682;
typedef struct S686 T686;
typedef struct S684 T684;
typedef struct S545 T545;
typedef struct S678 T678;
typedef struct S338 T338;
typedef struct S420 T420;
typedef struct S1009 T1009;
typedef struct S319 T319;
typedef struct S681 T681;
typedef struct S1010 T1010;
typedef struct S429 T429;
typedef struct S756 T756;
typedef struct S564 T564;
typedef struct S594 T594;
typedef struct S595 T595;
typedef struct S596 T596;
typedef struct S597 T597;
typedef struct S609 T609;
typedef struct S610 T610;
typedef struct S611 T611;
typedef struct S613 T613;
typedef struct S614 T614;
typedef struct S618 T618;
typedef struct S620 T620;
typedef struct S621 T621;
typedef struct S622 T622;
typedef struct S623 T623;
typedef struct S624 T624;
typedef struct S625 T625;
typedef struct S627 T627;
typedef struct S626 T626;
typedef struct S628 T628;
typedef struct S629 T629;
typedef struct S630 T630;
typedef struct S1011 T1011;
typedef void*T631;
typedef struct S1012 T1012;
typedef struct S1013 T1013;
typedef struct S368 T368;
typedef struct S93 T93;
typedef struct S95 T95;
typedef struct S1014 T1014;
typedef struct S1015 T1015;
typedef struct S1016 T1016;
typedef struct S277 T277;
typedef struct S87 T87;
typedef struct S532 T532;
typedef struct S1018 T1018;
typedef struct S328 T328;
typedef void*T106;
typedef struct S104 T104;
typedef void*T111;
typedef void*T120;
typedef struct S119 T119;
typedef void*T122;
typedef struct S89 T89;
typedef struct S438 T438;
typedef struct S1020 T1020;
typedef struct S1021 T1021;
typedef struct S115 T115;
typedef struct S433 T433;
typedef struct S1024 T1024;
typedef int T563;
typedef struct S1025 T1025;
typedef struct S1026 T1026;
typedef struct S788 T788;
typedef struct S790 T790;
typedef struct S791 T791;
typedef struct S792 T792;
typedef struct S793 T793;
typedef struct S327 T327;
typedef struct S1030 T1030;
typedef struct S1031 T1031;
typedef int T1032;
typedef struct S775 T775;
typedef struct S777 T777;
typedef int T1034;
typedef struct S776 T776;
typedef struct S1035 T1035;
typedef struct S1036 T1036;
typedef struct S58 T58;
typedef struct S1037 T1037;
typedef struct S1038 T1038;
typedef struct S293 T293;
typedef struct S1039 T1039;
typedef struct S1042 T1042;
typedef struct S1044 T1044;
typedef struct S1045 T1045;
typedef struct S1046 T1046;
typedef struct S1047 T1047;
typedef struct S281 T281;
typedef int T79;
typedef int T1049;
typedef struct S1051 T1051;
typedef struct S102 T102;
typedef struct S1054 T1054;
typedef struct S747 T747;
typedef struct S795 T795;
typedef struct S1056 T1056;
typedef struct S1058 T1058;
typedef struct S1060 T1060;
typedef struct S1062 T1062;
typedef struct S749 T749;
typedef struct S472 T472;
typedef struct S1065 T1065;
typedef struct S449 T449;
typedef struct S426 T426;
typedef struct S380 T380;
typedef struct S432 T432;
typedef struct S441 T441;
typedef struct S485 T485;
typedef struct S495 T495;
typedef struct S497 T497;
typedef struct S354 T354;
typedef struct S116 T116;
typedef struct S498 T498;
typedef struct S445 T445;
typedef struct S408 T408;
typedef struct S381 T381;
typedef struct S436 T436;
typedef struct S407 T407;
typedef struct S434 T434;
typedef struct S403 T403;
typedef struct S437 T437;
typedef struct S435 T435;
typedef struct S442 T442;
typedef struct S439 T439;
typedef struct S443 T443;
typedef struct S446 T446;
typedef struct S273 T273;
typedef struct S467 T467;
typedef struct S469 T469;
typedef struct S470 T470;
typedef struct S471 T471;
typedef struct S421 T421;
typedef struct S1066 T1066;
typedef struct S280 T280;
typedef struct S478 T478;
typedef struct S1067 T1067;
typedef struct S518 T518;
typedef struct S487 T487;
typedef struct S401 T401;
typedef struct S474 T474;
typedef struct S371 T371;
typedef struct S475 T475;
typedef struct S476 T476;
typedef struct S339 T339;
typedef struct S348 T348;
typedef struct S351 T351;
typedef struct S353 T353;
typedef struct S342 T342;
typedef struct S346 T346;
typedef struct S347 T347;
typedef struct S489 T489;
typedef struct S490 T490;
typedef struct S491 T491;
typedef struct S480 T480;
typedef struct S385 T385;
typedef struct S456 T456;
typedef struct S462 T462;
typedef struct S481 T481;
typedef struct S515 T515;
typedef struct S516 T516;
typedef struct S1068 T1068;
typedef struct S1069 T1069;
typedef struct S453 T453;
typedef struct S454 T454;
typedef struct S1070 T1070;
typedef struct S391 T391;
typedef struct S1071 T1071;
typedef struct S662 T662;
typedef struct S1072 T1072;
typedef struct S418 T418;
typedef struct S388 T388;
typedef struct S1073 T1073;
typedef struct S392 T392;
typedef struct S448 T448;
typedef struct S517 T517;
typedef struct S1074 T1074;
typedef struct S477 T477;
typedef struct S412 T412;
typedef struct S398 T398;
typedef struct S1075 T1075;
typedef struct S357 T357;
typedef struct S369 T369;
typedef struct S362 T362;
typedef struct S479 T479;
typedef struct S423 T423;
typedef struct S465 T465;
typedef struct S466 T466;
typedef struct S364 T364;
typedef struct S404 T404;
typedef struct S463 T463;
typedef struct S494 T494;
typedef struct S484 T484;
typedef struct S367 T367;
typedef struct S394 T394;
typedef struct S464 T464;
typedef struct S459 T459;
typedef struct S395 T395;
typedef struct S657 T657;
typedef struct S483 T483;
typedef struct S457 T457;
typedef struct S396 T396;
typedef struct S492 T492;
typedef struct S514 T514;
typedef struct S513 T513;
typedef struct S509 T509;
typedef struct S510 T510;
typedef struct S511 T511;
typedef struct S512 T512;
typedef struct S508 T508;
typedef struct S374 T374;
typedef struct S397 T397;
typedef struct S504 T504;
typedef struct S505 T505;
typedef struct S506 T506;
typedef struct S507 T507;
typedef struct S402 T402;
typedef struct S503 T503;
typedef struct S500 T500;
typedef struct S501 T501;
typedef struct S502 T502;
typedef struct S499 T499;
typedef struct S458 T458;
typedef struct S493 T493;
typedef struct S283 T283;
typedef struct S461 T461;
typedef struct S460 T460;
typedef struct S1076 T1076;
typedef struct S419 T419;
typedef struct S428 T428;
typedef struct S748 T748;
typedef struct S455 T455;
typedef struct S358 T358;
typedef struct S410 T410;
typedef struct S393 T393;
typedef struct S1077 T1077;
typedef struct S1078 T1078;
typedef struct S1079 T1079;
typedef struct S1080 T1080;
/*BUG:NA@runtime!*/typedef void*T85;
typedef struct S1084 T1084;
typedef struct S530 T530;
typedef struct S1085 T1085;
typedef struct S1087 T1087;
typedef struct S430 T430;
typedef struct S422 T422;
typedef T0 T1088;
typedef T0 T1091;
typedef struct S1093 T1093;
typedef struct S1094 T1094;
typedef struct S450 T450;
typedef struct S427 T427;
typedef struct S447 T447;
typedef struct S1095 T1095;
typedef struct S425 T425;
typedef struct S1096 T1096;
typedef struct S1098 T1098;
typedef struct S1099 T1099;
typedef struct S1101 T1101;
typedef struct S1103 T1103;
typedef struct S1106 T1106;
typedef struct S1107 T1107;
typedef struct S1110 T1110;
typedef struct S1111 T1111;
typedef struct S1112 T1112;
typedef struct S1113 T1113;
typedef struct S1114 T1114;
typedef struct S1115 T1115;
typedef struct S523 T523;
typedef struct S1117 T1117;
typedef struct S1121 T1121;
typedef struct S1122 T1122;
typedef struct S1123 T1123;
typedef struct S1124 T1124;
typedef struct S1125 T1125;
typedef struct S525 T525;
typedef struct S1126 T1126;
typedef struct S1127 T1127;
typedef struct S558 T558;
typedef struct S1129 T1129;
typedef struct S1130 T1130;
typedef struct S1131 T1131;
typedef struct S400 T400;
/*BUG:NA@runtime!*/typedef struct S365 T365;
typedef struct S1133 T1133;
typedef struct S1134 T1134;
typedef struct S1136 T1136;
typedef struct S1137 T1137;
typedef struct S633 T633;
typedef struct S1138 T1138;
typedef struct S1139 T1139;
typedef struct S1140 T1140;
typedef struct S335 T335;
typedef struct S1141 T1141;
typedef struct S1146 T1146;
typedef struct S1147 T1147;
typedef struct S1148 T1148;
typedef struct S1149 T1149;
typedef struct S1150 T1150;
typedef struct S1151 T1151;
typedef struct S1153 T1153;
typedef struct S1154 T1154;
typedef struct S1157 T1157;
typedef struct S1160 T1160;
typedef struct S1161 T1161;
typedef struct S1162 T1162;
typedef struct S406 T406;
typedef struct S1163 T1163;
typedef struct S559 T559;
typedef struct S1164 T1164;
typedef struct S1165 T1165;
typedef struct S1168 T1168;
typedef struct S1169 T1169;
typedef struct S1171 T1171;
typedef struct S311 T311;
typedef int T712;
typedef struct S1174 T1174;
typedef struct S1175 T1175;
typedef struct S1177 T1177;
typedef struct S1181 T1181;
/*BUG:NA@runtime!*/typedef struct S680 T680;
typedef struct S1184 T1184;
typedef struct S1185 T1185;
typedef struct S522 T522;
typedef struct S1187 T1187;
typedef struct S771 T771;
typedef struct S1189 T1189;
typedef struct S1190 T1190;
typedef struct S1191 T1191;
typedef struct S1192 T1192;
typedef struct S1194 T1194;
typedef struct S1195 T1195;
typedef struct S1198 T1198;
typedef struct S1199 T1199;
typedef struct S1200 T1200;
typedef struct S1201 T1201;
typedef struct S1203 T1203;
typedef struct S695 T695;
typedef struct S640 T640;
typedef struct S648 T648;
typedef struct S560 T560;
typedef struct S653 T653;
typedef struct S650 T650;
typedef struct S651 T651;
typedef struct S646 T646;
typedef struct S649 T649;
typedef struct S647 T647;
typedef struct S652 T652;
typedef struct S643 T643;
typedef struct S642 T642;
typedef struct S645 T645;
typedef struct S1205 T1205;
typedef struct S1206 T1206;
typedef struct S1207 T1207;
typedef struct S688 T688;
/*BUG:NA@runtime!*/typedef void*T340;
/*BUG:NA@runtime!*/typedef void*T389;
/*BUG:NA@runtime!*/typedef void*T387;
typedef struct S1214 T1214;
typedef struct S1218 T1218;
typedef struct S730 T730;
typedef struct S1220 T1220;
typedef struct S379 T379;
typedef struct S676 T676;
typedef struct S666 T666;
typedef struct S1221 T1221;
typedef struct S1222 T1222;
typedef struct S671 T671;
typedef struct S1223 T1223;
typedef struct S1224 T1224;
typedef struct S1225 T1225;
typedef struct S1229 T1229;
typedef struct S1230 T1230;
/*BUG:NA@runtime!*/typedef void*T376;
typedef struct S1232 T1232;
typedef struct S1233 T1233;
typedef struct S1235 T1235;
/*BUG:NA@runtime!*/typedef struct S331 T331;
/*BUG:NA@runtime!*/typedef struct S336 T336;
typedef struct S1241 T1241;
typedef struct S1242 T1242;
typedef struct S1243 T1243;
typedef struct S1244 T1244;
typedef struct S1245 T1245;
typedef struct S1246 T1246;
typedef struct S1248 T1248;
typedef struct S1250 T1250;
typedef struct S1251 T1251;
typedef struct S1255 T1255;
typedef struct S1257 T1257;
typedef struct S1259 T1259;
typedef struct S1260 T1260;
typedef struct S1261 T1261;
/*BUG:NA@runtime!*/typedef void*T341;
typedef struct S1266 T1266;
typedef struct S1267 T1267;
typedef struct S1271 T1271;
typedef struct S1272 T1272;
typedef struct S1273 T1273;
typedef struct S1274 T1274;
typedef struct S1277 T1277;
typedef struct S1278 T1278;
typedef struct S1279 T1279;
typedef struct S1280 T1280;
typedef struct S1283 T1283;
typedef struct S1284 T1284;
typedef struct S1286 T1286;
typedef struct S1287 T1287;
typedef struct S1290 T1290;
typedef struct S1291 T1291;
typedef struct S1292 T1292;
typedef struct S1294 T1294;
typedef struct S413 T413;
typedef struct S731 T731;
typedef struct S1297 T1297;
typedef struct S1298 T1298;
typedef struct S1300 T1300;
typedef struct S1301 T1301;
typedef struct S1304 T1304;
typedef struct S1305 T1305;
typedef struct S1306 T1306;
typedef struct S1307 T1307;
typedef struct S1309 T1309;
typedef struct S1310 T1310;
typedef struct S1314 T1314;
typedef struct S1315 T1315;
typedef struct S356 T356;
typedef struct S1319 T1319;
/*BUG:NA@runtime!*/typedef void*T548;
typedef struct S1321 T1321;
typedef struct S1323 T1323;
typedef struct S1325 T1325;
/*BUG:NA@runtime!*/typedef void*T1178;
/*BUG:NA@runtime!*/typedef T0 T1182;
typedef struct S1329 T1329;
typedef struct S1330 T1330;
typedef struct S1332 T1332;
typedef struct S767 T767;
typedef struct S768 T768;
typedef struct S769 T769;
typedef struct S764 T764;
typedef struct S765 T765;
typedef struct S766 T766;
typedef struct S1334 T1334;
typedef struct S1336 T1336;
typedef struct S1338 T1338;
typedef struct S1339 T1339;
typedef struct S1342 T1342;
typedef struct S1343 T1343;
typedef struct S1345 T1345;
typedef struct S1346 T1346;
typedef struct S1348 T1348;
typedef struct S1349 T1349;
typedef struct S1351 T1351;
/*BUG:NA@runtime!*/typedef void*T378;
/*BUG:NA@runtime!*/typedef void*T344;
typedef struct S1357 T1357;
typedef struct S1360 T1360;
typedef struct S1361 T1361;
typedef struct S1363 T1363;
typedef struct S1364 T1364;
typedef struct S1367 T1367;
typedef struct S1368 T1368;
typedef struct S1374 T1374;
typedef struct S1375 T1375;
typedef struct S821 T821;
typedef struct S1377 T1377;
typedef struct S1378 T1378;
typedef struct S1380 T1380;
typedef struct S1381 T1381;
typedef struct S1383 T1383;
typedef struct S1384 T1384;
typedef int T1387;
typedef struct S1388 T1388;
typedef struct S1389 T1389;
typedef struct S337 T337;
typedef struct S1391 T1391;
typedef struct S1392 T1392;
typedef struct S1393 T1393;
typedef struct S1394 T1394;
typedef struct S1396 T1396;
typedef struct S1398 T1398;
typedef struct S1399 T1399;
typedef struct S1401 T1401;
typedef struct S1405 T1405;
typedef struct S1406 T1406;
typedef struct S1407 T1407;
typedef struct S1408 T1408;
typedef struct S1409 T1409;
typedef struct S1412 T1412;
typedef struct S1413 T1413;
typedef struct S1414 T1414;
typedef struct S1415 T1415;
typedef struct S1418 T1418;
typedef struct S1419 T1419;
typedef struct S60 T60;
typedef struct S773 T773;
typedef int T1421;
typedef struct S734 T734;
typedef struct S658 T658;
typedef T0 T1423;
typedef struct S1425 T1425;
typedef struct S1426 T1426;
typedef struct S1428 T1428;
typedef struct S1431 T1431;
typedef struct S664 T664;
typedef struct S668 T668;
typedef struct S669 T669;
typedef struct S672 T672;
typedef struct S675 T675;
typedef struct S667 T667;
typedef struct S661 T661;
typedef struct S665 T665;
typedef uint64_t T16; /*NATURAL_64*/
typedef struct S673 T673;
typedef struct S654 T654;
typedef int T329;
typedef struct S1432 T1432;
typedef struct S1433 T1433;
typedef struct S524 T524;
typedef struct S1434 T1434;
typedef struct S677 T677;
typedef struct S663 T663;
typedef struct S659 T659;
typedef struct S1435 T1435;
typedef struct S1436 T1436;
typedef struct S1437 T1437;
typedef int T306;
typedef struct S1438 T1438;
typedef struct S1439 T1439;
typedef struct S1445 T1445;
typedef struct S527 T527;
typedef struct S123 T123;
typedef struct S732 T732;
typedef struct S737 T737;
typedef struct S117 T117;
typedef struct S1447 T1447;
typedef struct S414 T414;
typedef struct S411 T411;
typedef struct S366 T366;
typedef struct S783 T783;
typedef struct S636 T636;
typedef struct S785 T785;
typedef struct S782 T782;
typedef struct S674 T674;
typedef struct S531 T531;
typedef struct S784 T784;
typedef struct S635 T635;
typedef struct S1448 T1448;
typedef struct S823 T823;
typedef struct S825 T825;
typedef struct S826 T826;
typedef struct S827 T827;
typedef struct S1449 T1449;
typedef struct S1451 T1451;
typedef struct S1453 T1453;
typedef struct S1454 T1454;
typedef struct S1455 T1455;
typedef struct S1456 T1456;
typedef struct S1458 T1458;
typedef struct S1459 T1459;
typedef struct S1461 T1461;
typedef struct S1462 T1462;
typedef struct S1463 T1463;
typedef struct S670 T670;
typedef struct S702 T702;
typedef struct S1468 T1468;
typedef struct S1469 T1469;
typedef int T1474;
typedef struct S976 T976;
typedef struct S632 T632;
typedef struct S557 T557;
typedef T0 T1475;
typedef T0 T1477;
typedef T0 T1479;
typedef T0 T1481;
typedef T0 T1483;
typedef T0 T1485;
typedef struct S1487 T1487;
typedef struct S1488 T1488;
typedef struct S551 T551;
typedef struct S552 T552;
typedef struct S553 T553;
typedef struct S554 T554;
typedef struct S555 T555;
typedef struct S556 T556;
typedef int T1489;
typedef T0 T1491;
typedef struct S1494 T1494;
typedef struct S1498 T1498;
typedef int T1499;
typedef struct S797 T797;
typedef struct S1500 T1500;
typedef T0 T1501;
typedef struct S794 T794;
typedef struct S1506 T1506;
typedef struct S1507 T1507;
typedef struct S707 T707;
typedef struct S1508 T1508;
/*BUG:NA@runtime!*/typedef void*T550;
typedef struct S1512 T1512;
typedef struct S1513 T1513;
typedef struct S1515 T1515;
typedef struct S704 T704;
typedef struct S1519 T1519;
typedef struct S1520 T1520;
typedef T0 T1522;
typedef T0 T1525;
typedef T0 T1528;
typedef T0 T1530;
typedef struct S1533 T1533;
typedef struct S781 T781;
typedef struct S1534 T1534;
typedef struct S779 T779;
typedef int T1536;
typedef struct S1537 T1537;
typedef struct S1539 T1539;
typedef struct S1540 T1540;
/* C Header Pass 2: */
typedef T3*T9;
#define M9 NULL
typedef T0**T1028;
#define M1028 NULL
typedef T0**T1043;
#define M1043 NULL
typedef T0**T1048;
#define M1048 NULL
typedef T0**T1052;
#define M1052 NULL
typedef T10*T1053;
#define M1053 NULL
typedef T0**T1057;
#define M1057 NULL
typedef T0**T1081;
#define M1081 NULL
typedef T0**T1082;
#define M1082 NULL
typedef T0**T1083;
#define M1083 NULL
typedef T0**T1097;
#define M1097 NULL
typedef T0**T1100;
#define M1100 NULL
typedef T2*T1102;
#define M1102 NULL
typedef T0**T1132;
#define M1132 NULL
typedef T0**T1135;
#define M1135 NULL
typedef T0**T1152;
#define M1152 NULL
typedef T0**T1155;
#define M1155 NULL
typedef T0**T1156;
#define M1156 NULL
typedef T0**T1166;
#define M1166 NULL
typedef T338*T1167;
#define M1167 NULL
typedef T0**T1173;
#define M1173 NULL
typedef T0**T1176;
#define M1176 NULL
typedef T0**T1179;
#define M1179 NULL
typedef T0**T1180;
#define M1180 NULL
typedef T0**T1183;
#define M1183 NULL
typedef T0**T1193;
#define M1193 NULL
typedef T0**T1196;
#define M1196 NULL
typedef T0**T1197;
#define M1197 NULL
typedef T0**T1202;
#define M1202 NULL
typedef T0**T1204;
#define M1204 NULL
typedef T0**T1208;
#define M1208 NULL
typedef T0**T1209;
#define M1209 NULL
typedef T0**T1210;
#define M1210 NULL
typedef T0**T1211;
#define M1211 NULL
typedef T0**T1212;
#define M1212 NULL
typedef T0**T1213;
#define M1213 NULL
typedef T0**T1215;
#define M1215 NULL
typedef T0**T1216;
#define M1216 NULL
typedef T0**T1217;
#define M1217 NULL
typedef T0**T1219;
#define M1219 NULL
typedef T0**T1227;
#define M1227 NULL
typedef T0**T1228;
#define M1228 NULL
typedef T0**T1231;
#define M1231 NULL
typedef T0**T1234;
#define M1234 NULL
typedef T0**T1237;
#define M1237 NULL
typedef T0**T1238;
#define M1238 NULL
typedef T0**T1239;
#define M1239 NULL
typedef T0**T1240;
#define M1240 NULL
typedef T0**T1247;
#define M1247 NULL
typedef T0**T1249;
#define M1249 NULL
typedef T0**T1256;
#define M1256 NULL
typedef T0**T1262;
#define M1262 NULL
typedef T0**T1263;
#define M1263 NULL
typedef T0**T1264;
#define M1264 NULL
typedef T0**T1265;
#define M1265 NULL
typedef T0**T1268;
#define M1268 NULL
typedef T0**T1270;
#define M1270 NULL
typedef T0**T1275;
#define M1275 NULL
typedef T0**T1276;
#define M1276 NULL
typedef T0**T1281;
#define M1281 NULL
typedef T0**T1282;
#define M1282 NULL
typedef T0**T1285;
#define M1285 NULL
typedef T0**T1288;
#define M1288 NULL
typedef T0**T1289;
#define M1289 NULL
typedef T0**T1293;
#define M1293 NULL
typedef T0**T1295;
#define M1295 NULL
typedef T0**T1296;
#define M1296 NULL
typedef T0**T1299;
#define M1299 NULL
typedef T0**T1302;
#define M1302 NULL
typedef T0**T1303;
#define M1303 NULL
typedef T0**T1308;
#define M1308 NULL
typedef T0**T1311;
#define M1311 NULL
typedef T0**T1312;
#define M1312 NULL
typedef T1*T1313;
#define M1313 NULL
typedef T0**T1316;
#define M1316 NULL
typedef T0**T1317;
#define M1317 NULL
typedef T0**T1318;
#define M1318 NULL
typedef T0**T1320;
#define M1320 NULL
typedef T0**T1322;
#define M1322 NULL
typedef T311*T1324;
#define M1324 NULL
typedef T0**T1326;
#define M1326 NULL
typedef T0**T1327;
#define M1327 NULL
typedef T0**T1328;
#define M1328 NULL
typedef T0**T1335;
#define M1335 NULL
typedef T0**T1337;
#define M1337 NULL
typedef T0**T1340;
#define M1340 NULL
typedef T0**T1341;
#define M1341 NULL
typedef T0**T1344;
#define M1344 NULL
typedef T0**T1347;
#define M1347 NULL
typedef T0**T1350;
#define M1350 NULL
typedef T0**T1352;
#define M1352 NULL
typedef T0**T1353;
#define M1353 NULL
typedef T0**T1354;
#define M1354 NULL
typedef T0**T1355;
#define M1355 NULL
typedef T0**T1356;
#define M1356 NULL
typedef T0**T1358;
#define M1358 NULL
typedef T0**T1359;
#define M1359 NULL
typedef T0**T1362;
#define M1362 NULL
typedef T0**T1370;
#define M1370 NULL
typedef T0**T1371;
#define M1371 NULL
typedef T0**T1372;
#define M1372 NULL
typedef T0**T1373;
#define M1373 NULL
typedef T0**T1376;
#define M1376 NULL
typedef T0**T1382;
#define M1382 NULL
typedef T0**T1385;
#define M1385 NULL
typedef T0**T1386;
#define M1386 NULL
typedef T0**T1390;
#define M1390 NULL
typedef T0**T1397;
#define M1397 NULL
typedef T0**T1400;
#define M1400 NULL
typedef T0**T1402;
#define M1402 NULL
typedef T0**T1416;
#define M1416 NULL
typedef T0**T1417;
#define M1417 NULL
typedef T0**T1420;
#define M1420 NULL
typedef T0**T1440;
#define M1440 NULL
typedef T0**T1450;
#define M1450 NULL
typedef T0**T1452;
#define M1452 NULL
typedef T0**T1457;
#define M1457 NULL
typedef T0**T1460;
#define M1460 NULL
typedef T0**T1464;
#define M1464 NULL
typedef T0**T1465;
#define M1465 NULL
typedef T0**T1466;
#define M1466 NULL
typedef T0**T1467;
#define M1467 NULL
typedef T0**T1470;
#define M1470 NULL
typedef T0**T1471;
#define M1471 NULL
typedef T8*T1472;
#define M1472 NULL
typedef T0**T1473;
#define M1473 NULL
typedef T0**T1509;
#define M1509 NULL
typedef T0**T1510;
#define M1510 NULL
typedef T0**T1511;
#define M1511 NULL
typedef T0**T1514;
#define M1514 NULL
typedef T0**T1516;
#define M1516 NULL
typedef T0**T1517;
#define M1517 NULL
typedef T0**T1518;
#define M1518 NULL
typedef T0**T1538;
#define M1538 NULL
/* C Header Pass 2: */
struct S534{T8 _current_entry;T8 _directory_stream;};
int se_cmpT534(T534* o1,T534* o2);
struct S338{T2 _mangling;};
int se_cmpT338(T338* o1,T338* o2);
struct S681{int _file_tools;};
int se_cmpT681(T681* o1,T681* o2);
struct S756{T0* _hashed_string_memory;T2 _column;T2 _line;};
int se_cmpT756(T756* o1,T756* o2);
extern T1032 M1032;
extern T1034 M1034;
extern T1049 M1049;
struct S695{T11 _time_memory;};
int se_cmpT695(T695* o1,T695* o2);
struct S472{T2 _microsecond;T695 _time;};
int se_cmpT472(T472* o1,T472* o2);
struct S335{T2 _hash_code;T0* _feature_name;T0* _class_name;};
int se_cmpT335(T335* o1,T335* o2);
struct S311{T0* _item_memory;T2 _capacity;};
int se_cmpT311(T311* o1,T311* o2);
struct S522{T6 _direct_error;T6 _direct_output;T6 _direct_input;T0* _group;T6 _keep_environment;};
int se_cmpT522(T522* o1,T522* o2);
extern T1387 M1387;
extern T1421 M1421;
struct S734{T2 _first_error_character;T2 _first_error_index;T0* _first_error;};
int se_cmpT734(T734* o1,T734* o2);
extern T1474 M1474;
extern T1489 M1489;
extern T1499 M1499;
extern T1536 M1536;
/* C Header Pass 4: */
struct S29{T0* _level_flag;T6 _version_flag;T6 _help_flag;};
extern T29 M29;
extern T286 M286;
struct S108{T0* _plugin_factory;T0* _plugins;T0* _config_loadpath_names;T0* _config_loadpath_files;T0* _extra_loadpath_files;T6 _c_mode_has_explicit_linker_path_or_option;T0* _smarteiffel_options;T0* _ace_linker_options;T0* _ace_compiler_options;T0* _cpp_strip_path;T0* _cpp_linker_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T2 _c_compiler_mode;T0* _c_compiler;T6 _is_alternate_c_mode;T534 _basic_directory;T0* _is_unix_like;T0* _is_win_like;T6 _no_strip;T0* _short_directory;T0* _bin_directory;T0* _sys_directory;T0* _config;T0* _seconf;T0* _system_flavor;T0* _system_name;};
extern T108 M108;
extern T975 M975;
struct S100{T0* _tmp_feature;T2 _eiffel_parser_stamp;T2 _inline_agent_counter;T0* _last_tag_mark;T0* _last_parent_edge;T0* _last_instruction;T0* _last_formal_generic_type_mark;T0* _last_feature_name_list;T0* _last_feature_name;T0* _last_feature_declaration;T0* _last_class_name;T0* _last_type_mark;T0* _last_expression;T6 _ok;T0* _local_vars;T0* _arguments;T0* _formal_generic_list;T6 _tuple_flag;T6 _inside_rescue_flag;T6 _inside_ensure_flag;T6 _inside_function_flag;T0* _last_class_text;T0* _cluster;T10 _current_id;T11 _total_time;T6 _is_running;T6 _no_rescue;T756 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _column;T2 _line;};
extern T100 M100;
struct S121{T0* _output_path;T0* _error_stream;T0* _output_stream;T2 _output_state;T6 _is_verbose;};
extern T121 M121;
struct S274{T6 _sedb_flag;T0* _root_procedure_name_memory;T0* _splitter;T2 _default_assertion_level;T6 _default_trace;T2 _highest_encountered_level;T6 _clean;T6 _precompile_header;T6 _relax;T6 _profile;T6 _high_memory_compiler;T6 _manifest_string_trace;T6 _safety_check;T6 _no_main;T6 _flat_check;T0* _executable_name;T0* _file_path;T0* _default_debug_keys;T756 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T274 M274;
struct S112{T0* _once_mark_list;T0* _registered_natives;T6 _has_c_plus_plus;T0* _include_memory;T6 _executable_is_up_to_date;T0* _out_h;T6 _assignment_evobt;T6 _in_assignment;T2 _function_count_in_file;T6 _assertion_checks_disabled;T2 _pending_c_function_counter;T6 _pending_c_function;T0* _native_array_collector;T0* _native_need_wrapper;T0* _need_struct;T0* _va_arg_type;T0* _argument_type;T0* _result_type;T0* _target_type;T0* _introspection_display;T0* _introspection_function;T0* _native_c_definition;T0* _native_procedure_mapper;T0* _native_function_mapper;T0* _gc_handler;T0* _compound_expression_compiler;T0* _code_compiler;T0* _arg_mapper;T0* _target_mapper;T0* _initializer;T0* _mapper;T0* _live_type_compiler;T0* _header_pass_4;T0* _header_pass_3;T0* _header_pass_2;T0* _header_pass_1;T0* _unused_contexts;T2 _top;T2 _real_function_count;T2 _real_procedure_count;T2 _precursor_routine_count;T2 _function_count;T2 _procedure_count;};
extern T112 M112;
struct S107{int _live_type_sorter;T0* _live_type_map_;T2 _inspect_when_merge_counter;T0* _polymorphic_distribution;T2 _void_target_function_call_count;T2 _void_target_procedure_call_count;T2 _polymorphic_function_call_count;T2 _polymorphic_procedure_call_count;T2 _expanded_target_function_call_count;T2 _expanded_target_procedure_call_count;T2 _monomorphic_function_call_count;T2 _monomorphic_procedure_call_count;T0* _type_real_extended_memory;T0* _type_real_64_memory;T0* _type_real_32_memory;T0* _type_natural_64_memory;T0* _type_natural_32_memory;T0* _type_natural_16_memory;T0* _type_natural_8_memory;T0* _type_integer_64_memory;T0* _type_integer_32_memory;T0* _type_integer_16_memory;T0* _type_integer_8_memory;T0* _type_pointer_memory;T0* _type_unicode_string_memory;T0* _type_native_array_character_memory;T0* _type_string_memory;T0* _type_character_memory;T0* _type_boolean_memory;T0* _type_any_memory;T0* _specializing_feature_local_var_list;T2 _se_atexit_id;T0* _se_atexit_stamp;T6 _simplify_done;T2 _magic_count;T0* _agent_switches;T0* _agent_creations;T0* _class_invariants;T0* _run_features;T0* _root_procedure;T6 _deep_twin_used;T6 _generator_used;T6 _generating_type_used;T6 _no_id;T6 _pretty_flag;T6 _short_or_class_check_flag;};
extern T107 M107;
struct S282{T10 _min_id;T10 _max_id;};
extern T282 M282;
extern T272 M272;
struct S7{Tid id;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;T2 _generation;};
extern T7 M7;
struct S619{T6 _dispose_flag;T0* _need_mark;T0* _before_mark_compiler;T0* _info_compiler;T0* _functions_compiler;T0* _header_compiler;T6 _info_flag;T6 _is_off;};
extern T619 M619;
struct S1003{Tid id;T2 _upper;T2 _capacity;T1028 _storage;T2 _generation;};
extern T1003 M1003;
extern T637 M637;
struct S84{T0* _cecil_files;T2 _state;};
extern T84 M84;
struct S1004{T0* _item;};
extern T1004 M1004;
struct S284{T6 _style_warning;T6 _no_warning;T2 _warning_counter;T2 _error_counter;};
extern T284 M284;
extern T285 M285;
extern T549 M549;
extern T534 M534;
struct S77{Tid id;};
extern T77 M77;
struct S1005{Tid id;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1043 _buckets;T2 _generation;};
extern T1005 M1005;
struct S536{Tid id;T0* _destination_notation;T0* _current_path;};
extern T536 M536;
struct S540{Tid id;T0* _destination_notation;T0* _current_path;};
extern T540 M540;
struct S541{Tid id;};
extern T541 M541;
struct S542{Tid id;};
extern T542 M542;
struct S543{Tid id;};
extern T543 M543;
struct S544{Tid id;};
extern T544 M544;
struct S1006{T0* _item;};
extern T1006 M1006;
struct S1007{T6 _item;};
extern T1007 M1007;
struct S98{T2 _capacity;T2 _buffer_position;T2 _buffer_size;T6 _end_reached;T9 _buffer;T8 _input_stream;T3 _filtered_last_character;T6 _end_of_input;T0* _filter;T0* _path;};
extern T98 M98;
struct S535{T0* _smarteiffel_options;T0* _cpp_linker_options;T0* _cpp_compiler_options;T0* _cpp_linker_path;T0* _cpp_strip_path;T0* _cpp_compiler_path;T0* _cpp_compiler;T0* _c_linker_options;T0* _c_compiler_options;T0* _c_strip_path;T0* _c_linker_path;T0* _c_compiler_path;T0* _c_compiler;};
extern T535 M535;
struct S452{T6 _busy;T0* _assigned;T0* _names;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _obsolete_mark;T0* _header_comment;T0* _type;T0* _arguments;};
extern T452 M452;
struct S451{Tid id;T8 _output_stream;T2 _capacity;T2 _buffer_position;T9 _buffer;T11 _flushed_character_count;T0* _filter;T0* _path;};
extern T451 M451;
struct S639{Tid id;T0* _stream;};
extern T639 M639;
struct S80{Tid id;T0* _filter;};
extern T80 M80;
struct S68{Tid id;T2 _capacity;T9 _buffer;T2 _buffer_position;T0* _filter;};
extern T68 M68;
struct S1008{T2 _upper;T2 _capacity;T1048 _storage;T2 _generation;};
extern T1008 M1008;
struct S103{T2 _hash_code;T0* _to_string;};
extern T103 M103;
struct S118{T0* _text;T2 _count;T0* _cluster;T0* _hashed_path;};
extern T118 M118;
struct S682{Tid id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T682 M682;
struct S686{Tid id;int _sorter;T0* _ids;T0* _suffixes;T2 _count;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T686 M686;
struct S684{Tid id;T2 _split_id;T0* _live_type;T0* _c_path;T6 _dont_split;};
extern T684 M684;
struct S545{T0* _name_list;int _collection_sorter;T6 _exists;T0* _path;T0* _name;T534 _basic_directory;};
extern T545 M545;
struct S678{Tid id;T0* _classeses;T534 _basic_directory;T2 _distance;T0* _parent;};
extern T678 M678;
extern T338 M338;
struct S420{Tid id;T0* _list;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T420 M420;
struct S1009{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1028 _storage;T2 _generation;};
extern T1009 M1009;
struct S319{T0* _low_surrogate_values;T0* _low_surrogate_indexes;T2 _capacity;T2 _count;T1053 _storage;T2 _generation;};
extern T319 M319;
extern T681 M681;
struct S1010{T2 _upper;T2 _capacity;T1057 _storage;T2 _generation;};
extern T1010 M1010;
struct S429{T0* _pool;T0* _type_dictionary;T0* _exclude_list;T0* _include_list;T0* _option_trace;T0* _option_debug_keys;T0* _option_assertion_level;T3 _default_trace;T2 _default_assertion_level;T0* _directory_path;T0* _name;T0* _class_text_map;T0* _tree;T0* _default_debug_keys;};
extern T429 M429;
extern T756 M756;
struct S564{Tid id;T0* _compiled;};
extern T564 M564;
struct S594{Tid id;T0* _compiled;};
extern T594 M594;
struct S595{Tid id;T0* _compiled;};
extern T595 M595;
struct S596{Tid id;T0* _compiled;};
extern T596 M596;
struct S597{Tid id;T0* _compiled;};
extern T597 M597;
struct S609{Tid id;};
extern T609 M609;
struct S610{Tid id;};
extern T610 M610;
struct S611{Tid id;T0* _target_formal_type;T0* _type;};
extern T611 M611;
struct S613{Tid id;T0* _type;};
extern T613 M613;
struct S614{Tid id;T0* _type;};
extern T614 M614;
struct S618{Tid id;T6 _is_expression;T0* _continue;T0* _finish;T0* _type;};
extern T618 M618;
struct S620{Tid id;T0* _name;T0* _bcn;T0* _type_of_current;T0* _rf8;};
extern T620 M620;
struct S621{Tid id;T0* _rf7;T0* _name;T0* _bcn;T0* _type_of_current;};
extern T621 M621;
struct S622{Tid id;T0* _external_routine_memory;T0* _rf8;T0* _rf7;};
extern T622 M622;
struct S623{Tid id;T6 _put_else;};
extern T623 M623;
struct S624{Tid id;T6 _put_coma;};
extern T624 M624;
struct S625{Tid id;};
extern T625 M625;
struct S627{Tid id;};
extern T627 M627;
struct S626{Tid id;};
extern T626 M626;
struct S628{Tid id;};
extern T628 M628;
struct S629{Tid id;T6 _flag;};
extern T629 M629;
struct S630{Tid id;T0* _name;T0* _type_of_current;T6 _flag;};
extern T630 M630;
struct S1011{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1081 _buckets;T2 _generation;};
extern T1011 M1011;
extern T631 M631;
struct S1012{T2 _upper;T2 _capacity;T1082 _storage;T2 _generation;};
extern T1012 M1012;
struct S1013{T2 _upper;T2 _capacity;T1083 _storage;T2 _generation;};
extern T1013 M1013;
struct S368{Tid id;T0* _writable_attributes_mem;T0* _default_create_run_feature_memory;T0* _to_internals_stamp;T6 _create_blank_internals_used;T0* _create_blank_internals_instruction;T1 _collect_is_deep_equal_status;T6 _collecting_deep_twin;T0* _structure_signature_memory;T0* _actual_clients_;T0* _memory_dispose_stamp;T0* _default_create_stamp;T2 _tagged_memory;T2 _generating_type_level;T6 _has_been_collected;T6 _is_collecting;T0* _precursor_run_features;T0* _precursor_classes;T0* _create_function_list;T0* _live_features;T2 _hash_code;T0* _run_time_set;T6 _at_run_time;T2 _id;T0* _class_text_name;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _type;T0* _tagged_data_map;};
extern T368 M368;
struct S93{T6 _has_tried_to_load;T0* _class_text_memory;T2 _hash_code;T0* _to_string;T0* _hashed_name;T338 _start_position;};
extern T93 M93;
struct S95{Tid id;T0* _insert_inherit_test_memory_cache;T6 _creation_list_check_done;T2 _assertion_level;T0* _declaration_type_of_like_current_memory;T0* _feature_dictionary;T0* _check_expanded_with_flag;T0* _external_type;T2 _hash_code;T6 _sedb_trace;T0* _end_comment;T0* _class_invariant;T0* _feature_clause_list;T0* _creation_clause_list;T0* _parent_lists;T0* _obsolete_mark;T0* _heading_comment2;T0* _formal_generic_list;T0* _name;T6 _is_expanded;T6 _is_deferred;T0* _heading_comment1;T0* _index_list;T0* _cluster;T0* _path;T10 _id;T0* _tagged_data_map;};
extern T95 M95;
struct S1014{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1097 _buckets;T2 _generation;};
extern T1014 M1014;
struct S1015{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1100 _buckets;T2 _generation;};
extern T1015 M1015;
struct S1016{T2 _upper;T2 _capacity;T1102 _storage;T2 _generation;};
extern T1016 M1016;
struct S277{T0* _insert_inherit_test_memory_cache;T0* _address_of_memory2;T0* _address_of_memory1;T0* _temporary_simple_feature_name;T0* _writable_attributes_memory;T0* _feature_stamps;T0* _external_type;T6 _is_deferred;T0* _class_invariant;T2 _hash_code;T0* _private_generic_list;T0* _class_text;T0* _name;T0* _canonical_type_mark;T0* _live_type;T6 _default_rescue_collected;T0* _default_rescue_compound;T0* _children_edge_load;T0* _parents_edge_load;T6 _mark;T0* _children_edge;T0* _parents_edge;T0* _children;T0* _parents;T0* _item;};
extern T277 M277;
struct S87{T0* _run_features;T0* _rename_down_child_feature_stamp;T0* _rename_down_edge;T0* _rename_down_child_class;T0* _rename_down_context_class;T0* _rename_up_parent_feature_stamp;T0* _rename_up_edge;T0* _rename_up_parent_class;T0* _rename_up_context_class;T0* _anonymous_features;T0* _roots;T2 _hash_code;T0* _name;};
extern T87 M87;
struct S532{T6 _inlining_dynamic_dispatch_done;T6 _collecting_done;T0* _specializing_type_memory;T2 _safety_check_state;T2 _phase;};
extern T532 M532;
struct S1018{T2 _lower;T2 _upper;T2 _capacity;T1102 _storage;T2 _generation;};
extern T1018 M1018;
struct S328{T2 _sedb_counter;T0* _current_context;T2 _context_level;T0* _code_stack;};
extern T328 M328;
extern T106 M106;
struct S104{T0* _se_ums_;T0* _unicode_string_type;T0* _unicode_string_manifest_initialize_stamp;T6 _first_unicode_manifest_string_collected_flag;T6 _first_manifest_string_collected_flag;};
extern T104 M104;
extern T111 M111;
extern T120 M120;
struct S119{T6 _agent_creation_collected_flag;};
extern T119 M119;
extern T122 M122;
struct S89{T0* _native_array_internals_from_generating_type_args;T338 _native_array_internals_from_generating_type_position;T338 _internals_from_generating_type_position;T6 _has_capacity;T6 _can_twin;T0* _native_array_element_type;T0* _target_type;T0* _new_type;T0* _external_routine;T0* _type_internals_handler;};
extern T89 M89;
struct S438{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T438 M438;
struct S1020{T2 _lower;T2 _upper;T2 _capacity;T1132 _storage;T2 _generation;};
extern T1020 M1020;
struct S1021{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1135 _buckets;T2 _generation;};
extern T1021 M1021;
struct S115{T0* _insert_seeds;T0* _seeds;T0* _insert_problem_seeds;T0* _seeds_of_current_feature;T0* _insert_seeds_of_current_feature;T0* _feature_stamps_memory;T0* _features_dictionary;T0* _free;T0* _features;T0* _feature_stamp;T1 _state;T2 _waiting_type;T0* _current_mixer;T6 _specialize_and_check_in_progress;T0* _pending_list;T0* _specialize_and_check_list;T0* _current_fn;T0* _context_type;};
extern T115 M115;
struct S433{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T433 M433;
struct S1024{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1152 _buckets;T2 _generation;};
extern T1024 M1024;
extern T563 M563;
struct S1025{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1155 _buckets;T2 _generation;};
extern T1025 M1025;
struct S1026{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1156 _buckets;T2 _generation;};
extern T1026 M1026;
struct S788{Tid id;};
extern T788 M788;
struct S790{Tid id;T0* _wa_cycle;T0* _wa_cyclic_buf;T0* _wa_buf;};
extern T790 M790;
struct S791{Tid id;};
extern T791 M791;
struct S792{Tid id;};
extern T792 M792;
struct S793{Tid id;T6 _flag;};
extern T793 M793;
struct S327{T0* _entries;T0* _path_h;T0* _path;};
extern T327 M327;
struct S1030{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1166 _buckets;T2 _generation;};
extern T1030 M1030;
struct S1031{T2 _upper;T2 _capacity;T1167 _storage;T2 _generation;};
extern T1031 M1031;
struct S775{Tid id;T0* _config;};
extern T775 M775;
struct S777{Tid id;T2 _jobs;T0* _flavor;T0* _os;};
extern T777 M777;
struct S776{Tid id;T0* _my_path;T0* _my_c_modes;T0* _my_tools;T0* _my_loadpaths;T0* _my_environment;T2 _jobs;T0* _flavor;T0* _os;T0* _short;T0* _sys;T0* _bin;};
extern T776 M776;
struct S1035{T2 _upper;T2 _capacity;T1028 _storage;T2 _generation;};
extern T1035 M1035;
struct S1036{T0* _item;};
extern T1036 M1036;
struct S58{int _items_comparator;T0* _strings;T311 _recycling_item;};
extern T58 M58;
struct S1037{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1173 _buckets;T2 _generation;};
extern T1037 M1037;
struct S1038{T2 _upper;T2 _capacity;T1176 _storage;T2 _generation;};
extern T1038 M1038;
struct S293{Tid id;T0* _original;T0* _holders;T6 _is_interned;T6 _immutable;T2 _hash_code;T2 _storage_signature_count;T2 _capacity;T2 _count;T2 _storage_lower;T9 _storage;};
extern T293 M293;
struct S1039{T0* _next;T0* _key;T0* _item;};
extern T1039 M1039;
struct S1042{Tid id;T0* _item;};
extern T1042 M1042;
struct S1044{Tid id;T0* _item;};
extern T1044 M1044;
struct S1045{T0* _next;T0* _key;T0* _item;};
extern T1045 M1045;
struct S1046{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1179 _buckets;T2 _generation;};
extern T1046 M1046;
struct S1047{T2 _upper;T2 _capacity;T1180 _storage;T2 _generation;};
extern T1047 M1047;
struct S281{T0* _name;T338 _start_position;T2 _name_type;};
extern T281 M281;
extern T79 M79;
struct S1051{T2 _upper;T2 _capacity;T1183 _storage;T2 _generation;};
extern T1051 M1051;
struct S102{T0* _sections;T0* _default_section;T0* _last_key;T0* _last_section;T6 _expand_execute;T6 _expand_var;T10 _id;T6 _is_invalid;T0* _file_path;T756 _token_buffer;T2 _start_column;T2 _start_line;T6 _drop_comments;T0* _last_comment;T0* _last_manifest_string;T3 _cc;T0* _current_line;T2 _line;T2 _column;};
extern T102 M102;
struct S1054{T2 _upper;T2 _capacity;T1053 _storage;T2 _generation;};
extern T1054 M1054;
struct S747{Tid id;T0* _path;T0* _name;T0* _cluster;T0* _classeses;T534 _basic_directory;T2 _distance;T0* _parent;};
extern T747 M747;
struct S795{Tid id;T0* _path;T0* _name;T0* _classeses;T534 _basic_directory;T2 _distance;T0* _parent;};
extern T795 M795;
struct S1056{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1193 _buckets;T2 _generation;};
extern T1056 M1056;
struct S1058{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1196 _buckets;T2 _generation;};
extern T1058 M1058;
struct S1060{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1197 _buckets;T2 _generation;};
extern T1060 M1060;
struct S1062{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1202 _buckets;T2 _generation;};
extern T1062 M1062;
struct S749{T0* _cluster;T0* _classes;};
extern T749 M749;
extern T472 M472;
struct S1065{T2 _upper;T2 _capacity;T1204 _storage;T2 _generation;};
extern T1065 M1065;
struct S449{T6 _is_inline_agent;T338 _sedb_trace_before_exit;T0* _obsolete_mark;T0* _header_comment;T0* _anonymous_feature;T0* _result_type;T0* _arguments;T0* _assigned;T0* _names;T0* _feature_clause;};
extern T449 M449;
struct S426{T0* _list;T0* _tag;};
extern T426 M426;
struct S380{Tid id;T2 _hash_code_memory;T0* _source_view;T0* _once_variable;T0* _initial_storage_id;T0* _alias_link;T0* _unicode_string;T0* _to_string;T6 _unicode_flag;T6 _once_flag;T338 _start_position;};
extern T380 M380;
struct S432{T6 _no_generic_constraint_flag;T0* _list;T338 _start_position;};
extern T432 M432;
struct S441{T2 _rank;T0* _constraint;T0* _name;};
extern T441 M441;
struct S485{Tid id;T2 _rank;T0* _formal_generic_arg;T0* _formal_name;T6 _already_checking;T0* _written_name;T0* _class_text_memory;};
extern T485 M485;
struct S495{Tid id;T338 _start_position;T0* _class_text_memory;};
extern T495 M495;
struct S497{Tid id;T0* _feature_stamp_memory;T0* _declaration_type;T0* _written_name;T0* _like_what;T338 _start_position;T0* _class_text_memory;};
extern T497 M497;
struct S354{Tid id;T0* _flat_list;T0* _list;};
extern T354 M354;
struct S116{T2 _mode;T6 _semi_colon_flag;};
extern T116 M116;
struct S498{Tid id;T6 _like_argument_computing;T0* _type_marks_memory;T0* _written_name;T0* _like_what;T338 _start_position;T0* _class_text_memory;};
extern T498 M498;
struct S445{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T445 M445;
struct S408{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T408 M408;
struct S381{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T381 M381;
struct S436{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T436 M436;
struct S407{Tid id;T2 _bit_count_memory;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T407 M407;
struct S434{Tid id;T2 _bit_count;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T434 M434;
struct S403{Tid id;T0* _type_memory;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T403 M403;
struct S437{Tid id;T0* _class_text_name;T0* _class_text_memory;};
extern T437 M437;
struct S435{Tid id;T2 _bit_count;T0* _pretty_name;T0* _class_text_name;T0* _class_text_memory;};
extern T435 M435;
struct S442{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T442 M442;
struct S439{Tid id;T0* _type_memory;T0* _class_text_name;T0* _class_text_memory;};
extern T439 M439;
struct S443{Tid id;T2 _pretty_code;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T443 M443;
struct S446{Tid id;T0* _signature_resolved_memory;T0* _static_memory;T0* _type_memory;T0* _declaration_type_memory;T0* _written_name_memory;T0* _generic_list;T0* _class_text_name;T0* _long_name_memory;T0* _class_text_memory;};
extern T446 M446;
struct S273{T2 _idx;T2 _count;T0* _to_string;T0* _manifest_string;};
extern T273 M273;
struct S467{Tid id;T0* _external_tag;};
extern T467 M467;
struct S469{Tid id;T0* _alias_data;T2 _hash_code;T0* _plugin;T0* _feature_name;T0* _external_tag;};
extern T469 M469;
struct S470{Tid id;T0* _rf8_memory;T0* _rf7_memory;T0* _external_tag;};
extern T470 M470;
struct S471{Tid id;T6 _c_inline;T0* _signature;T2 _access_mode;T0* _type;T0* _access;T0* _struct;T6 _macro;T6 _parsing_done;T6 _need_prototype;T0* _external_tag;};
extern T471 M471;
struct S421{T0* _alias_tag;T0* _native;T338 _start_position;T0* _default_value;T0* _type_name;};
extern T421 M421;
struct S1066{T2 _upper;T2 _capacity;T1208 _storage;T2 _generation;};
extern T1066 M1066;
struct S280{T0* _comment;T0* _redefine_list;T0* _undefine_list;T0* _export_list;T0* _rename_list;T6 _is_insert_member;T0* _parent_lists;T0* _class_text_name;T0* _class_text;T0* _type_mark;};
extern T280 M280;
struct S478{T0* _old_name;T0* _new_name;};
extern T478 M478;
struct S1067{T2 _upper;T2 _capacity;T1209 _storage;T2 _generation;};
extern T1067 M1067;
struct S518{Tid id;T0* _list;T338 _start_position;};
extern T518 M518;
struct S487{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T487 M487;
struct S401{Tid id;T0* _right_side;T0* _left_writable;T0* _left_type_mark;};
extern T401 M401;
struct S474{Tid id;T0* _resolved_memory;T2 _rank;T0* _curly_type;T338 _start_position;};
extern T474 M474;
struct S371{Tid id;T0* _pretty_view;T0* _result_type_memory;T2 _size;T11 _value_memory;T338 _start_position;};
extern T371 M371;
struct S475{Tid id;T0* _normalized_memory;T0* _result_type;T0* _pretty_view;T338 _start_position;};
extern T475 M475;
struct S476{Tid id;T338 _irregular_position;T0* _manifest_put_feature_stamp;T0* _manifest_make_feature_stamp;T0* _created_type;T2 _semicolon_count;T0* _item_list;T0* _optional_arguments;T0* _type_mark;T338 _start_position;};
extern T476 M476;
struct S339{T0* _remainder;T0* _first_one;};
extern T339 M339;
struct S348{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T348 M348;
struct S351{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T351 M351;
struct S353{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T353 M353;
struct S342{Tid id;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T342 M342;
struct S346{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T346 M346;
struct S347{Tid id;T0* _arguments;T0* _creation_type;T0* _feature_name;T0* _target;T0* _feature_stamp;T2 _eiffel_parser_stamp;};
extern T347 M347;
struct S489{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T489 M489;
struct S490{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T490 M490;
struct S491{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T491 M491;
struct S480{Tid id;T0* _create_expression;T0* _effective_arg_list;T338 _start_position;};
extern T480 M480;
struct S385{Tid id;T338 _start_position;};
extern T385 M385;
struct S456{Tid id;T338 _start_position;};
extern T456 M456;
struct S462{Tid id;T0* _pretty_view;T3 _value;T338 _start_position;};
extern T462 M462;
struct S481{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T338 _start_position;};
extern T481 M481;
struct S515{Tid id;T0* _declaration_type_memory;T0* _explicit_type_mark;T338 _start_position;};
extern T515 M515;
struct S516{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T338 _start_position;};
extern T516 M516;
struct S1068{T2 _upper;T2 _capacity;T1210 _storage;T2 _generation;};
extern T1068 M1068;
struct S1069{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1211 _storage;T2 _generation;};
extern T1069 M1069;
struct S453{Tid id;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T338 _start_position;};
extern T453 M453;
struct S454{Tid id;T0* _name_list;};
extern T454 M454;
struct S1070{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1212 _storage;T2 _generation;};
extern T1070 M1070;
struct S391{Tid id;T0* _name;};
extern T391 M391;
struct S1071{T2 _lower;T2 _upper;T2 _capacity;T1213 _storage;T2 _generation;};
extern T1071 M1071;
struct S662{Tid id;T0* _direct_parents_require;T0* _local_require;T6 _is_require_else;T2 _eiffel_parser_stamp;};
extern T662 M662;
struct S1072{T2 _upper;T2 _capacity;T1215 _storage;T2 _generation;};
extern T1072 M1072;
struct S418{Tid id;T0* _source_view;T0* _comment;T0* _expression;T0* _tag;};
extern T418 M418;
struct S388{Tid id;T2 _live_reference_counter;T2 _parsing_reference_counter;T2 _rank;T0* _result_type;T0* _to_string;T0* _hashed_string;T338 _start_position;};
extern T388 M388;
struct S1073{Tid id;T2 _lower;T2 _upper;T2 _capacity;T1216 _storage;T2 _generation;};
extern T1073 M1073;
struct S392{Tid id;T0* _flat_list;T0* _list;};
extern T392 M392;
struct S448{T0* _remainder;T0* _first;};
extern T448 M448;
struct S517{Tid id;T0* _assertion_list;T2 _eiffel_parser_stamp;};
extern T517 M517;
struct S1074{T2 _upper;T2 _capacity;T1217 _storage;T2 _generation;};
extern T1074 M1074;
struct S477{Tid id;T0* _compound;T0* _key_list;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T477 M477;
struct S412{Tid id;T0* _then_compound;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T412 M412;
struct S398{Tid id;T0* _else_compound;T0* _elseif_list;T0* _then_compound;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T398 M398;
struct S1075{T2 _upper;T2 _capacity;T1219 _storage;T2 _generation;};
extern T1075 M1075;
struct S357{Tid id;T0* _dispatch_live_type;T0* _strip_condition;T0* _values;T0* _list;T0* _condition_live_type;T0* _compound;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T357 M357;
struct S369{Tid id;T0* _declaration_type;T338 _start_position;};
extern T369 M369;
struct S362{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T338 _else_position;T0* _when_list;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T362 M362;
struct S479{Tid id;T0* _dynamic_dispatch_temporary1;T0* _condition_type;T0* _manifest_string_inspector;T0* _else_compound;T338 _else_position;T0* _when_list;T0* _expression;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T479 M479;
struct S423{Tid id;T0* _list;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T423 M423;
struct S465{Tid id;T0* _expression;T0* _comment2;T0* _tag;T0* _comment1;};
extern T465 M465;
struct S466{Tid id;T0* _loop_body;T0* _until_expression;T0* _loop_variant;T0* _loop_invariant;T0* _initialize;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T466 M466;
struct S364{Tid id;T0* _once_function;T0* _enclosing_function;T0* _written_declaration_type_mark;T0* _type_mark_memory;T0* _declaration_type;T338 _start_position;};
extern T364 M364;
struct S404{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T404 M404;
struct S463{Tid id;T0* _source_view;T338 _start_position;T0* _c_code;T6 _is_c_inline_c;T2 _eiffel_parser_stamp;};
extern T463 M463;
struct S494{Tid id;T0* _specialized_parent;T0* _specialized_anonymous_feature;T0* _arguments;T0* _parent;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T494 M494;
struct S484{Tid id;T0* _declaration_type;T338 _start_position;};
extern T484 M484;
struct S367{Tid id;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T367 M367;
struct S394{Tid id;T6 _forced_flag;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T394 M394;
struct S464{Tid id;T0* _right_side;T0* _left_side;T2 _eiffel_parser_stamp;};
extern T464 M464;
struct S459{Tid id;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T459 M459;
struct S395{Tid id;T0* _list;T2 _eiffel_parser_stamp;};
extern T395 M395;
struct S657{Tid id;T6 _is_ensure_then;T0* _list;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T657 M657;
struct S483{Tid id;T0* _feature_stamp;T0* _inline_feature;T0* _resolved_memory;T0* _closed_operand_list;T0* _open_operand_list;T0* _code;T0* _original_function_call;T338 _start_position;};
extern T483 M483;
struct S457{Tid id;T0* _comment;T0* _expression;};
extern T457 M457;
struct S396{Tid id;T338 _start_position;};
extern T396 M396;
struct S492{Tid id;T0* _expression;T338 _start_position;T0* _tagged_data_map;};
extern T492 M492;
struct S514{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T514 M514;
struct S513{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T513 M513;
struct S509{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T509 M509;
struct S510{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T510 M510;
struct S511{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T511 M511;
struct S512{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T512 M512;
struct S508{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T508 M508;
struct S374{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T374 M374;
struct S397{Tid id;T0* _right_side;T0* _left_side;T338 _operator_position;T6 _eq_flag;};
extern T397 M397;
struct S504{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T504 M504;
struct S505{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T505 M505;
struct S506{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T506 M506;
struct S507{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T507 M507;
struct S402{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T402 M402;
struct S503{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T503 M503;
struct S500{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T500 M500;
struct S501{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T501 M501;
struct S502{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T502 M502;
struct S499{Tid id;T0* _arguments;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T499 M499;
struct S458{Tid id;T0* _calling_code;T0* _feature_stamp;T0* _target_type;T0* _feature_name;T0* _local_name;};
extern T458 M458;
struct S493{T0* _remainder;T0* _first;};
extern T493 M493;
struct S283{T0* _eiffel_view_memory;T0* _class_name_list;T338 _start_position;};
extern T283 M283;
struct S461{T0* _permissions;T0* _items;T0* _for_all;T338 _start_position;};
extern T461 M461;
struct S460{T0* _list;T0* _clients;};
extern T460 M460;
struct S1076{T2 _lower;T2 _upper;T2 _capacity;T1227 _storage;T2 _generation;};
extern T1076 M1076;
struct S419{T0* _procedure_list;T0* _comment;T0* _clients;T338 _start_position;};
extern T419 M419;
struct S428{T0* _list;T0* _class_text;T0* _comment;T0* _clients;};
extern T428 M428;
struct S748{T0* _path;T0* _cluster;T0* _class_name;};
extern T748 M748;
struct S455{T338 _start_position;T0* _hashed_name;};
extern T455 M455;
struct S358{Tid id;T0* _formal_arg_list;T0* _declaration_type;T2 _rank;T338 _start_position;};
extern T358 M358;
struct S410{Tid id;T0* _declaration_type;T0* _written_declaration_type_mark;T0* _feature_stamp;T0* _feature_name;};
extern T410 M410;
struct S393{Tid id;T0* _local_var_list;T0* _written_declaration_type_mark;T0* _declaration_type;T2 _rank;T338 _start_position;};
extern T393 M393;
struct S1077{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1228 _buckets;T2 _generation;};
extern T1077 M1077;
struct S1078{T2 _upper;T2 _capacity;T1231 _storage;T2 _generation;};
extern T1078 M1078;
struct S1079{Tid id;T0* _item;};
extern T1079 M1079;
struct S1080{T0* _next;T0* _key;T0* _item;};
extern T1080 M1080;
struct S1084{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1234 _buckets;T2 _generation;};
extern T1084 M1084;
struct S530{T0* _set;T0* _owner;};
extern T530 M530;
struct S1085{T2 _lower;T2 _upper;T2 _capacity;T1237 _storage;T2 _generation;};
extern T1085 M1085;
struct S1087{T2 _upper;T2 _capacity;T1238 _storage;T2 _generation;};
extern T1087 M1087;
struct S430{Tid id;T2 _rank;T0* _end_comment;T0* _specialized_feature_stamp;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T430 M430;
struct S422{Tid id;T0* _list;T0* _header_comment;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T422 M422;
struct S1093{T2 _upper;T2 _capacity;T1239 _storage;T2 _generation;};
extern T1093 M1093;
struct S1094{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1240 _buckets;T2 _generation;};
extern T1094 M1094;
struct S450{T0* _insert_list;T0* _inherit_list;T6 _default_insert_any_added_flag;T0* _insert_comment;T0* _inherit_comment;T0* _class_text;};
extern T450 M450;
struct S427{T0* _list;};
extern T427 M427;
struct S447{T0* _list;};
extern T447 M447;
struct S1095{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1247 _buckets;T2 _generation;};
extern T1095 M1095;
struct S425{T0* _list;};
extern T425 M425;
struct S1096{T0* _next;T0* _key;T0* _item;};
extern T1096 M1096;
struct S1098{Tid id;T0* _item;};
extern T1098 M1098;
struct S1099{T0* _next;T0* _key;T0* _item;};
extern T1099 M1099;
struct S1101{Tid id;T0* _item;};
extern T1101 M1101;
struct S1103{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1249 _buckets;T2 _generation;};
extern T1103 M1103;
struct S1106{T2 _upper;T2 _capacity;T1237 _storage;T2 _generation;};
extern T1106 M1106;
struct S1107{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _capacity;T1256 _val_buckets;T1256 _key_buckets;T2 _count;T2 _generation;};
extern T1107 M1107;
struct S1110{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1262 _buckets;T2 _generation;};
extern T1110 M1110;
struct S1111{T2 _upper;T2 _capacity;T1052 _storage;T2 _generation;};
extern T1111 M1111;
struct S1112{T2 _upper;T2 _capacity;T1263 _storage;T2 _generation;};
extern T1112 M1112;
struct S1113{T2 _upper;T2 _capacity;T1264 _storage;T2 _generation;};
extern T1113 M1113;
struct S1114{T2 _upper;T2 _capacity;T1265 _storage;T2 _generation;};
extern T1114 M1114;
struct S1115{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1268 _buckets;T2 _generation;};
extern T1115 M1115;
struct S523{T0* _destination_graph_nodes;T2 _hash_code;T0* _source_type;};
extern T523 M523;
struct S1117{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1270 _buckets;T2 _generation;};
extern T1117 M1117;
struct S1121{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1275 _buckets;T2 _generation;};
extern T1121 M1121;
struct S1122{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1276 _buckets;T2 _generation;};
extern T1122 M1122;
struct S1123{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1281 _buckets;T2 _generation;};
extern T1123 M1123;
struct S1124{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1282 _buckets;T2 _generation;};
extern T1124 M1124;
struct S1125{T2 _upper;T2 _capacity;T1285 _storage;T2 _generation;};
extern T1125 M1125;
struct S525{Tid id;T0* _context_type;T0* _feature_stamp;T0* _dynamic_type;};
extern T525 M525;
struct S1126{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1288 _buckets;T2 _generation;};
extern T1126 M1126;
struct S1127{T2 _upper;T2 _capacity;T1440 _storage;T2 _generation;};
extern T1127 M1127;
struct S558{T0* _agent_type;T0* _signature;};
extern T558 M558;
struct S1129{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1289 _buckets;T2 _generation;};
extern T1129 M1129;
struct S1130{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1293 _buckets;T2 _generation;};
extern T1130 M1130;
struct S1131{T2 _upper;T2 _capacity;T1295 _storage;T2 _generation;};
extern T1131 M1131;
struct S400{Tid id;T0* _result_type;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T400 M400;
struct S1133{Tid id;T0* _item;};
extern T1133 M1133;
struct S1134{T0* _next;T0* _key;T0* _item;};
extern T1134 M1134;
struct S1136{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1296 _buckets;T2 _generation;};
extern T1136 M1136;
struct S1137{T2 _upper;T2 _capacity;T1299 _storage;T2 _generation;};
extern T1137 M1137;
struct S633{T6 _local_definition;T6 _signature_ready;T0* _body_inherit;T0* _body_type;T0* _body_feature;T0* _build_definition;T0* _parents_edges;T0* _parents_type;T0* _parents_af;T0* _feature_name;T1 _computing_result_type;};
extern T633 M633;
struct S1138{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1302 _buckets;T2 _generation;};
extern T1138 M1138;
struct S1139{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1237 _storage;T2 _generation;};
extern T1139 M1139;
struct S1140{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1303 _buckets;T2 _generation;};
extern T1140 M1140;
extern T335 M335;
struct S1141{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1308 _buckets;T2 _generation;};
extern T1141 M1141;
struct S1146{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1311 _buckets;T2 _generation;};
extern T1146 M1146;
struct S1147{T2 _lower;T2 _upper;T2 _capacity;T1312 _storage;T2 _generation;};
extern T1147 M1147;
struct S1148{T2 _lower;T2 _upper;T2 _capacity;T1313 _storage;T2 _generation;};
extern T1148 M1148;
struct S1149{T2 _upper;T2 _capacity;T1239 _storage;T2 _generation;};
extern T1149 M1149;
struct S1150{Tid id;T0* _item;};
extern T1150 M1150;
struct S1151{T0* _next;T0* _key;T0* _item;};
extern T1151 M1151;
struct S1153{Tid id;T0* _item;};
extern T1153 M1153;
struct S1154{T0* _next;T0* _key;T10 _item;};
extern T1154 M1154;
struct S1157{T0* _next;T0* _item;};
extern T1157 M1157;
struct S1160{Tid id;T0* _item;};
extern T1160 M1160;
struct S1161{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1316 _buckets;T2 _generation;};
extern T1161 M1161;
struct S1162{T2 _upper;T2 _capacity;T1317 _storage;T2 _generation;};
extern T1162 M1162;
struct S406{Tid id;T0* _ensure_assertion;T0* _require_assertion;T2 _order;T0* _result_type;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T406 M406;
struct S1163{T2 _upper;T2 _capacity;T1318 _storage;T2 _generation;};
extern T1163 M1163;
struct S559{T0* _target_type;T0* _code;T6 _is_creation;T0* _feature_name;T0* _target_type_mark;T0* _c_name;};
extern T559 M559;
struct S1164{Tid id;T0* _item;};
extern T1164 M1164;
struct S1165{T0* _next;T0* _key;T0* _item;};
extern T1165 M1165;
struct S1168{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1320 _storage;T2 _generation;};
extern T1168 M1168;
struct S1169{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1322 _buckets;T2 _generation;};
extern T1169 M1169;
struct S1171{T2 _upper;T2 _capacity;T1324 _storage;T2 _generation;};
extern T1171 M1171;
extern T311 M311;
extern T712 M712;
struct S1174{T0* _next;T2 _key;T0* _item;};
extern T1174 M1174;
struct S1175{Tid id;T0* _item;};
extern T1175 M1175;
struct S1177{T2 _upper;T2 _capacity;T1326 _storage;T2 _generation;};
extern T1177 M1177;
struct S1181{T2 _storage_lower;T2 _lower;T2 _upper;T2 _capacity;T1327 _storage;T2 _generation;};
extern T1181 M1181;
struct S1184{T0* _ordered_keys;T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1328 _buckets;T2 _generation;};
extern T1184 M1184;
struct S1185{Tid id;T0* _ordered_keys;T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1043 _buckets;T2 _generation;};
extern T1185 M1185;
extern T522 M522;
struct S1187{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1335 _buckets;T2 _generation;};
extern T1187 M1187;
struct S771{Tid id;T0* _to_string;};
extern T771 M771;
struct S1189{T2 _upper;T2 _capacity;T1337 _storage;T2 _generation;};
extern T1189 M1189;
struct S1190{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1340 _buckets;T2 _generation;};
extern T1190 M1190;
struct S1191{Tid id;T0* _item;};
extern T1191 M1191;
struct S1192{T0* _next;T0* _key;T0* _item;};
extern T1192 M1192;
struct S1194{Tid id;T0* _item;};
extern T1194 M1194;
struct S1195{T0* _next;T0* _key;T0* _item;};
extern T1195 M1195;
struct S1198{T0* _next;T0* _item;};
extern T1198 M1198;
struct S1199{Tid id;T0* _item;};
extern T1199 M1199;
struct S1200{Tid id;T0* _item;};
extern T1200 M1200;
struct S1201{T0* _next;T0* _key;T2 _item;};
extern T1201 M1201;
struct S1203{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1341 _buckets;T2 _generation;};
extern T1203 M1203;
extern T695 M695;
struct S640{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T640 M640;
struct S648{Tid id;T2 _rank;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T648 M648;
struct S560{Tid id;T0* _result_type;T0* _inline_result;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T560 M560;
struct S653{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T653 M653;
struct S650{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T650 M650;
struct S651{Tid id;T0* _result_type;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T651 M651;
struct S646{Tid id;T6 _is_generated_eiffel;T0* _alias_string;T0* _native;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T646 M646;
struct S649{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T649 M649;
struct S647{Tid id;T0* _value_memory;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T647 M647;
struct S652{Tid id;T0* _result_type;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T652 M652;
struct S643{Tid id;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T643 M643;
struct S642{Tid id;T2 _use_current_state;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _end_comment;T0* _obsolete_mark;T0* _arguments;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T642 M642;
struct S645{Tid id;T0* _value_memory;T2 _rank;T0* _obsolete_mark;T0* _result_type;T0* _permissions;T0* _assigner;T0* _ensure_assertion;T0* _require_assertion;T0* _header_comment;T0* _feature_text;};
extern T645 M645;
struct S1205{T2 _lower;T2 _upper;T2 _capacity;T1344 _storage;T2 _generation;};
extern T1205 M1205;
struct S1206{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1347 _buckets;T2 _generation;};
extern T1206 M1206;
struct S1207{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1350 _buckets;T2 _generation;};
extern T1207 M1207;
struct S688{T0* _list;};
extern T688 M688;
struct S1214{T2 _upper;T2 _capacity;T1352 _storage;T2 _generation;};
extern T1214 M1214;
struct S1218{T2 _upper;T2 _capacity;T1353 _storage;T2 _generation;};
extern T1218 M1218;
struct S730{Tid id;T0* _lower_manifest_expression;T0* _upper_manifest_expression;T0* _upper;T0* _lower;};
extern T730 M730;
struct S1220{T2 _upper;T2 _capacity;T1354 _storage;T2 _generation;};
extern T1220 M1220;
struct S379{Tid id;T0* _manifest_expression;T0* _expression;};
extern T379 M379;
struct S676{Tid id;T0* _list;};
extern T676 M676;
struct S666{Tid id;T0* _declaration_type;T0* _type_mark;T0* _writable;};
extern T666 M666;
struct S1221{T2 _upper;T2 _capacity;T1355 _storage;T2 _generation;};
extern T1221 M1221;
struct S1222{T2 _upper;T2 _capacity;T1356 _storage;T2 _generation;};
extern T1222 M1222;
struct S671{Tid id;T6 _inside_agent_launcher_flag;T0* _capture_memory;T2 _rank;T0* _original_capture;T338 _start_position;};
extern T671 M671;
struct S1223{T2 _upper;T2 _capacity;T1358 _storage;T2 _generation;};
extern T1223 M1223;
struct S1224{T2 _upper;T2 _capacity;T1359 _storage;T2 _generation;};
extern T1224 M1224;
struct S1225{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1362 _buckets;T2 _generation;};
extern T1225 M1225;
struct S1229{T0* _next;T0* _item;};
extern T1229 M1229;
struct S1230{Tid id;T0* _item;};
extern T1230 M1230;
struct S1232{Tid id;T0* _item;};
extern T1232 M1232;
struct S1233{T0* _next;T0* _key;T0* _item;};
extern T1233 M1233;
struct S1235{T0* _lost_nodes;T6 _map_dirty;T0* _map;T0* _item_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1235 M1235;
struct S1241{T0* _next;T0* _key;T1 _item;};
extern T1241 M1241;
struct S1242{Tid id;T0* _item;};
extern T1242 M1242;
struct S1243{T2 _upper;T2 _capacity;T1370 _storage;T2 _generation;};
extern T1243 M1243;
struct S1244{T2 _upper;T2 _capacity;T1371 _storage;T2 _generation;};
extern T1244 M1244;
struct S1245{Tid id;T0* _item;};
extern T1245 M1245;
struct S1246{T0* _next;T0* _key;T0* _item;};
extern T1246 M1246;
struct S1248{T2 _lower;T2 _upper;T2 _capacity;T1372 _storage;T2 _generation;};
extern T1248 M1248;
struct S1250{T0* _next;T0* _key;T1 _item;};
extern T1250 M1250;
struct S1251{Tid id;T0* _item;};
extern T1251 M1251;
struct S1255{T0* _next_val;T0* _next_key;T0* _key;T0* _val;};
extern T1255 M1255;
struct S1257{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1373 _buckets;T2 _generation;};
extern T1257 M1257;
struct S1259{T0* _item;};
extern T1259 M1259;
struct S1260{Tid id;T0* _item;};
extern T1260 M1260;
struct S1261{T0* _next;T0* _key;T0* _item;};
extern T1261 M1261;
struct S1266{T0* _next;T0* _key;T0* _item;};
extern T1266 M1266;
struct S1267{Tid id;T0* _item;};
extern T1267 M1267;
struct S1271{T0* _next;T0* _item;};
extern T1271 M1271;
struct S1272{Tid id;T0* _item;};
extern T1272 M1272;
struct S1273{Tid id;T0* _item;};
extern T1273 M1273;
struct S1274{T0* _next;T0* _key;T0* _item;};
extern T1274 M1274;
struct S1277{T0* _next;T0* _item;};
extern T1277 M1277;
struct S1278{Tid id;T0* _item;};
extern T1278 M1278;
struct S1279{Tid id;T0* _item;};
extern T1279 M1279;
struct S1280{T0* _next;T0* _key;T0* _item;};
extern T1280 M1280;
struct S1283{T0* _next;T0* _item;};
extern T1283 M1283;
struct S1284{Tid id;T0* _item;};
extern T1284 M1284;
struct S1286{T0* _next;T0* _key;T0* _item;};
extern T1286 M1286;
struct S1287{Tid id;T0* _item;};
extern T1287 M1287;
struct S1290{T0* _next;T0* _item;};
extern T1290 M1290;
struct S1291{Tid id;T0* _item;};
extern T1291 M1291;
struct S1292{T0* _next;T0* _key;T0* _item;};
extern T1292 M1292;
struct S1294{Tid id;T0* _item;};
extern T1294 M1294;
struct S413{Tid id;T0* _compound;T2 _eiffel_parser_stamp;};
extern T413 M413;
struct S731{T338 _empty_position;T0* _headers;T0* _string_pool;};
extern T731 M731;
struct S1297{T0* _next;T0* _key;T0* _item;};
extern T1297 M1297;
struct S1298{Tid id;T0* _item;};
extern T1298 M1298;
struct S1300{Tid id;T0* _item;};
extern T1300 M1300;
struct S1301{T0* _next;T0* _key;T0* _item;};
extern T1301 M1301;
struct S1304{T0* _next;T335 _item;};
extern T1304 M1304;
struct S1305{Tid id;T0* _item;};
extern T1305 M1305;
struct S1306{Tid id;T0* _item;};
extern T1306 M1306;
struct S1307{T0* _next;T335 _key;T0* _item;};
extern T1307 M1307;
struct S1309{Tid id;T0* _item;};
extern T1309 M1309;
struct S1310{T0* _next;T0* _key;T0* _item;};
extern T1310 M1310;
struct S1314{Tid id;T0* _item;};
extern T1314 M1314;
struct S1315{T0* _next;T0* _key;T0* _item;};
extern T1315 M1315;
struct S356{Tid id;T2 _rank;T338 _start_position;T0* _result_type;T0* _declaration_type;};
extern T356 M356;
struct S1319{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1376 _buckets;T2 _generation;};
extern T1319 M1319;
struct S1321{T0* _next;T0* _key;T0* _item;};
extern T1321 M1321;
struct S1323{Tid id;T0* _item;};
extern T1323 M1323;
struct S1325{T0* _item;};
extern T1325 M1325;
struct S1329{T0* _next;T0* _key;T0* _item;};
extern T1329 M1329;
struct S1330{Tid id;T2 _generation;T2 _item_index;T0* _traversable;};
extern T1330 M1330;
struct S1332{Tid id;T0* _item;};
extern T1332 M1332;
struct S767{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T767 M767;
struct S768{Tid id;T8 _data;T0* _errstream;T0* _outstream;T0* _instream;T0* _group;T0* _error;T0* _output;T0* _input;T6 _is_connected;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T768 M768;
struct S769{Tid id;T0* _group;T6 _direct_error;T6 _direct_output;T6 _direct_input;};
extern T769 M769;
struct S764{Tid id;T8 _data;T0* _id_map;};
extern T764 M764;
struct S765{Tid id;T8 _data;T6 _handle_list_dirty;T0* _handle_map;};
extern T765 M765;
struct S766{Tid id;};
extern T766 M766;
struct S1334{T0* _next;T0* _key;T0* _item;};
extern T1334 M1334;
struct S1336{Tid id;T0* _item;};
extern T1336 M1336;
struct S1338{Tid id;T0* _item;};
extern T1338 M1338;
struct S1339{T0* _next;T0* _key;T0* _item;};
extern T1339 M1339;
struct S1342{T0* _next;T0* _key;T0* _item;};
extern T1342 M1342;
struct S1343{Tid id;T0* _item;};
extern T1343 M1343;
struct S1345{Tid id;T0* _item;};
extern T1345 M1345;
struct S1346{T0* _next;T0* _key;T0* _item;};
extern T1346 M1346;
struct S1348{Tid id;T0* _item;};
extern T1348 M1348;
struct S1349{T0* _next;T0* _key;T0* _item;};
extern T1349 M1349;
struct S1351{T2 _upper;T2 _capacity;T1382 _storage;T2 _generation;};
extern T1351 M1351;
struct S1357{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1385 _buckets;T2 _generation;};
extern T1357 M1357;
struct S1360{Tid id;T0* _item;};
extern T1360 M1360;
struct S1361{T0* _next;T0* _key;T0* _item;};
extern T1361 M1361;
struct S1363{T2 _upper;T2 _capacity;T1386 _storage;T2 _generation;};
extern T1363 M1363;
struct S1364{T2 _balance;T0* _item;T0* _right;T0* _left;int _safe_equal;};
extern T1364 M1364;
struct S1367{Tid id;T0* _item;};
extern T1367 M1367;
struct S1368{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1390 _buckets;T2 _generation;};
extern T1368 M1368;
struct S1374{T0* _next;T0* _key;T0* _item;};
extern T1374 M1374;
struct S1375{Tid id;T0* _item;};
extern T1375 M1375;
struct S821{T0* _transitions;T0* _headers;T0* _tag_state;T2 _empty_idx;T2 _id;T2 _maxstate;T6 _has_empty;};
extern T821 M821;
struct S1377{T0* _next;T0* _item;};
extern T1377 M1377;
struct S1378{Tid id;T0* _item;};
extern T1378 M1378;
struct S1380{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1397 _buckets;T2 _generation;};
extern T1380 M1380;
struct S1381{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1400 _buckets;T2 _generation;};
extern T1381 M1381;
struct S1383{Tid id;T0* _item;};
extern T1383 M1383;
struct S1384{T0* _next;T0* _key;T0* _item;};
extern T1384 M1384;
struct S1388{Tid id;T0* _item;};
extern T1388 M1388;
struct S1389{T0* _next;T0* _key;T0* _item;};
extern T1389 M1389;
struct S337{T2 _item;};
extern T337 M337;
struct S1391{T2 _upper;T2 _capacity;T1402 _storage;T2 _generation;};
extern T1391 M1391;
struct S1392{T0* _free_nodes;T0* _mem_lnk;T2 _mem_idx;T0* _last_link;T0* _first_link;T2 _upper;T2 _generation;};
extern T1392 M1392;
struct S1393{T2 _item_2;T3 _item_1;};
extern T1393 M1393;
struct S1394{T2 _value_memory;T0* _lost_nodes;T6 _map_dirty;T0* _map;T2 _key_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1394 M1394;
struct S1396{T0* _next;T2 _key;T0* _item;};
extern T1396 M1396;
struct S1398{Tid id;T0* _item;};
extern T1398 M1398;
struct S1399{T0* _next;T2 _key;T0* _item;};
extern T1399 M1399;
struct S1401{Tid id;T0* _item;};
extern T1401 M1401;
struct S1405{T0* _item;};
extern T1405 M1405;
struct S1406{T0* _next;T0* _item;};
extern T1406 M1406;
struct S1407{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1416 _buckets;T2 _generation;};
extern T1407 M1407;
struct S1408{T2 _upper;T2 _capacity;T1417 _storage;T2 _generation;};
extern T1408 M1408;
struct S1409{T2 _value;T2 _balance;T2 _key;T0* _right;T0* _left;int _safe_equal_key;};
extern T1409 M1409;
struct S1412{T0* _item;};
extern T1412 M1412;
struct S1413{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1420 _buckets;T2 _generation;};
extern T1413 M1413;
struct S1414{Tid id;T0* _item;};
extern T1414 M1414;
struct S1415{T0* _next;T0* _key;T0* _item;};
extern T1415 M1415;
struct S1418{Tid id;T0* _item;};
extern T1418 M1418;
struct S1419{T0* _next;T0* _key;T0* _item;};
extern T1419 M1419;
struct S60{T2 _capacity;T9 _buffer;T0* _filter;};
extern T60 M60;
struct S773{Tid id;T6 _valid_cache;T0* _to_string_cache;T3 _drive;T0* _path;};
extern T773 M773;
extern T734 M734;
struct S658{Tid id;T3 _info_code;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T658 M658;
struct S1425{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1450 _buckets;T2 _generation;};
extern T1425 M1425;
struct S1426{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T1452 _buckets;T2 _generation;};
extern T1426 M1426;
struct S1428{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1457 _buckets;T2 _generation;};
extern T1428 M1428;
struct S1431{T0* _free_nodes;T2 _cache_buckets;T0* _cache_node;T2 _cache_user;T2 _count;T2 _capacity;T1460 _buckets;T2 _generation;};
extern T1431 M1431;
struct S664{Tid id;T0* _dynamic_type;T0* _side_effect_free_expression;};
extern T664 M664;
struct S668{Tid id;T0* _target_type;T0* _target;T0* _tagged_data_map;};
extern T668 M668;
struct S669{Tid id;T0* _live_type;T0* _dynamic_dispatch_temporary1;};
extern T669 M669;
struct S672{Tid id;T0* _target_type;T0* _feature_stamp;T338 _start_position;};
extern T672 M672;
struct S675{Tid id;T0* _dynamic_dispatch_temporary1;};
extern T675 M675;
struct S667{Tid id;T0* _tag;T6 _collect_flag;T0* _original_expression;T338 _start_position;T0* _tagged_data_map;};
extern T667 M667;
struct S661{Tid id;T0* _expression;T2 _eiffel_parser_stamp;};
extern T661 M661;
struct S665{Tid id;T0* _pretty_view;T0* _result_type_memory;T2 _size;uint64_t _value_memory;T338 _start_position;};
extern T665 M665;
struct S673{Tid id;T0* _type_mark;T338 _start_position;};
extern T673 M673;
struct S654{Tid id;T2 _error_code;T0* _error_message;T338 _start_position;T2 _eiffel_parser_stamp;int _exceptions;};
extern T654 M654;
extern T329 M329;
struct S1432{T2 _upper;T2 _capacity;T1440 _storage;T2 _generation;};
extern T1432 M1432;
struct S1433{T0* _lost_nodes;T6 _map_dirty;T0* _map;T338 _item_memory;T6 _rebalance;T0* _root;T2 _count;T2 _generation;};
extern T1433 M1433;
struct S524{Tid id;T0* _expression_type;T0* _expression;T0* _resolved_memory;};
extern T524 M524;
struct S1434{T2 _upper;T2 _capacity;T1464 _storage;T2 _generation;};
extern T1434 M1434;
struct S677{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _target;T0* _agent_type;};
extern T677 M677;
struct S663{Tid id;T0* _target_type;T0* _feature_stamp;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T663 M663;
struct S659{Tid id;T0* _written_link;T0* _agent_args;T0* _fake_tuple;T0* _agent_type;T2 _eiffel_parser_stamp;T0* _target;};
extern T659 M659;
struct S1435{T0* _item;};
extern T1435 M1435;
struct S1436{T2 _upper;T2 _capacity;T1465 _storage;T2 _generation;};
extern T1436 M1436;
struct S1437{T2 _upper;T2 _capacity;T1466 _storage;T2 _generation;};
extern T1437 M1437;
extern T306 M306;
struct S1438{T0* _free_nodes;T2 _count;T2 _capacity;T2 _cache_user;T1467 _buckets;T2 _generation;};
extern T1438 M1438;
struct S1439{T2 _upper;T2 _capacity;T1470 _storage;T2 _generation;};
extern T1439 M1439;
struct S1445{T2 _upper;T2 _capacity;T1471 _storage;T2 _generation;};
extern T1445 M1445;
struct S527{T0* _code;};
extern T527 M527;
struct S123{Tid id;T6 _can_be_dropped_flag;T6 _precomputable;};
extern T123 M123;
struct S732{Tid id;T6 _trace_result;T0* _trace;T0* _type;};
extern T732 M732;
struct S737{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T737 M737;
struct S117{T6 _used;};
extern T117 M117;
struct S1447{T2 _lower;T2 _upper;T2 _capacity;T1263 _storage;T2 _generation;};
extern T1447 M1447;
struct S414{Tid id;T0* _declaration_type_memory;T6 _is_assigned_to;T0* _feature_name;T0* _target;T0* _feature_stamp;};
extern T414 M414;
struct S411{Tid id;T6 _default_create_call;T0* _call;T0* _writable;T0* _explicit_type;T338 _start_position;T2 _eiffel_parser_stamp;};
extern T411 M411;
struct S366{Tid id;T3 _array_name;T0* _target_type;T338 _start_position;};
extern T366 M366;
struct S783{Tid id;T0* _result_type;T0* _value;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T783 M783;
struct S636{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T636 M636;
struct S785{Tid id;T0* _ensure_assertion;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T785 M785;
struct S782{Tid id;T0* _routine_body;T0* _local_vars;T0* _ensure_assertion;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T782 M782;
struct S674{Tid id;T338 _start_position;T0* _declaration_type;T0* _index;};
extern T674 M674;
struct S531{Tid id;T6 _side_effect_free_flag;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T531 M531;
struct S784{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _result_type;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T784 M784;
struct S635{Tid id;T0* _ensure_assertion;T0* _rescue_compound;T0* _routine_body;T0* _local_vars;T0* _require_assertion;T0* _arguments;T0* _base_feature;T2 _use_current_state;T0* _old_list;T0* _name;T0* _type_of_current;};
extern T635 M635;
struct S1448{T2 _upper;T2 _capacity;T1472 _storage;T2 _generation;};
extern T1448 M1448;
struct S823{Tid id;T0* _process;T2 _filtered_descriptor;T6 _is_connected;T8 _pipe;};
extern T823 M823;
struct S825{Tid id;T0* _process;T2 _filtered_descriptor;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T825 M825;
struct S826{Tid id;T8 _handle;T0* _process;T6 _is_connected;T8 _pipe;};
extern T826 M826;
struct S827{Tid id;T8 _handle;T0* _process;T3 _filtered_last_character;T3 _unread_buffer;T6 _has_unread_character;T6 _is_connected;T6 _end_of_input;T6 _can_unread_character;T8 _pipe;};
extern T827 M827;
struct S1449{T0* _next;T0* _key;T0* _item;};
extern T1449 M1449;
struct S1451{Tid id;T0* _item;};
extern T1451 M1451;
struct S1453{T0* _next;T0* _item;};
extern T1453 M1453;
struct S1454{Tid id;T0* _item;};
extern T1454 M1454;
struct S1455{Tid id;T0* _item;};
extern T1455 M1455;
struct S1456{T0* _next;T0* _key;T0* _item;};
extern T1456 M1456;
struct S1458{Tid id;T0* _item;};
extern T1458 M1458;
struct S1459{T0* _next;T0* _key;T0* _item;};
extern T1459 M1459;
struct S1461{T2 _upper;T2 _capacity;T1473 _storage;T2 _generation;};
extern T1461 M1461;
struct S1462{T2 _balance;T338 _item;T0* _right;T0* _left;int _safe_equal;};
extern T1462 M1462;
struct S1463{Tid id;T0* _item;};
extern T1463 M1463;
struct S670{Tid id;T0* _list;T338 _start_position;};
extern T670 M670;
struct S702{Tid id;T11 _value;};
extern T702 M702;
struct S1468{T0* _next;T0* _item;};
extern T1468 M1468;
struct S1469{Tid id;T0* _item;};
extern T1469 M1469;
struct S976{T0* _c_auto_init_plugin_deps_name;T0* _c_auto_init_plugin_deps_location;T0* _c_auto_init_function_name;T0* _c_compiler_options;T0* _c_linker_options;T0* _c_library_paths;T0* _c_libraries;T0* _c_header_paths;T0* _c_headers;T0* _c_sources;T338 _start_position;T6 _is_included;T6 _auto_init_done;T534 _bd;T0* _path;T0* _name;T2 _hash_code;};
extern T976 M976;
struct S632{T2 _declared_tmp_counter;};
extern T632 M632;
struct S557{T0* _type;T0* _doc_tag;T2 _number;T2 _eiffel_parser_stamp;};
extern T557 M557;
struct S1487{T2 _upper;T2 _capacity;T1509 _storage;T2 _generation;};
extern T1487 M1487;
struct S1488{T2 _lower;T2 _upper;T2 _capacity;T1510 _storage;T2 _generation;};
extern T1488 M1488;
struct S551{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T551 M551;
struct S552{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T552 M552;
struct S553{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T553 M553;
struct S554{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T554 M554;
struct S555{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T555 M555;
struct S556{Tid id;T0* _internal_c_local_memory;T0* _static_type_memory;T0* _effective_arguments_memory;T0* _target_memory;T0* _anonymous_feature_memory;T0* _type_memory;};
extern T556 M556;
struct S1494{T2 _upper;T2 _capacity;T1511 _storage;T2 _generation;};
extern T1494 M1494;
struct S1498{Tid id;T2 _generation;T2 _item_index;T0* _dictionary;};
extern T1498 M1498;
struct S797{Tid id;T2 _count;T2 _index;};
extern T797 M797;
struct S1500{T2 _lower;T2 _upper;T2 _capacity;T1317 _storage;T2 _generation;};
extern T1500 M1500;
struct S794{Tid id;T6 _item;};
extern T794 M794;
struct S1506{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1514 _buckets;T2 _generation;};
extern T1506 M1506;
struct S1507{T2 _upper;T2 _capacity;T1516 _storage;T2 _generation;};
extern T1507 M1507;
struct S707{T6 _negative;T2 _offset;T2 _integer_length;T2 _capacity;T1102 _storage;};
extern T707 M707;
struct S1508{T2 _upper;T2 _capacity;T1517 _storage;T2 _generation;};
extern T1508 M1508;
struct S1512{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1518 _buckets;T2 _generation;};
extern T1512 M1512;
struct S1513{T0* _next;T0* _key;T0* _item;};
extern T1513 M1513;
struct S1515{Tid id;T0* _item;};
extern T1515 M1515;
struct S704{Tid id;T1102 _storage;T2 _capacity;T6 _negative;};
extern T704 M704;
struct S1519{T0* _next;T0* _key;T0* _item;};
extern T1519 M1519;
struct S1520{Tid id;T0* _item;};
extern T1520 M1520;
struct S1533{T2 _upper;T2 _capacity;T1209 _storage;T2 _generation;};
extern T1533 M1533;
struct S781{Tid id;T0* _item;};
extern T781 M781;
struct S1534{T0* _free_nodes;T2 _cache_user;T2 _count;T2 _capacity;T1538 _buckets;T2 _generation;};
extern T1534 M1534;
struct S779{Tid id;T2 _item;};
extern T779 M779;
struct S1537{T2 _upper;T2 _capacity;T9 _storage;T2 _generation;};
extern T1537 M1537;
struct S1539{T0* _next;T2 _key;T0* _item;};
extern T1539 M1539;
struct S1540{Tid id;T0* _item;};
extern T1540 M1540;
extern char*s345_1195446850A;
extern char*s108_0A;
extern char*s112_1418906530A;
extern char*s33_424424A;
extern char*s620_25969530A;
extern char*s107_10A;
extern char*s33_424430A;
extern char*s367_1114345928A;
extern char*s633_1983193131A;
extern char*s30_199827552A;
extern char*s112_1564992795A;
extern char*s620_59375621A;
extern char*s112_1772404517A;
extern char*s419_772854717A;
extern char*s100_1078639380A;
extern char*s100_1138390195A;
extern char*s112_523400916A;
extern char*s464_218994080A;
extern char*s112_12331A;
extern char*s597_1880914324A;
extern char*s100_34A;
extern char*s33_38A;
extern char*s112_40A;
extern char*s112_41A;
extern char*s612_7233618A;
extern char*s33_42A;
extern char*s33_43A;
extern char*s112_44A;
extern char*s112_36951A;
extern char*s33_45A;
extern char*s452_46A;
extern char*s33_47A;
extern char*s610_48A;
extern char*s29_1889925553A;
extern char*s121_1071750288A;
extern char*s410_532898088A;
extern char*s597_1664036235A;
extern char*s469_58A;
extern char*s597_1023028228A;
extern char*s621_59A;
extern char*s33_60A;
extern char*s33_61A;
extern char*s620_2017590A;
extern char*s33_62A;
extern char*s30_63A;
extern char*s776_1883030297A;
extern char*s33_64A;
extern char*s102_1684808173A;
extern char*s623_1216329562A;
extern char*s100_67A;
extern char*s100_1268871407A;
extern char*s620_219498506A;
extern char*s30_1202957293A;
extern char*s34_212160365A;
extern char*s614_80037A;
extern char*s33_12376A;
extern char*s115_325166540A;
extern char*s112_77A;
extern char*s420_77A;
extern char*s795_79A;
extern char*s112_1206795525A;
extern char*s112_441192857A;
extern char*s597_82A;
extern char*s788_306811962A;
extern char*s790_1665297219A;
extern char*s112_1645835456A;
extern char*s623_84A;
extern char*s112_2189840A;
extern char*s110_301485A;
extern char*s112_392938270A;
extern char*s597_585895143A;
extern char*s621_91A;
extern char*s112_93A;
extern char*s33_94A;
extern char*s100_916596A;
extern char*s795_2008215484A;
extern char*s108_99A;
extern char*s790_101A;
extern char*s274_376816512A;
extern char*s112_273430505A;
extern char*s619_158634393A;
extern char*s30_104A;
extern char*s614_105A;
extern char*s108_109A;
extern char*s429_178490A;
extern char*s33_112335826A;
extern char*s112_114A;
extern char*s95_772983982A;
extern char*s557_1399364920A;
extern char*s30_118A;
extern char*s619_6271A;
extern char*s476_123A;
extern char*s33_124A;
extern char*s33_126A;
extern char*s112_273430530A;
extern char*s112_391886489A;
extern char*s363_1485085274A;
extern char*s394_1089483711A;
extern char*s620_579867211A;
extern char*s100_629850238A;
extern char*s112_1629400044A;
extern char*s33_80109A;
extern char*s614_252339A;
extern char*s115_612971904A;
extern char*s646_726156456A;
extern char*s429_202915491A;
extern char*s392_446205995A;
extern char*s614_6305A;
extern char*s100_280897875A;
extern char*s400_1324593410A;
extern char*s34_1473988901A;
extern char*s559_168A;
extern char*s418_145102259A;
extern char*s100_339436953A;
extern char*s108_539873441A;
extern char*s112_1853640928A;
extern char*s452_1876110531A;
extern char*s100_470853074A;
extern char*s112_6330A;
extern char*s108_180A;
extern char*s112_116813823A;
extern char*s112_1368099455A;
extern char*s112_30942A;
extern char*s112_37095A;
extern char*s790_61699A;
extern char*s34_436911A;
extern char*s614_1341914655A;
extern char*s101_1604340919A;
extern char*s274_1341859296A;
extern char*s633_42706587A;
extern char*s100_194A;
extern char*s107_195A;
extern char*s112_475921520A;
extern char*s596_619030689A;
extern char*s284_200A;
extern char*s614_117385886A;
extern char*s112_6355A;
extern char*s112_204A;
extern char*s612_205A;
extern char*s106_580488532A;
extern char*s790_212314278A;
extern char*s100_639285944A;
extern char*s412_1085830094A;
extern char*s107_215A;
extern char*s380_905138318A;
extern char*s274_216A;
extern char*s329_2070057757A;
extern char*s33_217A;
extern char*s469_218A;
extern char*s33_218A;
extern char*s620_160146A;
extern char*s112_993675817A;
extern char*s33_220A;
extern char*s100_873294598A;
extern char*s33_54688766A;
extern char*s620_4638080A;
extern char*s612_226A;
extern char*s100_1922692108A;
extern char*s112_227A;
extern char*s274_1302880443A;
extern char*s329_1306325004A;
extern char*s112_585944489A;
extern char*s611_230A;
extern char*s612_230A;
extern char*s614_236A;
extern char*s565_237A;
extern char*s112_240A;
extern char*s108_240A;
extern char*s732_241A;
extern char*s100_241A;
extern char*s612_36137368A;
extern char*s564_244A;
extern char*s620_6396A;
extern char*s112_245A;
extern char*s597_246A;
extern char*s597_247A;
extern char*s620_247A;
extern char*s33_1682815431A;
extern char*s112_249A;
extern char*s112_251A;
extern char*s95_251A;
extern char*s284_252A;
extern char*s597_254A;
extern char*s620_255A;
extern char*s565_255A;
extern char*s107_542094038A;
extern char*s593_257A;
extern char*s112_257A;
extern char*s611_258A;
extern char*s597_259A;
extern char*s614_259A;
extern char*s620_6411A;
extern char*s107_262A;
extern char*s34_10703002A;
extern char*s112_1312728230A;
extern char*s614_264A;
extern char*s620_265A;
extern char*s612_184795A;
extern char*s597_436987A;
extern char*s443_1428348580A;
extern char*s116_270A;
extern char*s400_190952A;
extern char*s418_271A;
extern char*s112_272A;
extern char*s620_6425A;
extern char*s612_1097836905A;
extern char*s597_274A;
extern char*s101_116346440A;
extern char*s112_1017947719A;
extern char*s544_276A;
extern char*s112_277B;
extern char*s112_277C;
extern char*s112_277A;
extern char*s795_277A;
extern char*s371_278A;
extern char*s107_1255776138A;
extern char*s107_1131876546A;
extern char*s112_282A;
extern char*s33_282A;
extern char*s112_284B;
extern char*s112_284A;
extern char*s523_287A;
extern char*s523_80251A;
extern char*s626_293A;
extern char*s626_294A;
extern char*s476_594795843A;
extern char*s626_295A;
extern char*s620_296A;
extern char*s33_296A;
extern char*s108_297A;
extern char*s614_244699380A;
extern char*s108_298A;
extern char*s429_299A;
extern char*s284_300A;
extern char*s108_301A;
extern char*s976_302A;
extern char*s112_6455A;
extern char*s476_305A;
extern char*s112_1754886761A;
extern char*s112_317A;
extern char*s33_406284A;
extern char*s33_42134669A;
extern char*s419_325449730A;
extern char*s112_1238750212A;
extern char*s280_90592250A;
extern char*s100_1088075316A;
extern char*s121_322A;
extern char*s619_35343969A;
extern char*s767_324A;
extern char*s620_325A;
extern char*s108_326A;
extern char*s597_327A;
extern char*s619_197159A;
extern char*s108_327A;
extern char*s354_327A;
extern char*s32_329A;
extern char*s565_1710309A;
extern char*s32_331A;
extern char*s112_10739979A;
extern char*s597_815493762A;
extern char*s108_333A;
extern char*s108_334A;
extern char*s32_334A;
extern char*s115_107193812A;
extern char*s35_336A;
extern char*s559_142931125A;
extern char*s108_340A;
extern char*s108_341A;
extern char*s112_881278717A;
extern char*s612_345A;
extern char*s33_1501191A;
extern char*s470_348A;
extern char*s34_437070A;
extern char*s732_351A;
extern char*s117_1568216255A;
extern char*s107_36611104A;
extern char*s33_1578334651A;
extern char*s660_301503927A;
extern char*s518_360A;
extern char*s371_360A;
extern char*s33_361A;
extern char*s405_1136256141A;
extern char*s469_2140868216A;
extern char*s623_754574290A;
extern char*s614_366A;
extern char*s596_775396A;
extern char*s101_1700247488A;
extern char*s33_371A;
extern char*s518_372A;
extern char*s394_376A;
extern char*s790_377A;
extern char*s112_379A;
extern char*s33_548214405A;
extern char*s462_898426A;
extern char*s108_1561265653A;
extern char*s112_175857472A;
extern char*s112_382A;
extern char*s620_6534A;
extern char*s596_197373672A;
extern char*s108_62728285A;
extern char*s612_1639500234A;
extern char*s120_397A;
extern char*s619_6550A;
extern char*s452_1962655329A;
extern char*s110_402A;
extern char*s597_2054563574A;
extern char*s397_1442631340A;
extern char*s34_9909665A;
extern char*s112_6559A;
extern char*s790_1748680500A;
extern char*s100_1011636926A;
extern char*s620_1340573954A;
extern char*s597_1484470448A;
extern char*s597_1212159A;
extern char*s100_1733505988A;
extern char*s112_1601653158A;
extern char*s620_419A;
extern char*s354_892535123A;
extern char*s112_1957408550A;
extern char*s112_781060556A;
extern char*s112_726728775A;
extern char*s419_1604599495A;
extern char*s405_343527626A;
extern char*s101_74239A;
extern char*s597_6580A;
extern char*s378_1808265259A;
extern char*s593_86545A;
extern char*s429_205111678A;
extern char*s101_696478167A;
extern char*s277_38905513A;
extern char*s452_1604408825A;
extern char*s633_1447552176A;
extern char*s33_1603529235A;
extern char*s790_526175446A;
extern char*s33_80416A;
extern char*s112_1793244543A;
extern char*s33_878996813A;
extern char*s107_408537579A;
extern char*s112_10666295A;
extern char*s112_339308075A;
extern char*s400_1297676933A;
extern char*s790_6614A;
extern char*s329_1489034545A;
extern char*s976_1935504882A;
extern char*s112_471A;
extern char*s626_471A;
extern char*s660_1084920002A;
extern char*s626_474A;
extern char*s420_1240817101A;
extern char*s626_476A;
extern char*s108_1192507148A;
extern char*s33_1639475718A;
extern char*s621_529853775A;
extern char*s666_1937147216A;
extern char*s107_1459577427A;
extern char*s429_397816412A;
extern char*s108_1721407046A;
extern char*s470_1577658176A;
extern char*s597_283801480A;
extern char*s633_1655357614A;
extern char*s773_498A;
extern char*s34_2073386A;
extern char*s100_2117894368A;
extern char*s619_6655A;
extern char*s30_613587359A;
extern char*s612_506A;
extern char*s112_215791A;
extern char*s614_1181502A;
extern char*s976_1942892277A;
extern char*s100_1524784203A;
extern char*s112_365905049A;
extern char*s465_334725631A;
extern char*s776_1000694404A;
extern char*s336_25373399A;
extern char*s112_526A;
extern char*s614_1084495643A;
extern char*s400_889865702A;
extern char*s33_534A;
extern char*s620_535A;
extern char*s108_6687A;
extern char*s490_2057854492A;
extern char*s112_932172292A;
extern char*s100_955638361A;
extern char*s100_9897510A;
extern char*s34_10315778A;
extern char*s33_552A;
extern char*s469_1490203324A;
extern char*s29_833055089A;
extern char*s112_1906398440A;
extern char*s112_1901889757A;
extern char*s119_557A;
extern char*s790_25822456A;
extern char*s686_559A;
extern char*s100_1471861047A;
extern char*s614_550508910A;
extern char*s34_1532343833A;
extern char*s776_68224A;
extern char*s367_1744510279A;
extern char*s284_22396357A;
extern char*s612_570A;
extern char*s122_570A;
extern char*s614_1832703325A;
extern char*s34_54418471A;
extern char*s100_1228072329A;
extern char*s112_1988895671A;
extern char*s565_166654A;
extern char*s274_1476966395A;
extern char*s112_1290234339A;
extern char*s100_1961160815A;
extern char*s397_1037594318A;
extern char*s100_751585121A;
extern char*s34_2233396A;
extern char*s30_1724187394A;
extern char*s34_48390502A;
extern char*s104_589A;
extern char*s626_591A;
extern char*s108_2077353217A;
extern char*s274_2132072515A;
extern char*s35_594A;
extern char*s33_9713026A;
extern char*s33_36193081A;
extern char*s510_2080244194A;
extern char*s34_600A;
extern char*s101_1317175740A;
extern char*s107_1463938603A;
extern char*s110_603A;
extern char*s790_6755A;
extern char*s790_604A;
extern char*s100_1207921682A;
extern char*s107_801894175A;
extern char*s441_1773450779A;
extern char*s100_437331A;
extern char*s405_1260488135A;
extern char*s100_611A;
extern char*s33_548331507A;
extern char*s788_614A;
extern char*s619_185146A;
extern char*s112_1419097826A;
extern char*s107_427937988A;
extern char*s108_179868158A;
extern char*s620_475042348A;
extern char*s429_620A;
extern char*s597_68284A;
extern char*s614_6775A;
extern char*s112_625A;
extern char*s112_5395053A;
extern char*s34_627A;
extern char*s614_693716559A;
extern char*s121_354654986A;
extern char*s33_51915068A;
extern char*s115_1661847054A;
extern char*s101_85511833A;
extern char*s612_1367878466A;
extern char*s112_635A;
extern char*s33_636A;
extern char*s97_1861287086A;
extern char*s471_449661A;
extern char*s34_640A;
extern char*s614_2251910A;
extern char*s609_5395074A;
extern char*s107_1174466439A;
extern char*s112_651A;
extern char*s34_1690381566A;
extern char*s33_1744399653A;
extern char*s620_6810A;
extern char*s104_660A;
extern char*s34_661A;
extern char*s106_97543221A;
extern char*s609_4570857A;
extern char*s614_1175100011A;
extern char*s33_669A;
extern char*s620_670A;
extern char*s34_670A;
extern char*s559_671A;
extern char*s30_525197655A;
extern char*s597_43730A;
extern char*s399_925886099A;
extern char*s620_351281A;
extern char*s110_674A;
extern char*s100_1135641353A;
extern char*s790_6830A;
extern char*s633_378711602A;
extern char*s108_1087245292A;
extern char*s89_685A;
extern char*s108_686A;
extern char*s108_689A;
extern char*s112_1713607783A;
extern char*s107_1828403897A;
extern char*s619_1824264277A;
extern char*s619_905827712A;
extern char*s788_699A;
extern char*s620_31455A;
extern char*s594_619166512A;
extern char*s597_228498053A;
extern char*s280_875060418A;
extern char*s33_1115958189A;
extern char*s33_1206543966A;
extern char*s609_4570907A;
extern char*s29_1325879523A;
extern char*s633_1197649626A;
extern char*s100_316863332A;
extern char*s597_10937200A;
extern char*s112_6877A;
extern char*s110_13028A;
extern char*s33_80694A;
extern char*s565_1290234494A;
extern char*s102_1385667261A;
extern char*s33_849712179A;
extern char*s609_4570932A;
extern char*s283_740A;
extern char*s619_101227749A;
extern char*s614_744A;
extern char*s110_1772235A;
extern char*s614_750A;
extern char*s614_1261705A;
extern char*s681_1601130656A;
extern char*s107_1460051321A;
extern char*s274_527202963A;
extern char*s112_1195084695A;
extern char*s400_613384625A;
extern char*s557_2007779419A;
extern char*s108_643573734A;
extern char*s476_589832448A;
extern char*s619_40031469A;
extern char*s609_4570957A;
extern char*s621_68406039A;
extern char*s790_5161461A;
extern char*s614_644847010A;
extern char*s33_567319806A;
extern char*s614_1124563501A;
extern char*s113_6926A;
extern char*s110_51699930A;
extern char*s394_7867907A;
extern char*s33_1597390874A;
extern char*s33_567319812A;
extern char*s112_7720290A;
extern char*s609_4570982A;
extern char*s117_899910547A;
extern char*s790_2092663259A;
extern char*s620_6946A;
extern char*s112_1994813154A;
extern char*s33_567319829A;
extern char*s419_282823780A;
extern char*s620_1824713404A;
extern char*s33_9676326A;
extern char*s596_926003101A;
extern char*s597_80771A;
extern char*s274_1091711046A;
extern char*s620_6965A;
extern char*s609_4571007A;
extern char*s564_1710532409A;
extern char*s33_1671553525A;
extern char*s112_1981256377A;
extern char*s108_10937305A;
extern char*s597_173055A;
extern char*s471_55156846A;
extern char*s100_52979396A;
extern char*s498_1083118122A;
extern char*s614_400650A;
extern char*s614_86950A;
extern char*s34_400652A;
extern char*s620_427390771A;
extern char*s274_1707020207A;
extern char*s609_4571032A;
extern char*s597_345908476A;
extern char*s620_6995A;
extern char*s95_142319A;
extern char*s34_11251026A;
extern char*s419_170383550A;
extern char*s623_7006A;
extern char*s108_373286592A;
extern char*s100_1275558331A;
extern char*s609_4571057A;
extern char*s100_888875725A;
extern char*s790_1648235130A;
extern char*s33_1498845794A;
extern char*s469_1331532446A;
extern char*s397_1769582063A;
extern char*s620_7025A;
extern char*s790_1288623074A;
extern char*s485_672729595A;
extern char*s646_385268764A;
extern char*s792_730579755A;
extern char*s274_1130154866A;
extern char*s400_923532A;
extern char*s976_7037A;
extern char*s107_1814748872A;
extern char*s336_345225764A;
extern char*s614_1291760099A;
extern char*s33_80854A;
extern char*s33_13194A;
extern char*s277_1820580025A;
extern char*s620_1689502217A;
extern char*s609_185428A;
extern char*s34_10193105A;
extern char*s32_831708366A;
extern char*s121_1972884945A;
extern char*s33_10377643A;
extern char*s609_185438A;
extern char*s108_703496930A;
extern char*s792_1295032451A;
extern char*s107_604558099A;
extern char*s609_185443A;
extern char*s660_501491947A;
extern char*s609_185448A;
extern char*s107_1786429697A;
extern char*s400_1552156565A;
extern char*s609_185453A;
extern char*s34_1975394A;
extern char*s33_1594034A;
extern char*s33_2246041A;
extern char*s609_185458A;
extern char*s790_1012357115A;
extern char*s609_185463A;
extern char*s273_51017327A;
extern char*s112_934A;
extern char*s368_1809213019A;
extern char*s452_1284372793A;
extern char*s463_1204053035A;
extern char*s34_1839765037A;
extern char*s609_185468A;
extern char*s108_830570470A;
extern char*s565_481249030A;
extern char*s730_495673125A;
extern char*s115_1752297822A;
extern char*s112_1642367158A;
extern char*s112_273431355A;
extern char*s274_708319A;
extern char*s790_915251302A;
extern char*s432_171706123A;
extern char*s108_50863580A;
extern char*s463_1204053060A;
extern char*s549_1747846A;
extern char*s614_7118A;
extern char*s33_1607595572A;
extern char*s633_557767498A;
extern char*s34_1992063831A;
extern char*s497_1962243783A;
extern char*s112_207160501A;
extern char*s623_124454155A;
extern char*s476_1496963692A;
extern char*s614_54714119A;
extern char*s620_87090A;
extern char*s112_1586448448A;
extern char*s790_77282146A;
extern char*s620_185515A;
extern char*s443_540477054A;
extern char*s84_1761241425A;
extern char*s112_1500500537A;
extern char*s112_437715A;
extern char*s100_1587734026A;
extern char*s790_160930A;
extern char*s100_1703575813A;
extern char*s623_160937A;
extern char*s274_89867121A;
extern char*s400_205616643A;
extern char*s112_514187710A;
extern char*s447_1615634978A;
extern char*s100_2080029331A;
extern char*s100_266191698A;
extern char*s108_851047233A;
extern char*s112_1346694814A;
extern char*s107_1365578385A;
extern char*s100_1090616383A;
extern char*s112_308580A;
extern char*s646_247541875A;
extern char*s452_1436450217A;
extern char*s107_713806135A;
extern char*s345_646901709A;
extern char*s100_1581435442A;
extern char*s446_743946038A;
extern char*s679_1043A;
extern char*s452_69279758A;
extern char*s108_17494489A;
extern char*s680_1047A;
extern char*s284_7207A;
extern char*s34_10876026A;
extern char*s112_437780A;
extern char*s100_1380562254A;
extern char*s633_1092806174A;
extern char*s408_1719402393A;
extern char*s106_23085765A;
extern char*s112_1102979933A;
extern char*s790_1574324912A;
extern char*s35_87180A;
extern char*s95_439490016A;
extern char*s107_385188989A;
extern char*s100_1934613587A;
extern char*s112_965818786A;
extern char*s474_68732A;
extern char*s274_208962844A;
extern char*s100_2091587115A;
extern char*s30_142550A;
extern char*s112_4620481A;
extern char*s479_7232A;
extern char*s452_1305581590A;
extern char*s400_156630152A;
extern char*s612_167166A;
extern char*s30_1090A;
extern char*s621_1102979958A;
extern char*s549_1027113524A;
extern char*s614_1348915394A;
extern char*s112_1901755A;
extern char*s612_580292587A;
extern char*s458_99702656A;
extern char*s107_1839715989A;
extern char*s564_302501127A;
extern char*s452_1630520481A;
extern char*s795_1101A;
extern char*s461_1554555636A;
extern char*s400_1277330071A;
extern char*s112_893005A;
extern char*s790_2136427942A;
extern char*s476_1034900711A;
extern char*s429_1112A;
extern char*s100_1617443474A;
extern char*s112_588411932A;
extern char*s518_1330923746A;
extern char*s95_1121A;
extern char*s452_1051699101A;
extern char*s363_327012886A;
extern char*s100_1717397235A;
extern char*s100_1003875089A;
extern char*s35_2141685A;
extern char*s612_1446625A;
extern char*s345_1759986771A;
extern char*s112_4620546A;
extern char*s790_7296A;
extern char*s530_927498134A;
extern char*s619_10322525A;
extern char*s410_1099750743A;
extern char*s620_1628970485A;
extern char*s282_1133285999A;
extern char*s33_1157A;
extern char*s328_1981041429A;
extern char*s112_273443870A;
extern char*s593_7317A;
extern char*s112_1350760769A;
extern char*s107_1535001676A;
extern char*s619_419443A;
extern char*s465_1867518592A;
extern char*s108_1964046235A;
extern char*s400_905382A;
extern char*s112_1142598643A;
extern char*s274_305465997A;
extern char*s33_1944903A;
extern char*s431_235492225A;
extern char*s33_55040341A;
extern char*s549_28418819A;
extern char*s34_10648581A;
extern char*s379_1552710436A;
extern char*s100_1819737650A;
extern char*s107_1206593669A;
extern char*s17_1210A;
extern char*s35_2246326A;
extern char*s108_1215A;
extern char*s274_767646015A;
extern char*s277_1641573945A;
extern char*s112_1839365502A;
extern char*s112_1319581398A;
extern char*s33_9529116A;
extern char*s612_11300605A;
extern char*s790_7374A;
extern char*s121_1430004157A;
extern char*s620_1671074150A;
extern char*s400_1324951230A;
extern char*s32_1897129554A;
extern char*s284_188916891A;
extern char*s100_155929078A;
extern char*s107_646243744A;
extern char*s33_276937706A;
extern char*s33_1235A;
extern char*s100_911265735A;
extern char*s612_1240A;
extern char*s790_407207A;
extern char*s419_1700082283A;
extern char*s620_520388145A;
extern char*s33_55040391A;
extern char*s620_704592146A;
extern char*s33_1247A;
extern char*s461_1377394679A;
extern char*s378_1088174660A;
extern char*s100_445001496A;
extern char*s619_52555395A;
extern char*s30_513843490A;
extern char*s33_55040401A;
extern char*s112_499425548A;
extern char*s284_4479182A;
extern char*s597_1485929081A;
extern char*s33_2067995A;
extern char*s620_870841390A;
extern char*s112_1919660703A;
extern char*s112_1264A;
extern char*s107_1265A;
extern char*s597_1269A;
extern char*s112_1271B;
extern char*s112_1271A;
extern char*s95_74133124A;
extern char*s791_1274A;
extern char*s112_148900A;
extern char*s557_38182A;
extern char*s597_182255408A;
extern char*s621_1431664982A;
extern char*s621_1280A;
extern char*s112_1284A;
extern char*s612_1285A;
extern char*s621_1291A;
extern char*s108_932412928A;
extern char*s666_1083579905A;
extern char*s112_81256A;
extern char*s112_1295B;
extern char*s112_1295A;
extern char*s614_25900A;
extern char*s612_1298A;
extern char*s429_1642232185A;
extern char*s452_1952642401A;
extern char*s614_685204250A;
extern char*s610_7454A;
extern char*s609_1312A;
extern char*s327_855586967A;
extern char*s34_1988096A;
extern char*s597_7475A;
extern char*s33_747962924A;
extern char*s112_32080A;
extern char*s532_902076231A;
extern char*s339_10414970A;
extern char*s364_1686701A;
extern char*s34_945182441A;
extern char*s112_1330A;
extern char*s790_26635163A;
extern char*s33_1245671098A;
extern char*s108_1335A;
extern char*s403_13637A;
extern char*s100_2097430832A;
extern char*s101_140920753A;
extern char*s597_37202594A;
extern char*s476_412142950A;
extern char*s419_1304837581A;
extern char*s34_87466A;
extern char*s112_411134193A;
extern char*s280_413151726A;
extern char*s277_1136866084A;
extern char*s623_1068122514A;
extern char*s619_2077255577A;
extern char*s620_116864219A;
extern char*s419_1081673178A;
extern char*s478_869266852A;
extern char*s336_590983311A;
extern char*s116_1382A;
extern char*s367_762122588A;
extern char*s274_139303084A;
extern char*s597_2028521226A;
extern char*s101_996106634A;
extern char*s100_1910692676A;
extern char*s100_1466196812A;
extern char*s790_1396A;
extern char*s112_1618833880A;
extern char*s633_1846931416A;
extern char*s274_86060043A;
extern char*s976_1807195960A;
extern char*s557_7557A;
extern char*s401_1127350535A;
extern char*s283_87520A;
extern char*s619_1407A;
extern char*s619_1994331A;
extern char*s400_1705796732A;
extern char*s788_1414A;
extern char*s101_181806522A;
extern char*s112_1417A;
extern char*s614_32175A;
extern char*s623_32176A;
extern char*s633_39109479A;
extern char*s405_1732344459A;
extern char*s100_2110077371A;
extern char*s597_1426A;
extern char*s33_87541A;
extern char*s33_1427A;
extern char*s121_210310269A;
extern char*s119_489233515A;
extern char*s363_1459510708A;
extern char*s405_1382321814A;
extern char*s621_29107967A;
extern char*s112_1540494783A;
extern char*s108_1438A;
extern char*s614_1241777620A;
extern char*s112_2087300232A;
extern char*s614_1445A;
extern char*s620_1124779458A;
extern char*s30_941571923A;
extern char*s680_1452A;
extern char*s350_1440516445A;
extern char*s122_150325744A;
extern char*s497_90494969A;
extern char*s274_1689176777A;
extern char*s112_1924772383A;
extern char*s597_1246790712A;
extern char*s469_486705491A;
extern char*s788_81437A;
extern char*s112_1476A;
extern char*s621_813409A;
extern char*s435_1478A;
extern char*s112_188283590A;
extern char*s614_1307328870A;
extern char*s336_934695142A;
extern char*s112_1273572186A;
extern char*s30_579450289A;
extern char*s100_54634669A;
extern char*s596_340114884A;
extern char*s112_1493A;
extern char*s33_1375414302A;
extern char*s100_1744209811A;
extern char*s112_13801A;
extern char*s112_586511651A;
extern char*s688_511703191A;
extern char*s790_479982486A;
extern char*s112_1404852998A;
extern char*s394_35382059A;
extern char*s100_49203356A;
extern char*s112_2142659303A;
extern char*s400_2480364A;
extern char*s394_354065377A;
extern char*s115_582925635A;
extern char*s100_2047201942A;
extern char*s100_1909979286A;
extern char*s121_1680762272A;
extern char*s33_880412606A;
extern char*s34_2234341A;
extern char*s274_1709309070A;
extern char*s108_1102814319A;
extern char*s620_1530A;
extern char*s100_833080669A;
extern char*s619_49806180A;
extern char*s620_1679636650A;
extern char*s471_413651A;
extern char*s790_129037214A;
extern char*s33_279656751A;
extern char*s400_2480394A;
extern char*s100_962885232A;
extern char*s33_859431564A;
extern char*s112_490869799A;
extern char*s100_791727511A;
extern char*s112_1164920984A;
extern char*s100_2099054905A;
extern char*s660_643795973A;
extern char*s597_1111954737A;
extern char*s34_1957581A;
extern char*s274_1553744164A;
extern char*s112_1565A;
extern char*s620_511943145A;
extern char*s100_2037548A;
extern char*s597_491029751A;
extern char*s790_1111960899A;
extern char*s112_1471782099A;
extern char*s100_955584028A;
extern char*s34_407540A;
extern char*s33_438300A;
extern char*s343_242535516A;
extern char*s100_1666553531A;
extern char*s619_1203432441A;
extern char*s614_283285900A;
extern char*s112_1661632742A;
extern char*s619_2006740748A;
extern char*s33_761722990A;
extern char*s476_1319735562A;
extern char*s100_1208507031A;
extern char*s597_1185483839A;
extern char*s112_341357508A;
extern char*s121_3556890A;
extern char*s101_1038536453A;
extern char*s596_1191155066A;
extern char*s108_2011772281A;
extern char*s33_185934049A;
extern char*s108_1626A;
extern char*s400_2480479A;
extern char*s33_185934055A;
extern char*s30_7779A;
extern char*s100_2055333675A;
extern char*s112_1607940692A;
extern char*s112_860532685A;
extern char*s108_2139128753A;
extern char*s619_1783951564A;
extern char*s34_1532344910A;
extern char*s33_619776399A;
extern char*s34_479921113A;
extern char*s469_522818189A;
extern char*s795_1644A;
extern char*s33_185934072A;
extern char*s621_32400A;
extern char*s597_1923813010A;
extern char*s596_1646A;
extern char*s461_2141380032A;
extern char*s100_1254996328A;
extern char*s790_687744958A;
extern char*s614_1650A;
extern char*s790_1651A;
extern char*s419_265238926A;
extern char*s108_7809A;
extern char*s614_180037A;
extern char*s593_386149138A;
extern char*s100_401981819A;
extern char*s112_1164208A;
extern char*s559_1046299075A;
extern char*s790_349661420A;
extern char*s597_1676A;
extern char*s33_1326673961A;
extern char*s620_32435A;
extern char*s790_44739A;
extern char*s35_1994621A;
extern char*s100_1289042164A;
extern char*s620_32456A;
extern char*s112_1946737844A;
extern char*s112_14005A;
extern char*s112_192841706A;
extern char*s368_1348774A;
extern char*s400_1337425939A;
extern char*s115_1875884480A;
extern char*s549_142089811A;
extern char*s441_1110386385A;
extern char*s112_7869A;
extern char*s284_2082988666A;
extern char*s108_7878A;
extern char*s614_1727A;
extern char*s410_183516812A;
extern char*s620_1586596820A;
extern char*s621_29126717A;
extern char*s34_14036A;
extern char*s33_55926626A;
extern char*s112_48520827A;
extern char*s614_1060489498A;
extern char*s594_161665A;
extern char*s419_1857191624A;
extern char*s117_1797674551A;
extern char*s108_1744A;
extern char*s614_1115076A;
extern char*s614_180128A;
extern char*s100_941240074A;
extern char*s274_608446371A;
extern char*s475_1753A;
extern char*s476_112048371A;
extern char*s112_1852104762A;
extern char*s376_316489161A;
extern char*s115_22612837A;
extern char*s112_1765A;
extern char*s405_176104896A;
extern char*s371_1712194128A;
extern char*s101_256559978A;
extern char*s405_1458557644A;
extern char*s95_1052333303A;
extern char*s100_1296817101A;
extern char*s108_1775A;
extern char*s100_376006259A;
extern char*s112_1364588829A;
extern char*s370_7506001A;
extern char*s112_36778611A;
extern char*s100_970900228A;
extern char*s594_565063403A;
extern char*s452_2108232434A;
extern char*s112_308542101A;
extern char*s112_4049151A;
extern char*s790_1523807481A;
extern char*s490_920757291A;
extern char*s394_1801A;
extern char*s633_1658151484A;
extern char*s100_1917483795A;
extern char*s112_1630601156A;
extern char*s107_89019087A;
extern char*s34_2185421A;
extern char*s34_251171752A;
extern char*s100_1778077539A;
extern char*s33_312005144A;
extern char*s100_1665385073A;
extern char*s349_1771711260A;
extern char*s549_1826A;
extern char*s122_75639A;
extern char*s476_1832A;
extern char*s619_54714979A;
extern char*s620_1651828280A;
extern char*s336_1813679543A;
extern char*s620_1214258443A;
extern char*s620_167916A;
extern char*s620_1840A;
extern char*s620_108351709A;
extern char*s33_94407393A;
extern char*s33_14150A;
extern char*s790_32605A;
extern char*s100_50040236A;
extern char*s112_1154403080A;
extern char*s469_1468725331A;
extern char*s112_426087775A;
extern char*s112_57150800A;
extern char*s100_1021024803A;
extern char*s790_47598300A;
extern char*s277_1188332009A;
extern char*s100_603076667A;
extern char*s621_534333098A;
extern char*s790_692075493A;
extern char*s112_107312226A;
extern char*s452_90390825A;
extern char*s112_267478119A;
extern char*s35_2191641A;
extern char*s596_565069653A;
extern char*s621_2001063662A;
extern char*s35_822199910A;
extern char*s100_2047202317A;
extern char*s620_32650A;
extern char*s112_438660461A;
extern char*s100_502181838A;
extern char*s100_307717976A;
extern char*s107_327902A;
extern char*s620_1900A;
extern char*s620_10089540A;
extern char*s100_1938643327A;
extern char*s112_1580612071A;
extern char*s564_1747685533A;
extern char*s33_735034101A;
extern char*s100_376006384A;
extern char*s452_573004463A;
extern char*s33_50778415A;
extern char*s597_505232755A;
extern char*s612_36126743A;
extern char*s112_7918258A;
extern char*s788_413927315A;
extern char*s282_1185293475A;
extern char*s619_1994852A;
extern char*s33_1530432238A;
extern char*s620_5654700A;
extern char*s620_887295984A;
extern char*s100_2061122069A;
extern char*s100_945201499A;
extern char*s100_1933A;
extern char*s559_992810240A;
extern char*s33_88048A;
extern char*s112_950675891A;
extern char*s33_88049A;
extern char*s619_942808765A;
extern char*s100_246527867A;
extern char*s108_69601A;
extern char*s33_55041091A;
extern char*s100_4492176A;
extern char*s597_2111741A;
extern char*s790_27909038A;
extern char*s33_36200588A;
extern char*s559_724183788A;
extern char*s108_683870135A;
extern char*s33_261093457A;
extern char*s476_909851733A;
extern char*s100_1991246741A;
extern char*s33_1286698901A;
extern char*s100_1505459217A;
extern char*s100_1421116705A;
extern char*s620_9794360A;
extern char*s108_1115301A;
extern char*s100_124992A;
extern char*s597_2072064738A;
extern char*s33_1680885744A;
extern char*s108_5525574A;
extern char*s790_525205114A;
extern char*s112_11086084A;
extern char*s597_4996600A;
extern char*s100_676728857A;
extern char*s34_451011A;
extern char*s620_86195952A;
extern char*s33_55041141A;
extern char*s115_1127406485A;
extern char*s107_2029530601A;
extern char*s112_1492394528A;
extern char*s33_55041151A;
extern char*s620_19199275A;
extern char*s121_1711985232A;
extern char*s596_2039095413A;
extern char*s100_1284361566A;
extern char*s107_1378502623A;
extern char*s397_729510616A;
extern char*s614_28032126A;
extern char*s476_1646704683A;
extern char*s112_1965252672A;
extern char*s790_2121801775A;
extern char*s612_161951A;
extern char*s277_1281353746A;
extern char*s112_772432310A;
extern char*s277_169314461A;
extern char*s329_971287994A;
extern char*s33_586229245A;
extern char*s620_484454800A;
extern char*s623_1150927957A;
extern char*s33_1395184171A;
extern char*s620_10089690A;
extern char*s112_1307483215A;
extern char*s107_891552598A;
extern char*s112_1724182721A;
extern char*s620_476433922A;
extern char*s107_1145029170A;
extern char*s101_446380143A;
extern char*s597_826425832A;
extern char*s612_21020045A;
extern char*s620_9954400A;
extern char*s108_186217457A;
extern char*s620_162010A;
extern char*s112_1656195746A;
extern char*s107_1483967746A;
extern char*s394_1747372019A;
extern char*s612_162019A;
extern char*s620_162020A;
extern char*s623_5279655A;
extern char*s401_1993565801A;
extern char*s112_506210947A;
extern char*s33_1300046706A;
extern char*s33_2104A;
extern char*s621_32860A;
extern char*s112_8260A;
extern char*s621_2110A;
extern char*s30_1042405932A;
extern char*s112_32869A;
extern char*s100_2001191A;
extern char*s597_1032053803A;
extern char*s476_1427483140A;
extern char*s328_977955761A;
extern char*s34_408086A;
extern char*s112_531983658A;
extern char*s34_251916328A;
extern char*s100_1176245553A;
extern char*s95_1781104140A;
extern char*s110_57487A;
extern char*s112_451157A;
extern char*s620_8291A;
extern char*s596_205124A;
extern char*s475_2009909053A;
extern char*s620_162070A;
extern char*s34_69805A;
extern char*s623_1113554587A;
extern char*s112_389672A;
extern char*s112_389675A;
extern char*s790_1927425A;
extern char*s791_14464A;
extern char*s368_202031759A;
extern char*s100_2051403723A;
extern char*s614_162095A;
extern char*s620_2138778683A;
extern char*s277_32926A;
extern char*s121_461074983A;
extern char*s400_900982204A;
extern char*s110_2178A;
extern char*s34_401994A;
extern char*s33_2035472654A;
extern char*s976_482960256A;
extern char*s108_69851A;
extern char*s112_1826935309A;
extern char*s34_2032026A;
extern char*s620_1726920051A;
extern char*s34_264667428A;
extern char*s112_351488799A;
extern char*s100_4750778A;
extern char*s112_383570A;
extern char*s620_340514A;
extern char*s620_1240185282A;
extern char*s34_820292A;
extern char*s115_1585514726A;
extern char*s597_1637927398A;
extern char*s274_698011541A;
extern char*s388_529996976A;
extern char*s115_1297180456A;
extern char*s33_1447702A;
extern char*s108_1255802680A;
extern char*s518_922867504A;
extern char*s34_88336A;
extern char*s100_599810839A;
extern char*s596_1112927266A;
extern char*s33_840111968A;
extern char*s476_115013643A;
extern char*s620_234933541A;
extern char*s32_1181006553A;
extern char*s100_1023251859A;
extern char*s731_2114672999A;
extern char*s400_442652821A;
extern char*s107_601041072A;
extern char*s419_797085749A;
extern char*s33_1297432701A;
extern char*s790_5839580A;
extern char*s33_2067759348A;
extern char*s597_832670A;
extern char*s623_8436A;
extern char*s429_408035024A;
extern char*s633_1679625106A;
extern char*s327_864187036A;
extern char*s621_1155996628A;
extern char*s33_1209184326A;
extern char*s100_700613496A;
extern char*s620_45355A;
extern char*s623_1245850444A;
extern char*s115_1041926341A;
extern char*s597_2301A;
extern char*s100_1689577436A;
extern char*s33_1604515261A;
extern char*s620_1096165867A;
extern char*s100_860582570A;
extern char*s620_245384155A;
extern char*s112_1816632501A;
extern char*s115_1811139659A;
extern char*s33_728963476A;
extern char*s33_9647090A;
extern char*s597_8475A;
extern char*s100_28789007A;
extern char*s100_1874765620A;
extern char*s110_395994A;
extern char*s620_8485A;
extern char*s30_546635553A;
extern char*s620_1553763390A;
extern char*s112_20552830A;
extern char*s632_1664721281A;
extern char*s100_1752914319A;
extern char*s100_2020913390A;
extern char*s34_414461A;
extern char*s597_1426099398A;
extern char*s100_156243902A;
extern char*s611_1476205446A;
extern char*s614_1936367907A;
extern char*s274_1955866577A;
extern char*s632_1025503229A;
extern char*s448_914877497A;
extern char*s620_244793715A;
extern char*s365_1360462097A;
extern char*s767_1121854A;
extern char*s336_2084982239A;
extern char*s33_175767198A;
extern char*s633_1238684603A;
extern char*s108_45436A;
extern char*s790_737599544A;
extern char*s112_419316052A;
extern char*s112_2382A;
extern char*s95_1452647150A;
extern char*s365_41841490A;
extern char*s108_217674A;
extern char*s112_149822297A;
extern char*s593_1359151955A;
extern char*s593_8545A;
extern char*s628_2394A;
extern char*s112_2395A;
extern char*s597_126319331A;
extern char*s628_2395A;
extern char*s100_1478844272A;
extern char*s100_1223700793A;
extern char*s100_529554293A;
extern char*s284_63912A;
extern char*s100_2117988535A;
extern char*s107_2114217978A;
extern char*s112_1327517381A;
extern char*s614_2065182209A;
extern char*s112_1530032908A;
extern char*s397_1222747401A;
extern char*s274_2070822678A;
extern char*s34_76226A;
extern char*s100_439136A;
extern char*s112_2417A;
extern char*s429_146113272A;
extern char*s620_714188879A;
extern char*s95_2123229206A;
extern char*s274_763815152A;
extern char*s274_957054969A;
extern char*s482_180503525A;
extern char*s110_2440A;
extern char*s274_556698697A;
extern char*s108_6159594A;
extern char*s121_1974940930A;
extern char*s620_168532A;
extern char*s623_1956008156A;
extern char*s101_274238642A;
extern char*s33_2090604340A;
extern char*s33_591414963A;
extern char*s113_1753572602A;
extern char*s564_11381817A;
extern char*s614_48939825A;
extern char*s101_332623945A;
extern char*s790_8624A;
extern char*s400_282345691A;
extern char*s619_1119207694A;
extern char*s619_118716790A;
extern char*s614_48939847A;
extern char*s100_554066118A;
extern char*s100_1439398002A;
extern char*s469_1917908900A;
extern char*s100_1193216533A;
extern char*s614_279959115A;
extern char*s100_277837020A;
extern char*s33_2504A;
extern char*s102_1656731300A;
extern char*s619_49917876A;
extern char*s549_193194A;
extern char*s110_207986277A;
extern char*s100_180894A;
extern char*s286_1477688005A;
extern char*s329_1777506207A;
extern char*s34_402346A;
extern char*s620_33291A;
extern char*s121_2537A;
extern char*s100_761631659A;
extern char*s371_2126200255A;
extern char*s117_584218374A;
extern char*s112_2545A;
extern char*s597_1575353618A;
extern char*s565_33316A;
extern char*s33_1223768616A;
extern char*s620_308542874A;
extern char*s788_2082029949A;
extern char*s684_2565A;
extern char*s633_1711825865A;
extern char*s100_1909918820A;
extern char*s33_744845610A;
extern char*s400_1670460393A;
extern char*s549_64080A;
extern char*s620_2571A;
extern char*s597_1489891655A;
extern char*s397_1182157125A;
extern char*s620_37173080A;
extern char*s565_3920780A;
extern char*s110_76405A;
extern char*s115_305596576A;
extern char*s112_1361175839A;
extern char*s274_22915075A;
extern char*s112_218061703A;
extern char*s108_98806116A;
extern char*s34_82570A;
extern char*s619_411283072A;
extern char*s100_1731250773A;
extern char*s32_1194182360A;
extern char*s100_1564737054A;
extern char*s30_8771A;
extern char*s619_689812670A;
extern char*s101_894954671A;
extern char*s559_950159899A;
extern char*s100_2992013A;
extern char*s112_2630A;
extern char*s34_114085235A;
extern char*s108_1247935972A;
extern char*s112_1308400309A;
extern char*s621_1773508175A;
extern char*s108_8801A;
extern char*s620_524787520A;
extern char*s108_530877013A;
extern char*s452_789877170A;
extern char*s100_1098712729A;
extern char*s620_1116064705A;
extern char*s452_783418632A;
extern char*s621_2670A;
extern char*s112_33425A;
extern char*s367_292944046A;
extern char*s790_1069766146A;
extern char*s33_88795A;
extern char*s795_480414235A;
extern char*s107_1572647306A;
extern char*s792_585110409A;
extern char*s112_1082664800A;
extern char*s118_138929174A;
extern char*s620_1263916320A;
extern char*s30_1010347497A;
extern char*s34_2063276A;
extern char*s33_201970776A;
extern char*s34_396356A;
extern char*s620_1023363018A;
extern char*s469_1089314041A;
extern char*s107_961022639A;
extern char*s33_201970793A;
extern char*s277_2089269822A;
extern char*s33_756809447A;
extern char*s609_23647157A;
extern char*s35_234165132A;
extern char*s33_201970799A;
extern char*s564_15019A;
extern char*s34_479922190A;
extern char*s620_15020A;
extern char*s112_33475A;
extern char*s461_1172758533A;
extern char*s633_1912840703A;
extern char*s112_1934139A;
extern char*s336_1646268668A;
extern char*s107_66925608A;
extern char*s112_8880A;
extern char*s108_8884A;
extern char*s620_8885A;
extern char*s532_520647979A;
extern char*s397_112006296A;
extern char*s108_8889A;
extern char*s112_941548611A;
extern char*s619_1637595774A;
extern char*s32_8897A;
extern char*s100_45224899A;
extern char*s112_162838175A;
extern char*s33_30191860A;
extern char*s112_2753A;
extern char*s790_1341105285A;
extern char*s274_1251030042A;
extern char*s112_900404594A;
extern char*s29_1525604536A;
extern char*s33_1673345408A;
extern char*s33_954385774A;
extern char*s284_10926944A;
extern char*s432_1666936074A;
extern char*s400_2004103151A;
extern char*s95_672350142A;
extern char*s465_946986142A;
extern char*s790_236525A;
extern char*s33_827429162A;
extern char*s790_2142119302A;
extern char*s619_444775459A;
extern char*s328_311661671A;
extern char*s273_758913190A;
extern char*s33_253393261A;
extern char*s112_1040899642A;
extern char*s273_319940936A;
extern char*s34_1509818A;
extern char*s108_8976A;
extern char*s101_1581369567A;
extern char*s100_2137524537A;
extern char*s619_1246644455A;
extern char*s112_1136523103A;
extern char*s110_2833A;
extern char*s419_1529695024A;
extern char*s336_556920526A;
extern char*s429_1026844627A;
extern char*s597_567426438A;
extern char*s108_8991A;
extern char*s620_2217200A;
extern char*s400_1143055473A;
extern char*s108_1331737400A;
extern char*s483_76659A;
extern char*s112_985140858A;
extern char*s274_961330339A;
extern char*s621_177459204A;
extern char*s410_936707889A;
extern char*s115_612334905A;
extern char*s108_1431838787A;
extern char*s790_52067A;
extern char*s403_1721243342A;
extern char*s100_1207880883A;
extern char*s112_400297641A;
extern char*s368_2870A;
extern char*s112_1746979137A;
extern char*s112_1591358844A;
extern char*s33_52347889A;
extern char*s33_76691A;
extern char*s107_1574136045A;
extern char*s327_36115402A;
extern char*s380_527180488A;
extern char*s112_2883A;
extern char*s100_1910823336A;
extern char*s790_618166083A;
extern char*s33_1095772782A;
extern char*s108_218174A;
extern char*s620_907447617A;
extern char*s466_1057882626A;
extern char*s281_15195A;
extern char*s33_869539012A;
extern char*s597_1728089446A;
extern char*s620_1671063525A;
extern char*s84_522142839A;
extern char*s621_965636096A;
extern char*s112_54734511A;
extern char*s633_1691484858A;
extern char*s620_520377520A;
extern char*s33_1574640467A;
extern char*s108_9073A;
extern char*s620_39831A;
extern char*s593_1971245A;
extern char*s329_580435889A;
extern char*s33_48958735A;
extern char*s100_727272566A;
extern char*s102_1377150320A;
extern char*s33_170256464A;
extern char*s100_1953566687A;
extern char*s633_81368369A;
extern char*s286_624587783A;
extern char*s120_2947A;
extern char*s34_8054609A;
extern char*s108_9107A;
extern char*s452_947318471A;
extern char*s108_9121A;
extern char*s368_181352A;
extern char*s107_1737672775A;
extern char*s619_497096041A;
extern char*s976_387651299A;
extern char*s620_2118444283A;
extern char*s112_9130A;
extern char*s772_1182938696A;
extern char*s108_2109537640A;
extern char*s32_2057783129A;
extern char*s597_759184012A;
extern char*s112_374291339A;
extern char*s112_712350300A;
extern char*s108_415107A;
extern char*s100_1775667520A;
extern char*s620_2996A;
extern char*s790_998144220A;
extern char*s112_1582839830A;
extern char*s33_180965424A;
extern char*s368_732402575A;
extern char*s33_180965430A;
extern char*s368_44462444A;
extern char*s112_1281004126A;
extern char*s112_1450568746A;
extern char*s100_188494264A;
extern char*s112_1982839385A;
extern char*s33_180965447A;
extern char*s100_167445550A;
extern char*s33_10945665A;
extern char*s612_115574176A;
extern char*s112_3040A;
extern char*s619_1757386798A;
extern char*s101_1708886163A;
extern char*s284_1661812564A;
extern char*s274_2028436769A;
extern char*s112_15351A;
extern char*s633_214672950A;
extern char*s33_2174354A;
extern char*s597_1111279623A;
extern char*s633_1961403182A;
extern char*s623_2117730851A;
extern char*s281_15370A;
extern char*s115_69115705A;
extern char*s108_9220A;
extern char*s110_3069A;
extern char*s280_1492303331A;
extern char*s108_9222A;
extern char*s100_723705127A;
extern char*s115_1008693261A;
extern char*s34_3073A;
extern char*s33_3075A;
extern char*s100_1922694958A;
extern char*s790_33836A;
extern char*s274_817932306A;
extern char*s115_840703310A;
extern char*s34_3085A;
extern char*s34_51843716A;
extern char*s112_1145546877A;
extern char*s394_1896547075A;
extern char*s469_1014770470A;
extern char*s108_3094A;
extern char*s597_1125599189A;
extern char*s30_546820847A;
extern char*s110_1663868A;
extern char*s35_89216A;
extern char*s623_138425A;
extern char*s790_15405A;
extern char*s467_384465A;
extern char*s101_1923039443A;
extern char*s619_1197879602A;
extern char*s33_1856946950A;
extern char*s33_39154229A;
extern char*s100_370754643A;
extern char*s100_188014584A;
extern char*s107_1066764899A;
extern char*s790_33875A;
extern char*s100_1502870799A;
extern char*s112_1737592965A;
extern char*s100_144939139A;
extern char*s100_1409701608A;
extern char*s619_1087364605A;
extern char*s100_1550836304A;
extern char*s345_1186844731A;
extern char*s419_1134247532A;
extern char*s371_30745830A;
extern char*s112_375072661A;
extern char*s734_849265556A;
extern char*s107_298390A;
extern char*s100_734506354A;
extern char*s108_721564652A;
extern char*s33_15448A;
extern char*s376_3147A;
extern char*s597_26975282A;
extern char*s483_10459847A;
extern char*s100_822318035A;
extern char*s112_756717624A;
extern char*s33_207673214A;
extern char*s632_1901947715A;
extern char*s597_26975293A;
extern char*s480_1329824754A;
extern char*s112_1811657197A;
extern char*s110_3169A;
extern char*s33_207673231A;
extern char*s614_3175A;
extern char*s35_2248290A;
extern char*s34_3175A;
extern char*s620_653639191A;
extern char*s115_938738041A;
extern char*s790_884381655A;
extern char*s621_3181A;
extern char*s597_156962A;
extern char*s685_46245A;
extern char*s101_1452518781A;
extern char*s107_689013605A;
extern char*s274_1389956963A;
extern char*s112_36460172A;
extern char*s33_7095298A;
extern char*s471_3196A;
extern char*s112_323348966A;
extern char*s112_2101369329A;
extern char*s33_280482649A;
extern char*s790_244523906A;
extern char*s790_3209A;
extern char*s620_802840A;
extern char*s620_1679626025A;
extern char*s597_3212A;
extern char*s480_2088401A;
extern char*s614_602573626A;
extern char*s339_97896378A;
extern char*s619_159025018A;
extern char*s108_9366A;
extern char*s100_1898638542A;
extern char*s100_1460213717A;
extern char*s101_92397395A;
extern char*s612_7224500A;
extern char*s620_15533A;
extern char*s100_1452100558A;
extern char*s100_850458948A;
extern char*s100_246399995A;
extern char*s33_421505A;
extern char*s363_336696676A;
extern char*s730_2068836731A;
extern char*s100_1389575653A;
extern char*s476_1088102843A;
extern char*s614_4179775A;
extern char*s115_2035830473A;
extern char*s100_638895319A;
extern char*s612_40427625A;
extern char*s329_770157670A;
extern char*s631_80501401A;
extern char*s409_835850355A;
extern char*s597_1610470399A;
extern char*s790_834589410A;
extern char*s597_46337A;
extern char*s274_1811847991A;
extern char*s112_660780608A;
extern char*s33_7704337A;
extern char*s112_15589A;
extern char*s620_1206509635A;
extern char*s108_3291A;
extern char*s108_1346168095A;
extern char*s112_46350A;
extern char*s33_33120277A;
extern char*s619_38305571A;
extern char*s108_3294A;
extern char*s107_1255397791A;
extern char*s112_616198177A;
extern char*s336_70962A;
extern char*s107_1928938448A;
extern char*s112_960414291A;
extern char*s34_1072344038A;
extern char*s100_1725672511A;
extern char*s112_2115332211A;
extern char*s120_287218105A;
extern char*s107_1896793334A;
extern char*s100_2008366323A;
extern char*s620_83277A;
extern char*s277_1897894366A;
extern char*s470_1810101146A;
extern char*s108_3320A;
extern char*s400_276773717A;
extern char*s620_104084395A;
extern char*s559_13424808A;
extern char*s612_15629A;
extern char*s339_83290A;
extern char*s470_34086A;
extern char*s621_105695965A;
extern char*s633_58505493A;
extern char*s100_147793411A;
extern char*s34_1223234252A;
extern char*s452_221949868A;
extern char*s368_3337A;
extern char*s100_1297544492A;
extern char*s619_259021955A;
extern char*s565_1500847347A;
extern char*s108_150382995A;
extern char*s282_360205908A;
extern char*s371_1731781A;
extern char*s100_760340765A;
extern char*s734_1398420907A;
extern char*s621_129654140A;
extern char*s731_89481A;
extern char*s112_511465169A;
extern char*s363_240593583A;
extern char*s363_611824887A;
extern char*s112_3374A;
extern char*s476_192265186A;
extern char*s620_83345A;
extern char*s30_1102047298A;
extern char*s100_1109293176A;
extern char*s107_292482A;
extern char*s33_698215697A;
extern char*s107_763853019A;
extern char*s614_23451005A;
extern char*s112_3393A;
extern char*s405_739187517A;
extern char*s100_883016350A;
extern char*s33_89510A;
extern char*s33_1297876698A;
extern char*s112_42279221A;
extern char*s100_1390190909A;
extern char*s614_2024156039A;
extern char*s621_1062582514A;
extern char*s274_1977886A;
extern char*s34_3415A;
extern char*s660_22122412A;
extern char*s110_15721A;
extern char*s33_3421A;
extern char*s112_5164112A;
extern char*s620_1338608648A;
extern char*s112_3430A;
extern char*s100_2053250287A;
extern char*s614_169510A;
extern char*s112_1855175789A;
extern char*s108_759424351A;
extern char*s100_2060176323A;
extern char*s471_83406A;
extern char*s33_15751A;
extern char*s104_1449185201A;
extern char*s112_2123070311A;
extern char*s790_1242450095A;
extern char*s100_239621812A;
extern char*s112_3457A;
extern char*s280_1534075159A;
extern char*s397_362752532A;
extern char*s343_1742784741A;
extern char*s363_1485100899A;
extern char*s33_3460A;
extern char*s112_1203674198A;
extern char*s108_1067454155A;
extern char*s790_46525A;
extern char*s33_3472A;
extern char*s108_270309168A;
extern char*s33_3474A;
extern char*s112_3475A;
extern char*s112_2038260346A;
extern char*s976_10220290A;
extern char*s612_3485A;
extern char*s108_592781506A;
extern char*s620_1821634438A;
extern char*s609_22854451A;
extern char*s112_120095614A;
extern char*s33_1418282620A;
extern char*s597_20240284A;
extern char*s110_3494A;
extern char*s112_325655889A;
extern char*s471_3496A;
extern char*s368_1317154036A;
extern char*s401_176211197A;
extern char*s33_3501A;
extern char*s112_1572014572A;
extern char*s363_1626899946A;
extern char*s100_46597328A;
extern char*s100_1631593164A;
extern char*s790_1973244310A;
extern char*s790_1173325215A;
extern char*s117_253892190A;
extern char*s791_27492334A;
extern char*s478_1387816739A;
extern char*s791_136857117A;
extern char*s596_1199805276A;
extern char*s401_256961544A;
extern char*s115_1129671576A;
extern char*s89_3520A;
extern char*s108_15828A;
extern char*s790_1058430701A;
extern char*s112_1728206941A;
extern char*s33_15831A;
extern char*s452_1606367935A;
extern char*s33_1947246A;
extern char*s29_1767481079A;
extern char*s107_1225577982A;
extern char*s100_1522646678A;
extern char*s33_1947251A;
extern char*s34_77350A;
extern char*s100_1931146896A;
extern char*s432_1379248421A;
extern char*s100_201048978A;
extern char*s776_789213750A;
extern char*s791_692716864A;
extern char*s100_1582009998A;
extern char*s623_646768902A;
extern char*s100_1167481808A;
extern char*s682_1499315956A;
extern char*s89_1462938943A;
extern char*s557_3557A;
extern char*s112_1965730A;
extern char*s101_176469602A;
extern char*s274_2100317873A;
extern char*s631_936093505A;
extern char*s732_858562A;
extern char*s612_23186700A;
extern char*s621_28273584A;
extern char*s112_357794960A;
extern char*s100_161325869A;
extern char*s620_304601115A;
extern char*s34_3595A;
extern char*s470_852437A;
extern char*s112_77412A;
extern char*s34_3601A;
extern char*s95_1229059519A;
extern char*s112_726227573A;
extern char*s112_434116584A;
extern char*s619_15915A;
extern char*s100_1061217192A;
extern char*s619_1193180751A;
extern char*s93_1554312113A;
extern char*s33_279523519A;
extern char*s274_551231644A;
extern char*s95_620670284A;
extern char*s112_1065652086A;
extern char*s619_1549077634A;
extern char*s614_206626A;
extern char*s34_3645A;
extern char*s622_54686040A;
extern char*s30_1009954795A;
extern char*s112_1723513855A;
extern char*s34_89771A;
extern char*s107_2106290588A;
extern char*s100_1522646803A;
extern char*s33_577213499A;
extern char*s597_1115628985A;
extern char*s100_375534514A;
extern char*s33_3669A;
extern char*s632_1750246116A;
extern char*s596_1199620901A;
extern char*s33_911175911A;
extern char*s614_1631421108A;
extern char*s976_28287A;
extern char*s274_261396584A;
extern char*s33_169371474A;
extern char*s282_1539722017A;
extern char*s34_16001A;
extern char*s112_395316170A;
extern char*s33_1947419A;
extern char*s112_1565125654A;
extern char*s405_581709925A;
extern char*s449_1087076085A;
extern char*s619_89821A;
extern char*s112_1773201687A;
extern char*s95_1914699291A;
extern char*s115_429361964A;
extern char*s100_1453066751A;
extern char*s112_1059359695A;
extern char*s112_56845112A;
extern char*s418_1288915017A;
extern char*s400_1469170081A;
extern char*s795_1635136368A;
extern char*s34_937397683A;
extern char*s336_1524252299A;
extern char*s329_560316788A;
extern char*s33_2218105A;
extern char*s108_89862A;
extern char*s282_411001267A;
extern char*s401_1933023161A;
extern char*s399_1140411454A;
extern char*s33_203589551A;
extern char*s620_9905A;
extern char*s620_34510A;
extern char*s614_3760A;
extern char*s95_510352234A;
extern char*s394_1128496981A;
extern char*s100_407741255A;
extern char*s112_22971612A;
extern char*s731_560556710A;
extern char*s400_944882A;
extern char*s620_437573617A;
extern char*s112_1316373138A;
extern char*s620_2030510390A;
extern char*s410_1931700734A;
extern char*s672_638047023A;
extern char*s274_1737556726A;
extern char*s33_275488632A;
extern char*s274_2044479327A;
extern char*s35_77608A;
extern char*s620_9980719A;
extern char*s121_113009969A;
extern char*s112_122027336A;
extern char*s34_2593373A;
extern char*s461_907165587A;
extern char*s624_2187411A;
extern char*s976_1760616840A;
extern char*s274_1799491166A;
extern char*s429_892969089A;
extern char*s107_1194472660A;
extern char*s100_1943393816A;
extern char*s470_9808515A;
extern char*s776_65332A;
extern char*s597_2187432A;
extern char*s732_16139A;
extern char*s660_1864907075A;
extern char*s101_372047073A;
extern char*s33_440571A;
extern char*s100_2082787810A;
extern char*s107_388205767A;
extern char*s33_1604522960A;
extern char*s284_2064444A;
extern char*s33_2187464A;
extern char*s112_697705640A;
extern char*s282_188525860A;
extern char*s34_49076540A;
extern char*s272_1587749191A;
extern char*s108_143937264A;
extern char*s274_452889A;
extern char*s112_1450791030A;
extern char*s792_1411018665A;
extern char*s419_2134616155A;
extern char*s397_333554149A;
extern char*s112_397592212A;
extern char*s35_16177A;
extern char*s397_461679483A;
extern char*s33_2187483A;
extern char*s565_11241768A;
extern char*s34_59251A;
extern char*s284_1224218969A;
extern char*s790_54686284A;
extern char*s284_1750778A;
extern char*s102_745978733A;
extern char*s790_384078512A;
extern char*s660_191115496A;
extern char*s112_522691310A;
extern char*s106_1442714837A;
extern char*s108_1056930268A;
extern char*s621_2187545A;
extern char*s100_1687580001A;
extern char*s100_1301660112A;
extern char*s112_1136118256A;
extern char*s466_779913846A;
extern char*s367_389128515A;
extern char*s633_7440512A;
extern char*s620_77767A;
extern char*s112_2060090728A;
extern char*s274_641030424A;
extern char*s620_77773A;
extern char*s34_16264A;
extern char*s34_9790205A;
extern char*s564_1476287022A;
extern char*s112_984785217A;
extern char*s100_99041221A;
extern char*s612_7225250A;
extern char*s612_2187584A;
extern char*s612_2187585A;
extern char*s34_265093627A;
extern char*s112_1234811086A;
extern char*s399_435568604A;
extern char*s32_635943583A;
extern char*s101_175744216A;
extern char*s112_700572143A;
extern char*s33_1223936132A;
extern char*s612_40428375A;
extern char*s329_1207039342A;
extern char*s400_511502716A;
extern char*s33_37186806A;
extern char*s795_1847764413A;
extern char*s597_2187619A;
extern char*s614_809795A;
extern char*s368_4488096A;
extern char*s597_208313786A;
extern char*s101_175744241A;
extern char*s33_77832A;
extern char*s274_1667312535A;
extern char*s274_90141A;
extern char*s388_1814961148A;
extern char*s452_161769183A;
extern char*s365_432936020A;
extern char*s112_889346373A;
extern char*s112_4980205A;
extern char*s100_872019014A;
extern char*s115_7612837A;
extern char*s329_41769343A;
extern char*s274_1984169029A;
extern char*s100_1476889913A;
extern char*s112_2039472678A;
extern char*s559_26108906A;
extern char*s33_65574A;
extern char*s112_136593176A;
extern char*s33_197002151A;
extern char*s614_440120430A;
extern char*s112_533301931A;
extern char*s621_388821092A;
extern char*s100_1160088831A;
extern char*s100_902126A;
extern char*s614_2089246593A;
extern char*s620_234855416A;
extern char*s790_2051940780A;
extern char*s33_550709268A;
extern char*s112_253935823A;
extern char*s95_1468715266A;
extern char*s33_197002168A;
extern char*s100_732932648A;
extern char*s597_657822788A;
extern char*s614_2353775A;
extern char*s101_1836169859A;
extern char*s34_434665A;
extern char*s101_175744316A;
extern char*s410_626532654A;
extern char*s33_197002174A;
extern char*s470_397949195A;
extern char*s396_1543474532A;
extern char*s112_1099040180A;
extern char*s274_1805205737A;
extern char*s33_573080478A;
extern char*s397_2089449608A;
extern char*s734_1139569132A;
extern char*s108_1832417772A;
extern char*s621_84085A;
extern char*s100_1732402521A;
extern char*s788_742356016A;
extern char*s614_47187A;
extern char*s593_1152812249A;
extern char*s115_1248054333A;
extern char*s33_53339A;
extern char*s30_1335263213A;
extern char*s619_1085305030A;
extern char*s282_838840612A;
extern char*s106_1616517694A;
extern char*s564_1476281050A;
extern char*s564_742356033A;
extern char*s33_49076823A;
extern char*s112_1858528797A;
extern char*s597_1949908058A;
extern char*s112_10940631A;
extern char*s107_218672210A;
extern char*s429_397660162A;
extern char*s30_375350487A;
extern char*s108_1361085152A;
extern char*s619_1403828457A;
extern char*s474_1610077639A;
extern char*s112_16487A;
extern char*s339_731327330A;
extern char*s100_398318341A;
extern char*s101_595894613A;
extern char*s731_2027238465A;
extern char*s100_1174611449A;
extern char*s34_78002A;
extern char*s363_165601417A;
extern char*s734_1927020241A;
extern char*s336_1246984134A;
extern char*s614_16510A;
extern char*s33_1202672333A;
extern char*s100_897447412A;
extern char*s108_19761224A;
extern char*s112_1201497496A;
extern char*s795_1959331451A;
extern char*s790_1990989A;
extern char*s112_5367889A;
extern char*s100_586311386A;
extern char*s597_422487A;
extern char*s112_47278A;
extern char*s100_1093012317A;
extern char*s623_41131A;
extern char*s100_1437345301A;
extern char*s976_2072196164A;
extern char*s33_1744612358A;
extern char*s443_1118729658A;
extern char*s112_2096892436A;
extern char*s623_1659544035A;
extern char*s100_4235A;
extern char*s107_1610926534A;
extern char*s100_1154110220A;
extern char*s273_956361723A;
extern char*s112_1110850242A;
extern char*s112_1377391529A;
extern char*s620_884813300A;
extern char*s620_4881995A;
extern char*s112_1197714671A;
extern char*s614_840791A;
extern char*s101_543076045A;
extern char*s619_280766651A;
extern char*s102_42698349A;
extern char*s685_928596125A;
extern char*s112_246893097A;
extern char*s112_1911279888A;
extern char*s112_163909964A;
extern char*s394_332834879A;
extern char*s368_78082A;
extern char*s108_1223801083A;
extern char*s401_1907958363A;
extern char*s476_94643563A;
extern char*s620_17743770A;
extern char*s112_1964848975A;
extern char*s100_688657949A;
extern char*s790_1772045883A;
extern char*s34_90408A;
extern char*s790_1314337673A;
extern char*s101_1242149539A;
extern char*s33_7748406A;
extern char*s518_840796792A;
extern char*s329_198146473A;
extern char*s100_126038302A;
extern char*s33_16616A;
extern char*s108_2121681051A;
extern char*s612_36122993A;
extern char*s400_1718483009A;
extern char*s34_16630A;
extern char*s100_494839979A;
extern char*s102_1784452489A;
extern char*s34_10208843A;
extern char*s34_56255230A;
extern char*s108_725963810A;
extern char*s33_16639A;
extern char*s33_78150A;
extern char*s443_1888871872A;
extern char*s100_2016523575A;
extern char*s34_1730514379A;
extern char*s492_1879799154A;
extern char*s614_1553642381A;
extern char*s644_1166590709A;
extern char*s790_1396798042A;
extern char*s33_705019679A;
extern char*s33_1339128A;
extern char*s33_451899881A;
extern char*s110_59731A;
extern char*s530_2014364610A;
extern char*s108_39204698A;
extern char*s108_61342149A;
extern char*s469_1979303915A;
extern char*s100_768172015A;
extern char*s620_17743865A;
extern char*s339_416499A;
extern char*s339_416500A;
extern char*s101_1226144723A;
extern char*s363_61858840A;
extern char*s33_16686A;
extern char*s790_1279738389A;
extern char*s357_881547256A;
extern char*s35_385751A;
extern char*s791_666336072A;
extern char*s791_41300A;
extern char*s684_355003A;
extern char*s732_78209A;
extern char*s112_561301605A;
extern char*s112_988839165A;
extern char*s371_31214580A;
extern char*s620_106047655A;
extern char*s274_2085574777A;
extern char*s108_84381A;
extern char*s274_416541A;
extern char*s614_4425A;
extern char*s596_1511378937A;
extern char*s33_90544A;
extern char*s112_280139425A;
extern char*s394_29037A;
extern char*s734_888288799A;
extern char*s34_427898753A;
extern char*s614_847125A;
extern char*s620_111269879A;
extern char*s367_1881300092A;
extern char*s336_2084824380A;
extern char*s273_988261007A;
extern char*s112_1240218271A;
extern char*s101_175744666A;
extern char*s686_1085938891A;
extern char*s549_32450971A;
extern char*s612_920950A;
extern char*s34_78263A;
extern char*s614_958274895A;
extern char*s621_804085A;
extern char*s112_561947515A;
extern char*s34_16761A;
extern char*s730_786403659A;
extern char*s100_1559455194A;
extern char*s112_21391495A;
extern char*s101_175744691A;
extern char*s100_1421961899A;
extern char*s350_1479430694A;
extern char*s429_597973944A;
extern char*s112_16782A;
extern char*s34_84443A;
extern char*s678_161074567A;
extern char*s405_182862A;
extern char*s107_1914558593A;
extern char*s107_1450022771A;
extern char*s597_430519127A;
extern char*s100_611217054A;
extern char*s394_138555764A;
extern char*s108_1615398571A;
extern char*s756_1400894751A;
extern char*s104_1880881887A;
extern char*s734_263008962A;
extern char*s33_839855894A;
extern char*s100_1075925125A;
extern char*s100_488830629A;
extern char*s336_2050169721A;
extern char*s620_1174230416A;
extern char*s107_1661328107A;
extern char*s33_2126626A;
extern char*s112_179423058A;
extern char*s107_42846255A;
extern char*s394_1816745449A;
extern char*s469_56907446A;
extern char*s619_614557109A;
extern char*s469_10559665A;
extern char*s564_1208522276A;
extern char*s619_1215177661A;
extern char*s115_576322499A;
extern char*s400_1592935176A;
extern char*s33_324411A;
extern char*s33_1739790308A;
extern char*s95_15142174A;
extern char*s112_1483072174A;
extern char*s620_195246A;
extern char*s565_1502207936A;
extern char*s688_1345295929A;
extern char*s108_149455415A;
extern char*s620_1605175681A;
extern char*s107_22271191A;
extern char*s452_375578482A;
extern char*s597_948421114A;
extern char*s597_35330A;
extern char*s115_784841421A;
extern char*s100_107634778A;
extern char*s400_350193314A;
extern char*s621_269141588A;
extern char*s102_1043946153A;
extern char*s108_1515266530A;
extern char*s112_1065942137A;
extern char*s100_104977558A;
extern char*s121_1662662954A;
extern char*s397_401707956A;
extern char*s470_16902A;
extern char*s419_1878889060A;
extern char*s112_18131599A;
extern char*s549_1185594A;
extern char*s790_784300160A;
extern char*s112_355630820A;
extern char*s33_243411981A;
extern char*s33_1419919903A;
extern char*s100_2102385657A;
extern char*s400_211605167A;
extern char*s100_762747069A;
extern char*s108_466551816A;
extern char*s108_2009849A;
extern char*s112_1743948446A;
extern char*s619_16927A;
extern char*s792_1682659883A;
extern char*s790_1007239A;
extern char*s100_2028592127A;
extern char*s95_1838187926A;
extern char*s470_1163823042A;
extern char*s34_16942A;
extern char*s731_989731302A;
extern char*s394_897982986A;
extern char*s107_1783880762A;
extern char*s34_10049231A;
extern char*s614_206419907A;
extern char*s790_931143030A;
extern char*s609_810433A;
extern char*s277_1973946666A;
extern char*s100_1062177790A;
extern char*s976_1994165009A;
extern char*s597_46733806A;
extern char*s277_1838870713A;
extern char*s614_1008067448A;
extern char*s107_485115581A;
extern char*s466_2101296982A;
extern char*s790_90782A;
extern char*s976_1508488213A;
extern char*s614_20481355A;
extern char*s627_90792A;
extern char*s34_78490A;
extern char*s35_78495A;
extern char*s108_146157A;
extern char*s619_1428771266A;
extern char*s339_931579788A;
extern char*s976_1942675017A;
extern char*s620_252669317A;
extern char*s33_41849945A;
extern char*s121_27561173A;
extern char*s112_1533928773A;
extern char*s795_2007377394A;
extern char*s101_1658160521A;
extern char*s620_933501A;
extern char*s471_1136691048A;
extern char*s112_1170250908A;
extern char*s368_35157672A;
extern char*s100_1436398529A;
extern char*s33_447584A;
extern char*s100_1414519430A;
extern char*s112_1404148845A;
extern char*s112_958964069A;
extern char*s623_90405963A;
extern char*s478_439056951A;
extern char*s345_767649523A;
extern char*s33_1554777A;
extern char*s17_1216703285A;
extern char*s450_22861847A;
extern char*s112_530940601A;
extern char*s112_724500276A;
extern char*s474_1723490337A;
extern char*s112_2109816196A;
extern char*s33_591417242A;
extern char*s620_10895A;
extern char*s100_2096474678A;
extern char*s976_1439959996A;
extern char*s363_1094507536A;
extern char*s620_10430693A;
extern char*s107_445497083A;
extern char*s790_176986A;
extern char*s112_997623147A;
extern char*s597_1623721137A;
extern char*s112_2055072316A;
extern char*s108_631091213A;
extern char*s33_1735712398A;
extern char*s790_73472312A;
extern char*s95_625881326A;
extern char*s34_78591A;
extern char*s614_379993A;
extern char*s400_163270777A;
extern char*s371_561523426A;
extern char*s401_1490189105A;
extern char*s336_1060258809A;
extern char*s274_2108992007A;
extern char*s33_1192911276A;
extern char*s100_631447998A;
extern char*s34_10990481A;
extern char*s620_1514442508A;
extern char*s100_1632732392A;
extern char*s33_167970159A;
extern char*s112_1253959973A;
extern char*s564_565060278A;
extern char*s620_78629A;
extern char*s107_1605895597A;
extern char*s102_126291003A;
extern char*s274_1658492806A;
extern char*s33_48856070A;
extern char*s33_1622700141A;
extern char*s597_1694771411A;
extern char*s112_78646A;
extern char*s280_722230651A;
extern char*s597_404651A;
extern char*s612_8087250A;
extern char*s614_119389596A;
extern char*s100_1453916708A;
extern char*s100_844703215A;
extern char*s112_2237652A;
extern char*s30_1364794873A;
extern char*s401_1256137461A;
extern char*s633_1465905014A;
extern char*s102_618869258A;
extern char*s29_1852009437A;
extern char*s101_174945438A;
extern char*s35_1777434714A;
extern char*s100_501268295A;
extern char*s614_380065A;
extern char*s596_605650769A;
extern char*s107_313299890A;
extern char*s100_1950357785A;
extern char*s100_2077708091A;
extern char*s662_1760457965A;
extern char*s112_850522083A;
extern char*s108_447734A;
extern char*s112_824324978A;
extern char*s350_793028699A;
extern char*s405_2007408328A;
extern char*s34_17176A;
extern char*s397_1090404950A;
extern char*s329_1492212881A;
extern char*s681_78239462A;
extern char*s100_2141291014A;
extern char*s633_1548937422A;
extern char*s121_210141519A;
extern char*s34_2065491A;
extern char*s112_27063164A;
extern char*s621_1719326284A;
extern char*s121_349372A;
extern char*s112_106460275A;
extern char*s33_84881A;
extern char*s34_17221A;
extern char*s112_1917882A;
extern char*s394_1424594977A;
extern char*s792_576790349A;
extern char*s108_129391217A;
extern char*s33_2038667775A;
extern char*s730_1762204931A;
extern char*s790_1497878015A;
extern char*s776_1854402277A;
extern char*s100_2127445170A;
extern char*s33_50246319A;
extern char*s274_926093361A;
extern char*s614_1898591066A;
extern char*s112_545118879A;
extern char*s614_380168A;
extern char*s100_23410A;
extern char*s112_508495830A;
extern char*s790_77562923A;
extern char*s452_1790874766A;
extern char*s363_7238542A;
extern char*s100_469031018A;
extern char*s619_453998A;
extern char*s620_1671077900A;
extern char*s614_1952787551A;
extern char*s790_1739163321A;
extern char*s33_447851A;
extern char*s277_689575137A;
extern char*s476_29585A;
extern char*s565_100561530A;
extern char*s33_2098363273A;
extern char*s107_1004555549A;
extern char*s33_349117293A;
extern char*s30_1812938425A;
extern char*s101_1861857328A;
extern char*s115_1816788953A;
extern char*s633_1541882313A;
extern char*s100_928941315A;
extern char*s107_1836299930A;
extern char*s121_195766720A;
extern char*s100_1680421289A;
extern char*s400_165614527A;
extern char*s33_84969A;
extern char*s597_2142146116A;
extern char*s614_380218A;
extern char*s400_1057872442A;
extern char*s620_204519611A;
extern char*s976_838816886A;
extern char*s115_1998329594A;
extern char*s100_75828399A;
extern char*s112_701821825A;
extern char*s100_1204389280A;
extern char*s429_1628100917A;
extern char*s101_1578831409A;
extern char*s100_1307652273A;
extern char*s100_1690004585A;
extern char*s790_486352305A;
extern char*s419_1627141371A;
extern char*s35_914215870A;
extern char*s108_1588150185A;
extern char*s108_91157A;
extern char*s776_1932458562A;
extern char*s95_8198176A;
extern char*s620_60405A;
extern char*s452_1875641781A;
extern char*s790_1831440704A;
extern char*s401_29662A;
extern char*s730_1309017823A;
extern char*s33_1487451A;
extern char*s274_1453633985A;
extern char*s112_495363549A;
extern char*s619_1240206596A;
extern char*s100_1545228536A;
extern char*s394_277033810A;
extern char*s100_973007162A;
extern char*s108_561720547A;
extern char*s357_197895058A;
extern char*s107_1889118664A;
extern char*s597_1387812168A;
extern char*s379_668815628A;
extern char*s100_2108887750A;
extern char*s33_240810599A;
extern char*s112_2022630A;
extern char*s110_11253A;
extern char*s33_240810604A;
extern char*s614_2022635A;
extern char*s116_128358027A;
extern char*s34_392625A;
extern char*s597_4999725A;
extern char*s100_199494346A;
extern char*s597_706329A;
extern char*s788_1777096676A;
extern char*s620_525503499A;
extern char*s660_143852403A;
extern char*s633_831146693A;
extern char*s33_17422A;
extern char*s33_2054549840A;
extern char*s100_1912621670A;
extern char*s632_265537649A;
extern char*s614_380343A;
extern char*s660_167300030A;
extern char*s619_1384921237A;
extern char*s790_110557057A;
extern char*s100_922446006A;
extern char*s100_66884963A;
extern char*s112_1581747096A;
extern char*s100_134219969A;
extern char*s30_53561911A;
extern char*s112_471553120A;
extern char*s619_1374304640A;
extern char*s614_504830035A;
extern char*s378_128333478A;
extern char*s108_262628264A;
extern char*s614_1888091524A;
extern char*s470_1809088081A;
extern char*s620_114321512A;
extern char*s100_1701980726A;
extern char*s33_337331A;
extern char*s112_17480A;
extern char*s112_1938991062A;
extern char*s95_1056980719A;
extern char*s112_1680956616A;
extern char*s100_2060540980A;
extern char*s623_5313505A;
extern char*s35_17498A;
extern char*s121_1293738877A;
extern char*s33_1483884743A;
extern char*s564_985967445A;
extern char*s621_2102695A;
extern char*s112_17507A;
extern char*s633_139854341A;
extern char*s100_2176510A;
extern char*s100_552734069A;
extern char*s107_1556970935A;
extern char*s621_35966A;
extern char*s623_5313530A;
extern char*s621_1416678934A;
extern char*s379_492964813A;
extern char*s101_1538234998A;
extern char*s34_306165094A;
extern char*s107_921818688A;
extern char*s400_1505530135A;
extern char*s620_46980416A;
extern char*s790_1843146228A;
extern char*s115_870131842A;
extern char*s112_2072467813A;
extern char*s400_177461A;
extern char*s107_572614135A;
extern char*s280_867234734A;
extern char*s790_97510A;
extern char*s95_445214625A;
extern char*s274_929353692A;
extern char*s518_637371887A;
extern char*s112_1130602126A;
extern char*s597_558682149A;
extern char*s549_11429A;
extern char*s621_23692781A;
extern char*s107_170061979A;
extern char*s619_398948A;
extern char*s597_5284A;
extern char*s619_1231257120A;
extern char*s100_755120513A;
extern char*s509_890319497A;
extern char*s100_2087550139A;
extern char*s597_21632225A;
extern char*s790_775406525A;
extern char*s475_1370872538A;
extern char*s620_520373770A;
extern char*s35_10714216A;
extern char*s628_448205A;
extern char*s620_1836091144A;
extern char*s118_300594A;
extern char*s33_1740332382A;
extern char*s107_1379717706A;
extern char*s33_1644425991A;
extern char*s633_1677586033A;
extern char*s597_4434071A;
extern char*s614_4766225A;
extern char*s405_1119905623A;
extern char*s34_75797981A;
extern char*s619_49680837A;
extern char*s101_744085684A;
extern char*s112_1173628471A;
extern char*s557_146251545A;
extern char*s33_267647687A;
extern char*s471_380590A;
extern char*s397_988692517A;
extern char*s377_5382A;
extern char*s633_2025498932A;
extern char*s464_789350917A;
extern char*s100_96053257A;
extern char*s274_17696A;
extern char*s100_1066804080A;
extern char*s100_1062283098A;
extern char*s107_109671582A;
extern char*s284_1831619428A;
extern char*s327_1262756502A;
extern char*s112_444175272A;
extern char*s34_17715A;
extern char*s274_880804011A;
extern char*s623_300665A;
extern char*s336_1001314405A;
extern char*s101_2004339522A;
extern char*s280_92467250A;
extern char*s284_878860A;
extern char*s620_537910373A;
extern char*s100_112999293A;
extern char*s619_30034A;
extern char*s112_1968768303A;
extern char*s100_783329131A;
extern char*s597_180709512A;
extern char*s115_1605047378A;
extern char*s100_1984637890A;
extern char*s112_1435285930A;
extern char*s100_79251A;
extern char*s100_756929053A;
extern char*s100_142936234A;
extern char*s633_21306364A;
extern char*s112_738771309A;
extern char*s107_295542551A;
extern char*s597_386819A;
extern char*s367_22401251A;
extern char*s101_348041349A;
extern char*s112_401124480A;
extern char*s419_1837585965A;
extern char*s597_1642168697A;
extern char*s378_305790140A;
extern char*s597_242108838A;
extern char*s597_56760755A;
extern char*s597_60837A;
extern char*s597_1367040625A;
extern char*s33_1979951A;
extern char*s479_1965077754A;
extern char*s112_471707221A;
extern char*s458_1809998749A;
extern char*s110_17794A;
extern char*s33_386854A;
extern char*s112_1844536619A;
extern char*s596_1151663379A;
extern char*s100_776600004A;
extern char*s788_1126647264A;
extern char*s376_2014931627A;
extern char*s100_150329797A;
extern char*s112_802495724A;
extern char*s121_1723571071A;
extern char*s112_719604853A;
extern char*s110_39617954A;
extern char*s108_25704393A;
extern char*s559_5515A;
extern char*s100_397329363A;
extern char*s112_1881374985A;
extern char*s620_134878499A;
extern char*s112_713312393A;
extern char*s100_676769302A;
extern char*s33_79341A;
extern char*s597_882065083A;
extern char*s112_862271166A;
extern char*s284_60894A;
extern char*s33_48672249A;
extern char*s112_23988287A;
extern char*s112_1682814572A;
extern char*s33_572288431A;
extern char*s107_1019367716A;
extern char*s33_572288437A;
extern char*s619_189437896A;
extern char*s400_530141799A;
extern char*s597_560761477A;
extern char*s100_202933204A;
extern char*s33_572288454A;
extern char*s112_1672511676A;
extern char*s100_120546715A;
extern char*s107_479236135A;
extern char*s596_5580A;
extern char*s107_1865554673A;
extern char*s100_922212712A;
extern char*s107_1162901343A;
extern char*s597_674382779A;
extern char*s107_1546692995A;
extern char*s476_1411247976A;
extern char*s112_4692662A;
extern char*s493_2068414678A;
extern char*s614_312808564A;
extern char*s112_1994596535A;
extern char*s626_17916A;
extern char*s107_5615A;
extern char*s112_4631170A;
extern char*s112_1413407004A;
extern char*s33_1680926299A;
extern char*s34_436196A;
extern char*s476_1142240176A;
extern char*s776_602797481A;
extern char*s108_120239233A;
extern char*s790_28263330A;
extern char*s33_506823435A;
extern char*s35_10554609A;
extern char*s274_816126476A;
extern char*s100_1869854287A;
extern char*s100_2009918711A;
extern char*s684_861846863A;
extern char*s33_39002989A;
extern char*s532_456083848A;
extern char*s29_85614A;
extern char*s614_521905705A;
extern char*s790_291421585A;
extern char*s112_1586354711A;
extern char*s452_865125357A;
extern char*s100_971408488A;
extern char*s107_866669263A;
extern char*s470_1961687A;
extern char*s117_51895507A;
extern char*s121_1635864124A;
extern char*s790_1815688614A;
extern char*s100_210812758A;
extern char*s394_1250079569A;
extern char*s633_1722095007A;
extern char*s419_1333985363A;
extern char*s112_2041682A;
extern char*s345_786054293A;
extern char*s597_988243818A;
extern char*s33_1937220099A;
extern char*s597_5720A;
extern char*s620_829308144A;
extern char*s790_598811726A;
extern char*s734_1613492996A;
extern char*s100_18036A;
extern char*s33_247239028A;
extern char*s621_1942608409A;
extern char*s619_41125176A;
extern char*s791_1506490209A;
extern char*s612_1406782500A;
extern char*s790_69352117A;
extern char*s29_425790270A;
extern char*s112_2103819988A;
extern char*s397_1816888147A;
extern char*s100_1694969179A;
extern char*s112_1836282258A;
extern char*s612_1188262106A;
extern char*s100_825716016A;
extern char*s33_1549680A;
extern char*s788_130382376A;
extern char*s469_1848584263A;
extern char*s336_1642968637A;
extern char*s790_1040644265A;
extern char*s112_1042003640A;
extern char*s367_5787A;
extern char*s34_18090A;
extern char*s450_114137597A;
extern char*s621_946895A;
extern char*s394_1721307786A;
extern char*s33_1549697A;
extern char*s112_1352413868A;
extern char*s593_11952A;
extern char*s33_1549703A;
extern char*s107_98784712A;
extern char*s273_1968202785A;
extern char*s33_18110A;
extern char*s112_1063704391A;
extern char*s597_1566831588A;
extern char*s112_1339521386A;
extern char*s274_374877A;
extern char*s790_2021999449A;
extern char*s633_1849347035A;
extern char*s112_1460025642A;
extern char*s790_484169497A;
extern char*s476_14429929A;
extern char*s121_809686569A;
extern char*s614_6575105A;
extern char*s110_18144A;
extern char*s100_18150A;
extern char*s115_290966604A;
extern char*s621_2122389958A;
extern char*s112_1624663341A;
extern char*s100_1320619413A;
extern char*s100_442256615A;
extern char*s612_112304676A;
extern char*s453_2015374870A;
extern char*s597_472574902A;
extern char*s274_1325140408A;
extern char*s790_171955A;
extern char*s35_267875778A;
extern char*s471_18186A;
extern char*s790_1985327250A;
extern char*s790_1196941282A;
extern char*s33_1176378494A;
extern char*s549_1096544670A;
extern char*s121_203714719A;
extern char*s33_55924644A;
extern char*s788_2097247A;
extern char*s119_2120987577A;
extern char*s394_5912A;
extern char*s280_1153312264A;
extern char*s112_163413385A;
extern char*s790_1800342110A;
extern char*s597_1992825354A;
extern char*s620_854330615A;
extern char*s976_1067567332A;
extern char*s33_1673348567A;
extern char*s107_5873980A;
extern char*s628_399591A;
extern char*s95_1539816514A;
extern char*s121_44975894A;
extern char*s34_56927287A;
extern char*s620_1709245815A;
extern char*s620_4680700A;
extern char*s100_518055462A;
extern char*s476_84293096A;
extern char*s33_1831158645A;
extern char*s100_732257893A;
extern char*s614_352968782A;
extern char*s112_49152444A;
extern char*s368_18257A;
extern char*s401_902517583A;
extern char*s631_496139469A;
extern char*s284_927785894A;
extern char*s329_673829558A;
extern char*s357_1664909434A;
extern char*s452_529299514A;
extern char*s100_1387339410A;
extern char*s100_445504446A;
extern char*s107_1242126608A;
extern char*s35_10714862A;
extern char*s108_1494914262A;
extern char*s432_983618541A;
extern char*s452_827998241A;
extern char*s619_1869700848A;
extern char*s107_1568923104A;
extern char*s110_448859A;
extern char*s33_1553736287A;
extern char*s790_744114A;
extern char*s100_1575461624A;
extern char*s100_1181926797A;
extern char*s621_531809155A;
extern char*s112_8359055A;
extern char*s100_1978106088A;
extern char*s33_9712276A;
extern char*s619_172080A;
extern char*s623_705408837A;
extern char*s34_1168210079A;
extern char*s620_42916A;
extern char*s29_24284008A;
extern char*s619_249330648A;
extern char*s280_1145998825A;
extern char*s620_842552A;
extern char*s112_431043495A;
extern char*s112_490486762A;
extern char*s100_727903062A;
extern char*s108_165012750A;
extern char*s108_2075119688A;
extern char*s418_306215109A;
extern char*s112_1377208779A;
extern char*s620_153655A;
extern char*s107_212031001A;
extern char*s100_12184A;
extern char*s106_1152235958A;
extern char*s112_1160736641A;
extern char*s112_12188A;
extern char*s112_113036818A;
extern char*s112_12201A;
extern char*s100_34383990A;
extern char*s101_35386613A;
extern char*s447_498169402A;
extern char*s115_740900172A;
extern char*s100_1593742473A;
extern char*s100_2018315248A;
extern char*s112_1009317511A;
extern char*s100_124311631A;
extern char*s518_1359629264A;
extern char*s432_1920465143A;
extern char*s678_8777401A;
extern char*s112_1838958244A;
extern char*s29_1394769930A;
extern char*s100_1962710217A;
extern char*s790_365929075A;
extern char*s792_958639438A;
extern char*s790_680177517A;
extern char*s619_1328320695A;
extern char*s108_5578901A;
extern char*s329_176865800A;
extern char*s612_7227375A;
extern char*s100_431394186A;
extern char*s597_9589368A;
extern char*s35_388005040A;
extern char*s108_1319327951A;
extern char*s633_374042271A;
extern char*s107_3579844A;
extern char*s34_1747646688A;
extern char*s565_51582255A;
extern char*s121_141444A;
extern char*s101_432335312A;
extern char*s790_1265395998A;
extern char*s612_40430500A;
extern char*s274_1598804806A;
extern char*s102_356743A;
extern char*s112_209121A;
extern char*s100_1615234134A;
extern char*s597_338723264A;
extern char*s452_1573210512A;
extern char*s112_1790869799A;
extern char*s597_3912034A;
extern char*s657_1257368965A;
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
#define FSOC_SIZE 8192
#define RSOC_SIZE 32768
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
/*
   This file (SmartEiffel/sys/runtime/gc_lib.h) is automatically included
   when the Garbage Collector is used (default, unless option -no_gc has
   been selected).
*/

#define SE_GC_LIB 1

#define SE_GC_LOW_MEMORY_STRATEGY 0
#define SE_GC_HIGH_MEMORY_STRATEGY 1
#define SE_GC_DEFAULT_MEMORY_STRATEGY 2
extern int se_gc_strategy;


#define RSOH_UNMARKED 15253
#define RSOH_FREE 1
#define RSOH_MARKED 2


#define FSOH_UNMARKED ((void *) 1)
#define FSOH_MARKED   ((void *) 2)

/* To codify the state and the type of some Memory Chunk, we are
   using the following definitions :
*/
#define FSO_FREE_CHUNK  (-2)
#define RSO_FREE_CHUNK  (-1)
#define RSO_USED_CHUNK  ( 0)
#define FSO_STORE_CHUNK ( 1)
#define FSO_USED_CHUNK  ( 2)
#define FREE_CHUNK(x) ((x)<0)

/* Minimum size for a store area in a ReSizable Objects Chunk :
 */
#define RSOC_MIN_STORE 512

/* The default channel used to print -gc_info flag information :
*/
#define SE_GCINFO SE_ERR

extern int collector_counter; /* MEMORY.collector_counter */

typedef struct s_mch mch; /* Memory Chunk Header. */
typedef struct s_fsoc fsoc; /* Fixed Size Objects Chunk. */
typedef union u_rsoh rsoh; /* ReSizable Object Header. */
typedef struct s_fll_rsoh fll_rsoh;
typedef struct s_rsoc rsoc; /* ReSizable Objects Chunk. */
typedef struct s_na_env na_env; /* Native Array ENVironment. */


struct s_mch{
  unsigned int size; /* In number of bytes (actual argument of malloc).*/
  int state_type; /* One value in : RSO_USED_CHUNK,
                     FREE_CHUNK, FSO_STORE_CHUNK, FSO_USED_CHUNK */
  void(*amfp)(mch*,void*); /* Align Mark Function Pointer. */
  void(*swfp)(mch*); /* SWeep Function Pointer. */
};

struct s_fsoc{
  mch header; /* Common header for fsoc and rsoc. */
  fsoc* next; /* The next one when in free list (fsocfl). */
  int count_minus_one;
  double first_object;
};

typedef struct _rso_header rso_header;

struct _rso_header{
    unsigned int size;
    int magic_flag;     /* RSOH_MARKED when used,
			   RSOH_FREE when free,
			   else RSOH_UNMARKED */
};

typedef union u_fso_header fso_header;

union u_fso_header{
  void* flag;
  void* next;/* accurately typed as gcXX* in actual fso headers */
};

union u_rsoh{
  rso_header header;
  double padding;
};

struct s_fll_rsoh {
  rso_header rsoh_field;
  fll_rsoh* nextflol;
};

struct s_rsoc{
  mch header; /* Common header for fsoc and rsoc. */
  unsigned int isize; /* Initial size (at malloc time) to detect split chunks. */
  rsoc* next; /* Next one when in free list (rsocfl) or in na_env->chunk_list. */
  fll_rsoh*free_list_of_large; /* Intra. free list. */
  na_env*nae;
  rsoh first_header;
};

struct s_na_env{
  unsigned int store_left;
  rsoh* store;
  rsoc*store_chunk;
  rsoc*chunk_list; /*List of chunks of that type that have a non-null free_list_of_large*/
  void (*gc_mark)(T0*);
  int space_used;
};

extern void**stack_bottom;
extern mch**gcmt;
extern int gcmt_max;
extern int gcmt_used;
extern int gc_is_off;
extern fsoc* fsocfl;
extern unsigned int fsoc_count;
extern unsigned int rsoc_count;
extern void*gcmt_tail_addr;

void gc_sweep(void);
void gc_mark(void* p);
mch* gc_find_chunk(void* p);
int gc_stack_size(void);
int garbage_delayed(void);
void gc_update_ceils(void);
char*new_na(na_env*nae,unsigned int size);
unsigned int fsocfl_count(void);
unsigned int rsocfl_count(void);
void gc_dispose_before_exit(void);
void mark_stack_and_registers (void);
fsoc* gc_fsoc_get1(void);
fsoc* gc_fsoc_get2(void);

int gc_memory_used(void);
/*The generic se_agent0 definition:*/
struct _se_agent0{
Tid id;
Tid creation_mold_id;
void(*afp)(se_agent*);
void(*gc_mark_agent_mold)(se_agent*);
int(*eq)(se_agent*,se_agent*);
};
extern unsigned int fsoc_count_ceil;
extern unsigned int rsoc_count_ceil;
/*INTEGER_32*/T6 r2in_range(T2 C,T2 a1,T2 a2);
/*INTEGER_32*/T2 r2max(T2 C,T2 a1);
/*INTEGER_32*/T6 r2is_even(T2 C);
/*INTEGER_32*/T2 r2min(T2 C,T2 a1);
/*INTEGER_32*/T2 r2_ix_9292(T2 C,T2 a1);
/*INTEGER_32*/T0* r2to_string(T2 C);
/*INTEGER_32*/T2 r2_ix_4747(T2 C,T2 a1);
/*INTEGER_32*/T3 r2hexadecimal_digit(T2 C);
/*INTEGER_32*/T6 r2is_odd(T2 C);
/*INTEGER_32*/T6 r2bit_test(T2 C,T1 a1);
/*INTEGER_32*/void r2append_in(T2 C,T0* a1);
/*INTEGER_32*/T3 r2decimal_digit(T2 C);
/*INTEGER_32*/void r2to_hexadecimal_in(T2 C,T0* a1);
extern T0*oBC81string_buffer;
extern int fBC81string_buffer;
/*INTEGER_32*/T0* r2string_buffer(void);
/*INTEGER_8*/T1 r1min(T1 C,T1 a1);
/*INTEGER_8*/void r1to_octal_in(T1 C,T0* a1);
/*INTEGER_8*/T3 r1hexadecimal_digit(T1 C);
/*INTEGER_8*/T3 r1decimal_digit(T1 C);
/*CHARACTER*/T3 r3to_upper(T3 C);
/*CHARACTER*/T6 r3is_digit(T3 C);
/*CHARACTER*/T6 r3in_range(T3 C,T3 a1,T3 a2);
/*CHARACTER*/T1 r3value(T3 C);
/*CHARACTER*/T6 r3is_separator(T3 C);
/*CHARACTER*/T6 r3is_lower(T3 C);
/*CHARACTER*/T1 r3decimal_value(T3 C);
/*CHARACTER*/T1 r3hexadecimal_value(T3 C);
/*CHARACTER*/T3 r3to_lower(T3 C);
/*CHARACTER*/T6 r3is_hexadecimal_digit(T3 C);
/*CHARACTER*/T6 r3_ix_60(T3 C,T3 a1);
/*CHARACTER*/T6 r3same_as(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_letter(T3 C);
/*CHARACTER*/T6 r3_ix_6061(T3 C,T3 a1);
/*CHARACTER*/T6 r3is_upper(T3 C);
/*CHARACTER*/T6 r3_ix_6261(T3 C,T3 a1);
/*BOOLEAN*/T6 r6_ix_and(T6 C,T6 a1);
/*BOOLEAN*/T6 r6_ix_or(T6 C,T6 a1);
/*INTEGER_16*/T6 r10in_range(T10 C,T10 a1,T10 a2);
/*INTEGER_16*/T10 r10max(T10 C,T10 a1);
/*INTEGER_16*/T10 r10min(T10 C,T10 a1);
/*INTEGER_16*/T2 r10to_integer_32(T10 C);
/*INTEGER_16*/void r10append_in(T10 C,T0* a1);
/*INTEGER_16*/T3 r10decimal_digit(T10 C);
/*REAL_64*/void r5append_in_format(T5 C,T0* a1,T2 a2);
extern T9 oBC302sprintf_buffer;
/*INTEGER_64*/T6 r11in_range(T11 C,T11 a1,T11 a2);
/*INTEGER_64*/T6 r11fit_integer_8(T11 C);
/*INTEGER_64*/T0* r11to_number(T11 C);
/*INTEGER_64*/T2 r11high_32(T11 C);
/*INTEGER_64*/T11 r11_ix_9292(T11 C,T11 a1);
/*INTEGER_64*/T6 r11fit_integer_32(T11 C);
/*INTEGER_64*/T6 r11fit_integer_16(T11 C);
/*INTEGER_64*/T0* r11to_string(T11 C);
/*INTEGER_64*/T11 r11_ix_4747(T11 C,T11 a1);
/*INTEGER_64*/T6 r11is_odd(T11 C);
/*INTEGER_64*/void r11append_in(T11 C,T0* a1);
/*INTEGER_64*/T3 r11decimal_digit(T11 C);
/*INTEGER_64*/T11 r11_ix_94(T11 C,T11 a1);
/*INTEGER_64*/T0* r11string_buffer(void);
/*POINTER*/T8 r8_ix_43(T8 C,T2 a1);
/*POINTER*/T2 r8hash_code(T8 C);
/*POINTER*/void r8append_in(T8 C,T0* a1);
extern T0*oBC8string_buffer;
extern int fBC8string_buffer;
/*POINTER*/T0* r8string_buffer(void);
/*NATURAL_64*/T6 r16fit_natural_32(uint64_t C);
/*NATURAL_64*/T6 r16fit_natural_16(uint64_t C);
/*NATURAL_64*/T6 r16fit_natural_8(uint64_t C);
/*NATURAL_64*/void r16append_in(uint64_t C,T0* a1);
/*NATURAL_64*/T3 r16decimal_digit(uint64_t C);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_reverse_index_of(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T9 r9realloc(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9fast_index_of(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_has(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_from(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9move(T9 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/void r9clear_all(T9 C,T2 a1);
/*NATIVE_ARRAY[CHARACTER]*/void r9set_all_with(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/T6 r9slice_fast_memcmp(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
/*NATIVE_ARRAY[CHARACTER]*/void r9copy_slice_from(T9 C,T9 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/T2 r9slice_fast_occurrences(T9 C,T3 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/T1028 r1028realloc(T1028 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r1028fast_index_of(T1028 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/void r1028copy_from(T1028 C,T1028 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T6 r1028safe_equal(T0* a1,T0* a2);
/*NATIVE_ARRAY[STRING]*/void r1028clear(T1028 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1028clear_all(T1028 C,T2 a1);
/*NATIVE_ARRAY[STRING]*/void r1028remove(T1028 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1028set_all_with(T1028 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/T2 r1028first_index_of(T1028 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/void r1028copy_slice_from(T1028 C,T1028 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r1043clear_all(T1043 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/T1048 r1048realloc(T1048 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1048copy_from(T1048 C,T1048 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1048clear(T1048 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1048clear_all(T1048 C,T2 a1);
/*NATIVE_ARRAY[HASHED_STRING]*/void r1048copy_slice_from(T1048 C,T1048 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_TEXT]*/T1052 r1052realloc(T1052 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1052copy_from(T1052 C,T1052 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1052clear(T1052 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1052clear_all(T1052 C,T2 a1);
/*NATIVE_ARRAY[CLASS_TEXT]*/void r1052copy_slice_from(T1052 C,T1052 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_16]*/T1053 r1053realloc(T1053 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r1053copy_from(T1053 C,T1053 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/void r1053clear_all(T1053 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_16]*/void r1053copy_slice_from(T1053 C,T1053 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLUSTER]*/T1057 r1057realloc(T1057 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r1057copy_from(T1057 C,T1057 a1,T2 a2);
/*NATIVE_ARRAY[CLUSTER]*/void r1057clear_all(T1057 C,T2 a1);
/*NATIVE_ARRAY[CLUSTER]*/void r1057copy_slice_from(T1057 C,T1057 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r1081clear_all(T1081 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/T1082 r1082realloc(T1082 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1082copy_from(T1082 C,T1082 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1082clear_all(T1082 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1082copy_slice_from(T1082 C,T1082 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/T1083 r1083realloc(T1083 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/T2 r1083fast_index_of(T1083 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1083copy_from(T1083 C,T1083 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1083clear(T1083 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1083clear_all(T1083 C,T2 a1);
/*NATIVE_ARRAY[LIVE_TYPE]*/void r1083copy_slice_from(T1083 C,T1083 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r1097clear_all(T1097 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r1100clear_all(T1100 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/T1102 r1102realloc(T1102 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/T2 r1102fast_index_of(T1102 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102copy_from(T1102 C,T1102 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102move(T1102 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102clear(T1102 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102clear_all(T1102 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102remove(T1102 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102set_all_with(T1102 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_32]*/void r1102copy_slice_from(T1102 C,T1102 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE_MARK]*/T1132 r1132realloc(T1132 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1132copy_from(T1132 C,T1132 a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1132clear_all(T1132 C,T2 a1);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1132set_all_with(T1132 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE_MARK]*/void r1132copy_slice_from(T1132 C,T1132 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r1135clear_all(T1135 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1152clear_all(T1152 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1155clear_all(T1155 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[HASHED_STRING]]*/void r1156clear_all(T1156 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1166clear_all(T1166 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/T1167 r1167realloc(T1167 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1167copy_from(T1167 C,T1167 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1167clear(T1167 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[POSITION]*/void r1167clear_all(T1167 C,T2 a1);
/*NATIVE_ARRAY[POSITION]*/void r1167copy_slice_from(T1167 C,T1167 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1173clear_all(T1173 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/T1176 r1176realloc(T1176 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/T2 r1176fast_index_of(T1176 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1176copy_from(T1176 C,T1176 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1176clear(T1176 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1176clear_all(T1176 C,T2 a1);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1176remove(T1176 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FIXED_STRING]*/void r1176copy_slice_from(T1176 C,T1176 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1179clear_all(T1179 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/T1180 r1180realloc(T1180 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1180copy_from(T1180 C,T1180 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1180clear(T1180 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1180clear_all(T1180 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_NAME]*/void r1180copy_slice_from(T1180 C,T1180 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASSES]*/T1183 r1183realloc(T1183 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1183copy_from(T1183 C,T1183 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1183clear(T1183 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASSES]*/void r1183clear_all(T1183 C,T2 a1);
/*NATIVE_ARRAY[CLASSES]*/void r1183copy_slice_from(T1183 C,T1183 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1193clear_all(T1193 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1196clear_all(T1196 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[CLASS_NAME]]*/void r1197clear_all(T1197 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1202clear_all(T1202 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/T1204 r1204realloc(T1204 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1204copy_from(T1204 C,T1204 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1204clear(T1204 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1204clear_all(T1204 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_TEXT]*/void r1204copy_slice_from(T1204 C,T1204 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/T1208 r1208realloc(T1208 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/T2 r1208fast_index_of(T1208 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1208copy_from(T1208 C,T1208 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1208clear(T1208 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1208clear_all(T1208 C,T2 a1);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1208remove(T1208 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[PARENT_EDGE]*/void r1208copy_slice_from(T1208 C,T1208 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPRESSION]*/T1209 r1209realloc(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1209copy_from(T1209 C,T1209 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1209clear(T1209 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPRESSION]*/void r1209clear_all(T1209 C,T2 a1);
/*NATIVE_ARRAY[EXPRESSION]*/void r1209copy_slice_from(T1209 C,T1209 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TMP_FEATURE]*/T1210 r1210realloc(T1210 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1210copy_from(T1210 C,T1210 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1210clear(T1210 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1210clear_all(T1210 C,T2 a1);
/*NATIVE_ARRAY[TMP_FEATURE]*/void r1210copy_slice_from(T1210 C,T1210 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/T1211 r1211realloc(T1211 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1211copy_from(T1211 C,T1211 a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1211clear_all(T1211 C,T2 a1);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1211set_all_with(T1211 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[ARGUMENT_NAME1]*/void r1211copy_slice_from(T1211 C,T1211 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1212clear_all(T1212 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_ARGUMENT1]*/void r1212set_all_with(T1212 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/T1213 r1213realloc(T1213 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1213copy_from(T1213 C,T1213 a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1213clear_all(T1213 C,T2 a1);
/*NATIVE_ARRAY[DECLARATION]*/void r1213set_all_with(T1213 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DECLARATION]*/void r1213copy_slice_from(T1213 C,T1213 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ASSERTION]*/T1215 r1215realloc(T1215 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1215copy_from(T1215 C,T1215 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1215clear(T1215 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ASSERTION]*/void r1215clear_all(T1215 C,T2 a1);
/*NATIVE_ARRAY[ASSERTION]*/void r1215copy_slice_from(T1215 C,T1215 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[LOCAL_NAME1]*/T1216 r1216realloc(T1216 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1216copy_from(T1216 C,T1216 a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1216clear_all(T1216 C,T2 a1);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1216set_all_with(T1216 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[LOCAL_NAME1]*/void r1216copy_slice_from(T1216 C,T1216 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[MANIFEST_STRING]*/T1217 r1217realloc(T1217 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1217copy_from(T1217 C,T1217 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1217clear(T1217 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1217clear_all(T1217 C,T2 a1);
/*NATIVE_ARRAY[MANIFEST_STRING]*/void r1217copy_slice_from(T1217 C,T1217 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/T1219 r1219realloc(T1219 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1219copy_from(T1219 C,T1219 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1219clear(T1219 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1219clear_all(T1219 C,T2 a1);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1219remove(T1219 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_CLAUSE]*/void r1219copy_slice_from(T1219 C,T1219 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXPORT_ITEM]*/T1227 r1227realloc(T1227 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1227copy_from(T1227 C,T1227 a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1227clear_all(T1227 C,T2 a1);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1227set_all_with(T1227 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[EXPORT_ITEM]*/void r1227copy_slice_from(T1227 C,T1227 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[LIVE_TYPE]]*/void r1228clear_all(T1228 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T1231 r1231realloc(T1231 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/T2 r1231fast_index_of(T1231 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1231copy_from(T1231 C,T1231 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1231clear(T1231 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1231clear_all(T1231 C,T2 a1);
/*NATIVE_ARRAY[EXTERNAL_ROUTINE]*/void r1231copy_slice_from(T1231 C,T1231 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1234clear_all(T1234 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/T1237 r1237realloc(T1237 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/T2 r1237fast_index_of(T1237 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[TYPE]*/void r1237copy_from(T1237 C,T1237 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1237clear(T1237 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1237clear_all(T1237 C,T2 a1);
/*NATIVE_ARRAY[TYPE]*/void r1237remove(T1237 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1237set_all_with(T1237 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[TYPE]*/void r1237copy_slice_from(T1237 C,T1237 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/T1238 r1238realloc(T1238 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/T2 r1238fast_index_of(T1238 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1238copy_from(T1238 C,T1238 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1238clear(T1238 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1238clear_all(T1238 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE]*/void r1238copy_slice_from(T1238 C,T1238 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T1239 r1239realloc(T1239 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/T2 r1239fast_index_of(T1239 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1239copy_from(T1239 C,T1239 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1239clear(T1239 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1239clear_all(T1239 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE]*/void r1239copy_slice_from(T1239 C,T1239 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1240clear_all(T1240 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1247clear_all(T1247 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1249clear_all(T1249 C,T2 a1);
/*NATIVE_ARRAY[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1256clear_all(T1256 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1262clear_all(T1262 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T1263 r1263realloc(T1263 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/T2 r1263fast_index_of(T1263 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1263copy_from(T1263 C,T1263 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1263clear(T1263 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1263clear_all(T1263 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1263set_all_with(T1263 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_STAMP]*/void r1263copy_slice_from(T1263 C,T1263 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/T1264 r1264realloc(T1264 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1264copy_from(T1264 C,T1264 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1264clear(T1264 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1264clear_all(T1264 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE]]*/void r1264copy_slice_from(T1264 C,T1264 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CODE]*/T1265 r1265realloc(T1265 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1265copy_from(T1265 C,T1265 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1265clear(T1265 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE]*/void r1265clear_all(T1265 C,T2 a1);
/*NATIVE_ARRAY[CODE]*/void r1265copy_slice_from(T1265 C,T1265 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1268clear_all(T1268 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[TYPE]]*/void r1270clear_all(T1270 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1275clear_all(T1275 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[STRING]]*/void r1276clear_all(T1276 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1281clear_all(T1281 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1282clear_all(T1282 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T1285 r1285realloc(T1285 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1285fast_index_of(T1285 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1285copy_from(T1285 C,T1285 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1285clear(T1285 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1285clear_all(T1285 C,T2 a1);
/*NATIVE_ARRAY[NON_VOID_NO_DISPATCH]*/void r1285copy_slice_from(T1285 C,T1285 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1288clear_all(T1288 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[AGENT_ARGS]]*/void r1289clear_all(T1289 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1293clear_all(T1293 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/T1295 r1295realloc(T1295 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1295copy_from(T1295 C,T1295 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1295clear(T1295 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1295clear_all(T1295 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET[TYPE]]*/void r1295copy_slice_from(T1295 C,T1295 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1296clear_all(T1296 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T1299 r1299realloc(T1299 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1299copy_from(T1299 C,T1299 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1299clear(T1299 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1299clear_all(T1299 C,T2 a1);
/*NATIVE_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1299copy_slice_from(T1299 C,T1299 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1302clear_all(T1302 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1303clear_all(T1303 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1308clear_all(T1308 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1311clear_all(T1311 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1312clear_all(T1312 C,T2 a1);
/*NATIVE_ARRAY[ARRAY[INTEGER_8]]*/void r1312set_all_with(T1312 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_8]*/void r1313clear_all(T1313 C,T2 a1);
/*NATIVE_ARRAY[INTEGER_8]*/void r1313set_all_with(T1313 C,T1 a1,T2 a2);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1316clear_all(T1316 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/T1317 r1317realloc(T1317 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1317copy_from(T1317 C,T1317 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1317clear(T1317 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1317clear_all(T1317 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1317set_all_with(T1317 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_2]*/void r1317copy_slice_from(T1317 C,T1317 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CECIL_ENTRY]*/T1318 r1318realloc(T1318 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1318copy_from(T1318 C,T1318 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1318clear(T1318 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1318clear_all(T1318 C,T2 a1);
/*NATIVE_ARRAY[CECIL_ENTRY]*/void r1318copy_slice_from(T1318 C,T1318 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[SE_CONFIG]*/T1320 r1320realloc(T1320 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1320copy_from(T1320 C,T1320 a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1320set_slice_with(T1320 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1320clear_all(T1320 C,T2 a1);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1320set_all_with(T1320 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[SE_CONFIG]*/void r1320copy_slice_from(T1320 C,T1320 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1322clear_all(T1322 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/T1324 r1324realloc(T1324 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1324copy_from(T1324 C,T1324 a1,T2 a2);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1324clear_all(T1324 C,T2 a1);
/*NATIVE_ARRAY[STRING_RECYCLING_ITEM]*/void r1324copy_slice_from(T1324 C,T1324 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T1326 r1326realloc(T1326 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1326copy_from(T1326 C,T1326 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1326clear(T1326 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1326clear_all(T1326 C,T2 a1);
/*NATIVE_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1326copy_slice_from(T1326 C,T1326 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PROCEDURE[TUPLE]]*/void r1327set_slice_with(T1327 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[PROCEDURE[TUPLE]]*/void r1327clear_all(T1327 C,T2 a1);
/*NATIVE_ARRAY[PROCEDURE[TUPLE]]*/void r1327set_all_with(T1327 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1328clear_all(T1328 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1335clear_all(T1335 C,T2 a1);
/*NATIVE_ARRAY[TEXT_FILE_READ]*/void r1337clear_all(T1337 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1340clear_all(T1340 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1341clear_all(T1341 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/T1344 r1344realloc(T1344 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1344copy_from(T1344 C,T1344 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1344clear_all(T1344 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1344set_all_with(T1344 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_GENERIC_ARG]*/void r1344copy_slice_from(T1344 C,T1344 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1347clear_all(T1347 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1350clear_all(T1350 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/T1352 r1352realloc(T1352 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1352copy_from(T1352 C,T1352 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1352clear(T1352 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1352clear_all(T1352 C,T2 a1);
/*NATIVE_ARRAY[REQUIRE_ASSERTION]*/void r1352copy_slice_from(T1352 C,T1352 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[IFTHEN]*/T1353 r1353realloc(T1353 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1353copy_from(T1353 C,T1353 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1353clear(T1353 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1353clear_all(T1353 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1353remove(T1353 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[IFTHEN]*/void r1353remove_first(T1353 C,T2 a1);
/*NATIVE_ARRAY[IFTHEN]*/void r1353copy_slice_from(T1353 C,T1353 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[WHEN_ITEM]*/T1354 r1354realloc(T1354 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1354copy_from(T1354 C,T1354 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1354clear(T1354 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1354clear_all(T1354 C,T2 a1);
/*NATIVE_ARRAY[WHEN_ITEM]*/void r1354copy_slice_from(T1354 C,T1354 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INSTRUCTION]*/T1355 r1355realloc(T1355 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1355copy_from(T1355 C,T1355 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1355clear(T1355 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1355clear_all(T1355 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1355remove_first(T1355 C,T2 a1);
/*NATIVE_ARRAY[INSTRUCTION]*/void r1355copy_slice_from(T1355 C,T1355 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[OPEN_OPERAND]*/T1356 r1356realloc(T1356 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1356copy_from(T1356 C,T1356 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1356clear(T1356 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1356clear_all(T1356 C,T2 a1);
/*NATIVE_ARRAY[OPEN_OPERAND]*/void r1356copy_slice_from(T1356 C,T1356 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/T1358 r1358realloc(T1358 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1358copy_from(T1358 C,T1358 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1358clear(T1358 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1358clear_all(T1358 C,T2 a1);
/*NATIVE_ARRAY[CLOSED_OPERAND]*/void r1358copy_slice_from(T1358 C,T1358 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CLASS_NAME]*/T1359 r1359realloc(T1359 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1359copy_from(T1359 C,T1359 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1359clear(T1359 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1359clear_all(T1359 C,T2 a1);
/*NATIVE_ARRAY[CLASS_NAME]*/void r1359copy_slice_from(T1359 C,T1359 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1362clear_all(T1362 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/T1370 r1370realloc(T1370 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1370copy_from(T1370 C,T1370 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1370clear(T1370 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1370clear_all(T1370 C,T2 a1);
/*NATIVE_ARRAY[FEATURE_CLAUSE]*/void r1370copy_slice_from(T1370 C,T1370 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/T1371 r1371realloc(T1371 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1371copy_from(T1371 C,T1371 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1371clear(T1371 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1371clear_all(T1371 C,T2 a1);
/*NATIVE_ARRAY[CREATION_CLAUSE]*/void r1371copy_slice_from(T1371 C,T1371 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/T1372 r1372realloc(T1372 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1372copy_from(T1372 C,T1372 a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1372clear_all(T1372 C,T2 a1);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1372set_all_with(T1372 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[INDEX_CLAUSE]*/void r1372copy_slice_from(T1372 C,T1372 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1373clear_all(T1373 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[GRAPH_NODE]]*/void r1376clear_all(T1376 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/T1382 r1382realloc(T1382 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1382copy_from(T1382 C,T1382 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1382clear(T1382 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1382clear_all(T1382 C,T2 a1);
/*NATIVE_ARRAY[RENAME_PAIR]*/void r1382copy_slice_from(T1382 C,T1382 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1385clear_all(T1385 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/T1386 r1386realloc(T1386 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1386copy_from(T1386 C,T1386 a1,T2 a2);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1386clear_all(T1386 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1386copy_slice_from(T1386 C,T1386 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1390clear_all(T1390 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1397clear_all(T1397 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1400clear_all(T1400 C,T2 a1);
/*NATIVE_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1402clear_all(T1402 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1416clear_all(T1416 C,T2 a1);
/*NATIVE_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1417clear_all(T1417 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1420clear_all(T1420 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/T1440 r1440realloc(T1440 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/T2 r1440fast_index_of(T1440 C,T0* a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1440copy_from(T1440 C,T1440 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1440clear(T1440 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1440clear_all(T1440 C,T2 a1);
/*NATIVE_ARRAY[AGENT_CREATION]*/void r1440copy_slice_from(T1440 C,T1440 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1450clear_all(T1450 C,T2 a1);
/*NATIVE_ARRAY[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1452clear_all(T1452 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1457clear_all(T1457 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1460clear_all(T1460 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/T1464 r1464realloc(T1464 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1464copy_from(T1464 C,T1464 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1464clear(T1464 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1464clear_all(T1464 C,T2 a1);
/*NATIVE_ARRAY[FORMAL_ARG_LIST]*/void r1464copy_slice_from(T1464 C,T1464 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/T1465 r1465realloc(T1465 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1465copy_from(T1465 C,T1465 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1465clear(T1465 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1465clear_all(T1465 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[E_OLD]]*/void r1465copy_slice_from(T1465 C,T1465 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[E_OLD]*/T1466 r1466realloc(T1466 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1466copy_from(T1466 C,T1466 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1466clear(T1466 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[E_OLD]*/void r1466clear_all(T1466 C,T2 a1);
/*NATIVE_ARRAY[E_OLD]*/void r1466copy_slice_from(T1466 C,T1466 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1467clear_all(T1467 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/T1470 r1470realloc(T1470 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1470copy_from(T1470 C,T1470 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1470clear(T1470 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1470clear_all(T1470 C,T2 a1);
/*NATIVE_ARRAY[ADDRESS_OF]*/void r1470copy_slice_from(T1470 C,T1470 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INLINE_MEMO]*/T1471 r1471realloc(T1471 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1471copy_from(T1471 C,T1471 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1471clear(T1471 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1471clear_all(T1471 C,T2 a1);
/*NATIVE_ARRAY[INLINE_MEMO]*/void r1471copy_slice_from(T1471 C,T1471 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[POINTER]*/void r1472clear_all(T1472 C,T2 a1);
/*NATIVE_ARRAY[AVL_SET_NODE[POSITION]]*/void r1473clear_all(T1473 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/T1509 r1509realloc(T1509 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1509copy_from(T1509 C,T1509 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1509clear(T1509 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1509clear_all(T1509 C,T2 a1);
/*NATIVE_ARRAY[CODE_CONTEXT]*/void r1509copy_slice_from(T1509 C,T1509 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T1510 r1510realloc(T1510 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1510copy_from(T1510 C,T1510 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1510move(T1510 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1510clear(T1510 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1510clear_all(T1510 C,T2 a1);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1510set_all_with(T1510 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1510copy_slice_from(T1510 C,T1510 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/T1511 r1511realloc(T1511 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1511copy_from(T1511 C,T1511 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1511clear(T1511 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1511clear_all(T1511 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_6]*/void r1511copy_slice_from(T1511 C,T1511 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1514clear_all(T1514 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/T1516 r1516realloc(T1516 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1516copy_from(T1516 C,T1516 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1516clear(T1516 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1516clear_all(T1516 C,T2 a1);
/*NATIVE_ARRAY[RUN_FEATURE_5]*/void r1516copy_slice_from(T1516 C,T1516 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/T1517 r1517realloc(T1517 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1517copy_from(T1517 C,T1517 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1517clear(T1517 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1517clear_all(T1517 C,T2 a1);
/*NATIVE_ARRAY[INTERNAL_C_LOCAL]*/void r1517copy_slice_from(T1517 C,T1517 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1518clear_all(T1518 C,T2 a1);
/*NATIVE_ARRAY[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1538clear_all(T1538 C,T2 a1);
/*STRING*/T2 r7first_index_of(T7* C,T3 a1);
/*STRING*/T0* r7out(T7* C);
/*STRING*/void r7copy(T7* C,T0* a1);
/*STRING*/T0* r7substring(T7* C,T2 a1,T2 a2);
/*STRING*/T2 r7occurrences(T7* C,T3 a1);
/*STRING*/void r7remove_prefix(T7* C,T0* a1);
/*STRING*/T2 r7reverse_index_of(T7* C,T3 a1,T2 a2);
/*STRING*/T0* r7intern(T7* C);
/*STRING*/void r7lock_tagged_out(void);
/*STRING*/void r7remove_first(T7* C);
/*STRING*/T3 r7last(T7* C);
/*STRING*/T2 r7first_substring_index(T7* C,T0* a1);
/*STRING*/void r7remove_suffix(T7* C,T0* a1);
/*STRING*/T2 r7upper(T7* C);
/*STRING*/void r7put(T7* C,T3 a1,T2 a2);
/*STRING*/void r7unlock_tagged_out(void);
/*STRING*/void r7remove_between(T7* C,T2 a1,T2 a2);
/*STRING*/T6 r7is_equal(T7* C,T0* a1);
/*STRING*/void r7insert_character(T7* C,T3 a1,T2 a2);
extern T0*oBC39interned;
extern int fBC39interned;
/*STRING*/T0* r7interned(void);
/*STRING*/T3 r7item(T7* C,T2 a1);
/*STRING*/T0* r7_ix_43(T7* C,T0* a1);
extern T0*oBC39string_buffer;
extern int fBC39string_buffer;
/*STRING*/T0* r7string_buffer(void);
extern T0*oBC39split_buffer;
extern int fBC39split_buffer;
/*STRING*/T0* r7split_buffer(void);
/*STRING*/T0* r7split(T7* C);
/*STRING*/T6 r7valid_index(T7* C,T2 a1);
extern T0*oBC17tagged_out_memory_pool;
extern int fBC17tagged_out_memory_pool;
/*STRING*/T0* r7tagged_out_memory_pool(void);
/*STRING*/void r7append(T7* C,T0* a1);
/*STRING*/void r7print_on(T7* C,T0* a1);
/*STRING*/T6 r7_ix_60(T7* C,T0* a1);
/*STRING*/void r7make_from_string(T7* C,T0* a1);
/*STRING*/T6 r7has_substring(T7* C,T0* a1);
/*STRING*/void r7copy_slice_to_native(T7* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*STRING*/T2 r7index_of(T7* C,T3 a1,T2 a2);
/*STRING*/void r7out_in_tagged_out_memory(T7* C);
/*STRING*/void r7make_empty(T7* C);
/*STRING*/void r7slice_copy(T7* C,T2 a1,T0* a2,T2 a3,T2 a4);
/*STRING*/T6 r7has_suffix(T7* C,T0* a1);
/*STRING*/T6 r7is_integer(T7* C);
/*STRING*/void r7remove_tail(T7* C,T2 a1);
/*STRING*/void r7make(T7* C,T2 a1);
/*STRING*/T6 r7has_prefix(T7* C,T0* a1);
/*STRING*/void r7clear_count(T7* C);
/*STRING*/void r7append_string(T7* C,T0* a1);
/*STRING*/void r7make_filled(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove(T7* C,T2 a1);
/*STRING*/void r7append_substring(T7* C,T0* a1,T2 a2,T2 a3);
extern T0*oBC17tagged_out_memories;
extern int fBC17tagged_out_memories;
/*STRING*/T0* r7tagged_out_memories(void);
/*STRING*/void r7extend(T7* C,T3 a1);
/*STRING*/void r7remove_last(T7* C);
/*STRING*/T6 r7has(T7* C,T3 a1);
/*STRING*/void r7keep_head(T7* C,T2 a1);
/*STRING*/T2 r7to_integer(T7* C);
extern T0*oBC17tagged_out_memory_ref;
/*STRING*/void r7fill_with(T7* C,T3 a1);
/*STRING*/T6 r7same_as(T7* C,T0* a1);
/*STRING*/void r7extend_unless(T7* C,T3 a1);
/*STRING*/void r7add_last(T7* C,T3 a1);
/*STRING*/T3 r7first(T7* C);
/*STRING*/void r7shrink(T7* C,T2 a1,T2 a2);
/*STRING*/void r7resize(T7* C,T2 a1);
/*STRING*/void r7to_upper(T7* C);
/*STRING*/T2 r7substring_index(T7* C,T0* a1,T2 a2);
/*STRING*/void r7ensure_capacity(T7* C,T2 a1);
/*STRING*/void r7from_external_copy(T7* C,T8 a1);
/*STRING*/T2 r7computed_hash_code(T7* C);
/*STRING*/T6 r7is_integer_64(T7* C);
/*STRING*/T8 r7to_external(T7* C);
/*STRING*/void r7extend_multiple(T7* C,T3 a1,T2 a2);
/*STRING*/void r7to_lower(T7* C);
/*STRING*/T2 r7last_index_of(T7* C,T3 a1);
/*STRING*/T0* r7twin(T7* C);
/*STRING*/void r7with_capacity(T7* C,T2 a1);
/*STRING*/void r7extend_to_count(T7* C,T3 a1,T2 a2);
/*STRING*/void r7remove_head(T7* C,T2 a1);
/*STRING*/void r7next_generation(T7* C);
/*STRING*/T11 r7to_integer_64(T7* C);
/*STRING*/void r7split_in(T7* C,T0* a1);
/*STRING*/void r7swap(T7* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1003swap(T1003* C,T2 a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1003make(T1003* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r1003put(T1003* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1003manifest_put(T1003* C,T2 a1,T0* a2);
/*FAST_ARRAY[STRING]*/void r1003add(T1003* C,T0* a1,T2 a2);
/*FAST_ARRAY[STRING]*/void r1003move(T1003* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING]*/T0* r1003new_iterator(T1003* C);
/*FAST_ARRAY[STRING]*/T2 r1003fast_first_index_of(T1003* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1003add_last(T1003* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1003mark_native_arrays(T1003* C);
/*FAST_ARRAY[STRING]*/void r1003clear_count(T1003* C);
/*FAST_ARRAY[STRING]*/void r1003manifest_make(T1003* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r1003valid_index(T1003* C,T2 a1);
/*FAST_ARRAY[STRING]*/T6 r1003fast_has(T1003* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1003from_collection(T1003* C,T0* a1);
/*FAST_ARRAY[STRING]*/T2 r1003first_index_of(T1003* C,T0* a1);
/*FAST_ARRAY[STRING]*/void r1003with_capacity(T1003* C,T2 a1);
/*FAST_ARRAY[STRING]*/void r1003next_generation(T1003* C);
/*FAST_ARRAY[STRING]*/T2 r1003count(T1003* C);
/*FAST_ARRAY[STRING]*/T6 r1003has(T1003* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/T0* r1008last(T1008* C);
/*FAST_ARRAY[HASHED_STRING]*/void r1008add_last(T1008* C,T0* a1);
/*FAST_ARRAY[HASHED_STRING]*/void r1008mark_native_arrays(T1008* C);
/*FAST_ARRAY[HASHED_STRING]*/void r1008with_capacity(T1008* C,T2 a1);
/*FAST_ARRAY[HASHED_STRING]*/void r1008next_generation(T1008* C);
/*FAST_ARRAY[HASHED_STRING]*/T2 r1008count(T1008* C);
/*ARRAY[STRING]*/void r1009swap(T1009* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/T0* r1009first(T1009* C);
/*ARRAY[STRING]*/void r1009put(T1009* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r1009ensure_capacity_and_bounds(T1009* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r1009add(T1009* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/void r1009move(T1009* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[STRING]*/void r1009copy(T1009* C,T0* a1);
/*ARRAY[STRING]*/void r1009add_last(T1009* C,T0* a1);
/*ARRAY[STRING]*/void r1009mark_native_arrays(T1009* C);
/*ARRAY[STRING]*/T0* r1009item(T1009* C,T2 a1);
/*ARRAY[STRING]*/void r1009clear_all(T1009* C);
/*ARRAY[STRING]*/void r1009remove(T1009* C,T2 a1);
/*ARRAY[STRING]*/void r1009clear_count(T1009* C);
/*ARRAY[STRING]*/T6 r1009is_empty(T1009* C);
/*ARRAY[STRING]*/T0* r1009twin(T1009* C);
/*ARRAY[STRING]*/void r1009set_all_with(T1009* C,T0* a1);
/*ARRAY[STRING]*/T6 r1009valid_index(T1009* C,T2 a1);
/*ARRAY[STRING]*/void r1009with_capacity(T1009* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/void r1009next_generation(T1009* C);
/*ARRAY[STRING]*/T2 r1009count(T1009* C);
/*FAST_ARRAY[CLUSTER]*/void r1010make(T1010* C,T2 a1);
/*FAST_ARRAY[CLUSTER]*/T0* r1010first(T1010* C);
/*FAST_ARRAY[CLUSTER]*/void r1010put(T1010* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r1010add(T1010* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLUSTER]*/void r1010move(T1010* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLUSTER]*/void r1010add_last(T1010* C,T0* a1);
/*FAST_ARRAY[CLUSTER]*/void r1010mark_native_arrays(T1010* C);
/*FAST_ARRAY[CLUSTER]*/void r1010clear_count(T1010* C);
/*FAST_ARRAY[CLUSTER]*/T6 r1010is_empty(T1010* C);
/*FAST_ARRAY[CLUSTER]*/void r1010next_generation(T1010* C);
/*FAST_ARRAY[CLUSTER]*/T2 r1010count(T1010* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1012make(T1012* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1012add_last(T1012* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1012mark_native_arrays(T1012* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1012next_generation(T1012* C);
/*FAST_ARRAY[LIVE_TYPE_EXTRA_COLLECTOR]*/void r1012do_all(T1012* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013swap(T1013* C,T2 a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013put(T1013* C,T0* a1,T2 a2);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r1013fast_first_index_of(T1013* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013add_last(T1013* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013mark_native_arrays(T1013* C);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r1013valid_index(T1013* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/T6 r1013fast_has(T1013* C,T0* a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013with_capacity(T1013* C,T2 a1);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013next_generation(T1013* C);
/*FAST_ARRAY[LIVE_TYPE]*/T2 r1013count(T1013* C);
/*FAST_ARRAY[LIVE_TYPE]*/void r1013do_all(T1013* C,T0* a1);
/*FAST_ARRAY[INTEGER_32]*/void r1016swap(T1016* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1016make(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T2 r1016first(T1016* C);
/*FAST_ARRAY[INTEGER_32]*/void r1016remove_last(T1016* C);
/*FAST_ARRAY[INTEGER_32]*/void r1016put(T1016* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1016add(T1016* C,T2 a1,T2 a2);
/*FAST_ARRAY[INTEGER_32]*/void r1016move(T1016* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[INTEGER_32]*/T2 r1016last(T1016* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r1016fast_first_index_of(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1016add_last(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1016remove(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1016clear_count(T1016* C);
/*FAST_ARRAY[INTEGER_32]*/void r1016set_all_with(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r1016valid_index(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/T6 r1016fast_has(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1016with_capacity(T1016* C,T2 a1);
/*FAST_ARRAY[INTEGER_32]*/void r1016next_generation(T1016* C);
/*FAST_ARRAY[INTEGER_32]*/T2 r1016count(T1016* C);
/*ARRAY[INTEGER_32]*/void r1018make(T1018* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1018resize(T1018* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1018put(T1018* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1018ensure_capacity_and_bounds(T1018* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_32]*/void r1018add_last(T1018* C,T2 a1);
/*ARRAY[INTEGER_32]*/T2 r1018item(T1018* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1018clear_all(T1018* C);
/*ARRAY[INTEGER_32]*/void r1018set_all_with(T1018* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1018force(T1018* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/T6 r1018valid_index(T1018* C,T2 a1);
/*ARRAY[INTEGER_32]*/void r1018with_capacity(T1018* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_32]*/void r1018next_generation(T1018* C);
/*ARRAY[INTEGER_32]*/T2 r1018count(T1018* C);
/*ARRAY[TYPE_MARK]*/void r1020make(T1020* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r1020first(T1020* C);
/*ARRAY[TYPE_MARK]*/void r1020put(T1020* C,T0* a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r1020ensure_capacity_and_bounds(T1020* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE_MARK]*/void r1020manifest_put(T1020* C,T2 a1,T0* a2);
/*ARRAY[TYPE_MARK]*/void r1020copy(T1020* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T0* r1020last(T1020* C);
/*ARRAY[TYPE_MARK]*/void r1020add_last(T1020* C,T0* a1);
/*ARRAY[TYPE_MARK]*/void r1020mark_native_arrays(T1020* C);
/*ARRAY[TYPE_MARK]*/T0* r1020item(T1020* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r1020clear_all(T1020* C);
/*ARRAY[TYPE_MARK]*/void r1020manifest_make(T1020* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/T0* r1020twin(T1020* C);
/*ARRAY[TYPE_MARK]*/void r1020set_all_with(T1020* C,T0* a1);
/*ARRAY[TYPE_MARK]*/T6 r1020valid_index(T1020* C,T2 a1);
/*ARRAY[TYPE_MARK]*/void r1020with_capacity(T1020* C,T2 a1,T2 a2);
/*ARRAY[TYPE_MARK]*/void r1020next_generation(T1020* C);
/*ARRAY[TYPE_MARK]*/T2 r1020count(T1020* C);
/*FAST_ARRAY[POSITION]*/void r1031swap(T1031* C,T2 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T338 r1031first(T1031* C);
/*FAST_ARRAY[POSITION]*/void r1031remove_last(T1031* C);
/*FAST_ARRAY[POSITION]*/void r1031put(T1031* C,T338 a1,T2 a2);
/*FAST_ARRAY[POSITION]*/T338 r1031last(T1031* C);
/*FAST_ARRAY[POSITION]*/void r1031add_last(T1031* C,T338 a1);
/*FAST_ARRAY[POSITION]*/void r1031clear_count(T1031* C);
/*FAST_ARRAY[POSITION]*/T6 r1031is_empty(T1031* C);
/*FAST_ARRAY[POSITION]*/void r1031with_capacity(T1031* C,T2 a1);
/*FAST_ARRAY[POSITION]*/void r1031next_generation(T1031* C);
/*FAST_ARRAY[POSITION]*/T2 r1031count(T1031* C);
/*FAST_ARRAY[FIXED_STRING]*/void r1038swap(T1038* C,T2 a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r1038put(T1038* C,T0* a1,T2 a2);
/*FAST_ARRAY[FIXED_STRING]*/void r1038add_last(T1038* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/T2 r1038fast_first_index_of(T1038* C,T0* a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1038mark_native_arrays(T1038* C);
/*FAST_ARRAY[FIXED_STRING]*/void r1038remove(T1038* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1038with_capacity(T1038* C,T2 a1);
/*FAST_ARRAY[FIXED_STRING]*/void r1038next_generation(T1038* C);
/*FAST_ARRAY[FIXED_STRING]*/T2 r1038count(T1038* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047make(T1047* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/T0* r1047first(T1047* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047put(T1047* C,T0* a1,T2 a2);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047add_last(T1047* C,T0* a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047mark_native_arrays(T1047* C);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047clear_count(T1047* C);
/*FAST_ARRAY[FEATURE_NAME]*/T6 r1047valid_index(T1047* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047with_capacity(T1047* C,T2 a1);
/*FAST_ARRAY[FEATURE_NAME]*/void r1047next_generation(T1047* C);
/*FAST_ARRAY[FEATURE_NAME]*/T2 r1047count(T1047* C);
/*FAST_ARRAY[CLASSES]*/void r1051put(T1051* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r1051add(T1051* C,T0* a1,T2 a2);
/*FAST_ARRAY[CLASSES]*/void r1051move(T1051* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[CLASSES]*/void r1051add_last(T1051* C,T0* a1);
/*FAST_ARRAY[CLASSES]*/void r1051mark_native_arrays(T1051* C);
/*FAST_ARRAY[CLASSES]*/T6 r1051is_empty(T1051* C);
/*FAST_ARRAY[CLASSES]*/void r1051with_capacity(T1051* C,T2 a1);
/*FAST_ARRAY[CLASSES]*/void r1051next_generation(T1051* C);
/*FAST_ARRAY[INTEGER_16]*/void r1054make(T1054* C,T2 a1);
/*FAST_ARRAY[INTEGER_16]*/void r1054add_last(T1054* C,T10 a1);
/*FAST_ARRAY[INTEGER_16]*/void r1054next_generation(T1054* C);
/*FAST_ARRAY[INTEGER_16]*/T2 r1054count(T1054* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1065copy(T1065* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1065add_last(T1065* C,T0* a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1065mark_native_arrays(T1065* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1065clear_count(T1065* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T6 r1065is_empty(T1065* C);
/*FAST_ARRAY[FEATURE_TEXT]*/T0* r1065twin(T1065* C);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1065with_capacity(T1065* C,T2 a1);
/*FAST_ARRAY[FEATURE_TEXT]*/void r1065next_generation(T1065* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066swap(T1066* C,T2 a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066make(T1066* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1066fast_index_of(T1066* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066put(T1066* C,T0* a1,T2 a2);
/*FAST_ARRAY[PARENT_EDGE]*/T0* r1066last(T1066* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1066fast_first_index_of(T1066* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066add_last(T1066* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066mark_native_arrays(T1066* C);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066remove(T1066* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066clear_count(T1066* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1066is_empty(T1066* C);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1066valid_index(T1066* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/T6 r1066fast_has(T1066* C,T0* a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066with_capacity(T1066* C,T2 a1);
/*FAST_ARRAY[PARENT_EDGE]*/void r1066next_generation(T1066* C);
/*FAST_ARRAY[PARENT_EDGE]*/T2 r1066count(T1066* C);
/*FAST_ARRAY[EXPRESSION]*/void r1067make(T1067* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/T0* r1067first(T1067* C);
/*FAST_ARRAY[EXPRESSION]*/void r1067put(T1067* C,T0* a1,T2 a2);
/*FAST_ARRAY[EXPRESSION]*/void r1067copy(T1067* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r1067add_last(T1067* C,T0* a1);
/*FAST_ARRAY[EXPRESSION]*/void r1067mark_native_arrays(T1067* C);
/*FAST_ARRAY[EXPRESSION]*/T0* r1067twin(T1067* C);
/*FAST_ARRAY[EXPRESSION]*/void r1067with_capacity(T1067* C,T2 a1);
/*FAST_ARRAY[EXPRESSION]*/void r1067next_generation(T1067* C);
/*FAST_ARRAY[EXPRESSION]*/T2 r1067count(T1067* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1069make(T1069* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/T0* r1069first(T1069* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1069put(T1069* C,T0* a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r1069ensure_capacity_and_bounds(T1069* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARGUMENT_NAME1]*/void r1069add_last(T1069* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1069mark_native_arrays(T1069* C);
/*ARRAY[ARGUMENT_NAME1]*/T0* r1069item(T1069* C,T2 a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1069clear_all(T1069* C);
/*ARRAY[ARGUMENT_NAME1]*/void r1069set_all_with(T1069* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1069from_collection(T1069* C,T0* a1);
/*ARRAY[ARGUMENT_NAME1]*/void r1069with_capacity(T1069* C,T2 a1,T2 a2);
/*ARRAY[ARGUMENT_NAME1]*/void r1069next_generation(T1069* C);
/*ARRAY[ARGUMENT_NAME1]*/T2 r1069count(T1069* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r1070first(T1070* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070put(T1070* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070ensure_capacity_and_bounds(T1070* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070mark_native_arrays(T1070* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T0* r1070item(T1070* C,T2 a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070clear_all(T1070* C);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070set_all_with(T1070* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070from_collection(T1070* C,T0* a1);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070with_capacity(T1070* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_ARGUMENT1]*/void r1070next_generation(T1070* C);
/*ARRAY[LOCAL_ARGUMENT1]*/T2 r1070count(T1070* C);
/*ARRAY[DECLARATION]*/void r1071make(T1071* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1071put(T1071* C,T0* a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1071ensure_capacity_and_bounds(T1071* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[DECLARATION]*/void r1071manifest_put(T1071* C,T2 a1,T0* a2);
/*ARRAY[DECLARATION]*/void r1071add_last(T1071* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1071mark_native_arrays(T1071* C);
/*ARRAY[DECLARATION]*/T0* r1071item(T1071* C,T2 a1);
/*ARRAY[DECLARATION]*/void r1071clear_all(T1071* C);
/*ARRAY[DECLARATION]*/T6 r1071is_empty(T1071* C);
/*ARRAY[DECLARATION]*/void r1071manifest_make(T1071* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1071set_all_with(T1071* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1071from_collection(T1071* C,T0* a1);
/*ARRAY[DECLARATION]*/void r1071with_capacity(T1071* C,T2 a1,T2 a2);
/*ARRAY[DECLARATION]*/void r1071next_generation(T1071* C);
/*ARRAY[DECLARATION]*/T2 r1071count(T1071* C);
/*FAST_ARRAY[ASSERTION]*/void r1072put(T1072* C,T0* a1,T2 a2);
/*FAST_ARRAY[ASSERTION]*/void r1072copy(T1072* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r1072add_last(T1072* C,T0* a1);
/*FAST_ARRAY[ASSERTION]*/void r1072mark_native_arrays(T1072* C);
/*FAST_ARRAY[ASSERTION]*/void r1072clear_count(T1072* C);
/*FAST_ARRAY[ASSERTION]*/T6 r1072is_empty(T1072* C);
/*FAST_ARRAY[ASSERTION]*/T0* r1072twin(T1072* C);
/*FAST_ARRAY[ASSERTION]*/void r1072with_capacity(T1072* C,T2 a1);
/*FAST_ARRAY[ASSERTION]*/void r1072next_generation(T1072* C);
/*FAST_ARRAY[ASSERTION]*/T2 r1072count(T1072* C);
/*FAST_ARRAY[ASSERTION]*/void r1072do_all(T1072* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1073make(T1073* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/T0* r1073first(T1073* C);
/*ARRAY[LOCAL_NAME1]*/void r1073put(T1073* C,T0* a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r1073ensure_capacity_and_bounds(T1073* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[LOCAL_NAME1]*/void r1073add_last(T1073* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1073mark_native_arrays(T1073* C);
/*ARRAY[LOCAL_NAME1]*/T0* r1073item(T1073* C,T2 a1);
/*ARRAY[LOCAL_NAME1]*/void r1073clear_all(T1073* C);
/*ARRAY[LOCAL_NAME1]*/void r1073set_all_with(T1073* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1073from_collection(T1073* C,T0* a1);
/*ARRAY[LOCAL_NAME1]*/void r1073with_capacity(T1073* C,T2 a1,T2 a2);
/*ARRAY[LOCAL_NAME1]*/void r1073next_generation(T1073* C);
/*ARRAY[LOCAL_NAME1]*/T2 r1073count(T1073* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1074add_last(T1074* C,T0* a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1074mark_native_arrays(T1074* C);
/*FAST_ARRAY[MANIFEST_STRING]*/T6 r1074is_empty(T1074* C);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1074with_capacity(T1074* C,T2 a1);
/*FAST_ARRAY[MANIFEST_STRING]*/void r1074next_generation(T1074* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075make(T1075* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075swap(T1075* C,T2 a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r1075first(T1075* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075put(T1075* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075copy(T1075* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075add_last(T1075* C,T0* a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075mark_native_arrays(T1075* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075remove(T1075* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075clear_count(T1075* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T6 r1075is_empty(T1075* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T0* r1075twin(T1075* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075remove_tail(T1075* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075with_capacity(T1075* C,T2 a1);
/*FAST_ARRAY[WHEN_CLAUSE]*/void r1075next_generation(T1075* C);
/*FAST_ARRAY[WHEN_CLAUSE]*/T2 r1075count(T1075* C);
/*ARRAY[EXPORT_ITEM]*/void r1076put(T1076* C,T0* a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r1076ensure_capacity_and_bounds(T1076* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[EXPORT_ITEM]*/void r1076add_last(T1076* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r1076mark_native_arrays(T1076* C);
/*ARRAY[EXPORT_ITEM]*/T0* r1076item(T1076* C,T2 a1);
/*ARRAY[EXPORT_ITEM]*/void r1076clear_all(T1076* C);
/*ARRAY[EXPORT_ITEM]*/void r1076set_all_with(T1076* C,T0* a1);
/*ARRAY[EXPORT_ITEM]*/void r1076with_capacity(T1076* C,T2 a1,T2 a2);
/*ARRAY[EXPORT_ITEM]*/void r1076next_generation(T1076* C);
/*ARRAY[EXPORT_ITEM]*/T2 r1076count(T1076* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1078add_last(T1078* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T2 r1078fast_first_index_of(T1078* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1078mark_native_arrays(T1078* C);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r1078valid_index(T1078* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/T6 r1078fast_has(T1078* C,T0* a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1078with_capacity(T1078* C,T2 a1);
/*FAST_ARRAY[EXTERNAL_ROUTINE]*/void r1078next_generation(T1078* C);
/*ARRAY[TYPE]*/T0* r1085first(T1085* C);
/*ARRAY[TYPE]*/void r1085put(T1085* C,T0* a1,T2 a2);
/*ARRAY[TYPE]*/void r1085ensure_capacity_and_bounds(T1085* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[TYPE]*/void r1085add_last(T1085* C,T0* a1);
/*ARRAY[TYPE]*/void r1085mark_native_arrays(T1085* C);
/*ARRAY[TYPE]*/T0* r1085item(T1085* C,T2 a1);
/*ARRAY[TYPE]*/void r1085clear_all(T1085* C);
/*ARRAY[TYPE]*/void r1085set_all_with(T1085* C,T0* a1);
/*ARRAY[TYPE]*/void r1085with_capacity(T1085* C,T2 a1,T2 a2);
/*ARRAY[TYPE]*/void r1085next_generation(T1085* C);
/*ARRAY[TYPE]*/T2 r1085count(T1085* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r1087add_last(T1087* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r1087fast_first_index_of(T1087* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1087mark_native_arrays(T1087* C);
/*FAST_ARRAY[RUN_FEATURE]*/T6 r1087valid_index(T1087* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1087with_capacity(T1087* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE]*/void r1087next_generation(T1087* C);
/*FAST_ARRAY[RUN_FEATURE]*/T2 r1087count(T1087* C);
/*FAST_ARRAY[RUN_FEATURE]*/void r1087do_all(T1087* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1106make(T1106* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T0* r1106first(T1106* C);
/*FAST_ARRAY[TYPE]*/void r1106resize(T1106* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1106remove_last(T1106* C);
/*FAST_ARRAY[TYPE]*/T0* r1106last(T1106* C);
/*FAST_ARRAY[TYPE]*/T2 r1106fast_first_index_of(T1106* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1106add_last(T1106* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1106mark_native_arrays(T1106* C);
/*FAST_ARRAY[TYPE]*/void r1106remove(T1106* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1106clear_count(T1106* C);
/*FAST_ARRAY[TYPE]*/T6 r1106valid_index(T1106* C,T2 a1);
/*FAST_ARRAY[TYPE]*/T6 r1106fast_has(T1106* C,T0* a1);
/*FAST_ARRAY[TYPE]*/void r1106with_capacity(T1106* C,T2 a1);
/*FAST_ARRAY[TYPE]*/void r1106next_generation(T1106* C);
/*FAST_ARRAY[TYPE]*/T2 r1106count(T1106* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r1111add_last(T1111* C,T0* a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r1111mark_native_arrays(T1111* C);
/*FAST_ARRAY[CLASS_TEXT]*/void r1111with_capacity(T1111* C,T2 a1);
/*FAST_ARRAY[CLASS_TEXT]*/void r1111next_generation(T1111* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T2 r1112fast_first_index_of(T1112* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1112add_last(T1112* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1112mark_native_arrays(T1112* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1112is_empty(T1112* C);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1112valid_index(T1112* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/T6 r1112fast_has(T1112* C,T0* a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1112with_capacity(T1112* C,T2 a1);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1112next_generation(T1112* C);
/*FAST_ARRAY[FEATURE_STAMP]*/void r1112do_all(T1112* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1113add_last(T1113* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1113mark_native_arrays(T1113* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T6 r1113valid_index(T1113* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1113with_capacity(T1113* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/void r1113next_generation(T1113* C);
/*FAST_ARRAY[FAST_ARRAY[CODE]]*/T2 r1113count(T1113* C);
/*FAST_ARRAY[CODE]*/T0* r1114first(T1114* C);
/*FAST_ARRAY[CODE]*/void r1114remove_last(T1114* C);
/*FAST_ARRAY[CODE]*/void r1114put(T1114* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE]*/void r1114copy(T1114* C,T0* a1);
/*FAST_ARRAY[CODE]*/T0* r1114last(T1114* C);
/*FAST_ARRAY[CODE]*/void r1114add_last(T1114* C,T0* a1);
/*FAST_ARRAY[CODE]*/void r1114mark_native_arrays(T1114* C);
/*FAST_ARRAY[CODE]*/void r1114clear_count(T1114* C);
/*FAST_ARRAY[CODE]*/T6 r1114is_empty(T1114* C);
/*FAST_ARRAY[CODE]*/T0* r1114twin(T1114* C);
/*FAST_ARRAY[CODE]*/void r1114with_capacity(T1114* C,T2 a1);
/*FAST_ARRAY[CODE]*/void r1114next_generation(T1114* C);
/*FAST_ARRAY[CODE]*/T2 r1114count(T1114* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1125add_last(T1125* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T2 r1125fast_first_index_of(T1125* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1125mark_native_arrays(T1125* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1125clear_count(T1125* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r1125valid_index(T1125* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/T6 r1125fast_has(T1125* C,T0* a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1125with_capacity(T1125* C,T2 a1);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1125next_generation(T1125* C);
/*FAST_ARRAY[NON_VOID_NO_DISPATCH]*/void r1125do_all(T1125* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r1127fast_first_index_of(T1127* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1127add_last(T1127* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1127mark_native_arrays(T1127* C);
/*FAST_ARRAY[AGENT_CREATION]*/void r1127clear_count(T1127* C);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r1127valid_index(T1127* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/T6 r1127fast_has(T1127* C,T0* a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1127with_capacity(T1127* C,T2 a1);
/*FAST_ARRAY[AGENT_CREATION]*/void r1127next_generation(T1127* C);
/*FAST_ARRAY[AGENT_CREATION]*/T2 r1127count(T1127* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1131remove_last(T1131* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T0* r1131last(T1131* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1131add_last(T1131* C,T0* a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1131mark_native_arrays(T1131* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/T6 r1131is_empty(T1131* C);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1131with_capacity(T1131* C,T2 a1);
/*FAST_ARRAY[HASHED_SET[TYPE]]*/void r1131next_generation(T1131* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1137remove_last(T1137* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T0* r1137last(T1137* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1137add_last(T1137* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1137mark_native_arrays(T1137* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1137clear_count(T1137* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/T6 r1137is_empty(T1137* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1137with_capacity(T1137* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE_MIXER]*/void r1137next_generation(T1137* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147make(T1147* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147ensure_capacity_and_bounds(T1147* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147manifest_put(T1147* C,T2 a1,T0* a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147mark_native_arrays(T1147* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T0* r1147item(T1147* C,T2 a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147clear_all(T1147* C);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147manifest_make(T1147* C,T2 a1,T2 a2);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147set_all_with(T1147* C,T0* a1);
/*ARRAY[ARRAY[INTEGER_8]]*/void r1147next_generation(T1147* C);
/*ARRAY[ARRAY[INTEGER_8]]*/T2 r1147count(T1147* C);
/*ARRAY[INTEGER_8]*/void r1148make(T1148* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1148ensure_capacity_and_bounds(T1148* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INTEGER_8]*/void r1148manifest_put(T1148* C,T2 a1,T1 a2);
/*ARRAY[INTEGER_8]*/T1 r1148item(T1148* C,T2 a1);
/*ARRAY[INTEGER_8]*/void r1148clear_all(T1148* C);
/*ARRAY[INTEGER_8]*/void r1148manifest_make(T1148* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_8]*/void r1148set_all_with(T1148* C,T1 a1);
/*ARRAY[INTEGER_8]*/void r1148next_generation(T1148* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149make(T1149* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1149first(T1149* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149remove_last(T1149* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T0* r1149last(T1149* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T2 r1149fast_first_index_of(T1149* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149add_last(T1149* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149mark_native_arrays(T1149* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149clear_count(T1149* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1149is_empty(T1149* C);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1149valid_index(T1149* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/T6 r1149fast_has(T1149* C,T0* a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149with_capacity(T1149* C,T2 a1);
/*FAST_ARRAY[ANONYMOUS_FEATURE]*/void r1149next_generation(T1149* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1162add_last(T1162* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1162mark_native_arrays(T1162* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1162clear_count(T1162* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T6 r1162is_empty(T1162* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1162with_capacity(T1162* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_2]*/void r1162next_generation(T1162* C);
/*FAST_ARRAY[RUN_FEATURE_2]*/T2 r1162count(T1162* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1163add_last(T1163* C,T0* a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1163mark_native_arrays(T1163* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1163with_capacity(T1163* C,T2 a1);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1163next_generation(T1163* C);
/*FAST_ARRAY[CECIL_ENTRY]*/void r1163do_all(T1163* C,T0* a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1171make(T1171* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1171put(T1171* C,T311 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1171add(T1171* C,T311 a1,T2 a2);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1171move(T1171* C,T2 a1,T2 a2,T2 a3);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1171add_last(T1171* C,T311 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1171is_empty(T1171* C);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/T6 r1171valid_index(T1171* C,T2 a1);
/*FAST_ARRAY[STRING_RECYCLING_ITEM]*/void r1171next_generation(T1171* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1177remove_last(T1177* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T0* r1177last(T1177* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1177add_last(T1177* C,T0* a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1177mark_native_arrays(T1177* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/T6 r1177is_empty(T1177* C);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1177with_capacity(T1177* C,T2 a1);
/*FAST_ARRAY[WEAK_REFERENCE[FAST_ARRAY[FIXED_STRING]]]*/void r1177next_generation(T1177* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1189make(T1189* C,T2 a1);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1189remove_last(T1189* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T0* r1189last(T1189* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1189mark_native_arrays(T1189* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/T6 r1189is_empty(T1189* C);
/*FAST_ARRAY[TEXT_FILE_READ]*/void r1189next_generation(T1189* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205put(T1205* C,T0* a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205ensure_capacity_and_bounds(T1205* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205add_last(T1205* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205mark_native_arrays(T1205* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T0* r1205item(T1205* C,T2 a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205clear_all(T1205* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205set_all_with(T1205* C,T0* a1);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205with_capacity(T1205* C,T2 a1,T2 a2);
/*ARRAY[FORMAL_GENERIC_ARG]*/void r1205next_generation(T1205* C);
/*ARRAY[FORMAL_GENERIC_ARG]*/T2 r1205count(T1205* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1214first(T1214* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1214put(T1214* C,T0* a1,T2 a2);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1214copy(T1214* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1214add_last(T1214* C,T0* a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1214mark_native_arrays(T1214* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T0* r1214twin(T1214* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1214with_capacity(T1214* C,T2 a1);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/void r1214next_generation(T1214* C);
/*FAST_ARRAY[REQUIRE_ASSERTION]*/T2 r1214count(T1214* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1218first(T1218* C);
/*FAST_ARRAY[IFTHEN]*/void r1218remove_last(T1218* C);
/*FAST_ARRAY[IFTHEN]*/void r1218put(T1218* C,T0* a1,T2 a2);
/*FAST_ARRAY[IFTHEN]*/void r1218copy(T1218* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/T0* r1218last(T1218* C);
/*FAST_ARRAY[IFTHEN]*/void r1218add_last(T1218* C,T0* a1);
/*FAST_ARRAY[IFTHEN]*/void r1218mark_native_arrays(T1218* C);
/*FAST_ARRAY[IFTHEN]*/void r1218remove(T1218* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/T6 r1218is_empty(T1218* C);
/*FAST_ARRAY[IFTHEN]*/T0* r1218twin(T1218* C);
/*FAST_ARRAY[IFTHEN]*/void r1218remove_tail(T1218* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1218with_capacity(T1218* C,T2 a1);
/*FAST_ARRAY[IFTHEN]*/void r1218next_generation(T1218* C);
/*FAST_ARRAY[IFTHEN]*/void r1218remove_first(T1218* C);
/*FAST_ARRAY[IFTHEN]*/T2 r1218count(T1218* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1220first(T1220* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220put(T1220* C,T0* a1,T2 a2);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220copy(T1220* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220add_last(T1220* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220mark_native_arrays(T1220* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220append_traversable(T1220* C,T0* a1);
/*FAST_ARRAY[WHEN_ITEM]*/T6 r1220is_empty(T1220* C);
/*FAST_ARRAY[WHEN_ITEM]*/T0* r1220twin(T1220* C);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220with_capacity(T1220* C,T2 a1);
/*FAST_ARRAY[WHEN_ITEM]*/void r1220next_generation(T1220* C);
/*FAST_ARRAY[WHEN_ITEM]*/T2 r1220count(T1220* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1221make(T1221* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1221first(T1221* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1221put(T1221* C,T0* a1,T2 a2);
/*FAST_ARRAY[INSTRUCTION]*/void r1221copy(T1221* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1221last(T1221* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1221add_last(T1221* C,T0* a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1221mark_native_arrays(T1221* C);
/*FAST_ARRAY[INSTRUCTION]*/T0* r1221twin(T1221* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1221with_capacity(T1221* C,T2 a1);
/*FAST_ARRAY[INSTRUCTION]*/void r1221next_generation(T1221* C);
/*FAST_ARRAY[INSTRUCTION]*/void r1221remove_first(T1221* C);
/*FAST_ARRAY[INSTRUCTION]*/T2 r1221count(T1221* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1222put(T1222* C,T0* a1,T2 a2);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1222add_last(T1222* C,T0* a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1222mark_native_arrays(T1222* C);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1222with_capacity(T1222* C,T2 a1);
/*FAST_ARRAY[OPEN_OPERAND]*/void r1222next_generation(T1222* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1223add_last(T1223* C,T0* a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1223mark_native_arrays(T1223* C);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1223with_capacity(T1223* C,T2 a1);
/*FAST_ARRAY[CLOSED_OPERAND]*/void r1223next_generation(T1223* C);
/*FAST_ARRAY[CLASS_NAME]*/void r1224add_last(T1224* C,T0* a1);
/*FAST_ARRAY[CLASS_NAME]*/void r1224mark_native_arrays(T1224* C);
/*FAST_ARRAY[CLASS_NAME]*/void r1224with_capacity(T1224* C,T2 a1);
/*FAST_ARRAY[CLASS_NAME]*/void r1224next_generation(T1224* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1243add_last(T1243* C,T0* a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1243mark_native_arrays(T1243* C);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1243with_capacity(T1243* C,T2 a1);
/*FAST_ARRAY[FEATURE_CLAUSE]*/void r1243next_generation(T1243* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/T0* r1244first(T1244* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1244add_last(T1244* C,T0* a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1244mark_native_arrays(T1244* C);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1244with_capacity(T1244* C,T2 a1);
/*FAST_ARRAY[CREATION_CLAUSE]*/void r1244next_generation(T1244* C);
/*ARRAY[INDEX_CLAUSE]*/void r1248put(T1248* C,T0* a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1248ensure_capacity_and_bounds(T1248* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[INDEX_CLAUSE]*/void r1248add_last(T1248* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1248mark_native_arrays(T1248* C);
/*ARRAY[INDEX_CLAUSE]*/void r1248clear_all(T1248* C);
/*ARRAY[INDEX_CLAUSE]*/void r1248set_all_with(T1248* C,T0* a1);
/*ARRAY[INDEX_CLAUSE]*/void r1248with_capacity(T1248* C,T2 a1,T2 a2);
/*ARRAY[INDEX_CLAUSE]*/void r1248next_generation(T1248* C);
/*ARRAY[INDEX_CLAUSE]*/T2 r1248count(T1248* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1351add_last(T1351* C,T0* a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1351mark_native_arrays(T1351* C);
/*FAST_ARRAY[RENAME_PAIR]*/void r1351with_capacity(T1351* C,T2 a1);
/*FAST_ARRAY[RENAME_PAIR]*/void r1351next_generation(T1351* C);
/*FAST_ARRAY[RENAME_PAIR]*/T2 r1351count(T1351* C);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1363make(T1363* C,T2 a1);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1363add_last(T1363* C,T0* a1);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1363mark_native_arrays(T1363* C);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1363clear_count(T1363* C);
/*FAST_ARRAY[AVL_SET_NODE[LIVE_TYPE]]*/void r1363next_generation(T1363* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1391make(T1391* C,T2 a1);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1391put(T1391* C,T0* a1,T2 a2);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1391mark_native_arrays(T1391* C);
/*FAST_ARRAY[LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]]*/void r1391next_generation(T1391* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1408make(T1408* C,T2 a1);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1408mark_native_arrays(T1408* C);
/*FAST_ARRAY[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1408next_generation(T1408* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1434resize(T1434* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1434add_last(T1434* C,T0* a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1434mark_native_arrays(T1434* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1434with_capacity(T1434* C,T2 a1);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/void r1434next_generation(T1434* C);
/*FAST_ARRAY[FORMAL_ARG_LIST]*/T2 r1434count(T1434* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1436remove_last(T1436* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1436put(T1436* C,T0* a1,T2 a2);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/T0* r1436last(T1436* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1436add_last(T1436* C,T0* a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1436mark_native_arrays(T1436* C);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1436with_capacity(T1436* C,T2 a1);
/*FAST_ARRAY[FAST_ARRAY[E_OLD]]*/void r1436next_generation(T1436* C);
/*FAST_ARRAY[E_OLD]*/void r1437add_last(T1437* C,T0* a1);
/*FAST_ARRAY[E_OLD]*/void r1437mark_native_arrays(T1437* C);
/*FAST_ARRAY[E_OLD]*/void r1437with_capacity(T1437* C,T2 a1);
/*FAST_ARRAY[E_OLD]*/void r1437next_generation(T1437* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1439add_last(T1439* C,T0* a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1439mark_native_arrays(T1439* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1439with_capacity(T1439* C,T2 a1);
/*FAST_ARRAY[ADDRESS_OF]*/void r1439next_generation(T1439* C);
/*FAST_ARRAY[ADDRESS_OF]*/void r1439do_all(T1439* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1445remove_last(T1445* C);
/*FAST_ARRAY[INLINE_MEMO]*/T0* r1445last(T1445* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1445add_last(T1445* C,T0* a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1445mark_native_arrays(T1445* C);
/*FAST_ARRAY[INLINE_MEMO]*/T6 r1445is_empty(T1445* C);
/*FAST_ARRAY[INLINE_MEMO]*/void r1445with_capacity(T1445* C,T2 a1);
/*FAST_ARRAY[INLINE_MEMO]*/void r1445next_generation(T1445* C);
/*ARRAY[FEATURE_STAMP]*/void r1447put(T1447* C,T0* a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1447ensure_capacity_and_bounds(T1447* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FEATURE_STAMP]*/void r1447add_last(T1447* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1447mark_native_arrays(T1447* C);
/*ARRAY[FEATURE_STAMP]*/T0* r1447item(T1447* C,T2 a1);
/*ARRAY[FEATURE_STAMP]*/void r1447clear_all(T1447* C);
/*ARRAY[FEATURE_STAMP]*/T6 r1447is_empty(T1447* C);
/*ARRAY[FEATURE_STAMP]*/void r1447set_all_with(T1447* C,T0* a1);
/*ARRAY[FEATURE_STAMP]*/void r1447with_capacity(T1447* C,T2 a1,T2 a2);
/*ARRAY[FEATURE_STAMP]*/void r1447next_generation(T1447* C);
/*ARRAY[FEATURE_STAMP]*/T2 r1447count(T1447* C);
/*FAST_ARRAY[POINTER]*/void r1448make(T1448* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1448put(T1448* C,T8 a1,T2 a2);
/*FAST_ARRAY[POINTER]*/void r1448manifest_put(T1448* C,T2 a1,T8 a2);
/*FAST_ARRAY[POINTER]*/void r1448manifest_make(T1448* C,T2 a1);
/*FAST_ARRAY[POINTER]*/void r1448next_generation(T1448* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1461make(T1461* C,T2 a1);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1461mark_native_arrays(T1461* C);
/*FAST_ARRAY[AVL_SET_NODE[POSITION]]*/void r1461next_generation(T1461* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487make(T1487* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487resize(T1487* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487remove_last(T1487* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487put(T1487* C,T0* a1,T2 a2);
/*FAST_ARRAY[CODE_CONTEXT]*/T0* r1487last(T1487* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487add_last(T1487* C,T0* a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487mark_native_arrays(T1487* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T6 r1487is_empty(T1487* C);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487with_capacity(T1487* C,T2 a1);
/*FAST_ARRAY[CODE_CONTEXT]*/void r1487next_generation(T1487* C);
/*FAST_ARRAY[CODE_CONTEXT]*/T2 r1487count(T1487* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488make(T1488* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488resize(T1488* C,T2 a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488put(T1488* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488ensure_capacity_and_bounds(T1488* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488add_last(T1488* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488mark_native_arrays(T1488* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T0* r1488item(T1488* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488clear_all(T1488* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488set_all_with(T1488* C,T0* a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488force(T1488* C,T0* a1,T2 a2);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T6 r1488valid_index(T1488* C,T2 a1);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/void r1488next_generation(T1488* C);
/*ARRAY[FAST_ARRAY[CODE_CONTEXT]]*/T2 r1488count(T1488* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1494add_last(T1494* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1494mark_native_arrays(T1494* C);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1494with_capacity(T1494* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_6]*/void r1494next_generation(T1494* C);
/*ARRAY[RUN_FEATURE_2]*/void r1500swap(T1500* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1500put(T1500* C,T0* a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1500ensure_capacity_and_bounds(T1500* C,T2 a1,T2 a2,T2 a3);
/*ARRAY[RUN_FEATURE_2]*/void r1500add_last(T1500* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1500mark_native_arrays(T1500* C);
/*ARRAY[RUN_FEATURE_2]*/T0* r1500item(T1500* C,T2 a1);
/*ARRAY[RUN_FEATURE_2]*/void r1500clear_all(T1500* C);
/*ARRAY[RUN_FEATURE_2]*/void r1500set_all_with(T1500* C,T0* a1);
/*ARRAY[RUN_FEATURE_2]*/void r1500with_capacity(T1500* C,T2 a1,T2 a2);
/*ARRAY[RUN_FEATURE_2]*/void r1500next_generation(T1500* C);
/*ARRAY[RUN_FEATURE_2]*/T2 r1500count(T1500* C);
/*ARRAY[RUN_FEATURE_2]*/void r1500do_all(T1500* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1507add_last(T1507* C,T0* a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1507mark_native_arrays(T1507* C);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1507with_capacity(T1507* C,T2 a1);
/*FAST_ARRAY[RUN_FEATURE_5]*/void r1507next_generation(T1507* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1508add_last(T1508* C,T0* a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1508mark_native_arrays(T1508* C);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1508with_capacity(T1508* C,T2 a1);
/*FAST_ARRAY[INTERNAL_C_LOCAL]*/void r1508next_generation(T1508* C);
/*FAST_ARRAY[CHARACTER]*/void r1537make(T1537* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1537resize(T1537* C,T2 a1);
/*FAST_ARRAY[CHARACTER]*/void r1537put(T1537* C,T3 a1,T2 a2);
/*FAST_ARRAY[CHARACTER]*/void r1537next_generation(T1537* C);
/*FAST_ARRAY[CHARACTER]*/T2 r1537count(T1537* C);
extern T0*oBC295common_free_nodes;
extern int fBC295common_free_nodes;
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005common_free_nodes(void);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005make(T1005* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005key(T1005* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005put(T1005* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005new_node(T1005* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005add(T1005* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005at(T1005* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005set_cache_user(T1005* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r1005prime_capacity(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005buckets_item(T1043 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r1005should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r1005key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005reference_at(T1005* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r1005prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005dispose_node(T1005* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005item(T1005* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005remove(T1005* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005create_with_capacity(T1005* C,T2 a1);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005increase_capacity(T1005* C);
/*HASHED_DICTIONARY[STRING,STRING]*/void r1005next_generation(T1005* C);
/*HASHED_DICTIONARY[STRING,STRING]*/T2 r1005hash_code(T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T6 r1005has(T1005* C,T0* a1);
/*HASHED_DICTIONARY[STRING,STRING]*/T0* r1005new_iterator_on_keys(T1005* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1011common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1011make(T1011* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1011key(T1011* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1011new_node(T1011* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1011add(T1011* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1011set_cache_user(T1011* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1011prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1011buckets_item(T1081 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r1011should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1011prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T0* r1011item(T1011* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1011create_with_capacity(T1011* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1011increase_capacity(T1011* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T6 r1011fast_has(T1011* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/void r1011next_generation(T1011* C);
/*HASHED_DICTIONARY[RUN_FEATURE,NATIVE]*/T2 r1011hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1014common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1014make(T1014* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1014put(T1014* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1014new_node(T1014* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1014prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1014buckets_item(T1097 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r1014should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T6 r1014key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T0* r1014reference_at(T1014* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1014prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1014create_with_capacity(T1014* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1014increase_capacity(T1014* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1014next_generation(T1014* C);
/*HASHED_DICTIONARY[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/T2 r1014hash_code(T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1015common_free_nodes(void);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015make(T1015* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015put(T1015* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1015new_node(T1015* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015add(T1015* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015set_cache_user(T1015* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1015prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1015buckets_item(T1100 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r1015should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T6 r1015key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1015reference_at(T1015* C,T0* a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1015prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T0* r1015item(T1015* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015create_with_capacity(T1015* C,T2 a1);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015increase_capacity(T1015* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/void r1015next_generation(T1015* C);
/*HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING]*/T2 r1015hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1021make(T1021* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1021common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1021new_node(T1021* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1021add(T1021* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1021prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1021buckets_item(T1135 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r1021should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1021prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1021create_with_capacity(T1021* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1021increase_capacity(T1021* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T6 r1021fast_has(T1021* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1021with_capacity(T1021* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/void r1021next_generation(T1021* C);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T2 r1021hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,HASHED_STRING]*/T0* r1021fast_reference_at(T1021* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1024common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1024key(T1024* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1024new_node(T1024* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1024add(T1024* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1024set_cache_user(T1024* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1024prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1024buckets_item(T1152 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r1024should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T6 r1024key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1024reference_at(T1024* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1024prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1024upper(T1024* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T0* r1024item(T1024* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1024create_with_capacity(T1024* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1024increase_capacity(T1024* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1024with_capacity(T1024* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1024next_generation(T1024* C);
/*HASHED_DICTIONARY[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/T2 r1024hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1025common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1025key(T1025* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1025fast_key_at(T1025* C,T10 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1025new_node(T1025* C,T10 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025add(T1025* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025set_cache_user(T1025* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1025prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T0* r1025buckets_item(T1155 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r1025should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1025prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r1025item(T1025* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T10 r1025fast_at(T1025* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025create_with_capacity(T1025* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025increase_capacity(T1025* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T6 r1025fast_has(T1025* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025with_capacity(T1025* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025next_generation(T1025* C);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/void r1025fast_put(T1025* C,T10 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_16,HASHED_STRING]*/T2 r1025hash_code(T0* a1);
extern T0*oBC333common_free_nodes;
extern int fBC333common_free_nodes;
/*HASHED_SET[HASHED_STRING]*/T0* r1026common_free_nodes(void);
/*HASHED_SET[HASHED_STRING]*/T0* r1026new_node(T1026* C,T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T6 r1026safe_equal(T0* a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/void r1026add(T1026* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/void r1026manifest_put(T1026* C,T2 a1,T0* a2);
/*HASHED_SET[HASHED_STRING]*/T2 r1026prime_capacity(T2 a1);
/*HASHED_SET[HASHED_STRING]*/T6 r1026should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[HASHED_STRING]*/T0* r1026reference_at(T1026* C,T0* a1);
/*HASHED_SET[HASHED_STRING]*/T2 r1026prime_number_ceiling(T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1026manifest_make(T1026* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1026create_with_capacity(T1026* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1026increase_capacity(T1026* C);
/*HASHED_SET[HASHED_STRING]*/void r1026with_capacity(T1026* C,T2 a1);
/*HASHED_SET[HASHED_STRING]*/void r1026next_generation(T1026* C);
/*HASHED_SET[HASHED_STRING]*/T2 r1026hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1030common_free_nodes(void);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030make(T1030* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1030key(T1030* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1030new_node(T1030* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030add(T1030* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030set_cache_user(T1030* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1030prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1030buckets_item(T1166 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1030should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1030key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1030prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T0* r1030item(T1030* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030create_with_capacity(T1030* C,T2 a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030increase_capacity(T1030* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030next_generation(T1030* C);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T2 r1030hash_code(T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/void r1030do_all(T1030* C,T0* a1);
/*HASHED_DICTIONARY[CECIL_FILE,STRING]*/T6 r1030has(T1030* C,T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1032quick_sort_region(T0* a1,T2 a2,T2 a3);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1032lt(T338 a1,T338 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1032quick_sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1032lte(T338 a1,T338 a2);
/*REVERSE_COLLECTION_SORTER[POSITION]*/void r1032sort(T0* a1);
/*REVERSE_COLLECTION_SORTER[POSITION]*/T6 r1032is_sorted(T0* a1);
/*COLLECTION_SORTER[STRING]*/void r1034add(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1034quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[STRING]*/T2 r1034insert_index(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/T6 r1034lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1034quick_sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r1034lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[STRING]*/void r1034sort(T0* a1);
/*COLLECTION_SORTER[STRING]*/T6 r1034is_sorted(T0* a1);
/*STACK[STRING]*/void r1035make(T1035* C);
/*STACK[STRING]*/void r1035mark_native_arrays(T1035* C);
/*STACK[STRING]*/void r1035push(T1035* C,T0* a1);
/*STACK[STRING]*/void r1035pop(T1035* C);
/*STACK[STRING]*/T0* r1035top(T1035* C);
/*STACK[STRING]*/void r1035with_capacity(T1035* C,T2 a1);
/*STACK[STRING]*/void r1035next_generation(T1035* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1037common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1037make(T1037* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1037new_node(T1037* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1037add(T1037* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1037prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1037buckets_item(T1173 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r1037should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T6 r1037key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T0* r1037reference_at(T1037* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1037prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1037create_with_capacity(T1037* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1037increase_capacity(T1037* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1037next_generation(T1037* C);
/*HASHED_DICTIONARY[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/T2 r1037hash_code(T2 a1);
/*HASHED_DICTIONARY_NODE[STRING,STRING]*/void r1039make(T1039* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[STRING,STRING]]*/void r1042set_item(T1042* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]]*/void r1044set_item(T1044* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1045make(T1045* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1046new_node(T1046* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1046add(T1046* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1046prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1046buckets_item(T1179 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T6 r1046should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1046special_common_dictionary(T1046* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1046prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1046increase_capacity(T1046* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/void r1046next_generation(T1046* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T2 r1046hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_DICTIONARY_NODE],STRING]*/T0* r1046fast_reference_at(T1046* C,T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1049quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1049lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1049quick_sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1049lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[FIXED_STRING]*/void r1049sort(T0* a1);
/*COLLECTION_SORTER[FIXED_STRING]*/T6 r1049is_sorted(T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1056common_free_nodes(void);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1056make(T1056* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1056new_node(T1056* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1056add(T1056* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1056prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1056buckets_item(T1193 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r1056should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T6 r1056key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T0* r1056reference_at(T1056* C,T0* a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1056prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1056create_with_capacity(T1056* C,T2 a1);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1056increase_capacity(T1056* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/void r1056next_generation(T1056* C);
/*HASHED_DICTIONARY[CLASSES,STRING]*/T2 r1056hash_code(T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1058common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1058make(T1058* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1058new_node(T1058* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1058add(T1058* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1058prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1058buckets_item(T1196 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r1058should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T6 r1058key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T0* r1058reference_at(T1058* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1058prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1058create_with_capacity(T1058* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1058increase_capacity(T1058* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/void r1058next_generation(T1058* C);
/*HASHED_DICTIONARY[FAST_ARRAY[STRING],CLASS_NAME]*/T2 r1058hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T0* r1060common_free_nodes(void);
/*HASHED_SET[CLASS_NAME]*/void r1060make(T1060* C);
/*HASHED_SET[CLASS_NAME]*/T0* r1060new_node(T1060* C,T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/void r1060add(T1060* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1060safe_equal(T0* a1,T0* a2);
/*HASHED_SET[CLASS_NAME]*/T2 r1060prime_capacity(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1060should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[CLASS_NAME]*/T2 r1060prime_number_ceiling(T2 a1);
/*HASHED_SET[CLASS_NAME]*/T0* r1060dispose_node(T1060* C,T0* a1);
/*HASHED_SET[CLASS_NAME]*/void r1060clear_count(T1060* C);
/*HASHED_SET[CLASS_NAME]*/void r1060create_with_capacity(T1060* C,T2 a1);
/*HASHED_SET[CLASS_NAME]*/void r1060increase_capacity(T1060* C);
/*HASHED_SET[CLASS_NAME]*/void r1060next_generation(T1060* C);
/*HASHED_SET[CLASS_NAME]*/T2 r1060hash_code(T0* a1);
/*HASHED_SET[CLASS_NAME]*/T6 r1060has(T1060* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1062common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1062make(T1062* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1062put(T1062* C,T2 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1062new_node(T1062* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1062at(T1062* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1062internal_key(T1062* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1062prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T0* r1062buckets_item(T1202 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1062should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1062key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1062prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1062create_with_capacity(T1062* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1062increase_capacity(T1062* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/void r1062next_generation(T1062* C);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T2 r1062hash_code(T0* a1);
/*HASHED_DICTIONARY[INTEGER_32,CLASS_NAME]*/T6 r1062has(T1062* C,T0* a1);
/*STACK[TMP_FEATURE]*/void r1068make(T1068* C);
/*STACK[TMP_FEATURE]*/void r1068mark_native_arrays(T1068* C);
/*STACK[TMP_FEATURE]*/void r1068push(T1068* C,T0* a1);
/*STACK[TMP_FEATURE]*/T6 r1068is_empty(T1068* C);
/*STACK[TMP_FEATURE]*/void r1068pop(T1068* C);
/*STACK[TMP_FEATURE]*/T0* r1068top(T1068* C);
/*STACK[TMP_FEATURE]*/void r1068with_capacity(T1068* C,T2 a1);
/*STACK[TMP_FEATURE]*/void r1068next_generation(T1068* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r1077common_free_nodes(void);
/*HASHED_SET[LIVE_TYPE]*/void r1077make(T1077* C);
/*HASHED_SET[LIVE_TYPE]*/T0* r1077new_node(T1077* C,T0* a1,T0* a2);
/*HASHED_SET[LIVE_TYPE]*/void r1077set_cache_user(T1077* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T2 r1077prime_capacity(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T6 r1077should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[LIVE_TYPE]*/T2 r1077prime_number_ceiling(T2 a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r1077dispose_node(T1077* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/T0* r1077item(T1077* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1077clear_count(T1077* C);
/*HASHED_SET[LIVE_TYPE]*/void r1077create_with_capacity(T1077* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1077increase_capacity(T1077* C);
/*HASHED_SET[LIVE_TYPE]*/T6 r1077fast_has(T1077* C,T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r1077with_capacity(T1077* C,T2 a1);
/*HASHED_SET[LIVE_TYPE]*/void r1077next_generation(T1077* C);
/*HASHED_SET[LIVE_TYPE]*/T2 r1077hash_code(T0* a1);
/*HASHED_SET[LIVE_TYPE]*/void r1077fast_add(T1077* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]]*/void r1079set_item(T1079* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,NATIVE]*/void r1080make(T1080* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084key(T1084* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084new_node(T1084* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084fast_remove(T1084* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084add(T1084* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084set_cache_user(T1084* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1084prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084buckets_item(T1234 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1084should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1084key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1084prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1084upper(T1084* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084dispose_node(T1084* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084item(T1084* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T0* r1084fast_at(T1084* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084remove(T1084* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084clear_count(T1084* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084create_with_capacity(T1084* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084increase_capacity(T1084* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T6 r1084fast_has(T1084* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084with_capacity(T1084* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084next_generation(T1084* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1084fast_put(T1084* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_STAMP]*/T2 r1084hash_code(T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1093mark_native_arrays(T1093* C);
/*STACK[ANONYMOUS_FEATURE]*/void r1093push(T1093* C,T0* a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1093pop(T1093* C);
/*STACK[ANONYMOUS_FEATURE]*/T0* r1093top(T1093* C);
/*STACK[ANONYMOUS_FEATURE]*/void r1093with_capacity(T1093* C,T2 a1);
/*STACK[ANONYMOUS_FEATURE]*/void r1093next_generation(T1093* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1094common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1094new_node(T1094* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1094add(T1094* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1094prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T0* r1094buckets_item(T1240 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r1094should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1094prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T1 r1094fast_at(T1094* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1094create_with_capacity(T1094* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1094increase_capacity(T1094* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T6 r1094fast_has(T1094* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1094with_capacity(T1094* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/void r1094next_generation(T1094* C);
/*HASHED_DICTIONARY[INTEGER_8,CLASS_TEXT]*/T2 r1094hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095make(T1095* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095key(T1095* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095new_node(T1095* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095add(T1095* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095at(T1095* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095set_cache_user(T1095* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095internal_key(T1095* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1095prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095buckets_item(T1247 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1095should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1095key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095reference_at(T1095* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1095prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T0* r1095item(T1095* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095create_with_capacity(T1095* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095increase_capacity(T1095* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1095next_generation(T1095* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T2 r1095hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,FEATURE_NAME]*/T6 r1095has(T1095* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]*/void r1096make(T1096* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_DICTIONARY[CLASS_TEXT,HASHED_STRING],STRING]]*/void r1098set_item(T1098* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]*/void r1099make(T1099* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASS_TEXT,HASHED_STRING]]*/void r1101set_item(T1101* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1103common_free_nodes(void);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1103new_node(T1103* C,T1 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1103add(T1103* C,T1 a1,T0* a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1103prime_capacity(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T0* r1103buckets_item(T1249 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r1103should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1103prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T1 r1103fast_at(T1103* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1103create_with_capacity(T1103* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1103increase_capacity(T1103* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T6 r1103fast_has(T1103* C,T0* a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1103with_capacity(T1103* C,T2 a1);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/void r1103next_generation(T1103* C);
/*HASHED_DICTIONARY[INTEGER_8,TYPE]*/T2 r1103hash_code(T0* a1);
extern T0*oBC690common_free_nodes;
extern int fBC690common_free_nodes;
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107common_free_nodes(void);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107key(T1107* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107fast_key_at(T1107* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107new_node(T1107* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1107add(T1107* C,T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1107set_cache_user(T1107* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107internal_key(T1107* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1107prime_capacity(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1107should_increase_capacity(T2 a1,T2 a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1107key_safe_equal(T0* a1,T0* a2);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107reference_at(T1107* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1107prime_number_ceiling(T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1107item(T1107* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1107increase_capacity(T1107* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1107with_capacity(T1107* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1107next_generation(T1107* C);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1107basic_make(T1107* C,T2 a1);
/*HASHED_BIJECTIVE_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1107has(T1107* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1110common_free_nodes(void);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1110new_node(T1110* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1110add(T1110* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1110prime_capacity(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1110buckets_item(T1262 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r1110should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1110prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1110create_with_capacity(T1110* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1110increase_capacity(T1110* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T6 r1110fast_has(T1110* C,T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1110with_capacity(T1110* C,T2 a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/void r1110next_generation(T1110* C);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T2 r1110hash_code(T0* a1);
/*HASHED_DICTIONARY[RUN_FEATURE,TYPE]*/T0* r1110fast_reference_at(T1110* C,T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1115common_free_nodes(void);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1115new_node(T1115* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1115add(T1115* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1115set_cache_user(T1115* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1115prime_capacity(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1115buckets_item(T1268 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T6 r1115should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1115prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1115item(T1115* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1115create_with_capacity(T1115* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1115increase_capacity(T1115* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1115with_capacity(T1115* C,T2 a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/void r1115next_generation(T1115* C);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T2 r1115hash_code(T0* a1);
/*HASHED_DICTIONARY[GRAPH_NODE,TYPE]*/T0* r1115fast_reference_at(T1115* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r1117common_free_nodes(void);
/*HASHED_SET[TYPE]*/void r1117make(T1117* C);
/*HASHED_SET[TYPE]*/T0* r1117new_node(T1117* C,T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/T6 r1117safe_equal(T0* a1,T0* a2);
/*HASHED_SET[TYPE]*/void r1117add(T1117* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1117set_cache_user(T1117* C,T2 a1);
/*HASHED_SET[TYPE]*/T2 r1117prime_capacity(T2 a1);
/*HASHED_SET[TYPE]*/T6 r1117should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[TYPE]*/T2 r1117prime_number_ceiling(T2 a1);
/*HASHED_SET[TYPE]*/T0* r1117dispose_node(T1117* C,T0* a1);
/*HASHED_SET[TYPE]*/T0* r1117item(T1117* C,T2 a1);
/*HASHED_SET[TYPE]*/void r1117remove(T1117* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1117clear_count(T1117* C);
/*HASHED_SET[TYPE]*/void r1117create_with_capacity(T1117* C,T2 a1);
/*HASHED_SET[TYPE]*/void r1117increase_capacity(T1117* C);
/*HASHED_SET[TYPE]*/void r1117next_generation(T1117* C);
/*HASHED_SET[TYPE]*/T2 r1117hash_code(T0* a1);
/*HASHED_SET[TYPE]*/T6 r1117has(T1117* C,T0* a1);
/*HASHED_SET[TYPE]*/void r1117fast_add(T1117* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1121common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121put(T1121* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1121new_node(T1121* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121set_cache_user(T1121* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1121prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1121buckets_item(T1275 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1121should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1121key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1121prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1121dispose_node(T1121* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T0* r1121item(T1121* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121clear_count(T1121* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121create_with_capacity(T1121* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121increase_capacity(T1121* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121with_capacity(T1121* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/void r1121next_generation(T1121* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T2 r1121hash_code(T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,STRING]*/T6 r1121has(T1121* C,T0* a1);
/*HASHED_SET[STRING]*/void r1122make(T1122* C);
/*HASHED_SET[STRING]*/T0* r1122common_free_nodes(void);
/*HASHED_SET[STRING]*/T0* r1122new_node(T1122* C,T0* a1,T0* a2);
/*HASHED_SET[STRING]*/T6 r1122safe_equal(T0* a1,T0* a2);
/*HASHED_SET[STRING]*/void r1122add(T1122* C,T0* a1);
/*HASHED_SET[STRING]*/void r1122manifest_put(T1122* C,T2 a1,T0* a2);
/*HASHED_SET[STRING]*/T2 r1122prime_capacity(T2 a1);
/*HASHED_SET[STRING]*/T6 r1122should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[STRING]*/T2 r1122prime_number_ceiling(T2 a1);
/*HASHED_SET[STRING]*/T0* r1122dispose_node(T1122* C,T0* a1);
/*HASHED_SET[STRING]*/void r1122clear_count(T1122* C);
/*HASHED_SET[STRING]*/void r1122manifest_make(T1122* C,T2 a1);
/*HASHED_SET[STRING]*/void r1122create_with_capacity(T1122* C,T2 a1);
/*HASHED_SET[STRING]*/void r1122increase_capacity(T1122* C);
/*HASHED_SET[STRING]*/T6 r1122fast_has(T1122* C,T0* a1);
/*HASHED_SET[STRING]*/void r1122with_capacity(T1122* C,T2 a1);
/*HASHED_SET[STRING]*/void r1122next_generation(T1122* C);
/*HASHED_SET[STRING]*/T2 r1122hash_code(T0* a1);
/*HASHED_SET[STRING]*/T6 r1122has(T1122* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1123common_free_nodes(void);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123put(T1123* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1123new_node(T1123* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123set_cache_user(T1123* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1123prime_capacity(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1123buckets_item(T1281 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r1123should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T6 r1123key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1123reference_at(T1123* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1123prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1123dispose_node(T1123* C,T0* a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T0* r1123item(T1123* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123clear_count(T1123* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123create_with_capacity(T1123* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123increase_capacity(T1123* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123with_capacity(T1123* C,T2 a1);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/void r1123next_generation(T1123* C);
/*HASHED_DICTIONARY[MANIFEST_STRING,MANIFEST_STRING]*/T2 r1123hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1124common_free_nodes(void);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124make(T1124* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1124new_node(T1124* C,T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r1124safe_equal(T0* a1,T0* a2);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124add(T1124* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124set_cache_user(T1124* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1124prime_capacity(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T6 r1124should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1124prime_number_ceiling(T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1124dispose_node(T1124* C,T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/T0* r1124item(T1124* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124clear_count(T1124* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124create_with_capacity(T1124* C,T2 a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124increase_capacity(T1124* C);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124next_generation(T1124* C);
/*HASHED_SET[MANIFEST_GENERIC]*/T2 r1124hash_code(T0* a1);
/*HASHED_SET[MANIFEST_GENERIC]*/void r1124do_all(T1124* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1126common_free_nodes(void);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1126make(T1126* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1126key(T1126* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1126new_node(T1126* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1126add(T1126* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1126set_cache_user(T1126* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1126prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1126buckets_item(T1288 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r1126should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T6 r1126key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1126reference_at(T1126* C,T0* a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1126prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T0* r1126item(T1126* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1126create_with_capacity(T1126* C,T2 a1);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1126increase_capacity(T1126* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1126next_generation(T1126* C);
/*HASHED_DICTIONARY[FAST_ARRAY[AGENT_CREATION],TYPE]*/T2 r1126hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1129common_free_nodes(void);
/*HASHED_SET[AGENT_ARGS]*/void r1129make(T1129* C);
/*HASHED_SET[AGENT_ARGS]*/T0* r1129new_node(T1129* C,T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/T6 r1129safe_equal(T0* a1,T0* a2);
/*HASHED_SET[AGENT_ARGS]*/void r1129add(T1129* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/void r1129set_cache_user(T1129* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T2 r1129prime_capacity(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r1129should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[AGENT_ARGS]*/T2 r1129prime_number_ceiling(T2 a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1129dispose_node(T1129* C,T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T0* r1129item(T1129* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r1129clear_count(T1129* C);
/*HASHED_SET[AGENT_ARGS]*/void r1129create_with_capacity(T1129* C,T2 a1);
/*HASHED_SET[AGENT_ARGS]*/void r1129increase_capacity(T1129* C);
/*HASHED_SET[AGENT_ARGS]*/void r1129next_generation(T1129* C);
/*HASHED_SET[AGENT_ARGS]*/T2 r1129hash_code(T0* a1);
/*HASHED_SET[AGENT_ARGS]*/T6 r1129has(T1129* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130common_free_nodes(void);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130make(T1130* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130key(T1130* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130new_node(T1130* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130set_cache_user(T1130* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1130prime_capacity(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130buckets_item(T1293 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T6 r1130should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1130prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130dispose_node(T1130* C,T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130item(T1130* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130clear_count(T1130* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130create_with_capacity(T1130* C,T2 a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130increase_capacity(T1130* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130next_generation(T1130* C);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/void r1130fast_put(T1130* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T2 r1130hash_code(T0* a1);
/*HASHED_DICTIONARY[HASHED_SET[TYPE],TYPE]*/T0* r1130fast_reference_at(T1130* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]]*/void r1133set_item(T1133* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,HASHED_STRING]*/void r1134make(T1134* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1136common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1136new_node(T1136* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1136add(T1136* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1136set_cache_user(T1136* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1136prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1136buckets_item(T1296 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1136should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T6 r1136key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1136reference_at(T1136* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1136prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T0* r1136item(T1136* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1136create_with_capacity(T1136* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1136increase_capacity(T1136* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1136with_capacity(T1136* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/void r1136next_generation(T1136* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,FEATURE_NAME]*/T2 r1136hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1138common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1138new_node(T1138* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1138add(T1138* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1138prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1138buckets_item(T1302 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1138should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1138key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1138reference_at(T1138* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1138prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T0* r1138dispose_node(T1138* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1138clear_count(T1138* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1138create_with_capacity(T1138* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1138increase_capacity(T1138* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1138with_capacity(T1138* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1138next_generation(T1138* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T2 r1138hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/T6 r1138has(T1138* C,T0* a1);
/*QUEUE[TYPE]*/T0* r1139first(T1139* C);
/*QUEUE[TYPE]*/void r1139put(T1139* C,T0* a1,T2 a2);
/*QUEUE[TYPE]*/void r1139add(T1139* C,T0* a1);
/*QUEUE[TYPE]*/void r1139move(T1139* C,T2 a1,T2 a2,T2 a3);
/*QUEUE[TYPE]*/void r1139collection_with_capacity(T1139* C,T2 a1,T2 a2);
/*QUEUE[TYPE]*/T2 r1139wrap_point(T1139* C);
/*QUEUE[TYPE]*/void r1139mark_native_arrays(T1139* C);
/*QUEUE[TYPE]*/void r1139make_space_for_one(T1139* C);
/*QUEUE[TYPE]*/void r1139squeeze_bubble(T1139* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*QUEUE[TYPE]*/T0* r1139item(T1139* C,T2 a1);
/*QUEUE[TYPE]*/T2 r1139storage_upper(T1139* C);
/*QUEUE[TYPE]*/void r1139remove(T1139* C);
/*QUEUE[TYPE]*/T6 r1139is_empty(T1139* C);
/*QUEUE[TYPE]*/T6 r1139is_wrapped(T1139* C);
/*QUEUE[TYPE]*/T2 r1139storage_index(T1139* C,T2 a1);
/*QUEUE[TYPE]*/void r1139with_capacity(T1139* C,T2 a1);
/*QUEUE[TYPE]*/void r1139next_generation(T1139* C);
/*QUEUE[TYPE]*/T2 r1139count(T1139* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1140common_free_nodes(void);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140make(T1140* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1140new_node(T1140* C,T335 a1,T0* a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r1140safe_equal(T335 a1,T335 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140add(T1140* C,T335 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140set_cache_user(T1140* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1140prime_capacity(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T6 r1140should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1140prime_number_ceiling(T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T0* r1140dispose_node(T1140* C,T0* a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T335 r1140item(T1140* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140clear_count(T1140* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140create_with_capacity(T1140* C,T2 a1);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140increase_capacity(T1140* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/void r1140next_generation(T1140* C);
/*HASHED_SET[ABSOLUTE_FEATURE_NAME]*/T2 r1140hash_code(T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141make(T1141* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T335 r1141key(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141put(T1141* C,T0* a1,T335 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141new_node(T1141* C,T0* a1,T335 a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141add(T1141* C,T0* a1,T335 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141at(T1141* C,T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141set_cache_user(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1141prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141buckets_item(T1308 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1141should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1141key_safe_equal(T335 a1,T335 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141reference_at(T1141* C,T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1141prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141dispose_node(T1141* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T0* r1141item(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141remove(T1141* C,T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141clear_count(T1141* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141create_with_capacity(T1141* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141increase_capacity(T1141* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1141next_generation(T1141* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T2 r1141hash_code(T335 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/T6 r1141has(T1141* C,T335 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1146common_free_nodes(void);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1146new_node(T1146* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1146add(T1146* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1146prime_capacity(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1146buckets_item(T1311 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r1146should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1146prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1146fast_at(T1146* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1146create_with_capacity(T1146* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1146increase_capacity(T1146* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T6 r1146fast_has(T1146* C,T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1146with_capacity(T1146* C,T2 a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1146next_generation(T1146* C);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/void r1146fast_put(T1146* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T2 r1146hash_code(T0* a1);
/*HASHED_DICTIONARY[ANONYMOUS_FEATURE,TYPE]*/T0* r1146fast_reference_at(T1146* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]]*/void r1150set_item(T1150* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[INTEGER_16,HASHED_STRING],STRING]*/void r1151make(T1151* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]]*/void r1153set_item(T1153* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_16,HASHED_STRING]*/void r1154make(T1154* C,T10 a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[HASHED_STRING]*/void r1157make(T1157* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[HASHED_STRING]]*/void r1160set_item(T1160* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1161common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1161make(T1161* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1161new_node(T1161* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1161add(T1161* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1161prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1161buckets_item(T1316 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T6 r1161should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1161prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1161create_with_capacity(T1161* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1161increase_capacity(T1161* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1161next_generation(T1161* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T2 r1161hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/T0* r1161fast_reference_at(T1161* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]]*/void r1164set_item(T1164* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CECIL_FILE,STRING]*/void r1165make(T1165* C,T0* a1,T0* a2,T0* a3);
/*RING_ARRAY[SE_CONFIG]*/void r1168make(T1168* C,T2 a1,T2 a2);
/*RING_ARRAY[SE_CONFIG]*/void r1168add_first(T1168* C,T0* a1);
/*RING_ARRAY[SE_CONFIG]*/void r1168put(T1168* C,T0* a1,T2 a2);
/*RING_ARRAY[SE_CONFIG]*/void r1168move(T1168* C,T2 a1,T2 a2,T2 a3);
/*RING_ARRAY[SE_CONFIG]*/T2 r1168wrap_point(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/void r1168mark_native_arrays(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/void r1168make_space_for_one(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/void r1168squeeze_bubble(T1168* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*RING_ARRAY[SE_CONFIG]*/T0* r1168item(T1168* C,T2 a1);
/*RING_ARRAY[SE_CONFIG]*/T2 r1168storage_upper(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/void r1168clear_all(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/T6 r1168is_empty(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/T6 r1168is_wrapped(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/T2 r1168storage_index(T1168* C,T2 a1);
/*RING_ARRAY[SE_CONFIG]*/void r1168set_all_with(T1168* C,T0* a1);
/*RING_ARRAY[SE_CONFIG]*/void r1168next_generation(T1168* C);
/*RING_ARRAY[SE_CONFIG]*/T2 r1168count(T1168* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1169common_free_nodes(void);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1169make(T1169* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1169put(T1169* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1169new_node(T1169* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1169prime_capacity(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1169buckets_item(T1322 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1169should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T0* r1169reference_at(T1169* C,T0* a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T6 r1169key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1169prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1169create_with_capacity(T1169* C,T2 a1);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1169increase_capacity(T1169* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/void r1169next_generation(T1169* C);
/*HASHED_DICTIONARY[SE_C_MODE,STRING]*/T2 r1169hash_code(T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]*/void r1174make(T1174* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[FIXED_STRING],INTEGER_32]]*/void r1175set_item(T1175* C,T0* a1);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1181make(T1181* C,T2 a1,T2 a2);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T0* r1181first(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1181mark_native_arrays(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T2 r1181storage_upper(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1181clear_all(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T6 r1181is_empty(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T6 r1181is_wrapped(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T2 r1181storage_index(T1181* C,T2 a1);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1181set_all_with(T1181* C,T0* a1);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1181next_generation(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/void r1181remove_first(T1181* C);
/*RING_ARRAY[PROCEDURE[TUPLE]]*/T2 r1181count(T1181* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184common_free_nodes(void);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184make(T1184* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184new_node(T1184* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184add(T1184* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184at(T1184* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1184prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184buckets_item(T1328 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1184should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184reference_at(T1184* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1184key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1184prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184dispose_node(T1184* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184clear_count(T1184* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184create_with_capacity(T1184* C,T2 a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184increase_capacity(T1184* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184next_generation(T1184* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T2 r1184hash_code(T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T0* r1184new_iterator_on_keys(T1184* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/T6 r1184has(T1184* C,T0* a1);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184_P_295_add(T1184* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184_P_295_clear_count(T1184* C);
/*ORDERED_DICTIONARY[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1184_P_295_create_with_capacity(T1184* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T1185*create1185make(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185common_free_nodes(void);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185make(T1185* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185key(T1185* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185put(T1185* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185new_node(T1185* C,T0* a1,T0* a2,T0* a3);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185add(T1185* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185set_cache_user(T1185* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185at(T1185* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1185prime_capacity(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185buckets_item(T1043 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1185should_increase_capacity(T2 a1,T2 a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1185key_safe_equal(T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185reference_at(T1185* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1185prime_number_ceiling(T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185dispose_node(T1185* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185item(T1185* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185remove(T1185* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185clear_count(T1185* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185create_with_capacity(T1185* C,T2 a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185increase_capacity(T1185* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185next_generation(T1185* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T2 r1185hash_code(T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/T0* r1185new_iterator_on_keys(T1185* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/T6 r1185has(T1185* C,T0* a1);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185_P_295_put(T1185* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185_P_295_add(T1185* C,T0* a1,T0* a2);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185_P_295_clear_count(T1185* C);
/*ORDERED_DICTIONARY[STRING,STRING]*/void r1185_P_295_create_with_capacity(T1185* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1187common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1187make(T1187* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1187key(T1187* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1187new_node(T1187* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1187add(T1187* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1187set_cache_user(T1187* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1187prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1187buckets_item(T1335 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1187should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T6 r1187key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1187reference_at(T1187* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1187prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T0* r1187item(T1187* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1187create_with_capacity(T1187* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1187increase_capacity(T1187* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/void r1187next_generation(T1187* C);
/*HASHED_DICTIONARY[CLUSTER,STRING]*/T2 r1187hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1190common_free_nodes(void);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1190make(T1190* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1190put(T1190* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1190new_node(T1190* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1190prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T0* r1190buckets_item(T1340 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1190should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1190key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1190prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1190create_with_capacity(T1190* C,T2 a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1190increase_capacity(T1190* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/void r1190next_generation(T1190* C);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T2 r1190hash_code(T0* a1);
/*HASHED_DICTIONARY[TEXT_FILE_READ,STRING]*/T6 r1190has(T1190* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLASSES,STRING]]*/void r1191set_item(T1191* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLASSES,STRING]*/void r1192make(T1192* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]]*/void r1194set_item(T1194* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[STRING],CLASS_NAME]*/void r1195make(T1195* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[CLASS_NAME]*/void r1198make(T1198* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[CLASS_NAME]]*/void r1199set_item(T1199* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]]*/void r1200set_item(T1200* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_32,CLASS_NAME]*/void r1201make(T1201* C,T2 a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1203common_free_nodes(void);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1203make(T1203* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1203new_node(T1203* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1203add(T1203* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1203prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1203buckets_item(T1341 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1203should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1203prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1203create_with_capacity(T1203* C,T2 a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1203increase_capacity(T1203* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T6 r1203fast_has(T1203* C,T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/void r1203next_generation(T1203* C);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T2 r1203hash_code(T0* a1);
/*HASHED_DICTIONARY[CLUSTER_CLASS,HASHED_STRING]*/T0* r1203fast_reference_at(T1203* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206common_free_nodes(void);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206make(T1206* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206key(T1206* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206put(T1206* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206new_node(T1206* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206add(T1206* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206set_cache_user(T1206* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206copy(T1206* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1206prime_capacity(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206buckets_item(T1347 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1206should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T6 r1206key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1206prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206dispose_node(T1206* C,T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206item(T1206* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206clear_count(T1206* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206twin(T1206* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206create_with_capacity(T1206* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206increase_capacity(T1206* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206with_capacity(T1206* C,T2 a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206next_generation(T1206* C);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/void r1206fast_put(T1206* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T2 r1206hash_code(T0* a1);
/*HASHED_DICTIONARY[FEATURE_STAMP,TYPE]*/T0* r1206fast_reference_at(T1206* C,T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1207common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1207new_node(T1207* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1207prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1207buckets_item(T1350 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T6 r1207should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1207prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1207create_with_capacity(T1207* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1207increase_capacity(T1207* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1207with_capacity(T1207* C,T2 a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1207next_generation(T1207* C);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/void r1207fast_put(T1207* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T2 r1207hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE_MARK,TYPE]*/T0* r1207fast_reference_at(T1207* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1225common_free_nodes(void);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1225put(T1225* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1225new_node(T1225* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1225add(T1225* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1225internal_key(T1225* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1225prime_capacity(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1225buckets_item(T1362 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1225should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T6 r1225key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T0* r1225reference_at(T1225* C,T0* a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1225prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1225create_with_capacity(T1225* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1225increase_capacity(T1225* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1225with_capacity(T1225* C,T2 a1);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/void r1225next_generation(T1225* C);
/*HASHED_DICTIONARY[CLIENT_LIST,FEATURE_NAME]*/T2 r1225hash_code(T0* a1);
/*HASHED_SET_NODE[LIVE_TYPE]*/void r1229make(T1229* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[LIVE_TYPE]]*/void r1230set_item(T1230* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]]*/void r1232set_item(T1232* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_STAMP]*/void r1233make(T1233* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET[LIVE_TYPE]*/T0* r1235a_new_node(void);
/*AVL_SET[LIVE_TYPE]*/void r1235make(T1235* C);
/*AVL_SET[LIVE_TYPE]*/T0* r1235fast_do_insert(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/T0* r1235new_node(T1235* C);
/*AVL_SET[LIVE_TYPE]*/T0* r1235left_grown(T1235* C,T0* a1);
extern T0*oBC726common_lost_nodes;
extern int fBC726common_lost_nodes;
/*AVL_SET[LIVE_TYPE]*/T0* r1235common_lost_nodes(void);
/*AVL_SET[LIVE_TYPE]*/void r1235build_map(T1235* C);
/*AVL_SET[LIVE_TYPE]*/void r1235set_item(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/T0* r1235item(T1235* C,T2 a1);
/*AVL_SET[LIVE_TYPE]*/T0* r1235right_grown(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1235discard_node(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1235clear_count(T1235* C);
/*AVL_SET[LIVE_TYPE]*/void r1235clear_nodes(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/T6 r1235fast_has(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1235next_generation(T1235* C);
/*AVL_SET[LIVE_TYPE]*/T6 r1235ordered(T0* a1,T0* a2);
/*AVL_SET[LIVE_TYPE]*/void r1235do_all(T1235* C,T0* a1);
/*AVL_SET[LIVE_TYPE]*/void r1235fast_add(T1235* C,T0* a1);
/*HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]*/void r1241make(T1241* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,CLASS_TEXT]]*/void r1242set_item(T1242* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]]*/void r1245set_item(T1245* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,FEATURE_NAME]*/void r1246make(T1246* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]*/void r1250make(T1250* C,T1 a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[INTEGER_8,TYPE]]*/void r1251set_item(T1251* C,T0* a1);
/*HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1255make(T1255* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1257common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1257make(T1257* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1257new_node(T1257* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1257add(T1257* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1257prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1257buckets_item(T1373 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T6 r1257should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1257prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1257create_with_capacity(T1257* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1257increase_capacity(T1257* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1257next_generation(T1257* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T2 r1257hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/T0* r1257fast_reference_at(T1257* C,T0* a1);
/*WEAK_REFERENCE[HASHED_BIJECTIVE_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1259set_item(T1259* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]]*/void r1260set_item(T1260* C,T0* a1);
/*HASHED_DICTIONARY_NODE[RUN_FEATURE,TYPE]*/void r1261make(T1261* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]*/void r1266make(T1266* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[GRAPH_NODE,TYPE]]*/void r1267set_item(T1267* C,T0* a1);
/*HASHED_SET_NODE[TYPE]*/void r1271make(T1271* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[TYPE]]*/void r1272set_item(T1272* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]]*/void r1273set_item(T1273* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,STRING]*/void r1274make(T1274* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[STRING]*/void r1277make(T1277* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[STRING]]*/void r1278set_item(T1278* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]]*/void r1279set_item(T1279* C,T0* a1);
/*HASHED_DICTIONARY_NODE[MANIFEST_STRING,MANIFEST_STRING]*/void r1280make(T1280* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[MANIFEST_GENERIC]*/void r1283make(T1283* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[MANIFEST_GENERIC]]*/void r1284set_item(T1284* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]*/void r1286make(T1286* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FAST_ARRAY[AGENT_CREATION],TYPE]]*/void r1287set_item(T1287* C,T0* a1);
/*HASHED_SET_NODE[AGENT_ARGS]*/void r1290make(T1290* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[AGENT_ARGS]]*/void r1291set_item(T1291* C,T0* a1);
/*HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]*/void r1292make(T1292* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[HASHED_SET[TYPE],TYPE]]*/void r1294set_item(T1294* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]*/void r1297make(T1297* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,FEATURE_NAME]]*/void r1298set_item(T1298* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]]*/void r1300set_item(T1300* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE_MIXER,FEATURE_NAME]*/void r1301make(T1301* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]*/void r1304make(T1304* C,T335 a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[ABSOLUTE_FEATURE_NAME]]*/void r1305set_item(T1305* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]]*/void r1306set_item(T1306* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,ABSOLUTE_FEATURE_NAME]*/void r1307make(T1307* C,T0* a1,T335 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]]*/void r1309set_item(T1309* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ANONYMOUS_FEATURE,TYPE]*/void r1310make(T1310* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]]*/void r1314set_item(T1314* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_SET_NODE],STRING]*/void r1315make(T1315* C,T0* a1,T0* a2,T0* a3);
/*HASHED_SET[GRAPH_NODE]*/T0* r1319common_free_nodes(void);
/*HASHED_SET[GRAPH_NODE]*/void r1319make(T1319* C);
/*HASHED_SET[GRAPH_NODE]*/T0* r1319new_node(T1319* C,T0* a1,T0* a2);
/*HASHED_SET[GRAPH_NODE]*/void r1319set_cache_user(T1319* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T2 r1319prime_capacity(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T6 r1319should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[GRAPH_NODE]*/T2 r1319prime_number_ceiling(T2 a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1319dispose_node(T1319* C,T0* a1);
/*HASHED_SET[GRAPH_NODE]*/T0* r1319item(T1319* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1319clear_count(T1319* C);
/*HASHED_SET[GRAPH_NODE]*/void r1319create_with_capacity(T1319* C,T2 a1);
/*HASHED_SET[GRAPH_NODE]*/void r1319increase_capacity(T1319* C);
/*HASHED_SET[GRAPH_NODE]*/void r1319next_generation(T1319* C);
/*HASHED_SET[GRAPH_NODE]*/T2 r1319hash_code(T0* a1);
/*HASHED_SET[GRAPH_NODE]*/void r1319fast_add(T1319* C,T0* a1);
/*HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]*/void r1321make(T1321* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[SE_C_MODE,STRING]]*/void r1323set_item(T1323* C,T0* a1);
/*WEAK_REFERENCE[STRING]*/void r1325set_item(T1325* C,T0* a1);
/*HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]*/void r1329make(T1329* C,T0* a1,T0* a2,T0* a3);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1330make(T1330* C,T0* a1);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T6 r1330is_off(T1330* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1330next(T1330* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T2 r1330iterable_generation(T1330* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/T0* r1330item(T1330* C);
/*ITERATOR_ON_TRAVERSABLE[STRING]*/void r1330start(T1330* C);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[ORDERED_DICTIONARY[STRING,STRING],STRING]]*/void r1332set_item(T1332* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLUSTER,STRING]*/void r1334make(T1334* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER,STRING]]*/void r1336set_item(T1336* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]]*/void r1338set_item(T1338* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TEXT_FILE_READ,STRING]*/void r1339make(T1339* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]*/void r1342make(T1342* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLUSTER_CLASS,HASHED_STRING]]*/void r1343set_item(T1343* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]]*/void r1345set_item(T1345* C,T0* a1);
/*HASHED_DICTIONARY_NODE[FEATURE_STAMP,TYPE]*/void r1346make(T1346* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]]*/void r1348set_item(T1348* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE_MARK,TYPE]*/void r1349make(T1349* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1357common_free_nodes(void);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1357make(T1357* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1357put(T1357* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1357new_node(T1357* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1357prime_capacity(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1357buckets_item(T1385 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1357should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T6 r1357key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T0* r1357reference_at(T1357* C,T0* a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1357prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1357create_with_capacity(T1357* C,T2 a1);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1357increase_capacity(T1357* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/void r1357next_generation(T1357* C);
/*HASHED_DICTIONARY[EXPRESSION,TYPE]*/T2 r1357hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]]*/void r1360set_item(T1360* C,T0* a1);
/*HASHED_DICTIONARY_NODE[CLIENT_LIST,FEATURE_NAME]*/void r1361make(T1361* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET_NODE[LIVE_TYPE]*/T0* r1364rotate_left(T1364* C);
/*AVL_SET_NODE[LIVE_TYPE]*/void r1364set(T1364* C,T0* a1);
/*AVL_SET_NODE[LIVE_TYPE]*/T0* r1364rotate_right(T1364* C);
/*AVL_SET_NODE[LIVE_TYPE]*/T6 r1364fast_has(T1364* C,T0* a1);
/*AVL_SET_NODE[LIVE_TYPE]*/T6 r1364ordered(T0* a1,T0* a2);
/*AVL_SET_NODE[LIVE_TYPE]*/void r1364map_in(T1364* C,T0* a1);
/*WEAK_REFERENCE[AVL_SET_NODE[LIVE_TYPE]]*/void r1367set_item(T1367* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1368common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1368make(T1368* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1368new_node(T1368* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1368add(T1368* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1368prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1368buckets_item(T1390 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1368should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T6 r1368key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T0* r1368reference_at(T1368* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1368prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1368create_with_capacity(T1368* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1368increase_capacity(T1368* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1368next_generation(T1368* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/T2 r1368hash_code(T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]*/void r1374make(T1374* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_HASHED_BIJECTIVE_DICTIONARY_NODE],STRING]]*/void r1375set_item(T1375* C,T0* a1);
/*HASHED_SET_NODE[GRAPH_NODE]*/void r1377make(T1377* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[GRAPH_NODE]]*/void r1378set_item(T1378* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1380common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1380make(T1380* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1380put(T1380* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1380new_node(T1380* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1380prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1380buckets_item(T1397 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1380should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T6 r1380key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1380prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T0* r1380dispose_node(T1380* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1380remove(T1380* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1380create_with_capacity(T1380* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1380increase_capacity(T1380* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/void r1380next_generation(T1380* C);
/*HASHED_DICTIONARY[PROCESS_POSIX,INTEGER_32]*/T2 r1380hash_code(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1381common_free_nodes(void);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1381make(T1381* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1381put(T1381* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1381new_node(T1381* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1381prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1381buckets_item(T1400 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1381should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T6 r1381key_safe_equal(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1381prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T0* r1381dispose_node(T1381* C,T0* a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1381remove(T1381* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1381create_with_capacity(T1381* C,T2 a1);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1381increase_capacity(T1381* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/void r1381next_generation(T1381* C);
/*HASHED_DICTIONARY[PROCESS_WIN32,INTEGER_32]*/T2 r1381hash_code(T2 a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]]*/void r1383set_item(T1383* C,T0* a1);
/*HASHED_DICTIONARY_NODE[EXPRESSION,TYPE]*/void r1384make(T1384* C,T0* a1,T0* a2,T0* a3);
/*SAFE_EQUAL[LIVE_TYPE]*/T6 r1387test(T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]]*/void r1388set_item(T1388* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_SET_NODE],STRING]*/void r1389make(T1389* C,T0* a1,T0* a2,T0* a3);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T1392*create1392make(void);
extern T0*oBC786common_free_nodes;
extern int fBC786common_free_nodes;
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1392common_free_nodes(void);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1392make(T1392* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1392new_node(T1392* C,T0* a1,T0* a2);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1392go_item(T1392* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1392add_last(T1392* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1392dispose_node(T1392* C,T0* a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/T0* r1392item(T1392* C,T2 a1);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1392clear_count(T1392* C);
/*LINKED_LIST[TUPLE[CHARACTER,INTEGER_32]]*/void r1392next_generation(T1392* C);
/*TUPLE[CHARACTER,INTEGER_32]*/T1393*create1393make_2(T3 a1,T2 a2);
/*TUPLE[CHARACTER,INTEGER_32]*/void r1393make_2(T1393* C,T3 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1394a_new_node(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394make(T1394* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1394fast_do_insert(T1394* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394set_value(T1394* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1394new_node(T1394* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394set_value_and_key(T1394* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1394left_grown(T1394* C,T0* a1);
extern T0*oBC847common_lost_nodes;
extern int fBC847common_lost_nodes;
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1394common_lost_nodes(void);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T2 r1394fast_at(T1394* C,T2 a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T0* r1394right_grown(T1394* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394discard_node(T1394* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394clear_count(T1394* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394clear_nodes(T1394* C,T0* a1);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394next_generation(T1394* C);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/void r1394fast_put(T1394* C,T2 a1,T2 a2);
/*AVL_DICTIONARY[INTEGER_32,INTEGER_32]*/T6 r1394ordered(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]*/void r1396make(T1396* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_POSIX,INTEGER_32]]*/void r1398set_item(T1398* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]*/void r1399make(T1399* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PROCESS_WIN32,INTEGER_32]]*/void r1401set_item(T1401* C,T0* a1);
/*WEAK_REFERENCE[LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]]*/void r1405set_item(T1405* C,T0* a1);
/*LINKED_LIST_NODE[TUPLE[CHARACTER,INTEGER_32]]*/void r1406make(T1406* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1407common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1407make(T1407* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1407new_node(T1407* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1407add(T1407* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1407prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1407buckets_item(T1416 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T6 r1407should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1407prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1407create_with_capacity(T1407* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1407increase_capacity(T1407* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1407next_generation(T1407* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T2 r1407hash_code(T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/T0* r1407fast_reference_at(T1407* C,T0* a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1409rotate_left(T1409* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/void r1409set(T1409* C,T2 a1,T2 a2);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1409rotate_right(T1409* C);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T0* r1409fast_at(T1409* C,T2 a1);
/*AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]*/T6 r1409ordered(T2 a1,T2 a2);
/*WEAK_REFERENCE[AVL_DICTIONARY_NODE[INTEGER_32,INTEGER_32]]*/void r1412set_item(T1412* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1413common_free_nodes(void);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1413make(T1413* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1413new_node(T1413* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1413add(T1413* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1413prime_capacity(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1413buckets_item(T1420 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1413should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T6 r1413key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T0* r1413reference_at(T1413* C,T0* a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1413prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1413create_with_capacity(T1413* C,T2 a1);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1413increase_capacity(T1413* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1413next_generation(T1413* C);
/*HASHED_DICTIONARY[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/T2 r1413hash_code(T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]]*/void r1414set_item(T1414* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_LINKED_LIST_NODE],STRING]*/void r1415make(T1415* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]]*/void r1418set_item(T1418* C,T0* a1);
/*HASHED_DICTIONARY_NODE[WEAK_REFERENCE[ANY_AVL_DICTIONARY_NODE],STRING]*/void r1419make(T1419* C,T0* a1,T0* a2,T0* a3);
/*COLLECTION_SORTER[INTEGER_32]*/T2 r1421insert_index(T0* a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1421lt(T2 a1,T2 a2);
/*COLLECTION_SORTER[INTEGER_32]*/T6 r1421lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1425common_free_nodes(void);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1425make(T1425* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1425put(T1425* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1425new_node(T1425* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1425prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1425buckets_item(T1450 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1425should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T6 r1425key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1425reference_at(T1425* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1425prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1425fast_at(T1425* C,T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1425create_with_capacity(T1425* C,T2 a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1425increase_capacity(T1425* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1425next_generation(T1425* C);
/*HASHED_DICTIONARY[TYPE,TYPE]*/void r1425fast_put(T1425* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T2 r1425hash_code(T0* a1);
/*HASHED_DICTIONARY[TYPE,TYPE]*/T0* r1425fast_reference_at(T1425* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1426common_free_nodes(void);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426make(T1426* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1426new_node(T1426* C,T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1426safe_equal(T0* a1,T0* a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426add(T1426* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426set_cache_user(T1426* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1426prime_capacity(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T6 r1426should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1426prime_number_ceiling(T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1426dispose_node(T1426* C,T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/T0* r1426item(T1426* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426clear_count(T1426* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426create_with_capacity(T1426* C,T2 a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426increase_capacity(T1426* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426next_generation(T1426* C);
/*HASHED_SET[NATIVE_PLUG_IN]*/T2 r1426hash_code(T0* a1);
/*HASHED_SET[NATIVE_PLUG_IN]*/void r1426do_all(T1426* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1428common_free_nodes(void);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1428make(T1428* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1428new_node(T1428* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1428add(T1428* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1428set_cache_user(T1428* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1428prime_capacity(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1428buckets_item(T1457 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1428should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T6 r1428key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1428reference_at(T1428* C,T0* a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1428prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T0* r1428item(T1428* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1428create_with_capacity(T1428* C,T2 a1);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1428increase_capacity(T1428* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/void r1428next_generation(T1428* C);
/*HASHED_DICTIONARY[DICTIONARY[PLUGIN,STRING],STRING]*/T2 r1428hash_code(T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1431common_free_nodes(void);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1431make(T1431* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1431new_node(T1431* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1431add(T1431* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1431set_cache_user(T1431* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1431prime_capacity(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1431buckets_item(T1460 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1431should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T6 r1431key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1431reference_at(T1431* C,T0* a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1431prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T0* r1431item(T1431* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1431create_with_capacity(T1431* C,T2 a1);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1431increase_capacity(T1431* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/void r1431next_generation(T1431* C);
/*HASHED_DICTIONARY[PLUGIN,STRING]*/T2 r1431hash_code(T0* a1);
/*STACK[AGENT_CREATION]*/void r1432make(T1432* C);
/*STACK[AGENT_CREATION]*/void r1432mark_native_arrays(T1432* C);
/*STACK[AGENT_CREATION]*/void r1432push(T1432* C,T0* a1);
/*STACK[AGENT_CREATION]*/T6 r1432is_empty(T1432* C);
/*STACK[AGENT_CREATION]*/void r1432pop(T1432* C);
/*STACK[AGENT_CREATION]*/T0* r1432top(T1432* C);
/*STACK[AGENT_CREATION]*/void r1432with_capacity(T1432* C,T2 a1);
/*STACK[AGENT_CREATION]*/void r1432next_generation(T1432* C);
/*AVL_SET[POSITION]*/T0* r1433a_new_node(void);
/*AVL_SET[POSITION]*/void r1433make(T1433* C);
/*AVL_SET[POSITION]*/T0* r1433new_node(T1433* C);
/*AVL_SET[POSITION]*/void r1433add(T1433* C,T338 a1);
/*AVL_SET[POSITION]*/T0* r1433left_grown(T1433* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1433common_lost_nodes(void);
/*AVL_SET[POSITION]*/void r1433set_item(T1433* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1433do_insert(T1433* C,T0* a1);
/*AVL_SET[POSITION]*/T0* r1433right_grown(T1433* C,T0* a1);
/*AVL_SET[POSITION]*/void r1433discard_node(T1433* C,T0* a1);
/*AVL_SET[POSITION]*/void r1433clear_count(T1433* C);
/*AVL_SET[POSITION]*/void r1433clear_nodes(T1433* C,T0* a1);
/*AVL_SET[POSITION]*/void r1433next_generation(T1433* C);
/*AVL_SET[POSITION]*/T6 r1433ordered(T338 a1,T338 a2);
/*AVL_SET[POSITION]*/T6 r1433has(T1433* C,T338 a1);
/*REFERENCE[E_OLD]*/void r1435clear(T1435* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1438common_free_nodes(void);
/*HASHED_SET[FEATURE_STAMP]*/void r1438make(T1438* C);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1438new_node(T1438* C,T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/void r1438add(T1438* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1438safe_equal(T0* a1,T0* a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1438prime_capacity(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1438should_increase_capacity(T2 a1,T2 a2);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1438prime_number_ceiling(T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/T0* r1438dispose_node(T1438* C,T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1438clear_count(T1438* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1438create_with_capacity(T1438* C,T2 a1);
/*HASHED_SET[FEATURE_STAMP]*/void r1438increase_capacity(T1438* C);
/*HASHED_SET[FEATURE_STAMP]*/void r1438next_generation(T1438* C);
/*HASHED_SET[FEATURE_STAMP]*/T2 r1438hash_code(T0* a1);
/*HASHED_SET[FEATURE_STAMP]*/T6 r1438has(T1438* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TYPE,TYPE]*/void r1449make(T1449* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TYPE,TYPE]]*/void r1451set_item(T1451* C,T0* a1);
/*HASHED_SET_NODE[NATIVE_PLUG_IN]*/void r1453make(T1453* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[NATIVE_PLUG_IN]]*/void r1454set_item(T1454* C,T0* a1);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]]*/void r1455set_item(T1455* C,T0* a1);
/*HASHED_DICTIONARY_NODE[DICTIONARY[PLUGIN,STRING],STRING]*/void r1456make(T1456* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[PLUGIN,STRING]]*/void r1458set_item(T1458* C,T0* a1);
/*HASHED_DICTIONARY_NODE[PLUGIN,STRING]*/void r1459make(T1459* C,T0* a1,T0* a2,T0* a3);
/*AVL_SET_NODE[POSITION]*/T0* r1462rotate_left(T1462* C);
/*AVL_SET_NODE[POSITION]*/void r1462set(T1462* C,T338 a1);
/*AVL_SET_NODE[POSITION]*/T0* r1462rotate_right(T1462* C);
/*AVL_SET_NODE[POSITION]*/T6 r1462ordered(T338 a1,T338 a2);
/*AVL_SET_NODE[POSITION]*/T6 r1462has(T1462* C,T338 a1);
/*WEAK_REFERENCE[AVL_SET_NODE[POSITION]]*/void r1463set_item(T1463* C,T0* a1);
/*HASHED_SET_NODE[FEATURE_STAMP]*/void r1468make(T1468* C,T0* a1,T0* a2);
/*WEAK_REFERENCE[HASHED_SET_NODE[FEATURE_STAMP]]*/void r1469set_item(T1469* C,T0* a1);
/*SAFE_EQUAL[POSITION]*/T6 r1474test(T338 a1,T338 a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1489quick_sort_region(T0* a1,T2 a2,T2 a3);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1489lt(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1489quick_sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1489lte(T0* a1,T0* a2);
/*COLLECTION_SORTER[LIVE_TYPE]*/void r1489sort(T0* a1);
/*COLLECTION_SORTER[LIVE_TYPE]*/T6 r1489is_sorted(T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1498make(T1498* C,T0* a1);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T6 r1498is_off(T1498* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1498next(T1498* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T2 r1498iterable_generation(T1498* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/T0* r1498item(T1498* C);
/*ITERATOR_ON_DICTIONARY_KEYS[STRING,STRING]*/void r1498start(T1498* C);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T2 r1499insert_index(T0* a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1499lt(T2 a1,T2 a2);
/*REVERSE_COLLECTION_SORTER[INTEGER_32]*/T6 r1499lte(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1506common_free_nodes(void);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1506make(T1506* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1506put(T1506* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1506new_node(T1506* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1506prime_capacity(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1506buckets_item(T1514 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1506should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T6 r1506key_safe_equal(T0* a1,T0* a2);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T0* r1506reference_at(T1506* C,T0* a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1506prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1506create_with_capacity(T1506* C,T2 a1);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1506increase_capacity(T1506* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/void r1506next_generation(T1506* C);
/*HASHED_DICTIONARY[AGENT_ARGS,STRING]*/T2 r1506hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1512common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1512make(T1512* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1512new_node(T1512* C,T0* a1,T0* a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1512add(T1512* C,T0* a1,T0* a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1512prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1512buckets_item(T1518 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T6 r1512should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1512prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1512create_with_capacity(T1512* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1512increase_capacity(T1512* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/void r1512next_generation(T1512* C);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T2 r1512hash_code(T0* a1);
/*HASHED_DICTIONARY[TAGGED_DATA,FIXED_STRING]*/T0* r1512fast_reference_at(T1512* C,T0* a1);
/*HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]*/void r1513make(T1513* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[AGENT_ARGS,STRING]]*/void r1515set_item(T1515* C,T0* a1);
/*HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]*/void r1519make(T1519* C,T0* a1,T0* a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_DATA,FIXED_STRING]]*/void r1520set_item(T1520* C,T0* a1);
/*STACK[EXPRESSION]*/void r1533make(T1533* C);
/*STACK[EXPRESSION]*/void r1533mark_native_arrays(T1533* C);
/*STACK[EXPRESSION]*/void r1533push(T1533* C,T0* a1);
/*STACK[EXPRESSION]*/void r1533pop(T1533* C);
/*STACK[EXPRESSION]*/T0* r1533top(T1533* C);
/*STACK[EXPRESSION]*/void r1533with_capacity(T1533* C,T2 a1);
/*STACK[EXPRESSION]*/void r1533next_generation(T1533* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1534common_free_nodes(void);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1534make(T1534* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1534new_node(T1534* C,T0* a1,T2 a2,T0* a3);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1534add(T1534* C,T0* a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1534prime_capacity(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1534buckets_item(T1538 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T6 r1534should_increase_capacity(T2 a1,T2 a2);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1534prime_number_ceiling(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1534create_with_capacity(T1534* C,T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1534increase_capacity(T1534* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/void r1534next_generation(T1534* C);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T2 r1534hash_code(T2 a1);
/*HASHED_DICTIONARY[TAGGED_INTEGER,INTEGER_32]*/T0* r1534fast_reference_at(T1534* C,T2 a1);
/*SAFE_EQUAL[INTEGER_32]*/T6 r1536test(T2 a1,T2 a2);
/*HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]*/void r1539make(T1539* C,T0* a1,T2 a2,T0* a3);
/*WEAK_REFERENCE[HASHED_DICTIONARY_NODE[TAGGED_INTEGER,INTEGER_32]]*/void r1540set_item(T1540* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_version_flag(T29* C,T0* a1);
extern T0*oBC32eiffel_parser;
extern int fBC32eiffel_parser;
/*COMPILE_TO_C*/T0* r29eiffel_parser(void);
/*COMPILE_TO_C*/T6 r29is_style_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_output_error_warning_on_flag(T29* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/T6 r29is_version_flag_no_exit(T29* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_relax_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_flat_check_flag(T0* a1);
extern T0*oBC32smart_eiffel;
extern T0*oBC32system_tools;
extern int fBC32system_tools;
/*COMPILE_TO_C*/T0* r29system_tools(void);
/*COMPILE_TO_C*/T6 r29is_cecil_flag(T29* C,T0* a1,T2 a2);
extern T0*oBC31command_arguments;
extern int fBC31command_arguments;
/*COMPILE_TO_C*/T0* r29command_arguments(void);
/*COMPILE_TO_C*/T6 r29ace_file_mode(T29* C);
/*COMPILE_TO_C*/T2 r29argument_count(void);
extern T0*oBC32cpp;
extern int fBC32cpp;
/*COMPILE_TO_C*/T0* r29cpp(void);
/*COMPILE_TO_C*/T6 r29flag_match(T0* a1,T0* a2);
extern T0*oBC32cecil_pool_memory;
/*COMPILE_TO_C*/T6 r29valid_arg_index(T2 a1);
/*COMPILE_TO_C*/T6 r29is_trace_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_o_flag(T29* C,T0* a1,T2 a2);
/*COMPILE_TO_C*/void r29make(T29* C);
/*COMPILE_TO_C*/void r29parse_command_line(T29* C,T2 a1);
extern T0*oBC32echo;
extern int fBC32echo;
/*COMPILE_TO_C*/T0* r29echo(void);
/*COMPILE_TO_C*/T6 r29is_verbose_flag(T0* a1);
/*COMPILE_TO_C*/T0* r29search_for_echo_redirect_flag(T29* C);
extern T0*oBC32string_aliaser;
/*COMPILE_TO_C*/T6 r29is_help_flag(T29* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_no_rescue_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_debug_flag(T0* a1);
extern T0*oBC32ace;
/*COMPILE_TO_C*/T6 r29is_high_memory_compiler(T0* a1);
/*COMPILE_TO_C*/T6 r29is_no_warning_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_safety_check_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_profile(T0* a1);
/*COMPILE_TO_C*/T6 r29is_case_insensitive_flag(T0* a1);
/*COMPILE_TO_C*/T6 r29is_valid_argument_for_ace_mode(T29* C,T0* a1);
/*COMPILE_TO_C*/T6 r29is_manifest_string_trace_flag(T0* a1);
/*COMPILE_TO_C*/void r29search_for_cc_flag(void);
/*COMPILE_TO_C*/T6 r29is_a_compilation_level_flag(T29* C,T0* a1);
extern T0*oBC32id_provider;
extern int fBC32id_provider;
/*COMPILE_TO_C*/T0* r29id_provider(void);
/*COMPILE_TO_C*/void r29search_for_verbose_flag(void);
extern T0*oBC32error_handler;
/*COMPILE_TO_C*/void r29check_for_level(T29* C,T0* a1);
extern int fBC32set_cecil_pool;
/*COMPILE_TO_C*/void r29set_cecil_pool(void);
/*STRING_COMMAND_LINE*/T6 r286is_profile(T0* a1);
/*STRING_COMMAND_LINE*/void r286parse(T0* a1);
extern T0*oBC286command_line_buffer;
extern int fBC286command_line_buffer;
/*STRING_COMMAND_LINE*/T0* r286command_line_buffer(void);
/*STRING_COMMAND_LINE*/T6 r286is_trace_flag(T0* a1);
/*STRING_COMMAND_LINE*/T0* r286echo(void);
/*STRING_COMMAND_LINE*/T0* r286cpp(void);
/*STRING_COMMAND_LINE*/void r286next_option(void);
extern T0*oBC286option_buffer;
extern int fBC286option_buffer;
/*STRING_COMMAND_LINE*/T0* r286option_buffer(void);
/*STRING_COMMAND_LINE*/T0* r286system_tools(void);
/*STRING_COMMAND_LINE*/T6 r286flag_match(T0* a1,T0* a2);
extern T0*oBC108object_suffix;
extern int fBC108object_suffix;
/*SYSTEM_TOOLS*/T0* r108object_suffix(T108* C);
extern T0*oBC108c_mode_memory;
extern int fBC108c_mode_memory;
/*SYSTEM_TOOLS*/T0* r108c_mode_memory(void);
/*SYSTEM_TOOLS*/T0* r108path_h(T108* C);
/*SYSTEM_TOOLS*/T6 r108is_linking_mandatory(void);
/*SYSTEM_TOOLS*/T6 r108is_install(void);
extern T0*oBC32install_memory;
extern T0*oBC108token_buffer;
extern int fBC108token_buffer;
/*SYSTEM_TOOLS*/T0* r108token_buffer(void);
/*SYSTEM_TOOLS*/T0* r108strip_path_or_default(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108linker_command(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r108plugin(T108* C,T0* a1,T0* a2,T338 a3);
/*SYSTEM_TOOLS*/T0* r108absolute_path(T338 a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r108strip_executable(T108* C);
/*SYSTEM_TOOLS*/void r108main_function_return_type_in(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T6 r108is_c_plus_plus_file_path(T0* a1);
/*SYSTEM_TOOLS*/void r108set_alternate_c_mode(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108environment_variable_substitution(T108* C,T0* a1,T0* a2);
extern int fBC108check_c_plus_plus;
/*SYSTEM_TOOLS*/void r108check_c_plus_plus(T108* C);
extern T0*oBC108compiler_list;
extern int fBC108compiler_list;
/*SYSTEM_TOOLS*/T0* r108compiler_list(void);
/*SYSTEM_TOOLS*/void r108append_if_not_already(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108verify_system_name(T108* C);
/*SYSTEM_TOOLS*/void r108add_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r108bad_use_exit(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T2 r108nb_errors(void);
/*SYSTEM_TOOLS*/T0* r108linker_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r108set_c_mode(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108compiler_path_of(T0* a1);
/*SYSTEM_TOOLS*/void r108set_system_name(T108* C,T0* a1);
extern int fBC108add_lib_math;
/*SYSTEM_TOOLS*/void r108add_lib_math(T108* C);
/*SYSTEM_TOOLS*/void r108subdirectory(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T6 r108precompile_header_supported(T108* C);
extern int fBC108set_basic_directory_notation;
/*SYSTEM_TOOLS*/void r108set_basic_directory_notation(T108* C);
/*SYSTEM_TOOLS*/void r108sys_runtime(T108* C,T0* a1,T3 a2);
extern T0*oBC108make_suffix;
extern int fBC108make_suffix;
/*SYSTEM_TOOLS*/T0* r108make_suffix(T108* C);
extern T0*oBC108precompiled_header_suffix;
extern int fBC108precompiled_header_suffix;
/*SYSTEM_TOOLS*/T0* r108precompiled_header_suffix(T108* C);
/*SYSTEM_TOOLS*/T0* r108h_precompiler_command(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108system_name_in(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108echo(void);
extern T0*oBC108external_lib_paths;
extern int fBC108external_lib_paths;
/*SYSTEM_TOOLS*/T0* r108external_lib_paths(void);
extern T0*oBC32tmp_path;
extern int fBC32tmp_path;
/*SYSTEM_TOOLS*/T0* r108tmp_path(void);
extern int fBC108add_lib_profile;
/*SYSTEM_TOOLS*/void r108add_lib_profile(T108* C);
/*SYSTEM_TOOLS*/void r108add_lib_math_do_it_again(T108* C);
extern int fBC108include_config_loadpaths;
/*SYSTEM_TOOLS*/void r108include_config_loadpaths(T108* C);
extern T6 oBC108Scoptions_exists;
extern int fBC108Scoptions_exists;
/*SYSTEM_TOOLS*/T6 r108Scoptions_exists(void);
/*SYSTEM_TOOLS*/void r108set_external_header_path(T0* a1);
/*SYSTEM_TOOLS*/void r108add_smarteiffel_c_mode_options(T108* C);
/*SYSTEM_TOOLS*/void r108append_tokens(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108add_x_suffix(T108* C,T0* a1);
extern T0*oBC108id_file_path;
extern int fBC108id_file_path;
/*SYSTEM_TOOLS*/T0* r108id_file_path(T108* C);
extern T0*oBC17io;
/*SYSTEM_TOOLS*/T0* r108c_compiler_command(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T2 r108extra_arg(T108* C,T0* a1,T2 a2,T0* a3);
/*SYSTEM_TOOLS*/void r108mandatory_sys_runtime(T108* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r108sys_runtime_(T108* C,T0* a1,T3 a2);
/*SYSTEM_TOOLS*/void r108add_loadpath_file(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108read_loadpath_files(T108* C);
/*SYSTEM_TOOLS*/void r108add_config_loadpath_file(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108auto_init_plugins(T108* C);
/*SYSTEM_TOOLS*/void r108add_libraries_from_compiler_options(T108* C);
/*SYSTEM_TOOLS*/void r108add_executable_name(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108environment(T108* C,T0* a1);
extern T0*oBC32tmp_file_read;
/*SYSTEM_TOOLS*/void r108set_automatic_system_name(T108* C);
/*SYSTEM_TOOLS*/void r108set_c_compiler(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108get_started(T108* C);
/*SYSTEM_TOOLS*/void r108file_path(T108* C,T0* a1,T0* a2);
/*SYSTEM_TOOLS*/T0* r108loaded_plugin(T108* C,T0* a1,T0* a2);
extern T0*oBC108c_plus_plus_compiler_list;
extern int fBC108c_plus_plus_compiler_list;
/*SYSTEM_TOOLS*/T0* r108c_plus_plus_compiler_list(void);
extern int fBC108set_config;
/*SYSTEM_TOOLS*/void r108set_config(T108* C);
/*SYSTEM_TOOLS*/void r108set_default_c_mode(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108append_token(T0* a1,T0* a2);
/*SYSTEM_TOOLS*/void r108show_compiler_list_then_exit(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108make(T108* C);
/*SYSTEM_TOOLS*/void r108main_function_exit_in(T108* C,T0* a1);
/*SYSTEM_TOOLS*/T0* r108sas_c_compiler_options(T6 a1);
extern T0*oBC108x_suffix;
extern int fBC108x_suffix;
/*SYSTEM_TOOLS*/T0* r108x_suffix(T108* C);
/*SYSTEM_TOOLS*/void r108external_c_files_for_lcc_win32(T108* C,T0* a1);
extern T0*oBC108external_libs;
extern int fBC108external_libs;
/*SYSTEM_TOOLS*/T0* r108external_libs(void);
extern T0*oBC108system_list;
extern int fBC108system_list;
/*SYSTEM_TOOLS*/T0* r108system_list(void);
/*SYSTEM_TOOLS*/void r108add_external_lib_path(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108parent_directory(T108* C,T0* a1);
/*SYSTEM_TOOLS*/void r108add_external_lib(T108* C,T0* a1);
/*C_PLUGIN_FACTORY*/T975*create975(void);
/*C_PLUGIN_FACTORY*/T0* r975new(T338 a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r100a_parent_edge(T100* C,T6 a1);
extern T0*oBC100and_name;
extern int fBC100and_name;
/*EIFFEL_PARSER*/T0* r100and_name(void);
/*EIFFEL_PARSER*/T6 r100a_local_name2(T100* C);
/*EIFFEL_PARSER*/T6 r100a_local_name1(T100* C);
extern T0*oBC101buffer;
extern int fBC101buffer;
/*EIFFEL_PARSER*/T0* r100buffer(void);
/*EIFFEL_PARSER*/T6 r100a_instruction(T100* C);
/*EIFFEL_PARSER*/T0* r100parse_type_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_function_call(T100* C);
/*EIFFEL_PARSER*/void r100a_new_export_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_conditional(T100* C);
/*EIFFEL_PARSER*/T0* r100connect_to_cecil(T100* C,T0* a1);
/*EIFFEL_PARSER*/T6 r100skip1(T100* C,T3 a1);
/*EIFFEL_PARSER*/T6 r100skip2(T100* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/T6 r100skip3(T100* C,T3 a1,T3 a2,T3 a3);
extern T0*oBC100not_name;
extern int fBC100not_name;
/*EIFFEL_PARSER*/T0* r100not_name(void);
/*EIFFEL_PARSER*/T6 r100a_index_clause(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_true(T100* C);
extern T0*oBC100minus_name;
extern int fBC100minus_name;
/*EIFFEL_PARSER*/T0* r100minus_name(void);
/*EIFFEL_PARSER*/T0* r100a_external(T100* C);
/*EIFFEL_PARSER*/void r100next_char(T100* C);
/*EIFFEL_PARSER*/T6 r100a_base_class_name_inside_client_list(T100* C);
/*EIFFEL_PARSER*/T0* r100a_external_specification(T100* C);
/*EIFFEL_PARSER*/T0* r100parse_feature_name(T100* C);
/*EIFFEL_PARSER*/T6 r100a_inspect(T100* C);
/*EIFFEL_PARSER*/T6 r100a_prefix(T100* C);
extern T0*oBC100implies_name;
extern int fBC100implies_name;
/*EIFFEL_PARSER*/T0* r100implies_name(void);
/*EIFFEL_PARSER*/void r100a_indexing(T100* C);
/*EIFFEL_PARSER*/T6 r100a_free_operator_usage(T100* C,T6 a1);
/*EIFFEL_PARSER*/T6 r100a_free_operator_definition(T100* C,T6 a1);
/*EIFFEL_PARSER*/T0* r100get_comment(T100* C);
/*EIFFEL_PARSER*/void r100echo_num(T11 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r100a_keyword_false(T100* C);
/*EIFFEL_PARSER*/void r100integer_overflow_error(T100* C,T2 a1,T2 a2,T0* a3);
/*EIFFEL_PARSER*/T6 r100a_keyword_void(T100* C);
/*EIFFEL_PARSER*/T0* r100parse_c_name(T100* C);
extern T0*oBC100inline_agents;
extern int fBC100inline_agents;
/*EIFFEL_PARSER*/T0* r100inline_agents(void);
extern T6 oBC100no_static_simplify;
extern int fBC100no_static_simplify;
/*EIFFEL_PARSER*/T6 r100no_static_simplify(void);
/*EIFFEL_PARSER*/T6 r100a_rename_pair(T100* C);
/*EIFFEL_PARSER*/void r100error_handler_append_info_about_feature_name(void);
/*EIFFEL_PARSER*/void r100void_current_comparison_check_(T0* a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_procedure_call(T100* C);
/*EIFFEL_PARSER*/T6 r100a_class_name(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_precursor(T100* C);
/*EIFFEL_PARSER*/T6 r100a_writable(T100* C);
/*EIFFEL_PARSER*/void r100void_current_comparison_check(T0* a1,T0* a2);
extern T0*oBC100a_assertion_buffer;
extern int fBC100a_assertion_buffer;
/*EIFFEL_PARSER*/T0* r100a_assertion_buffer(void);
extern T0*oBC100gt_name;
extern int fBC100gt_name;
/*EIFFEL_PARSER*/T0* r100gt_name(void);
/*EIFFEL_PARSER*/void r100inside_function_precursor_check(T100* C,T0* a1);
extern T0*oBC32or_else_name;
extern int fBC32or_else_name;
/*EIFFEL_PARSER*/T0* r100or_else_name(void);
/*EIFFEL_PARSER*/void r100no_void_after_elseif_check(T0* a1);
/*EIFFEL_PARSER*/T6 r100a_binary(T100* C,T338 a1);
extern T0*oBC101lcs;
extern int fBC101lcs;
/*EIFFEL_PARSER*/T0* r100lcs(void);
/*EIFFEL_PARSER*/T2 r100a_when_part(T100* C,T2 a1,T0* a2);
extern T0*oBC100unused_tmp_features;
extern int fBC100unused_tmp_features;
/*EIFFEL_PARSER*/T0* r100unused_tmp_features(void);
/*EIFFEL_PARSER*/void r100show_nb_errors(void);
/*EIFFEL_PARSER*/void r100a_feature_clause(T100* C);
/*EIFFEL_PARSER*/void r100unknown_external_language(T0* a1);
/*EIFFEL_PARSER*/T0* r100to_call(T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T6 r100a_infix(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_result(T100* C);
extern T0*oBC100ge_name;
extern int fBC100ge_name;
/*EIFFEL_PARSER*/T0* r100ge_name(void);
/*EIFFEL_PARSER*/T6 r100an_allowed_expression_in_when_of_inspect(T100* C);
/*EIFFEL_PARSER*/T338 r100current_position(T100* C);
/*EIFFEL_PARSER*/T6 r100a_feature_name_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_r10(T100* C,T6 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC100muls_name;
extern int fBC100muls_name;
/*EIFFEL_PARSER*/T0* r100muls_name(void);
extern T0*oBC100sharp_muls_name;
extern int fBC100sharp_muls_name;
/*EIFFEL_PARSER*/T0* r100sharp_muls_name(void);
/*EIFFEL_PARSER*/void r100create_infix_prefix(T100* C,T6 a1,T2 a2,T2 a3);
/*EIFFEL_PARSER*/void r100show_nb_warnings(void);
/*EIFFEL_PARSER*/void r100a_base_class_name1(T100* C);
/*EIFFEL_PARSER*/T6 r100a_check(T100* C);
/*EIFFEL_PARSER*/T6 r100a_feature_name(T100* C);
/*EIFFEL_PARSER*/T6 r100a_character_constant(T100* C,T1 a1);
/*EIFFEL_PARSER*/T6 r100a_manifest_string(T100* C,T6 a1);
/*EIFFEL_PARSER*/T6 r100a_loop(T100* C);
/*EIFFEL_PARSER*/T6 r100a_index_value(T100* C);
/*EIFFEL_PARSER*/T0* r100a_precursor_type_mark(T100* C,T338 a1);
/*EIFFEL_PARSER*/T0* r100a_actuals(T100* C);
/*EIFFEL_PARSER*/T0* r100a_external_name(T100* C);
extern T0*oBC100pow_name;
extern int fBC100pow_name;
/*EIFFEL_PARSER*/T0* r100pow_name(void);
/*EIFFEL_PARSER*/T6 r100a_manifest_or_type_test(T100* C,T1 a1);
/*EIFFEL_PARSER*/void r100echo_information(T100* C);
/*EIFFEL_PARSER*/T0* r100echo(void);
/*EIFFEL_PARSER*/void r100go_back_at(T100* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r100a_address_of(T100* C);
/*EIFFEL_PARSER*/T6 r100a_feature_declaration(T100* C);
/*EIFFEL_PARSER*/T6 r100a_formal_generic_type_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_keyword_current(T100* C);
/*EIFFEL_PARSER*/T0* r100a_routine_body(T100* C);
/*EIFFEL_PARSER*/T2 r100nb_warnings(void);
/*EIFFEL_PARSER*/T6 r100a_static_type_mark(T100* C);
/*EIFFEL_PARSER*/T338 r100pos(T100* C,T2 a1,T2 a2);
/*EIFFEL_PARSER*/T6 r100a_assignment_call_assigner(T100* C,T6 a1);
/*EIFFEL_PARSER*/T0* r100a_routine(T100* C);
/*EIFFEL_PARSER*/void r100a_class_declaration(T100* C);
/*EIFFEL_PARSER*/T6 r100a_expression(T100* C);
extern T0*oBC100slash_slash_name;
extern int fBC100slash_slash_name;
/*EIFFEL_PARSER*/T0* r100slash_slash_name(void);
/*EIFFEL_PARSER*/T0* r100mandatory_writable(T100* C);
extern T0*oBC32parser_buffer;
extern int fBC32parser_buffer;
/*EIFFEL_PARSER*/T0* r100parser_buffer(void);
/*EIFFEL_PARSER*/T6 r100a_e1(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e2(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e3(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e4(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e5(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e6(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e7(T100* C);
/*EIFFEL_PARSER*/void r100a_rename_list(T100* C);
/*EIFFEL_PARSER*/T0* r100a_clients(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e8(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e9(T100* C);
extern T0*oBC100faof;
extern int fBC100faof;
/*EIFFEL_PARSER*/T0* r100faof(void);
/*EIFFEL_PARSER*/T6 r100a_assignment_or_procedure_call(T100* C);
extern T0*oBC32mini_buffer;
/*EIFFEL_PARSER*/T6 r100a_c_inline_c(T100* C);
/*EIFFEL_PARSER*/void r100no_void_check(T0* a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_c_inline_h(T100* C);
extern T0*oBC101unicode_string_buffer;
extern int fBC101unicode_string_buffer;
/*EIFFEL_PARSER*/T0* r100unicode_string_buffer(void);
/*EIFFEL_PARSER*/T6 r100a_keyword(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_parent_list(T100* C);
/*EIFFEL_PARSER*/T0* r100to_proc_call(T100* C,T0* a1,T0* a2,T0* a3);
/*EIFFEL_PARSER*/T0* r100analyse_class(T100* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/T0* r100a_then_compound(T100* C);
/*EIFFEL_PARSER*/T2 r100nb_errors(void);
/*EIFFEL_PARSER*/void r100a_r1(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r2(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r3(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r4(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r5(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r6(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r7(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_r8(T100* C,T0* a1);
/*EIFFEL_PARSER*/T6 r100a_retry(T100* C);
/*EIFFEL_PARSER*/void r100make(T100* C);
/*EIFFEL_PARSER*/void r100anchored_creation_check(T0* a1);
/*EIFFEL_PARSER*/T6 r100a_create_expression(T100* C);
extern T0*oBC100or_name;
extern int fBC100or_name;
/*EIFFEL_PARSER*/T0* r100or_name(void);
/*EIFFEL_PARSER*/T6 r100a_debug(T100* C);
/*EIFFEL_PARSER*/void r100err_exp(T338 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/T0* r100a_inline_agent(T100* C);
/*EIFFEL_PARSER*/void r100show_nb(T2 a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_formal_arg_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_boolean_constant(T100* C);
/*EIFFEL_PARSER*/void r100a_creation_clause(T100* C,T338 a1);
/*EIFFEL_PARSER*/T0* r100id_provider(void);
extern T0*oBC100plus_name;
extern int fBC100plus_name;
/*EIFFEL_PARSER*/T0* r100plus_name(void);
/*EIFFEL_PARSER*/T6 r100a_ordinary_feature_name_or_local_name(T100* C);
extern T0*oBC100backslash_backslash_name;
extern int fBC100backslash_backslash_name;
/*EIFFEL_PARSER*/T0* r100backslash_backslash_name(void);
extern T0*oBC100sharp_plus_name;
extern int fBC100sharp_plus_name;
/*EIFFEL_PARSER*/T0* r100sharp_plus_name(void);
/*EIFFEL_PARSER*/T0* r100analyse_buffer(T100* C);
/*EIFFEL_PARSER*/T0* r100a_assertion(T100* C);
extern T0*oBC32omitted_client_list;
/*EIFFEL_PARSER*/T0* r100expression_with_comment(T100* C,T0* a1);
/*EIFFEL_PARSER*/void r100a_local_var_list(T100* C);
/*EIFFEL_PARSER*/T6 r100a_non_allowed_very_strange_identifier(T100* C);
/*EIFFEL_PARSER*/T6 r100a_old_creation(T100* C);
/*EIFFEL_PARSER*/T6 r100a_tag_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_creation_keyword(T100* C);
/*EIFFEL_PARSER*/T6 r100a_create_instruction(T100* C);
extern T0*oBC100xor_name;
extern int fBC100xor_name;
/*EIFFEL_PARSER*/T0* r100xor_name(void);
/*EIFFEL_PARSER*/T6 r100a_possibly_frozen_feature_name(T100* C);
extern T0*oBC100lt_name;
extern int fBC100lt_name;
/*EIFFEL_PARSER*/T0* r100lt_name(void);
extern T0*oBC100slash_name;
extern int fBC100slash_name;
/*EIFFEL_PARSER*/T0* r100slash_name(void);
/*EIFFEL_PARSER*/T6 r100a_base_class_name(T100* C);
extern T0*oBC100sharp_minus_name;
extern int fBC100sharp_minus_name;
/*EIFFEL_PARSER*/T0* r100sharp_minus_name(void);
extern T0*oBC32and_then_name;
extern int fBC32and_then_name;
/*EIFFEL_PARSER*/T0* r100and_then_name(void);
/*EIFFEL_PARSER*/T0* r100a_compound1(T100* C);
/*EIFFEL_PARSER*/T0* r100a_compound2(T100* C,T0* a1,T0* a2);
/*EIFFEL_PARSER*/void r100a_formal_generic_list(T100* C);
/*EIFFEL_PARSER*/void r100disconnect(T100* C);
extern T0*oBC100le_name;
extern int fBC100le_name;
/*EIFFEL_PARSER*/T0* r100le_name(void);
/*EIFFEL_PARSER*/T6 r100a_type_mark(T100* C);
/*EIFFEL_PARSER*/T6 r100a_e10(T100* C);
/*EIFFEL_PARSER*/void r100show_total_time(T100* C);
/*EIFFEL_PARSER*/T6 r100manifest_just_after_a_dot(T100* C,T3 a1,T6 a2,T0* a3);
/*EIFFEL_PARSER*/void r100update_last_manifest_string(T100* C,T338 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*EIFFEL_PARSER*/void r100unused_once_warning_check(T100* C);
/*EIFFEL_PARSER*/T6 r100skip1unless2(T100* C,T3 a1,T3 a2);
/*EIFFEL_PARSER*/void r100valid_parent_edge_type_check(T0* a1);
/*EIFFEL_PARSER*/void r100skip_comments(T100* C);
/*EIFFEL_PARSER*/T6 r100just_after_a_dot(T100* C,T6 a1,T0* a2);
/*EIFFEL_PARSER*/T6 r100a_unary(T100* C);
/*EIFFEL_PARSER*/T6 r100a_argument(T100* C);
/*EIFFEL_PARSER*/T0* r100static_simplify(T0* a1);
/*ECHO*/void r121put_line(T121* C,T0* a1);
/*ECHO*/void r121make(T121* C);
/*ECHO*/void r121tfr_connect_or_exit(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121before_exit_close(T121* C);
/*ECHO*/void r121w_put_string(T121* C,T0* a1);
/*ECHO*/void r121file_renaming(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121tfr_connect(T121* C,T0* a1,T0* a2);
extern T0*oBC17std_output;
extern int fBC17std_output;
/*ECHO*/T0* r121std_output(void);
/*ECHO*/void r121print_count(T121* C,T0* a1,T2 a2);
/*ECHO*/T0* r121getenv(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121tfw_connect(T121* C,T0* a1,T0* a2);
/*ECHO*/void r121w_put_character(T121* C,T3 a1);
/*ECHO*/void r121put_new_line(T121* C);
/*ECHO*/void r121put_string(T121* C,T0* a1);
/*ECHO*/T0* r121system_tools(void);
/*ECHO*/void r121put_real_format(T121* C,T5 a1,T2 a2);
/*ECHO*/void r121w_put_line(T121* C,T0* a1);
/*ECHO*/void r121put_integer(T121* C,T2 a1);
extern T0*oBC17std_error;
/*ECHO*/void r121file_removing(T121* C,T0* a1);
/*ECHO*/void r121w_put_integer(T121* C,T2 a1);
/*ECHO*/void r121redirect_output_on(T121* C,T0* a1);
/*ECHO*/void r121put_character(T121* C,T3 a1);
/*ACE*/T338 r274current_position(T274* C);
/*ACE*/T0* r274cecil_pool(void);
extern T0*oBC274clusters_;
extern int fBC274clusters_;
/*ACE*/T0* r274clusters_(void);
/*ACE*/T0* r274cpp(void);
/*ACE*/void r274go_back_at(T274* C,T2 a1,T2 a2);
/*ACE*/T6 r274no_check(T274* C);
/*ACE*/T2 r274class_text_count(void);
extern T0*oBC274root_class_names;
extern int fBC274root_class_names;
/*ACE*/T0* r274root_class_names(void);
/*ACE*/T6 r274all_check(T274* C);
/*ACE*/T0* r274buffer(void);
/*ACE*/T0* r274a_string(T274* C);
/*ACE*/T6 r274a_manifest_string(T274* C,T6 a1);
/*ACE*/void r274fatal_error_in(T274* C,T0* a1);
/*ACE*/void r274parse_include(T274* C);
/*ACE*/void r274set_highest_encountered_level(T274* C,T2 a1);
/*ACE*/T0* r274a_identifier(T274* C);
/*ACE*/T0* r274class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T0* r274a_debug_key(T274* C);
/*ACE*/T0* r274a_split_key(T274* C);
/*ACE*/T6 r274a_cluster_clause_list(T274* C);
/*ACE*/void r274add_loadpath(T0* a1,T0* a2,T2 a3,T6 a4);
/*ACE*/T6 r274a_keyword(T274* C,T0* a1);
/*ACE*/T0* r274a_cecil_file(T274* C);
/*ACE*/void r274skip_comments(T274* C);
/*ACE*/void r274set_root_class_name_using(T0* a1);
extern T0*oBC274pov_classes;
extern int fBC274pov_classes;
/*ACE*/T0* r274pov_classes(void);
/*ACE*/T6 r274a_option_in_cluster_properties(T274* C);
/*ACE*/T6 r274default_debug(T274* C,T0* a1);
extern T0*oBC274no_pov_classes;
extern int fBC274no_pov_classes;
/*ACE*/T0* r274no_pov_classes(void);
/*ACE*/void r274may_expand_var(T274* C);
/*ACE*/T0* r274parser_buffer(void);
/*ACE*/void r274new_universe_entry(T2 a1,T0* a2,T0* a3);
/*ACE*/void r274a_generate(T274* C);
/*ACE*/T0* r274root_class_name(void);
/*ACE*/T6 r274require_check(T274* C);
/*ACE*/void r274set_default_trace(T274* C);
/*ACE*/void r274set_debug_check(T274* C);
/*ACE*/T0* r274echo(void);
/*ACE*/T6 r274skip1(T274* C,T3 a1);
/*ACE*/void r274view_in(T274* C,T0* a1);
/*ACE*/T0* r274class_name_using(T0* a1);
/*ACE*/T0* r274system_tools(void);
/*ACE*/void r274next_char(T274* C);
extern T0*oBC32is_launcher_memory;
/*ACE*/T0* r274cluster_of(T0* a1,T6 a2);
/*ACE*/T0* r274lcs(void);
/*ACE*/T6 r274trace_of(T274* C,T0* a1);
/*ACE*/T2 r274a_assertion_level(T274* C);
/*ACE*/T6 r274is_debug_checked(T274* C,T0* a1,T0* a2);
/*ACE*/T6 r274a_yes_no_all(T274* C);
/*ACE*/T0* r274find_class_text(T0* a1,T6 a2,T6 a3,T0* a4);
/*ACE*/T2 r274cluster_count(void);
/*ACE*/void r274add_default_debug_key(T274* C,T0* a1);
/*ACE*/T6 r274is_launcher(void);
/*ACE*/T0* r274level_name(T2 a1);
/*ACE*/void r274analyse_ace_file(T274* C,T0* a1);
/*ACE*/void r274set_no_split(T274* C,T6 a1);
/*ACE*/void r274set_split(T274* C,T0* a1);
/*ACE*/void r274a_external(T274* C);
/*ACE*/T0* r274best_cluster_of(T0* a1,T0* a2,T6 a3,T0* a4);
/*ACE*/T6 r274ensure_check(T274* C);
/*ACE*/T0* r274unicode_string_buffer(void);
/*ACE*/void r274a_cluster_mark(T274* C);
extern T0*oBC274universe;
extern int fBC274universe;
/*ACE*/T0* r274universe(void);
extern T0*oBC274distances_;
extern int fBC274distances_;
/*ACE*/T0* r274distances_(void);
/*ACE*/void r274set_default_level(T274* C);
/*ACE*/void r274set_command_line_debug(T274* C);
/*ACE*/T0* r274eiffel_parser(void);
/*ACE*/void r274get_started(T274* C);
/*ACE*/T6 r274a_system_level_defaults(T274* C);
/*ACE*/void r274set_default_c_mode(T274* C);
/*ACE*/void r274a_cluster_properties(T274* C);
/*ACE*/T6 r274a_class_name(T274* C);
extern T0*oBC274new_clusters;
extern int fBC274new_clusters;
/*ACE*/T0* r274new_clusters(void);
/*ACE*/void r274command_line_parsed(T274* C,T0* a1);
/*ACE*/T0* r274root_procedure_name(T274* C);
/*ACE*/T338 r274pos(T2 a1,T2 a2);
/*ACE*/T6 r274match_debug_keys(T0* a1,T0* a2);
/*ACE*/T2 r274assertion_level_of(T274* C,T0* a1);
/*ACE*/T6 r274sedb(T274* C);
/*ACE*/T6 r274a_cluster_clause(T274* C);
typedef struct _se_agenT112f112l4023c31 se_agenT112f112l4023c31;
struct _se_agenT112f112l4023c31{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l4023c31*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l4023c31*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT112f112l4023c31(T0* closed_C,T0* closed_a1);
void gc_mark_agenT112f112l4023c31(se_agenT112f112l4023c31*u);
typedef struct _se_agenT112f112l4012c28 se_agenT112f112l4012c28;
struct _se_agenT112f112l4012c28{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l4012c28*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l4012c28*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l4012c28(T0* closed_C);
void gc_mark_agenT112f112l4012c28(se_agenT112f112l4012c28*u);
typedef struct _se_agenT112f112l3783c47 se_agenT112f112l3783c47;
struct _se_agenT112f112l3783c47{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3783c47*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3783c47*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l3783c47(T0* closed_C);
void gc_mark_agenT112f112l3783c47(se_agenT112f112l3783c47*u);
typedef struct _se_agenT112f112l618c22 se_agenT112f112l618c22;
struct _se_agenT112f112l618c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l618c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l618c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT112f112l618c22(void);
void gc_mark_agenT112f112l618c22(se_agenT112f112l618c22*u);
typedef struct _se_agenT112f112l675c22 se_agenT112f112l675c22;
struct _se_agenT112f112l675c22{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l675c22*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l675c22*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT112f112l675c22(void);
void gc_mark_agenT112f112l675c22(se_agenT112f112l675c22*u);
typedef struct _se_agenT112f112l3802c55 se_agenT112f112l3802c55;
struct _se_agenT112f112l3802c55{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3802c55*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3802c55*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a2;};
/*agent creation*/T0*agenT112f112l3802c55(T0* closed_C,T0* closed_a2);
void gc_mark_agenT112f112l3802c55(se_agenT112f112l3802c55*u);
typedef struct _se_agenT112f112l3595c39 se_agenT112f112l3595c39;
struct _se_agenT112f112l3595c39{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3595c39*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3595c39*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l3595c39(T0* closed_C);
void gc_mark_agenT112f112l3595c39(se_agenT112f112l3595c39*u);
typedef struct _se_agenT112f112l3512c38 se_agenT112f112l3512c38;
struct _se_agenT112f112l3512c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT112f112l3512c38*,T0*,T0*);
void(*gc_mark_agent_mold)(se_agenT112f112l3512c38*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT112f112l3512c38(T0* closed_C);
void gc_mark_agenT112f112l3512c38(se_agenT112f112l3512c38*u);
/*C_PRETTY_PRINTER*/T0* r112cecil_pool(void);
extern T0*oBC112c_code;
extern int fBC112c_code;
/*C_PRETTY_PRINTER*/T0* r112c_code(void);
extern T0*oBC112defined_agent_creation;
extern int fBC112defined_agent_creation;
/*C_PRETTY_PRINTER*/T0* r112defined_agent_creation(void);
/*C_PRETTY_PRINTER*/T0* r112stack_top(T112* C);
/*C_PRETTY_PRINTER*/void r112put_target_as_target(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_plus_plus_register(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112print_argument(T2 a1);
/*C_PRETTY_PRINTER*/T6 r112manifest_string_trace(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T2 r112class_invariant_call_opening(T112* C,T0* a1,T6 a2);
/*C_PRETTY_PRINTER*/void r112target_position_in_error_handler(T112* C);
/*C_PRETTY_PRINTER*/void r112put_arguments(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112c_test_o_flag(T0* a1);
/*C_PRETTY_PRINTER*/void r112print_local(T0* a1);
/*C_PRETTY_PRINTER*/void r112initialize_size_table(T112* C);
/*C_PRETTY_PRINTER*/void r112split_c_file_now(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112put_monomorphic_or_void_call(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112inspect_local_compile_to_c(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_define_assignment_test_functions(T112* C);
/*C_PRETTY_PRINTER*/T0* r112reserve_context(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/T0* r112run_features(void);
/*C_PRETTY_PRINTER*/T6 r112target_cannot_be_dropped(T112* C);
/*C_PRETTY_PRINTER*/void r112get_started(T112* C);
extern T0*oBC112path_make;
extern int fBC112path_make;
/*C_PRETTY_PRINTER*/T0* r112path_make(void);
/*C_PRETTY_PRINTER*/void r112c_test_o_flag_recursion(T0* a1);
/*C_PRETTY_PRINTER*/void r112define_agent_launcher_heading(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112se_evobt(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r112cpp(void);
/*C_PRETTY_PRINTER*/void r112compile_routines(T112* C);
/*C_PRETTY_PRINTER*/void r112set_dump_stack_top_for(T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112put_c_inline_h(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/T0* r112tmp_path(void);
/*C_PRETTY_PRINTER*/T6 r112agent_pool_has_only_one_case_for(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112put_file(T112* C,T0* a1,T0* a2);
extern T0*oBC32live_type_extra_collectors;
extern int fBC32live_type_extra_collectors;
/*C_PRETTY_PRINTER*/T0* r112live_type_extra_collectors(void);
/*C_PRETTY_PRINTER*/void r112cecil_define_users_for_file(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112initialize_generating_type(void);
/*C_PRETTY_PRINTER*/T0* r112agent_switches(void);
/*C_PRETTY_PRINTER*/void r112stop_recursive_assertion_opening(T6 a1);
/*C_PRETTY_PRINTER*/void r112add_first_include(T0* a1);
/*C_PRETTY_PRINTER*/void r112cecil_define_users_for_entry(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112put_target_generating_type(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112class_invariant_call_closing(T2 a1,T6 a2);
extern T0*oBC113context_stack;
extern int fBC113context_stack;
/*C_PRETTY_PRINTER*/T0* r112context_stack(void);
/*C_PRETTY_PRINTER*/void r112current_class_invariant(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112push_create_expression(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112add_include(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112recompilation_comment(T0* a1);
/*C_PRETTY_PRINTER*/void r112macro_def(T112* C,T0* a1,T2 a2);
/*C_PRETTY_PRINTER*/void r112sys_runtime_h_and_c(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112se_ms_c_call_in(T0* a1,T0* a2);
extern T0*oBC112pending_c_function_body;
extern int fBC112pending_c_function_body;
/*C_PRETTY_PRINTER*/T0* r112pending_c_function_body(void);
/*C_PRETTY_PRINTER*/void r112start_profile(T0* a1);
/*C_PRETTY_PRINTER*/void r112c_register(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112prepare_c_function(T112* C);
/*C_PRETTY_PRINTER*/void r112c_frame_descriptor_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112va_type_in(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r112class_invariants(void);
/*C_PRETTY_PRINTER*/void r112initialize_path_table(T112* C);
/*C_PRETTY_PRINTER*/void r112define_initialize_eiffel_runtime(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_test_o_flag_introspect(T0* a1);
/*C_PRETTY_PRINTER*/void r112initialize_generator(void);
/*C_PRETTY_PRINTER*/void r112inspect_local_type(T0* a1);
/*C_PRETTY_PRINTER*/void r112begin_c_file(T112* C);
/*C_PRETTY_PRINTER*/void r112stop_recursive_assertion_closing(T6 a1);
/*C_PRETTY_PRINTER*/void r112push_inside_some_wrapper(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112right_hand_side_can_only_be_void(void);
/*C_PRETTY_PRINTER*/void r112check_assertion(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/T0* r112live_type_map(void);
/*C_PRETTY_PRINTER*/void r112put_target_as_value(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define1_manifest_string_pool(T112* C);
/*C_PRETTY_PRINTER*/void r112put_error0(T0* a1);
/*C_PRETTY_PRINTER*/void r112end_c_file(void);
/*C_PRETTY_PRINTER*/void r112begin_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T6 r112arguments_cannot_be_dropped(T112* C);
/*C_PRETTY_PRINTER*/void r112add_extra_collectors(T112* C);
extern T0*oBC112internal_c_local_stamps_stack;
extern int fBC112internal_c_local_stamps_stack;
/*C_PRETTY_PRINTER*/T0* r112internal_c_local_stamps_stack(void);
/*C_PRETTY_PRINTER*/void r112connect_cecil_out_h(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112customize_runtime(T112* C);
/*C_PRETTY_PRINTER*/void r112really_define_c_main(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112push_direct(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC112pending_c_function_signature;
extern int fBC112pending_c_function_signature;
/*C_PRETTY_PRINTER*/T0* r112pending_c_function_signature(void);
/*C_PRETTY_PRINTER*/void r112cecil_define(T112* C);
/*C_PRETTY_PRINTER*/T6 r112once_flag(T112* C,T0* a1);
extern T0*oBC112internal_c_local_list;
/*C_PRETTY_PRINTER*/void r112string_to_c_code(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112show_profile(void);
/*C_PRETTY_PRINTER*/void r112common_put_target(T112* C);
/*C_PRETTY_PRINTER*/void r112free_context(T112* C,T0* a1);
extern T0*oBC112out_make;
extern int fBC112out_make;
/*C_PRETTY_PRINTER*/T0* r112out_make(void);
extern T0*oBC112inspect_local_stack;
extern int fBC112inspect_local_stack;
/*C_PRETTY_PRINTER*/T0* r112inspect_local_stack(void);
/*C_PRETTY_PRINTER*/void r112put_position(T338 a1);
/*C_PRETTY_PRINTER*/void r112write_out_h_buffer(T112* C);
/*C_PRETTY_PRINTER*/void r112incr_real_procedure_count(T112* C);
/*C_PRETTY_PRINTER*/void r112echo_information(T112* C);
/*C_PRETTY_PRINTER*/void r112c_code_for_precomputable_routines(T112* C);
/*C_PRETTY_PRINTER*/void r112variant_check(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/T0* r112echo(void);
/*C_PRETTY_PRINTER*/void r112write_out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r112c_define_manifest_generic_functions(T112* C);
extern T0*oBC32manifest_string_pool;
/*C_PRETTY_PRINTER*/T6 r112use_c_function_call_for_attribute_read(T112* C);
/*C_PRETTY_PRINTER*/void r112put_ith_argument(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112add_include_on(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112push_create_instruction(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112pop(T112* C);
/*C_PRETTY_PRINTER*/void r112se_string(T0* a1);
/*C_PRETTY_PRINTER*/void r112put_trace_switch(T112* C);
/*C_PRETTY_PRINTER*/void r112c_code_for_precomputable_routine(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112external_prototype_in(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/T0* r112pending_c_function_lock_local(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112args_compile_to_c_ith(T112* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*C_PRETTY_PRINTER*/void r112define_main(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112incr_procedure_count(T112* C);
extern T0*oBC32agent_pool;
/*C_PRETTY_PRINTER*/T6 r112cannot_drop_all(T112* C);
/*C_PRETTY_PRINTER*/void r112push_precursor(T112* C,T0* a1,T0* a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112agent_pool_switch_in(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112c_define_o_flag(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112incr_real_function_count(T112* C);
/*C_PRETTY_PRINTER*/void r112put_object_size(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112start_profile_class_invariant(T0* a1);
extern T0*oBC112out_c_buffer;
extern int fBC112out_c_buffer;
/*C_PRETTY_PRINTER*/T0* r112out_c_buffer(void);
/*C_PRETTY_PRINTER*/void r112put_direct(T112* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_PRETTY_PRINTER*/void r112c_define_for_native_array(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_pre_compute_once_function(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112incr_function_count(T112* C);
/*C_PRETTY_PRINTER*/void r112put_banner(T0* a1);
/*C_PRETTY_PRINTER*/void r112put_c_file(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112c_define_o_result_for(T112* C,T0* a1);
extern T0*oBC112out_h_buffer;
extern int fBC112out_h_buffer;
/*C_PRETTY_PRINTER*/T0* r112out_h_buffer(void);
/*C_PRETTY_PRINTER*/T2 r112nb_errors(void);
/*C_PRETTY_PRINTER*/void r112stack_overflow(T112* C);
/*C_PRETTY_PRINTER*/void r112h_connect(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112compile(T112* C);
/*C_PRETTY_PRINTER*/void r112customize_agent_pool_runtime_1(T112* C);
/*C_PRETTY_PRINTER*/void r112customize_agent_pool_runtime_2(T112* C);
/*C_PRETTY_PRINTER*/void r112c_declare_local(T112* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r112character_to_c_code(T3 a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112initialize_path_table_of(T0* a1);
/*C_PRETTY_PRINTER*/void r112native_array_to_c_code(T2 a1,T9 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112c_call_initialize_manifest_strings(void);
/*C_PRETTY_PRINTER*/void r112se_ums_c_call_in(T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112start_profile_agent_switch(T0* a1);
/*C_PRETTY_PRINTER*/void r112make(T112* C);
/*C_PRETTY_PRINTER*/void r112array_access(T3 a1,T2 a2);
/*C_PRETTY_PRINTER*/void r112write_extern_2(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112write_extern_1(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112write_extern_0(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112stack_push(T112* C,T2 a1);
/*C_PRETTY_PRINTER*/void r112common_body_for_se_string_and_se_ms(T112* C,T6 a1);
/*C_PRETTY_PRINTER*/T0* r112out_c(void);
/*C_PRETTY_PRINTER*/void r112write_make_file(T112* C);
/*C_PRETTY_PRINTER*/void r112start_profile_agent_creation(T0* a1);
/*C_PRETTY_PRINTER*/void r112define_extern_tables(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_for_user_generic(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112start_assignment(T112* C);
/*C_PRETTY_PRINTER*/T0* r112agent_creations(void);
/*C_PRETTY_PRINTER*/T0* r112id_provider(void);
/*C_PRETTY_PRINTER*/T0* r112system_tools(void);
/*C_PRETTY_PRINTER*/void r112prepare_introspection(T112* C);
/*C_PRETTY_PRINTER*/T0* r112need_invariant(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112agent_pool_call_in(T112* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*C_PRETTY_PRINTER*/void r112initialize_profile(void);
/*C_PRETTY_PRINTER*/void r112put_position_comment(T338 a1);
/*C_PRETTY_PRINTER*/void r112inside_twin(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112c_declare_locals(T112* C,T0* a1,T0* a2,T6 a3);
/*C_PRETTY_PRINTER*/void r112set_live_type(T0* a1);
extern T0*oBC32once_routine_pool;
/*C_PRETTY_PRINTER*/void r112include_register(T112* C,T338 a1,T0* a2);
/*C_PRETTY_PRINTER*/T6 r112c_plus_plus_registered(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112define_agent_launcher_args(T112* C,T0* a1);
extern T0*oBC32assignment_test_pool;
/*C_PRETTY_PRINTER*/void r112initialize_generator_of(T0* a1);
/*C_PRETTY_PRINTER*/void r112put_target_generator(T112* C,T0* a1);
extern T0*oBC112c_inline_h_mem;
extern int fBC112c_inline_h_mem;
/*C_PRETTY_PRINTER*/T0* r112c_inline_h_mem(void);
/*C_PRETTY_PRINTER*/void r112c_variables_for_precomputable_routines(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_manifest_generic_for(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112dump_pending_c_function(T112* C,T6 a1);
extern T0*oBC112tmp_string;
extern int fBC112tmp_string;
/*C_PRETTY_PRINTER*/T0* r112tmp_string(void);
/*C_PRETTY_PRINTER*/void r112c_plus_plus_definitions(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_assignment_test_for(T112* C,T0* a1,T0* a2);
/*C_PRETTY_PRINTER*/void r112put_position_comment_on(T0* a1,T338 a2);
/*C_PRETTY_PRINTER*/void r112c_define2_manifest_string_pool(T112* C);
extern T0*oBC32pretty_printer;
/*C_PRETTY_PRINTER*/void r112write_extern_array_1(T112* C,T0* a1,T2 a2,T0* a3);
/*C_PRETTY_PRINTER*/void r112write_extern_array_2(T112* C,T0* a1,T2 a2);
extern T0*oBC32manifest_generic_pool;
extern T0*oBC32exceptions_handler;
/*C_PRETTY_PRINTER*/void r112put_h_file(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112put_position_in_ds(T338 a1);
extern T0*oBC112path_c;
extern int fBC112path_c;
/*C_PRETTY_PRINTER*/T0* r112path_c(void);
/*C_PRETTY_PRINTER*/void r112end_c_linkage(T0* a1);
/*C_PRETTY_PRINTER*/T0* r112new_context(T2 a1);
extern T0*oBC112path_h;
extern int fBC112path_h;
/*C_PRETTY_PRINTER*/T0* r112path_h(void);
/*C_PRETTY_PRINTER*/void r112put_position_comment_in(T0* a1,T338 a2);
/*C_PRETTY_PRINTER*/void r112put_sedb_breakpoint(T112* C);
/*C_PRETTY_PRINTER*/void r112c_define_o_result(T112* C,T0* a1);
/*C_PRETTY_PRINTER*/void r112do_write_make_file(T112* C);
typedef struct _se_agenT107f107l345c38 se_agenT107f107l345c38;
struct _se_agenT107f107l345c38{Tid id;
int creation_mold_id;
void(*afp)(se_agenT107f107l345c38*,T0*);
void(*gc_mark_agent_mold)(se_agenT107f107l345c38*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT107f107l345c38(void);
void gc_mark_agenT107f107l345c38(se_agenT107f107l345c38*u);
/*SMART_EIFFEL*/void r107polymorphic_procedure_call_count_increment(T107* C,T2 a1);
/*SMART_EIFFEL*/T0* r107old_list_stack_pop(void);
/*SMART_EIFFEL*/void r107id_extra_information(T0* a1,T0* a2,T0* a3);
extern T0*oBC107old_list_stack;
extern int fBC107old_list_stack;
/*SMART_EIFFEL*/T0* r107old_list_stack(void);
/*SMART_EIFFEL*/T0* r107type_real_32(T107* C);
/*SMART_EIFFEL*/T0* r107feature_stamp(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107cecil_pool(void);
/*SMART_EIFFEL*/void r107register_class_invariant(T107* C,T0* a1);
/*SMART_EIFFEL*/void r107inline_dynamic_dispatch(T107* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107loaded_class_text(T0* a1);
/*SMART_EIFFEL*/T6 r107is_at_run_time(T0* a1);
/*SMART_EIFFEL*/T0* r107long_type_name(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107cluster_named(T0* a1);
/*SMART_EIFFEL*/T0* r107type_string(T107* C);
/*SMART_EIFFEL*/T0* r107type_natural_16(T107* C);
/*SMART_EIFFEL*/T0* r107context_feature(void);
/*SMART_EIFFEL*/T0* r107type_natural_32(T107* C);
/*SMART_EIFFEL*/void r107sort_live_type_map(T107* C);
/*SMART_EIFFEL*/void r107very_last_information(void);
/*SMART_EIFFEL*/T2 r107class_text_count(void);
/*SMART_EIFFEL*/T0* r107type_natural_64(T107* C);
/*SMART_EIFFEL*/T0* r107get_type(T0* a1);
/*SMART_EIFFEL*/T0* r107type_internals_handler_if_exists(void);
/*SMART_EIFFEL*/void r107update_polymorphic_distribution(T107* C,T2 a1);
/*SMART_EIFFEL*/void r107expanded_target_function_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107expanded_target_procedure_call_count_increment(T107* C);
extern T0*oBC107copyright;
extern int fBC107copyright;
/*SMART_EIFFEL*/T0* r107copyright(void);
/*SMART_EIFFEL*/void r107register_run_feature(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107create_type(T0* a1);
/*SMART_EIFFEL*/T0* r107type_natural_8(T107* C);
/*SMART_EIFFEL*/T0* r107get_inline_memo(void);
/*SMART_EIFFEL*/void r107parse_include(T0* a1);
/*SMART_EIFFEL*/void r107void_target_procedure_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107echo_magic_count(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107get_type_for_non_generic(T0* a1);
extern T0*oBC107type_dictionary;
extern int fBC107type_dictionary;
/*SMART_EIFFEL*/T0* r107type_dictionary(void);
/*SMART_EIFFEL*/void r107register_old(T0* a1);
/*SMART_EIFFEL*/void r107simplify(T107* C);
/*SMART_EIFFEL*/void r107collect_se_atexit(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107type_integer_16(T107* C);
/*SMART_EIFFEL*/T0* r107type_native_array_character(T107* C);
/*SMART_EIFFEL*/T0* r107class_text(T0* a1,T6 a2);
/*SMART_EIFFEL*/T0* r107type_integer_32(T107* C);
extern T0*oBC32se_atexit_name;
extern int fBC32se_atexit_name;
/*SMART_EIFFEL*/T0* r107se_atexit_name(void);
extern T0*oBC107agent_creation_error_trap;
extern int fBC107agent_creation_error_trap;
/*SMART_EIFFEL*/T0* r107agent_creation_error_trap(void);
/*SMART_EIFFEL*/T2 r107nb_errors(void);
extern T0*oBC107manifest_creation_name;
extern int fBC107manifest_creation_name;
/*SMART_EIFFEL*/T0* r107manifest_creation_name(T107* C);
/*SMART_EIFFEL*/T0* r107type_integer_64(T107* C);
/*SMART_EIFFEL*/T0* r107parser_buffer(void);
/*SMART_EIFFEL*/void r107polymorphic_function_call_count_increment(T107* C,T2 a1);
/*SMART_EIFFEL*/void r107register_agent_switch(T107* C,T0* a1);
/*SMART_EIFFEL*/T0* r107type_pointer(T107* C);
/*SMART_EIFFEL*/void r107collect_precomputable(T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107analyze_class(T0* a1,T0* a2);
/*SMART_EIFFEL*/void r107collect_external_function(T0* a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r107collect_local_expanded(T0* a1);
/*SMART_EIFFEL*/void r107monomorphic_function_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107register_type(T0* a1);
/*SMART_EIFFEL*/T0* r107echo(void);
/*SMART_EIFFEL*/void r107tuple_class_not_found_fatal_error(T0* a1);
/*SMART_EIFFEL*/void r107do_one_collect_cycle(T107* C);
/*SMART_EIFFEL*/void r107customize_runtime(void);
/*SMART_EIFFEL*/void r107simplify_and_optimize(T107* C,T0* a1,T0* a2);
extern T0*oBC107collected_external_functions;
extern int fBC107collected_external_functions;
/*SMART_EIFFEL*/T0* r107collected_external_functions(void);
/*SMART_EIFFEL*/T0* r107cluster_of(T0* a1,T6 a2);
extern T0*oBC107free_inline_memo;
extern int fBC107free_inline_memo;
/*SMART_EIFFEL*/T0* r107free_inline_memo(void);
/*SMART_EIFFEL*/void r107vffd7_fatal_error(T338 a1);
/*SMART_EIFFEL*/void r107covariance_check(T338 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r107argument_count_check(T0* a1,T338 a2,T0* a3,T0* a4);
/*SMART_EIFFEL*/T0* r107collect(T0* a1,T0* a2,T6 a3);
/*SMART_EIFFEL*/void r107show_live_types(T107* C);
/*SMART_EIFFEL*/T0* r107type_unicode_string(T107* C);
/*SMART_EIFFEL*/T6 r107is_ready(void);
/*SMART_EIFFEL*/T6 r107is_tagged(T107* C,T0* a1);
extern T0*oBC32introspection_handler;
/*SMART_EIFFEL*/void r107register_agent_creation(T107* C,T0* a1);
/*SMART_EIFFEL*/void r107collect_deep_features(T107* C);
extern T0*oBC32feature_accumulator;
extern int fBC32feature_accumulator;
/*SMART_EIFFEL*/T0* r107feature_accumulator(void);
/*SMART_EIFFEL*/void r107front_end(T107* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/T0* r107type_any(T107* C);
extern T0*oBC107status;
/*SMART_EIFFEL*/T0* r107type_integer_8(T107* C);
/*SMART_EIFFEL*/void r107collect_generic(T0* a1);
/*SMART_EIFFEL*/void r107register_plug_in(T0* a1);
/*SMART_EIFFEL*/void r107monomorphic_procedure_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107unknown_feature_fatal_error(T0* a1,T0* a2,T0* a3);
extern T0*oBC107memory_dispose_stamp;
extern int fBC107memory_dispose_stamp;
/*SMART_EIFFEL*/T0* r107memory_dispose_stamp(void);
/*SMART_EIFFEL*/T0* r107type_boolean(T107* C);
/*SMART_EIFFEL*/void r107compile(T107* C,T0* a1);
extern T0*oBC107collected_plug_in;
extern int fBC107collected_plug_in;
/*SMART_EIFFEL*/T0* r107collected_plug_in(void);
/*SMART_EIFFEL*/void r107clear_agent_creation_error_trap(T0* a1);
extern T0*oBC107context_feature_stack;
extern int fBC107context_feature_stack;
/*SMART_EIFFEL*/T0* r107context_feature_stack(void);
/*SMART_EIFFEL*/T0* r107eiffel_parser(void);
/*SMART_EIFFEL*/void r107collect_from_root(T107* C,T0* a1,T0* a2);
/*SMART_EIFFEL*/void r107collect_external(T0* a1);
extern T0*oBC107code_accumulator;
extern int fBC107code_accumulator;
/*SMART_EIFFEL*/T0* r107code_accumulator(void);
/*SMART_EIFFEL*/T0* r107type_real_extended(T107* C);
/*SMART_EIFFEL*/void r107void_target_function_call_count_increment(T107* C);
/*SMART_EIFFEL*/void r107echo_polymorphic_inspect_distribution(T107* C,T0* a1);
/*SMART_EIFFEL*/void r107safety_check(T107* C);
extern int fBC107initialize_any_tuple;
/*SMART_EIFFEL*/void r107initialize_any_tuple(void);
/*SMART_EIFFEL*/T6 r107try_agent_creation_error_trap(T0* a1);
/*SMART_EIFFEL*/T0* r107type_character(T107* C);
/*SMART_EIFFEL*/void r107magic_count_increment(T107* C);
/*SMART_EIFFEL*/void r107pop_context(T0* a1);
/*SMART_EIFFEL*/T0* r107collect_one_type(T0* a1,T6 a2);
extern T0*oBC32assignment_handler;
/*SMART_EIFFEL*/void r107inspect_when_merge_counter_increment(T107* C);
/*SMART_EIFFEL*/void r107collect_create(T0* a1);
/*SMART_EIFFEL*/T0* r107simplify_integer_infix_power(T338 a1,T0* a2,T0* a3);
/*SMART_EIFFEL*/void r107collect_constant(T0* a1);
/*SMART_EIFFEL*/T0* r107type_real_64(T107* C);
/*ID_PROVIDER*/void r282make(T282* C);
/*ID_PROVIDER*/T0* r282alias_of(T10 a1);
extern T0*oBC282id_memory;
extern int fBC282id_memory;
/*ID_PROVIDER*/T0* r282id_memory(void);
/*ID_PROVIDER*/T0* r282echo(void);
extern T0*oBC282per_cluster_id_memory;
extern int fBC282per_cluster_id_memory;
/*ID_PROVIDER*/T0* r282per_cluster_id_memory(void);
/*ID_PROVIDER*/T0* r282cluster_id_memory(T0* a1);
/*ID_PROVIDER*/T10 r282high_item(T282* C,T0* a1);
/*ID_PROVIDER*/void r282cluster_id_memory_add(T10 a1,T0* a2,T0* a3);
/*ID_PROVIDER*/T0* r282class_name_of(T0* a1);
/*ID_PROVIDER*/T10 r282item(T282* C,T0* a1,T0* a2);
extern T0*oBC282temporary_type_name;
extern int fBC282temporary_type_name;
/*ID_PROVIDER*/T0* r282temporary_type_name(void);
/*ID_PROVIDER*/void r282disk_save(T282* C);
/*ID_PROVIDER*/T0* r282system_tools(void);
/*ID_PROVIDER*/void r282disk_save_ids(T282* C,T0* a1,T0* a2,T0* a3);
/*ID_PROVIDER*/void r282disk_restore(T282* C);
/*ID_PROVIDER*/void r282id_memory_add(T10 a1,T0* a2,T6 a3);
/*ID_PROVIDER*/T6 r282is_valid_type_mark(T0* a1);
/*STRING_ALIASER*/T6 r272registered_one(T0* a1);
/*STRING_ALIASER*/T0* r272hashed_string(T0* a1);
/*STRING_ALIASER*/T0* r272create_hashed_string(T0* a1);
extern T0*oBC272memory;
extern int fBC272memory;
/*STRING_ALIASER*/T0* r272memory(void);
/*STRING_ALIASER*/T0* r272string(T0* a1);
/*STRING_ALIASER*/void r272echo_information(void);
/*STRING_ALIASER*/T0* r272echo(void);
extern T0*oBC272tuple_name;
extern int fBC272tuple_name;
/*STRING_ALIASER*/T0* r272tuple_name(void);
extern T0*oBC272hashed_string_buffer;
extern int fBC272hashed_string_buffer;
/*STRING_ALIASER*/T0* r272hashed_string_buffer(void);
/*GC_HANDLER*/void r619make(T619* C);
/*GC_HANDLER*/void r619gc_info_before_exit(T619* C);
/*GC_HANDLER*/void r619free_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619compute_ceils(void);
extern T0*oBC619switch_list;
extern int fBC619switch_list;
/*GC_HANDLER*/T0* r619switch_list(void);
/*GC_HANDLER*/void r619initialize_user_expanded_attributes(T0* a1,T0* a2);
/*GC_HANDLER*/void r619info_nb_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619mark_once_routines(T619* C);
/*GC_HANDLER*/T0* r619echo(void);
/*GC_HANDLER*/void r619align_mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619customize_c_runtime(T619* C);
/*GC_HANDLER*/void r619native9_in(T619* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r619na_env_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619c_dicho(T0* a1,T2 a2,T2 a3);
/*GC_HANDLER*/void r619set_info_flag(T619* C);
/*GC_HANDLER*/void r619mark_in(T0* a1,T0* a2);
/*GC_HANDLER*/T0* r619cpp(void);
/*GC_HANDLER*/void r619allocation_of(T619* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r619define_gc_start(T619* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r619agent_pool_gc_info(void);
/*GC_HANDLER*/void r619no_gc(T619* C);
/*GC_HANDLER*/void r619mark_for(T0* a1,T0* a2,T6 a3);
/*GC_HANDLER*/void r619define1(void);
/*GC_HANDLER*/void r619manifest_string_mark_signature(T2 a1);
/*GC_HANDLER*/void r619define2(T619* C);
/*GC_HANDLER*/void r619initialize_runtime(T619* C);
/*GC_HANDLER*/void r619memory_dispose(T619* C,T0* a1,T0* a2);
/*GC_HANDLER*/void r619store_left_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619store_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619store_chunk_in(T0* a1,T0* a2);
/*GC_HANDLER*/void r619define_gc_info(T619* C,T0* a1);
/*GC_HANDLER*/void r619manifest_string_in(T619* C,T0* a1,T6 a2);
/*GC_HANDLER*/void r619just_before_mark(T619* C,T0* a1);
/*GC_HANDLER*/void r619define_manifest_string_mark(void);
/*GC_HANDLER*/void r619switch_for(T0* a1);
/*SYSTEM*/int create637(void);
/*SYSTEM*/T0* r637get_environment_variable(T0* a1);
/*CECIL_POOL*/T84*create84(void);
/*CECIL_POOL*/T0* r84echo(void);
/*CECIL_POOL*/void r84parse_cecil_files(T84* C);
/*CECIL_POOL*/void r84collect(T84* C);
/*CECIL_POOL*/void r84add_cecil_file(T84* C,T0* a1);
/*CECIL_POOL*/void r84inline_dynamic_dispatch(T84* C,T0* a1,T0* a2);
/*CECIL_POOL*/void r84do_all(T84* C,T0* a1);
/*ERROR_HANDLER*/void r284put_arrows_into(T0* a1,T0* a2);
/*ERROR_HANDLER*/void r284print_as_error(T284* C);
/*ERROR_HANDLER*/void r284get_positions_on_same_line(T0* a1);
/*ERROR_HANDLER*/void r284cancel(void);
/*ERROR_HANDLER*/void r284print_spaces(T2 a1);
extern T0*oBC284positions;
extern int fBC284positions;
/*ERROR_HANDLER*/T0* r284positions(void);
/*ERROR_HANDLER*/T0* r284echo(void);
/*ERROR_HANDLER*/void r284add_position(T338 a1);
/*ERROR_HANDLER*/T2 r284detab_line(T0* a1);
/*ERROR_HANDLER*/void r284print_as_style_warning(T284* C);
/*ERROR_HANDLER*/void r284add_expression(T0* a1);
/*ERROR_HANDLER*/void r284add_instruction(T0* a1);
/*ERROR_HANDLER*/void r284print_as_fatal_error(T284* C);
/*ERROR_HANDLER*/void r284do_print(T0* a1);
/*ERROR_HANDLER*/void r284print_as_warning(T284* C);
/*ERROR_HANDLER*/void r284add_type(T0* a1);
/*ERROR_HANDLER*/void r284add_type_mark(T0* a1);
/*ERROR_HANDLER*/void r284add_context_info(T0* a1);
/*ERROR_HANDLER*/void r284append_integer_64(T11 a1);
/*ERROR_HANDLER*/T6 r284is_empty(void);
/*ERROR_HANDLER*/void r284add_feature_name(T0* a1);
/*ERROR_HANDLER*/void r284crash(T284* C);
/*ERROR_HANDLER*/void r284append_integer(T2 a1);
/*ERROR_HANDLER*/void r284print_as_internal_error(T284* C);
/*ERROR_HANDLER*/void r284print_error_header(T0* a1,T0* a2,T2 a3,T0* a4);
/*ERROR_HANDLER*/void r284display_lines(void);
/*ERROR_HANDLER*/T0* r284get_line(T0* a1,T2 a2);
extern T0*oBC284explanation;
extern int fBC284explanation;
/*ERROR_HANDLER*/T0* r284explanation(void);
/*FILE_TOOLS*/int create285(void);
extern T0*oBC285tfr1;
extern T0*oBC285tfr2;
/*FILE_TOOLS*/T6 r285same_files(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r285is_readable(T0* a1);
/*FILE_TOOLS*/T6 r285file_exists(T0* a1);
/*FILE_TOOLS*/void r285delete(T0* a1);
/*FILE_TOOLS*/T6 r285is_empty(T0* a1);
/*FILE_TOOLS*/T6 r285is_file(T0* a1);
/*FILE_TOOLS*/T6 r285is_directory(T0* a1);
/*FILE_TOOLS*/void r285rename_to(T0* a1,T0* a2);
/*FILE_TOOLS*/T6 r285same_physical_file(T0* a1,T0* a2);
/*SERC_FACTORY*/void r549add_to_chain(T0* a1,T0* a2);
extern T0*oBC549config;
extern int fBC549config;
/*SERC_FACTORY*/T0* r549config(T0* a1);
extern T0*oBC549seconf_env;
extern int fBC549seconf_env;
/*SERC_FACTORY*/T0* r549seconf_env(void);
extern T0*oBC549userprofile_env;
extern int fBC549userprofile_env;
/*SERC_FACTORY*/T0* r549userprofile_env(void);
extern T0*oBC549home_env;
extern int fBC549home_env;
/*SERC_FACTORY*/T0* r549home_env(void);
/*SERC_FACTORY*/T0* r549parser_buffer(void);
/*SERC_FACTORY*/T0* r549env(T0* a1);
/*BASIC_DIRECTORY*/void r534compute_file_path_with(T0* a1,T0* a2);
/*BASIC_DIRECTORY*/T6 r534macintosh_notation(void);
/*BASIC_DIRECTORY*/T6 r534openvms_notation(void);
/*BASIC_DIRECTORY*/void r534compute_parent_directory_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r534unix_notation(void);
/*BASIC_DIRECTORY*/void r534compute_absolute_file_path_with(T0* a1);
/*BASIC_DIRECTORY*/void r534connect_to_current_working_directory(T534* C);
/*BASIC_DIRECTORY*/T6 r534windows_notation(void);
/*BASIC_DIRECTORY*/T6 r534amiga_notation(void);
/*BASIC_DIRECTORY*/void r534set_notation_using(T0* a1);
/*BASIC_DIRECTORY*/void r534compute_short_name_of(T0* a1);
/*BASIC_DIRECTORY*/T6 r534cygwin_notation(void);
extern T0*oBC534last_entry;
extern int fBC534last_entry;
/*BASIC_DIRECTORY*/T0* r534last_entry(void);
/*BASIC_DIRECTORY*/T0* r534current_working_directory(void);
/*BASIC_DIRECTORY*/T0* r534system_notation(void);
/*BASIC_DIRECTORY*/void r534compute_subdirectory_with(T0* a1,T0* a2);
extern int fBC534ensure_system_notation;
/*BASIC_DIRECTORY*/void r534ensure_system_notation(void);
/*BASIC_DIRECTORY*/void r534connect_to(T534* C,T0* a1);
/*BASIC_DIRECTORY*/void r534read_entry(T534* C);
/*BASIC_DIRECTORY*/void r534disconnect(T534* C);
extern T0*oBC534system_notation_buffer;
/*STD_INPUT_OUTPUT*/void r77put_line(T77* C,T0* a1);
extern T0*oBC17std_input;
extern int fBC17std_input;
/*STD_INPUT_OUTPUT*/T0* r77std_input(void);
/*STD_INPUT_OUTPUT*/T0* r77std_output(void);
/*STD_INPUT_OUTPUT*/T6 r77is_connected(void);
/*STD_INPUT_OUTPUT*/void r77put_string(T77* C,T0* a1);
extern T0*oBC71tmp_string;
extern int fBC71tmp_string;
/*STD_INPUT_OUTPUT*/T0* r77tmp_string(void);
/*STD_INPUT_OUTPUT*/void r77put_real_format(T77* C,T5 a1,T2 a2);
/*STD_INPUT_OUTPUT*/void r77put_integer(T77* C,T11 a1);
/*STD_INPUT_OUTPUT*/void r77put_abstract_string(T0* a1);
/*STD_INPUT_OUTPUT*/void r77disconnect(void);
/*STD_INPUT_OUTPUT*/T0* r77as_output_stream(T77* C);
/*UNIX_DIRECTORY_NOTATION*/T536*create536(void);
/*UNIX_DIRECTORY_NOTATION*/void r536to_subpath_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/T0* r536from_path_name(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r536to_subdirectory_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536start_join(T536* C,T0* a1,T2 a2);
/*UNIX_DIRECTORY_NOTATION*/void r536to_root(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536join_element(T536* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r536to_directory_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r536to_short_name_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536to_current_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r536to_file_path_with(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536from_notation(T536* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536to_absolute_path_in(T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536to_parent_directory(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/void r536join_directory(T536* C,T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T6 r536is_absolute_path(T0* a1);
/*UNIX_DIRECTORY_NOTATION*/T0* r536to_notation(T536* C,T0* a1,T0* a2);
/*UNIX_DIRECTORY_NOTATION*/void r536join_up(T536* C);
/*UNIX_DIRECTORY_NOTATION*/void r536to_default_root(T0* a1);
extern T0*oBC536tmp1;
extern int fBC536tmp1;
/*UNIX_DIRECTORY_NOTATION*/T0* r536tmp1(void);
extern T0*oBC536tmp2;
extern int fBC536tmp2;
/*UNIX_DIRECTORY_NOTATION*/T0* r536tmp2(void);
/*WINDOWS_DIRECTORY_NOTATION*/T540*create540(void);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_subpath_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r540from_path_name(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_subdirectory_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540start_join(T540* C,T0* a1,T2 a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_root(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540join_element(T540* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_directory_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_short_name_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_current_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_file_path_with(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540from_notation(T540* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_absolute_path_in(T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_parent_directory(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/void r540join_directory(T540* C,T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T6 r540is_absolute_path(T0* a1);
/*WINDOWS_DIRECTORY_NOTATION*/T0* r540to_notation(T540* C,T0* a1,T0* a2);
/*WINDOWS_DIRECTORY_NOTATION*/void r540join_up(T540* C);
/*WINDOWS_DIRECTORY_NOTATION*/void r540to_default_root(T0* a1);
extern T0*oBC540tmp1;
extern int fBC540tmp1;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r540tmp1(void);
extern T0*oBC540tmp2;
extern int fBC540tmp2;
/*WINDOWS_DIRECTORY_NOTATION*/T0* r540tmp2(void);
/*MACINTOSH_DIRECTORY_NOTATION*/T541*create541(void);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_subpath_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_subdirectory_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_directory_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_short_name_in(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_current_directory(T541* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_file_path_with(T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541from_notation(T541* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_absolute_path_in(T541* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_parent_directory(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r541is_absolute_path(T541* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/T0* r541to_notation(T541* C,T0* a1,T0* a2);
/*MACINTOSH_DIRECTORY_NOTATION*/T6 r541is_valid_path(T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541to_default_root(T541* C,T0* a1);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541crash(T541* C);
/*MACINTOSH_DIRECTORY_NOTATION*/void r541not_yet_implemented(T541* C);
/*AMIGA_DIRECTORY_NOTATION*/T542*create542(void);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_subpath_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_subdirectory_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_directory_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_short_name_in(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_current_directory(T542* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_file_path_with(T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r542from_notation(T542* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_absolute_path_in(T542* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_parent_directory(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T6 r542is_absolute_path(T542* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/T0* r542to_notation(T542* C,T0* a1,T0* a2);
/*AMIGA_DIRECTORY_NOTATION*/T6 r542is_valid_path(T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r542to_default_root(T542* C,T0* a1);
/*AMIGA_DIRECTORY_NOTATION*/void r542crash(T542* C);
/*AMIGA_DIRECTORY_NOTATION*/void r542not_yet_implemented(T542* C);
/*OPENVMS_DIRECTORY_NOTATION*/T543*create543(void);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_subpath_with(T543* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_subdirectory_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_directory_path(T543* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_short_name_in(T543* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_current_directory(T543* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_file_path_with(T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r543from_notation(T543* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_absolute_path_in(T543* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_parent_directory(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r543is_absolute_path(T543* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/T0* r543to_notation(T543* C,T0* a1,T0* a2);
/*OPENVMS_DIRECTORY_NOTATION*/T6 r543is_valid_path(T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r543to_default_root(T543* C,T0* a1);
/*OPENVMS_DIRECTORY_NOTATION*/void r543crash(T543* C);
/*OPENVMS_DIRECTORY_NOTATION*/void r543not_yet_implemented(T543* C);
/*CYGWIN_DIRECTORY_NOTATION*/T544*create544(void);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_subpath_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_subdirectory_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_directory_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_short_name_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_current_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_file_path_with(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r544from_notation(T544* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_absolute_path_in(T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_parent_directory(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r544is_absolute_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/T0* r544to_notation(T544* C,T0* a1,T0* a2);
/*CYGWIN_DIRECTORY_NOTATION*/T6 r544is_valid_path(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r544to_default_root(T0* a1);
/*CYGWIN_DIRECTORY_NOTATION*/void r544crash(T544* C);
/*CYGWIN_DIRECTORY_NOTATION*/void r544not_yet_implemented(T544* C);
/*TEXT_FILE_READ*/void r98unlock_tagged_out(void);
/*TEXT_FILE_READ*/T0* r98tagged_out_memory_pool(void);
/*TEXT_FILE_READ*/void r98filtered_read_character(T98* C);
/*TEXT_FILE_READ*/void r98lock_tagged_out(void);
/*TEXT_FILE_READ*/void r98filtered_read_line_in(T98* C,T0* a1);
/*TEXT_FILE_READ*/void r98set_path(T98* C,T0* a1);
/*TEXT_FILE_READ*/void r98read_line(T98* C);
/*TEXT_FILE_READ*/void r98fill_buffer(T98* C);
/*TEXT_FILE_READ*/T6 r98same_as(T98* C,T0* a1);
/*TEXT_FILE_READ*/void r98connect_to(T98* C,T0* a1);
extern T0*oBC65last_string;
extern int fBC65last_string;
/*TEXT_FILE_READ*/T0* r98last_string(void);
/*TEXT_FILE_READ*/void r98dispose(T98* C);
/*TEXT_FILE_READ*/void r98disconnect(T98* C);
/*TEXT_FILE_READ*/T0* r98tagged_out_memories(void);
/*SE_C_MODE*/void r535make(T535* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8,T0* a9,T0* a10,T0* a11,T0* a12,T0* a13);
/*TMP_FEATURE*/T0* r452as_character_constant(T452* C,T0* a1);
/*TMP_FEATURE*/T0* r452n(T452* C);
/*TMP_FEATURE*/T0* r452as_once_routine(T452* C);
/*TMP_FEATURE*/T0* r452as_deferred_routine(T452* C);
/*TMP_FEATURE*/void r452constant_attribute_common_checks(T452* C,T0* a1);
/*TMP_FEATURE*/T0* r452as_writable_attribute(T452* C);
/*TMP_FEATURE*/void r452initialize(T452* C);
/*TMP_FEATURE*/T0* r452as_string_constant(T452* C,T0* a1);
/*TMP_FEATURE*/void r452set_require(T452* C,T338 a1,T6 a2,T0* a3,T0* a4);
/*TMP_FEATURE*/T0* r452as_constant(T452* C,T0* a1);
/*TMP_FEATURE*/T0* r452as_procedure_or_function(T452* C);
/*TMP_FEATURE*/T0* r452as_unique_constant(T452* C);
/*TMP_FEATURE*/T0* r452as_external_routine(T452* C,T0* a1,T0* a2);
/*TMP_FEATURE*/T0* r452as_boolean_constant(T452* C,T0* a1);
/*TEXT_FILE_WRITE*/void r451put_line(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/T11 r451character_count(T451* C);
/*TEXT_FILE_WRITE*/void r451make(T451* C);
/*TEXT_FILE_WRITE*/void r451unlock_tagged_out(void);
/*TEXT_FILE_WRITE*/T0* r451tagged_out_memory_pool(void);
/*TEXT_FILE_WRITE*/void r451filtered_put_character(T451* C,T3 a1);
/*TEXT_FILE_WRITE*/void r451lock_tagged_out(void);
/*TEXT_FILE_WRITE*/void r451set_path(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/T6 r451is_connected(T451* C);
/*TEXT_FILE_WRITE*/void r451put_string(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/T0* r451tmp_string(void);
/*TEXT_FILE_WRITE*/void r451put_real_format(T451* C,T5 a1,T2 a2);
/*TEXT_FILE_WRITE*/void r451put_integer(T451* C,T11 a1);
/*TEXT_FILE_WRITE*/void r451connect_to(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/void r451filtered_flush(T451* C);
/*TEXT_FILE_WRITE*/void r451put_abstract_string(T451* C,T0* a1);
/*TEXT_FILE_WRITE*/void r451dispose(T451* C);
/*TEXT_FILE_WRITE*/void r451disconnect(T451* C);
/*TEXT_FILE_WRITE*/T0* r451tagged_out_memories(void);
/*TEXT_FILE_WRITE*/T0* r451as_output_stream(T451* C);
/*TEXT_FILE_WRITE*/void r451write_buffer(T451* C);
/*LINES_OUTPUT_STREAM*/void r639put_line(T639* C,T0* a1);
/*LINES_OUTPUT_STREAM*/void r639filtered_put_character(T639* C,T3 a1);
/*LINES_OUTPUT_STREAM*/T6 r639can_disconnect(T639* C);
/*LINES_OUTPUT_STREAM*/T6 r639is_connected(T639* C);
/*LINES_OUTPUT_STREAM*/void r639put_string(T639* C,T0* a1);
/*LINES_OUTPUT_STREAM*/T0* r639tmp_string(void);
/*LINES_OUTPUT_STREAM*/void r639put_real_format(T639* C,T5 a1,T2 a2);
/*LINES_OUTPUT_STREAM*/void r639put_integer(T639* C,T11 a1);
/*LINES_OUTPUT_STREAM*/void r639connect_to(T639* C,T0* a1);
/*LINES_OUTPUT_STREAM*/void r639filtered_flush(T639* C);
/*LINES_OUTPUT_STREAM*/void r639put_abstract_string(T639* C,T0* a1);
/*LINES_OUTPUT_STREAM*/void r639dispose(T639* C);
/*LINES_OUTPUT_STREAM*/void r639disconnect(T639* C);
/*LINES_OUTPUT_STREAM*/T0* r639as_output_stream(T639* C);
/*STD_ERROR*/void r80put_line(T80* C,T0* a1);
/*STD_ERROR*/void r80put_natively_stored_string(T0* a1);
/*STD_ERROR*/T0* r80std_output(void);
/*STD_ERROR*/void r80put_string(T80* C,T0* a1);
/*STD_ERROR*/T0* r80tmp_string(void);
/*STD_ERROR*/void r80put_real_format(T80* C,T5 a1,T2 a2);
/*STD_ERROR*/void r80put_integer(T80* C,T11 a1);
/*STD_ERROR*/void r80filtered_flush(void);
/*STD_ERROR*/T0* r80as_output_stream(T80* C);
/*STD_OUTPUT*/void r68put_line(T68* C,T0* a1);
/*STD_OUTPUT*/void r68make(T68* C);
/*STD_OUTPUT*/void r68filtered_put_character(T68* C,T3 a1);
/*STD_OUTPUT*/void r68put_natively_stored_string(T68* C,T0* a1);
/*STD_OUTPUT*/T0* r68std_output(void);
/*STD_OUTPUT*/void r68flush(T68* C);
/*STD_OUTPUT*/void r68put_string(T68* C,T0* a1);
/*STD_OUTPUT*/T0* r68tmp_string(void);
/*STD_OUTPUT*/void r68put_real_format(T68* C,T5 a1,T2 a2);
/*STD_OUTPUT*/void r68put_integer(T68* C,T11 a1);
/*STD_OUTPUT*/void r68se_atexit(void);
/*STD_OUTPUT*/void r68filtered_flush(T68* C);
/*STD_OUTPUT*/T0* r68as_output_stream(T68* C);
/*STD_OUTPUT*/void r68write_buffer(T68* C);
/*HASHED_STRING*/T6 r103is_equal(T103* C,T0* a1);
/*HASHED_STRING*/void r103make(T103* C,T0* a1,T2 a2);
/*HASHED_STRING*/void r103set(T103* C,T0* a1);
/*HASHED_STRING*/T6 r103is_tuple_related(T103* C);
/*PARSER_BUFFER*/void r118make(T118* C);
/*PARSER_BUFFER*/void r118release(T118* C);
/*PARSER_BUFFER*/void r118load_file(T118* C,T0* a1);
/*PARSER_BUFFER*/T0* r118empty_line_at(T118* C,T2 a1);
/*C_SPLITTER_NO_SPLIT*/void r682make(void);
/*C_SPLITTER_NO_SPLIT*/void r682connect(T682* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/void r682split_now(T682* C);
/*C_SPLITTER_NO_SPLIT*/void r682connect_out_c(T682* C);
/*C_SPLITTER_NO_SPLIT*/T0* r682echo(void);
/*C_SPLITTER_NO_SPLIT*/void r682c_connect(T682* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r682cpp(void);
/*C_SPLITTER_NO_SPLIT*/T0* r682system_tools(void);
extern T0*oBC683out_c;
extern int fBC683out_c;
/*C_SPLITTER_NO_SPLIT*/T0* r682out_c(void);
/*C_SPLITTER_NO_SPLIT*/T6 r682write_make_file(T682* C,T0* a1);
/*C_SPLITTER_NO_SPLIT*/T0* r682linker_command(T682* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686make(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r686should_split(T686* C,T2 a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686connect(T686* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686split_now(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686connect_out_c(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686echo(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686c_files_suffixes(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T2 r686current_id(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686c_connect(T686* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686cpp(void);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686current_c_file_suffix(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686tmp_path(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686backup_tfw_connect(T686* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686system_tools(void);
extern T0*oBC685tmp_string;
extern int fBC685tmp_string;
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686tmp_string(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686do_split(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686path_in(T686* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686out_c(void);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686set_live_type(T686* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686append_suffix(T686* C);
/*C_SPLITTER_BY_LIVE_TYPE*/T6 r686write_make_file(T686* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/T0* r686linker_command(T686* C,T0* a1);
/*C_SPLITTER_BY_LIVE_TYPE*/void r686_P_683_connect(T686* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r684make(T684* C);
/*C_SPLITTER_LEGACY*/void r684add_objects_(T0* a1,T0* a2,T2 a3,T2 a4);
/*C_SPLITTER_LEGACY*/T6 r684should_split(T684* C,T2 a1);
/*C_SPLITTER_LEGACY*/void r684connect(T684* C,T0* a1);
/*C_SPLITTER_LEGACY*/void r684split_now(T684* C);
/*C_SPLITTER_LEGACY*/void r684connect_out_c(T684* C);
/*C_SPLITTER_LEGACY*/T0* r684echo(void);
/*C_SPLITTER_LEGACY*/T0* r684c_files_suffixes(T684* C);
/*C_SPLITTER_LEGACY*/void r684c_connect(T684* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r684cpp(void);
/*C_SPLITTER_LEGACY*/T0* r684current_c_file_suffix(T684* C);
/*C_SPLITTER_LEGACY*/void r684add_objects(T684* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r684tmp_path(void);
/*C_SPLITTER_LEGACY*/void r684backup_tfw_connect(T684* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r684system_tools(void);
/*C_SPLITTER_LEGACY*/T0* r684tmp_string(void);
/*C_SPLITTER_LEGACY*/void r684do_split(T684* C);
/*C_SPLITTER_LEGACY*/void r684path_in(T684* C,T0* a1,T0* a2,T0* a3);
/*C_SPLITTER_LEGACY*/T0* r684out_c(void);
/*C_SPLITTER_LEGACY*/T6 r684write_make_file(T684* C,T0* a1);
/*C_SPLITTER_LEGACY*/T0* r684linker_command(T684* C,T0* a1);
/*DIRECTORY*/T0* r545connect_directory(T545* C,T0* a1);
/*DIRECTORY*/void r545scan(T545* C,T0* a1);
/*UNIVERSE*/void r678make(T678* C);
/*UNIVERSE*/void r678add_classes(T678* C,T0* a1);
/*UNIVERSE*/void r678for_all(T678* C,T0* a1);
/*UNIVERSE*/T2 r678cluster_count(T678* C);
extern T0*oBC680classes_notation;
/*UNIVERSE*/T6 r678has_physical_cluster(T678* C,T0* a1);
/*UNIVERSE*/T0* r678echo(void);
/*UNIVERSE*/T0* r678cluster_named(T678* C,T0* a1);
/*UNIVERSE*/T6 r678is_system_path(T678* C,T0* a1);
/*UNIVERSE*/void r678get_started(T678* C,T2 a1);
/*UNIVERSE*/T0* r678system_path_to_classes_path(T678* C,T0* a1);
/*UNIVERSE*/void r678clusters_of(T678* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*UNIVERSE*/void r678add_entry(T678* C,T2 a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*UNIVERSE*/void r678view_in(T678* C,T0* a1);
extern T0*oBC680system_notation;
extern int fBC680system_notation;
/*UNIVERSE*/T0* r678system_notation(T678* C);
/*UNIVERSE*/T2 r678loaded_class_count(T678* C);
/*UNIVERSE*/void r678show_tabs(T2 a1);
/*UNIVERSE*/void r678parse_include(T678* C);
/*UNIVERSE*/T0* r678find_physical_cluster(T678* C,T0* a1);
/*UNIVERSE*/void r678show(T678* C,T2 a1);
/*POSITION*/T6 r338is_equal(T338* C,T338 a1);
/*POSITION*/void r338set(T338* C,T2 a1,T2 a2,T10 a3,T0* a4);
/*POSITION*/T6 r338sedb_trace(T338* C);
/*POSITION*/T6 r338same_line_as(T338* C,T338 a1);
extern T0*oBC32plugin_config;
/*POSITION*/T0* r338path(T338* C);
/*POSITION*/T10 r338id(T338* C);
/*POSITION*/void r338set_in_ace_file(T338* C,T2 a1,T2 a2);
/*POSITION*/T0* r338class_text_name(T338* C);
/*POSITION*/T0* r338id_provider(void);
extern T1052 oBC338class_text_storage;
extern T0*oBC32ini_parser;
/*POSITION*/void r338set_in_ini_file(T338* C,T2 a1,T2 a2,T10 a3);
/*POSITION*/T6 r338_ix_60(T338* C,T338 a1);
/*POSITION*/T0* r338class_text(T338* C);
/*POSITION*/T2 r338column(T338* C);
/*POSITION*/T2 r338line(T338* C);
/*POSITION*/T6 r338before(T338* C,T338 a1);
/*COMMENT*/T0* r420to_expression(T420* C);
/*COMMENT*/void r420make(T420* C,T338 a1,T0* a2);
/*COMMENT*/void r420pretty(T420* C,T2 a1);
/*COMMENT*/T0* r420simplify(T0* a1);
/*COMMENT*/void r420good_end_warning_check(T420* C,T0* a1);
/*COMMENT*/T6 r420is_dummy_feature_end(T420* C,T0* a1);
/*COMMENT*/void r420add_last(T420* C,T0* a1);
/*COMMENT*/void r420append(T420* C,T0* a1);
/*COMMENT*/T6 r420use_current(T0* a1);
/*COMMENT*/T6 r420side_effect_free(T0* a1);
/*COMMENT*/T0* r420inline_dynamic_dispatch(T0* a1,T0* a2);
/*COMMENT*/T2 r420count(T420* C);
/*COMMENT*/T0* r420to_instruction(T420* C);
/*UNICODE_STRING*/void r319make(T319* C,T2 a1);
/*UNICODE_STRING*/void r319make_empty(T319* C);
/*UNICODE_STRING*/T6 r319valid_unicode(T2 a1);
/*UNICODE_STRING*/void r319utf8_character_in(T2 a1,T0* a2);
/*UNICODE_STRING*/void r319extend(T319* C,T2 a1);
/*UNICODE_STRING*/void r319add_last(T319* C,T2 a1);
/*UNICODE_STRING*/T10 r319low_surrogate_value(T319* C,T2 a1);
/*UNICODE_STRING*/T2 r319item(T319* C,T2 a1);
/*UNICODE_STRING*/void r319clear_count(T319* C);
/*UNICODE_STRING*/void r319utf8_encode_in(T319* C,T0* a1);
/*UNICODE_STRING*/void r319next_generation(T319* C);
extern T0*oBC681classes_memory;
extern int fBC681classes_memory;
/*CLASSES_TREE_FACTORY*/T0* r681classes_memory(void);
/*CLASSES_TREE_FACTORY*/T0* r681classes(T681* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
extern T0*oBC681universe;
extern int fBC681universe;
/*CLASSES_TREE_FACTORY*/T0* r681universe(void);
/*CLUSTER*/void r429register_class_text(T429* C,T0* a1);
extern T0*oBC429file_name_buffer;
extern int fBC429file_name_buffer;
/*CLUSTER*/T0* r429file_name_buffer(void);
/*CLUSTER*/void r429exclude_add_last(T429* C,T0* a1);
/*CLUSTER*/void r429include_add_last(T429* C,T0* a1);
/*CLUSTER*/void r429read_classes(T429* C);
/*CLUSTER*/T6 r429trace(T429* C,T0* a1);
/*CLUSTER*/void r429include_parsing(T429* C);
/*CLUSTER*/T0* r429system_tools(void);
/*CLUSTER*/T6 r429debug_check(T429* C,T0* a1,T0* a2);
extern T0*oBC429path_buffer;
extern int fBC429path_buffer;
/*CLUSTER*/T0* r429path_buffer(void);
/*CLUSTER*/T2 r429class_text_count(T429* C);
/*CLUSTER*/void r429add_default_debug_key(T429* C,T0* a1);
/*CLUSTER*/T2 r429assertion_level_of(T429* C,T0* a1);
/*CLUSTER*/T0* r429parser_buffer(void);
/*CLUSTER*/T6 r429parser_buffer_load(T429* C);
/*CLUSTER*/void r429show(T429* C);
/*CLUSTER*/void r429make(T429* C,T0* a1,T0* a2,T0* a3);
/*CLUSTER*/T0* r429echo(void);
/*CLUSTER*/T2 r429loaded_class_count(T429* C);
/*CLUSTER*/void r429init(T429* C,T0* a1,T2 a2);
/*CLUSTER*/T6 r429parser_buffer_for(T429* C,T0* a1,T6 a2);
/*CLUSTER*/T0* r429level_name(T2 a1);
/*CLUSTER*/T6 r429match_debug_keys(T0* a1,T0* a2);
/*CLUSTER*/T6 r429default_trace_or_ace_default_trace(T429* C);
/*CLUSTER*/void r429set_option_assertion_level(T429* C,T0* a1,T2 a2);
/*CLUSTER*/void r429for_all(T429* C,T0* a1);
/*CLUSTER*/T0* r429class_text(T429* C,T0* a1,T6 a2,T6 a3);
/*CLUSTER*/void r429set_default_trace(T429* C,T6 a1);
/*CLUSTER*/void r429add_option_trace(T429* C,T0* a1);
/*CLUSTER*/void r429get_started(T429* C,T2 a1);
/*CLUSTER*/void r429view_in(T429* C,T0* a1);
/*CLUSTER*/T6 r429prepare_parser_buffer_for(T429* C,T0* a1);
/*CLUSTER*/void r429add_option_debug_key(T429* C,T0* a1,T0* a2);
/*TOKEN_BUFFER*/T0* r756to_class_name(T756* C);
/*TOKEN_BUFFER*/T0* r756eiffel_parser(void);
/*TOKEN_BUFFER*/T0* r756to_feature_name(T756* C);
/*TOKEN_BUFFER*/T0* r756to_tag_name(T756* C);
/*TOKEN_BUFFER*/T0* r756to_argument_name1(T756* C);
/*TOKEN_BUFFER*/T0* r756to_argument_name2(T756* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/void r756extend(T3 a1);
/*TOKEN_BUFFER*/T6 r756isa_keyword(void);
/*TOKEN_BUFFER*/T0* r756hashed_string(T756* C);
/*TOKEN_BUFFER*/T338 r756start_position(T756* C);
/*TOKEN_BUFFER*/T0* r756to_manifest_string(T756* C);
/*TOKEN_BUFFER*/T0* r756to_writable_attribute_name(T756* C);
/*TOKEN_BUFFER*/void r756append(T0* a1);
/*TOKEN_BUFFER*/void r756reset(T756* C,T2 a1,T2 a2);
/*TOKEN_BUFFER*/T0* r756to_local_name2(T756* C,T0* a1,T2 a2);
/*TOKEN_BUFFER*/T0* r756to_local_name1(T756* C);
typedef struct _se_agenT564f565l25c44 se_agenT564f565l25c44;
struct _se_agenT564f565l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT564f565l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT564f565l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT564f565l25c44(T0* closed_C);
void gc_mark_agenT564f565l25c44(se_agenT564f565l25c44*u);
/*C_HEADER_PASS_1*/void r564make(T564* C);
/*C_HEADER_PASS_1*/void r564compile_live_type(T564* C,T0* a1);
/*C_HEADER_PASS_1*/void r564visit_native_array_type_mark(T564* C,T0* a1);
/*C_HEADER_PASS_1*/void r564visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_1*/void r564standard_c_typedef(T0* a1);
/*C_HEADER_PASS_1*/void r564pre_compile(void);
/*C_HEADER_PASS_1*/void r564visit_agent_type_mark(T0* a1);
/*C_HEADER_PASS_1*/T0* r564cpp(void);
/*C_HEADER_PASS_1*/void r564do_compile(T564* C,T0* a1);
/*C_HEADER_PASS_1*/void r564compile(T564* C);
/*C_HEADER_PASS_1*/void r564flush_out_h(void);
/*C_HEADER_PASS_1*/void r564visit_class_type_mark(T0* a1);
typedef struct _se_agenT594f565l25c44 se_agenT594f565l25c44;
struct _se_agenT594f565l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT594f565l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT594f565l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT594f565l25c44(T0* closed_C);
void gc_mark_agenT594f565l25c44(se_agenT594f565l25c44*u);
/*C_HEADER_PASS_2*/void r594make(T594* C);
/*C_HEADER_PASS_2*/void r594compile_live_type(T594* C,T0* a1);
/*C_HEADER_PASS_2*/void r594visit_native_array_type_mark(T594* C,T0* a1);
/*C_HEADER_PASS_2*/T0* r594cpp(void);
/*C_HEADER_PASS_2*/void r594do_compile(T594* C,T0* a1);
/*C_HEADER_PASS_2*/void r594compile(T594* C);
/*C_HEADER_PASS_2*/void r594native_array_type_in(T0* a1,T0* a2);
/*C_HEADER_PASS_2*/void r594flush_out_h(void);
typedef struct _se_agenT595f595l22c50 se_agenT595f595l22c50;
struct _se_agenT595f595l22c50{Tid id;
int creation_mold_id;
void(*afp)(se_agenT595f595l22c50*,T0*);
void(*gc_mark_agent_mold)(se_agenT595f595l22c50*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT595f595l22c50(T0* closed_C);
void gc_mark_agenT595f595l22c50(se_agenT595f595l22c50*u);
typedef struct _se_agenT595f565l25c44 se_agenT595f565l25c44;
struct _se_agenT595f565l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT595f565l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT595f565l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT595f565l25c44(T0* closed_C);
void gc_mark_agenT595f565l25c44(se_agenT595f565l25c44*u);
/*C_HEADER_PASS_3*/void r595make(T595* C);
/*C_HEADER_PASS_3*/void r595standard_c_object_model(T0* a1);
/*C_HEADER_PASS_3*/void r595compile_expanded(T595* C,T0* a1);
/*C_HEADER_PASS_3*/void r595compile_live_type(T595* C,T0* a1);
/*C_HEADER_PASS_3*/void r595c_object_model_in(T0* a1);
/*C_HEADER_PASS_3*/void r595visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_3*/T0* r595cpp(void);
/*C_HEADER_PASS_3*/void r595do_compile(T595* C,T0* a1);
/*C_HEADER_PASS_3*/void r595compile(T595* C);
/*C_HEADER_PASS_3*/void r595flush_out_h(void);
/*C_HEADER_PASS_3*/void r595standard_c_struct(T0* a1);
/*C_HEADER_PASS_3*/void r595visit_class_type_mark(T0* a1);
typedef struct _se_agenT596f565l25c44 se_agenT596f565l25c44;
struct _se_agenT596f565l25c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT596f565l25c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT596f565l25c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT596f565l25c44(T0* closed_C);
void gc_mark_agenT596f565l25c44(se_agenT596f565l25c44*u);
/*C_HEADER_PASS_4*/void r596visit_empty_tuple_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r596make(T596* C);
/*C_HEADER_PASS_4*/void r596visit_string_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r596standard_c_object_model(T0* a1);
/*C_HEADER_PASS_4*/void r596compile_live_type(T596* C,T0* a1);
/*C_HEADER_PASS_4*/void r596visit_natural_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r596c_object_model_in(T0* a1);
/*C_HEADER_PASS_4*/void r596visit_user_generic_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r596c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r596visit_any_type_mark(T0* a1);
/*C_HEADER_PASS_4*/T0* r596cpp(void);
/*C_HEADER_PASS_4*/void r596do_compile(T596* C,T0* a1);
/*C_HEADER_PASS_4*/void r596compile(T596* C);
/*C_HEADER_PASS_4*/void r596standard_c_print_function(T0* a1);
/*C_HEADER_PASS_4*/void r596flush_out_h(void);
/*C_HEADER_PASS_4*/void r596visit_array_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r596standard_c_struct(T0* a1);
/*C_HEADER_PASS_4*/void r596visit_class_type_mark(T0* a1);
/*C_HEADER_PASS_4*/void r596visit_non_empty_tuple_type_mark(T0* a1);
typedef struct _se_agenT597f597l77c54 se_agenT597f597l77c54;
struct _se_agenT597f597l77c54{Tid id;
int creation_mold_id;
void(*afp)(se_agenT597f597l77c54*,T0*);
void(*gc_mark_agent_mold)(se_agenT597f597l77c54*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT597f597l77c54(T0* closed_a1);
void gc_mark_agenT597f597l77c54(se_agenT597f597l77c54*u);
typedef struct _se_agenT597f597l106c53 se_agenT597f597l106c53;
struct _se_agenT597f597l106c53{Tid id;
int creation_mold_id;
void(*afp)(se_agenT597f597l106c53*,T0*);
void(*gc_mark_agent_mold)(se_agenT597f597l106c53*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT597f597l106c53(T0* closed_a1);
void gc_mark_agenT597f597l106c53(se_agenT597f597l106c53*u);
typedef struct _se_agenT597f597l117c20 se_agenT597f597l117c20;
struct _se_agenT597f597l117c20{Tid id;
int creation_mold_id;
void(*afp)(se_agenT597f597l117c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT597f597l117c20*);
int (*eq)(se_agent*,se_agent*);
};
/*agent creation*/T0*agenT597f597l117c20(void);
void gc_mark_agenT597f597l117c20(se_agenT597f597l117c20*u);
/*C_LIVE_TYPE_COMPILER*/void r597create_function_define(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r597set_pending_c_function_counter_tag(T0* a1);
extern T0*oBC597c_frame_descriptor_format;
extern int fBC597c_frame_descriptor_format;
/*C_LIVE_TYPE_COMPILER*/T0* r597c_frame_descriptor_format(void);
/*C_LIVE_TYPE_COMPILER*/T0* r597internal_c_local_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597set_internal_c_local_tag(T0* a1,T0* a2);
extern T0*oBC593pending_c_function_counter_tag_key;
extern int fBC593pending_c_function_counter_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r597pending_c_function_counter_tag_key(void);
/*C_LIVE_TYPE_COMPILER*/void r597define_agent_creation_for(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597put_c_field_name(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T6 r597rf7_does_need_c_wrapper(T0* a1);
extern T0*oBC593pending_c_function_counter_tag_values;
extern int fBC593pending_c_function_counter_tag_values;
/*C_LIVE_TYPE_COMPILER*/T0* r597pending_c_function_counter_tag_values(void);
extern T0*oBC593internal_c_local_tag_key;
extern int fBC593internal_c_local_tag_key;
/*C_LIVE_TYPE_COMPILER*/T0* r597internal_c_local_tag_key(void);
extern T0*oBC597c_frame_descriptor_locals;
extern int fBC597c_frame_descriptor_locals;
/*C_LIVE_TYPE_COMPILER*/T0* r597c_frame_descriptor_locals(void);
/*C_LIVE_TYPE_COMPILER*/T0* r597cpp(void);
/*C_LIVE_TYPE_COMPILER*/void r597define_c_signature(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597is_equal_agent_creation_define_function(T0* a1,T0* a2);
extern T0*oBC597is_equal_agent_creation_type_generated;
extern int fBC597is_equal_agent_creation_type_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r597is_equal_agent_creation_type_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r597rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r597compile_live_type(T597* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597put_c_name_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_2(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_3(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_4(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597c_frame_descriptor(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_5(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597define_agent_creation_function(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_6(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597make(T597* C);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_7(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597args_c_frame_descriptor(T0* a1,T0* a2,T6 a3);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_8(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597visit_run_feature_9(T0* a1);
/*C_LIVE_TYPE_COMPILER*/T0* r597echo(void);
/*C_LIVE_TYPE_COMPILER*/T6 r597rf8_does_need_c_wrapper(T0* a1);
extern T0*oBC597agent_address_of_c_define;
extern int fBC597agent_address_of_c_define;
/*C_LIVE_TYPE_COMPILER*/T0* r597agent_address_of_c_define(void);
/*C_LIVE_TYPE_COMPILER*/void r597is_equal_agent_creation_define_type_for(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r597compile(T597* C,T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/void r597is_equal_mold_id_in(T0* a1,T0* a2,T0* a3);
/*C_LIVE_TYPE_COMPILER*/void r597c_define_opening(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597args_compile_to_c_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r597open_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/T2 r597pending_c_function_counter_tag(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597do_compile(T597* C,T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597define_check_class_invariant_c_function(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597initialize_expanded(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r597address_of_c_define(T0* a1);
/*C_LIVE_TYPE_COMPILER*/void r597compile_to_c_old_memory(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r597c_initialize_frame_information(T0* a1,T2 a2);
/*C_LIVE_TYPE_COMPILER*/T0* r597define_agent_creation_type(T0* a1,T0* a2,T6 a3,T0* a4,T2 a5);
extern T0*oBC597is_equal_agent_creation_function_generated;
extern int fBC597is_equal_agent_creation_function_generated;
/*C_LIVE_TYPE_COMPILER*/T0* r597is_equal_agent_creation_function_generated(void);
/*C_LIVE_TYPE_COMPILER*/void r597closed_operand_name_in(T0* a1,T0* a2);
/*C_LIVE_TYPE_COMPILER*/void r597c_define_closing(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_7(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_8(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_9(T0* a1);
/*C_MAPPER*/void r609put_c_field_name(T0* a1);
/*C_MAPPER*/void r609default_mapping_function(T0* a1);
/*C_MAPPER*/T6 r609rf8_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/void r609default_mapping_procedure(T0* a1);
/*C_MAPPER*/T6 r609rf7_does_need_c_wrapper(T0* a1);
/*C_MAPPER*/T0* r609cpp(void);
/*C_MAPPER*/void r609compile(T609* C,T0* a1);
/*C_MAPPER*/void r609visit_run_feature_1(T0* a1);
/*C_MAPPER*/void r609default_mapping_arg(T0* a1,T6 a2,T6 a3,T6 a4);
/*C_MAPPER*/void r609visit_run_feature_2(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_3(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_4(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_5(T0* a1);
/*C_MAPPER*/void r609visit_run_feature_6(T0* a1);
/*C_INITIALIZER*/void r610visit_empty_tuple_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_string_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_like_feature_type_mark(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_real_type_mark(T0* a1);
/*C_INITIALIZER*/T0* r610for(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_native_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_natural_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_like_current_type_mark(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_like_argument_type_mark(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_user_generic_type_mark(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_pointer_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_any_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_agent_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_character_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_formal_generic_type_mark(T610* C,T0* a1);
/*C_INITIALIZER*/void r610c_initialize_user_expanded(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_boolean_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_array_type_mark(T0* a1);
/*C_INITIALIZER*/void r610crash(T610* C);
/*C_INITIALIZER*/void r610visit_integer_type_mark(T0* a1);
/*C_INITIALIZER*/void r610visit_class_type_mark(T610* C,T0* a1);
/*C_INITIALIZER*/void r610visit_non_empty_tuple_type_mark(T0* a1);
/*C_TARGET_MAPPER*/void r611set_pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_void_call(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_create_expression(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611compile_feature_call(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_fake_tuple(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_e_false(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_call_infix_ge(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_native_array_item(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_implicit_cast(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_integer_constant(T0* a1);
/*C_TARGET_MAPPER*/void r611not_yet_implemented(T611* C);
/*C_TARGET_MAPPER*/T0* r611internal_c_local_tag(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_compound_expression(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611set_internal_c_local_tag(T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r611visit_dynamic_dispatch_temporary1_id(T611* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r611pending_c_function_counter_tag_key(void);
/*C_TARGET_MAPPER*/void r611visit_old_manifest_array(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_call_infix_gt(T611* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r611pending_c_function_counter_tag_values(void);
/*C_TARGET_MAPPER*/void r611compile_expression(T611* C,T0* a1);
/*C_TARGET_MAPPER*/T0* r611internal_c_local_tag_key(void);
/*C_TARGET_MAPPER*/void r611visit_call_infix_le(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_call_prefix_not(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_call_infix_lt(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_implicit_current(T0* a1);
/*C_TARGET_MAPPER*/T0* r611cpp(void);
/*C_TARGET_MAPPER*/void r611args_compile_to_c(T611* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r611visit_real_constant(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_agent_creation(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_static_call_0_c(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_no_dispatch(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_character_constant(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_null_pointer(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_dynamic_dispatch_temporary1(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_dynamic_dispatch_temporary2(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_e_true(T0* a1);
/*C_TARGET_MAPPER*/void r611crash(T611* C);
/*C_TARGET_MAPPER*/void r611visit_natural_constant(T0* a1);
/*C_TARGET_MAPPER*/void r611compile_(T611* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r611visit_assignment_test(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611create_expression_support(T611* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/void r611visit_written_current(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611compile(T611* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r611visit_expression_with_comment(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_assertion(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_manifest_string(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611c2c_cast_op(T611* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r611visit_non_void_no_dispatch(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_manifest_tuple(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_closed_operand(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611cmp_user_expanded(T611* C,T0* a1,T0* a2);
/*C_TARGET_MAPPER*/T2 r611pending_c_function_counter_tag(T0* a1);
/*C_TARGET_MAPPER*/void r611visit_create_writable(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611standard_mapping_c_target(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_writable_attribute_name(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_internal_local2(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_address_of(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_fake_argument(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_e_void(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611compile_character(T3 a1);
/*C_TARGET_MAPPER*/void r611visit_loop_variant(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611cmp_expanded_with_void(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611visit_manifest_generic(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611compile_arg(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611cmp_reference(T611* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r611visit_built_in_eq_neq(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611cmp_basic_eiffel_expanded(T611* C,T0* a1,T0* a2,T0* a3);
/*C_TARGET_MAPPER*/void r611_P_612_compile_feature_call(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_native_array_item(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_no_dispatch(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_assignment_test(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_manifest_string(T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_non_void_no_dispatch(T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_manifest_tuple(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_internal_local2(T611* C,T0* a1);
/*C_TARGET_MAPPER*/void r611_P_612_visit_manifest_generic(T611* C,T0* a1);
/*C_ARG_MAPPER*/void r613set_pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r613visit_void_call(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_create_expression(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613compile_feature_call(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_fake_tuple(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_e_false(T0* a1);
/*C_ARG_MAPPER*/void r613visit_call_infix_ge(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_native_array_item(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_implicit_cast(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_integer_constant(T0* a1);
/*C_ARG_MAPPER*/void r613not_yet_implemented(T613* C);
/*C_ARG_MAPPER*/T0* r613internal_c_local_tag(T0* a1);
/*C_ARG_MAPPER*/void r613visit_compound_expression(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613set_internal_c_local_tag(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613visit_argument_name2(T0* a1);
/*C_ARG_MAPPER*/void r613visit_dynamic_dispatch_temporary1_id(T613* C,T0* a1);
/*C_ARG_MAPPER*/T0* r613pending_c_function_counter_tag_key(void);
/*C_ARG_MAPPER*/void r613compile_agent_definition_call(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_old_manifest_array(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_call_infix_gt(T613* C,T0* a1);
/*C_ARG_MAPPER*/T0* r613pending_c_function_counter_tag_values(void);
/*C_ARG_MAPPER*/void r613compile_expression(T613* C,T0* a1);
/*C_ARG_MAPPER*/T0* r613internal_c_local_tag_key(void);
/*C_ARG_MAPPER*/void r613visit_call_infix_le(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_call_prefix_not(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_call_infix_lt(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_generator_generating_type(T0* a1);
/*C_ARG_MAPPER*/T0* r613cpp(void);
/*C_ARG_MAPPER*/void r613args_compile_to_c(T613* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613visit_real_constant(T0* a1);
/*C_ARG_MAPPER*/void r613visit_agent_creation(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r613visit_static_call_0_c(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_no_dispatch(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_character_constant(T0* a1);
/*C_ARG_MAPPER*/void r613visit_null_pointer(T0* a1);
/*C_ARG_MAPPER*/void r613visit_dynamic_dispatch_temporary1(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_dynamic_dispatch_temporary2(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_e_true(T0* a1);
/*C_ARG_MAPPER*/void r613compile_code(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613crash(T613* C);
/*C_ARG_MAPPER*/void r613visit_natural_constant(T0* a1);
/*C_ARG_MAPPER*/void r613compile_agent_void_call(T613* C,T0* a1,T338 a2,T0* a3);
/*C_ARG_MAPPER*/void r613visit_assignment_test(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613create_expression_support(T613* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613compile(T613* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613visit_expression_with_comment(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_abstract_current(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_assertion(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_manifest_string(T0* a1);
/*C_ARG_MAPPER*/void r613c2c_cast_op(T613* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r613visit_non_void_no_dispatch(T0* a1);
/*C_ARG_MAPPER*/void r613visit_manifest_tuple(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_closed_operand(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613open_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613visit_open_operand(T0* a1);
/*C_ARG_MAPPER*/void r613cmp_user_expanded(T613* C,T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613visit_local_name2(T0* a1);
/*C_ARG_MAPPER*/void r613visit_e_old(T0* a1);
/*C_ARG_MAPPER*/T2 r613pending_c_function_counter_tag(T0* a1);
/*C_ARG_MAPPER*/void r613visit_create_writable(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_fake_target(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_writable_attribute_name(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_internal_local2(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_address_of(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_fake_argument(T0* a1);
/*C_ARG_MAPPER*/void r613visit_e_void(T0* a1);
/*C_ARG_MAPPER*/void r613compile_character(T3 a1);
/*C_ARG_MAPPER*/void r613visit_agent_expression(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_loop_variant(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613compile_precursor(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613cmp_expanded_with_void(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613visit_manifest_generic(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613compile_arg(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613cmp_reference(T613* C,T0* a1,T0* a2,T0* a3);
/*C_ARG_MAPPER*/void r613visit_built_in_eq_neq(T613* C,T0* a1);
/*C_ARG_MAPPER*/void r613closed_operand_name_in(T0* a1,T0* a2);
/*C_ARG_MAPPER*/void r613visit_result(T0* a1);
/*C_ARG_MAPPER*/void r613cmp_basic_eiffel_expanded(T613* C,T0* a1,T0* a2,T0* a3);
typedef struct _se_agenT614f614l80c33 se_agenT614f614l80c33;
struct _se_agenT614f614l80c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT614f614l80c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT614f614l80c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT614f614l80c33(T0* closed_C);
void gc_mark_agenT614f614l80c33(se_agenT614f614l80c33*u);
typedef struct _se_agenT614f614l1095c35 se_agenT614f614l1095c35;
struct _se_agenT614f614l1095c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT614f614l1095c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT614f614l1095c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT614f614l1095c35(T0* closed_C);
void gc_mark_agenT614f614l1095c35(se_agenT614f614l1095c35*u);
typedef struct _se_agenT614f614l61c33 se_agenT614f614l61c33;
struct _se_agenT614f614l61c33{Tid id;
int creation_mold_id;
void(*afp)(se_agenT614f614l61c33*,T0*);
void(*gc_mark_agent_mold)(se_agenT614f614l61c33*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT614f614l61c33(T0* closed_C);
void gc_mark_agenT614f614l61c33(se_agenT614f614l61c33*u);
typedef struct _se_agenT614f614l1070c37 se_agenT614f614l1070c37;
struct _se_agenT614f614l1070c37{Tid id;
int creation_mold_id;
void(*afp)(se_agenT614f614l1070c37*,T0*);
void(*gc_mark_agent_mold)(se_agenT614f614l1070c37*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT614f614l1070c37(T0* closed_C);
void gc_mark_agenT614f614l1070c37(se_agenT614f614l1070c37*u);
typedef struct _se_agenT614f614l1078c32 se_agenT614f614l1078c32;
struct _se_agenT614f614l1078c32{Tid id;
int creation_mold_id;
void(*afp)(se_agenT614f614l1078c32*,T0*);
void(*gc_mark_agent_mold)(se_agenT614f614l1078c32*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT614f614l1078c32(T0* closed_C);
void gc_mark_agenT614f614l1078c32(se_agenT614f614l1078c32*u);
typedef struct _se_agenT614f614l1025c35 se_agenT614f614l1025c35;
struct _se_agenT614f614l1025c35{Tid id;
int creation_mold_id;
void(*afp)(se_agenT614f614l1025c35*,T0*);
void(*gc_mark_agent_mold)(se_agenT614f614l1025c35*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;};
/*agent creation*/T0*agenT614f614l1025c35(T0* closed_C);
void gc_mark_agenT614f614l1025c35(se_agenT614f614l1025c35*u);
/*C_CODE_COMPILER*/void r614compile_as_require_n(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_compound(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614not_yet_implemented(T614* C);
/*C_CODE_COMPILER*/void r614visit_check_compound(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_inspect_as_switch(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_e_void(T0* a1);
/*C_CODE_COMPILER*/void r614compile_code(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_old_manifest_array(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_class_invariant(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_inspect_statement(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_as_check_compound(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_feature_call(T614* C,T0* a1);
/*C_CODE_COMPILER*/T0* r614cpp(void);
/*C_CODE_COMPILER*/void r614visit_manifest_generic(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_run_time_error_instruction(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_assertion(T614* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614visit_fake_target(T0* a1);
/*C_CODE_COMPILER*/void r614visit_real_constant(T0* a1);
/*C_CODE_COMPILER*/void r614visit_no_dispatch(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_argument_name2(T0* a1);
/*C_CODE_COMPILER*/void r614compile_as_require_1(T614* C,T0* a1);
/*C_CODE_COMPILER*/T0* r614pending_c_function_counter_tag_values(void);
/*C_CODE_COMPILER*/void r614visit_natural_constant(T0* a1);
/*C_CODE_COMPILER*/void r614visit_address_of(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_create_writable(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_inspect_as_ifthenelse(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_assertion_list(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_retry_instruction(T0* a1);
/*C_CODE_COMPILER*/void r614visit_e_false(T0* a1);
/*C_CODE_COMPILER*/void r614visit_manifest_string(T0* a1);
/*C_CODE_COMPILER*/void r614visit_writable_attribute_name(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_c_inline(T0* a1);
/*C_CODE_COMPILER*/void r614visit_call_prefix_not(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_arg(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_assignment_test(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_implicit_cast(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_no_invariant_wrapper(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_internal_local2(T614* C,T0* a1);
/*C_CODE_COMPILER*/T2 r614pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r614open_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614visit_ensure_assertion(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_expression(T614* C,T0* a1);
/*C_CODE_COMPILER*/T0* r614pending_c_function_counter_tag_key(void);
/*C_CODE_COMPILER*/void r614visit_create_expression(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_e_true(T0* a1);
/*C_CODE_COMPILER*/void r614compile_precursor(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614set_internal_c_local_tag(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614unlock_internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/void r614visit_when_clause(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614cmp_expanded_with_void(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_sedb(T0* a1);
/*C_CODE_COMPILER*/void r614visit_built_in_eq_neq(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r614compile_assertion_as_require_n(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_when_clause_as_switch(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614put_start_position(T0* a1);
/*C_CODE_COMPILER*/void r614visit_result(T0* a1);
/*C_CODE_COMPILER*/void r614set_pending_c_function_counter_tag(T0* a1);
/*C_CODE_COMPILER*/void r614visit_dynamic_dispatch_temporary1(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614cmp_user_expanded(T614* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614visit_dynamic_dispatch_temporary2(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_manifest_tuple(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_character(T3 a1);
/*C_CODE_COMPILER*/void r614compile_as_require(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_fake_tuple(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_debug_compound(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614create_expression_support(T614* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614visit_character_constant(T0* a1);
/*C_CODE_COMPILER*/void r614visit_integer_constant(T0* a1);
/*C_CODE_COMPILER*/void r614visit_closed_operand(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_agent_instruction(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_abstract_current(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_void_call(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_code_as_expression(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_generator_generating_type(T0* a1);
/*C_CODE_COMPILER*/void r614args_compile_to_c(T614* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614put_c_field_name(T0* a1);
/*C_CODE_COMPILER*/void r614visit_unused_expression(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_null_pointer(T0* a1);
/*C_CODE_COMPILER*/void r614visit_native_array_item(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_e_old(T0* a1);
/*C_CODE_COMPILER*/void r614visit_non_void_no_dispatch(T0* a1);
/*C_CODE_COMPILER*/void r614visit_agent_creation(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_dynamic_dispatch_temporary1_id(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614crash(T614* C);
/*C_CODE_COMPILER*/void r614visit_ifthenelse(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_create_instruction(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_assertion(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_local_name2(T0* a1);
/*C_CODE_COMPILER*/void r614compile_manifest_string_inspector(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_loop_instruction(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile(T614* C,T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614visit_ifthen(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_agent_definition_call(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_require_assertion(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_call_infix_ge(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_compound_expression(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614compile_agent_void_call(T614* C,T0* a1,T338 a2,T0* a3);
/*C_CODE_COMPILER*/void r614visit_agent_expression(T614* C,T0* a1);
/*C_CODE_COMPILER*/T0* r614internal_c_local_tag(T0* a1);
/*C_CODE_COMPILER*/T0* r614internal_c_local_tag_key(void);
/*C_CODE_COMPILER*/void r614compile_as_loop_invariant(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_call_infix_gt(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_open_operand(T0* a1);
/*C_CODE_COMPILER*/void r614closed_operand_name_in(T0* a1,T0* a2);
/*C_CODE_COMPILER*/void r614visit_void_proc_call(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_call_infix_le(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_loop_variant(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614c2c_cast_op(T614* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r614visit_assignment_attempt(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_static_call_0_c(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_fake_argument(T0* a1);
/*C_CODE_COMPILER*/void r614cmp_reference(T614* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r614visit_call_infix_lt(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_expression_with_comment(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614visit_assignment(T614* C,T0* a1);
/*C_CODE_COMPILER*/void r614cmp_basic_eiffel_expanded(T614* C,T0* a1,T0* a2,T0* a3);
/*C_CODE_COMPILER*/void r614visit_raw_create_instruction(T614* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_or(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_e_void(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_code(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_old_manifest_array(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_function_call_0(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_function_call_1(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_(T618* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_feature_call(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r618cpp(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_manifest_generic(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_fake_target(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_real_constant(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_no_dispatch(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_argument_name2(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_and_then(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r618pending_c_function_counter_tag_values(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_natural_constant(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_address_of(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_create_writable(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_function_call_n(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_xor(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_e_false(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_manifest_string(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_writable_attribute_name(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_prefix_not(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_arg(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_assignment_test(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_implicit_cast(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_internal_local2(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T2 r618pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_expression_(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618open_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_expression(T618* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r618pending_c_function_counter_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_create_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_e_true(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_precursor(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618set_internal_c_local_tag(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618cmp_expanded_with_void(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_built_in_eq_neq(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_plus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_prefix_freeop(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618rank_name_in(T2 a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_result(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618set_pending_c_function_counter_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_dynamic_dispatch_temporary1(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618cmp_user_expanded(T618* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_dynamic_dispatch_temporary2(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_manifest_tuple(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_character(T3 a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618do_compile(T618* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_fake_tuple(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618create_expression_support(T618* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_character_constant(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_integer_constant(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_closed_operand(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_abstract_current(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_freeop(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_div(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_void_call(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_code_as_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_prefix_minus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_generator_generating_type(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618args_compile_to_c(T618* C,T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618put_c_field_name(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_null_pointer(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_native_array_item(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_e_old(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_non_void_no_dispatch(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_agent_creation(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_dynamic_dispatch_temporary1_id(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_int_rem(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618crash(T618* C);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_power(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_assertion(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_local_name2(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_and(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile(T618* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_or_else(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_minus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_agent_definition_call(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_implies(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_times(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_int_div(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_ge(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_compound_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618compile_agent_void_call(T618* C,T0* a1,T338 a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_agent_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r618internal_c_local_tag(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/T0* r618internal_c_local_tag_key(void);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_gt(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_open_operand(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618closed_operand_name_in(T0* a1,T0* a2);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_le(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_loop_variant(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618c2c_cast_op(T618* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_prefix_plus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_static_call_0_c(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_fake_argument(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618cmp_reference(T618* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_call_infix_lt(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_precursor_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618visit_expression_with_comment(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618cmp_basic_eiffel_expanded(T618* C,T0* a1,T0* a2,T0* a3);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_or(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_e_void(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_old_manifest_array(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_function_call_0(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_function_call_1(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_manifest_generic(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_fake_target(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_real_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_no_dispatch(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_argument_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_and_then(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_natural_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_address_of(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_create_writable(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_function_call_n(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_xor(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_e_false(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_manifest_string(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_writable_attribute_name(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_prefix_not(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_assignment_test(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_implicit_cast(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_internal_local2(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_create_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_e_true(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_built_in_eq_neq(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_plus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_prefix_freeop(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_result(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_dynamic_dispatch_temporary1(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_dynamic_dispatch_temporary2(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_manifest_tuple(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_fake_tuple(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_character_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_integer_constant(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_closed_operand(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_abstract_current(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_freeop(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_div(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_void_call(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_prefix_minus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_generator_generating_type(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_null_pointer(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_native_array_item(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_e_old(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_non_void_no_dispatch(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_agent_creation(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_dynamic_dispatch_temporary1_id(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_int_rem(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_power(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_assertion(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_local_name2(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_and(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_or_else(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_minus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_implies(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_times(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_int_div(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_ge(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_agent_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_gt(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_open_operand(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_le(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_loop_variant(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_prefix_plus(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_static_call_0_c(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_fake_argument(T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_call_infix_lt(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_precursor_expression(T618* C,T0* a1);
/*C_COMPOUND_EXPRESSION_COMPILER*/void r618_P_612_visit_expression_with_comment(T618* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620not_yet_implemented(T620* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r620visit_native_built_in(T620* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r620system_tools(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r620extra_c_prototype_in_cpp_out_h_buffer(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r620extra_c_prototype(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_mapping_integer_function(T620* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r620visit_native_c_plus_plus(T620* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_deep_twin_body(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/T0* r620cpp(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r620mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_FUNCTION_MAPPER*/void r620visit_native_c(T620* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_modular_computation(T2 a1,T3 a2);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_field_access(T0* a1,T0* a2,T0* a3);
/*C_NATIVE_FUNCTION_MAPPER*/void r620crash(T620* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r620visit_native_plug_in(T620* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620compile(T620* C,T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_mapping_real(T620* C);
/*C_NATIVE_FUNCTION_MAPPER*/T6 r620expanded_initializer(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620is_deep_equal_c_code(T0* a1);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_mapping_natural_function(T620* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_mapping_native_array_function(T620* C);
extern T0*oBC32capacity_name;
extern int fBC32capacity_name;
/*C_NATIVE_FUNCTION_MAPPER*/T0* r620capacity_name(void);
/*C_NATIVE_FUNCTION_MAPPER*/void r620c_mapping_standard_twin(T620* C);
/*C_NATIVE_FUNCTION_MAPPER*/void r620wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621wrapped_external_call_in(T0* a1,T0* a2,T0* a3,T2 a4);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621visit_native_c(T621* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621c_mapping_native_array_procedure(T621* C);
/*C_NATIVE_PROCEDURE_MAPPER*/T0* r621cpp(void);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621mapping_plug_in(T0* a1,T0* a2);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621compile(T621* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621extra_c_prototype_in_cpp_out_h_buffer(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621visit_native_built_in(T621* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621visit_native_c_plus_plus(T621* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621extra_c_prototype(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621c_mapping_integer_procedure(T621* C);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621visit_native_plug_in(T621* C,T0* a1);
/*C_NATIVE_PROCEDURE_MAPPER*/void r621mapping_c(T0* a1,T0* a2,T6 a3,T6 a4,T2 a5);
/*C_NATIVE_C_DEFINITION*/void r622make(T622* C);
/*C_NATIVE_C_DEFINITION*/void r622c_plus_plus_procedure_definition(T622* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/T0* r622cpp(void);
/*C_NATIVE_C_DEFINITION*/void r622compile(T622* C,T0* a1,T0* a2);
/*C_NATIVE_C_DEFINITION*/void r622extra_c_prototype_in_cpp_out_h_buffer(T338 a1,T0* a2,T0* a3);
/*C_NATIVE_C_DEFINITION*/void r622visit_native_c_plus_plus(T622* C,T0* a1);
/*C_NATIVE_C_DEFINITION*/void r622c_plus_plus_function_definition(T622* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r623put_c_field_name(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r623c_pointer_to_type(T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r623mapping_c_inside_introspect(T0* a1);
/*C_INTROSPECTION_FUNCTION*/T0* r623cpp(void);
/*C_INTROSPECTION_FUNCTION*/void r623compile(T623* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r623c_return_introspect(T0* a1,T0* a2,T0* a3);
/*C_INTROSPECTION_FUNCTION*/void r623visit_live_type(T623* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r623visit_run_feature_2(T623* C,T0* a1);
/*C_INTROSPECTION_FUNCTION*/void r623visit_run_feature_6(T623* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/T0* r624cpp(void);
/*C_INTROSPECTION_DISPLAY*/void r624compile(T624* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r624visit_live_type(T624* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r624visit_run_feature_2(T624* C,T0* a1);
/*C_INTROSPECTION_DISPLAY*/void r624visit_run_feature_6(T624* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_like_feature_type_mark(T625* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/T0* r625for(T625* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_like_current_type_mark(T625* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_like_argument_type_mark(T625* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_formal_generic_type_mark(T625* C,T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625crash(T625* C);
/*C_TYPE_FOR_TARGET*/void r625visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_TARGET*/void r625visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_like_feature_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r627for(T627* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_like_current_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_like_argument_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_formal_generic_type_mark(T627* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627crash(T627* C);
/*C_TYPE_FOR_RESULT*/void r627visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/T0* r627for_external(T627* C,T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_RESULT*/void r627visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_like_feature_type_mark(T626* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/T0* r626for(T626* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_like_current_type_mark(T626* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_like_argument_type_mark(T626* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_formal_generic_type_mark(T626* C,T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626crash(T626* C);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_ARGUMENT*/void r626visit_non_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_empty_tuple_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_string_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_like_feature_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_real_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/T0* r628for(T628* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_native_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_natural_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_like_current_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_like_argument_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_user_generic_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_pointer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_any_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_agent_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_character_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_formal_generic_type_mark(T628* C,T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_boolean_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_array_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628crash(T628* C);
/*C_TYPE_FOR_VA_ARG*/void r628visit_integer_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_class_type_mark(T0* a1);
/*C_TYPE_FOR_VA_ARG*/void r628visit_non_empty_tuple_type_mark(T0* a1);
/*C_NEED_STRUCT*/void r629visit_empty_tuple_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629visit_string_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629visit_like_feature_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/T6 r629for(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629visit_like_current_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629visit_like_argument_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629set_flag_for(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629visit_formal_generic_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629visit_array_type_mark(T629* C,T0* a1);
/*C_NEED_STRUCT*/void r629crash(T629* C);
/*C_NEED_STRUCT*/void r629visit_non_empty_tuple_type_mark(T629* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r630visit_native_c(T630* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r630for(T630* C,T0* a1,T0* a2,T0* a3);
/*C_NATIVE_NEED_WRAPPER*/T6 r630expanded_initializer(T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r630visit_native_built_in(T630* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/void r630visit_native_c_plus_plus(T630* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r630for_rf7(T630* C,T0* a1);
/*C_NATIVE_NEED_WRAPPER*/T6 r630for_rf8(T630* C,T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r631set_tag(T0* a1,T0* a2);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631get_tag(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631is_enabled(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r631is_native_array_collector_enabled_(T0* a1);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631cpp(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631must_collect(T0* a1);
extern T0*oBC32mark_native_arrays_name;
extern int fBC32mark_native_arrays_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631mark_native_arrays_name(void);
extern T0*oBC631yes;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/void r631collect(T0* a1);
extern T0*oBC631tag_key;
extern int fBC631tag_key;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631tag_key(void);
extern T0*oBC631no;
extern T0*oBC32mark_item_name;
extern int fBC32mark_item_name;
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T0* r631mark_item_name(void);
/*LIVE_TYPE_NATIVE_ARRAY_COLLECTOR*/T6 r631is_native_array_collector_enabled(T0* a1);
typedef struct _se_agenT368f368l155c36 se_agenT368f368l155c36;
struct _se_agenT368f368l155c36{Tid id;
int creation_mold_id;
void(*afp)(se_agenT368f368l155c36*,T0*);
void(*gc_mark_agent_mold)(se_agenT368f368l155c36*);
int (*eq)(se_agent*,se_agent*);
T0* closed_C;T0* closed_a1;};
/*agent creation*/T0*agenT368f368l155c36(T0* closed_C,T0* closed_a1);
void gc_mark_agenT368f368l155c36(se_agenT368f368l155c36*u);
typedef struct _se_agenT368f368l473c44 se_agenT368f368l473c44;
struct _se_agenT368f368l473c44{Tid id;
int creation_mold_id;
void(*afp)(se_agenT368f368l473c44*,T0*);
void(*gc_mark_agent_mold)(se_agenT368f368l473c44*);
int (*eq)(se_agent*,se_agent*);
T0* closed_a1;};
/*agent creation*/T0*agenT368f368l473c44(T0* closed_a1);
void gc_mark_agenT368f368l473c44(se_agenT368f368l473c44*u);
/*LIVE_TYPE*/T0* r368tag(T368* C,T0* a1);
/*LIVE_TYPE*/void r368create_function_register(T368* C,T0* a1);
/*LIVE_TYPE*/void r368sort_wam(T0* a1);
/*LIVE_TYPE*/T6 r368generating_type_used(T368* C);
/*LIVE_TYPE*/T0* r368at(T368* C,T0* a1);
/*LIVE_TYPE*/void r368collect(T368* C,T0* a1);
extern T0*oBC32deep_memcmp_name;
extern int fBC32deep_memcmp_name;
/*LIVE_TYPE*/T0* r368deep_memcmp_name(void);
/*LIVE_TYPE*/void r368collect_is_deep_equal(T368* C);
/*LIVE_TYPE*/T6 r368is_native_array(T368* C);
/*LIVE_TYPE*/void r368simplify(T368* C);
/*LIVE_TYPE*/T6 r368generator_used(T368* C);
/*LIVE_TYPE*/T0* r368dynamic_feature(T368* C,T0* a1);
/*LIVE_TYPE*/T6 r368no_dispatch_collect(T368* C,T0* a1);
/*LIVE_TYPE*/void r368propagate_features(T368* C);
/*LIVE_TYPE*/T2 r368feature_count(T368* C);
/*LIVE_TYPE*/void r368do_collect(T368* C);
/*LIVE_TYPE*/T6 r368side_effect_free_default_create(T368* C);
/*LIVE_TYPE*/T6 r368gt(T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r368get_memory_dispose(T368* C);
/*LIVE_TYPE*/void r368safety_check(T368* C);
/*LIVE_TYPE*/void r368make_run_features(T368* C);
/*LIVE_TYPE*/T6 r368_ix_60(T368* C,T0* a1);
/*LIVE_TYPE*/T6 r368is_empty_expanded(T368* C);
/*LIVE_TYPE*/T6 r368can_be_assigned_to(T368* C,T0* a1);
/*LIVE_TYPE*/void r368make(T368* C,T0* a1);
/*LIVE_TYPE*/void r368collect_sub_type(T368* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r368echo(void);
/*LIVE_TYPE*/T0* r368copy_run_feature(T368* C);
/*LIVE_TYPE*/void r368allow_collecting(T368* C,T0* a1);
/*LIVE_TYPE*/void r368adapt_run_features_and_class_invariant(T368* C);
extern T0*oBC32is_deep_equal_name;
extern int fBC32is_deep_equal_name;
/*LIVE_TYPE*/T0* r368is_deep_equal_name(void);
/*LIVE_TYPE*/void r368collect_deep_twin(T368* C);
/*LIVE_TYPE*/void r368set_at_run_time(T368* C);
/*LIVE_TYPE*/T0* r368precursor_run_feature(T368* C,T0* a1,T0* a2);
/*LIVE_TYPE*/void r368set_generator_used(T368* C);
/*LIVE_TYPE*/void r368forbid_collecting(T368* C,T0* a1);
extern T0*oBC32any_is_deep_equal_fs;
extern int fBC32any_is_deep_equal_fs;
/*LIVE_TYPE*/T0* r368any_is_deep_equal_fs(void);
/*LIVE_TYPE*/T6 r368is_reference(T368* C);
/*LIVE_TYPE*/T0* r368default_create_run_feature(T368* C);
extern T0*oBC32deep_twin_from_name;
extern int fBC32deep_twin_from_name;
/*LIVE_TYPE*/T0* r368deep_twin_from_name(void);
/*LIVE_TYPE*/void r368inline_dynamic_dispatch(T368* C,T0* a1);
extern T0*oBC368new_features;
extern int fBC368new_features;
/*LIVE_TYPE*/T0* r368new_features(void);
extern T0*oBC32any_deep_twin_fs;
extern int fBC32any_deep_twin_fs;
/*LIVE_TYPE*/T0* r368any_deep_twin_fs(void);
/*LIVE_TYPE*/T0* r368structure_signature(T368* C);
/*LIVE_TYPE*/T0* r368writable_attributes(T368* C);
/*LIVE_TYPE*/void r368set_tag(T368* C,T0* a1,T0* a2);
/*LIVE_TYPE*/T0* r368id_provider(void);
/*LIVE_TYPE*/void r368id_extra_information(T368* C,T0* a1);
extern T0*oBC32deep_twin_name;
extern int fBC32deep_twin_name;
/*LIVE_TYPE*/T0* r368deep_twin_name(void);
/*LIVE_TYPE*/void r368do_collect_is_deep_equal(T368* C);
/*LIVE_TYPE*/T0* r368live_type_extra_collectors(void);
/*LIVE_TYPE*/void r368accept(T368* C,T0* a1);
/*LIVE_TYPE*/void r368forget_previous_collect(T368* C);
/*LIVE_TYPE*/T6 r368is_tagged(T368* C);
/*LIVE_TYPE*/void r368merge_features_from(T368* C,T0* a1);
/*LIVE_TYPE*/T6 r368collected(T368* C,T0* a1);
/*CLASS_NAME*/T93*create93unknown_position(T0* a1);
/*CLASS_NAME*/T93*create93make(T0* a1,T338 a2);
/*CLASS_NAME*/T6 r93is_equal(T93* C,T0* a1);
/*CLASS_NAME*/void r93make(T93* C,T0* a1,T338 a2);
/*CLASS_NAME*/T0* r93try_class_text(T93* C);
/*CLASS_NAME*/void r93set_hashed_name(T93* C,T0* a1);
/*CLASS_NAME*/void r93unknown_position(T93* C,T0* a1);
/*CLASS_NAME*/T0* r93class_text(T93* C);
/*CLASS_NAME*/T0* r93twin(T93* C);
/*CLASS_NAME*/T6 r93get_export_permission_of(T93* C,T0* a1);
/*CLASS_NAME*/T2 r93tuple_count(T93* C);
/*CLASS_TEXT*/void r95id_extra_information(T95* C,T0* a1);
/*CLASS_TEXT*/void r95create_parent_lists_using(T95* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CLASS_TEXT*/T0* r95proper_name_get(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95declaration_type_of_like_current(T95* C);
extern T0*oBC95fn_buffer;
extern int fBC95fn_buffer;
/*CLASS_TEXT*/T0* r95fn_buffer(void);
/*CLASS_TEXT*/T6 r95has_creation_check(T95* C,T0* a1,T338 a2,T0* a3);
/*CLASS_TEXT*/T0* r95next_tuple(T95* C);
/*CLASS_TEXT*/void r95add_creation_clause(T95* C,T0* a1);
/*CLASS_TEXT*/void r95set_invariant(T95* C,T338 a1,T0* a2,T0* a3);
extern T0*oBC32default_create_name;
extern int fBC32default_create_name;
/*CLASS_TEXT*/T0* r95default_create_name(void);
/*CLASS_TEXT*/T6 r95all_check(T95* C);
/*CLASS_TEXT*/void r95set_is_expanded(T95* C);
/*CLASS_TEXT*/T0* r95default_root_procedure_name(T95* C);
/*CLASS_TEXT*/void r95fatal_error_when_no_creation_clause(T95* C);
/*CLASS_TEXT*/void r95fatal_undefine(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95any_is_equal_feature(T95* C);
/*CLASS_TEXT*/T0* r95proper_get(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95proper_has(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95declaration_type_of_like_current_(T95* C,T338 a1);
/*CLASS_TEXT*/T1 r95insert_inherit_test(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95require_check(T95* C);
/*CLASS_TEXT*/void r95set_is_deferred(T95* C);
/*CLASS_TEXT*/void r95set_tag(T95* C,T0* a1,T0* a2);
/*CLASS_TEXT*/void r95formal_generic_list_count_check(T95* C,T338 a1,T0* a2);
/*CLASS_TEXT*/T0* r95any_copy_feature(T95* C);
/*CLASS_TEXT*/T6 r95inherits_from(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95user_expanded_default_create_stamp(T95* C,T0* a1);
/*CLASS_TEXT*/void r95initialize_and_check_level_1(T95* C);
/*CLASS_TEXT*/T0* r95root_creation_search(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95loop_check(T95* C);
/*CLASS_TEXT*/T0* r95level_name(T2 a1);
/*CLASS_TEXT*/void r95finish_create(T95* C);
/*CLASS_TEXT*/void r95extra_expanded_check(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95ensure_check(T95* C);
/*CLASS_TEXT*/void r95add_feature_clause(T95* C,T0* a1);
/*CLASS_TEXT*/T6 r95obvious_resolve_static_binding(T95* C,T0* a1,T6 a2);
/*CLASS_TEXT*/void r95check_level_2(T95* C,T0* a1);
/*CLASS_TEXT*/T0* r95non_written(T95* C,T0* a1,T0* a2);
/*CLASS_TEXT*/T0* r95id_provider(void);
/*CLASS_TEXT*/void r95make(T95* C,T0* a1,T0* a2,T0* a3,T10 a4);
/*CLASS_TEXT*/T6 r95invariant_check(T95* C);
/*CLASS_TEXT*/void r95creation_list_check(T95* C,T0* a1);
/*CLASS_TEXT*/void r95add_index_clause(T95* C,T0* a1);
/*CLASS_TEXT*/void r95error_vtec1(T95* C);
extern T0*oBC32any_default_create_fs;
extern int fBC32any_default_create_fs;
/*CLASS_TEXT*/T0* r95any_default_create_fs(void);
/*CLASS_TEXT*/void r95obsolete_warning_check(T95* C,T338 a1);
/*CLASS_TEXT*/T0* r95tag(T95* C,T0* a1);
extern T0*oBC32any_default_rescue_fs;
extern int fBC32any_default_rescue_fs;
/*TYPE*/T0* r277any_default_rescue_fs(void);
/*TYPE*/T6 r277has_simple_feature_name(T277* C,T0* a1);
/*TYPE*/T0* r277name_from_string(T277* C,T0* a1);
/*TYPE*/T6 r277is_agent(T277* C);
/*TYPE*/T0* r277long_name(T277* C);
/*TYPE*/void r277add_parent(T277* C,T0* a1);
/*TYPE*/T0* r277expanded_default_create_stamp(T277* C);
/*TYPE*/void r277collect_features(T277* C);
/*TYPE*/T6 r277is_native_array(T277* C);
/*TYPE*/T2 r277id(T277* C);
/*TYPE*/T6 r277is_pointer(T277* C);
/*TYPE*/void r277collect_default_rescue(T277* C,T0* a1);
/*TYPE*/T0* r277parent_edge_load(T277* C,T2 a1);
/*TYPE*/void r277do_collect(T277* C);
/*TYPE*/T2 r277parents_count(T277* C);
/*TYPE*/T1 r277insert_inherit_test(T277* C,T0* a1);
/*TYPE*/T0* r277has_only_one_conformant_parent(T277* C);
/*TYPE*/T6 r277is_real(T277* C);
/*TYPE*/T0* r277feature_stamp_of(T277* C,T0* a1);
/*TYPE*/T6 r277is_fixed_string(T277* C);
/*TYPE*/T6 r277is_empty_expanded(T277* C);
/*TYPE*/T0* r277find_manifest_expression_for(T277* C,T0* a1,T0* a2);
/*TYPE*/void r277specialize_and_check(T277* C);
/*TYPE*/T0* r277feature_accumulator(void);
/*TYPE*/T6 r277can_be_assigned_to(T277* C,T0* a1);
/*TYPE*/T6 r277is_natural(T277* C);
/*TYPE*/T6 r277print_feature_hierarchy(T277* C,T0* a1,T335 a2,T6 a3);
/*TYPE*/void r277node_init(T277* C,T0* a1);
/*TYPE*/T6 r277is_integer(T277* C);
/*TYPE*/void r277make(T277* C,T0* a1);
/*TYPE*/T6 r277is_character(T277* C);
/*TYPE*/T6 r277is_expanded(T277* C);
/*TYPE*/T0* r277copy_stamp(T277* C);
/*TYPE*/T6 r277is_kernel_expanded(T277* C);
/*TYPE*/void r277adapt_class_invariant(T277* C);
/*TYPE*/void r277add_feature(T277* C,T0* a1,T0* a2);
/*TYPE*/T6 r277is_reference(T277* C);
/*TYPE*/void r277build_actual_invariant(T277* C);
/*TYPE*/void r277inline_dynamic_dispatch_for_class_invariant(T277* C,T0* a1);
/*TYPE*/void r277do_all_address_of(T277* C,T0* a1);
extern T0*oBC32default_rescue_name;
extern int fBC32default_rescue_name;
/*TYPE*/T0* r277default_rescue_name(void);
/*TYPE*/T6 r277inherits_from(T277* C,T0* a1);
/*TYPE*/void r277deconnect_current(T277* C);
/*TYPE*/T0* r277open_arguments(T277* C);
/*TYPE*/void r277collect_local_features(T277* C);
/*TYPE*/T0* r277writable_attributes(T277* C);
/*TYPE*/T0* r277find_anonymous_feature_for(T277* C,T0* a1,T0* a2);
/*TYPE*/T6 r277is_user_expanded(T277* C);
/*TYPE*/T2 r277collected_feature_count(T277* C);
/*TYPE*/T6 r277is_boolean(T277* C);
/*TYPE*/T0* r277is_equal_stamp(T277* C);
/*TYPE*/void r277collect_one_feature(T277* C,T0* a1,T2 a2);
/*TYPE*/void r277add_seeds(T277* C,T0* a1,T0* a2,T6 a3);
/*TYPE*/T6 r277direct_non_void_call_flag(T277* C);
/*TYPE*/T6 r277is_string(T277* C);
/*TYPE*/T6 r277is_tuple(T277* C);
/*TYPE*/void r277print_graph_cycle(T277* C,T0* a1);
/*TYPE*/T0* r277agent_result(T277* C);
/*TYPE*/T6 r277is_always_void(T277* C);
/*TYPE*/void r277inheritance_cycle_check(T277* C);
/*TYPE*/void r277address_of_register(T277* C,T0* a1);
/*TYPE*/void r277_P_278_add_parent(T277* C,T0* a1);
/*TYPE*/void r277_P_279_make(T277* C,T0* a1);
/*TYPE*/void r277_P_279_add_parent(T277* C,T0* a1);
/*FEATURE_STAMP*/void r87specialize_and_check(T87* C,T0* a1);
/*FEATURE_STAMP*/void r87add_anonymous_feature(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r87make(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87simplify(T87* C,T0* a1);
/*FEATURE_STAMP*/T6 r87has_run_feature_for(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87run_feature_for(T87* C,T0* a1);
/*FEATURE_STAMP*/T6 r87has_anonymous_feature_for(T87* C,T0* a1);
/*FEATURE_STAMP*/void r87rename_notify(T87* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T0* r87specialize_thru(T87* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/void r87update_anonymous_feature(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T6 r87has_type(T87* C,T0* a1);
/*FEATURE_STAMP*/void r87register_type(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87resolve_static_binding_for_insert(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r87fake_feature_call(T87* C,T338 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T6 r87print_feature_hierarchy(T87* C,T0* a1,T0* a2,T335 a3,T6 a4);
/*FEATURE_STAMP*/void r87rename_down_notify(T87* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_STAMP*/T6 r87add_seeds(T87* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*FEATURE_STAMP*/T0* r87feature_accumulator(void);
/*FEATURE_STAMP*/T0* r87resolve_static_binding_for_inherit(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/void r87make_run_feature(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r87fake_effective_arg_list(T338 a1,T0* a2,T0* a3);
/*FEATURE_STAMP*/T0* r87anonymous_feature_if_exist(T87* C,T0* a1);
/*FEATURE_STAMP*/T0* r87resolve_static_binding_for(T87* C,T0* a1,T0* a2);
/*FEATURE_STAMP*/T0* r87anonymous_feature(T87* C,T0* a1);
/*STATUS*/void r532make(T532* C);
/*STATUS*/void r532info(T532* C);
/*STATUS*/void r532push_phase(T532* C,T2 a1);
/*STATUS*/void r532pop_phase(T532* C);
/*STATUS*/void r532set_generating(T532* C);
/*STATUS*/T0* r532echo(void);
/*STATUS*/void r532set_collecting(T532* C);
/*STATUS*/void r532set_inlining_dynamic_dispatch(T532* C);
/*STATUS*/void r532set_adapting(T532* C);
/*STATUS*/void r532set_safety_checking(T532* C);
/*STATUS*/void r532start_specializing(T532* C,T0* a1);
extern T0*oBC532internal_phase_stack;
extern int fBC532internal_phase_stack;
/*STATUS*/T0* r532internal_phase_stack(void);
/*STATUS*/void r532end_specializing(T532* C,T0* a1);
/*CODE_ACCUMULATOR*/void r328make(T328* C);
/*CODE_ACCUMULATOR*/void r328open_new_context(T328* C);
/*CODE_ACCUMULATOR*/T0* r328current_context_to_instruction(T328* C);
/*CODE_ACCUMULATOR*/T0* r328echo(void);
/*CODE_ACCUMULATOR*/void r328add_sedb(T328* C,T338 a1,T3 a2);
/*CODE_ACCUMULATOR*/T0* r328current_context_to_expression(T328* C);
/*CODE_ACCUMULATOR*/void r328echo_information(T328* C);
/*CODE_ACCUMULATOR*/T0* r328current_context_to_code(T328* C);
/*CODE_ACCUMULATOR*/void r328close_current_context(T328* C);
/*ASSIGNMENT_HANDLER*/void r106recompute_all_run_time_sets(void);
/*ASSIGNMENT_HANDLER*/T0* r106echo(void);
extern T0*oBC106external_types;
extern int fBC106external_types;
/*ASSIGNMENT_HANDLER*/T0* r106external_types(void);
/*ASSIGNMENT_HANDLER*/void r106from_external(T106* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r106implicit_cast(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/T0* r106graph_node_for(T0* a1);
/*ASSIGNMENT_HANDLER*/void r106collect_force(T106* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r106id_extra_information(T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r106from_external_(T106* C,T0* a1,T0* a2);
/*ASSIGNMENT_HANDLER*/void r106echo_information(void);
extern T0*oBC106graph_node_dictionary;
extern int fBC106graph_node_dictionary;
/*ASSIGNMENT_HANDLER*/T0* r106graph_node_dictionary(void);
/*ASSIGNMENT_HANDLER*/void r106reset(void);
/*ASSIGNMENT_HANDLER*/T0* r106implicit_cast_(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_HANDLER*/void r106collect_normal(T106* C,T0* a1,T0* a2);
typedef struct _se_agenT104f104l169c20 se_agenT104f104l169c20;
struct _se_agenT104f104l169c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT104f104l169c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l169c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT104f104l169c20(void);
void gc_mark_agenT104f104l169c20(se_agenT104f104l169c20*u);
typedef struct _se_agenT104f104l159c20 se_agenT104f104l159c20;
struct _se_agenT104f104l159c20{Tid id;
int creation_mold_id;
T6(*afp)(se_agenT104f104l159c20*,T0*);
void(*gc_mark_agent_mold)(se_agenT104f104l159c20*);
int (*eq)(se_agent*,se_agent*);
T6 R;};
/*agent creation*/T0*agenT104f104l159c20(void);
void gc_mark_agenT104f104l159c20(se_agenT104f104l159c20*u);
/*MANIFEST_STRING_POOL*/void r104collect_string(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r104se_ums(T104* C);
extern T0*oBC104agent_exists_in_collected_storage_id_set;
extern int fBC104agent_exists_in_collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r104agent_exists_in_collected_storage_id_set(void);
/*MANIFEST_STRING_POOL*/void r104make_unique(T0* a1,T0* a2);
extern T0*oBC32calloc_name;
extern int fBC32calloc_name;
/*MANIFEST_STRING_POOL*/T0* r104calloc_name(void);
extern T0*oBC32count_name;
extern int fBC32count_name;
/*MANIFEST_STRING_POOL*/T0* r104count_name(void);
/*MANIFEST_STRING_POOL*/T2 r104storage_alias_count(void);
extern T0*oBC32storage_lower_name;
extern int fBC32storage_lower_name;
/*MANIFEST_STRING_POOL*/T0* r104storage_lower_name(void);
/*MANIFEST_STRING_POOL*/T2 r104collected_once_count(void);
extern T0*oBC104agent_exists_in_collected_once_variables;
extern int fBC104agent_exists_in_collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r104agent_exists_in_collected_once_variables(void);
extern T0*oBC104collected_once_variables;
extern int fBC104collected_once_variables;
/*MANIFEST_STRING_POOL*/T0* r104collected_once_variables(void);
/*MANIFEST_STRING_POOL*/T0* r104collect(T104* C,T0* a1,T6 a2,T6 a3,T0* a4);
extern T0*oBC104storage_alias;
extern int fBC104storage_alias;
/*MANIFEST_STRING_POOL*/T0* r104storage_alias(void);
extern T0*oBC32manifest_initialize_name;
extern int fBC32manifest_initialize_name;
/*MANIFEST_STRING_POOL*/T0* r104manifest_initialize_name(void);
/*MANIFEST_STRING_POOL*/T0* r104capacity_name(void);
/*MANIFEST_STRING_POOL*/void r104reset(T104* C);
/*MANIFEST_STRING_POOL*/T6 r104exists_in_collected_storage_id_set(T0* a1);
/*MANIFEST_STRING_POOL*/T0* r104storage_alias_item(T2 a1);
/*MANIFEST_STRING_POOL*/T6 r104exists_in_collected_once_variables(T0* a1);
extern T0*oBC32storage_name;
extern int fBC32storage_name;
/*MANIFEST_STRING_POOL*/T0* r104storage_name(void);
/*MANIFEST_STRING_POOL*/void r104append_once_variable_index(T0* a1,T2 a2);
/*MANIFEST_STRING_POOL*/T0* r104collected_once_item(T2 a1);
extern T0*oBC104collected_storage_id_set;
extern int fBC104collected_storage_id_set;
/*MANIFEST_STRING_POOL*/T0* r104collected_storage_id_set(void);
extern T0*oBC111collected_manifest_generic;
extern int fBC111collected_manifest_generic;
/*MANIFEST_GENERIC_POOL*/T0* r111collected_manifest_generic(void);
extern T0*oBC120function_list;
extern int fBC120function_list;
/*ONCE_ROUTINE_POOL*/T0* r120function_list(void);
/*ONCE_ROUTINE_POOL*/T6 r120is_precomputed(T0* a1);
extern T0*oBC32precomputable_routine_detector;
/*ONCE_ROUTINE_POOL*/void r120unique_result_in(T0* a1,T0* a2);
/*ONCE_ROUTINE_POOL*/T0* r120non_void_no_dispatch_for(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r120o_flag(T0* a1);
/*ONCE_ROUTINE_POOL*/void r120collect_precomputable_function(T0* a1,T0* a2,T0* a3);
/*ONCE_ROUTINE_POOL*/T0* r120precomputable_function(T0* a1,T0* a2,T0* a3);
extern T0*oBC120precomputable_function_list;
extern int fBC120precomputable_function_list;
/*ONCE_ROUTINE_POOL*/T0* r120precomputable_function_list(void);
/*ONCE_ROUTINE_POOL*/void r120do_all_precomputed_ordered(T0* a1);
extern T0*oBC120collected_precomputable_function;
extern int fBC120collected_precomputable_function;
/*ONCE_ROUTINE_POOL*/T0* r120collected_precomputable_function(void);
/*ONCE_ROUTINE_POOL*/void r120unique_id_in(T0* a1,T0* a2);
extern T0*oBC120procedure_list;
extern int fBC120procedure_list;
/*ONCE_ROUTINE_POOL*/T0* r120procedure_list(void);
extern T0*oBC119creation_collected_memory;
extern int fBC119creation_collected_memory;
/*AGENT_POOL*/T0* r119creation_collected_memory(void);
extern T0*oBC119launcher_collected_memory;
extern int fBC119launcher_collected_memory;
/*AGENT_POOL*/T0* r119launcher_collected_memory(void);
/*AGENT_POOL*/T0* r119agent_launcher_collect(T0* a1);
/*AGENT_POOL*/void r119notify_assignment_handler_with(T0* a1,T0* a2);
extern T0*oBC119agent_definition_set;
extern int fBC119agent_definition_set;
/*AGENT_POOL*/T0* r119agent_definition_set(void);
/*AGENT_POOL*/void r119agent_creation_collect(T119* C,T0* a1,T0* a2,T0* a3);
/*AGENT_POOL*/void r119reset(T119* C);
extern T0*oBC119launcher_memory;
extern int fBC119launcher_memory;
/*AGENT_POOL*/T0* r119launcher_memory(void);
extern T0*oBC122map;
extern int fBC122map;
/*ASSIGNMENT_TEST_POOL*/T0* r122map(void);
/*ASSIGNMENT_TEST_POOL*/T0* r122new_empty_set(void);
/*ASSIGNMENT_TEST_POOL*/void r122signature_add_last(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r122collect(T0* a1,T0* a2);
/*ASSIGNMENT_TEST_POOL*/void r122reset(void);
extern T0*oBC122free_set_list;
extern int fBC122free_set_list;
/*ASSIGNMENT_TEST_POOL*/T0* r122free_set_list(void);
/*ASSIGNMENT_TEST_POOL*/void r122function_name_in(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST_POOL*/T2 r122count(void);
/*ASSIGNMENT_TEST_POOL*/void r122do_all(T0* a1);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_item_generator(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_introspectable_static_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_typed_internals(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_valid_generating_type_for_na_internals(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_set_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_internals_handler(T89* C,T0* a1,T0* a2,T0* a3);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_na_internals_from_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_can_be_assigned_to_item(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89create_blank_internals_instruction_for(T89* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_item_is_expanded(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_count(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_type_item_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89collect_internals_from_generating_type(T89* C,T0* a1,T338 a2,T0* a3);
/*INTROSPECTION_HANDLER*/void r89collect_native_array_internals_from_generating_type(T89* C,T0* a1,T338 a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_type_attribute_count(T89* C);
/*INTROSPECTION_HANDLER*/void r89start_new_body_for(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_make_blank(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_to_internals(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_any_to_internals(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/T0* r89internals_of(T89* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*INTROSPECTION_HANDLER*/T0* r89arguments(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_internals_handler(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_is_expanded(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_native_array_internals(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_generator(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_introspectable_dynamic_type(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89simplify_and_wrap(T89* C,T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_native_array_internals(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_set_object_attribute(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_attribute_count(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_is_equal(T89* C);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_internals_from_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_can_be_assigned_to_attribute(T89* C);
/*INTROSPECTION_HANDLER*/void r89collect_internals_handler(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_internals_from_generating_type_used(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_generator(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_na_make_blank(T89* C);
/*INTROSPECTION_HANDLER*/void r89collect_internals_handler_for(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89specialize_body_for_typed_internals(T89* C,T0* a1,T0* a2,T6 a3);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_attribute_name(T89* C);
/*INTROSPECTION_HANDLER*/void r89set_and_specialize_body(T89* C,T0* a1,T0* a2);
/*INTROSPECTION_HANDLER*/T0* r89wrap(T0* a1);
/*INTROSPECTION_HANDLER*/T0* r89finalized_body_for_valid_generating_type_for_internals(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89create_blank_internals_used_by(T89* C,T0* a1);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_is_expanded(T89* C);
/*INTROSPECTION_HANDLER*/T338 r89start_position(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_object_as_pointer(T89* C);
/*INTROSPECTION_HANDLER*/void r89specialize_body_for_type_generating_type(T89* C);
/*INTROSPECTION_HANDLER*/T6 r89is_introspectable_attribute_type(T89* C,T0* a1);
/*STRING_TYPE_MARK*/T438*create438make(T338 a1);
/*STRING_TYPE_MARK*/T6 r438is_tuple(void);
/*STRING_TYPE_MARK*/void r438make(T438* C,T338 a1);
/*STRING_TYPE_MARK*/T0* r438generic_list(void);
/*STRING_TYPE_MARK*/T6 r438is_character(void);
/*STRING_TYPE_MARK*/T0* r438written_mark(void);
extern T0*oBC438written_name;
extern int fBC438written_name;
/*STRING_TYPE_MARK*/T0* r438written_name(void);
/*STRING_TYPE_MARK*/T6 r438is_native_array(void);
/*STRING_TYPE_MARK*/T0* r438at(T438* C,T338 a1);
extern T0*oBC438long_name;
extern int fBC438long_name;
/*STRING_TYPE_MARK*/T0* r438long_name(void);
/*STRING_TYPE_MARK*/T0* r438specialize_thru(T438* C,T0* a1,T0* a2,T0* a3);
/*STRING_TYPE_MARK*/T6 r438is_boolean(void);
/*STRING_TYPE_MARK*/T0* r438typed_internals_type_mark(T438* C,T338 a1);
/*STRING_TYPE_MARK*/T0* r438to_static(T438* C,T0* a1);
/*STRING_TYPE_MARK*/void r438accept(T438* C,T0* a1);
/*STRING_TYPE_MARK*/T6 r438same_signature_type(T438* C,T0* a1,T0* a2);
/*STRING_TYPE_MARK*/T0* r438type(void);
/*STRING_TYPE_MARK*/T0* r438signature_resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r438is_natural(void);
/*STRING_TYPE_MARK*/T0* r438default_expression(T338 a1);
/*STRING_TYPE_MARK*/void r438id_extra_information(T0* a1);
/*STRING_TYPE_MARK*/T0* r438declaration_type(T438* C);
/*STRING_TYPE_MARK*/T6 r438is_pointer(void);
/*STRING_TYPE_MARK*/T338 r438start_position(T438* C);
/*STRING_TYPE_MARK*/T6 r438is_kernel_expanded(void);
/*STRING_TYPE_MARK*/void r438set_start_position(T438* C,T338 a1);
/*STRING_TYPE_MARK*/T6 r438is_fixed_string(void);
/*STRING_TYPE_MARK*/T0* r438class_text(T438* C);
/*STRING_TYPE_MARK*/T0* r438twin(T438* C);
/*STRING_TYPE_MARK*/T6 r438is_real(void);
/*STRING_TYPE_MARK*/T6 r438is_integer(void);
/*STRING_TYPE_MARK*/void r438pretty_in(T0* a1);
/*STRING_TYPE_MARK*/T0* r438resolve_in(T0* a1);
/*STRING_TYPE_MARK*/T6 r438is_agent(void);
/*FEATURE_ACCUMULATOR*/void r115make(T115* C);
/*FEATURE_ACCUMULATOR*/void r115finalize(T115* C);
/*FEATURE_ACCUMULATOR*/void r115finish_insert_seeds(T115* C);
/*FEATURE_ACCUMULATOR*/T0* r115echo(void);
/*FEATURE_ACCUMULATOR*/void r115collect_assigner(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115do_pending_types(T115* C);
/*FEATURE_ACCUMULATOR*/T1 r115next_state(T115* C,T1 a1,T1 a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_ACCUMULATOR*/void r115add_local_definition(T115* C,T0* a1);
extern T0*oBC115transitions;
extern int fBC115transitions;
/*FEATURE_ACCUMULATOR*/T0* r115transitions(void);
/*FEATURE_ACCUMULATOR*/T6 r115is_known(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115new_incomplete_type(T115* C);
/*FEATURE_ACCUMULATOR*/void r115start(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r115anonymous_feature_for(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/T0* r115feature_stamp_of(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115echo_information(T115* C);
/*FEATURE_ACCUMULATOR*/void r115register(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115new_feature(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115to_feature(T115* C,T0* a1);
/*FEATURE_ACCUMULATOR*/void r115add_parent_definition(T115* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_ACCUMULATOR*/void r115check_and_merge_seeds(T115* C);
/*FEATURE_ACCUMULATOR*/T1 r115transition_index(T115* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_ACCUMULATOR*/T0* r115find_type_for(T115* C,T0* a1);
/*ANY_TYPE_MARK*/T433*create433make(T338 a1);
/*ANY_TYPE_MARK*/T6 r433is_tuple(void);
/*ANY_TYPE_MARK*/void r433make(T433* C,T338 a1);
/*ANY_TYPE_MARK*/T0* r433generic_list(void);
/*ANY_TYPE_MARK*/T6 r433is_character(void);
/*ANY_TYPE_MARK*/T0* r433written_mark(T433* C);
/*ANY_TYPE_MARK*/T0* r433written_name(T433* C);
/*ANY_TYPE_MARK*/T6 r433is_native_array(void);
/*ANY_TYPE_MARK*/T0* r433at(T433* C,T338 a1);
extern T0*oBC433long_name;
extern int fBC433long_name;
/*ANY_TYPE_MARK*/T0* r433long_name(void);
/*ANY_TYPE_MARK*/T0* r433specialize_thru(T433* C,T0* a1,T0* a2,T0* a3);
/*ANY_TYPE_MARK*/T6 r433is_boolean(void);
/*ANY_TYPE_MARK*/T0* r433typed_internals_type_mark(T433* C,T338 a1);
/*ANY_TYPE_MARK*/T0* r433to_static(T433* C,T0* a1);
/*ANY_TYPE_MARK*/T2 r433id(T433* C);
/*ANY_TYPE_MARK*/void r433accept(T433* C,T0* a1);
/*ANY_TYPE_MARK*/T6 r433same_signature_type(T433* C,T0* a1,T0* a2);
/*ANY_TYPE_MARK*/T0* r433type(void);
/*ANY_TYPE_MARK*/T0* r433signature_resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r433is_natural(void);
/*ANY_TYPE_MARK*/T0* r433default_expression(T338 a1);
/*ANY_TYPE_MARK*/void r433id_extra_information(T0* a1);
/*ANY_TYPE_MARK*/T0* r433declaration_type(T433* C);
/*ANY_TYPE_MARK*/T6 r433is_pointer(void);
/*ANY_TYPE_MARK*/T338 r433start_position(T433* C);
/*ANY_TYPE_MARK*/T6 r433is_kernel_expanded(void);
/*ANY_TYPE_MARK*/void r433set_start_position(T433* C,T338 a1);
/*ANY_TYPE_MARK*/T6 r433is_fixed_string(T433* C);
/*ANY_TYPE_MARK*/T0* r433class_text(T433* C);
/*ANY_TYPE_MARK*/T0* r433twin(T433* C);
/*ANY_TYPE_MARK*/T6 r433is_real(void);
/*ANY_TYPE_MARK*/T6 r433is_integer(void);
/*ANY_TYPE_MARK*/void r433pretty_in(T433* C,T0* a1);
/*ANY_TYPE_MARK*/T0* r433resolve_in(T0* a1);
/*ANY_TYPE_MARK*/T6 r433is_agent(void);
extern T0*oBC563integer_alias;
extern int fBC563integer_alias;
/*TYPE_ALIASING*/T0* r563integer_alias(void);
/*TYPE_ALIASING*/T0* r563alias_of(T0* a1);
extern T0*oBC563real_alias;
extern int fBC563real_alias;
/*TYPE_ALIASING*/T0* r563real_alias(void);
extern T0*oBC563natural_alias;
extern int fBC563natural_alias;
/*TYPE_ALIASING*/T0* r563natural_alias(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_like_feature_type_mark(T788* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_like_current_type_mark(T788* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_like_argument_type_mark(T788* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_agent_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/T0* r788cpp(void);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_formal_generic_type_mark(T788* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788compile(T788* C,T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788crash(T788* C);
/*C_GARBAGE_COLLECTOR_HEADER_COMPILER*/void r788visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790make(T790* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_like_feature_type_mark(T790* C,T0* a1);
extern T0*oBC32from_pointer_name;
extern int fBC32from_pointer_name;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r790from_pointer_name(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790gc_align_mark_fixed_size(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_like_current_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790mark_attribute(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790gc_expanded(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_like_argument_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_user_generic_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790gc_mark_fixed_size(T790* C,T0* a1,T6 a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790gc_set_fsoh_marked(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T0* r790cpp(void);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_formal_generic_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790compile(T790* C,T0* a1);
extern int fBC790generate_once_gc_update_weak_ref_item_polymorph;
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790generate_once_gc_update_weak_ref_item_polymorph(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790native_array_type_in(T0* a1,T0* a2);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790gc_reference(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/T6 r790insert_native_array_collector_flag(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790gc_mark_na(T0* a1);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790crash(T790* C);
/*C_GARBAGE_COLLECTOR_FUNCTIONS_COMPILER*/void r790visit_class_type_mark(T790* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_like_feature_type_mark(T791* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_like_current_type_mark(T791* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_like_argument_type_mark(T791* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/T0* r791cpp(void);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_formal_generic_type_mark(T791* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791compile(T791* C,T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791crash(T791* C);
/*C_GARBAGE_COLLECTOR_INFO_COMPILER*/void r791visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_like_feature_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_native_array_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_like_current_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_like_argument_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_user_generic_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/T0* r792cpp(void);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_formal_generic_type_mark(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792compile(T792* C,T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792gc_reference(T0* a1);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792crash(T792* C);
/*C_GARBAGE_COLLECTOR_BEFORE_MARK_COMPILER*/void r792visit_class_type_mark(T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_empty_tuple_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_string_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_like_feature_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/T6 r793for(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_native_array_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_like_current_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_like_argument_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_user_generic_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_any_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_agent_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_formal_generic_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793gc_mark_to_follow(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_array_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793crash(T793* C);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_class_type_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793need_gc_mark(T793* C,T0* a1);
/*C_GARBAGE_COLLECTOR_NEED_MARK*/void r793visit_non_empty_tuple_type_mark(T793* C,T0* a1);
/*CECIL_FILE*/void r327parse(T327* C);
/*CECIL_FILE*/void r327make(T327* C,T0* a1);
/*CECIL_FILE*/T0* r327eiffel_parser(void);
/*CECIL_FILE*/T0* r327echo(void);
/*CECIL_FILE*/void r327collect(T327* C,T0* a1);
/*CECIL_FILE*/void r327inline_dynamic_dispatch(T327* C,T0* a1,T0* a2);
/*SERC_CHAIN*/void r775make(T775* C);
/*SERC_CHAIN*/T0* r775sys(T775* C);
/*SERC_CHAIN*/void r775loadpaths_in(T775* C,T0* a1);
/*SERC_CHAIN*/T0* r775flavor(T775* C);
/*SERC_CHAIN*/T0* r775environment(T775* C,T0* a1);
/*SERC_CHAIN*/T0* r775short(T775* C);
/*SERC_CHAIN*/T0* r775bin(T775* C);
/*SERC_CHAIN*/T0* r775c_mode(T775* C,T0* a1);
/*SERC_CHAIN*/T0* r775os(T775* C);
/*SERC_DEFAULTS*/void r777make(T777* C);
/*SERC_DEFAULTS*/T0* r777environment(T0* a1);
/*SERC*/void r776make(T776* C);
/*SERC*/void r776add_all(T776* C,T0* a1,T0* a2,T0* a3);
/*SERC*/T0* r776echo(void);
/*SERC*/void r776loadpaths_in(T776* C,T0* a1);
/*SERC*/T0* r776parser_buffer(void);
/*STRING_RECYCLING_POOL*/void r58make(T58* C);
/*STRING_RECYCLING_POOL*/void r58recycle(T58* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r58new_twin(T58* C,T0* a1);
/*STRING_RECYCLING_POOL*/T0* r58best_fit(T58* C,T2 a1);
/*FIXED_STRING*/void r293unlock_tagged_out(void);
/*FIXED_STRING*/T3 r293first(T293* C);
/*FIXED_STRING*/T0* r293tagged_out_memory_pool(void);
/*FIXED_STRING*/void r293fill_tagged_out_memory(T293* C);
/*FIXED_STRING*/void r293lock_tagged_out(void);
extern T0*oBC293weakrefs;
extern int fBC293weakrefs;
/*FIXED_STRING*/T0* r293weakrefs(void);
/*FIXED_STRING*/void r293make_from_string(T293* C,T0* a1);
/*FIXED_STRING*/void r293ensure_capacity(T293* C,T2 a1);
/*FIXED_STRING*/T0* r293new_holders(T293* C);
/*FIXED_STRING*/T6 r293is_shared(T293* C);
/*FIXED_STRING*/void r293unshare(T293* C);
/*FIXED_STRING*/T8 r293to_external(T293* C);
/*FIXED_STRING*/T2 r293computed_hash_code(T293* C);
/*FIXED_STRING*/T2 r293upper(T293* C);
/*FIXED_STRING*/T3 r293item(T293* C,T2 a1);
/*FIXED_STRING*/T6 r293_ix_60(T293* C,T0* a1);
/*FIXED_STRING*/T6 r293same_as(T293* C,T0* a1);
/*FIXED_STRING*/T0* r293tagged_out_memory(void);
extern T0*oBC293holders_memory;
extern int fBC293holders_memory;
/*FIXED_STRING*/T0* r293holders_memory(void);
/*FIXED_STRING*/void r293do_intern(T293* C,T0* a1);
/*FIXED_STRING*/T0* r293out(T293* C);
/*FIXED_STRING*/void r293copy_slice_to_native(T293* C,T2 a1,T2 a2,T9 a3,T2 a4);
/*FIXED_STRING*/T0* r293tagged_out_memories(void);
/*FIXED_STRING*/void r293print_on(T293* C,T0* a1);
/*FIXED_STRING*/T6 r293has(T293* C,T3 a1);
/*FEATURE_NAME*/T281*create281simple_feature_name(T0* a1,T338 a2);
/*FEATURE_NAME*/T281*create281infix_name(T0* a1,T338 a2);
/*FEATURE_NAME*/T6 r281is_equal(T281* C,T0* a1);
/*FEATURE_NAME*/T6 r281is_infix_name(T281* C);
/*FEATURE_NAME*/void r281pretty(T281* C,T2 a1);
/*FEATURE_NAME*/void r281ordinary_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/T6 r281is_frozen(T281* C);
/*FEATURE_NAME*/void r281special_pretty_print(T281* C,T6 a1);
/*FEATURE_NAME*/void r281basic_create_1(T281* C,T2 a1,T0* a2,T338 a3);
/*FEATURE_NAME*/void r281basic_create_0(T281* C,T2 a1,T0* a2,T338 a3);
/*FEATURE_NAME*/T0* r281infix_or_prefix(T281* C);
/*FEATURE_NAME*/void r281unknown_position(T281* C,T0* a1);
/*FEATURE_NAME*/void r281infix_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/void r281declaration_in(T281* C,T0* a1);
/*FEATURE_NAME*/T0* r281twin(T281* C);
/*FEATURE_NAME*/T6 r281is_simple_feature_name(T281* C);
/*FEATURE_NAME*/void r281complete_name_in(T281* C,T0* a1);
/*FEATURE_NAME*/void r281simple_feature_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/void r281set_is_frozen(T281* C);
/*FEATURE_NAME*/T2 r281hash_code(T281* C);
/*FEATURE_NAME*/void r281prefix_name(T281* C,T0* a1,T338 a2);
/*FEATURE_NAME*/void r281mapping_c_in(T281* C,T0* a1);
/*FEATURE_NAME*/T6 r281is_prefix_name(T281* C);
extern T0*oBC79is_running_memory;
/*AT_EXIT*/void r79run(void);
extern T0*oBC79actions;
extern int fBC79actions;
/*AT_EXIT*/T0* r79actions(void);
/*INI_PARSER*/void r102goto_next_line(T102* C);
/*INI_PARSER*/T6 r102section_has(T102* C,T0* a1,T0* a2);
/*INI_PARSER*/void r102serc(T102* C);
/*INI_PARSER*/T0* r102lcs(void);
/*INI_PARSER*/T0* r102buffer(void);
/*INI_PARSER*/T6 r102a_section(T102* C);
extern T0*oBC32strings;
extern int fBC32strings;
/*INI_PARSER*/T0* r102strings(void);
/*INI_PARSER*/T0* r102unicode_string_buffer(void);
/*INI_PARSER*/T6 r102is_install(void);
/*INI_PARSER*/void r102a_keys(T102* C);
/*INI_PARSER*/T0* r102parser_buffer(void);
/*INI_PARSER*/void r102a_sections(T102* C);
/*INI_PARSER*/void r102go_back_at(T102* C,T2 a1,T2 a2);
/*INI_PARSER*/T6 r102skip1(T102* C,T3 a1);
/*INI_PARSER*/T6 r102a_string(T102* C);
/*INI_PARSER*/T338 r102current_position(T102* C);
/*INI_PARSER*/T6 r102a_keyword(T102* C,T0* a1);
/*INI_PARSER*/T0* r102echo(void);
/*INI_PARSER*/T6 r102a_identifier(T102* C);
/*INI_PARSER*/T6 r102a_manifest_string(T102* C,T6 a1);
/*INI_PARSER*/void r102fatal_error_except_for_install(T102* C,T0* a1);
/*INI_PARSER*/void r102a_inifile(T102* C);
/*INI_PARSER*/void r102may_expand_var_into(T102* C,T0* a1);
/*INI_PARSER*/T6 r102has(T102* C,T0* a1);
/*INI_PARSER*/void r102skip_comments(T102* C);
/*INI_PARSER*/void r102plugin(T102* C);
/*INI_PARSER*/T0* r102sections_iterator(T102* C);
/*INI_PARSER*/T0* r102section_item(T102* C,T0* a1,T0* a2);
/*INI_PARSER*/void r102next_char(T102* C);
/*INI_PARSER*/T6 r102a_key(T102* C);
/*INI_PARSER*/void r102update_last_manifest_string(T102* C,T338 a1,T6 a2,T6 a3,T0* a4,T0* a5);
/*INI_PARSER*/T0* r102section_key_iterator(T102* C,T0* a1);
/*INI_PARSER*/void r102set_value(T102* C,T0* a1);
/*INI_PARSER*/void r102may_expand_var(T102* C);
/*INI_PARSER*/T0* r102key_iterator(T102* C);
/*INI_PARSER*/T0* r102last_value(T102* C);
/*INI_PARSER*/T6 r102skip_spaces(T102* C);
/*INI_PARSER*/T338 r102pos(T102* C,T2 a1,T2 a2);
/*CLASSES_TREE*/T0* r747system_cluster(T747* C,T0* a1,T0* a2);
/*CLASSES_TREE*/void r747make(T747* C,T2 a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC747system_clusters;
extern int fBC747system_clusters;
/*CLASSES_TREE*/T0* r747system_clusters(void);
/*CLASSES_TREE*/void r747for_all(T747* C,T0* a1);
/*CLASSES_TREE*/T2 r747cluster_count(T747* C);
/*CLASSES_TREE*/T0* r747echo(void);
/*CLASSES_TREE*/T0* r747cluster_named(T747* C,T0* a1);
/*CLASSES_TREE*/void r747show_name(T747* C);
/*CLASSES_TREE*/T0* r747classes_path_to_system_path(T747* C,T0* a1);
/*CLASSES_TREE*/void r747get_started(T747* C,T2 a1);
/*CLASSES_TREE*/void r747clusters_of(T747* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r747view_in(T747* C,T0* a1);
/*CLASSES_TREE*/T0* r747system_notation(T747* C);
/*CLASSES_TREE*/T2 r747loaded_class_count(T747* C);
/*CLASSES_TREE*/void r747show_tabs(T2 a1);
/*CLASSES_TREE*/T0* r747to_string(T747* C);
/*CLASSES_TREE*/void r747parse_include(T747* C);
/*CLASSES_TREE*/T0* r747find_physical_cluster(T747* C,T0* a1);
/*CLASSES_TREE*/void r747show(T747* C,T2 a1);
/*CLASSES_TREE*/void r747_P_679_for_all(T747* C,T0* a1);
/*CLASSES_TREE*/T2 r747_P_679_cluster_count(T747* C);
/*CLASSES_TREE*/T0* r747_P_679_cluster_named(T747* C,T0* a1);
/*CLASSES_TREE*/void r747_P_679_get_started(T747* C,T2 a1);
/*CLASSES_TREE*/void r747_P_679_clusters_of(T747* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*CLASSES_TREE*/void r747_P_679_view_in(T747* C,T0* a1);
/*CLASSES_TREE*/T2 r747_P_679_loaded_class_count(T747* C);
/*CLASSES_TREE*/void r747_P_679_parse_include(T747* C);
/*CLASSES_TREE*/T0* r747_P_679_find_physical_cluster(T747* C,T0* a1);
/*LOADPATH*/void r795make(T795* C,T2 a1,T0* a2,T0* a3,T0* a4,T0* a5,T6 a6);
/*LOADPATH*/T0* r795connect(T795* C,T0* a1,T0* a2);
/*LOADPATH*/void r795add_classes(T795* C,T0* a1);
/*LOADPATH*/void r795for_all(T795* C,T0* a1);
/*LOADPATH*/T2 r795cluster_count(T795* C);
/*LOADPATH*/void r795show_cycle(T795* C,T0* a1);
/*LOADPATH*/T0* r795echo(void);
/*LOADPATH*/void r795error_cycle(T795* C);
/*LOADPATH*/T0* r795cluster_named(T795* C,T0* a1);
extern T0*oBC795connected;
extern int fBC795connected;
/*LOADPATH*/T0* r795connected(void);
/*LOADPATH*/T0* r795strings(void);
/*LOADPATH*/void r795create_subtree(T795* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*LOADPATH*/void r795show_name(T795* C);
/*LOADPATH*/T0* r795classes_path_to_system_path(T795* C,T0* a1);
/*LOADPATH*/void r795get_started(T795* C,T2 a1);
/*LOADPATH*/T0* r795system_path_to_classes_path(T795* C,T0* a1);
/*LOADPATH*/void r795clusters_of(T795* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5,T2 a6);
/*LOADPATH*/void r795view_in(T795* C,T0* a1);
/*LOADPATH*/T0* r795system_tools(void);
/*LOADPATH*/T0* r795system_notation(T795* C);
/*LOADPATH*/T2 r795loaded_class_count(T795* C);
/*LOADPATH*/void r795show_tabs(T2 a1);
extern T0*oBC795files;
extern int fBC795files;
/*LOADPATH*/T0* r795files(void);
/*LOADPATH*/T0* r795to_string(T795* C);
/*LOADPATH*/void r795parse_include(T795* C);
/*LOADPATH*/T0* r795find_physical_cluster(T795* C,T0* a1);
/*LOADPATH*/void r795show(T795* C,T2 a1);
/*LOADPATH*/T0* r795new_path(T0* a1,T0* a2,T0* a3);
/*LOADPATH*/T0* r795new_name(T795* C,T0* a1,T2 a2);
/*CLUSTER_POOL_DATA*/void r749make(T749* C,T0* a1);
/*CLUSTER_POOL_DATA*/void r749add_cluster_class(T749* C,T0* a1,T0* a2);
/*CLUSTER_POOL_DATA*/T0* r749cluster_class(T749* C,T0* a1);
extern T0*oBC749hash_tuple;
extern int fBC749hash_tuple;
/*CLUSTER_POOL_DATA*/T0* r749hash_tuple(void);
/*CLUSTER_POOL_DATA*/T2 r749class_count(T749* C);
/*CLUSTER_POOL_DATA*/T6 r749has(T749* C,T0* a1);
/*MICROSECOND_TIME*/T11 r472timestamp(T472* C);
/*MICROSECOND_TIME*/void r472update(T472* C);
/*FEATURE_TEXT*/void r449character_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449string_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449once_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449set_ensure_assertion(T449* C,T0* a1);
/*FEATURE_TEXT*/void r449set_rescue_compound(T449* C,T0* a1);
/*FEATURE_TEXT*/void r449real_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449inline_agent_pretty(T449* C,T2 a1);
/*FEATURE_TEXT*/void r449non_written_one(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449boolean_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449set_header_comment(T449* C,T0* a1);
/*FEATURE_TEXT*/void r449deferred_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*FEATURE_TEXT*/void r449external_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449add_into(T449* C,T0* a1,T0* a2);
/*FEATURE_TEXT*/void r449e_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449integer_constant(T449* C,T0* a1,T0* a2,T0* a3);
/*FEATURE_TEXT*/void r449external_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449writable_attribute(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*FEATURE_TEXT*/void r449e_function(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449deferred_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*FEATURE_TEXT*/void r449once_procedure(T449* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7,T0* a8);
/*FEATURE_TEXT*/void r449unique_constant(T449* C,T0* a1,T0* a2);
/*INDEX_CLAUSE*/void r426add_last(T426* C,T0* a1);
/*INDEX_CLAUSE*/void r426with_tag(T426* C,T0* a1);
/*INDEX_CLAUSE*/void r426without_tag(T426* C,T0* a1);
/*MANIFEST_STRING*/T0* r380specialize_and_check(T380* C,T0* a1);
/*MANIFEST_STRING*/T6 r380is_equal(T380* C,T0* a1);
/*MANIFEST_STRING*/T0* r380to_expression(T380* C);
/*MANIFEST_STRING*/void r380make(T380* C,T338 a1,T6 a2,T6 a3,T0* a4);
/*MANIFEST_STRING*/void r380pretty(T380* C,T2 a1);
/*MANIFEST_STRING*/T0* r380static_simplify(T380* C);
/*MANIFEST_STRING*/void r380inline_dynamic_dispatch_(T380* C,T0* a1,T0* a2);
/*MANIFEST_STRING*/T6 r380is_static(T380* C);
/*MANIFEST_STRING*/void r380storage_alias_of(T380* C,T0* a1);
/*MANIFEST_STRING*/T6 r380is_stored_in_some_local_variable(void);
/*MANIFEST_STRING*/void r380accept(T380* C,T0* a1);
/*MANIFEST_STRING*/T0* r380declaration_type(T380* C);
/*MANIFEST_STRING*/T0* r380collect(T380* C,T0* a1);
/*MANIFEST_STRING*/void r380pretty_target(T380* C,T2 a1);
/*MANIFEST_STRING*/void r380from_identifier(T380* C,T338 a1,T0* a2);
/*MANIFEST_STRING*/void r380pretty_without_once(T380* C,T2 a1);
/*MANIFEST_STRING*/T0* r380twin(T380* C);
/*MANIFEST_STRING*/T0* r380written_declaration_type_mark(void);
/*MANIFEST_STRING*/T6 r380use_current(T0* a1);
/*MANIFEST_STRING*/void r380bracketed_pretty(T380* C,T2 a1);
/*MANIFEST_STRING*/T0* r380non_void_no_dispatch_type(T380* C,T0* a1);
/*MANIFEST_STRING*/T6 r380side_effect_free(T380* C,T0* a1);
/*MANIFEST_STRING*/T2 r380hash_code(T380* C);
/*MANIFEST_STRING*/T2 r380count(T380* C);
/*MANIFEST_STRING*/T0* r380resolve_in(T380* C,T0* a1);
/*MANIFEST_STRING*/T0* r380to_instruction(T380* C);
/*FORMAL_GENERIC_LIST*/void r432make(T432* C,T338 a1);
/*FORMAL_GENERIC_LIST*/void r432generic_formal_arguments_check(T432* C);
/*FORMAL_GENERIC_LIST*/void r432constraint_genericity_check(T432* C,T0* a1,T0* a2,T338 a3);
/*FORMAL_GENERIC_LIST*/void r432add_last(T432* C,T0* a1);
/*FORMAL_GENERIC_LIST*/T2 r432count(T432* C);
/*FORMAL_GENERIC_ARG*/void r441substitute(T0* a1,T0* a2,T2 a3,T0* a4);
/*FORMAL_GENERIC_ARG*/void r441make(T441* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_ARG*/void r441generic_formal_arguments_check(T441* C);
/*FORMAL_GENERIC_ARG*/T338 r441start_position(T441* C);
/*FORMAL_GENERIC_ARG*/void r441constraint_substitution(T441* C,T0* a1,T2 a2);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_tuple(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r485make(T485* C,T0* a1,T0* a2,T2 a3);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485generic_list(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_character(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485written_mark(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_native_array(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485at(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485specialize_thru(T485* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_boolean(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485typed_internals_type_mark(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485to_static(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r485accept(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_reference(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485same_signature_type(T485* C,T0* a1,T0* a2);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485type(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485signature_resolve_in(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_natural(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485default_expression(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/void r485id_extra_information(T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485declaration_type(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485class_text_name(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_pointer(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_user_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/T338 r485start_position(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_kernel_expanded(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r485set_start_position(T485* C,T338 a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_fixed_string(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485class_text(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485twin(T485* C);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_real(void);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_integer(void);
/*FORMAL_GENERIC_TYPE_MARK*/void r485pretty_in(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_generic(void);
/*FORMAL_GENERIC_TYPE_MARK*/T0* r485resolve_in(T485* C,T0* a1);
/*FORMAL_GENERIC_TYPE_MARK*/T6 r485is_agent(void);
/*LIKE_CURRENT_TYPE_MARK*/T495*create495make(T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_tuple(void);
/*LIKE_CURRENT_TYPE_MARK*/void r495make(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495generic_list(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_character(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495written_mark(void);
extern T0*oBC495written_name;
extern int fBC495written_name;
/*LIKE_CURRENT_TYPE_MARK*/T0* r495written_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_native_array(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495at(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_boolean(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495typed_internals_type_mark(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495to_static(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/void r495accept(T495* C,T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_reference(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495same_signature_type(T495* C,T0* a1,T0* a2);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495type(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495signature_resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_natural(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495default_expression(T495* C,T338 a1);
/*LIKE_CURRENT_TYPE_MARK*/void r495id_extra_information(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495declaration_type(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495class_text_name(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_pointer(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_user_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_kernel_expanded(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_fixed_string(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495class_text(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495twin(T495* C);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_real(void);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_integer(void);
/*LIKE_CURRENT_TYPE_MARK*/void r495pretty_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_generic(void);
/*LIKE_CURRENT_TYPE_MARK*/T0* r495resolve_in(T0* a1);
/*LIKE_CURRENT_TYPE_MARK*/T6 r495is_agent(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_tuple(void);
/*LIKE_FEATURE_TYPE_MARK*/void r497make(T497* C,T338 a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497generic_list(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_character(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497written_mark(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/void r497specialize_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_native_array(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497at(T497* C,T338 a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497specialize_thru(T497* C,T0* a1,T0* a2,T0* a3);
/*LIKE_FEATURE_TYPE_MARK*/void r497twin_feature_stamp_memory(T497* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_boolean(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497typed_internals_type_mark(T497* C,T338 a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497to_static(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/void r497accept(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_reference(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497same_signature_type(T497* C,T0* a1,T0* a2);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497type(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497signature_resolve_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_natural(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497default_expression(T497* C,T338 a1);
/*LIKE_FEATURE_TYPE_MARK*/void r497id_extra_information(T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497class_text_name(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497feature_accumulator(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_pointer(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_user_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_kernel_expanded(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_fixed_string(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497class_text(T497* C);
extern T0*oBC496written_mark_buffer;
extern int fBC496written_mark_buffer;
/*LIKE_FEATURE_TYPE_MARK*/T0* r497written_mark_buffer(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497twin(T497* C);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_real(void);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_integer(void);
/*LIKE_FEATURE_TYPE_MARK*/void r497pretty_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_generic(void);
/*LIKE_FEATURE_TYPE_MARK*/T0* r497resolve_in(T497* C,T0* a1);
/*LIKE_FEATURE_TYPE_MARK*/T6 r497is_agent(void);
/*FORMAL_ARG_LIST*/void r354make(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/void r354pretty(T354* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r354specialize_in(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/void r354add_last(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r354rank_of(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T0* r354specialize_thru(T354* C,T0* a1,T0* a2,T0* a3);
/*FORMAL_ARG_LIST*/T0* r354adapt_for(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/void r354name_clash_check(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r354fast_rank_of(T354* C,T0* a1);
/*FORMAL_ARG_LIST*/T2 r354compute_flat_list_count_by_using_list(T354* C);
/*FORMAL_ARG_LIST*/T338 r354start_position(T354* C);
/*FORMAL_ARG_LIST*/T0* r354twin(T354* C);
/*FORMAL_ARG_LIST*/T0* r354type_mark(T354* C,T2 a1);
/*FORMAL_ARG_LIST*/T0* r354omitted_open_arguments(T354* C,T0* a1,T0* a2,T338 a3);
/*FORMAL_ARG_LIST*/T2 r354count(T354* C);
/*PRETTY_PRINTER*/void r116make(T116* C);
/*PRETTY_PRINTER*/void r116prepare_for_same_line_comment(void);
/*PRETTY_PRINTER*/T6 r116print_end_of_statement(T116* C);
/*PRETTY_PRINTER*/void r116put_type_mark(T0* a1);
/*PRETTY_PRINTER*/void r116keyword(T0* a1);
extern T0*oBC116buffer;
extern int fBC116buffer;
/*PRETTY_PRINTER*/T0* r116buffer(void);
/*PRETTY_PRINTER*/void r116put_one_line_comment(T2 a1,T0* a2);
/*PRETTY_PRINTER*/void r116expression_in(T0* a1,T0* a2);
/*PRETTY_PRINTER*/void r116put_end_of(T0* a1);
/*PRETTY_PRINTER*/void r116erase_everything_after(T2 a1);
/*PRETTY_PRINTER*/void r116set_semi_colon_flag(T116* C,T6 a1);
/*PRETTY_PRINTER*/void r116instruction_in(T0* a1,T0* a2);
/*PRETTY_PRINTER*/void r116put_string(T0* a1);
/*PRETTY_PRINTER*/void r116left_margin_in(T0* a1);
/*PRETTY_PRINTER*/T6 r116is_opening_bracket_after(T2 a1);
/*PRETTY_PRINTER*/T3 r116last_non_blank_character(void);
/*PRETTY_PRINTER*/T2 r116column(void);
/*PRETTY_PRINTER*/void r116erase_separators_after(T2 a1);
/*PRETTY_PRINTER*/void r116set_indent_level(T2 a1);
/*PRETTY_PRINTER*/T2 r116index_of_last_character(void);
/*PRETTY_PRINTER*/void r116put_character(T3 a1);
/*PRETTY_PRINTER*/T6 r116print_end_of_feature(T116* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_tuple(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498make(T498* C,T338 a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498generic_list(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_character(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498written_mark(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498specialize_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_native_array(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498at(T498* C,T338 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498specialize_thru(T498* C,T0* a1,T0* a2,T0* a3);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_boolean(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498typed_internals_type_mark(T498* C,T338 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498to_static(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498accept(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_reference(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498same_signature_type(T498* C,T0* a1,T0* a2);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498type(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498signature_resolve_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_natural(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498default_expression(T498* C,T338 a1);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498id_extra_information(T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498declaration_type(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498class_text_name(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_pointer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_user_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_kernel_expanded(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_fixed_string(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498class_text(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498written_mark_buffer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498twin(T498* C);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_real(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_integer(void);
/*LIKE_ARGUMENT_TYPE_MARK*/void r498pretty_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_generic(void);
/*LIKE_ARGUMENT_TYPE_MARK*/T0* r498resolve_in(T498* C,T0* a1);
/*LIKE_ARGUMENT_TYPE_MARK*/T6 r498is_agent(void);
/*ARRAY_TYPE_MARK*/void r445set_generic_list(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445declaration_type(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445is_agent(void);
/*ARRAY_TYPE_MARK*/T0* r445long_name(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445written_mark(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445resolve_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445at(T445* C,T338 a1);
/*ARRAY_TYPE_MARK*/T0* r445strings(void);
/*ARRAY_TYPE_MARK*/void r445set_generic_list_with(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r445specialize_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T6 r445is_native_array(void);
/*ARRAY_TYPE_MARK*/T6 r445is_static(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445type(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445is_pointer(void);
/*ARRAY_TYPE_MARK*/T2 r445id(T445* C);
/*ARRAY_TYPE_MARK*/void r445recompute_declaration_type(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445specialize_thru(T445* C,T0* a1,T0* a2,T0* a3);
/*ARRAY_TYPE_MARK*/T6 r445is_real(void);
/*ARRAY_TYPE_MARK*/T6 r445is_fixed_string(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445same_signature_type(T445* C,T0* a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r445is_natural(void);
/*ARRAY_TYPE_MARK*/T6 r445is_integer(void);
/*ARRAY_TYPE_MARK*/void r445make(T445* C,T338 a1,T0* a2);
/*ARRAY_TYPE_MARK*/T6 r445is_character(void);
/*ARRAY_TYPE_MARK*/T6 r445is_kernel_expanded(void);
/*ARRAY_TYPE_MARK*/T0* r445written_name(T445* C);
/*ARRAY_TYPE_MARK*/T0* r445default_expression(T338 a1);
extern T0*oBC445array_name;
extern int fBC445array_name;
/*ARRAY_TYPE_MARK*/T0* r445array_name(void);
/*ARRAY_TYPE_MARK*/T0* r445to_static(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445signature_resolve_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445twin(T445* C);
/*ARRAY_TYPE_MARK*/void r445id_extra_information(T0* a1);
/*ARRAY_TYPE_MARK*/void r445set_start_position(T445* C,T338 a1);
/*ARRAY_TYPE_MARK*/T0* r445class_text(T445* C);
/*ARRAY_TYPE_MARK*/T6 r445is_boolean(void);
/*ARRAY_TYPE_MARK*/void r445accept(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r445set_static_generic_list(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/void r445update_static_memory(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T0* r445typed_internals_type_mark(T445* C,T338 a1);
/*ARRAY_TYPE_MARK*/T6 r445is_tuple(void);
/*ARRAY_TYPE_MARK*/void r445pretty_in(T445* C,T0* a1);
/*ARRAY_TYPE_MARK*/T338 r445start_position(T445* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r408set_generic_list(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408declaration_type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_agent(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408long_name(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408written_mark(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408resolve_in(T408* C,T0* a1);
extern T0*oBC408native_array_name;
extern int fBC408native_array_name;
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408native_array_name(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408at(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408strings(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408specialize_in(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_native_array(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_static(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_pointer(void);
/*NATIVE_ARRAY_TYPE_MARK*/T2 r408id(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408elements_type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r408recompute_declaration_type(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408specialize_thru(T408* C,T0* a1,T0* a2,T0* a3);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_real(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_fixed_string(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408same_signature_type(T408* C,T0* a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_natural(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_integer(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408make(T408* C,T338 a1,T0* a2);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_character(void);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_kernel_expanded(void);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408written_name(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408default_expression(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408to_static(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408signature_resolve_in(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408twin(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/void r408id_extra_information(T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r408set_start_position(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408class_text(T408* C);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_boolean(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408accept(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r408set_static_generic_list(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/void r408update_static_memory(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T0* r408typed_internals_type_mark(T408* C,T338 a1);
/*NATIVE_ARRAY_TYPE_MARK*/T6 r408is_tuple(void);
/*NATIVE_ARRAY_TYPE_MARK*/void r408pretty_in(T408* C,T0* a1);
/*NATIVE_ARRAY_TYPE_MARK*/T338 r408start_position(T408* C);
/*BOOLEAN_TYPE_MARK*/T381*create381make(T338 a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_tuple(void);
/*BOOLEAN_TYPE_MARK*/void r381make(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T0* r381generic_list(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_character(void);
/*BOOLEAN_TYPE_MARK*/T0* r381written_mark(void);
extern T0*oBC381written_name;
extern int fBC381written_name;
/*BOOLEAN_TYPE_MARK*/T0* r381written_name(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_native_array(void);
/*BOOLEAN_TYPE_MARK*/T0* r381at(T381* C,T338 a1);
extern T0*oBC381long_name;
extern int fBC381long_name;
/*BOOLEAN_TYPE_MARK*/T0* r381long_name(void);
/*BOOLEAN_TYPE_MARK*/T0* r381specialize_thru(T381* C,T0* a1,T0* a2,T0* a3);
/*BOOLEAN_TYPE_MARK*/T6 r381is_boolean(void);
/*BOOLEAN_TYPE_MARK*/T0* r381typed_internals_type_mark(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T0* r381to_static(T381* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/void r381accept(T381* C,T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r381same_signature_type(T381* C,T0* a1,T0* a2);
/*BOOLEAN_TYPE_MARK*/T0* r381type(void);
/*BOOLEAN_TYPE_MARK*/T0* r381signature_resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_natural(void);
/*BOOLEAN_TYPE_MARK*/T0* r381default_expression(T338 a1);
/*BOOLEAN_TYPE_MARK*/void r381id_extra_information(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r381declaration_type(T381* C);
/*BOOLEAN_TYPE_MARK*/T6 r381is_pointer(void);
/*BOOLEAN_TYPE_MARK*/T338 r381start_position(T381* C);
/*BOOLEAN_TYPE_MARK*/T6 r381is_kernel_expanded(void);
/*BOOLEAN_TYPE_MARK*/void r381set_start_position(T381* C,T338 a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_fixed_string(void);
/*BOOLEAN_TYPE_MARK*/T0* r381class_text(T381* C);
/*BOOLEAN_TYPE_MARK*/T0* r381twin(T381* C);
/*BOOLEAN_TYPE_MARK*/T6 r381is_real(void);
/*BOOLEAN_TYPE_MARK*/T6 r381is_integer(void);
/*BOOLEAN_TYPE_MARK*/void r381pretty_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T0* r381resolve_in(T0* a1);
/*BOOLEAN_TYPE_MARK*/T6 r381is_agent(void);
/*CHARACTER_TYPE_MARK*/T436*create436make(T338 a1);
/*CHARACTER_TYPE_MARK*/T6 r436is_tuple(void);
/*CHARACTER_TYPE_MARK*/void r436make(T436* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T0* r436generic_list(void);
/*CHARACTER_TYPE_MARK*/T6 r436is_character(void);
/*CHARACTER_TYPE_MARK*/T0* r436written_mark(void);
extern T0*oBC436written_name;
extern int fBC436written_name;
/*CHARACTER_TYPE_MARK*/T0* r436written_name(void);
/*CHARACTER_TYPE_MARK*/T6 r436is_native_array(void);
/*CHARACTER_TYPE_MARK*/T0* r436at(T436* C,T338 a1);
extern T0*oBC436long_name;
extern int fBC436long_name;
/*CHARACTER_TYPE_MARK*/T0* r436long_name(void);
/*CHARACTER_TYPE_MARK*/T0* r436specialize_thru(T436* C,T0* a1,T0* a2,T0* a3);
/*CHARACTER_TYPE_MARK*/T6 r436is_boolean(void);
/*CHARACTER_TYPE_MARK*/T0* r436typed_internals_type_mark(T436* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T0* r436to_static(T436* C,T0* a1);
/*CHARACTER_TYPE_MARK*/void r436accept(T436* C,T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r436same_signature_type(T436* C,T0* a1,T0* a2);
/*CHARACTER_TYPE_MARK*/T0* r436type(void);
/*CHARACTER_TYPE_MARK*/T0* r436signature_resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r436is_natural(void);
/*CHARACTER_TYPE_MARK*/T0* r436default_expression(T338 a1);
/*CHARACTER_TYPE_MARK*/void r436id_extra_information(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r436declaration_type(T436* C);
/*CHARACTER_TYPE_MARK*/T6 r436is_pointer(void);
/*CHARACTER_TYPE_MARK*/T338 r436start_position(T436* C);
/*CHARACTER_TYPE_MARK*/T6 r436is_kernel_expanded(void);
/*CHARACTER_TYPE_MARK*/void r436set_start_position(T436* C,T338 a1);
/*CHARACTER_TYPE_MARK*/T6 r436is_fixed_string(void);
/*CHARACTER_TYPE_MARK*/T0* r436class_text(T436* C);
/*CHARACTER_TYPE_MARK*/T0* r436twin(T436* C);
/*CHARACTER_TYPE_MARK*/T6 r436is_real(void);
/*CHARACTER_TYPE_MARK*/T6 r436is_integer(void);
/*CHARACTER_TYPE_MARK*/void r436pretty_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T0* r436resolve_in(T0* a1);
/*CHARACTER_TYPE_MARK*/T6 r436is_agent(void);
/*INTEGER_TYPE_MARK*/T407*create407integer_16(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer_64(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer_8(T338 a1);
/*INTEGER_TYPE_MARK*/T407*create407integer_32(T338 a1);
/*INTEGER_TYPE_MARK*/T0* r407declaration_type(T407* C);
/*INTEGER_TYPE_MARK*/T6 r407is_agent(void);
/*INTEGER_TYPE_MARK*/T0* r407generic_list(void);
/*INTEGER_TYPE_MARK*/T0* r407written_mark(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407resolve_in(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r407at(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_native_array(void);
/*INTEGER_TYPE_MARK*/T3 r407structure_mark(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407type(T407* C);
/*INTEGER_TYPE_MARK*/T6 r407is_pointer(void);
/*INTEGER_TYPE_MARK*/T2 r407id(T407* C);
/*INTEGER_TYPE_MARK*/void r407integer_16(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/void r407integer_32(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T0* r407specialize_thru(T407* C,T0* a1,T0* a2,T0* a3);
/*INTEGER_TYPE_MARK*/T6 r407is_real(void);
/*INTEGER_TYPE_MARK*/T6 r407is_fixed_string(T407* C);
extern T0*oBC407integer_64_name;
extern int fBC407integer_64_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_64_name(void);
/*INTEGER_TYPE_MARK*/void r407integer(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407same_signature_type(T407* C,T0* a1,T0* a2);
/*INTEGER_TYPE_MARK*/void r407integer_64(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407can_be_assigned_to(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T6 r407is_natural(void);
/*INTEGER_TYPE_MARK*/void r407integer_8(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_integer(void);
extern T0*oBC407integer_name;
extern int fBC407integer_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_name(void);
/*INTEGER_TYPE_MARK*/T6 r407is_character(void);
/*INTEGER_TYPE_MARK*/T6 r407is_kernel_expanded(void);
extern T0*oBC407integer_8_name;
extern int fBC407integer_8_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_8_name(void);
/*INTEGER_TYPE_MARK*/T0* r407written_name(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407default_expression(T407* C,T338 a1);
extern T0*oBC407integer_32_name;
extern int fBC407integer_32_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_32_name(void);
/*INTEGER_TYPE_MARK*/T0* r407to_static(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r407signature_resolve_in(T407* C,T0* a1);
extern T0*oBC407integer_16_name;
extern int fBC407integer_16_name;
/*INTEGER_TYPE_MARK*/T0* r407integer_16_name(void);
/*INTEGER_TYPE_MARK*/T0* r407twin(T407* C);
/*INTEGER_TYPE_MARK*/void r407id_extra_information(T0* a1);
/*INTEGER_TYPE_MARK*/void r407set_start_position(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T0* r407class_text(T407* C);
/*INTEGER_TYPE_MARK*/T6 r407is_boolean(void);
/*INTEGER_TYPE_MARK*/void r407accept(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T0* r407typed_internals_type_mark(T407* C,T338 a1);
/*INTEGER_TYPE_MARK*/T6 r407is_tuple(void);
/*INTEGER_TYPE_MARK*/void r407pretty_in(T407* C,T0* a1);
/*INTEGER_TYPE_MARK*/T338 r407start_position(T407* C);
/*INTEGER_TYPE_MARK*/T0* r407_P_365_class_text(T407* C);
/*NATURAL_TYPE_MARK*/T434*create434natural_16(T338 a1);
/*NATURAL_TYPE_MARK*/T434*create434natural_32(T338 a1);
/*NATURAL_TYPE_MARK*/T434*create434natural_64(T338 a1);
/*NATURAL_TYPE_MARK*/T434*create434natural_8(T338 a1);
/*NATURAL_TYPE_MARK*/T0* r434declaration_type(T434* C);
extern T0*oBC434natural_32_name;
extern int fBC434natural_32_name;
/*NATURAL_TYPE_MARK*/T0* r434natural_32_name(void);
/*NATURAL_TYPE_MARK*/T6 r434is_agent(void);
/*NATURAL_TYPE_MARK*/T0* r434generic_list(void);
/*NATURAL_TYPE_MARK*/T0* r434written_mark(T434* C);
/*NATURAL_TYPE_MARK*/T0* r434resolve_in(T434* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r434at(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r434is_native_array(void);
/*NATURAL_TYPE_MARK*/T3 r434structure_mark(T434* C);
extern T0*oBC434natural_name;
extern int fBC434natural_name;
/*NATURAL_TYPE_MARK*/T0* r434natural_name(void);
/*NATURAL_TYPE_MARK*/T0* r434type(T434* C);
/*NATURAL_TYPE_MARK*/T6 r434is_pointer(void);
/*NATURAL_TYPE_MARK*/T2 r434id(T434* C);
/*NATURAL_TYPE_MARK*/void r434natural_8(T434* C,T338 a1);
extern T0*oBC434natural_64_name;
extern int fBC434natural_64_name;
/*NATURAL_TYPE_MARK*/T0* r434natural_64_name(void);
/*NATURAL_TYPE_MARK*/void r434natural(T434* C,T338 a1);
extern T0*oBC434natural_8_name;
extern int fBC434natural_8_name;
/*NATURAL_TYPE_MARK*/T0* r434natural_8_name(void);
/*NATURAL_TYPE_MARK*/T0* r434specialize_thru(T434* C,T0* a1,T0* a2,T0* a3);
/*NATURAL_TYPE_MARK*/T6 r434is_real(void);
/*NATURAL_TYPE_MARK*/T6 r434is_fixed_string(T434* C);
/*NATURAL_TYPE_MARK*/T6 r434same_signature_type(T434* C,T0* a1,T0* a2);
/*NATURAL_TYPE_MARK*/T6 r434can_be_assigned_to(T434* C,T0* a1);
/*NATURAL_TYPE_MARK*/T6 r434is_natural(void);
/*NATURAL_TYPE_MARK*/void r434natural_16(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r434is_integer(void);
/*NATURAL_TYPE_MARK*/void r434natural_32(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r434is_character(void);
/*NATURAL_TYPE_MARK*/void r434natural_64(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r434is_kernel_expanded(void);
/*NATURAL_TYPE_MARK*/T0* r434written_name(T434* C);
/*NATURAL_TYPE_MARK*/T0* r434default_expression(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T0* r434to_static(T434* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r434signature_resolve_in(T434* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r434twin(T434* C);
/*NATURAL_TYPE_MARK*/void r434id_extra_information(T0* a1);
/*NATURAL_TYPE_MARK*/void r434set_start_position(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T0* r434class_text(T434* C);
/*NATURAL_TYPE_MARK*/T6 r434is_boolean(void);
extern T0*oBC434natural_16_name;
extern int fBC434natural_16_name;
/*NATURAL_TYPE_MARK*/T0* r434natural_16_name(void);
/*NATURAL_TYPE_MARK*/void r434accept(T434* C,T0* a1);
/*NATURAL_TYPE_MARK*/T0* r434typed_internals_type_mark(T434* C,T338 a1);
/*NATURAL_TYPE_MARK*/T6 r434is_tuple(void);
/*NATURAL_TYPE_MARK*/void r434pretty_in(T434* C,T0* a1);
/*NATURAL_TYPE_MARK*/T338 r434start_position(T434* C);
/*NATURAL_TYPE_MARK*/T0* r434_P_365_class_text(T434* C);
/*CLASS_TYPE_MARK*/T403*create403make(T0* a1);
/*CLASS_TYPE_MARK*/T6 r403is_tuple(void);
/*CLASS_TYPE_MARK*/void r403make(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r403generic_list(void);
/*CLASS_TYPE_MARK*/T6 r403is_character(void);
/*CLASS_TYPE_MARK*/T0* r403written_mark(T403* C);
/*CLASS_TYPE_MARK*/T0* r403canonical_long_name(T403* C);
/*CLASS_TYPE_MARK*/T0* r403written_name(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_native_array(void);
/*CLASS_TYPE_MARK*/T0* r403at(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T6 r403is_expanded(T403* C);
/*CLASS_TYPE_MARK*/T0* r403specialize_thru(T403* C,T0* a1,T0* a2,T0* a3);
/*CLASS_TYPE_MARK*/T6 r403is_boolean(void);
/*CLASS_TYPE_MARK*/T0* r403typed_internals_type_mark(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T0* r403to_static(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T2 r403id(T403* C);
/*CLASS_TYPE_MARK*/void r403accept(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r403is_reference(T403* C);
/*CLASS_TYPE_MARK*/T6 r403same_signature_type(T403* C,T0* a1,T0* a2);
/*CLASS_TYPE_MARK*/T0* r403type(T403* C);
/*CLASS_TYPE_MARK*/T0* r403signature_resolve_in(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r403is_natural(void);
/*CLASS_TYPE_MARK*/T0* r403default_expression(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/void r403id_extra_information(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T0* r403declaration_type(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_pointer(void);
/*CLASS_TYPE_MARK*/T6 r403is_user_expanded(T403* C);
/*CLASS_TYPE_MARK*/T338 r403start_position(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_kernel_expanded(void);
/*CLASS_TYPE_MARK*/void r403set_start_position(T403* C,T338 a1);
/*CLASS_TYPE_MARK*/T6 r403is_fixed_string(T403* C);
/*CLASS_TYPE_MARK*/T0* r403class_text(T403* C);
/*CLASS_TYPE_MARK*/T0* r403twin(T403* C);
/*CLASS_TYPE_MARK*/T6 r403is_real(void);
/*CLASS_TYPE_MARK*/T6 r403is_integer(void);
/*CLASS_TYPE_MARK*/void r403pretty_in(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r403is_empty_expanded(T403* C);
/*CLASS_TYPE_MARK*/T0* r403resolve_in(T403* C,T0* a1);
/*CLASS_TYPE_MARK*/T6 r403is_agent(void);
/*POINTER_TYPE_MARK*/T437*create437make(T338 a1);
/*POINTER_TYPE_MARK*/T6 r437is_tuple(void);
/*POINTER_TYPE_MARK*/void r437make(T437* C,T338 a1);
/*POINTER_TYPE_MARK*/T0* r437generic_list(void);
/*POINTER_TYPE_MARK*/T6 r437is_character(void);
/*POINTER_TYPE_MARK*/T0* r437written_mark(void);
extern T0*oBC437written_name;
extern int fBC437written_name;
/*POINTER_TYPE_MARK*/T0* r437written_name(void);
/*POINTER_TYPE_MARK*/T6 r437is_native_array(void);
/*POINTER_TYPE_MARK*/T0* r437at(T437* C,T338 a1);
extern T0*oBC437long_name;
extern int fBC437long_name;
/*POINTER_TYPE_MARK*/T0* r437long_name(void);
/*POINTER_TYPE_MARK*/T0* r437specialize_thru(T437* C,T0* a1,T0* a2,T0* a3);
/*POINTER_TYPE_MARK*/T6 r437is_boolean(void);
/*POINTER_TYPE_MARK*/T0* r437typed_internals_type_mark(T437* C,T338 a1);
/*POINTER_TYPE_MARK*/T0* r437to_static(T437* C,T0* a1);
/*POINTER_TYPE_MARK*/void r437accept(T437* C,T0* a1);
/*POINTER_TYPE_MARK*/T6 r437same_signature_type(T437* C,T0* a1,T0* a2);
/*POINTER_TYPE_MARK*/T0* r437type(void);
/*POINTER_TYPE_MARK*/T0* r437signature_resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r437is_natural(void);
/*POINTER_TYPE_MARK*/T0* r437default_expression(T437* C,T338 a1);
/*POINTER_TYPE_MARK*/void r437id_extra_information(T0* a1);
/*POINTER_TYPE_MARK*/T0* r437declaration_type(T437* C);
/*POINTER_TYPE_MARK*/T6 r437is_pointer(void);
/*POINTER_TYPE_MARK*/T338 r437start_position(T437* C);
/*POINTER_TYPE_MARK*/T6 r437is_kernel_expanded(void);
/*POINTER_TYPE_MARK*/void r437set_start_position(T437* C,T338 a1);
/*POINTER_TYPE_MARK*/T6 r437is_fixed_string(void);
/*POINTER_TYPE_MARK*/T0* r437class_text(T437* C);
/*POINTER_TYPE_MARK*/T0* r437twin(T437* C);
/*POINTER_TYPE_MARK*/T6 r437is_real(void);
/*POINTER_TYPE_MARK*/T6 r437is_integer(void);
/*POINTER_TYPE_MARK*/void r437pretty_in(T0* a1);
/*POINTER_TYPE_MARK*/T0* r437resolve_in(T0* a1);
/*POINTER_TYPE_MARK*/T6 r437is_agent(void);
/*REAL_TYPE_MARK*/T435*create435real_32(T338 a1);
/*REAL_TYPE_MARK*/T435*create435real_extended(T338 a1);
/*REAL_TYPE_MARK*/T435*create435real(T338 a1);
/*REAL_TYPE_MARK*/T0* r435declaration_type(T435* C);
/*REAL_TYPE_MARK*/T6 r435is_agent(void);
/*REAL_TYPE_MARK*/T0* r435generic_list(void);
extern T0*oBC435real_80_name;
extern int fBC435real_80_name;
/*REAL_TYPE_MARK*/T0* r435real_80_name(void);
/*REAL_TYPE_MARK*/T0* r435written_mark(T435* C);
/*REAL_TYPE_MARK*/T0* r435resolve_in(T435* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r435at(T435* C,T338 a1);
/*REAL_TYPE_MARK*/T6 r435is_native_array(void);
/*REAL_TYPE_MARK*/T3 r435structure_mark(T435* C);
extern T0*oBC435real_64_name;
extern int fBC435real_64_name;
/*REAL_TYPE_MARK*/T0* r435real_64_name(void);
/*REAL_TYPE_MARK*/T0* r435type(T435* C);
/*REAL_TYPE_MARK*/T6 r435is_pointer(void);
/*REAL_TYPE_MARK*/T2 r435id(T435* C);
extern T0*oBC435real_128_name;
extern int fBC435real_128_name;
/*REAL_TYPE_MARK*/T0* r435real_128_name(void);
/*REAL_TYPE_MARK*/T0* r435specialize_thru(T435* C,T0* a1,T0* a2,T0* a3);
/*REAL_TYPE_MARK*/T6 r435is_real(void);
/*REAL_TYPE_MARK*/T6 r435is_fixed_string(T435* C);
/*REAL_TYPE_MARK*/T6 r435same_signature_type(T435* C,T0* a1,T0* a2);
/*REAL_TYPE_MARK*/T6 r435can_be_assigned_to(T435* C,T0* a1);
/*REAL_TYPE_MARK*/T6 r435is_natural(void);
extern T0*oBC435real_name;
extern int fBC435real_name;
/*REAL_TYPE_MARK*/T0* r435real_name(void);
/*REAL_TYPE_MARK*/T6 r435is_integer(void);
extern T0*oBC435real_32_name;
extern int fBC435real_32_name;
/*REAL_TYPE_MARK*/T0* r435real_32_name(void);
/*REAL_TYPE_MARK*/T6 r435is_character(void);
/*REAL_TYPE_MARK*/T6 r435is_kernel_expanded(void);
/*REAL_TYPE_MARK*/T0* r435written_name(T435* C);
/*REAL_TYPE_MARK*/T0* r435default_expression(T435* C,T338 a1);
/*REAL_TYPE_MARK*/void r435real_32(T435* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r435to_static(T435* C,T0* a1);
/*REAL_TYPE_MARK*/void r435real_64(T435* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r435signature_resolve_in(T435* C,T0* a1);
/*REAL_TYPE_MARK*/void r435real_80(T435* C,T338 a1);
extern T0*oBC435real_extended_name;
extern int fBC435real_extended_name;
/*REAL_TYPE_MARK*/T0* r435real_extended_name(void);
/*REAL_TYPE_MARK*/void r435real_extended(T435* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r435twin(T435* C);
/*REAL_TYPE_MARK*/void r435id_extra_information(T0* a1);
/*REAL_TYPE_MARK*/void r435set_start_position(T435* C,T338 a1);
/*REAL_TYPE_MARK*/T0* r435class_text(T435* C);
/*REAL_TYPE_MARK*/T6 r435is_boolean(void);
/*REAL_TYPE_MARK*/void r435accept(T435* C,T0* a1);
/*REAL_TYPE_MARK*/T0* r435typed_internals_type_mark(T435* C,T338 a1);
/*REAL_TYPE_MARK*/T6 r435is_tuple(void);
/*REAL_TYPE_MARK*/void r435pretty_in(T435* C,T0* a1);
/*REAL_TYPE_MARK*/T338 r435start_position(T435* C);
/*REAL_TYPE_MARK*/void r435real_128(T435* C,T338 a1);
/*REAL_TYPE_MARK*/void r435real(T435* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442set_generic_list(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442declaration_type(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_agent(void);
extern T0*oBC440canonical_long_name;
extern int fBC440canonical_long_name;
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442canonical_long_name(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442long_name(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442written_mark(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442resolve_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r442count(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442at(T442* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442strings(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442specialize_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_native_array(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_static(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442type(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_pointer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T2 r442id(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442recompute_declaration_type(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442specialize_thru(T442* C,T0* a1,T0* a2,T0* a3);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_real(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_fixed_string(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442same_signature_type(T442* C,T0* a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_natural(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_integer(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442make(T442* C,T338 a1,T0* a2);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_character(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_kernel_expanded(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442written_name(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442default_expression(T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442to_static(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442signature_resolve_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442twin(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442id_extra_information(T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442set_start_position(T442* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442class_text(T442* C);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T6 r442is_boolean(void);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442accept(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442set_static_generic_list(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442update_static_memory(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T0* r442typed_internals_type_mark(T442* C,T338 a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/void r442pretty_in(T442* C,T0* a1);
/*NON_EMPTY_TUPLE_TYPE_MARK*/T338 r442start_position(T442* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r439make(T439* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439generic_list(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_character(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439written_mark(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439canonical_long_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439written_name(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_native_array(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439at(T439* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439specialize_thru(T439* C,T0* a1,T0* a2,T0* a3);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_boolean(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439typed_internals_type_mark(T439* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439to_static(T439* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T2 r439id(T439* C);
/*EMPTY_TUPLE_TYPE_MARK*/void r439accept(T439* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439same_signature_type(T439* C,T0* a1,T0* a2);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439type(T439* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439signature_resolve_in(T439* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_natural(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439default_expression(T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/void r439id_extra_information(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439declaration_type(T439* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_pointer(void);
/*EMPTY_TUPLE_TYPE_MARK*/T338 r439start_position(T439* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_kernel_expanded(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r439set_start_position(T439* C,T338 a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_fixed_string(void);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439class_text(T439* C);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439twin(T439* C);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_real(void);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_integer(void);
/*EMPTY_TUPLE_TYPE_MARK*/void r439pretty_in(T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T0* r439resolve_in(T439* C,T0* a1);
/*EMPTY_TUPLE_TYPE_MARK*/T6 r439is_agent(void);
/*AGENT_TYPE_MARK*/void r443set_generic_list(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443declaration_type(T443* C);
/*AGENT_TYPE_MARK*/T6 r443is_agent(void);
/*AGENT_TYPE_MARK*/T0* r443canonical_long_name(T443* C);
/*AGENT_TYPE_MARK*/T0* r443long_name(T443* C);
/*AGENT_TYPE_MARK*/T0* r443written_mark(T443* C);
/*AGENT_TYPE_MARK*/T0* r443resolve_in(T443* C,T0* a1);
extern T0*oBC443function_name;
extern int fBC443function_name;
/*AGENT_TYPE_MARK*/T0* r443function_name(void);
/*AGENT_TYPE_MARK*/T0* r443at(T443* C,T338 a1);
/*AGENT_TYPE_MARK*/T0* r443written_open(T443* C);
/*AGENT_TYPE_MARK*/T0* r443strings(void);
/*AGENT_TYPE_MARK*/void r443procedure(T443* C,T338 a1,T0* a2);
/*AGENT_TYPE_MARK*/void r443specialize_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T6 r443is_native_array(void);
extern T0*oBC443routine_name;
extern int fBC443routine_name;
/*AGENT_TYPE_MARK*/T0* r443routine_name(void);
/*AGENT_TYPE_MARK*/T6 r443is_static(T443* C);
/*AGENT_TYPE_MARK*/T0* r443type(T443* C);
/*AGENT_TYPE_MARK*/T6 r443is_pointer(void);
/*AGENT_TYPE_MARK*/T2 r443id(T443* C);
/*AGENT_TYPE_MARK*/void r443recompute_declaration_type(T443* C);
/*AGENT_TYPE_MARK*/T0* r443specialize_thru(T443* C,T0* a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r443is_real(void);
/*AGENT_TYPE_MARK*/T6 r443is_fixed_string(T443* C);
/*AGENT_TYPE_MARK*/T6 r443same_signature_type(T443* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r443is_natural(void);
/*AGENT_TYPE_MARK*/T6 r443is_integer(void);
/*AGENT_TYPE_MARK*/T6 r443is_character(void);
/*AGENT_TYPE_MARK*/T0* r443result_type(T443* C);
/*AGENT_TYPE_MARK*/void r443predicate(T443* C,T338 a1,T0* a2);
/*AGENT_TYPE_MARK*/T6 r443is_kernel_expanded(void);
/*AGENT_TYPE_MARK*/void r443routine(T443* C,T338 a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r443written_name(T443* C);
/*AGENT_TYPE_MARK*/T0* r443default_expression(T338 a1);
/*AGENT_TYPE_MARK*/void r443basic_make(T443* C,T2 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T0* r443to_static(T443* C,T0* a1);
extern T0*oBC443procedure_name;
extern int fBC443procedure_name;
/*AGENT_TYPE_MARK*/T0* r443procedure_name(void);
/*AGENT_TYPE_MARK*/void r443open_check(T443* C,T0* a1,T0* a2);
/*AGENT_TYPE_MARK*/T0* r443signature_resolve_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443twin(T443* C);
/*AGENT_TYPE_MARK*/void r443id_extra_information(T0* a1);
/*AGENT_TYPE_MARK*/void r443set_start_position(T443* C,T338 a1);
/*AGENT_TYPE_MARK*/T0* r443class_text(T443* C);
/*AGENT_TYPE_MARK*/void r443function(T443* C,T338 a1,T0* a2,T0* a3);
/*AGENT_TYPE_MARK*/T6 r443is_boolean(void);
/*AGENT_TYPE_MARK*/void r443accept(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/void r443set_static_generic_list(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/void r443update_static_memory(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443typed_internals_type_mark(T443* C,T338 a1);
/*AGENT_TYPE_MARK*/T6 r443is_tuple(void);
/*AGENT_TYPE_MARK*/void r443pretty_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T338 r443start_position(T443* C);
/*AGENT_TYPE_MARK*/void r443_P_409_specialize_in(T443* C,T0* a1);
/*AGENT_TYPE_MARK*/T0* r443_P_409_specialize_thru(T443* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/void r446set_generic_list(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446declaration_type(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_agent(void);
/*USER_GENERIC_TYPE_MARK*/T0* r446canonical_long_name(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446long_name(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446written_mark(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446resolve_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446at(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446strings(void);
/*USER_GENERIC_TYPE_MARK*/void r446specialize_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_native_array(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_static(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446type(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_pointer(void);
/*USER_GENERIC_TYPE_MARK*/T2 r446id(T446* C);
/*USER_GENERIC_TYPE_MARK*/void r446recompute_declaration_type(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446specialize_thru(T446* C,T0* a1,T0* a2,T0* a3);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_real(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_fixed_string(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_empty_expanded(T446* C);
/*USER_GENERIC_TYPE_MARK*/void r446special_weak_reference_extra_check(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446same_signature_type(T446* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_natural(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_integer(void);
/*USER_GENERIC_TYPE_MARK*/void r446make(T446* C,T0* a1,T0* a2);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_character(void);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_expanded(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_kernel_expanded(void);
/*USER_GENERIC_TYPE_MARK*/T0* r446written_name(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446default_expression(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446to_static(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_reference(T446* C);
/*USER_GENERIC_TYPE_MARK*/T0* r446signature_resolve_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446twin(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_user_expanded(T446* C);
/*USER_GENERIC_TYPE_MARK*/void r446id_extra_information(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446weak_reference_argument(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r446set_start_position(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446class_text(T446* C);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_boolean(void);
/*USER_GENERIC_TYPE_MARK*/void r446accept(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r446set_static_generic_list(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/void r446update_static_memory(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T0* r446typed_internals_type_mark(T446* C,T338 a1);
/*USER_GENERIC_TYPE_MARK*/T6 r446is_tuple(void);
/*USER_GENERIC_TYPE_MARK*/void r446pretty_in(T446* C,T0* a1);
/*USER_GENERIC_TYPE_MARK*/T338 r446start_position(T446* C);
/*MINI_BUFFER*/T6 r273is_off(T273* C);
/*MINI_BUFFER*/T0* r273a_include(T273* C);
/*MINI_BUFFER*/void r273next(T273* C);
/*MINI_BUFFER*/T0* r273a_file_or_directory_path(T273* C);
/*MINI_BUFFER*/T0* r273a_type_cast(T273* C);
/*MINI_BUFFER*/T6 r273a_keyword(T273* C,T0* a1);
/*MINI_BUFFER*/void r273skip_separators(T273* C);
/*MINI_BUFFER*/T3 r273item(T273* C);
/*MINI_BUFFER*/T0* r273system_tools(void);
/*MINI_BUFFER*/T0* r273a_signature(T273* C);
/*MINI_BUFFER*/T0* r273an_identifier(T273* C);
/*MINI_BUFFER*/void r273start_with(T273* C,T0* a1);
/*MINI_BUFFER*/void r273show_position_with_fatal_error(T273* C,T0* a1);
/*MINI_BUFFER*/T6 r273a_word(T273* C,T0* a1);
/*NATIVE_BUILT_IN*/void r467make(T467* C,T0* a1);
/*NATIVE_BUILT_IN*/void r467pretty(T467* C,T2 a1,T6 a2);
/*NATIVE_BUILT_IN*/void r467parse_external_type(T467* C,T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r467accept(T467* C,T0* a1);
/*NATIVE_BUILT_IN*/T338 r467start_position(T467* C);
/*NATIVE_BUILT_IN*/T6 r467use_current(T0* a1);
/*NATIVE_BUILT_IN*/void r467crash(T467* C);
/*NATIVE_BUILT_IN*/T6 r467side_effect_free(T0* a1,T0* a2);
/*NATIVE_BUILT_IN*/void r467not_yet_implemented(T467* C);
/*NATIVE_BUILT_IN*/T2 r467hash_code(T467* C);
/*NATIVE_PLUG_IN*/T6 r469is_equal(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469make(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469pretty(T469* C,T2 a1,T6 a2);
/*NATIVE_PLUG_IN*/void r469parse_external_type(T469* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/void r469parse_alias_string(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469accept(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469do_collect(T469* C);
/*NATIVE_PLUG_IN*/T0* r469required_key(T469* C,T0* a1);
/*NATIVE_PLUG_IN*/void r469check_unused_keys(T469* C);
/*NATIVE_PLUG_IN*/void r469collect(T469* C,T0* a1,T0* a2);
/*NATIVE_PLUG_IN*/T338 r469start_position(T469* C);
/*NATIVE_PLUG_IN*/T0* r469system_tools(void);
/*NATIVE_PLUG_IN*/void r469customize_runtime(T469* C);
/*NATIVE_C_PLUS_PLUS*/void r470make(T470* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/void r470pretty(T470* C,T2 a1,T6 a2);
/*NATIVE_C_PLUS_PLUS*/T2 r470parse_args_in(T470* C,T0* a1,T2 a2,T0* a3,T2 a4,T2 a5);
/*NATIVE_C_PLUS_PLUS*/void r470parse_external_type(T470* C,T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T0* r470cpp(void);
/*NATIVE_C_PLUS_PLUS*/void r470accept(T470* C,T0* a1);
/*NATIVE_C_PLUS_PLUS*/T2 r470error_at(T470* C,T2 a1,T0* a2,T2 a3);
/*NATIVE_C_PLUS_PLUS*/void r470notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/void r470collect(T0* a1,T0* a2);
/*NATIVE_C_PLUS_PLUS*/T338 r470start_position(T470* C);
/*NATIVE_C_PLUS_PLUS*/T2 r470parse_cpp_class_in(T470* C,T0* a1,T2 a2,T0* a3);
/*NATIVE_C_PLUS_PLUS*/void r470crash(T470* C);
/*NATIVE_C_PLUS_PLUS*/T2 r470parse_include(T470* C,T2 a1,T0* a2);
extern T0*oBC470include_memory;
extern int fBC470include_memory;
/*NATIVE_C_PLUS_PLUS*/T0* r470include_memory(void);
/*NATIVE_C_PLUS_PLUS*/void r470parse_external_in(T470* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*NATIVE_C_PLUS_PLUS*/void r470not_yet_implemented(T470* C);
/*NATIVE_C_PLUS_PLUS*/T2 r470hash_code(T470* C);
/*NATIVE_C*/void r471make(T471* C,T0* a1);
/*NATIVE_C*/void r471pretty(T471* C,T2 a1,T6 a2);
/*NATIVE_C*/void r471parse_external_type(T471* C,T0* a1,T0* a2);
/*NATIVE_C*/T0* r471cpp(void);
/*NATIVE_C*/void r471accept(T471* C,T0* a1);
/*NATIVE_C*/void r471notify_external_assignments(T0* a1,T0* a2);
/*NATIVE_C*/void r471parse_external_tag(T471* C);
/*NATIVE_C*/void r471collect(T0* a1,T0* a2);
/*NATIVE_C*/T338 r471start_position(T471* C);
/*NATIVE_C*/void r471crash(T471* C);
/*NATIVE_C*/void r471not_yet_implemented(T471* C);
/*NATIVE_C*/T2 r471hash_code(T471* C);
/*NATIVE_C*/void r471bad_external(T471* C,T0* a1);
/*EXTERNAL_TYPE*/T421*create421make(T0* a1,T0* a2,T338 a3);
/*EXTERNAL_TYPE*/void r421make(T421* C,T0* a1,T0* a2,T338 a3);
/*EXTERNAL_TYPE*/void r421set(T421* C,T0* a1,T0* a2);
/*EXTERNAL_TYPE*/void r421collect(T421* C);
/*PARENT_EDGE*/T280*create280make(T6 a1,T0* a2);
/*PARENT_EDGE*/void r280check_level_2(T280* C,T0* a1);
/*PARENT_EDGE*/void r280make(T280* C,T6 a1,T0* a2);
/*PARENT_EDGE*/T0* r280exports_for(T280* C,T0* a1);
/*PARENT_EDGE*/void r280add_rename(T280* C,T0* a1);
/*PARENT_EDGE*/T6 r280is_target_of_rename(T280* C,T0* a1);
extern T0*oBC280forbidden_parent_list;
extern int fBC280forbidden_parent_list;
/*PARENT_EDGE*/T0* r280forbidden_parent_list(void);
/*PARENT_EDGE*/void r280initialize_and_check_level_1(T280* C,T0* a1);
/*PARENT_EDGE*/T2 r280rename_count(T280* C);
/*PARENT_EDGE*/void r280id_extra_information(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280get_name_in_child(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280exports_for_all(T280* C);
/*PARENT_EDGE*/T338 r280start_position(T280* C);
/*PARENT_EDGE*/T0* r280do_rename(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280get_undefine(T280* C,T0* a1);
/*PARENT_EDGE*/T0* r280get_redefine(T280* C,T0* a1);
/*RENAME_PAIR*/void r478make(T478* C,T0* a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/T0* r518specialize_and_check(T518* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r518to_expression(T518* C);
/*OLD_MANIFEST_ARRAY*/void r518make(T518* C,T338 a1,T0* a2);
/*OLD_MANIFEST_ARRAY*/void r518pretty(T518* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r518static_simplify(T518* C);
/*OLD_MANIFEST_ARRAY*/T0* r518specialize_in(T518* C,T0* a1);
extern T0*oBC518type_set_buffer;
extern int fBC518type_set_buffer;
/*OLD_MANIFEST_ARRAY*/T0* r518type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r518specialize_thru(T518* C,T0* a1,T0* a2,T0* a3);
/*OLD_MANIFEST_ARRAY*/T6 r518is_stored_in_some_local_variable(void);
/*OLD_MANIFEST_ARRAY*/void r518accept(T518* C,T0* a1);
/*OLD_MANIFEST_ARRAY*/void r518pretty_target(T518* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r518twin(T518* C);
/*OLD_MANIFEST_ARRAY*/T0* r518written_declaration_type_mark(void);
/*OLD_MANIFEST_ARRAY*/T6 r518use_current(T0* a1);
/*OLD_MANIFEST_ARRAY*/void r518bracketed_pretty(T518* C,T2 a1);
/*OLD_MANIFEST_ARRAY*/T0* r518non_void_no_dispatch_type(T0* a1);
/*OLD_MANIFEST_ARRAY*/T6 r518side_effect_free(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r518smallest_ancestor_from_type_set_buffer(void);
/*OLD_MANIFEST_ARRAY*/T0* r518resolve_in(T0* a1);
/*OLD_MANIFEST_ARRAY*/T0* r518to_instruction(T518* C);
/*CALL_PREFIX_NOT*/T0* r487declaration_type(T487* C);
/*CALL_PREFIX_NOT*/T0* r487adapt_for(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487resolve_in(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487eiffel_parser(void);
extern T0*oBC345use_current_stack;
extern int fBC345use_current_stack;
/*CALL_PREFIX_NOT*/T0* r487use_current_stack(void);
/*CALL_PREFIX_NOT*/T0* r487collect(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487specialize_in(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487written_declaration_type_mark(void);
/*CALL_PREFIX_NOT*/T0* r487simplify(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487arguments(void);
/*CALL_PREFIX_NOT*/void r487pretty_target(T487* C,T2 a1);
/*CALL_PREFIX_NOT*/void r487safety_check(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487to_expression(T487* C);
/*CALL_PREFIX_NOT*/T0* r487specialize_thru(T487* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/T0* r487manifest_expression(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487feature_accumulator(void);
/*CALL_PREFIX_NOT*/T0* r487specialize_and_check(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T6 r487simplify_limit_reached(T487* C);
/*CALL_PREFIX_NOT*/void r487inline_dynamic_dispatch_(T487* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r487to_instruction(T487* C);
/*CALL_PREFIX_NOT*/T0* r487current_or_twin_init(T487* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r487standard_check_export_and_obsolete_calls(T487* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_NOT*/void r487make(T487* C,T338 a1,T0* a2);
/*CALL_PREFIX_NOT*/T0* r487echo(void);
/*CALL_PREFIX_NOT*/void r487type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/void r487non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_NOT*/T6 r487use_current(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487static_simplify(T487* C);
/*CALL_PREFIX_NOT*/T0* r487extra_local_expanded(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/void r487function_and_argument_count_check(T487* C,T0* a1,T0* a2);
/*CALL_PREFIX_NOT*/void r487pretty(T487* C,T2 a1);
/*CALL_PREFIX_NOT*/T6 r487side_effect_free(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487non_void_no_dispatch_type(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487inline_with(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T0* r487twin(T487* C);
/*CALL_PREFIX_NOT*/void r487bracketed_pretty(T487* C,T2 a1);
/*CALL_PREFIX_NOT*/void r487accept(T487* C,T0* a1);
/*CALL_PREFIX_NOT*/T338 r487start_position(T487* C);
/*CALL_PREFIX_NOT*/T6 r487is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/T401*create401make(T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/T0* r401specialize_and_check(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401to_expression(T401* C);
/*ASSIGNMENT_TEST*/void r401make(T401* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r401pretty(T401* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r401simplify(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401static_simplify(T401* C);
/*ASSIGNMENT_TEST*/T0* r401specialize_in(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401inline_dynamic_dispatch_(T401* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/void r401safety_check(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T6 r401static_left_type_mark(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401specialize_thru(T401* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_TEST*/void r401with_writable(T401* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T6 r401is_stored_in_some_local_variable(void);
/*ASSIGNMENT_TEST*/void r401accept(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/T0* r401adapt_for(T401* C,T0* a1);
extern T0*oBC401declaration_type;
extern int fBC401declaration_type;
/*ASSIGNMENT_TEST*/T0* r401declaration_type(void);
/*ASSIGNMENT_TEST*/T0* r401collect(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401pretty_target(T401* C,T2 a1);
/*ASSIGNMENT_TEST*/T338 r401start_position(T401* C);
/*ASSIGNMENT_TEST*/T0* r401twin(T401* C);
/*ASSIGNMENT_TEST*/T0* r401written_declaration_type_mark(void);
/*ASSIGNMENT_TEST*/T6 r401use_current(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401bracketed_pretty(T401* C,T2 a1);
/*ASSIGNMENT_TEST*/T0* r401non_void_no_dispatch_type(T0* a1);
/*ASSIGNMENT_TEST*/T6 r401side_effect_free(T401* C,T0* a1);
/*ASSIGNMENT_TEST*/void r401with_type_mark(T401* C,T0* a1,T0* a2);
/*ASSIGNMENT_TEST*/T0* r401resolve_in(T0* a1);
/*ASSIGNMENT_TEST*/T0* r401to_instruction(T401* C);
/*OPEN_OPERAND*/T0* r474to_expression(T474* C);
/*OPEN_OPERAND*/void r474question_mark(T474* C,T338 a1);
/*OPEN_OPERAND*/void r474pretty(T474* C,T2 a1);
/*OPEN_OPERAND*/T0* r474static_simplify(T474* C);
/*OPEN_OPERAND*/T0* r474specialize_in(T474* C,T0* a1);
/*OPEN_OPERAND*/void r474inline_dynamic_dispatch_(T474* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/void r474type_holder(T474* C,T338 a1,T0* a2);
/*OPEN_OPERAND*/T0* r474specialize_thru(T474* C,T0* a1,T0* a2,T0* a3);
/*OPEN_OPERAND*/void r474update_resolved_memory(T474* C,T0* a1,T0* a2);
/*OPEN_OPERAND*/T6 r474is_stored_in_some_local_variable(void);
/*OPEN_OPERAND*/void r474accept(T474* C,T0* a1);
/*OPEN_OPERAND*/T0* r474declaration_type(T474* C);
/*OPEN_OPERAND*/void r474pretty_target(T474* C,T2 a1);
/*OPEN_OPERAND*/T0* r474twin(T474* C);
/*OPEN_OPERAND*/T0* r474written_declaration_type_mark(void);
/*OPEN_OPERAND*/T6 r474use_current(T0* a1);
/*OPEN_OPERAND*/void r474bracketed_pretty(T474* C,T2 a1);
/*OPEN_OPERAND*/T0* r474non_void_no_dispatch_type(T0* a1);
/*OPEN_OPERAND*/T6 r474side_effect_free(T0* a1);
/*OPEN_OPERAND*/T0* r474resolve_in(T474* C,T0* a1);
/*OPEN_OPERAND*/T0* r474to_instruction(T474* C);
/*OPEN_OPERAND*/T0* r474current_or_twin_init(T474* C,T0* a1);
/*INTEGER_CONSTANT*/T371*create371make(T11 a1,T338 a2);
/*INTEGER_CONSTANT*/T371*create371with(T11 a1,T338 a2,T0* a3);
/*INTEGER_CONSTANT*/void r371hexadecimal(T371* C,T338 a1,T0* a2,T1 a3,T6 a4,T11 a5);
/*INTEGER_CONSTANT*/T0* r371to_expression(T371* C);
/*INTEGER_CONSTANT*/void r371make(T371* C,T11 a1,T338 a2);
/*INTEGER_CONSTANT*/T0* r371to_real_constant(T371* C);
/*INTEGER_CONSTANT*/void r371pretty(T371* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r371simplify(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T6 r371extra_bracket_flag(T371* C);
/*INTEGER_CONSTANT*/void r371set_value(T371* C,T11 a1);
/*INTEGER_CONSTANT*/T0* r371static_simplify(T371* C);
/*INTEGER_CONSTANT*/void r371inline_dynamic_dispatch_(T371* C,T0* a1,T0* a2);
/*INTEGER_CONSTANT*/void r371special(T371* C,T338 a1,T0* a2,T0* a3,T11 a4);
/*INTEGER_CONSTANT*/T6 r371is_stored_in_some_local_variable(void);
/*INTEGER_CONSTANT*/void r371accept(T371* C,T0* a1);
/*INTEGER_CONSTANT*/void r371with(T371* C,T11 a1,T338 a2,T0* a3);
/*INTEGER_CONSTANT*/T0* r371result_type(T371* C);
/*INTEGER_CONSTANT*/T0* r371declaration_type(T371* C);
/*INTEGER_CONSTANT*/T0* r371collect(T371* C,T0* a1);
/*INTEGER_CONSTANT*/void r371pretty_target(T371* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r371twin(T371* C);
/*INTEGER_CONSTANT*/T0* r371written_declaration_type_mark(void);
/*INTEGER_CONSTANT*/T6 r371use_current(T0* a1);
/*INTEGER_CONSTANT*/void r371bracketed_pretty(T371* C,T2 a1);
/*INTEGER_CONSTANT*/T0* r371non_void_no_dispatch_type(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r371to_string(T371* C);
/*INTEGER_CONSTANT*/T6 r371side_effect_free(T0* a1);
/*INTEGER_CONSTANT*/void r371append_in(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r371resolve_in(T371* C,T0* a1);
/*INTEGER_CONSTANT*/T0* r371to_instruction(T371* C);
/*INTEGER_CONSTANT*/void r371_P_372_pretty_target(T371* C,T2 a1);
/*REAL_CONSTANT*/T0* r475to_expression(T475* C);
/*REAL_CONSTANT*/void r475make(T475* C,T338 a1,T0* a2,T0* a3);
/*REAL_CONSTANT*/void r475pretty(T475* C,T2 a1);
/*REAL_CONSTANT*/T0* r475simplify(T475* C,T0* a1);
/*REAL_CONSTANT*/T0* r475static_simplify(T475* C);
/*REAL_CONSTANT*/void r475inline_dynamic_dispatch_(T475* C,T0* a1,T0* a2);
/*REAL_CONSTANT*/T0* r475normalized_view(T475* C);
/*REAL_CONSTANT*/T6 r475is_stored_in_some_local_variable(void);
/*REAL_CONSTANT*/void r475accept(T475* C,T0* a1);
/*REAL_CONSTANT*/T0* r475declaration_type(T475* C);
/*REAL_CONSTANT*/T0* r475collect(T475* C,T0* a1);
/*REAL_CONSTANT*/void r475pretty_target(T475* C,T2 a1);
/*REAL_CONSTANT*/T0* r475twin(T475* C);
/*REAL_CONSTANT*/T0* r475written_declaration_type_mark(void);
/*REAL_CONSTANT*/T6 r475use_current(T0* a1);
/*REAL_CONSTANT*/void r475bracketed_pretty(T475* C,T2 a1);
/*REAL_CONSTANT*/T0* r475non_void_no_dispatch_type(T475* C,T0* a1);
/*REAL_CONSTANT*/T6 r475side_effect_free(T0* a1);
/*REAL_CONSTANT*/T0* r475resolve_in(T475* C,T0* a1);
/*REAL_CONSTANT*/T0* r475to_instruction(T475* C);
/*MANIFEST_GENERIC*/T6 r476use_current_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r476declaration_type(T476* C);
/*MANIFEST_GENERIC*/T0* r476adapt_for(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476resolve_in(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476optional_arguments_specialize_and_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476collect(T476* C,T0* a1);
extern T0*oBC32manifest_make_name;
extern int fBC32manifest_make_name;
/*MANIFEST_GENERIC*/T0* r476manifest_make_name(void);
/*MANIFEST_GENERIC*/T6 r476is_equal(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476specialize_in(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/T0* r476written_declaration_type_mark(void);
/*MANIFEST_GENERIC*/T0* r476simplify(T476* C,T0* a1);
extern T0*oBC32manifest_semicolon_check_name;
extern int fBC32manifest_semicolon_check_name;
/*MANIFEST_GENERIC*/T0* r476manifest_semicolon_check_name(void);
/*MANIFEST_GENERIC*/void r476pretty_target(T476* C,T2 a1);
/*MANIFEST_GENERIC*/void r476safety_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/void r476specialize_and_check_from_old_manifest_array(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476to_expression(T476* C);
/*MANIFEST_GENERIC*/T0* r476specialize_thru(T476* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_GENERIC*/T0* r476specialize_and_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/void r476inline_dynamic_dispatch_(T476* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r476to_instruction(T476* C);
/*MANIFEST_GENERIC*/void r476make(T476* C,T338 a1,T0* a2,T0* a3,T0* a4,T2 a5,T338 a6);
/*MANIFEST_GENERIC*/T0* r476calloc_name(void);
/*MANIFEST_GENERIC*/T2 r476hash_code(T476* C);
/*MANIFEST_GENERIC*/T0* r476simplify_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T6 r476use_current(T476* C,T0* a1);
/*MANIFEST_GENERIC*/void r476init(T476* C,T0* a1,T0* a2);
/*MANIFEST_GENERIC*/T0* r476static_simplify(T476* C);
/*MANIFEST_GENERIC*/T0* r476specialize_in_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r476pretty(T476* C,T2 a1);
extern T0*oBC32manifest_put_name;
extern int fBC32manifest_put_name;
/*MANIFEST_GENERIC*/T0* r476manifest_put_name(void);
/*MANIFEST_GENERIC*/T6 r476side_effect_free(T0* a1);
/*MANIFEST_GENERIC*/T0* r476specialize_thru_of(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/T0* r476non_void_no_dispatch_type(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476twin(T476* C);
/*MANIFEST_GENERIC*/T0* r476specialize_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*MANIFEST_GENERIC*/T0* r476item_list_specialize_and_check(T476* C,T0* a1);
/*MANIFEST_GENERIC*/T0* r476adapt_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r476safety_check_of(T0* a1,T0* a2);
/*MANIFEST_GENERIC*/void r476accept(T476* C,T0* a1);
extern T0*oBC32put_name;
extern int fBC32put_name;
/*MANIFEST_GENERIC*/T0* r476put_name(void);
/*MANIFEST_GENERIC*/T6 r476is_stored_in_some_local_variable(void);
/*EFFECTIVE_ARG_LIST*/T339*create339make_1(T0* a1);
/*EFFECTIVE_ARG_LIST*/T339*create339make_2(T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_and_check(T339* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EFFECTIVE_ARG_LIST*/T0* r339to_fake_tuple(T339* C);
/*EFFECTIVE_ARG_LIST*/void r339pretty(T339* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r339unused_expression_inline(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T0* r339simplify(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r339replace_item(T339* C,T2 a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339put(T339* C,T0* a1,T2 a2);
/*EFFECTIVE_ARG_LIST*/void r339static_simplify(T339* C);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_in(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339expression(T339* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r339safety_check(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_and_check_on_expressions(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r339add_last(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_and_check_basic(T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC339collecting_formal_sub_type;
extern int fBC339collecting_formal_sub_type;
/*EFFECTIVE_ARG_LIST*/T0* r339collecting_formal_sub_type(void);
/*EFFECTIVE_ARG_LIST*/T0* r339specialize_thru(T339* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/T6 r339is_static(T339* C);
/*EFFECTIVE_ARG_LIST*/void r339accept(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339adapt_for(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339create_inline(T339* C);
/*EFFECTIVE_ARG_LIST*/T0* r339item(T339* C,T2 a1);
/*EFFECTIVE_ARG_LIST*/void r339make_n(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339unused_expression_in(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339collect(T339* C,T0* a1,T0* a2,T0* a3);
/*EFFECTIVE_ARG_LIST*/void r339simple_collect(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T338 r339start_position(T339* C);
/*EFFECTIVE_ARG_LIST*/T0* r339twin(T339* C);
/*EFFECTIVE_ARG_LIST*/T6 r339use_current(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T6 r339side_effect_free(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/T0* r339inline_dynamic_dispatch(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/void r339make_1(T339* C,T0* a1);
/*EFFECTIVE_ARG_LIST*/void r339make_2(T339* C,T0* a1,T0* a2);
/*EFFECTIVE_ARG_LIST*/T2 r339count(T339* C);
extern T0*oBC339collecting_formal;
extern int fBC339collecting_formal;
/*EFFECTIVE_ARG_LIST*/T0* r339collecting_formal(void);
/*FUNCTION_CALL_0*/T0* r348declaration_type(T348* C);
/*FUNCTION_CALL_0*/T0* r348adapt_for(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348resolve_in(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348use_current_stack(void);
/*FUNCTION_CALL_0*/T0* r348collect(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348specialize_in(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348written_declaration_type_mark(void);
/*FUNCTION_CALL_0*/T0* r348simplify(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348arguments(void);
/*FUNCTION_CALL_0*/void r348pretty_target(T348* C,T2 a1);
/*FUNCTION_CALL_0*/void r348safety_check(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348to_expression(T348* C);
/*FUNCTION_CALL_0*/T0* r348specialize_thru(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T0* r348manifest_expression(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348feature_accumulator(void);
/*FUNCTION_CALL_0*/T0* r348specialize_and_check(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T6 r348simplify_limit_reached(T348* C);
/*FUNCTION_CALL_0*/void r348inline_dynamic_dispatch_(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r348to_instruction(T348* C);
/*FUNCTION_CALL_0*/T0* r348current_or_twin_init(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r348standard_check_export_and_obsolete_calls(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/void r348make(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/T0* r348echo(void);
/*FUNCTION_CALL_0*/void r348type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/void r348non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_0*/T6 r348use_current(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348static_simplify(T348* C);
/*FUNCTION_CALL_0*/T0* r348extra_local_expanded(T348* C,T0* a1);
/*FUNCTION_CALL_0*/void r348function_and_argument_count_check(T348* C,T0* a1,T0* a2);
/*FUNCTION_CALL_0*/void r348pretty(T348* C,T2 a1);
/*FUNCTION_CALL_0*/T6 r348side_effect_free(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348non_void_no_dispatch_type(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348inline_with(T348* C,T0* a1);
/*FUNCTION_CALL_0*/T0* r348twin(T348* C);
/*FUNCTION_CALL_0*/void r348bracketed_pretty(T348* C,T2 a1);
/*FUNCTION_CALL_0*/void r348accept(T348* C,T0* a1);
/*FUNCTION_CALL_0*/void r348make_specialized(T348* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_0*/T338 r348start_position(T348* C);
/*FUNCTION_CALL_0*/T6 r348is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T6 r351is_balanced_operator(T0* a1);
/*FUNCTION_CALL_1*/T0* r351declaration_type(T351* C);
/*FUNCTION_CALL_1*/T0* r351adapt_for(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351resolve_in(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351use_current_stack(void);
/*FUNCTION_CALL_1*/T0* r351collect(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351specialize_in(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351written_declaration_type_mark(void);
/*FUNCTION_CALL_1*/T0* r351simplify(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351pretty_target(T351* C,T2 a1);
/*FUNCTION_CALL_1*/void r351safety_check(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351to_expression(T351* C);
/*FUNCTION_CALL_1*/T0* r351specialize_thru(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r351feature_accumulator(void);
/*FUNCTION_CALL_1*/T0* r351specialize_and_check(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351inline_dynamic_dispatch_(T351* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r351to_instruction(T351* C);
/*FUNCTION_CALL_1*/T0* r351current_or_twin_init(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r351standard_check_export_and_obsolete_calls(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/void r351make(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r351arg1(T351* C);
/*FUNCTION_CALL_1*/void r351type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/void r351non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T6 r351use_current(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351init(T351* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_1*/T0* r351static_simplify(T351* C);
/*FUNCTION_CALL_1*/T0* r351extra_local_expanded(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351function_and_argument_count_check(T351* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/void r351pretty(T351* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r351side_effect_free(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351non_void_no_dispatch_type(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351run_feature_for(T351* C,T0* a1);
/*FUNCTION_CALL_1*/T0* r351inline_with(T351* C,T0* a1,T0* a2);
/*FUNCTION_CALL_1*/T0* r351twin(T351* C);
/*FUNCTION_CALL_1*/void r351bracketed_pretty(T351* C,T2 a1);
/*FUNCTION_CALL_1*/T6 r351is_question_mark_open_operand(T0* a1);
/*FUNCTION_CALL_1*/void r351accept(T351* C,T0* a1);
/*FUNCTION_CALL_1*/void r351make_specialized(T351* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_1*/T338 r351start_position(T351* C);
/*FUNCTION_CALL_1*/T6 r351is_stored_in_some_local_variable(void);
/*FUNCTION_CALL_1*/T0* r351_P_350_declaration_type(T351* C);
/*FUNCTION_CALL_N*/T0* r353declaration_type(T353* C);
/*FUNCTION_CALL_N*/T0* r353adapt_for(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353resolve_in(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353use_current_stack(void);
/*FUNCTION_CALL_N*/T0* r353collect(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353specialize_in(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353written_declaration_type_mark(void);
/*FUNCTION_CALL_N*/T0* r353simplify(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353pretty_target(T353* C,T2 a1);
/*FUNCTION_CALL_N*/void r353safety_check(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353to_expression(T353* C);
/*FUNCTION_CALL_N*/T0* r353specialize_thru(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r353feature_accumulator(void);
/*FUNCTION_CALL_N*/T0* r353specialize_and_check(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353inline_dynamic_dispatch_(T353* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/T0* r353to_instruction(T353* C);
/*FUNCTION_CALL_N*/void r353standard_check_export_and_obsolete_calls(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r353make(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/void r353type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/void r353non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*FUNCTION_CALL_N*/T6 r353use_current(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353init(T353* C,T0* a1,T0* a2,T0* a3);
/*FUNCTION_CALL_N*/T0* r353static_simplify(T353* C);
/*FUNCTION_CALL_N*/T0* r353extra_local_expanded(T353* C,T0* a1);
/*FUNCTION_CALL_N*/void r353function_and_argument_count_check(T353* C,T0* a1,T0* a2);
/*FUNCTION_CALL_N*/void r353pretty(T353* C,T2 a1);
/*FUNCTION_CALL_N*/T6 r353side_effect_free(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353non_void_no_dispatch_type(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353run_feature_for(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T0* r353twin(T353* C);
/*FUNCTION_CALL_N*/void r353bracketed_pretty(T353* C,T2 a1);
/*FUNCTION_CALL_N*/T2 r353arg_count(T353* C);
/*FUNCTION_CALL_N*/void r353accept(T353* C,T0* a1);
/*FUNCTION_CALL_N*/T338 r353start_position(T353* C);
/*FUNCTION_CALL_N*/T6 r353is_stored_in_some_local_variable(void);
/*PROCEDURE_CALL_0*/T0* r342specialize_and_check(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342to_expression(T342* C);
/*PROCEDURE_CALL_0*/void r342make(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r342pretty(T342* C,T2 a1);
/*PROCEDURE_CALL_0*/T0* r342simplify(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/void r342standard_check_export_and_obsolete_calls(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/T0* r342specialize_in(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342inline_dynamic_dispatch_(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/void r342safety_check(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342run_feature_for(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342specialize_thru(T342* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_0*/void r342accept(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342simplify_arguments(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342adapt_for(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342collect(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T338 r342start_position(T342* C);
/*PROCEDURE_CALL_0*/T0* r342use_current_stack(void);
/*PROCEDURE_CALL_0*/T0* r342twin(T342* C);
/*PROCEDURE_CALL_0*/T6 r342use_current(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_0*/T6 r342side_effect_free(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/T0* r342arguments(void);
/*PROCEDURE_CALL_0*/T0* r342inline_dynamic_dispatch(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r342inline_with(T342* C,T0* a1);
/*PROCEDURE_CALL_0*/void r342collect_create(T342* C,T0* a1,T0* a2,T338 a3);
/*PROCEDURE_CALL_0*/void r342procedure_and_argument_count_check(T342* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_0*/T0* r342to_instruction(T342* C);
/*PROCEDURE_CALL_1*/T0* r346specialize_and_check(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346to_expression(T346* C);
/*PROCEDURE_CALL_1*/void r346make(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r346pretty(T346* C,T2 a1);
/*PROCEDURE_CALL_1*/T0* r346simplify(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/void r346standard_check_export_and_obsolete_calls(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r346specialize_in(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346inline_dynamic_dispatch_(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r346arg1(T346* C);
/*PROCEDURE_CALL_1*/void r346safety_check(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346run_feature_for(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346init(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/T0* r346specialize_thru(T346* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_1*/void r346accept(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346simplify_arguments(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346adapt_for(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346collect(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T338 r346start_position(T346* C);
/*PROCEDURE_CALL_1*/T0* r346use_current_stack(void);
/*PROCEDURE_CALL_1*/T0* r346twin(T346* C);
/*PROCEDURE_CALL_1*/T6 r346use_current(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/void r346type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_1*/T6 r346side_effect_free(T346* C,T0* a1);
/*PROCEDURE_CALL_1*/T0* r346inline_dynamic_dispatch(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r346inline_with(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/void r346collect_create(T346* C,T0* a1,T0* a2,T338 a3);
/*PROCEDURE_CALL_1*/void r346procedure_and_argument_count_check(T346* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_1*/T0* r346to_instruction(T346* C);
/*PROCEDURE_CALL_N*/T0* r347specialize_and_check(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347to_expression(T347* C);
/*PROCEDURE_CALL_N*/T2 r347arg_count(T347* C);
/*PROCEDURE_CALL_N*/void r347make(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r347pretty(T347* C,T2 a1);
/*PROCEDURE_CALL_N*/T0* r347simplify(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/void r347standard_check_export_and_obsolete_calls(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r347specialize_in(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347inline_dynamic_dispatch_(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r347safety_check(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347run_feature_for(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347init(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r347specialize_thru(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/void r347accept(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347inline_2(T347* C,T0* a1,T0* a2,T0* a3);
/*PROCEDURE_CALL_N*/T0* r347simplify_arguments(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347adapt_for(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347collect(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T338 r347start_position(T347* C);
/*PROCEDURE_CALL_N*/T0* r347use_current_stack(void);
/*PROCEDURE_CALL_N*/T0* r347twin(T347* C);
/*PROCEDURE_CALL_N*/T6 r347use_current(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/void r347type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*PROCEDURE_CALL_N*/T6 r347side_effect_free(T347* C,T0* a1);
/*PROCEDURE_CALL_N*/T0* r347inline_dynamic_dispatch(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r347inline_with(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/void r347collect_create(T347* C,T0* a1,T0* a2,T338 a3);
/*PROCEDURE_CALL_N*/void r347procedure_and_argument_count_check(T347* C,T0* a1,T0* a2);
/*PROCEDURE_CALL_N*/T0* r347to_instruction(T347* C);
/*CALL_PREFIX_PLUS*/T0* r489declaration_type(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489adapt_for(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489resolve_in(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489eiffel_parser(void);
/*CALL_PREFIX_PLUS*/T0* r489use_current_stack(void);
/*CALL_PREFIX_PLUS*/T0* r489collect(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489specialize_in(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489written_declaration_type_mark(void);
/*CALL_PREFIX_PLUS*/T0* r489simplify(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489arguments(void);
/*CALL_PREFIX_PLUS*/void r489pretty_target(T489* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r489safety_check(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489to_expression(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489specialize_thru(T489* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/T0* r489manifest_expression(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489feature_accumulator(void);
/*CALL_PREFIX_PLUS*/T0* r489specialize_and_check(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T6 r489simplify_limit_reached(T489* C);
/*CALL_PREFIX_PLUS*/void r489inline_dynamic_dispatch_(T489* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r489to_instruction(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489current_or_twin_init(T489* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r489standard_check_export_and_obsolete_calls(T489* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_PLUS*/void r489make(T489* C,T338 a1,T0* a2);
/*CALL_PREFIX_PLUS*/T0* r489echo(void);
/*CALL_PREFIX_PLUS*/void r489type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/void r489non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_PLUS*/T6 r489use_current(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489static_simplify(T489* C);
/*CALL_PREFIX_PLUS*/T0* r489extra_local_expanded(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/void r489function_and_argument_count_check(T489* C,T0* a1,T0* a2);
/*CALL_PREFIX_PLUS*/void r489pretty(T489* C,T2 a1);
/*CALL_PREFIX_PLUS*/T6 r489side_effect_free(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489non_void_no_dispatch_type(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489inline_with(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T0* r489twin(T489* C);
/*CALL_PREFIX_PLUS*/void r489bracketed_pretty(T489* C,T2 a1);
/*CALL_PREFIX_PLUS*/void r489accept(T489* C,T0* a1);
/*CALL_PREFIX_PLUS*/T338 r489start_position(T489* C);
/*CALL_PREFIX_PLUS*/T6 r489is_stored_in_some_local_variable(void);
/*CALL_PREFIX_MINUS*/T0* r490declaration_type(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490adapt_for(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490resolve_in(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490eiffel_parser(void);
/*CALL_PREFIX_MINUS*/T0* r490use_current_stack(void);
/*CALL_PREFIX_MINUS*/T0* r490collect(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490specialize_in(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490written_declaration_type_mark(void);
/*CALL_PREFIX_MINUS*/T0* r490simplify(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490arguments(void);
/*CALL_PREFIX_MINUS*/void r490pretty_target(T490* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r490safety_check(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490to_expression(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490specialize_thru(T490* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/T0* r490manifest_expression(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490feature_accumulator(void);
/*CALL_PREFIX_MINUS*/T0* r490specialize_and_check(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T6 r490simplify_limit_reached(T490* C);
/*CALL_PREFIX_MINUS*/void r490inline_dynamic_dispatch_(T490* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r490to_instruction(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490current_or_twin_init(T490* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r490standard_check_export_and_obsolete_calls(T490* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_MINUS*/void r490make(T490* C,T338 a1,T0* a2);
/*CALL_PREFIX_MINUS*/T0* r490echo(void);
/*CALL_PREFIX_MINUS*/void r490type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/void r490non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_MINUS*/T6 r490use_current(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490static_simplify(T490* C);
/*CALL_PREFIX_MINUS*/T0* r490extra_local_expanded(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/void r490function_and_argument_count_check(T490* C,T0* a1,T0* a2);
/*CALL_PREFIX_MINUS*/void r490pretty(T490* C,T2 a1);
/*CALL_PREFIX_MINUS*/T6 r490side_effect_free(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490non_void_no_dispatch_type(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490inline_with(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T0* r490twin(T490* C);
/*CALL_PREFIX_MINUS*/void r490bracketed_pretty(T490* C,T2 a1);
/*CALL_PREFIX_MINUS*/void r490accept(T490* C,T0* a1);
/*CALL_PREFIX_MINUS*/T338 r490start_position(T490* C);
/*CALL_PREFIX_MINUS*/T6 r490is_stored_in_some_local_variable(void);
/*CALL_PREFIX_FREEOP*/T0* r491declaration_type(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491adapt_for(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491resolve_in(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491use_current_stack(void);
/*CALL_PREFIX_FREEOP*/T0* r491collect(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491specialize_in(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491written_declaration_type_mark(void);
/*CALL_PREFIX_FREEOP*/T0* r491simplify(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491arguments(void);
/*CALL_PREFIX_FREEOP*/void r491pretty_target(T491* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r491safety_check(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491to_expression(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491specialize_thru(T491* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/T0* r491manifest_expression(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491feature_accumulator(void);
/*CALL_PREFIX_FREEOP*/T0* r491specialize_and_check(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T6 r491simplify_limit_reached(T491* C);
/*CALL_PREFIX_FREEOP*/void r491inline_dynamic_dispatch_(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r491to_instruction(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491current_or_twin_init(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r491standard_check_export_and_obsolete_calls(T491* C,T0* a1,T0* a2,T0* a3);
/*CALL_PREFIX_FREEOP*/void r491make(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/T0* r491echo(void);
/*CALL_PREFIX_FREEOP*/void r491type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/void r491non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_PREFIX_FREEOP*/T6 r491use_current(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491static_simplify(T491* C);
/*CALL_PREFIX_FREEOP*/T0* r491extra_local_expanded(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/void r491function_and_argument_count_check(T491* C,T0* a1,T0* a2);
/*CALL_PREFIX_FREEOP*/void r491pretty(T491* C,T2 a1);
/*CALL_PREFIX_FREEOP*/T6 r491side_effect_free(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491non_void_no_dispatch_type(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491inline_with(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T0* r491twin(T491* C);
/*CALL_PREFIX_FREEOP*/void r491bracketed_pretty(T491* C,T2 a1);
/*CALL_PREFIX_FREEOP*/void r491accept(T491* C,T0* a1);
/*CALL_PREFIX_FREEOP*/T338 r491start_position(T491* C);
/*CALL_PREFIX_FREEOP*/T6 r491is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/T0* r480specialize_and_check(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480to_expression(T480* C);
/*MANIFEST_TUPLE*/void r480make(T480* C,T338 a1,T0* a2);
/*MANIFEST_TUPLE*/void r480pretty(T480* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r480simplify(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480create_expression_for(T480* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r480static_simplify(T480* C);
/*MANIFEST_TUPLE*/T0* r480specialize_in(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480safety_check(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480init(T480* C,T0* a1,T0* a2);
/*MANIFEST_TUPLE*/T0* r480specialize_thru(T480* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_TUPLE*/T6 r480is_stored_in_some_local_variable(void);
/*MANIFEST_TUPLE*/void r480accept(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480adapt_for(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480pretty_target(T480* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r480twin(T480* C);
/*MANIFEST_TUPLE*/T0* r480written_declaration_type_mark(void);
/*MANIFEST_TUPLE*/T6 r480use_current(T480* C,T0* a1);
/*MANIFEST_TUPLE*/void r480bracketed_pretty(T480* C,T2 a1);
/*MANIFEST_TUPLE*/T0* r480non_void_no_dispatch_type(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T6 r480side_effect_free(T0* a1);
/*MANIFEST_TUPLE*/T0* r480resolve_in(T480* C,T0* a1);
/*MANIFEST_TUPLE*/T0* r480to_instruction(T480* C);
/*MANIFEST_TUPLE*/T0* r480current_or_twin_init(T480* C,T0* a1,T0* a2);
/*E_TRUE*/T385*create385make(T338 a1);
/*E_TRUE*/T0* r385to_expression(T385* C);
/*E_TRUE*/void r385make(T385* C,T338 a1);
/*E_TRUE*/void r385pretty(T2 a1);
/*E_TRUE*/T0* r385simplify(T385* C,T0* a1);
/*E_TRUE*/T0* r385static_simplify(T385* C);
/*E_TRUE*/void r385inline_dynamic_dispatch_(T385* C,T0* a1,T0* a2);
/*E_TRUE*/T6 r385is_stored_in_some_local_variable(void);
/*E_TRUE*/void r385accept(T385* C,T0* a1);
extern T0*oBC386declaration_type;
extern int fBC386declaration_type;
/*E_TRUE*/T0* r385declaration_type(void);
/*E_TRUE*/T0* r385collect(T0* a1);
/*E_TRUE*/void r385pretty_target(T2 a1);
/*E_TRUE*/T0* r385twin(T385* C);
/*E_TRUE*/T0* r385written_declaration_type_mark(void);
/*E_TRUE*/T6 r385use_current(T0* a1);
/*E_TRUE*/void r385bracketed_pretty(T2 a1);
/*E_TRUE*/T0* r385non_void_no_dispatch_type(T0* a1);
/*E_TRUE*/T6 r385side_effect_free(T0* a1);
/*E_TRUE*/T0* r385resolve_in(T0* a1);
/*E_TRUE*/T0* r385to_instruction(T385* C);
/*E_FALSE*/T456*create456make(T338 a1);
/*E_FALSE*/T0* r456to_expression(T456* C);
/*E_FALSE*/void r456make(T456* C,T338 a1);
/*E_FALSE*/void r456pretty(T2 a1);
/*E_FALSE*/T0* r456simplify(T456* C,T0* a1);
/*E_FALSE*/T0* r456static_simplify(T456* C);
/*E_FALSE*/void r456inline_dynamic_dispatch_(T456* C,T0* a1,T0* a2);
/*E_FALSE*/T6 r456is_stored_in_some_local_variable(void);
/*E_FALSE*/void r456accept(T456* C,T0* a1);
/*E_FALSE*/T0* r456declaration_type(void);
/*E_FALSE*/T0* r456collect(T0* a1);
/*E_FALSE*/void r456pretty_target(T2 a1);
/*E_FALSE*/T0* r456twin(T456* C);
/*E_FALSE*/T0* r456written_declaration_type_mark(void);
/*E_FALSE*/T6 r456use_current(T0* a1);
/*E_FALSE*/void r456bracketed_pretty(T2 a1);
/*E_FALSE*/T0* r456non_void_no_dispatch_type(T0* a1);
/*E_FALSE*/T6 r456side_effect_free(T0* a1);
/*E_FALSE*/T0* r456resolve_in(T0* a1);
/*E_FALSE*/T0* r456to_instruction(T456* C);
/*CHARACTER_CONSTANT*/T462*create462with(T338 a1,T3 a2);
/*CHARACTER_CONSTANT*/T0* r462to_expression(T462* C);
/*CHARACTER_CONSTANT*/void r462make(T462* C,T338 a1,T3 a2,T0* a3);
/*CHARACTER_CONSTANT*/void r462character_coding(T3 a1,T0* a2);
/*CHARACTER_CONSTANT*/void r462pretty(T462* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r462simplify(T462* C,T0* a1);
/*CHARACTER_CONSTANT*/T0* r462static_simplify(T462* C);
/*CHARACTER_CONSTANT*/void r462inline_dynamic_dispatch_(T462* C,T0* a1,T0* a2);
/*CHARACTER_CONSTANT*/T6 r462is_stored_in_some_local_variable(void);
/*CHARACTER_CONSTANT*/void r462accept(T462* C,T0* a1);
/*CHARACTER_CONSTANT*/void r462with(T462* C,T338 a1,T3 a2);
extern T0*oBC462declaration_type;
extern int fBC462declaration_type;
/*CHARACTER_CONSTANT*/T0* r462declaration_type(void);
/*CHARACTER_CONSTANT*/T0* r462collect(T0* a1);
/*CHARACTER_CONSTANT*/void r462pretty_target(T462* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r462twin(T462* C);
/*CHARACTER_CONSTANT*/T0* r462written_declaration_type_mark(void);
/*CHARACTER_CONSTANT*/T6 r462use_current(T0* a1);
/*CHARACTER_CONSTANT*/void r462bracketed_pretty(T462* C,T2 a1);
/*CHARACTER_CONSTANT*/T0* r462non_void_no_dispatch_type(T0* a1);
/*CHARACTER_CONSTANT*/T0* r462to_string(T462* C);
/*CHARACTER_CONSTANT*/T6 r462side_effect_free(T0* a1);
/*CHARACTER_CONSTANT*/T0* r462resolve_in(T0* a1);
/*CHARACTER_CONSTANT*/T0* r462to_instruction(T462* C);
/*PRECURSOR_EXPRESSION*/T0* r481specialize_and_check(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481to_expression(T481* C);
/*PRECURSOR_EXPRESSION*/void r481make(T481* C,T338 a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T0* r481simplify(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481static_simplify(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481specialize_in(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r481inline_dynamic_dispatch_(T481* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r481safety_check(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r481init(T481* C,T0* a1,T0* a2);
/*PRECURSOR_EXPRESSION*/void r481pretty_(T481* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r481specialize_thru(T481* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_EXPRESSION*/T6 r481is_stored_in_some_local_variable(void);
/*PRECURSOR_EXPRESSION*/void r481accept(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481adapt_for(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481declaration_type(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481feature_accumulator(void);
/*PRECURSOR_EXPRESSION*/T0* r481collect(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/void r481pretty_target(T481* C,T2 a1);
/*PRECURSOR_EXPRESSION*/T0* r481twin(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481written_declaration_type_mark(void);
/*PRECURSOR_EXPRESSION*/T6 r481use_current(T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481non_void_no_dispatch_type(T0* a1);
/*PRECURSOR_EXPRESSION*/T6 r481side_effect_free(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481resolve_in(T481* C,T0* a1);
/*PRECURSOR_EXPRESSION*/T0* r481to_instruction(T481* C);
/*PRECURSOR_EXPRESSION*/T0* r481current_or_twin_init(T481* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r515to_expression(T515* C);
/*FAKE_TARGET*/void r515make(T515* C,T338 a1,T0* a2);
/*FAKE_TARGET*/void r515pretty(T515* C,T2 a1);
/*FAKE_TARGET*/T0* r515static_simplify(T515* C);
/*FAKE_TARGET*/T0* r515specialize_in(T515* C,T0* a1);
/*FAKE_TARGET*/void r515inline_dynamic_dispatch_(T515* C,T0* a1,T0* a2);
/*FAKE_TARGET*/T0* r515specialize_thru(T515* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TARGET*/T6 r515is_stored_in_some_local_variable(void);
/*FAKE_TARGET*/void r515accept(T515* C,T0* a1);
/*FAKE_TARGET*/T0* r515adapt_for(T515* C,T0* a1);
/*FAKE_TARGET*/T0* r515declaration_type(T515* C);
/*FAKE_TARGET*/void r515pretty_target(T515* C,T2 a1);
/*FAKE_TARGET*/T0* r515twin(T515* C);
/*FAKE_TARGET*/T0* r515written_declaration_type_mark(void);
/*FAKE_TARGET*/T6 r515use_current(T0* a1);
/*FAKE_TARGET*/void r515bracketed_pretty(T515* C,T2 a1);
/*FAKE_TARGET*/T0* r515non_void_no_dispatch_type(T0* a1);
/*FAKE_TARGET*/T6 r515side_effect_free(T0* a1);
/*FAKE_TARGET*/T0* r515resolve_in(T515* C,T0* a1);
/*FAKE_TARGET*/T0* r515to_instruction(T515* C);
/*FAKE_TARGET*/T0* r515current_or_twin_init(T515* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r516specialize_and_check(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r516to_expression(T516* C);
/*CREATE_EXPRESSION*/void r516make(T516* C,T338 a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T0* r516created_type(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516pretty(T516* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r516simplify(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516default_user_expanded(T516* C,T338 a1,T0* a2);
/*CREATE_EXPRESSION*/T0* r516static_simplify(T516* C);
/*CREATE_EXPRESSION*/T0* r516specialize_in(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516inline_dynamic_dispatch_(T516* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/void r516safety_check(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516init(T516* C,T0* a1,T0* a2);
/*CREATE_EXPRESSION*/T0* r516extra_local_expanded(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516specialize_checks(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r516specialize_thru(T516* C,T0* a1,T0* a2,T0* a3);
/*CREATE_EXPRESSION*/T6 r516is_stored_in_some_local_variable(void);
/*CREATE_EXPRESSION*/void r516accept(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r516adapt_for(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r516declaration_type(T516* C);
/*CREATE_EXPRESSION*/T0* r516default_create_name(void);
/*CREATE_EXPRESSION*/T0* r516collect(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516pretty_target(T516* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r516any_default_create_fs(void);
/*CREATE_EXPRESSION*/T0* r516twin(T516* C);
/*CREATE_EXPRESSION*/T0* r516written_declaration_type_mark(void);
/*CREATE_EXPRESSION*/T0* r516creation_procedure(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r516use_current(T516* C,T0* a1);
/*CREATE_EXPRESSION*/void r516bracketed_pretty(T516* C,T2 a1);
/*CREATE_EXPRESSION*/T0* r516non_void_no_dispatch_type(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T6 r516side_effect_free(T0* a1);
/*CREATE_EXPRESSION*/T0* r516arguments(T516* C);
/*CREATE_EXPRESSION*/T0* r516resolve_in(T516* C,T0* a1);
/*CREATE_EXPRESSION*/T0* r516to_instruction(T516* C);
/*CREATE_EXPRESSION*/T0* r516current_or_twin_init(T516* C,T0* a1,T0* a2);
/*ARGUMENT_NAME1*/void r453make(T453* C,T338 a1,T0* a2);
/*ARGUMENT_NAME1*/T0* r453specialize_in(T453* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r453specialize_thru(T453* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME1*/T0* r453adapt_for(T453* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r453collect(T453* C,T0* a1);
/*ARGUMENT_NAME1*/T0* r453twin(T453* C);
/*ARGUMENT_NAME1*/T0* r453resolve_in(T453* C,T0* a1);
/*ARGUMENT_NAME1*/void r453name_clash_check_(T453* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/void r454make(T454* C,T0* a1,T0* a2);
/*DECLARATION_GROUP*/T0* r454specialize_in(T454* C,T0* a1);
/*DECLARATION_GROUP*/void r454append_in_local_var_list(T454* C,T0* a1);
/*DECLARATION_GROUP*/T0* r454specialize_thru(T454* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_GROUP*/void r454append_in_formal_arg_list(T454* C,T0* a1);
/*DECLARATION_GROUP*/T0* r454twin(T454* C);
/*DECLARATION_GROUP*/void r454pretty_in(T454* C,T0* a1);
/*DECLARATION_GROUP*/T2 r454count(T454* C);
/*DECLARATION_1*/void r391make(T391* C,T0* a1,T0* a2);
/*DECLARATION_1*/T0* r391specialize_in(T391* C,T0* a1);
/*DECLARATION_1*/void r391append_in_local_var_list(T391* C,T0* a1);
/*DECLARATION_1*/T0* r391specialize_thru(T391* C,T0* a1,T0* a2,T0* a3);
/*DECLARATION_1*/void r391append_in_formal_arg_list(T391* C,T0* a1);
/*DECLARATION_1*/T0* r391twin(T391* C);
/*DECLARATION_1*/void r391pretty_in(T391* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r662specialize_and_check(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r662to_expression(T662* C);
/*REQUIRE_ASSERTION*/void r662make(T662* C,T338 a1,T6 a2,T0* a3,T0* a4);
/*REQUIRE_ASSERTION*/void r662pretty(T662* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r662simplify(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r662specialize_in(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/void r662inline_dynamic_dispatch_(T662* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r662add_parent_require(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T6 r662is_always_true(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/void r662safety_check(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/void r662from_parents(T662* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/T6 r662has_item_located_at(T662* C,T338 a1);
/*REQUIRE_ASSERTION*/T0* r662specialize_thru(T662* C,T0* a1,T0* a2,T0* a3);
/*REQUIRE_ASSERTION*/void r662accept(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r662adapt_for(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r662item(T662* C,T2 a1);
/*REQUIRE_ASSERTION*/T0* r662collect(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T338 r662start_position(T662* C);
/*REQUIRE_ASSERTION*/T0* r662twin(T662* C);
/*REQUIRE_ASSERTION*/T6 r662use_current(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/void r662crash(T662* C);
/*REQUIRE_ASSERTION*/T6 r662side_effect_free(T662* C,T0* a1);
/*REQUIRE_ASSERTION*/T0* r662inline_dynamic_dispatch(T662* C,T0* a1,T0* a2);
/*REQUIRE_ASSERTION*/void r662not_yet_implemented(T662* C);
/*REQUIRE_ASSERTION*/T2 r662count(T662* C);
/*REQUIRE_ASSERTION*/T0* r662to_instruction(T662* C);
/*ASSERTION*/T0* r418specialize_and_check(T418* C,T0* a1);
/*ASSERTION*/T0* r418to_expression(T418* C);
/*ASSERTION*/void r418make(T418* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/void r418pretty(T418* C,T2 a1);
/*ASSERTION*/T0* r418static_simplify(T418* C);
/*ASSERTION*/T0* r418specialize_in(T418* C,T0* a1);
/*ASSERTION*/void r418inline_dynamic_dispatch_(T418* C,T0* a1,T0* a2);
/*ASSERTION*/T6 r418is_always_true(T418* C,T0* a1);
/*ASSERTION*/void r418safety_check(T418* C,T0* a1);
/*ASSERTION*/T0* r418specialize_thru(T418* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION*/T6 r418is_static(T418* C);
/*ASSERTION*/void r418specialize_check(T418* C,T0* a1);
/*ASSERTION*/T6 r418is_stored_in_some_local_variable(void);
/*ASSERTION*/void r418accept(T418* C,T0* a1);
/*ASSERTION*/T0* r418adapt_for(T418* C,T0* a1);
/*ASSERTION*/T0* r418collect(T418* C,T0* a1);
/*ASSERTION*/T338 r418start_position(T418* C);
/*ASSERTION*/T0* r418twin(T418* C);
/*ASSERTION*/T0* r418written_declaration_type_mark(void);
/*ASSERTION*/T6 r418use_current(T418* C,T0* a1);
/*ASSERTION*/T0* r418non_void_no_dispatch_type(T0* a1);
/*ASSERTION*/T6 r418side_effect_free(T418* C,T0* a1);
/*ASSERTION*/T0* r418resolve_in(T0* a1);
/*ASSERTION*/T0* r418to_instruction(T418* C);
/*ASSERTION*/T0* r418current_or_twin_init(T418* C,T0* a1);
/*LOCAL_NAME1*/void r388make(T388* C,T338 a1,T0* a2);
/*LOCAL_NAME1*/T0* r388specialize_in(T388* C,T0* a1);
/*LOCAL_NAME1*/void r388parsing_reference_counter_increment(T388* C);
/*LOCAL_NAME1*/void r388live_reference_counter_increment(T388* C);
/*LOCAL_NAME1*/T6 r388is_used(T388* C,T0* a1);
/*LOCAL_NAME1*/T0* r388specialize_thru(T388* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME1*/T0* r388adapt_for(T388* C,T0* a1);
/*LOCAL_NAME1*/T0* r388collect(T388* C,T0* a1);
/*LOCAL_NAME1*/T0* r388twin(T388* C);
/*LOCAL_NAME1*/void r388usage_warning_check(T388* C,T0* a1);
/*LOCAL_NAME1*/void r388name_clash_check_(T388* C,T0* a1,T0* a2);
/*LOCAL_VAR_LIST*/void r392make(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/void r392pretty(T392* C);
/*LOCAL_VAR_LIST*/T0* r392specialize_in(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r392rank_of(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/void r392add_last(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r392specialize_thru(T392* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_VAR_LIST*/void r392accept(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r392adapt_for(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/void r392name_clash_check(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r392compute_flat_list_count_by_using_list(T392* C);
/*LOCAL_VAR_LIST*/void r392collect(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T0* r392twin(T392* C);
/*LOCAL_VAR_LIST*/T0* r392type_mark(T392* C,T2 a1);
/*LOCAL_VAR_LIST*/T6 r392side_effect_free(T392* C,T0* a1);
/*LOCAL_VAR_LIST*/T2 r392count(T392* C);
/*FEATURE_NAME_LIST*/void r448fe_multiple(T0* a1,T0* a2);
/*FEATURE_NAME_LIST*/void r448all_positions_in_error_handler(T448* C);
/*FEATURE_NAME_LIST*/T0* r448internal_name(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/void r448add_last(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r448item(T448* C,T2 a1);
/*FEATURE_NAME_LIST*/void r448make_n(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r448index_of(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T0* r448root_creation_search(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T6 r448has_make(T448* C);
/*FEATURE_NAME_LIST*/void r448make_1(T448* C,T0* a1);
/*FEATURE_NAME_LIST*/T2 r448count(T448* C);
/*FEATURE_NAME_LIST*/T6 r448has(T448* C,T0* a1);
/*CHECK_COMPOUND*/T0* r517specialize_and_check(T517* C,T0* a1);
/*CHECK_COMPOUND*/T0* r517to_expression(T517* C);
/*CHECK_COMPOUND*/void r517make(T517* C,T338 a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/void r517pretty(T517* C,T2 a1);
/*CHECK_COMPOUND*/T0* r517simplify(T517* C,T0* a1);
/*CHECK_COMPOUND*/T0* r517specialize_in(T517* C,T0* a1);
/*CHECK_COMPOUND*/void r517inline_dynamic_dispatch_(T517* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/void r517safety_check(T517* C,T0* a1);
/*CHECK_COMPOUND*/T0* r517specialize_thru(T517* C,T0* a1,T0* a2,T0* a3);
/*CHECK_COMPOUND*/T6 r517must_be_generated(T517* C,T0* a1);
/*CHECK_COMPOUND*/void r517accept(T517* C,T0* a1);
/*CHECK_COMPOUND*/T0* r517adapt_for(T517* C,T0* a1);
/*CHECK_COMPOUND*/T0* r517collect(T517* C,T0* a1);
/*CHECK_COMPOUND*/T338 r517start_position(T517* C);
/*CHECK_COMPOUND*/T0* r517twin(T517* C);
/*CHECK_COMPOUND*/T6 r517use_current(T517* C,T0* a1);
/*CHECK_COMPOUND*/T6 r517side_effect_free(T0* a1);
/*CHECK_COMPOUND*/T0* r517inline_dynamic_dispatch(T517* C,T0* a1,T0* a2);
/*CHECK_COMPOUND*/T0* r517to_instruction(T517* C);
/*CHECK_COMPOUND*/T0* r517current_or_twin_init(T517* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477specialize_and_check(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477to_expression(T477* C);
/*DEBUG_COMPOUND*/void r477make(T477* C,T338 a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/void r477pretty(T477* C,T2 a1);
/*DEBUG_COMPOUND*/T0* r477simplify(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477specialize_in(T477* C,T0* a1);
/*DEBUG_COMPOUND*/void r477inline_dynamic_dispatch_(T477* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/void r477safety_check(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477specialize_thru(T477* C,T0* a1,T0* a2,T0* a3);
/*DEBUG_COMPOUND*/T6 r477must_be_generated(T477* C,T0* a1);
/*DEBUG_COMPOUND*/void r477accept(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477adapt_for(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477collect(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477twin(T477* C);
/*DEBUG_COMPOUND*/T6 r477use_current(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T6 r477side_effect_free(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477inline_dynamic_dispatch(T477* C,T0* a1,T0* a2);
/*DEBUG_COMPOUND*/T6 r477match_debug_key(T477* C,T0* a1);
/*DEBUG_COMPOUND*/T0* r477to_instruction(T477* C);
/*DEBUG_COMPOUND*/T0* r477current_or_twin_init(T477* C,T0* a1);
/*IFTHEN*/T412*create412make(T338 a1,T0* a2,T0* a3);
/*IFTHEN*/T0* r412specialize_and_check(T412* C,T0* a1);
/*IFTHEN*/T0* r412to_expression(T412* C);
/*IFTHEN*/void r412make(T412* C,T338 a1,T0* a2,T0* a3);
/*IFTHEN*/void r412pretty(T412* C,T2 a1);
/*IFTHEN*/T0* r412simplify(T412* C,T0* a1);
/*IFTHEN*/void r412specialize_check_(T412* C,T0* a1);
/*IFTHEN*/void r412pretty_end_if(T2 a1);
/*IFTHEN*/T0* r412specialize_in(T412* C,T0* a1);
/*IFTHEN*/void r412inline_dynamic_dispatch_(T412* C,T0* a1,T0* a2);
/*IFTHEN*/void r412safety_check(T412* C,T0* a1);
/*IFTHEN*/void r412init(T412* C,T0* a1,T0* a2);
/*IFTHEN*/void r412pretty_(T412* C,T2 a1,T0* a2);
/*IFTHEN*/T0* r412specialize_thru(T412* C,T0* a1,T0* a2,T0* a3);
/*IFTHEN*/void r412accept(T412* C,T0* a1);
/*IFTHEN*/T0* r412adapt_for(T412* C,T0* a1);
/*IFTHEN*/T0* r412collect(T412* C,T0* a1);
/*IFTHEN*/T0* r412twin(T412* C);
/*IFTHEN*/T6 r412use_current(T412* C,T0* a1);
/*IFTHEN*/T6 r412side_effect_free(T0* a1);
/*IFTHEN*/T0* r412inline_dynamic_dispatch(T412* C,T0* a1,T0* a2);
/*IFTHEN*/T0* r412to_instruction(T412* C);
/*IFTHEN*/T0* r412current_or_twin_init(T412* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r398specialize_and_check(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398to_expression(T398* C);
/*IFTHENELSE*/void r398pretty(T398* C,T2 a1);
/*IFTHENELSE*/T0* r398simplify(T398* C,T0* a1);
/*IFTHENELSE*/void r398inline_dd(T398* C,T0* a1,T0* a2,T0* a3,T2 a4);
/*IFTHENELSE*/void r398specialize_check_(T398* C,T0* a1);
/*IFTHENELSE*/void r398pretty_end_if(T2 a1);
/*IFTHENELSE*/T0* r398specialize_in(T398* C,T0* a1);
/*IFTHENELSE*/void r398inline_dynamic_dispatch_(T398* C,T0* a1,T0* a2);
/*IFTHENELSE*/void r398safety_check(T398* C,T0* a1);
/*IFTHENELSE*/void r398init(T398* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r398pretty_(T398* C,T2 a1,T0* a2);
/*IFTHENELSE*/T0* r398specialize_thru(T398* C,T0* a1,T0* a2,T0* a3);
/*IFTHENELSE*/T0* r398simplify_elseif_list(T0* a1,T6 a2,T0* a3);
/*IFTHENELSE*/void r398specialize_check(T398* C,T0* a1);
/*IFTHENELSE*/void r398accept(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398adapt_for(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398collect(T398* C,T0* a1);
/*IFTHENELSE*/T0* r398twin(T398* C);
/*IFTHENELSE*/T6 r398use_current(T398* C,T0* a1);
/*IFTHENELSE*/T6 r398side_effect_free(T0* a1);
/*IFTHENELSE*/void r398with_else(T398* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/void r398with_elseif(T398* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*IFTHENELSE*/T0* r398inline_dynamic_dispatch(T398* C,T0* a1,T0* a2);
/*IFTHENELSE*/T0* r398to_instruction(T398* C);
/*IFTHENELSE*/void r398with_elseif_and_else(T398* C,T338 a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*IFTHENELSE*/T0* r398current_or_twin_init(T398* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WHEN_CLAUSE*/T0* r357adapt_for(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357not_yet_implemented(T357* C);
/*WHEN_CLAUSE*/T0* r357collect(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_in(T357* C,T0* a1);
/*WHEN_CLAUSE*/T6 r357validity_check_continued(T357* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/void r357make_dynamic_dispatch(T357* C,T0* a1,T338 a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357simplify(T357* C,T0* a1);
/*WHEN_CLAUSE*/T6 r357match_value(T357* C,T2 a1);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_integer(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357safety_check(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357force_internal_character_values(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357to_expression(T357* C);
/*WHEN_CLAUSE*/void r357add_value(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_thru(T357* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357specialize_and_check(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_when_items_integer(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r357inline_dynamic_dispatch_(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T0* r357to_instruction(T357* C);
/*WHEN_CLAUSE*/void r357make(T357* C,T0* a1,T338 a2,T0* a3);
/*WHEN_CLAUSE*/void r357make_strippable(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r357is_live(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357no_manifest_string_slice_check(T0* a1);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_character(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357crash(T357* C);
/*WHEN_CLAUSE*/T6 r357is_more_complex_than(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357force_internal_integer_values(T357* C,T0* a1);
/*WHEN_CLAUSE*/T2 r357parser_add_value(T357* C,T2 a1,T0* a2);
/*WHEN_CLAUSE*/T6 r357use_current(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357init(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r357validity_check(T357* C,T0* a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357specialize_and_check_string(T357* C,T0* a1);
/*WHEN_CLAUSE*/void r357parser_make(T357* C,T338 a1,T0* a2);
/*WHEN_CLAUSE*/void r357pretty(T357* C,T2 a1);
/*WHEN_CLAUSE*/T0* r357strip_or_set_value(T357* C,T2 a1,T0* a2,T0* a3);
/*WHEN_CLAUSE*/T0* r357inline_dynamic_dispatch(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/T6 r357side_effect_free(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357twin(T357* C);
/*WHEN_CLAUSE*/void r357compute_values(T357* C,T0* a1);
/*WHEN_CLAUSE*/T2 r357largest_range_of_values(T357* C);
/*WHEN_CLAUSE*/void r357add_slice(T357* C,T0* a1,T0* a2);
/*WHEN_CLAUSE*/void r357accept(T357* C,T0* a1);
/*WHEN_CLAUSE*/T0* r357create_merged_with(T357* C,T0* a1);
/*IMPLICIT_CURRENT*/T369*create369make(T338 a1);
/*IMPLICIT_CURRENT*/T0* r369to_expression(T369* C);
/*IMPLICIT_CURRENT*/void r369make(T369* C,T338 a1);
/*IMPLICIT_CURRENT*/void r369pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r369simplify(T369* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r369static_simplify(T369* C);
/*IMPLICIT_CURRENT*/T0* r369specialize_in(T369* C,T0* a1);
/*IMPLICIT_CURRENT*/void r369inline_dynamic_dispatch_(T369* C,T0* a1,T0* a2);
/*IMPLICIT_CURRENT*/T6 r369is_stored_in_some_local_variable(void);
/*IMPLICIT_CURRENT*/void r369accept(T369* C,T0* a1);
/*IMPLICIT_CURRENT*/T0* r369collect(T0* a1);
/*IMPLICIT_CURRENT*/T0* r369twin(T369* C);
/*IMPLICIT_CURRENT*/T0* r369written_declaration_type_mark(void);
/*IMPLICIT_CURRENT*/T6 r369use_current(T0* a1);
/*IMPLICIT_CURRENT*/void r369bracketed_pretty(T2 a1);
/*IMPLICIT_CURRENT*/T0* r369non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CURRENT*/T6 r369side_effect_free(T0* a1);
/*IMPLICIT_CURRENT*/T0* r369resolve_in(T0* a1);
/*IMPLICIT_CURRENT*/T0* r369to_instruction(T369* C);
/*OTHER_INSPECT_STATEMENT*/T0* r362specialize_and_check(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362make_strippable(T362* C,T338 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r362to_expression(T362* C);
/*OTHER_INSPECT_STATEMENT*/void r362make(T362* C,T338 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r362with_when_list(T362* C,T338 a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r362pretty(T362* C,T2 a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362simplify(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362force_internal_values(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362validity_check(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r362specialize_in(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362inline_dynamic_dispatch_(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T6 r362same_compound(T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r362safety_check(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362init(T362* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/T0* r362count_call(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r362set_else_compound(T362* C,T338 a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r362specialize_thru(T362* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC363code_comparator;
/*OTHER_INSPECT_STATEMENT*/T0* r362count_name(void);
/*OTHER_INSPECT_STATEMENT*/void r362accept(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/void r362validity_check_continued(T362* C,T0* a1,T0* a2,T0* a3);
/*OTHER_INSPECT_STATEMENT*/void r362add_when(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362adapt_for(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T2 r362largest_range_of_values(T362* C);
/*OTHER_INSPECT_STATEMENT*/T6 r362use_c_switch_statement(T362* C);
/*OTHER_INSPECT_STATEMENT*/T0* r362collect(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362item_call(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/T0* r362twin(T362* C);
/*OTHER_INSPECT_STATEMENT*/T6 r362use_current(T362* C,T0* a1);
extern T0*oBC32item_name;
extern int fBC32item_name;
/*OTHER_INSPECT_STATEMENT*/T0* r362item_name(void);
/*OTHER_INSPECT_STATEMENT*/T6 r362side_effect_free(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362inline_dynamic_dispatch(T362* C,T0* a1,T0* a2);
/*OTHER_INSPECT_STATEMENT*/void r362compute_values(T362* C,T0* a1);
/*OTHER_INSPECT_STATEMENT*/T0* r362to_instruction(T362* C);
/*OTHER_INSPECT_STATEMENT*/T0* r362current_or_twin_init(T362* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479specialize_and_check(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479to_expression(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479with_when_list(T479* C,T338 a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479pretty(T479* C,T2 a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479simplify(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479validity_check(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479specialize_in(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479inline_dynamic_dispatch_(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479same_compound(T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479safety_check(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479init(T479* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479count_call(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479set_else_compound(T479* C,T338 a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479specialize_thru(T479* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479count_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479accept(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479validity_check_continued(T479* C,T0* a1,T0* a2,T0* a3);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479add_when(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479adapt_for(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T2 r479largest_range_of_values(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479use_c_switch_statement(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479collect(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479item_call(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479twin(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479use_current(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479item_name(void);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T6 r479side_effect_free(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479inline_dynamic_dispatch(T479* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECT_STATEMENT*/void r479compute_values(T479* C,T0* a1);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479to_instruction(T479* C);
/*MANIFEST_STRING_INSPECT_STATEMENT*/T0* r479current_or_twin_init(T479* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/T0* r423specialize_and_check(T423* C,T0* a1);
/*ASSERTION_LIST*/T0* r423to_expression(T423* C);
/*ASSERTION_LIST*/void r423make(T423* C,T338 a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r423pretty(T423* C,T2 a1);
/*ASSERTION_LIST*/T0* r423simplify(T423* C,T0* a1);
/*ASSERTION_LIST*/T0* r423specialize_in(T423* C,T0* a1);
/*ASSERTION_LIST*/void r423inline_dynamic_dispatch_(T423* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/T6 r423is_always_true(T423* C,T0* a1);
/*ASSERTION_LIST*/void r423safety_check(T423* C,T0* a1);
/*ASSERTION_LIST*/void r423set_list(T423* C,T0* a1);
/*ASSERTION_LIST*/T0* r423specialize_thru(T423* C,T0* a1,T0* a2,T0* a3);
/*ASSERTION_LIST*/void r423pretty_as_loop_invariant(T423* C,T2 a1);
/*ASSERTION_LIST*/T2 r423upper(T423* C);
/*ASSERTION_LIST*/void r423accept(T423* C,T0* a1);
/*ASSERTION_LIST*/void r423set_eiffel_parser_stamp(T423* C,T2 a1);
/*ASSERTION_LIST*/T0* r423adapt_for(T423* C,T0* a1);
/*ASSERTION_LIST*/T0* r423item(T423* C,T2 a1);
/*ASSERTION_LIST*/T0* r423collect(T423* C,T0* a1);
/*ASSERTION_LIST*/void r423pretty_print_with_tag(T423* C,T2 a1,T0* a2);
/*ASSERTION_LIST*/T6 r423is_empty(T423* C);
/*ASSERTION_LIST*/T0* r423twin(T423* C);
/*ASSERTION_LIST*/void r423pretty_as_check_compound(T423* C,T2 a1);
/*ASSERTION_LIST*/T6 r423use_current(T423* C,T0* a1);
/*ASSERTION_LIST*/void r423crash(T423* C);
/*ASSERTION_LIST*/void r423breakpoint(T423* C);
/*ASSERTION_LIST*/T6 r423side_effect_free(T423* C,T0* a1);
/*ASSERTION_LIST*/T0* r423inline_dynamic_dispatch(T423* C,T0* a1,T0* a2);
/*ASSERTION_LIST*/void r423not_yet_implemented(T423* C);
/*ASSERTION_LIST*/void r423do_all(T423* C,T0* a1);
/*ASSERTION_LIST*/T0* r423to_instruction(T423* C);
/*ASSERTION_LIST*/T2 r423lower(T423* C);
/*ASSERTION_LIST*/T0* r423specialize_without_checks(T423* C,T0* a1);
/*LOOP_VARIANT*/T0* r465specialize_and_check(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465to_expression(T465* C);
/*LOOP_VARIANT*/void r465make(T465* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*LOOP_VARIANT*/void r465pretty(T465* C,T2 a1);
/*LOOP_VARIANT*/T0* r465simplify(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465static_simplify(T465* C);
/*LOOP_VARIANT*/T0* r465specialize_in(T465* C,T0* a1);
/*LOOP_VARIANT*/void r465inline_dynamic_dispatch_(T465* C,T0* a1,T0* a2);
/*LOOP_VARIANT*/void r465safety_check(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465specialize_thru(T465* C,T0* a1,T0* a2,T0* a3);
/*LOOP_VARIANT*/void r465specialize_check(T465* C,T0* a1);
/*LOOP_VARIANT*/T6 r465is_stored_in_some_local_variable(void);
/*LOOP_VARIANT*/void r465accept(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465declaration_type(T465* C);
/*LOOP_VARIANT*/T0* r465collect(T465* C,T0* a1);
/*LOOP_VARIANT*/T338 r465start_position(T465* C);
/*LOOP_VARIANT*/T0* r465twin(T465* C);
/*LOOP_VARIANT*/T0* r465written_declaration_type_mark(void);
/*LOOP_VARIANT*/T6 r465use_current(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465non_void_no_dispatch_type(T0* a1);
/*LOOP_VARIANT*/T6 r465side_effect_free(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465resolve_in(T465* C,T0* a1);
/*LOOP_VARIANT*/T0* r465to_instruction(T465* C);
/*LOOP_INSTRUCTION*/T0* r466specialize_and_check(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466to_expression(T466* C);
/*LOOP_INSTRUCTION*/void r466make(T466* C,T338 a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*LOOP_INSTRUCTION*/void r466pretty(T466* C,T2 a1);
/*LOOP_INSTRUCTION*/T0* r466simplify(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466specialize_in(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/void r466inline_dynamic_dispatch_(T466* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/void r466safety_check(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466specialize_thru(T466* C,T0* a1,T0* a2,T0* a3);
/*LOOP_INSTRUCTION*/void r466specialize_check(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/void r466accept(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466adapt_for(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T0* r466collect(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r466use_current(T466* C,T0* a1);
/*LOOP_INSTRUCTION*/T6 r466side_effect_free(T0* a1);
/*LOOP_INSTRUCTION*/T0* r466inline_dynamic_dispatch(T466* C,T0* a1,T0* a2);
/*LOOP_INSTRUCTION*/T0* r466to_instruction(T466* C);
/*LOOP_INSTRUCTION*/T6 r466loop_check(T0* a1);
/*RESULT*/T0* r364to_expression(T364* C);
/*RESULT*/void r364make(T364* C,T338 a1);
/*RESULT*/void r364pretty(T2 a1);
/*RESULT*/T0* r364simplify(T364* C,T0* a1);
/*RESULT*/void r364validity_check(T364* C,T0* a1);
/*RESULT*/T0* r364static_simplify(T364* C);
/*RESULT*/T0* r364specialize_in(T364* C,T0* a1);
/*RESULT*/void r364inline_dynamic_dispatch_(T364* C,T0* a1,T0* a2);
/*RESULT*/void r364set_enclosing_function(T364* C,T0* a1);
/*RESULT*/T0* r364specialize_thru(T364* C,T0* a1,T0* a2,T0* a3);
/*RESULT*/void r364set_type_mark_memory(T364* C,T0* a1);
/*RESULT*/T6 r364is_stored_in_some_local_variable(void);
/*RESULT*/void r364accept(T364* C,T0* a1);
/*RESULT*/T0* r364adapt_for(T364* C,T0* a1);
/*RESULT*/T0* r364feature_accumulator(void);
/*RESULT*/T0* r364collect(T0* a1);
/*RESULT*/void r364pretty_target(T2 a1);
/*RESULT*/T0* r364twin(T364* C);
/*RESULT*/T6 r364use_current(T0* a1);
/*RESULT*/void r364bracketed_pretty(T2 a1);
/*RESULT*/T0* r364non_void_no_dispatch_type(T364* C,T0* a1);
/*RESULT*/T6 r364side_effect_free(T0* a1);
/*RESULT*/T0* r364resolve_in(T364* C,T0* a1);
/*RESULT*/T0* r364to_instruction(T364* C);
/*RESULT*/T0* r364current_or_twin_init(T364* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404specialize_and_check(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404to_expression(T404* C);
/*CREATE_INSTRUCTION*/void r404make(T404* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r404created_type(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404typed_internals(T404* C,T338 a1,T0* a2);
/*CREATE_INSTRUCTION*/void r404pretty(T404* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r404simplify(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404specialize_in(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404inline_dynamic_dispatch_(T404* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r404safety_check(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404set_call(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404init(T404* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/void r404specialize_checks(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404specialize_thru(T404* C,T0* a1,T0* a2,T0* a3);
/*CREATE_INSTRUCTION*/void r404accept(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/void r404set_eiffel_parser_stamp(T404* C,T2 a1);
/*CREATE_INSTRUCTION*/T0* r404adapt_for(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404default_create_name(void);
/*CREATE_INSTRUCTION*/T0* r404collect(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404any_default_create_fs(void);
/*CREATE_INSTRUCTION*/T0* r404twin(T404* C);
/*CREATE_INSTRUCTION*/T0* r404creation_procedure(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r404use_current(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T6 r404side_effect_free(T0* a1);
/*CREATE_INSTRUCTION*/T0* r404arguments(T404* C);
/*CREATE_INSTRUCTION*/T0* r404inline_dynamic_dispatch(T404* C,T0* a1,T0* a2);
/*CREATE_INSTRUCTION*/void r404make_specialized(T404* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*CREATE_INSTRUCTION*/T0* r404to_instruction(T404* C);
/*CREATE_INSTRUCTION*/T0* r404specialize_without_checks(T404* C,T0* a1);
/*CREATE_INSTRUCTION*/T0* r404current_or_twin_init(T404* C,T0* a1,T0* a2,T0* a3);
/*C_INLINE*/T0* r463specialize_and_check(T463* C,T0* a1);
/*C_INLINE*/T0* r463to_expression(T463* C);
/*C_INLINE*/void r463pretty(T463* C,T2 a1);
/*C_INLINE*/T0* r463simplify(T463* C,T0* a1);
/*C_INLINE*/void r463inline_dynamic_dispatch_(T463* C,T0* a1,T0* a2);
/*C_INLINE*/void r463accept(T463* C,T0* a1);
/*C_INLINE*/void r463make_c_inline_h(T463* C,T338 a1,T0* a2);
/*C_INLINE*/void r463make_c_inline_c(T463* C,T338 a1,T0* a2);
/*C_INLINE*/T6 r463use_current(T463* C,T0* a1);
/*C_INLINE*/T6 r463side_effect_free(T0* a1);
/*C_INLINE*/T0* r463inline_dynamic_dispatch(T463* C,T0* a1,T0* a2);
/*C_INLINE*/T0* r463to_instruction(T463* C);
/*PRECURSOR_INSTRUCTION*/T0* r494specialize_and_check(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494to_expression(T494* C);
/*PRECURSOR_INSTRUCTION*/void r494make(T494* C,T338 a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r494pretty(T494* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r494simplify(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494specialize_in(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r494inline_dynamic_dispatch_(T494* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r494safety_check(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/void r494init(T494* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/void r494pretty_(T494* C,T2 a1);
/*PRECURSOR_INSTRUCTION*/T0* r494specialize_thru(T494* C,T0* a1,T0* a2,T0* a3);
/*PRECURSOR_INSTRUCTION*/void r494accept(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494adapt_for(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494feature_accumulator(void);
/*PRECURSOR_INSTRUCTION*/T0* r494collect(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494twin(T494* C);
/*PRECURSOR_INSTRUCTION*/T6 r494use_current(T0* a1);
/*PRECURSOR_INSTRUCTION*/T6 r494side_effect_free(T494* C,T0* a1);
/*PRECURSOR_INSTRUCTION*/T0* r494inline_dynamic_dispatch(T494* C,T0* a1,T0* a2);
/*PRECURSOR_INSTRUCTION*/T0* r494to_instruction(T494* C);
/*PRECURSOR_INSTRUCTION*/T0* r494current_or_twin_init(T494* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T484*create484make(T338 a1);
/*WRITTEN_CURRENT*/T0* r484to_expression(T484* C);
/*WRITTEN_CURRENT*/void r484make(T484* C,T338 a1);
/*WRITTEN_CURRENT*/void r484pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r484simplify(T484* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r484static_simplify(T484* C);
/*WRITTEN_CURRENT*/T0* r484specialize_in(T484* C,T0* a1);
/*WRITTEN_CURRENT*/void r484inline_dynamic_dispatch_(T484* C,T0* a1,T0* a2);
/*WRITTEN_CURRENT*/T6 r484is_stored_in_some_local_variable(void);
/*WRITTEN_CURRENT*/void r484accept(T484* C,T0* a1);
/*WRITTEN_CURRENT*/T0* r484collect(T0* a1);
/*WRITTEN_CURRENT*/void r484pretty_target(T2 a1);
/*WRITTEN_CURRENT*/T0* r484twin(T484* C);
/*WRITTEN_CURRENT*/T0* r484written_declaration_type_mark(void);
/*WRITTEN_CURRENT*/T6 r484use_current(T0* a1);
/*WRITTEN_CURRENT*/void r484bracketed_pretty(T2 a1);
/*WRITTEN_CURRENT*/T0* r484non_void_no_dispatch_type(T0* a1);
/*WRITTEN_CURRENT*/T6 r484side_effect_free(T0* a1);
/*WRITTEN_CURRENT*/T0* r484resolve_in(T0* a1);
/*WRITTEN_CURRENT*/T0* r484to_instruction(T484* C);
/*ASSIGNMENT*/T367*create367inline_make(T0* a1,T0* a2);
/*ASSIGNMENT*/T367*create367make(T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r367specialize_and_check(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367to_expression(T367* C);
/*ASSIGNMENT*/void r367make(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r367fatal_error_for(T367* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ASSIGNMENT*/void r367pretty(T367* C,T2 a1);
/*ASSIGNMENT*/T0* r367simplify(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367specialize_in(T367* C,T0* a1);
/*ASSIGNMENT*/void r367inline_dynamic_dispatch_(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r367safety_check(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367specialize_thru(T367* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT*/T6 r367reset_default_value_in_local_or_result(T367* C,T0* a1);
/*ASSIGNMENT*/void r367inline_make(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/void r367accept(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367adapt_for(T367* C,T0* a1);
/*ASSIGNMENT*/T0* r367collect(T367* C,T0* a1);
/*ASSIGNMENT*/T338 r367start_position(T367* C);
/*ASSIGNMENT*/T6 r367use_current(T367* C,T0* a1);
/*ASSIGNMENT*/T6 r367side_effect_free(T0* a1);
/*ASSIGNMENT*/T0* r367inline_dynamic_dispatch(T367* C,T0* a1,T0* a2);
/*ASSIGNMENT*/T0* r367to_instruction(T367* C);
/*ASSIGNMENT_ATTEMPT*/T394*create394make(T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/T0* r394specialize_and_check(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394to_expression(T394* C);
/*ASSIGNMENT_ATTEMPT*/void r394make(T394* C,T0* a1,T0* a2,T6 a3);
/*ASSIGNMENT_ATTEMPT*/void r394pretty(T394* C,T2 a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394simplify(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394specialize_in(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/void r394inline_dynamic_dispatch_(T394* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/void r394safety_check(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394specialize_thru(T394* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_ATTEMPT*/void r394accept(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394adapt_for(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394collect(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T338 r394start_position(T394* C);
/*ASSIGNMENT_ATTEMPT*/T6 r394use_current(T394* C,T0* a1);
/*ASSIGNMENT_ATTEMPT*/T6 r394side_effect_free(T0* a1);
/*ASSIGNMENT_ATTEMPT*/T0* r394inline_dynamic_dispatch(T394* C,T0* a1,T0* a2);
/*ASSIGNMENT_ATTEMPT*/T0* r394to_instruction(T394* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464specialize_and_check(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464to_expression(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464make(T464* C,T0* a1,T0* a2);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464pretty(T464* C,T2 a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464echo(void);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464specialize_in(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464specialize_thru(T464* C,T0* a1,T0* a2,T0* a3);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464accept(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T338 r464start_position(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T6 r464use_current(T464* C,T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464crash(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T6 r464side_effect_free(T0* a1);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464inline_dynamic_dispatch(T0* a1,T0* a2);
/*ASSIGNMENT_CALL_ASSIGNER*/void r464not_yet_implemented(T464* C);
/*ASSIGNMENT_CALL_ASSIGNER*/T0* r464to_instruction(T464* C);
/*RETRY_INSTRUCTION*/T0* r459to_expression(T459* C);
/*RETRY_INSTRUCTION*/void r459make(T459* C,T338 a1);
/*RETRY_INSTRUCTION*/void r459pretty(T2 a1);
/*RETRY_INSTRUCTION*/T0* r459simplify(T459* C,T0* a1);
/*RETRY_INSTRUCTION*/void r459inline_dynamic_dispatch_(T459* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/void r459accept(T459* C,T0* a1);
/*RETRY_INSTRUCTION*/T6 r459use_current(T0* a1);
/*RETRY_INSTRUCTION*/T6 r459side_effect_free(T0* a1);
/*RETRY_INSTRUCTION*/T0* r459inline_dynamic_dispatch(T459* C,T0* a1,T0* a2);
/*RETRY_INSTRUCTION*/T0* r459to_instruction(T459* C);
/*COMPOUND*/T395*create395make_2(T0* a1,T0* a2);
/*COMPOUND*/void r395simplify_add(T0* a1,T0* a2);
/*COMPOUND*/T0* r395specialize_and_check(T395* C,T0* a1);
/*COMPOUND*/T0* r395to_expression(T395* C);
/*COMPOUND*/T0* r395first(T395* C);
/*COMPOUND*/void r395pretty(T395* C,T2 a1);
/*COMPOUND*/T0* r395simplify(T395* C,T0* a1);
/*COMPOUND*/T0* r395twin_remove_first(T395* C);
/*COMPOUND*/T0* r395specialize_in(T395* C,T0* a1);
/*COMPOUND*/void r395inline_dynamic_dispatch_(T395* C,T0* a1,T0* a2);
/*COMPOUND*/void r395safety_check(T395* C,T0* a1);
/*COMPOUND*/void r395set_list(T395* C,T0* a1);
/*COMPOUND*/T0* r395specialize_thru(T395* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r395upper(T395* C);
/*COMPOUND*/void r395accept(T395* C,T0* a1);
/*COMPOUND*/T0* r395adapt_for(T395* C,T0* a1);
/*COMPOUND*/void r395from_list(T395* C,T0* a1);
/*COMPOUND*/void r395make_n(T395* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*COMPOUND*/T0* r395collect(T395* C,T0* a1);
/*COMPOUND*/T6 r395is_a_comment(T0* a1);
/*COMPOUND*/T338 r395start_position(T395* C);
/*COMPOUND*/T0* r395twin(T395* C);
/*COMPOUND*/T6 r395use_current(T395* C,T0* a1);
/*COMPOUND*/T6 r395side_effect_free(T395* C,T0* a1);
/*COMPOUND*/T0* r395inline_dynamic_dispatch(T395* C,T0* a1,T0* a2);
/*COMPOUND*/void r395make_2(T395* C,T0* a1,T0* a2);
/*COMPOUND*/void r395make_3(T395* C,T0* a1,T0* a2,T0* a3);
/*COMPOUND*/T2 r395count(T395* C);
/*COMPOUND*/void r395make_4(T395* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*COMPOUND*/T0* r395to_instruction(T395* C);
/*ENSURE_ASSERTION*/T657*create657make(T338 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T0* r657specialize_and_check(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657to_expression(T657* C);
/*ENSURE_ASSERTION*/void r657make(T657* C,T338 a1,T6 a2,T0* a3,T0* a4);
/*ENSURE_ASSERTION*/T6 r657has_assertion_located_at(T657* C,T338 a1);
/*ENSURE_ASSERTION*/void r657pretty(T657* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r657simplify(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657specialize_in(T657* C,T0* a1);
/*ENSURE_ASSERTION*/void r657inline_dynamic_dispatch_(T657* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r657is_always_true(T657* C,T0* a1);
/*ENSURE_ASSERTION*/void r657safety_check(T657* C,T0* a1);
/*ENSURE_ASSERTION*/void r657set_list(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657specialize_thru(T657* C,T0* a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r657pretty_as_loop_invariant(T657* C,T2 a1);
/*ENSURE_ASSERTION*/T2 r657upper(T657* C);
/*ENSURE_ASSERTION*/void r657assertion_list_make(T657* C,T338 a1,T0* a2,T0* a3);
/*ENSURE_ASSERTION*/void r657accept(T657* C,T0* a1);
/*ENSURE_ASSERTION*/void r657set_eiffel_parser_stamp(T657* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r657adapt_for(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657item(T657* C,T2 a1);
/*ENSURE_ASSERTION*/T0* r657add_items_from(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657collect(T657* C,T0* a1);
/*ENSURE_ASSERTION*/void r657pretty_print_with_tag(T657* C,T2 a1,T0* a2);
/*ENSURE_ASSERTION*/T6 r657is_empty(T657* C);
/*ENSURE_ASSERTION*/T0* r657twin(T657* C);
/*ENSURE_ASSERTION*/void r657pretty_as_check_compound(T657* C,T2 a1);
/*ENSURE_ASSERTION*/T6 r657use_current(T657* C,T0* a1);
/*ENSURE_ASSERTION*/void r657breakpoint(T657* C);
/*ENSURE_ASSERTION*/void r657crash(T657* C);
/*ENSURE_ASSERTION*/T6 r657side_effect_free(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657inline_dynamic_dispatch(T657* C,T0* a1,T0* a2);
/*ENSURE_ASSERTION*/void r657not_yet_implemented(T657* C);
/*ENSURE_ASSERTION*/T2 r657count(T657* C);
/*ENSURE_ASSERTION*/void r657do_all(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657specialize_without_checks(T657* C,T0* a1);
/*ENSURE_ASSERTION*/T0* r657to_instruction(T657* C);
/*ENSURE_ASSERTION*/T2 r657lower(T657* C);
/*AGENT_CREATION*/T0* r483specialize_and_check(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483to_expression(T483* C);
/*AGENT_CREATION*/void r483make(T483* C,T338 a1,T0* a2,T0* a3);
/*AGENT_CREATION*/void r483pretty(T483* C,T2 a1);
/*AGENT_CREATION*/T0* r483simplify(T483* C,T0* a1);
/*AGENT_CREATION*/T6 r483same_mold_id_as(T483* C,T0* a1);
extern T0*oBC32is_equal_name;
extern int fBC32is_equal_name;
/*AGENT_CREATION*/T0* r483is_equal_name(void);
/*AGENT_CREATION*/T6 r483is_equal_used_in(T0* a1);
/*AGENT_CREATION*/T0* r483static_simplify(T483* C);
/*AGENT_CREATION*/T0* r483specialize_in(T483* C,T0* a1);
/*AGENT_CREATION*/void r483inline_dynamic_dispatch_(T483* C,T0* a1,T0* a2);
/*AGENT_CREATION*/void r483safety_check(T483* C,T0* a1);
/*AGENT_CREATION*/void r483mold_id_in(T483* C,T0* a1,T0* a2);
/*AGENT_CREATION*/T0* r483specialize_thru(T483* C,T0* a1,T0* a2,T0* a3);
/*AGENT_CREATION*/T6 r483is_stored_in_some_local_variable(void);
/*AGENT_CREATION*/void r483accept(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483adapt_for(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483declaration_type(T483* C);
/*AGENT_CREATION*/T0* r483collect(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483specialize_and_check_function(T483* C,T0* a1);
/*AGENT_CREATION*/void r483pretty_target(T483* C,T2 a1);
extern T0*oBC32any_is_equal_fs;
extern int fBC32any_is_equal_fs;
/*AGENT_CREATION*/T0* r483any_is_equal_fs(void);
/*AGENT_CREATION*/void r483set_inside_agent_launcher_flag(T483* C,T6 a1);
/*AGENT_CREATION*/T0* r483twin(T483* C);
/*AGENT_CREATION*/T0* r483written_declaration_type_mark(void);
/*AGENT_CREATION*/T6 r483use_current(T483* C,T0* a1);
/*AGENT_CREATION*/void r483bracketed_pretty(T483* C,T2 a1);
/*AGENT_CREATION*/T6 r483stored_closed_operand(T483* C,T0* a1,T0* a2);
/*AGENT_CREATION*/void r483omitted_open_arguments_update(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483non_void_no_dispatch_type(T483* C,T0* a1);
/*AGENT_CREATION*/T6 r483side_effect_free(T0* a1);
/*AGENT_CREATION*/T0* r483specialize_and_check_procedure(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483resolve_in(T483* C,T0* a1);
/*AGENT_CREATION*/T0* r483to_instruction(T483* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457specialize_and_check(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457to_expression(T457* C);
/*EXPRESSION_WITH_COMMENT*/void r457make(T457* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r457pretty(T457* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457simplify(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457extra_bracket_flag(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457static_simplify(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457specialize_in(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r457inline_dynamic_dispatch_(T457* C,T0* a1,T0* a2);
/*EXPRESSION_WITH_COMMENT*/void r457safety_check(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_result(T457* C);
/*EXPRESSION_WITH_COMMENT*/T2 r457precedence(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457specialize_thru(T457* C,T0* a1,T0* a2,T0* a3);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_static(T457* C);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_stored_in_some_local_variable(void);
/*EXPRESSION_WITH_COMMENT*/void r457accept(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457adapt_for(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457declaration_type(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457collect(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_current(T457* C);
/*EXPRESSION_WITH_COMMENT*/void r457pretty_target(T457* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T338 r457start_position(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457twin(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457written_declaration_type_mark(void);
/*EXPRESSION_WITH_COMMENT*/T6 r457use_current(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/void r457bracketed_pretty(T457* C,T2 a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_void(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457non_void_no_dispatch_type(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457side_effect_free(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_manifest_string(T457* C);
/*EXPRESSION_WITH_COMMENT*/T6 r457is_implicit_current(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457resolve_in(T457* C,T0* a1);
/*EXPRESSION_WITH_COMMENT*/T0* r457to_instruction(T457* C);
/*EXPRESSION_WITH_COMMENT*/T0* r457current_or_twin_init(T457* C,T0* a1);
/*E_VOID*/T396*create396make(T338 a1);
/*E_VOID*/T0* r396to_expression(T396* C);
/*E_VOID*/void r396make(T396* C,T338 a1);
/*E_VOID*/void r396pretty(T2 a1);
/*E_VOID*/T0* r396static_simplify(T396* C);
/*E_VOID*/void r396inline_dynamic_dispatch_(T396* C,T0* a1,T0* a2);
/*E_VOID*/T6 r396is_stored_in_some_local_variable(void);
/*E_VOID*/void r396accept(T396* C,T0* a1);
/*E_VOID*/T0* r396collect(T396* C,T0* a1);
/*E_VOID*/T0* r396twin(T396* C);
/*E_VOID*/T0* r396written_declaration_type_mark(void);
/*E_VOID*/T6 r396use_current(T0* a1);
/*E_VOID*/void r396bracketed_pretty(T2 a1);
/*E_VOID*/T0* r396non_void_no_dispatch_type(T0* a1);
/*E_VOID*/T6 r396side_effect_free(T0* a1);
/*E_VOID*/T0* r396resolve_in(T396* C,T0* a1);
/*E_VOID*/T0* r396to_instruction(T396* C);
/*E_OLD*/T0* r492specialize_and_check(T492* C,T0* a1);
/*E_OLD*/T0* r492to_expression(T492* C);
/*E_OLD*/void r492make(T492* C,T338 a1,T0* a2);
extern T0*oBC492vaol_check_memory;
/*E_OLD*/void r492pretty(T492* C,T2 a1);
/*E_OLD*/T0* r492simplify(T492* C,T0* a1);
/*E_OLD*/void r492set_tag(T492* C,T0* a1,T0* a2);
/*E_OLD*/T0* r492static_simplify(T492* C);
/*E_OLD*/T0* r492specialize_in(T492* C,T0* a1);
/*E_OLD*/void r492inline_dynamic_dispatch_(T492* C,T0* a1,T0* a2);
/*E_OLD*/void r492safety_check(T492* C,T0* a1);
/*E_OLD*/T0* r492specialize_thru(T492* C,T0* a1,T0* a2,T0* a3);
/*E_OLD*/T6 r492is_stored_in_some_local_variable(void);
/*E_OLD*/void r492accept(T492* C,T0* a1);
/*E_OLD*/T0* r492adapt_for(T492* C,T0* a1);
/*E_OLD*/T0* r492declaration_type(T492* C);
/*E_OLD*/T0* r492collect(T492* C,T0* a1);
/*E_OLD*/void r492pretty_target(T492* C,T2 a1);
/*E_OLD*/T0* r492twin(T492* C);
/*E_OLD*/T0* r492written_declaration_type_mark(void);
/*E_OLD*/T6 r492use_current(T492* C,T0* a1);
/*E_OLD*/void r492bracketed_pretty(T492* C,T2 a1);
/*E_OLD*/void r492crash(T492* C);
/*E_OLD*/T0* r492non_void_no_dispatch_type(T492* C,T0* a1);
/*E_OLD*/T6 r492side_effect_free(T0* a1);
/*E_OLD*/void r492not_yet_implemented(T492* C);
/*E_OLD*/T0* r492tag(T492* C,T0* a1);
/*E_OLD*/T0* r492resolve_in(T492* C,T0* a1);
/*E_OLD*/T0* r492to_instruction(T492* C);
/*E_OLD*/T0* r492current_or_twin_init(T492* C,T0* a1);
/*CALL_INFIX_FREEOP*/T6 r514is_balanced_operator(T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514declaration_type(T514* C);
/*CALL_INFIX_FREEOP*/T0* r514adapt_for(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514resolve_in(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514use_current_stack(void);
/*CALL_INFIX_FREEOP*/T0* r514collect(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514specialize_in(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514written_declaration_type_mark(void);
/*CALL_INFIX_FREEOP*/T0* r514simplify(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r514pretty_target(T514* C,T2 a1);
/*CALL_INFIX_FREEOP*/void r514safety_check(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514to_expression(T514* C);
/*CALL_INFIX_FREEOP*/T0* r514specialize_thru(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r514feature_accumulator(void);
/*CALL_INFIX_FREEOP*/T0* r514specialize_and_check(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r514inline_dynamic_dispatch_(T514* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r514to_instruction(T514* C);
/*CALL_INFIX_FREEOP*/T0* r514current_or_twin_init(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r514standard_check_export_and_obsolete_calls(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/void r514make(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r514arg1(T514* C);
/*CALL_INFIX_FREEOP*/void r514type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/void r514non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_FREEOP*/T6 r514use_current(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r514init(T514* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_FREEOP*/T0* r514static_simplify(T514* C);
/*CALL_INFIX_FREEOP*/T0* r514extra_local_expanded(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/void r514function_and_argument_count_check(T514* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/void r514pretty(T514* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r514side_effect_free(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514non_void_no_dispatch_type(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514run_feature_for(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T0* r514inline_with(T514* C,T0* a1,T0* a2);
/*CALL_INFIX_FREEOP*/T0* r514twin(T514* C);
/*CALL_INFIX_FREEOP*/void r514bracketed_pretty(T514* C,T2 a1);
/*CALL_INFIX_FREEOP*/T6 r514is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_FREEOP*/void r514accept(T514* C,T0* a1);
/*CALL_INFIX_FREEOP*/T338 r514start_position(T514* C);
/*CALL_INFIX_FREEOP*/T6 r514is_stored_in_some_local_variable(void);
/*CALL_INFIX_FREEOP*/T0* r514_P_350_declaration_type(T514* C);
/*CALL_INFIX_POWER*/T6 r513is_balanced_operator(T0* a1);
/*CALL_INFIX_POWER*/T0* r513declaration_type(T513* C);
/*CALL_INFIX_POWER*/T0* r513adapt_for(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513resolve_in(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513eiffel_parser(void);
/*CALL_INFIX_POWER*/T0* r513use_current_stack(void);
/*CALL_INFIX_POWER*/T0* r513collect(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513specialize_in(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513written_declaration_type_mark(void);
/*CALL_INFIX_POWER*/T0* r513simplify(T513* C,T0* a1);
/*CALL_INFIX_POWER*/void r513pretty_target(T513* C,T2 a1);
/*CALL_INFIX_POWER*/void r513safety_check(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513to_expression(T513* C);
/*CALL_INFIX_POWER*/T0* r513specialize_thru(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r513feature_accumulator(void);
/*CALL_INFIX_POWER*/T0* r513specialize_and_check(T513* C,T0* a1);
/*CALL_INFIX_POWER*/void r513inline_dynamic_dispatch_(T513* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r513to_instruction(T513* C);
/*CALL_INFIX_POWER*/T0* r513current_or_twin_init(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r513standard_check_export_and_obsolete_calls(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/void r513make(T513* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r513arg1(T513* C);
/*CALL_INFIX_POWER*/void r513type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/void r513non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_POWER*/T6 r513use_current(T513* C,T0* a1);
/*CALL_INFIX_POWER*/void r513init(T513* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_POWER*/T0* r513static_simplify(T513* C);
/*CALL_INFIX_POWER*/T0* r513extra_local_expanded(T513* C,T0* a1);
/*CALL_INFIX_POWER*/void r513function_and_argument_count_check(T513* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/void r513pretty(T513* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r513side_effect_free(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513non_void_no_dispatch_type(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513run_feature_for(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T0* r513inline_with(T513* C,T0* a1,T0* a2);
/*CALL_INFIX_POWER*/T0* r513twin(T513* C);
/*CALL_INFIX_POWER*/void r513bracketed_pretty(T513* C,T2 a1);
/*CALL_INFIX_POWER*/T6 r513is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_POWER*/void r513accept(T513* C,T0* a1);
/*CALL_INFIX_POWER*/T338 r513start_position(T513* C);
/*CALL_INFIX_POWER*/T6 r513is_stored_in_some_local_variable(void);
/*CALL_INFIX_POWER*/T0* r513_P_350_declaration_type(T513* C);
/*CALL_INFIX_TIMES*/T6 r509is_balanced_operator(T0* a1);
/*CALL_INFIX_TIMES*/T0* r509declaration_type(T509* C);
/*CALL_INFIX_TIMES*/T0* r509adapt_for(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509resolve_in(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509eiffel_parser(void);
/*CALL_INFIX_TIMES*/T0* r509use_current_stack(void);
/*CALL_INFIX_TIMES*/T0* r509collect(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509specialize_in(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509written_declaration_type_mark(void);
/*CALL_INFIX_TIMES*/T0* r509simplify(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/void r509pretty_target(T509* C,T2 a1);
/*CALL_INFIX_TIMES*/void r509safety_check(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509to_expression(T509* C);
/*CALL_INFIX_TIMES*/T0* r509specialize_thru(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r509feature_accumulator(void);
/*CALL_INFIX_TIMES*/T0* r509specialize_and_check(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/void r509inline_dynamic_dispatch_(T509* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r509to_instruction(T509* C);
/*CALL_INFIX_TIMES*/T0* r509current_or_twin_init(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r509standard_check_export_and_obsolete_calls(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/void r509make(T509* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r509arg1(T509* C);
/*CALL_INFIX_TIMES*/void r509type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/void r509non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_TIMES*/T6 r509use_current(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/void r509init(T509* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_TIMES*/T0* r509static_simplify(T509* C);
/*CALL_INFIX_TIMES*/T0* r509extra_local_expanded(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/void r509function_and_argument_count_check(T509* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/void r509pretty(T509* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r509side_effect_free(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509non_void_no_dispatch_type(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509run_feature_for(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T0* r509inline_with(T509* C,T0* a1,T0* a2);
/*CALL_INFIX_TIMES*/T0* r509twin(T509* C);
/*CALL_INFIX_TIMES*/void r509bracketed_pretty(T509* C,T2 a1);
/*CALL_INFIX_TIMES*/T6 r509is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_TIMES*/void r509accept(T509* C,T0* a1);
/*CALL_INFIX_TIMES*/T338 r509start_position(T509* C);
/*CALL_INFIX_TIMES*/T6 r509is_stored_in_some_local_variable(void);
/*CALL_INFIX_TIMES*/T0* r509_P_350_declaration_type(T509* C);
/*CALL_INFIX_INT_DIV*/T6 r510is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510declaration_type(T510* C);
/*CALL_INFIX_INT_DIV*/T0* r510adapt_for(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510resolve_in(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510eiffel_parser(void);
/*CALL_INFIX_INT_DIV*/T0* r510use_current_stack(void);
/*CALL_INFIX_INT_DIV*/T0* r510collect(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510specialize_in(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510written_declaration_type_mark(void);
/*CALL_INFIX_INT_DIV*/T0* r510simplify(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r510pretty_target(T510* C,T2 a1);
/*CALL_INFIX_INT_DIV*/void r510safety_check(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510to_expression(T510* C);
/*CALL_INFIX_INT_DIV*/T0* r510specialize_thru(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r510feature_accumulator(void);
/*CALL_INFIX_INT_DIV*/T0* r510specialize_and_check(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r510inline_dynamic_dispatch_(T510* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r510to_instruction(T510* C);
/*CALL_INFIX_INT_DIV*/T0* r510current_or_twin_init(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r510standard_check_export_and_obsolete_calls(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/void r510make(T510* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r510arg1(T510* C);
/*CALL_INFIX_INT_DIV*/void r510type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/void r510non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_DIV*/T6 r510use_current(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r510init(T510* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_DIV*/T0* r510static_simplify(T510* C);
/*CALL_INFIX_INT_DIV*/T0* r510extra_local_expanded(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/void r510function_and_argument_count_check(T510* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/void r510pretty(T510* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r510side_effect_free(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510non_void_no_dispatch_type(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510run_feature_for(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T0* r510inline_with(T510* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_DIV*/T0* r510twin(T510* C);
/*CALL_INFIX_INT_DIV*/void r510bracketed_pretty(T510* C,T2 a1);
/*CALL_INFIX_INT_DIV*/T6 r510is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_DIV*/void r510accept(T510* C,T0* a1);
/*CALL_INFIX_INT_DIV*/T338 r510start_position(T510* C);
/*CALL_INFIX_INT_DIV*/T6 r510is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_DIV*/T0* r510_P_350_declaration_type(T510* C);
/*CALL_INFIX_INT_REM*/T6 r511is_balanced_operator(T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511declaration_type(T511* C);
/*CALL_INFIX_INT_REM*/T0* r511adapt_for(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511resolve_in(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511eiffel_parser(void);
/*CALL_INFIX_INT_REM*/T0* r511use_current_stack(void);
/*CALL_INFIX_INT_REM*/T0* r511collect(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511specialize_in(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511written_declaration_type_mark(void);
/*CALL_INFIX_INT_REM*/T0* r511simplify(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r511pretty_target(T511* C,T2 a1);
/*CALL_INFIX_INT_REM*/void r511safety_check(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511to_expression(T511* C);
/*CALL_INFIX_INT_REM*/T0* r511specialize_thru(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r511feature_accumulator(void);
/*CALL_INFIX_INT_REM*/T0* r511specialize_and_check(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r511inline_dynamic_dispatch_(T511* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r511to_instruction(T511* C);
/*CALL_INFIX_INT_REM*/T0* r511current_or_twin_init(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r511standard_check_export_and_obsolete_calls(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/void r511make(T511* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r511arg1(T511* C);
/*CALL_INFIX_INT_REM*/void r511type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/void r511non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_INT_REM*/T6 r511use_current(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r511init(T511* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_INT_REM*/T0* r511static_simplify(T511* C);
/*CALL_INFIX_INT_REM*/T0* r511extra_local_expanded(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/void r511function_and_argument_count_check(T511* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/void r511pretty(T511* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r511side_effect_free(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511non_void_no_dispatch_type(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511run_feature_for(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T0* r511inline_with(T511* C,T0* a1,T0* a2);
/*CALL_INFIX_INT_REM*/T0* r511twin(T511* C);
/*CALL_INFIX_INT_REM*/void r511bracketed_pretty(T511* C,T2 a1);
/*CALL_INFIX_INT_REM*/T6 r511is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_INT_REM*/void r511accept(T511* C,T0* a1);
/*CALL_INFIX_INT_REM*/T338 r511start_position(T511* C);
/*CALL_INFIX_INT_REM*/T6 r511is_stored_in_some_local_variable(void);
/*CALL_INFIX_INT_REM*/T0* r511_P_350_declaration_type(T511* C);
/*CALL_INFIX_DIV*/T6 r512is_balanced_operator(T0* a1);
/*CALL_INFIX_DIV*/T0* r512declaration_type(T512* C);
/*CALL_INFIX_DIV*/T0* r512adapt_for(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512resolve_in(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512eiffel_parser(void);
/*CALL_INFIX_DIV*/T0* r512use_current_stack(void);
/*CALL_INFIX_DIV*/T0* r512collect(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512specialize_in(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512written_declaration_type_mark(void);
/*CALL_INFIX_DIV*/T0* r512simplify(T512* C,T0* a1);
/*CALL_INFIX_DIV*/void r512pretty_target(T512* C,T2 a1);
/*CALL_INFIX_DIV*/void r512safety_check(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512to_expression(T512* C);
/*CALL_INFIX_DIV*/T0* r512specialize_thru(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r512feature_accumulator(void);
/*CALL_INFIX_DIV*/T0* r512specialize_and_check(T512* C,T0* a1);
/*CALL_INFIX_DIV*/void r512inline_dynamic_dispatch_(T512* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r512to_instruction(T512* C);
/*CALL_INFIX_DIV*/T0* r512current_or_twin_init(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r512standard_check_export_and_obsolete_calls(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/void r512make(T512* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r512arg1(T512* C);
/*CALL_INFIX_DIV*/void r512type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/void r512non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_DIV*/T6 r512use_current(T512* C,T0* a1);
/*CALL_INFIX_DIV*/void r512init(T512* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_DIV*/T0* r512static_simplify(T512* C);
/*CALL_INFIX_DIV*/T0* r512extra_local_expanded(T512* C,T0* a1);
/*CALL_INFIX_DIV*/void r512function_and_argument_count_check(T512* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/void r512pretty(T512* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r512side_effect_free(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512non_void_no_dispatch_type(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512run_feature_for(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T0* r512inline_with(T512* C,T0* a1,T0* a2);
/*CALL_INFIX_DIV*/T0* r512twin(T512* C);
/*CALL_INFIX_DIV*/void r512bracketed_pretty(T512* C,T2 a1);
/*CALL_INFIX_DIV*/T6 r512is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_DIV*/void r512accept(T512* C,T0* a1);
/*CALL_INFIX_DIV*/T338 r512start_position(T512* C);
/*CALL_INFIX_DIV*/T6 r512is_stored_in_some_local_variable(void);
/*CALL_INFIX_DIV*/T0* r512_P_350_declaration_type(T512* C);
/*CALL_INFIX_PLUS*/T6 r508is_balanced_operator(T0* a1);
/*CALL_INFIX_PLUS*/T0* r508declaration_type(T508* C);
/*CALL_INFIX_PLUS*/T0* r508adapt_for(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508resolve_in(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508eiffel_parser(void);
/*CALL_INFIX_PLUS*/T0* r508use_current_stack(void);
/*CALL_INFIX_PLUS*/T0* r508collect(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508specialize_in(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508written_declaration_type_mark(void);
/*CALL_INFIX_PLUS*/T0* r508simplify(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/void r508pretty_target(T508* C,T2 a1);
/*CALL_INFIX_PLUS*/void r508safety_check(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508to_expression(T508* C);
/*CALL_INFIX_PLUS*/T0* r508specialize_thru(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r508feature_accumulator(void);
/*CALL_INFIX_PLUS*/T0* r508specialize_and_check(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/void r508inline_dynamic_dispatch_(T508* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r508to_instruction(T508* C);
/*CALL_INFIX_PLUS*/T0* r508current_or_twin_init(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r508standard_check_export_and_obsolete_calls(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/void r508make(T508* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r508arg1(T508* C);
/*CALL_INFIX_PLUS*/void r508type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/void r508non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_PLUS*/T6 r508use_current(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/void r508init(T508* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_PLUS*/T0* r508static_simplify(T508* C);
/*CALL_INFIX_PLUS*/T0* r508extra_local_expanded(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/void r508function_and_argument_count_check(T508* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/void r508pretty(T508* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r508side_effect_free(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508non_void_no_dispatch_type(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508run_feature_for(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T0* r508inline_with(T508* C,T0* a1,T0* a2);
/*CALL_INFIX_PLUS*/T0* r508twin(T508* C);
/*CALL_INFIX_PLUS*/void r508bracketed_pretty(T508* C,T2 a1);
/*CALL_INFIX_PLUS*/T6 r508is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_PLUS*/void r508accept(T508* C,T0* a1);
/*CALL_INFIX_PLUS*/T338 r508start_position(T508* C);
/*CALL_INFIX_PLUS*/T6 r508is_stored_in_some_local_variable(void);
/*CALL_INFIX_PLUS*/T0* r508_P_350_declaration_type(T508* C);
/*CALL_INFIX_MINUS*/T6 r374is_balanced_operator(T0* a1);
/*CALL_INFIX_MINUS*/T0* r374declaration_type(T374* C);
/*CALL_INFIX_MINUS*/T0* r374adapt_for(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374resolve_in(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374eiffel_parser(void);
/*CALL_INFIX_MINUS*/T0* r374use_current_stack(void);
/*CALL_INFIX_MINUS*/T0* r374collect(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374specialize_in(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374written_declaration_type_mark(void);
/*CALL_INFIX_MINUS*/T0* r374simplify(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374pretty_target(T374* C,T2 a1);
/*CALL_INFIX_MINUS*/void r374safety_check(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374to_expression(T374* C);
/*CALL_INFIX_MINUS*/T0* r374specialize_thru(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r374feature_accumulator(void);
/*CALL_INFIX_MINUS*/T0* r374specialize_and_check(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374inline_dynamic_dispatch_(T374* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r374to_instruction(T374* C);
/*CALL_INFIX_MINUS*/T0* r374current_or_twin_init(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r374standard_check_export_and_obsolete_calls(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/void r374make(T374* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r374arg1(T374* C);
/*CALL_INFIX_MINUS*/void r374type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/void r374non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_MINUS*/T6 r374use_current(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374init(T374* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_MINUS*/T0* r374static_simplify(T374* C);
/*CALL_INFIX_MINUS*/T0* r374extra_local_expanded(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/void r374function_and_argument_count_check(T374* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/void r374pretty(T374* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r374side_effect_free(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374non_void_no_dispatch_type(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374run_feature_for(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T0* r374inline_with(T374* C,T0* a1,T0* a2);
/*CALL_INFIX_MINUS*/T0* r374twin(T374* C);
/*CALL_INFIX_MINUS*/void r374bracketed_pretty(T374* C,T2 a1);
/*CALL_INFIX_MINUS*/T6 r374is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_MINUS*/void r374accept(T374* C,T0* a1);
/*CALL_INFIX_MINUS*/T338 r374start_position(T374* C);
/*CALL_INFIX_MINUS*/T6 r374is_stored_in_some_local_variable(void);
/*CALL_INFIX_MINUS*/T0* r374_P_350_declaration_type(T374* C);
/*BUILT_IN_EQ_NEQ*/T397*create397make_neq(T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T397*create397make_eq(T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397specialize_and_check(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397to_expression(T397* C);
/*BUILT_IN_EQ_NEQ*/void r397make_neq(T397* C,T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/void r397pretty(T397* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397specialized(T397* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*BUILT_IN_EQ_NEQ*/void r397set_left_and_right(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_integer_real(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397static_simplify(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397specialize_in(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397inline_dynamic_dispatch_(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/void r397safety_check(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_null_pointer(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_character_constant(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397specialize_thru(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r397is_static(T397* C);
/*BUILT_IN_EQ_NEQ*/void r397make_eq(T397* C,T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T6 r397is_stored_in_some_local_variable(void);
/*BUILT_IN_EQ_NEQ*/void r397accept(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397specialize_and_check_standard_comparison_check(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397adapt_for(T397* C,T0* a1);
extern T0*oBC397declaration_type;
extern int fBC397declaration_type;
/*BUILT_IN_EQ_NEQ*/T0* r397declaration_type(void);
/*BUILT_IN_EQ_NEQ*/T0* r397collect(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397pretty_target(T397* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/T338 r397start_position(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397twin(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397written_declaration_type_mark(void);
/*BUILT_IN_EQ_NEQ*/T6 r397use_current(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397bracketed_pretty(T397* C,T2 a1);
/*BUILT_IN_EQ_NEQ*/void r397void_comparison_check(T397* C,T0* a1,T338 a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397non_void_no_dispatch_type(T0* a1);
/*BUILT_IN_EQ_NEQ*/T6 r397side_effect_free(T397* C,T0* a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_void(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397inline_with(T397* C,T0* a1,T0* a2,T0* a3);
/*BUILT_IN_EQ_NEQ*/T0* r397true_or_false(T397* C,T6 a1);
/*BUILT_IN_EQ_NEQ*/T0* r397simplify_boolean_constant(T397* C,T0* a1,T0* a2);
/*BUILT_IN_EQ_NEQ*/T0* r397resolve_in(T0* a1);
/*BUILT_IN_EQ_NEQ*/void r397basic_make(T397* C,T6 a1,T0* a2,T338 a3,T0* a4);
/*BUILT_IN_EQ_NEQ*/T0* r397to_instruction(T397* C);
/*BUILT_IN_EQ_NEQ*/T0* r397current_or_twin_init(T397* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T6 r504is_balanced_operator(T0* a1);
/*CALL_INFIX_LE*/T0* r504declaration_type(T504* C);
/*CALL_INFIX_LE*/T0* r504adapt_for(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504resolve_in(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504eiffel_parser(void);
/*CALL_INFIX_LE*/T0* r504use_current_stack(void);
/*CALL_INFIX_LE*/T0* r504collect(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504specialize_in(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504written_declaration_type_mark(void);
/*CALL_INFIX_LE*/T0* r504simplify(T504* C,T0* a1);
/*CALL_INFIX_LE*/void r504pretty_target(T504* C,T2 a1);
/*CALL_INFIX_LE*/void r504safety_check(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504to_expression(T504* C);
/*CALL_INFIX_LE*/T0* r504specialize_thru(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r504feature_accumulator(void);
/*CALL_INFIX_LE*/T0* r504specialize_and_check(T504* C,T0* a1);
/*CALL_INFIX_LE*/void r504inline_dynamic_dispatch_(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r504to_instruction(T504* C);
/*CALL_INFIX_LE*/T0* r504current_or_twin_init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r504standard_check_export_and_obsolete_calls(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/void r504make(T504* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_LE*/T0* r504arg1(T504* C);
/*CALL_INFIX_LE*/void r504type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/void r504non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LE*/T6 r504use_current(T504* C,T0* a1);
/*CALL_INFIX_LE*/void r504init(T504* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LE*/T0* r504static_simplify(T504* C);
/*CALL_INFIX_LE*/T0* r504extra_local_expanded(T504* C,T0* a1);
/*CALL_INFIX_LE*/void r504function_and_argument_count_check(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/void r504pretty(T504* C,T2 a1);
/*CALL_INFIX_LE*/T6 r504side_effect_free(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504non_void_no_dispatch_type(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504run_feature_for(T504* C,T0* a1);
/*CALL_INFIX_LE*/T0* r504inline_with(T504* C,T0* a1,T0* a2);
/*CALL_INFIX_LE*/T0* r504twin(T504* C);
/*CALL_INFIX_LE*/void r504bracketed_pretty(T504* C,T2 a1);
/*CALL_INFIX_LE*/T6 r504is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LE*/void r504accept(T504* C,T0* a1);
/*CALL_INFIX_LE*/T338 r504start_position(T504* C);
/*CALL_INFIX_LE*/T6 r504is_stored_in_some_local_variable(void);
/*CALL_INFIX_LE*/T0* r504_P_350_declaration_type(T504* C);
/*CALL_INFIX_GE*/T6 r505is_balanced_operator(T0* a1);
/*CALL_INFIX_GE*/T0* r505declaration_type(T505* C);
/*CALL_INFIX_GE*/T0* r505adapt_for(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505resolve_in(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505eiffel_parser(void);
/*CALL_INFIX_GE*/T0* r505use_current_stack(void);
/*CALL_INFIX_GE*/T0* r505collect(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505specialize_in(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505written_declaration_type_mark(void);
/*CALL_INFIX_GE*/T0* r505simplify(T505* C,T0* a1);
/*CALL_INFIX_GE*/void r505pretty_target(T505* C,T2 a1);
/*CALL_INFIX_GE*/void r505safety_check(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505to_expression(T505* C);
/*CALL_INFIX_GE*/T0* r505specialize_thru(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r505feature_accumulator(void);
/*CALL_INFIX_GE*/T0* r505specialize_and_check(T505* C,T0* a1);
/*CALL_INFIX_GE*/void r505inline_dynamic_dispatch_(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r505to_instruction(T505* C);
/*CALL_INFIX_GE*/T0* r505current_or_twin_init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r505standard_check_export_and_obsolete_calls(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/void r505make(T505* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_GE*/T0* r505arg1(T505* C);
/*CALL_INFIX_GE*/void r505type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/void r505non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GE*/T6 r505use_current(T505* C,T0* a1);
/*CALL_INFIX_GE*/void r505init(T505* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GE*/T0* r505static_simplify(T505* C);
/*CALL_INFIX_GE*/T0* r505extra_local_expanded(T505* C,T0* a1);
/*CALL_INFIX_GE*/void r505function_and_argument_count_check(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/void r505pretty(T505* C,T2 a1);
/*CALL_INFIX_GE*/T6 r505side_effect_free(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505non_void_no_dispatch_type(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505run_feature_for(T505* C,T0* a1);
/*CALL_INFIX_GE*/T0* r505inline_with(T505* C,T0* a1,T0* a2);
/*CALL_INFIX_GE*/T0* r505twin(T505* C);
/*CALL_INFIX_GE*/void r505bracketed_pretty(T505* C,T2 a1);
/*CALL_INFIX_GE*/T6 r505is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GE*/void r505accept(T505* C,T0* a1);
/*CALL_INFIX_GE*/T338 r505start_position(T505* C);
/*CALL_INFIX_GE*/T6 r505is_stored_in_some_local_variable(void);
/*CALL_INFIX_GE*/T0* r505_P_350_declaration_type(T505* C);
/*CALL_INFIX_LT*/T6 r506is_balanced_operator(T0* a1);
/*CALL_INFIX_LT*/T0* r506declaration_type(T506* C);
/*CALL_INFIX_LT*/T0* r506adapt_for(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506resolve_in(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506eiffel_parser(void);
/*CALL_INFIX_LT*/T0* r506use_current_stack(void);
/*CALL_INFIX_LT*/T0* r506collect(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506specialize_in(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506written_declaration_type_mark(void);
/*CALL_INFIX_LT*/T0* r506simplify(T506* C,T0* a1);
/*CALL_INFIX_LT*/void r506pretty_target(T506* C,T2 a1);
/*CALL_INFIX_LT*/void r506safety_check(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506to_expression(T506* C);
/*CALL_INFIX_LT*/T0* r506specialize_thru(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r506feature_accumulator(void);
/*CALL_INFIX_LT*/T0* r506specialize_and_check(T506* C,T0* a1);
/*CALL_INFIX_LT*/void r506inline_dynamic_dispatch_(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r506to_instruction(T506* C);
/*CALL_INFIX_LT*/T0* r506current_or_twin_init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r506standard_check_export_and_obsolete_calls(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/void r506make(T506* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_LT*/T0* r506arg1(T506* C);
/*CALL_INFIX_LT*/void r506type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/void r506non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_LT*/T6 r506use_current(T506* C,T0* a1);
/*CALL_INFIX_LT*/void r506init(T506* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_LT*/T0* r506static_simplify(T506* C);
/*CALL_INFIX_LT*/T0* r506extra_local_expanded(T506* C,T0* a1);
/*CALL_INFIX_LT*/void r506function_and_argument_count_check(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/void r506pretty(T506* C,T2 a1);
/*CALL_INFIX_LT*/T6 r506side_effect_free(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506non_void_no_dispatch_type(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506run_feature_for(T506* C,T0* a1);
/*CALL_INFIX_LT*/T0* r506inline_with(T506* C,T0* a1,T0* a2);
/*CALL_INFIX_LT*/T0* r506twin(T506* C);
/*CALL_INFIX_LT*/void r506bracketed_pretty(T506* C,T2 a1);
/*CALL_INFIX_LT*/T6 r506is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_LT*/void r506accept(T506* C,T0* a1);
/*CALL_INFIX_LT*/T338 r506start_position(T506* C);
/*CALL_INFIX_LT*/T6 r506is_stored_in_some_local_variable(void);
/*CALL_INFIX_LT*/T0* r506_P_350_declaration_type(T506* C);
/*CALL_INFIX_GT*/T6 r507is_balanced_operator(T0* a1);
/*CALL_INFIX_GT*/T0* r507declaration_type(T507* C);
/*CALL_INFIX_GT*/T0* r507adapt_for(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507resolve_in(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507eiffel_parser(void);
/*CALL_INFIX_GT*/T0* r507use_current_stack(void);
/*CALL_INFIX_GT*/T0* r507collect(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507specialize_in(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507written_declaration_type_mark(void);
/*CALL_INFIX_GT*/T0* r507simplify(T507* C,T0* a1);
/*CALL_INFIX_GT*/void r507pretty_target(T507* C,T2 a1);
/*CALL_INFIX_GT*/void r507safety_check(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507to_expression(T507* C);
/*CALL_INFIX_GT*/T0* r507specialize_thru(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r507feature_accumulator(void);
/*CALL_INFIX_GT*/T0* r507specialize_and_check(T507* C,T0* a1);
/*CALL_INFIX_GT*/void r507inline_dynamic_dispatch_(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r507to_instruction(T507* C);
/*CALL_INFIX_GT*/T0* r507current_or_twin_init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r507standard_check_export_and_obsolete_calls(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/void r507make(T507* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_GT*/T0* r507arg1(T507* C);
/*CALL_INFIX_GT*/void r507type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/void r507non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_GT*/T6 r507use_current(T507* C,T0* a1);
/*CALL_INFIX_GT*/void r507init(T507* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_GT*/T0* r507static_simplify(T507* C);
/*CALL_INFIX_GT*/T0* r507extra_local_expanded(T507* C,T0* a1);
/*CALL_INFIX_GT*/void r507function_and_argument_count_check(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/void r507pretty(T507* C,T2 a1);
/*CALL_INFIX_GT*/T6 r507side_effect_free(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507non_void_no_dispatch_type(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507run_feature_for(T507* C,T0* a1);
/*CALL_INFIX_GT*/T0* r507inline_with(T507* C,T0* a1,T0* a2);
/*CALL_INFIX_GT*/T0* r507twin(T507* C);
/*CALL_INFIX_GT*/void r507bracketed_pretty(T507* C,T2 a1);
/*CALL_INFIX_GT*/T6 r507is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_GT*/void r507accept(T507* C,T0* a1);
/*CALL_INFIX_GT*/T338 r507start_position(T507* C);
/*CALL_INFIX_GT*/T6 r507is_stored_in_some_local_variable(void);
/*CALL_INFIX_GT*/T0* r507_P_350_declaration_type(T507* C);
/*CALL_INFIX_AND_THEN*/T6 r402is_balanced_operator(T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402declaration_type(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402adapt_for(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402resolve_in(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402use_current_stack(void);
/*CALL_INFIX_AND_THEN*/T0* r402collect(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402specialize_in(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402written_declaration_type_mark(void);
/*CALL_INFIX_AND_THEN*/T0* r402simplify(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402pretty_target(T402* C,T2 a1);
/*CALL_INFIX_AND_THEN*/void r402safety_check(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402to_expression(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402specialize_thru(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r402feature_accumulator(void);
/*CALL_INFIX_AND_THEN*/T0* r402specialize_and_check(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402inline_dynamic_dispatch_(T402* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r402to_instruction(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402current_or_twin_init(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r402standard_check_export_and_obsolete_calls(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/void r402make(T402* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r402arg1(T402* C);
/*CALL_INFIX_AND_THEN*/T6 r402use_current(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402init(T402* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND_THEN*/T0* r402static_simplify(T402* C);
/*CALL_INFIX_AND_THEN*/T0* r402and_then_name(void);
/*CALL_INFIX_AND_THEN*/T0* r402extra_local_expanded(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/void r402function_and_argument_count_check(T402* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/void r402pretty(T402* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r402side_effect_free(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402non_void_no_dispatch_type(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402run_feature_for(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T0* r402inline_with(T402* C,T0* a1,T0* a2);
/*CALL_INFIX_AND_THEN*/T0* r402twin(T402* C);
/*CALL_INFIX_AND_THEN*/void r402bracketed_pretty(T402* C,T2 a1);
/*CALL_INFIX_AND_THEN*/T6 r402is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND_THEN*/void r402accept(T402* C,T0* a1);
/*CALL_INFIX_AND_THEN*/T338 r402start_position(T402* C);
/*CALL_INFIX_AND_THEN*/T6 r402is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND_THEN*/T0* r402_P_350_declaration_type(T402* C);
/*CALL_INFIX_AND*/T6 r503is_balanced_operator(T0* a1);
/*CALL_INFIX_AND*/T0* r503declaration_type(T503* C);
/*CALL_INFIX_AND*/T0* r503adapt_for(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503resolve_in(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503eiffel_parser(void);
/*CALL_INFIX_AND*/T0* r503use_current_stack(void);
/*CALL_INFIX_AND*/T0* r503collect(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503specialize_in(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503written_declaration_type_mark(void);
/*CALL_INFIX_AND*/T0* r503simplify(T503* C,T0* a1);
/*CALL_INFIX_AND*/void r503pretty_target(T503* C,T2 a1);
/*CALL_INFIX_AND*/void r503safety_check(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503to_expression(T503* C);
/*CALL_INFIX_AND*/T0* r503specialize_thru(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r503feature_accumulator(void);
/*CALL_INFIX_AND*/T0* r503specialize_and_check(T503* C,T0* a1);
/*CALL_INFIX_AND*/void r503inline_dynamic_dispatch_(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r503to_instruction(T503* C);
/*CALL_INFIX_AND*/T0* r503current_or_twin_init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r503standard_check_export_and_obsolete_calls(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/void r503make(T503* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_AND*/T0* r503arg1(T503* C);
/*CALL_INFIX_AND*/void r503type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/void r503non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_AND*/T6 r503use_current(T503* C,T0* a1);
/*CALL_INFIX_AND*/void r503init(T503* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_AND*/T0* r503static_simplify(T503* C);
/*CALL_INFIX_AND*/T0* r503extra_local_expanded(T503* C,T0* a1);
/*CALL_INFIX_AND*/void r503function_and_argument_count_check(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/void r503pretty(T503* C,T2 a1);
/*CALL_INFIX_AND*/T6 r503side_effect_free(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503non_void_no_dispatch_type(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503run_feature_for(T503* C,T0* a1);
/*CALL_INFIX_AND*/T0* r503inline_with(T503* C,T0* a1,T0* a2);
/*CALL_INFIX_AND*/T0* r503twin(T503* C);
/*CALL_INFIX_AND*/void r503bracketed_pretty(T503* C,T2 a1);
/*CALL_INFIX_AND*/T6 r503is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_AND*/void r503accept(T503* C,T0* a1);
/*CALL_INFIX_AND*/T338 r503start_position(T503* C);
/*CALL_INFIX_AND*/T6 r503is_stored_in_some_local_variable(void);
/*CALL_INFIX_AND*/T0* r503_P_350_declaration_type(T503* C);
/*CALL_INFIX_OR_ELSE*/T6 r500is_balanced_operator(T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500declaration_type(T500* C);
/*CALL_INFIX_OR_ELSE*/T0* r500adapt_for(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500resolve_in(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500use_current_stack(void);
/*CALL_INFIX_OR_ELSE*/T0* r500collect(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500specialize_in(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500written_declaration_type_mark(void);
/*CALL_INFIX_OR_ELSE*/T0* r500simplify(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r500pretty_target(T500* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/void r500safety_check(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500to_expression(T500* C);
/*CALL_INFIX_OR_ELSE*/T0* r500specialize_thru(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r500feature_accumulator(void);
/*CALL_INFIX_OR_ELSE*/T0* r500specialize_and_check(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r500inline_dynamic_dispatch_(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r500to_instruction(T500* C);
/*CALL_INFIX_OR_ELSE*/T0* r500current_or_twin_init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r500standard_check_export_and_obsolete_calls(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/void r500make(T500* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r500arg1(T500* C);
/*CALL_INFIX_OR_ELSE*/T6 r500use_current(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/void r500init(T500* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR_ELSE*/T0* r500static_simplify(T500* C);
/*CALL_INFIX_OR_ELSE*/T0* r500extra_local_expanded(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500or_else_name(void);
/*CALL_INFIX_OR_ELSE*/void r500function_and_argument_count_check(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/void r500pretty(T500* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r500side_effect_free(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500non_void_no_dispatch_type(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500run_feature_for(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T0* r500inline_with(T500* C,T0* a1,T0* a2);
/*CALL_INFIX_OR_ELSE*/T0* r500twin(T500* C);
/*CALL_INFIX_OR_ELSE*/void r500bracketed_pretty(T500* C,T2 a1);
/*CALL_INFIX_OR_ELSE*/T6 r500is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR_ELSE*/void r500accept(T500* C,T0* a1);
/*CALL_INFIX_OR_ELSE*/T338 r500start_position(T500* C);
/*CALL_INFIX_OR_ELSE*/T6 r500is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR_ELSE*/T0* r500_P_350_declaration_type(T500* C);
/*CALL_INFIX_OR*/T6 r501is_balanced_operator(T0* a1);
/*CALL_INFIX_OR*/T0* r501declaration_type(T501* C);
/*CALL_INFIX_OR*/T0* r501adapt_for(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501resolve_in(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501eiffel_parser(void);
/*CALL_INFIX_OR*/T0* r501use_current_stack(void);
/*CALL_INFIX_OR*/T0* r501collect(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501specialize_in(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501written_declaration_type_mark(void);
/*CALL_INFIX_OR*/T0* r501simplify(T501* C,T0* a1);
/*CALL_INFIX_OR*/void r501pretty_target(T501* C,T2 a1);
/*CALL_INFIX_OR*/void r501safety_check(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501to_expression(T501* C);
/*CALL_INFIX_OR*/T0* r501specialize_thru(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r501feature_accumulator(void);
/*CALL_INFIX_OR*/T0* r501specialize_and_check(T501* C,T0* a1);
/*CALL_INFIX_OR*/void r501inline_dynamic_dispatch_(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r501to_instruction(T501* C);
/*CALL_INFIX_OR*/T0* r501current_or_twin_init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r501standard_check_export_and_obsolete_calls(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/void r501make(T501* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_OR*/T0* r501arg1(T501* C);
/*CALL_INFIX_OR*/void r501type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/void r501non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_OR*/T6 r501use_current(T501* C,T0* a1);
/*CALL_INFIX_OR*/void r501init(T501* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_OR*/T0* r501static_simplify(T501* C);
/*CALL_INFIX_OR*/T0* r501extra_local_expanded(T501* C,T0* a1);
/*CALL_INFIX_OR*/void r501function_and_argument_count_check(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/void r501pretty(T501* C,T2 a1);
/*CALL_INFIX_OR*/T6 r501side_effect_free(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501non_void_no_dispatch_type(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501run_feature_for(T501* C,T0* a1);
/*CALL_INFIX_OR*/T0* r501inline_with(T501* C,T0* a1,T0* a2);
/*CALL_INFIX_OR*/T0* r501twin(T501* C);
/*CALL_INFIX_OR*/void r501bracketed_pretty(T501* C,T2 a1);
/*CALL_INFIX_OR*/T6 r501is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_OR*/void r501accept(T501* C,T0* a1);
/*CALL_INFIX_OR*/T338 r501start_position(T501* C);
/*CALL_INFIX_OR*/T6 r501is_stored_in_some_local_variable(void);
/*CALL_INFIX_OR*/T0* r501_P_350_declaration_type(T501* C);
/*CALL_INFIX_XOR*/T6 r502is_balanced_operator(T0* a1);
/*CALL_INFIX_XOR*/T0* r502declaration_type(T502* C);
/*CALL_INFIX_XOR*/T0* r502adapt_for(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502resolve_in(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502eiffel_parser(void);
/*CALL_INFIX_XOR*/T0* r502use_current_stack(void);
/*CALL_INFIX_XOR*/T0* r502collect(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502specialize_in(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502written_declaration_type_mark(void);
/*CALL_INFIX_XOR*/T0* r502simplify(T502* C,T0* a1);
/*CALL_INFIX_XOR*/void r502pretty_target(T502* C,T2 a1);
/*CALL_INFIX_XOR*/void r502safety_check(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502to_expression(T502* C);
/*CALL_INFIX_XOR*/T0* r502specialize_thru(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r502feature_accumulator(void);
/*CALL_INFIX_XOR*/T0* r502specialize_and_check(T502* C,T0* a1);
/*CALL_INFIX_XOR*/void r502inline_dynamic_dispatch_(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r502to_instruction(T502* C);
/*CALL_INFIX_XOR*/T0* r502current_or_twin_init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r502standard_check_export_and_obsolete_calls(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/void r502make(T502* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r502arg1(T502* C);
/*CALL_INFIX_XOR*/void r502type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/void r502non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_XOR*/T6 r502use_current(T502* C,T0* a1);
/*CALL_INFIX_XOR*/void r502init(T502* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_XOR*/T0* r502static_simplify(T502* C);
/*CALL_INFIX_XOR*/T0* r502extra_local_expanded(T502* C,T0* a1);
/*CALL_INFIX_XOR*/void r502function_and_argument_count_check(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/void r502pretty(T502* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r502side_effect_free(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502non_void_no_dispatch_type(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502run_feature_for(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T0* r502inline_with(T502* C,T0* a1,T0* a2);
/*CALL_INFIX_XOR*/T0* r502twin(T502* C);
/*CALL_INFIX_XOR*/void r502bracketed_pretty(T502* C,T2 a1);
/*CALL_INFIX_XOR*/T6 r502is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_XOR*/void r502accept(T502* C,T0* a1);
/*CALL_INFIX_XOR*/T338 r502start_position(T502* C);
/*CALL_INFIX_XOR*/T6 r502is_stored_in_some_local_variable(void);
/*CALL_INFIX_XOR*/T0* r502_P_350_declaration_type(T502* C);
/*CALL_INFIX_IMPLIES*/T6 r499is_balanced_operator(T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499declaration_type(T499* C);
/*CALL_INFIX_IMPLIES*/T0* r499adapt_for(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499resolve_in(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499eiffel_parser(void);
/*CALL_INFIX_IMPLIES*/T0* r499use_current_stack(void);
/*CALL_INFIX_IMPLIES*/T0* r499collect(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499specialize_in(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499written_declaration_type_mark(void);
/*CALL_INFIX_IMPLIES*/T0* r499simplify(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r499pretty_target(T499* C,T2 a1);
/*CALL_INFIX_IMPLIES*/void r499safety_check(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499to_expression(T499* C);
/*CALL_INFIX_IMPLIES*/T0* r499specialize_thru(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r499feature_accumulator(void);
/*CALL_INFIX_IMPLIES*/T0* r499specialize_and_check(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r499inline_dynamic_dispatch_(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r499to_instruction(T499* C);
/*CALL_INFIX_IMPLIES*/T0* r499current_or_twin_init(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r499standard_check_export_and_obsolete_calls(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/void r499make(T499* C,T0* a1,T338 a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r499arg1(T499* C);
/*CALL_INFIX_IMPLIES*/void r499type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/void r499non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*CALL_INFIX_IMPLIES*/T6 r499use_current(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r499init(T499* C,T0* a1,T0* a2,T0* a3);
/*CALL_INFIX_IMPLIES*/T0* r499static_simplify(T499* C);
/*CALL_INFIX_IMPLIES*/T0* r499extra_local_expanded(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/void r499function_and_argument_count_check(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/void r499pretty(T499* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r499side_effect_free(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499non_void_no_dispatch_type(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499run_feature_for(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T0* r499inline_with(T499* C,T0* a1,T0* a2);
/*CALL_INFIX_IMPLIES*/T0* r499twin(T499* C);
/*CALL_INFIX_IMPLIES*/void r499bracketed_pretty(T499* C,T2 a1);
/*CALL_INFIX_IMPLIES*/T6 r499is_question_mark_open_operand(T0* a1);
/*CALL_INFIX_IMPLIES*/void r499accept(T499* C,T0* a1);
/*CALL_INFIX_IMPLIES*/T338 r499start_position(T499* C);
/*CALL_INFIX_IMPLIES*/T6 r499is_stored_in_some_local_variable(void);
/*CALL_INFIX_IMPLIES*/T0* r499_P_350_declaration_type(T499* C);
/*CALL_INFIX_IMPLIES*/void r499_P_350_inline_dynamic_dispatch_(T499* C,T0* a1,T0* a2);
/*ADDRESS_OF*/T0* r458specialize_and_check(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458to_expression(T458* C);
/*ADDRESS_OF*/void r458pretty(T458* C,T2 a1);
/*ADDRESS_OF*/T0* r458simplify(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458static_simplify(T458* C);
/*ADDRESS_OF*/T0* r458specialize_in(T458* C,T0* a1);
/*ADDRESS_OF*/void r458inline_dynamic_dispatch_(T458* C,T0* a1,T0* a2);
/*ADDRESS_OF*/void r458safety_check(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458specialize_thru(T458* C,T0* a1,T0* a2,T0* a3);
/*ADDRESS_OF*/T6 r458is_stored_in_some_local_variable(void);
/*ADDRESS_OF*/void r458accept(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458adapt_for(T458* C,T0* a1);
extern T0*oBC458declaration_type;
extern int fBC458declaration_type;
/*ADDRESS_OF*/T0* r458declaration_type(void);
/*ADDRESS_OF*/T0* r458collect(T458* C,T0* a1);
/*ADDRESS_OF*/T338 r458start_position(T458* C);
/*ADDRESS_OF*/T0* r458twin(T458* C);
/*ADDRESS_OF*/T0* r458written_declaration_type_mark(void);
/*ADDRESS_OF*/T6 r458use_current(T458* C,T0* a1);
/*ADDRESS_OF*/void r458bracketed_pretty(T458* C,T2 a1);
/*ADDRESS_OF*/T0* r458non_void_no_dispatch_type(T0* a1);
/*ADDRESS_OF*/T6 r458side_effect_free(T0* a1);
/*ADDRESS_OF*/void r458with_local(T458* C,T0* a1);
/*ADDRESS_OF*/void r458with_feature_name(T458* C,T0* a1);
/*ADDRESS_OF*/T0* r458resolve_in(T0* a1);
/*ADDRESS_OF*/T0* r458to_instruction(T458* C);
/*CLASS_NAME_LIST*/T6 r493wider_than(T493* C,T0* a1);
/*CLASS_NAME_LIST*/void r493merge(T493* C,T0* a1,T0* a2);
/*CLASS_NAME_LIST*/void r493add_last(T493* C,T0* a1);
/*CLASS_NAME_LIST*/T0* r493item(T493* C,T2 a1);
/*CLASS_NAME_LIST*/T2 r493index_of(T493* C,T0* a1);
/*CLASS_NAME_LIST*/void r493locate_in_error_handler(T493* C);
/*CLASS_NAME_LIST*/T6 r493gives_permission_to(T493* C,T0* a1);
/*CLASS_NAME_LIST*/void r493make_1(T493* C,T0* a1);
/*CLASS_NAME_LIST*/void r493append_in(T493* C,T0* a1);
/*CLASS_NAME_LIST*/T2 r493count(T493* C);
/*CLASS_NAME_LIST*/T6 r493gives_permission_to_any(T493* C);
/*CLIENT_LIST*/T283*create283make(T338 a1,T0* a2);
/*CLIENT_LIST*/void r283make(T283* C,T338 a1,T0* a2);
/*CLIENT_LIST*/T6 r283wider_than(T283* C,T0* a1);
/*CLIENT_LIST*/void r283merge(T283* C,T338 a1,T0* a2,T0* a3);
/*CLIENT_LIST*/T0* r283eiffel_view(T283* C);
/*CLIENT_LIST*/T6 r283is_omitted(T283* C);
/*CLIENT_LIST*/T6 r283gives_no_permission(T283* C);
/*CLIENT_LIST*/void r283locate_in_error_handler(T283* C);
/*CLIENT_LIST*/T6 r283gives_permission_to(T283* C,T0* a1);
/*CLIENT_LIST*/T0* r283merge_with(T283* C,T0* a1);
/*CLIENT_LIST*/void r283append_in(T283* C,T0* a1);
/*CLIENT_LIST*/T6 r283gives_permission_to_any(T283* C);
/*EXPORT_LIST*/void r461check_level_2(T461* C,T0* a1,T0* a2);
/*EXPORT_LIST*/void r461make(T461* C,T338 a1,T0* a2);
/*EXPORT_LIST*/T0* r461clients_for(T461* C,T0* a1);
/*EXPORT_ITEM*/void r460make(T460* C,T0* a1,T0* a2);
/*EXPORT_ITEM*/void r460make_all(T460* C,T0* a1);
/*CREATION_CLAUSE*/void r419make(T419* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*CREATION_CLAUSE*/void r419check_manifest_semicolon_check(T419* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r419default_root(T419* C);
/*CREATION_CLAUSE*/T0* r419manifest_make_name(void);
/*CREATION_CLAUSE*/void r419check_manifest_make(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r419extra_expanded_check(T419* C,T0* a1,T0* a2);
/*CREATION_CLAUSE*/void r419check_manifest_put(T0* a1,T0* a2);
/*CREATION_CLAUSE*/T0* r419manifest_semicolon_check_name(void);
/*CREATION_CLAUSE*/void r419check_for(T419* C,T0* a1);
/*CREATION_CLAUSE*/T0* r419manifest_put_name(void);
/*CREATION_CLAUSE*/T0* r419user_expanded_default_create_stamp(T419* C,T0* a1);
/*FEATURE_CLAUSE*/void r428make(T428* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*FEATURE_CLAUSE*/void r428add_into(T428* C,T0* a1);
/*CLUSTER_CLASS*/void r748make(T748* C,T0* a1,T0* a2,T0* a3);
/*TAG_NAME*/void r455make(T455* C,T0* a1,T338 a2);
/*ARGUMENT_NAME2*/T0* r358to_expression(T358* C);
/*ARGUMENT_NAME2*/void r358pretty(T358* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r358simplify(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358static_simplify(T358* C);
/*ARGUMENT_NAME2*/T0* r358specialize_in(T358* C,T0* a1);
/*ARGUMENT_NAME2*/void r358inline_dynamic_dispatch_(T358* C,T0* a1,T0* a2);
/*ARGUMENT_NAME2*/T0* r358specialize_thru(T358* C,T0* a1,T0* a2,T0* a3);
/*ARGUMENT_NAME2*/T6 r358is_stored_in_some_local_variable(void);
/*ARGUMENT_NAME2*/void r358accept(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358adapt_for(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358feature_accumulator(void);
/*ARGUMENT_NAME2*/T0* r358collect(T358* C,T0* a1);
/*ARGUMENT_NAME2*/void r358pretty_target(T358* C,T2 a1);
/*ARGUMENT_NAME2*/T0* r358twin(T358* C);
/*ARGUMENT_NAME2*/T0* r358written_declaration_type_mark(void);
/*ARGUMENT_NAME2*/void r358refer_to(T358* C,T338 a1,T0* a2,T2 a3);
/*ARGUMENT_NAME2*/T6 r358use_current(T0* a1);
/*ARGUMENT_NAME2*/T0* r358non_void_no_dispatch_type(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358to_string(T358* C);
/*ARGUMENT_NAME2*/T6 r358side_effect_free(T0* a1);
/*ARGUMENT_NAME2*/T0* r358resolve_in(T358* C,T0* a1);
/*ARGUMENT_NAME2*/T0* r358to_instruction(T358* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410specialize_and_check(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410to_expression(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/void r410make(T410* C,T0* a1,T338 a2);
/*WRITABLE_ATTRIBUTE_NAME*/void r410pretty(T410* C,T2 a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410simplify(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410static_simplify(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410specialize_in(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r410inline_dynamic_dispatch_(T410* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410specialize_thru(T410* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r410is_stored_in_some_local_variable(void);
/*WRITABLE_ATTRIBUTE_NAME*/void r410accept(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410feature_accumulator(void);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410collect(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/void r410set_feature_stamp_and_type(T410* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE_NAME*/T338 r410start_position(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410twin(T410* C);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r410use_current(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410non_void_no_dispatch_type(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T6 r410side_effect_free(T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410resolve_in(T410* C,T0* a1);
/*WRITABLE_ATTRIBUTE_NAME*/T0* r410to_instruction(T410* C);
/*LOCAL_NAME2*/T0* r393to_expression(T393* C);
/*LOCAL_NAME2*/void r393pretty(T393* C,T2 a1);
/*LOCAL_NAME2*/T0* r393simplify(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393static_simplify(T393* C);
/*LOCAL_NAME2*/T0* r393specialize_in(T393* C,T0* a1);
/*LOCAL_NAME2*/void r393inline_dynamic_dispatch_(T393* C,T0* a1,T0* a2);
/*LOCAL_NAME2*/T0* r393specialize_thru(T393* C,T0* a1,T0* a2,T0* a3);
/*LOCAL_NAME2*/T6 r393is_stored_in_some_local_variable(void);
/*LOCAL_NAME2*/void r393accept(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393adapt_for(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393collect(T393* C,T0* a1);
/*LOCAL_NAME2*/void r393pretty_target(T393* C,T2 a1);
/*LOCAL_NAME2*/T0* r393twin(T393* C);
/*LOCAL_NAME2*/void r393refer_to(T393* C,T338 a1,T0* a2,T2 a3);
/*LOCAL_NAME2*/T6 r393use_current(T0* a1);
/*LOCAL_NAME2*/T0* r393non_void_no_dispatch_type(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393to_string(T393* C);
/*LOCAL_NAME2*/T6 r393side_effect_free(T0* a1);
/*LOCAL_NAME2*/T0* r393resolve_in(T393* C,T0* a1);
/*LOCAL_NAME2*/T0* r393to_instruction(T393* C);
/*RUN_TIME_SET*/void r530make(T530* C,T0* a1);
/*RUN_TIME_SET*/T2 r530add_set(T530* C,T0* a1);
/*RUN_TIME_SET*/void r530id_extra_information(T530* C,T0* a1);
/*RUN_TIME_SET*/T6 r530is_empty(T530* C);
/*RUN_TIME_SET*/T2 r530count(T530* C);
/*WRITABLE_ATTRIBUTE*/T0* r430specialized_ensure_thru(T430* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_signature_in(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r430try_to_undefine_aux(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r430collect(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_require_thru(T430* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/void r430with(T430* C,T0* a1,T0* a2,T2 a3);
/*WRITABLE_ATTRIBUTE*/T0* r430simplify(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r430arguments(void);
/*WRITABLE_ATTRIBUTE*/T0* r430specialized_require_thru(T430* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r430first_name(T430* C);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_and_check(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r430names(T430* C);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_require_in(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r430add_into(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r430merge_signature_thru(T430* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*WRITABLE_ATTRIBUTE*/T0* r430try_to_undefine(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r430make(T430* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/void r430add_into_(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r430new_run_feature_for(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/void r430valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T6 r430use_current(T0* a1);
/*WRITABLE_ATTRIBUTE*/void r430obsolete_warning_check(T430* C,T0* a1,T338 a2);
/*WRITABLE_ATTRIBUTE*/T0* r430change_ensure(T430* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r430brand_new_run_feature_for(T430* C,T0* a1,T0* a2,T6 a3);
/*WRITABLE_ATTRIBUTE*/void r430pretty_print_names(T430* C);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_permissions(T430* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/void r430pretty(T430* C,T2 a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T6 r430same_body_as(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/void r430inline_dynamic_dispatch(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_body_thru(T430* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T6 r430same_signature(T430* C,T0* a1,T0* a2);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_signature_thru(T430* C,T0* a1,T0* a2,T0* a3);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_ensure_in(T430* C,T0* a1,T6 a2);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_ensure_thru(T430* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*WRITABLE_ATTRIBUTE*/T0* r430twin(T430* C);
/*WRITABLE_ATTRIBUTE*/void r430accept(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r430inline_expression_0(T430* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*WRITABLE_ATTRIBUTE*/T6 r430valid_redefinition(T430* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*WRITABLE_ATTRIBUTE*/T0* r430change_require(T430* C,T0* a1,T6 a2);
extern T0*oBC336obsolete_warning_check_memory;
extern int fBC336obsolete_warning_check_memory;
/*WRITABLE_ATTRIBUTE*/T0* r430obsolete_warning_check_memory(void);
/*WRITABLE_ATTRIBUTE*/T338 r430start_position(T430* C);
/*WRITABLE_ATTRIBUTE*/void r430set_rescue_compound(T430* C,T0* a1);
/*WRITABLE_ATTRIBUTE*/T0* r430specialize_body_in(T430* C,T0* a1,T6 a2);
/*CLASS_INVARIANT*/T0* r422specialize_and_check(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422to_expression(T422* C);
/*CLASS_INVARIANT*/void r422make(T422* C,T338 a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/T6 r422has_assertion_located_at(T422* C,T338 a1);
/*CLASS_INVARIANT*/void r422pretty(T422* C,T2 a1);
/*CLASS_INVARIANT*/T0* r422simplify(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422specialize_in(T422* C,T0* a1);
/*CLASS_INVARIANT*/void r422inline_dynamic_dispatch_(T422* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/T6 r422is_always_true(T422* C,T0* a1);
/*CLASS_INVARIANT*/void r422safety_check(T422* C,T0* a1);
/*CLASS_INVARIANT*/void r422set_list(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422specialize_thru(T422* C,T0* a1,T0* a2,T0* a3);
/*CLASS_INVARIANT*/void r422pretty_as_loop_invariant(T422* C,T2 a1);
/*CLASS_INVARIANT*/T2 r422upper(T422* C);
/*CLASS_INVARIANT*/void r422accept(T422* C,T0* a1);
/*CLASS_INVARIANT*/void r422set_eiffel_parser_stamp(T422* C,T2 a1);
/*CLASS_INVARIANT*/T0* r422adapt_for(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422item(T422* C,T2 a1);
/*CLASS_INVARIANT*/T0* r422add_items_from(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422collect(T422* C,T0* a1);
/*CLASS_INVARIANT*/void r422pretty_print_with_tag(T422* C,T2 a1,T0* a2);
/*CLASS_INVARIANT*/T6 r422is_empty(T422* C);
/*CLASS_INVARIANT*/T0* r422twin(T422* C);
/*CLASS_INVARIANT*/void r422pretty_as_check_compound(T422* C,T2 a1);
/*CLASS_INVARIANT*/T6 r422use_current(T422* C,T0* a1);
/*CLASS_INVARIANT*/void r422breakpoint(T422* C);
/*CLASS_INVARIANT*/void r422crash(T422* C);
/*CLASS_INVARIANT*/T6 r422side_effect_free(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422inline_dynamic_dispatch(T422* C,T0* a1,T0* a2);
/*CLASS_INVARIANT*/void r422not_yet_implemented(T422* C);
/*CLASS_INVARIANT*/T2 r422count(T422* C);
/*CLASS_INVARIANT*/void r422do_all(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422specialize_without_checks(T422* C,T0* a1);
/*CLASS_INVARIANT*/T0* r422to_instruction(T422* C);
/*CLASS_INVARIANT*/T2 r422lower(T422* C);
/*PARENT_LISTS*/void r450check_level_2(T450* C,T0* a1);
/*PARENT_LISTS*/void r450make(T450* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*PARENT_LISTS*/T0* r450insert_edge(T450* C,T2 a1);
/*PARENT_LISTS*/T0* r450inherit_edge(T450* C,T2 a1);
/*PARENT_LISTS*/void r450initialize_and_check_level_1(T450* C);
/*PARENT_LISTS*/T6 r450get_permission_of(T450* C,T0* a1);
/*PARENT_LISTS*/void r450id_extra_information(T450* C,T0* a1);
/*PARENT_LISTS*/T2 r450inherit_count(T450* C);
/*PARENT_LISTS*/T338 r450undefine_position_of(T450* C,T0* a1);
/*PARENT_LISTS*/void r450set_insert_member(T450* C,T2 a1);
/*PARENT_LISTS*/T2 r450insert_count(T450* C);
/*FEATURE_CLAUSE_LIST*/void r427make(T427* C,T0* a1);
/*FEATURE_CLAUSE_LIST*/void r427get_started(T427* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r447make(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r447all_positions_in_error_handler(T447* C);
/*CREATION_CLAUSE_LIST*/T0* r447get_clause(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r447default_root(T447* C);
/*CREATION_CLAUSE_LIST*/void r447extra_expanded_check(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T338 r447start_position(T447* C);
/*CREATION_CLAUSE_LIST*/T0* r447root_creation_search(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/void r447check_for(T447* C,T0* a1);
/*CREATION_CLAUSE_LIST*/T0* r447user_expanded_default_create_stamp(T447* C,T0* a1);
/*INDEX_LIST*/void r425make(T425* C,T0* a1);
/*GRAPH_NODE*/void r523make(T523* C,T0* a1);
/*GRAPH_NODE*/T2 r523recompute_run_time_set(T523* C,T2 a1);
/*GRAPH_NODE*/void r523id_extra_information(T523* C,T0* a1);
/*GRAPH_NODE*/void r523reset(T523* C);
/*GRAPH_NODE*/void r523collect_way_to(T523* C,T0* a1);
/*GRAPH_NODE*/T2 r523destination_count(T523* C);
/*GRAPH_NODE*/T2 r523run_time_set_add(T523* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T525*create525make(T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r525specialize_and_check(T525* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r525to_expression(T525* C);
/*NON_VOID_NO_DISPATCH*/void r525make(T525* C,T0* a1,T0* a2,T0* a3);
/*NON_VOID_NO_DISPATCH*/T0* r525simplify(T525* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r525once_function(T525* C);
/*NON_VOID_NO_DISPATCH*/T0* r525static_simplify(T525* C);
/*NON_VOID_NO_DISPATCH*/void r525inline_dynamic_dispatch_(T525* C,T0* a1,T0* a2);
/*NON_VOID_NO_DISPATCH*/T0* r525run_feature(T525* C);
/*NON_VOID_NO_DISPATCH*/T6 r525is_stored_in_some_local_variable(void);
/*NON_VOID_NO_DISPATCH*/void r525accept(T525* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r525collect(T525* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T338 r525start_position(T525* C);
/*NON_VOID_NO_DISPATCH*/T0* r525twin(T525* C);
/*NON_VOID_NO_DISPATCH*/T0* r525written_declaration_type_mark(void);
/*NON_VOID_NO_DISPATCH*/T6 r525use_current(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r525non_void_no_dispatch_type(T525* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T6 r525side_effect_free(T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r525external_function(T525* C);
/*NON_VOID_NO_DISPATCH*/T0* r525resolve_in(T525* C,T0* a1);
/*NON_VOID_NO_DISPATCH*/T0* r525to_instruction(T525* C);
/*AGENT_ARGS*/T6 r558is_equal(T558* C,T0* a1);
/*AGENT_ARGS*/void r558make(T558* C,T0* a1,T0* a2);
/*AGENT_ARGS*/T2 r558hash_code(T558* C);
/*EXTERNAL_FUNCTION*/void r400add_into_shared(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400inline_expression_1(T400* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T0* r400inline_expression_0(T400* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_FUNCTION*/void r400inline_dynamic_dispatch(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400specialize_signature_in(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400specialize_require_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400specialize_permissions(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400c_plus_plus_name(T400* C);
/*EXTERNAL_FUNCTION*/T0* r400specialized_ensure_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400external_name(T400* C);
/*EXTERNAL_FUNCTION*/T0* r400specialize_ensure_thru(T400* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r400specialized_require_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400true_or_false(T6 a1,T338 a2);
/*EXTERNAL_FUNCTION*/T0* r400try_to_undefine_aux(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r400make_external_routine(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400specialize_body_thru(T400* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_FUNCTION*/T0* r400specialize_body_in(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400integer_constant(T0* a1);
/*EXTERNAL_FUNCTION*/void r400set_rescue_compound(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400simplify(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400specialize_ensure_in(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400first_name(T400* C);
/*EXTERNAL_FUNCTION*/void r400pretty_print_names(T400* C);
/*EXTERNAL_FUNCTION*/void r400add_into(T400* C,T0* a1,T0* a2);
extern T0*oBC32any_copy_fs;
extern int fBC32any_copy_fs;
/*EXTERNAL_FUNCTION*/T0* r400any_copy_fs(void);
/*EXTERNAL_FUNCTION*/T6 r400same_signature(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400brand_new_run_feature_for(T400* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_FUNCTION*/void r400accept(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400try_to_undefine(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r400hook_collect(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400echo(void);
/*EXTERNAL_FUNCTION*/void r400init(T400* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_FUNCTION*/void r400inline_dynamic_dispatch_(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T0* r400change_ensure(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400names(T400* C);
/*EXTERNAL_FUNCTION*/T0* r400specialize_and_check(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400current_or_twin_init(T400* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_FUNCTION*/T0* r400merge_signature_thru(T400* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/void r400make_routine(T400* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/void r400collect(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400twin(T400* C);
/*EXTERNAL_FUNCTION*/T6 r400use_current(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T0* r400adapt_routine_body_for(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400collect_internals_handler(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/void r400pretty(T400* C,T2 a1,T6 a2);
/*EXTERNAL_FUNCTION*/T0* r400specialize_signature_thru(T400* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_FUNCTION*/T0* r400new_run_feature_for(T400* C,T0* a1,T0* a2);
/*EXTERNAL_FUNCTION*/T6 r400valid_redefinition(T400* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r400current_or_twin_init_no_body(T400* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_FUNCTION*/T0* r400specialize_require_in(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400add_into_(T400* C,T0* a1,T0* a2);
extern T0*oBC32clear_all_name;
extern int fBC32clear_all_name;
/*EXTERNAL_FUNCTION*/T0* r400clear_all_name(void);
/*EXTERNAL_FUNCTION*/void r400collect_body(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_FUNCTION*/T0* r400change_require(T400* C,T0* a1,T6 a2);
/*EXTERNAL_FUNCTION*/T2 r400argument_rank_of(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T6 r400same_body_as(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/void r400make(T400* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*EXTERNAL_FUNCTION*/T6 r400side_effect_free(T400* C,T0* a1);
/*EXTERNAL_FUNCTION*/T338 r400start_position(T400* C);
/*EXTERNAL_FUNCTION*/void r400obsolete_warning_check(T400* C,T0* a1,T338 a2);
extern T0*oBC32copy_name;
extern int fBC32copy_name;
/*EXTERNAL_FUNCTION*/T0* r400copy_name(void);
/*EXTERNAL_FUNCTION*/T0* r400obsolete_warning_check_memory(void);
/*EXTERNAL_FUNCTION*/void r400pretty_print_routine_body(T400* C,T2 a1);
extern T0*oBC633implicit_any;
extern int fBC633implicit_any;
/*ANONYMOUS_FEATURE_MIXER*/T0* r633implicit_any(void);
/*ANONYMOUS_FEATURE_MIXER*/void r633make(T633* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r633error_handler_show_resulting_client_list(T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r633remove_body(T633* C);
/*ANONYMOUS_FEATURE_MIXER*/void r633specialize_feature(T633* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r633build_precursor(T633* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r633set_body(T633* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/void r633add_local_definition(T633* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r633error_handler_add_export_positions(T633* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/void r633add_inherited_definition(T633* C,T0* a1,T0* a2,T0* a3);
/*ANONYMOUS_FEATURE_MIXER*/T0* r633result_type(T633* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r633specialize_precursor(T633* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ANONYMOUS_FEATURE_MIXER*/T0* r633formal_arg_list(T633* C,T0* a1);
/*ANONYMOUS_FEATURE_MIXER*/T0* r633export_status_for(T633* C,T0* a1,T0* a2);
/*ANONYMOUS_FEATURE_MIXER*/void r633specialize_signature(T633* C,T0* a1);
/*ABSOLUTE_FEATURE_NAME*/T6 r335is_equal(T335* C,T335 a1);
/*ABSOLUTE_FEATURE_NAME*/void r335make(T335* C,T0* a1,T0* a2);
/*ABSOLUTE_FEATURE_NAME*/T6 r335matches(T335* C,T0* a1,T0* a2);
/*RUN_FEATURE_2*/void r406compute_use_current(T406* C);
/*RUN_FEATURE_2*/void r406for(T406* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_2*/T6 r406need_c_function(T406* C);
/*RUN_FEATURE_2*/void r406accept(T406* C,T0* a1);
/*RUN_FEATURE_2*/void r406set_result_type(T406* C);
/*RUN_FEATURE_2*/T338 r406start_position(T406* C);
/*RUN_FEATURE_2*/T6 r406use_current(T406* C);
/*RUN_FEATURE_2*/void r406mapping_name_in(T406* C,T0* a1);
/*RUN_FEATURE_2*/void r406do_adapt(T406* C);
/*RUN_FEATURE_2*/T0* r406arguments(void);
/*RUN_FEATURE_2*/void r406adapt(T406* C);
/*RUN_FEATURE_2*/T0* r406feature_stamp(T406* C);
/*CECIL_ENTRY*/void r559make(T559* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CECIL_ENTRY*/T0* r559echo(void);
/*CECIL_ENTRY*/void r559on_echo(T559* C,T0* a1);
/*CECIL_ENTRY*/void r559get_started(T559* C,T0* a1);
/*CECIL_ENTRY*/T0* r559default_create_name(void);
/*CECIL_ENTRY*/T0* r559collect(T559* C,T0* a1);
/*CECIL_ENTRY*/T0* r559any_default_create_fs(void);
/*CECIL_ENTRY*/void r559inline_dynamic_dispatch(T559* C,T0* a1,T0* a2);
/*CECIL_ENTRY*/T0* r559anonymous_feature(T559* C);
/*STRING_RECYCLING_ITEM*/void r311set_item(T311* C,T0* a1);
/*STRING_RECYCLING_ITEM*/T0* r311item(T311* C);
/*STRING_RECYCLING_ITEM_SORTER*/T2 r712insert_index(T0* a1,T311 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r712lt(T311 a1,T311 a2);
/*STRING_RECYCLING_ITEM_SORTER*/T6 r712lte(T311 a1,T311 a2);
/*PROCESS_FACTORY*/void r522default_create(T522* C);
extern T0*oBC522default_group;
extern int fBC522default_group;
/*PROCESS_FACTORY*/T0* r522default_group(T522* C);
/*PROCESS_FACTORY*/T0* r522create_group(T522* C);
/*PROCESS_FACTORY*/void r522crash(T522* C);
/*PROCESS_FACTORY*/void r522not_yet_implemented(T522* C);
/*PROCESS_FACTORY*/T0* r522create_process(T522* C);
/*POSIX_PATH_NAME*/void r771remove_last(T771* C);
/*POSIX_PATH_NAME*/void r771make_empty(T771* C);
/*POSIX_PATH_NAME*/void r771start_join(T771* C,T0* a1,T2 a2);
/*POSIX_PATH_NAME*/void r771join_element(T771* C,T0* a1);
/*POSIX_PATH_NAME*/T2 r771start_join_to(T771* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r771drive_specification(void);
/*POSIX_PATH_NAME*/void r771end_join(T771* C);
/*POSIX_PATH_NAME*/void r771make_from_string(T771* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r771last(T771* C);
/*POSIX_PATH_NAME*/void r771add_last(T771* C,T0* a1);
/*POSIX_PATH_NAME*/T6 r771is_separator(T3 a1);
/*POSIX_PATH_NAME*/T6 r771is_absolute(T771* C);
/*POSIX_PATH_NAME*/void r771go_up(T771* C);
/*POSIX_PATH_NAME*/void r771make_current(T771* C);
/*POSIX_PATH_NAME*/T2 r771scan_element(T771* C,T2 a1,T0* a2);
/*POSIX_PATH_NAME*/T6 r771is_valid_path(T0* a1);
/*POSIX_PATH_NAME*/void r771join_to(T771* C,T0* a1);
/*POSIX_PATH_NAME*/void r771join(T771* C,T0* a1);
/*POSIX_PATH_NAME*/T0* r771short_name(T771* C);
/*POSIX_PATH_NAME*/void r771join_element_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/void r771join_directory_to(T0* a1,T0* a2);
/*POSIX_PATH_NAME*/T2 r771count(T771* C);
/*POSIX_PATH_NAME*/void r771make_root(T771* C);
/*CST_ATT_CHARACTER*/T0* r640specialized_ensure_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r640try_to_undefine_aux(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r640collect(T640* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r640specialize_require_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r640simplify(T640* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r640arguments(void);
/*CST_ATT_CHARACTER*/T0* r640specialized_require_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r640first_name(T640* C);
/*CST_ATT_CHARACTER*/T0* r640specialize_and_check(T640* C,T0* a1);
/*CST_ATT_CHARACTER*/void r640collect_body(T640* C,T0* a1);
/*CST_ATT_CHARACTER*/T0* r640names(T640* C);
/*CST_ATT_CHARACTER*/T0* r640specialize_require_in(T640* C,T0* a1);
/*CST_ATT_CHARACTER*/void r640add_into(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r640merge_signature_thru(T640* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_CHARACTER*/T0* r640try_to_undefine(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r640make(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r640add_into_(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r640new_run_feature_for(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/void r640valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T6 r640use_current(T0* a1);
/*CST_ATT_CHARACTER*/void r640obsolete_warning_check(T640* C,T0* a1,T338 a2);
/*CST_ATT_CHARACTER*/T0* r640change_ensure(T640* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r640brand_new_run_feature_for(T640* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_CHARACTER*/void r640pretty_print_names(T640* C);
/*CST_ATT_CHARACTER*/T0* r640specialize_permissions(T640* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/void r640pretty(T640* C,T2 a1,T6 a2);
/*CST_ATT_CHARACTER*/T6 r640same_body_as(T640* C,T0* a1);
/*CST_ATT_CHARACTER*/void r640inline_dynamic_dispatch(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T6 r640same_signature(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r640specialize_signature_thru(T640* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_CHARACTER*/T0* r640specialize_ensure_in(T640* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r640specialize_ensure_thru(T640* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_CHARACTER*/T0* r640twin(T640* C);
/*CST_ATT_CHARACTER*/void r640add_into_shared(T640* C,T0* a1,T0* a2);
/*CST_ATT_CHARACTER*/T0* r640inline_expression_0(T640* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_CHARACTER*/T6 r640valid_redefinition(T640* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_CHARACTER*/T0* r640change_require(T640* C,T0* a1,T6 a2);
/*CST_ATT_CHARACTER*/T0* r640obsolete_warning_check_memory(void);
/*CST_ATT_CHARACTER*/T338 r640start_position(T640* C);
/*CST_ATT_CHARACTER*/void r640set_rescue_compound(T640* C,T0* a1);
/*CST_ATT_STRING*/T0* r648specialized_ensure_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r648try_to_undefine_aux(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r648collect(T648* C,T0* a1);
/*CST_ATT_STRING*/T0* r648specialize_require_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/void r648with(T648* C,T0* a1,T0* a2,T2 a3);
/*CST_ATT_STRING*/T0* r648simplify(T648* C,T0* a1);
/*CST_ATT_STRING*/T0* r648arguments(void);
/*CST_ATT_STRING*/T0* r648specialized_require_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r648first_name(T648* C);
/*CST_ATT_STRING*/T0* r648specialize_and_check(T648* C,T0* a1);
/*CST_ATT_STRING*/void r648collect_body(T648* C,T0* a1);
/*CST_ATT_STRING*/T0* r648names(T648* C);
/*CST_ATT_STRING*/T0* r648specialize_require_in(T648* C,T0* a1);
/*CST_ATT_STRING*/void r648add_into(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r648merge_signature_thru(T648* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_STRING*/T0* r648try_to_undefine(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r648make(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r648add_into_(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r648new_run_feature_for(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/void r648valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T6 r648use_current(T0* a1);
/*CST_ATT_STRING*/void r648obsolete_warning_check(T648* C,T0* a1,T338 a2);
/*CST_ATT_STRING*/T0* r648change_ensure(T648* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r648brand_new_run_feature_for(T648* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_STRING*/void r648pretty_print_names(T648* C);
/*CST_ATT_STRING*/T0* r648specialize_permissions(T648* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/void r648pretty(T648* C,T2 a1,T6 a2);
/*CST_ATT_STRING*/T6 r648same_body_as(T648* C,T0* a1);
/*CST_ATT_STRING*/void r648inline_dynamic_dispatch(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T6 r648same_signature(T648* C,T0* a1,T0* a2);
/*CST_ATT_STRING*/T0* r648specialize_signature_thru(T648* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_STRING*/T0* r648specialize_ensure_in(T648* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r648specialize_ensure_thru(T648* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_STRING*/T0* r648twin(T648* C);
/*CST_ATT_STRING*/T0* r648inline_expression_0(T648* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_STRING*/T6 r648valid_redefinition(T648* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_STRING*/T0* r648change_require(T648* C,T0* a1,T6 a2);
/*CST_ATT_STRING*/T0* r648obsolete_warning_check_memory(void);
/*CST_ATT_STRING*/T338 r648start_position(T648* C);
/*CST_ATT_STRING*/void r648set_rescue_compound(T648* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560specialized_ensure_thru(T560* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r560specialize_signature_in(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560try_to_undefine_aux(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r560collect(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560specialize_require_thru(T560* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T6 r560empty_body_side_effect_free_effective_routine(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560simplify(T560* C,T0* a1);
/*ONCE_FUNCTION*/void r560pretty_print_routine_body(T560* C,T2 a1);
extern T0*oBC560type_std_output;
extern int fBC560type_std_output;
/*ONCE_FUNCTION*/T0* r560type_std_output(void);
/*ONCE_FUNCTION*/T0* r560specialized_require_thru(T560* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/void r560pretty_print_rescue(T560* C,T2 a1);
extern T0*oBC32flush_name;
extern int fBC32flush_name;
/*ONCE_FUNCTION*/T0* r560flush_name(void);
/*ONCE_FUNCTION*/T0* r560first_name(T560* C);
/*ONCE_FUNCTION*/T0* r560specialize_and_check(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560rescue_compound_in(T560* C,T0* a1);
/*ONCE_FUNCTION*/void r560collect_body(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560names(T560* C);
/*ONCE_FUNCTION*/T0* r560specialize_require_in(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r560inline_dynamic_dispatch_(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T6 r560no_rescue_no_local_expanded_in(T560* C,T0* a1);
/*ONCE_FUNCTION*/void r560add_into(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r560make_effective_routine(T560* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T0* r560merge_signature_thru(T560* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_FUNCTION*/void r560make_routine(T560* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r560try_to_undefine(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r560make(T560* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*ONCE_FUNCTION*/void r560add_into_(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r560new_run_feature_for(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r560valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T6 r560use_current(T560* C,T0* a1);
/*ONCE_FUNCTION*/void r560obsolete_warning_check(T560* C,T0* a1,T338 a2);
/*ONCE_FUNCTION*/void r560init(T560* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r560change_ensure(T560* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r560brand_new_run_feature_for(T560* C,T0* a1,T0* a2,T6 a3);
/*ONCE_FUNCTION*/void r560pretty_print_once_or_do(T2 a1);
/*ONCE_FUNCTION*/void r560pretty_print_names(T560* C);
/*ONCE_FUNCTION*/T0* r560specialize_permissions(T560* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/void r560hook_collect(T560* C,T0* a1);
/*ONCE_FUNCTION*/void r560pretty(T560* C,T2 a1,T6 a2);
/*ONCE_FUNCTION*/T6 r560same_body_as(T560* C,T0* a1);
/*ONCE_FUNCTION*/void r560inline_dynamic_dispatch(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T0* r560specialize_body_thru(T560* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T6 r560same_signature(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/T338 r560sedb_trace_before_exit(T560* C);
/*ONCE_FUNCTION*/T0* r560specialize_signature_thru(T560* C,T0* a1,T0* a2,T0* a3);
/*ONCE_FUNCTION*/T0* r560specialize_ensure_in(T560* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r560specialize_ensure_thru(T560* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_FUNCTION*/T0* r560twin(T560* C);
/*ONCE_FUNCTION*/void r560add_into_shared(T560* C,T0* a1,T0* a2);
/*ONCE_FUNCTION*/void r560accept(T560* C,T0* a1);
/*ONCE_FUNCTION*/T0* r560inline_expression_0(T560* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*ONCE_FUNCTION*/T6 r560valid_redefinition(T560* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_FUNCTION*/T0* r560change_require(T560* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T0* r560obsolete_warning_check_memory(void);
/*ONCE_FUNCTION*/T338 r560start_position(T560* C);
/*ONCE_FUNCTION*/T0* r560specialize_body_in(T560* C,T0* a1,T6 a2);
/*ONCE_FUNCTION*/T6 r560_P_336_same_body_as(T560* C,T0* a1);
/*CST_ATT_REAL*/T0* r653specialized_ensure_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r653try_to_undefine_aux(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r653collect(T653* C,T0* a1);
/*CST_ATT_REAL*/T0* r653specialize_require_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r653simplify(T653* C,T0* a1);
/*CST_ATT_REAL*/T0* r653arguments(void);
/*CST_ATT_REAL*/T0* r653specialized_require_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r653first_name(T653* C);
/*CST_ATT_REAL*/T0* r653specialize_and_check(T653* C,T0* a1);
/*CST_ATT_REAL*/void r653collect_body(T653* C,T0* a1);
/*CST_ATT_REAL*/T0* r653names(T653* C);
/*CST_ATT_REAL*/T0* r653specialize_require_in(T653* C,T0* a1);
/*CST_ATT_REAL*/void r653add_into(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r653merge_signature_thru(T653* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_REAL*/T0* r653try_to_undefine(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r653make(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r653add_into_(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r653new_run_feature_for(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/void r653valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T6 r653use_current(T0* a1);
/*CST_ATT_REAL*/void r653obsolete_warning_check(T653* C,T0* a1,T338 a2);
/*CST_ATT_REAL*/T0* r653change_ensure(T653* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r653brand_new_run_feature_for(T653* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_REAL*/void r653pretty_print_names(T653* C);
/*CST_ATT_REAL*/T0* r653specialize_permissions(T653* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/void r653pretty(T653* C,T2 a1,T6 a2);
/*CST_ATT_REAL*/T6 r653same_body_as(T653* C,T0* a1);
/*CST_ATT_REAL*/void r653inline_dynamic_dispatch(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T6 r653same_signature(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r653specialize_signature_thru(T653* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_REAL*/T0* r653specialize_ensure_in(T653* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r653specialize_ensure_thru(T653* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_REAL*/T0* r653twin(T653* C);
/*CST_ATT_REAL*/void r653add_into_shared(T653* C,T0* a1,T0* a2);
/*CST_ATT_REAL*/T0* r653inline_expression_0(T653* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_REAL*/T6 r653valid_redefinition(T653* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_REAL*/T0* r653change_require(T653* C,T0* a1,T6 a2);
/*CST_ATT_REAL*/T0* r653obsolete_warning_check_memory(void);
/*CST_ATT_REAL*/T338 r653start_position(T653* C);
/*CST_ATT_REAL*/void r653set_rescue_compound(T653* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r650specialized_ensure_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r650try_to_undefine_aux(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r650collect(T650* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r650specialize_require_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/void r650pretty_constant_value(T650* C,T2 a1);
/*CST_ATT_BOOLEAN*/T0* r650simplify(T650* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r650arguments(void);
/*CST_ATT_BOOLEAN*/T0* r650specialized_require_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r650first_name(T650* C);
/*CST_ATT_BOOLEAN*/T0* r650specialize_and_check(T650* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r650collect_body(T650* C,T0* a1);
/*CST_ATT_BOOLEAN*/T0* r650names(T650* C);
/*CST_ATT_BOOLEAN*/T0* r650specialize_require_in(T650* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r650add_into(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r650merge_signature_thru(T650* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_BOOLEAN*/T0* r650try_to_undefine(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r650make(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r650add_into_(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r650new_run_feature_for(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/void r650valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T6 r650use_current(T0* a1);
/*CST_ATT_BOOLEAN*/void r650obsolete_warning_check(T650* C,T0* a1,T338 a2);
/*CST_ATT_BOOLEAN*/T0* r650change_ensure(T650* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r650brand_new_run_feature_for(T650* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_BOOLEAN*/void r650pretty_print_names(T650* C);
/*CST_ATT_BOOLEAN*/T0* r650specialize_permissions(T650* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/void r650pretty(T650* C,T2 a1,T6 a2);
/*CST_ATT_BOOLEAN*/T6 r650same_body_as(T650* C,T0* a1);
/*CST_ATT_BOOLEAN*/void r650inline_dynamic_dispatch(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T6 r650same_signature(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r650specialize_signature_thru(T650* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_BOOLEAN*/T0* r650specialize_ensure_in(T650* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r650specialize_ensure_thru(T650* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_BOOLEAN*/T0* r650twin(T650* C);
/*CST_ATT_BOOLEAN*/void r650add_into_shared(T650* C,T0* a1,T0* a2);
/*CST_ATT_BOOLEAN*/T0* r650inline_expression_0(T650* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_BOOLEAN*/T6 r650valid_redefinition(T650* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_BOOLEAN*/T0* r650change_require(T650* C,T0* a1,T6 a2);
/*CST_ATT_BOOLEAN*/T0* r650obsolete_warning_check_memory(void);
/*CST_ATT_BOOLEAN*/T338 r650start_position(T650* C);
/*CST_ATT_BOOLEAN*/void r650set_rescue_compound(T650* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r651specialized_ensure_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r651specialize_signature_in(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r651try_to_undefine_aux(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r651collect(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r651specialize_require_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/void r651from_effective(T651* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*DEFERRED_FUNCTION*/T0* r651simplify(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/void r651pretty_print_routine_body(T2 a1);
/*DEFERRED_FUNCTION*/T0* r651specialized_require_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r651first_name(T651* C);
/*DEFERRED_FUNCTION*/T0* r651specialize_and_check(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/T0* r651names(T651* C);
/*DEFERRED_FUNCTION*/T0* r651specialize_require_in(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/void r651add_into(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r651merge_signature_thru(T651* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_FUNCTION*/void r651make_routine(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r651try_to_undefine(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r651make(T651* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*DEFERRED_FUNCTION*/void r651add_into_(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r651new_run_feature_for(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r651valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T6 r651use_current(T0* a1);
/*DEFERRED_FUNCTION*/void r651obsolete_warning_check(T651* C,T0* a1,T338 a2);
/*DEFERRED_FUNCTION*/T0* r651change_ensure(T651* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r651brand_new_run_feature_for(T651* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_FUNCTION*/void r651pretty_print_names(T651* C);
/*DEFERRED_FUNCTION*/T0* r651specialize_permissions(T651* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/void r651pretty(T651* C,T2 a1,T6 a2);
/*DEFERRED_FUNCTION*/T6 r651same_body_as(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/void r651inline_dynamic_dispatch(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T6 r651same_signature(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/T0* r651specialize_signature_thru(T651* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_FUNCTION*/T0* r651specialize_ensure_in(T651* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r651specialize_ensure_thru(T651* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_FUNCTION*/T0* r651twin(T651* C);
/*DEFERRED_FUNCTION*/void r651add_into_shared(T651* C,T0* a1,T0* a2);
/*DEFERRED_FUNCTION*/void r651accept(T651* C,T0* a1);
/*DEFERRED_FUNCTION*/T6 r651valid_redefinition(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_FUNCTION*/T0* r651change_require(T651* C,T0* a1,T6 a2);
/*DEFERRED_FUNCTION*/T0* r651obsolete_warning_check_memory(void);
/*DEFERRED_FUNCTION*/T338 r651start_position(T651* C);
/*DEFERRED_FUNCTION*/void r651set_rescue_compound(T651* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r646specialized_ensure_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r646current_or_twin_init_no_body(T646* C,T0* a1,T6 a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_signature_in(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r646try_to_undefine_aux(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646eiffel_parser(void);
/*EXTERNAL_PROCEDURE*/void r646collect(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_require_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r646simplify(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646pretty_print_routine_body(T646* C,T2 a1);
/*EXTERNAL_PROCEDURE*/T0* r646specialized_require_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/void r646make_external_routine(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646first_name(T646* C);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_and_check(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646collect_body(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r646names(T646* C);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_require_in(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646inline_dynamic_dispatch_(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646current_or_twin_init(T646* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5,T6 a6);
/*EXTERNAL_PROCEDURE*/void r646add_into(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646merge_signature_thru(T646* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*EXTERNAL_PROCEDURE*/void r646make_routine(T646* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r646try_to_undefine(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r646make(T646* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*EXTERNAL_PROCEDURE*/void r646add_into_(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646new_run_feature_for(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646echo(void);
/*EXTERNAL_PROCEDURE*/T0* r646result_type(void);
/*EXTERNAL_PROCEDURE*/void r646valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r646adapt_routine_body_for(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r646use_current(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646obsolete_warning_check(T646* C,T0* a1,T338 a2);
/*EXTERNAL_PROCEDURE*/void r646init(T646* C,T0* a1,T0* a2,T6 a3,T0* a4,T0* a5);
/*EXTERNAL_PROCEDURE*/T2 r646argument_rank_of(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r646external_name(T646* C);
/*EXTERNAL_PROCEDURE*/T0* r646change_ensure(T646* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r646brand_new_run_feature_for(T646* C,T0* a1,T0* a2,T6 a3);
/*EXTERNAL_PROCEDURE*/T0* r646collect_slice_copy(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646pretty_print_names(T646* C);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_permissions(T646* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/void r646hook_collect(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646pretty(T646* C,T2 a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T6 r646same_body_as(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/void r646inline_dynamic_dispatch(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_body_thru(T646* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T6 r646same_signature(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_signature_thru(T646* C,T0* a1,T0* a2,T0* a3);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_ensure_in(T646* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_ensure_thru(T646* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*EXTERNAL_PROCEDURE*/T0* r646twin(T646* C);
/*EXTERNAL_PROCEDURE*/void r646add_into_shared(T646* C,T0* a1,T0* a2);
/*EXTERNAL_PROCEDURE*/void r646accept(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T6 r646valid_redefinition(T646* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*EXTERNAL_PROCEDURE*/T0* r646change_require(T646* C,T0* a1,T6 a2);
/*EXTERNAL_PROCEDURE*/T0* r646obsolete_warning_check_memory(void);
/*EXTERNAL_PROCEDURE*/T338 r646start_position(T646* C);
/*EXTERNAL_PROCEDURE*/void r646set_rescue_compound(T646* C,T0* a1);
/*EXTERNAL_PROCEDURE*/T0* r646c_plus_plus_name(T646* C);
/*EXTERNAL_PROCEDURE*/T0* r646specialize_body_in(T646* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r649specialized_ensure_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r649specialize_signature_in(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649inline_instruction_n(T649* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r649try_to_undefine_aux(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r649inline_proc_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T0* r649inline_proc_call_0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r649collect(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649specialize_require_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T6 r649empty_body_side_effect_free_effective_routine(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649simplify(T649* C,T0* a1);
/*E_PROCEDURE*/void r649pretty_print_routine_body(T649* C,T2 a1);
/*E_PROCEDURE*/T0* r649specialized_require_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/void r649pretty_print_rescue(T649* C,T2 a1);
/*E_PROCEDURE*/T0* r649first_name(T649* C);
/*E_PROCEDURE*/T0* r649specialize_and_check(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649inline_instruction_1(T649* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r649inline_instruction_0(T649* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r649rescue_compound_in(T649* C,T0* a1);
/*E_PROCEDURE*/void r649collect_body(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649names(T649* C);
/*E_PROCEDURE*/T0* r649specialize_require_in(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_PROCEDURE*/void r649inline_dynamic_dispatch_(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r649no_rescue_no_local_expanded_in(T649* C,T0* a1);
/*E_PROCEDURE*/void r649add_into(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r649merge_signature_thru(T649* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_PROCEDURE*/void r649make_routine(T649* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r649try_to_undefine(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r649make(T649* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_PROCEDURE*/void r649add_into_(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r649new_run_feature_for(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r649result_type(void);
/*E_PROCEDURE*/void r649valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T6 r649use_current(T649* C,T0* a1);
/*E_PROCEDURE*/void r649obsolete_warning_check(T649* C,T0* a1,T338 a2);
/*E_PROCEDURE*/void r649init(T649* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r649change_ensure(T649* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r649brand_new_run_feature_for(T649* C,T0* a1,T0* a2,T6 a3);
/*E_PROCEDURE*/void r649pretty_print_once_or_do(T2 a1);
/*E_PROCEDURE*/void r649pretty_print_names(T649* C);
/*E_PROCEDURE*/T0* r649specialize_permissions(T649* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r649left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/void r649pretty(T649* C,T2 a1,T6 a2);
/*E_PROCEDURE*/T6 r649same_body_as(T649* C,T0* a1);
/*E_PROCEDURE*/void r649inline_dynamic_dispatch(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T0* r649specialize_body_thru(T649* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r649inline_proc_call_n(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_PROCEDURE*/T6 r649same_signature(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/T338 r649sedb_trace_before_exit(T649* C);
/*E_PROCEDURE*/T0* r649specialize_signature_thru(T649* C,T0* a1,T0* a2,T0* a3);
/*E_PROCEDURE*/T0* r649specialize_ensure_in(T649* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r649specialize_ensure_thru(T649* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_PROCEDURE*/T0* r649twin(T649* C);
/*E_PROCEDURE*/void r649add_into_shared(T649* C,T0* a1,T0* a2);
/*E_PROCEDURE*/void r649accept(T649* C,T0* a1);
/*E_PROCEDURE*/T0* r649left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_PROCEDURE*/T6 r649valid_redefinition(T649* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_PROCEDURE*/T0* r649change_require(T649* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T0* r649obsolete_warning_check_memory(void);
/*E_PROCEDURE*/T338 r649start_position(T649* C);
/*E_PROCEDURE*/T0* r649specialize_body_in(T649* C,T0* a1,T6 a2);
/*E_PROCEDURE*/T6 r649_P_336_same_body_as(T649* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r647specialized_ensure_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r647try_to_undefine_aux(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r647collect(T647* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r647specialize_require_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r647simplify(T647* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r647arguments(void);
/*CST_ATT_INTEGER*/T0* r647specialized_require_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r647first_name(T647* C);
/*CST_ATT_INTEGER*/T0* r647specialize_and_check(T647* C,T0* a1);
/*CST_ATT_INTEGER*/void r647collect_body(T647* C,T0* a1);
/*CST_ATT_INTEGER*/T0* r647names(T647* C);
/*CST_ATT_INTEGER*/T0* r647specialize_require_in(T647* C,T0* a1);
/*CST_ATT_INTEGER*/void r647add_into(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r647merge_signature_thru(T647* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_INTEGER*/T0* r647try_to_undefine(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r647make(T647* C,T0* a1);
/*CST_ATT_INTEGER*/void r647add_into_(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r647new_run_feature_for(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/void r647valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T6 r647use_current(T0* a1);
/*CST_ATT_INTEGER*/void r647obsolete_warning_check(T647* C,T0* a1,T338 a2);
/*CST_ATT_INTEGER*/T0* r647change_ensure(T647* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r647brand_new_run_feature_for(T647* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_INTEGER*/void r647pretty_print_names(T647* C);
/*CST_ATT_INTEGER*/T0* r647specialize_permissions(T647* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/void r647pretty(T647* C,T2 a1,T6 a2);
/*CST_ATT_INTEGER*/T6 r647same_body_as(T647* C,T0* a1);
/*CST_ATT_INTEGER*/void r647inline_dynamic_dispatch(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T6 r647same_signature(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r647specialize_signature_thru(T647* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_INTEGER*/T0* r647specialize_ensure_in(T647* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r647specialize_ensure_thru(T647* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_INTEGER*/T0* r647twin(T647* C);
/*CST_ATT_INTEGER*/void r647add_into_shared(T647* C,T0* a1,T0* a2);
/*CST_ATT_INTEGER*/T0* r647inline_expression_0(T647* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_INTEGER*/T6 r647valid_redefinition(T647* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_INTEGER*/T0* r647change_require(T647* C,T0* a1,T6 a2);
/*CST_ATT_INTEGER*/T0* r647obsolete_warning_check_memory(void);
/*CST_ATT_INTEGER*/T338 r647start_position(T647* C);
/*CST_ATT_INTEGER*/void r647set_rescue_compound(T647* C,T0* a1);
/*E_FUNCTION*/T0* r652specialized_ensure_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r652specialize_signature_in(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652try_to_undefine_aux(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r652collect(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652specialize_require_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T6 r652empty_body_side_effect_free_effective_routine(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652inline_eq_neq1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r652inline_eq_neq0(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r652simplify(T652* C,T0* a1);
/*E_FUNCTION*/void r652pretty_print_routine_body(T652* C,T2 a1);
/*E_FUNCTION*/T0* r652specialized_require_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/void r652pretty_print_rescue(T652* C,T2 a1);
/*E_FUNCTION*/T0* r652first_name(T652* C);
/*E_FUNCTION*/T0* r652specialize_and_check(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652rescue_compound_in(T652* C,T0* a1);
/*E_FUNCTION*/void r652collect_body(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652names(T652* C);
/*E_FUNCTION*/T0* r652specialize_require_in(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652remove_first_redundant_initialisation(T0* a1,T0* a2);
/*E_FUNCTION*/void r652inline_dynamic_dispatch_(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/T6 r652no_rescue_no_local_expanded_in(T652* C,T0* a1);
/*E_FUNCTION*/void r652add_into(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r652make_effective_routine(T652* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r652inline_call_1(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*E_FUNCTION*/T0* r652merge_signature_thru(T652* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*E_FUNCTION*/void r652make_routine(T652* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r652try_to_undefine(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r652make(T652* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/void r652add_into_(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r652new_run_feature_for(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r652inline_eq_neq0_(T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/void r652valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T6 r652use_current(T652* C,T0* a1);
/*E_FUNCTION*/void r652obsolete_warning_check(T652* C,T0* a1,T338 a2);
/*E_FUNCTION*/void r652init(T652* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r652inline_expression_n(T652* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r652change_ensure(T652* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r652brand_new_run_feature_for(T652* C,T0* a1,T0* a2,T6 a3);
/*E_FUNCTION*/void r652pretty_print_once_or_do(T2 a1);
/*E_FUNCTION*/void r652pretty_print_names(T652* C);
/*E_FUNCTION*/T0* r652specialize_permissions(T652* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r652left_most_current_direct_call_0_sequence_inline(T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/void r652pretty(T652* C,T2 a1,T6 a2);
/*E_FUNCTION*/T6 r652same_body_as(T652* C,T0* a1);
/*E_FUNCTION*/void r652inline_dynamic_dispatch(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/T0* r652specialize_body_thru(T652* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T6 r652same_signature(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/T338 r652sedb_trace_before_exit(T652* C);
/*E_FUNCTION*/T0* r652specialize_signature_thru(T652* C,T0* a1,T0* a2,T0* a3);
/*E_FUNCTION*/T0* r652specialize_ensure_in(T652* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r652specialize_ensure_thru(T652* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*E_FUNCTION*/T0* r652twin(T652* C);
/*E_FUNCTION*/void r652add_into_shared(T652* C,T0* a1,T0* a2);
/*E_FUNCTION*/void r652accept(T652* C,T0* a1);
/*E_FUNCTION*/T0* r652inline_expression_1(T652* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6,T0* a7);
/*E_FUNCTION*/T0* r652inline_expression_0(T652* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*E_FUNCTION*/T0* r652left_most_current_direct_call_0_sequence(T0* a1,T0* a2);
/*E_FUNCTION*/T6 r652valid_redefinition(T652* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*E_FUNCTION*/T0* r652change_require(T652* C,T0* a1,T6 a2);
/*E_FUNCTION*/T0* r652obsolete_warning_check_memory(void);
/*E_FUNCTION*/T338 r652start_position(T652* C);
/*E_FUNCTION*/T0* r652specialize_body_in(T652* C,T0* a1,T6 a2);
/*E_FUNCTION*/T6 r652_P_336_same_body_as(T652* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r643specialized_ensure_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r643specialize_signature_in(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r643try_to_undefine_aux(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r643collect(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r643specialize_require_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/void r643from_effective(T643* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*DEFERRED_PROCEDURE*/T0* r643simplify(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r643pretty_print_routine_body(T2 a1);
/*DEFERRED_PROCEDURE*/T0* r643specialized_require_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r643first_name(T643* C);
/*DEFERRED_PROCEDURE*/T0* r643specialize_and_check(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/T0* r643names(T643* C);
/*DEFERRED_PROCEDURE*/T0* r643specialize_require_in(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r643add_into(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r643merge_signature_thru(T643* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*DEFERRED_PROCEDURE*/void r643make_routine(T643* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r643try_to_undefine(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r643make(T643* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/void r643add_into_(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r643new_run_feature_for(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r643result_type(void);
/*DEFERRED_PROCEDURE*/void r643valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T6 r643use_current(T0* a1);
/*DEFERRED_PROCEDURE*/void r643obsolete_warning_check(T643* C,T0* a1,T338 a2);
/*DEFERRED_PROCEDURE*/T0* r643change_ensure(T643* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r643brand_new_run_feature_for(T643* C,T0* a1,T0* a2,T6 a3);
/*DEFERRED_PROCEDURE*/void r643pretty_print_names(T643* C);
/*DEFERRED_PROCEDURE*/T0* r643specialize_permissions(T643* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/void r643pretty(T643* C,T2 a1,T6 a2);
/*DEFERRED_PROCEDURE*/T6 r643same_body_as(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/void r643inline_dynamic_dispatch(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T6 r643same_signature(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/T0* r643specialize_signature_thru(T643* C,T0* a1,T0* a2,T0* a3);
/*DEFERRED_PROCEDURE*/T0* r643specialize_ensure_in(T643* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r643specialize_ensure_thru(T643* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*DEFERRED_PROCEDURE*/T0* r643twin(T643* C);
/*DEFERRED_PROCEDURE*/void r643add_into_shared(T643* C,T0* a1,T0* a2);
/*DEFERRED_PROCEDURE*/void r643accept(T643* C,T0* a1);
/*DEFERRED_PROCEDURE*/T6 r643valid_redefinition(T643* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*DEFERRED_PROCEDURE*/T0* r643change_require(T643* C,T0* a1,T6 a2);
/*DEFERRED_PROCEDURE*/T0* r643obsolete_warning_check_memory(void);
/*DEFERRED_PROCEDURE*/T338 r643start_position(T643* C);
/*DEFERRED_PROCEDURE*/void r643set_rescue_compound(T643* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642specialized_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r642specialize_signature_in(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642try_to_undefine_aux(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r642collect(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642specialize_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T6 r642empty_body_side_effect_free_effective_routine(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642simplify(T642* C,T0* a1);
/*ONCE_PROCEDURE*/void r642pretty_print_routine_body(T642* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r642specialized_require_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/void r642pretty_print_rescue(T642* C,T2 a1);
/*ONCE_PROCEDURE*/T0* r642first_name(T642* C);
/*ONCE_PROCEDURE*/T0* r642specialize_and_check(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642rescue_compound_in(T642* C,T0* a1);
/*ONCE_PROCEDURE*/void r642collect_body(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642names(T642* C);
/*ONCE_PROCEDURE*/T0* r642specialize_require_in(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T0* r642remove_first_redundant_initialisation(T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r642inline_dynamic_dispatch_(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T6 r642no_rescue_no_local_expanded_in(T642* C,T0* a1);
/*ONCE_PROCEDURE*/void r642add_into(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r642merge_signature_thru(T642* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*ONCE_PROCEDURE*/void r642make_routine(T642* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r642try_to_undefine(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r642make(T642* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ONCE_PROCEDURE*/void r642add_into_(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r642new_run_feature_for(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r642result_type(void);
/*ONCE_PROCEDURE*/void r642valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T6 r642use_current(T642* C,T0* a1);
/*ONCE_PROCEDURE*/void r642obsolete_warning_check(T642* C,T0* a1,T338 a2);
/*ONCE_PROCEDURE*/void r642init(T642* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r642change_ensure(T642* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r642brand_new_run_feature_for(T642* C,T0* a1,T0* a2,T6 a3);
/*ONCE_PROCEDURE*/void r642pretty_print_once_or_do(T2 a1);
/*ONCE_PROCEDURE*/void r642pretty_print_names(T642* C);
/*ONCE_PROCEDURE*/T0* r642specialize_permissions(T642* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/void r642pretty(T642* C,T2 a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r642same_body_as(T642* C,T0* a1);
/*ONCE_PROCEDURE*/void r642inline_dynamic_dispatch(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T0* r642specialize_body_thru(T642* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T6 r642same_signature(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/T338 r642sedb_trace_before_exit(T642* C);
/*ONCE_PROCEDURE*/T0* r642specialize_signature_thru(T642* C,T0* a1,T0* a2,T0* a3);
/*ONCE_PROCEDURE*/T0* r642specialize_ensure_in(T642* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r642specialize_ensure_thru(T642* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*ONCE_PROCEDURE*/T0* r642twin(T642* C);
/*ONCE_PROCEDURE*/void r642add_into_shared(T642* C,T0* a1,T0* a2);
/*ONCE_PROCEDURE*/void r642accept(T642* C,T0* a1);
/*ONCE_PROCEDURE*/T6 r642valid_redefinition(T642* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ONCE_PROCEDURE*/T0* r642change_require(T642* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T0* r642obsolete_warning_check_memory(void);
/*ONCE_PROCEDURE*/T338 r642start_position(T642* C);
/*ONCE_PROCEDURE*/T0* r642specialize_body_in(T642* C,T0* a1,T6 a2);
/*ONCE_PROCEDURE*/T6 r642_P_336_same_body_as(T642* C,T0* a1);
/*CST_ATT_UNIQUE*/T645*create645with(T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r645specialized_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r645try_to_undefine_aux(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r645collect(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r645specialize_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/void r645pretty_constant_value(T2 a1);
/*CST_ATT_UNIQUE*/void r645with(T645* C,T0* a1,T2 a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r645simplify(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r645arguments(void);
/*CST_ATT_UNIQUE*/T0* r645specialized_require_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r645first_name(T645* C);
/*CST_ATT_UNIQUE*/T0* r645specialize_and_check(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/void r645collect_body(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/T0* r645names(T645* C);
/*CST_ATT_UNIQUE*/T0* r645specialize_require_in(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/void r645add_into(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r645merge_signature_thru(T645* C,T0* a1,T0* a2,T0* a3,T0* a4,T6 a5);
/*CST_ATT_UNIQUE*/T0* r645try_to_undefine(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r645make(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/void r645add_into_(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r645new_run_feature_for(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/void r645valid_redefinition_error(T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC645counter;
/*CST_ATT_UNIQUE*/T6 r645use_current(T0* a1);
/*CST_ATT_UNIQUE*/void r645obsolete_warning_check(T645* C,T0* a1,T338 a2);
/*CST_ATT_UNIQUE*/T0* r645change_ensure(T645* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r645brand_new_run_feature_for(T645* C,T0* a1,T0* a2,T6 a3);
/*CST_ATT_UNIQUE*/void r645pretty_print_names(T645* C);
/*CST_ATT_UNIQUE*/T0* r645specialize_permissions(T645* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/void r645pretty(T645* C,T2 a1,T6 a2);
/*CST_ATT_UNIQUE*/T6 r645same_body_as(T645* C,T0* a1);
/*CST_ATT_UNIQUE*/void r645inline_dynamic_dispatch(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T6 r645same_signature(T645* C,T0* a1,T0* a2);
/*CST_ATT_UNIQUE*/T0* r645specialize_signature_thru(T645* C,T0* a1,T0* a2,T0* a3);
/*CST_ATT_UNIQUE*/T0* r645specialize_ensure_in(T645* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r645specialize_ensure_thru(T645* C,T0* a1,T0* a2,T0* a3,T6 a4);
/*CST_ATT_UNIQUE*/T0* r645twin(T645* C);
/*CST_ATT_UNIQUE*/T0* r645inline_expression_0(T645* C,T0* a1,T0* a2,T338 a3,T0* a4,T0* a5,T0* a6);
/*CST_ATT_UNIQUE*/T6 r645valid_redefinition(T645* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*CST_ATT_UNIQUE*/T0* r645change_require(T645* C,T0* a1,T6 a2);
/*CST_ATT_UNIQUE*/T0* r645obsolete_warning_check_memory(void);
/*CST_ATT_UNIQUE*/T338 r645start_position(T645* C);
/*CST_ATT_UNIQUE*/void r645set_rescue_compound(T645* C,T0* a1);
/*RENAME_LIST*/void r688check_level_2(T688* C,T0* a1);
/*RENAME_LIST*/void r688make(T688* C,T0* a1);
/*RENAME_LIST*/T0* r688name_in_child(T688* C,T0* a1);
/*RENAME_LIST*/T6 r688is_target_of_rename(T688* C,T0* a1);
/*RENAME_LIST*/void r688initialize_and_check_level_1(T688* C);
/*RENAME_LIST*/T0* r688name_in_parent(T688* C,T0* a1);
/*RENAME_LIST*/T0* r688item(T688* C,T2 a1);
/*RENAME_LIST*/T2 r688count(T688* C);
/*WHEN_ITEM_2*/void r730make(T730* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r730pretty(T730* C,T2 a1);
/*WHEN_ITEM_2*/T0* r730specialize_and_check_integer(T730* C,T0* a1);
/*WHEN_ITEM_2*/void r730set_lower_upper_manifest_expression(T730* C,T0* a1);
/*WHEN_ITEM_2*/void r730validity_check(T730* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r730specialize_in(T730* C,T0* a1);
/*WHEN_ITEM_2*/void r730character_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r730init(T730* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r730set_values_integer(T730* C);
/*WHEN_ITEM_2*/T2 r730upper_value(T730* C);
/*WHEN_ITEM_2*/void r730integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r730force_internal_integer_values(T730* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r730specialize_thru(T730* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T6 r730validity_check_continued(T730* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r730specialize_and_check_character(T730* C,T0* a1);
/*WHEN_ITEM_2*/T0* r730adapt_for(T730* C,T0* a1);
/*WHEN_ITEM_2*/T2 r730lower_value(T730* C);
/*WHEN_ITEM_2*/void r730collect(T730* C,T0* a1);
/*WHEN_ITEM_2*/void r730validity_check_continued_when_item_2(T730* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r730validity_check_continued_when_item_1(T730* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/T0* r730manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T338 r730start_position(T730* C);
/*WHEN_ITEM_2*/T2 r730integer_value_of(T0* a1);
/*WHEN_ITEM_2*/T0* r730twin(T730* C);
/*WHEN_ITEM_2*/void r730set_values_character(T730* C);
/*WHEN_ITEM_2*/T2 r730locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_2*/T6 r730side_effect_free(T730* C,T0* a1);
/*WHEN_ITEM_2*/void r730lower_upper_value_check(T730* C);
/*WHEN_ITEM_2*/void r730validity_check_continued_(T730* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_2*/void r730force_internal_character_values(T730* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/T6 r730match_value(T730* C,T2 a1);
/*WHEN_ITEM_2*/T0* r730compute_values(T730* C,T0* a1,T0* a2);
/*WHEN_ITEM_2*/void r730explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_2*/T0* r730current_or_twin_init(T730* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379set_manifest_expression(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379make(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379pretty(T379* C,T2 a1);
/*WHEN_ITEM_1*/T0* r379specialize_and_check_integer(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379validity_check(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r379specialize_in(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379character_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379set_expression_value(T379* C,T2 a1);
/*WHEN_ITEM_1*/void r379integer_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379force_internal_integer_values(T379* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r379specialize_thru(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T2 r379expression_value(T379* C);
/*WHEN_ITEM_1*/T6 r379validity_check_continued(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r379specialize_and_check_character(T379* C,T0* a1);
/*WHEN_ITEM_1*/T0* r379adapt_for(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379collect(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379validity_check_continued_when_item_2(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r379validity_check_continued_when_item_1(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/T0* r379manifest_expression_check(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T338 r379start_position(T379* C);
/*WHEN_ITEM_1*/T2 r379integer_value_of(T0* a1);
/*WHEN_ITEM_1*/void r379set_expression_value_character(T379* C);
/*WHEN_ITEM_1*/T0* r379twin(T379* C);
/*WHEN_ITEM_1*/T2 r379locate_in_values(T0* a1,T2 a2);
/*WHEN_ITEM_1*/T6 r379side_effect_free(T379* C,T0* a1);
/*WHEN_ITEM_1*/void r379validity_check_continued_(T379* C,T0* a1,T0* a2,T0* a3);
/*WHEN_ITEM_1*/void r379force_internal_character_values(T379* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/T6 r379match_value(T379* C,T2 a1);
/*WHEN_ITEM_1*/T0* r379compute_values(T379* C,T0* a1,T0* a2);
/*WHEN_ITEM_1*/void r379set_expression_value_integer(T379* C);
/*WHEN_ITEM_1*/void r379explain_fatal_error(T0* a1,T0* a2);
/*WHEN_ITEM_1*/T0* r379current_or_twin_init(T379* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r676simplify_add(T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/T0* r676specialize_and_check(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r676to_expression(T676* C);
/*COMPOUND_EXPRESSION*/T0* r676simplify(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r676static_simplify(T676* C);
/*COMPOUND_EXPRESSION*/void r676inline_dynamic_dispatch_(T676* C,T0* a1,T0* a2);
/*COMPOUND_EXPRESSION*/void r676safety_check(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r676set_list(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T2 r676upper(T676* C);
/*COMPOUND_EXPRESSION*/T6 r676is_stored_in_some_local_variable(void);
/*COMPOUND_EXPRESSION*/void r676accept(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r676adapt_for(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r676from_list(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r676collect(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T338 r676start_position(T676* C);
/*COMPOUND_EXPRESSION*/T0* r676twin(T676* C);
/*COMPOUND_EXPRESSION*/T0* r676written_declaration_type_mark(void);
/*COMPOUND_EXPRESSION*/T6 r676use_current(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r676crash(T676* C);
/*COMPOUND_EXPRESSION*/T0* r676non_void_no_dispatch_type(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T6 r676side_effect_free(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/void r676not_yet_implemented(T676* C);
/*COMPOUND_EXPRESSION*/T0* r676resolve_in(T676* C,T0* a1);
/*COMPOUND_EXPRESSION*/T0* r676to_instruction(T676* C);
/*CREATE_WRITABLE*/T0* r666specialize_and_check(T666* C,T0* a1);
/*CREATE_WRITABLE*/T0* r666to_expression(T666* C);
/*CREATE_WRITABLE*/void r666make(T666* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r666pretty(T666* C,T2 a1);
/*CREATE_WRITABLE*/T0* r666simplify(T666* C,T0* a1);
/*CREATE_WRITABLE*/T6 r666extra_bracket_flag(T666* C);
/*CREATE_WRITABLE*/void r666validity_check(T666* C,T0* a1);
/*CREATE_WRITABLE*/T0* r666static_simplify(T666* C);
/*CREATE_WRITABLE*/T0* r666specialize_in(T666* C,T0* a1);
/*CREATE_WRITABLE*/void r666inline_dynamic_dispatch_(T666* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/void r666safety_check(T666* C,T0* a1);
/*CREATE_WRITABLE*/void r666init(T666* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T6 r666is_result(T666* C);
/*CREATE_WRITABLE*/T2 r666precedence(T666* C);
/*CREATE_WRITABLE*/T0* r666specialize_thru(T666* C,T0* a1,T0* a2,T0* a3);
/*CREATE_WRITABLE*/T6 r666is_stored_in_some_local_variable(void);
/*CREATE_WRITABLE*/void r666accept(T666* C,T0* a1);
/*CREATE_WRITABLE*/T0* r666adapt_for(T666* C,T0* a1);
/*CREATE_WRITABLE*/T0* r666collect(T666* C,T0* a1);
/*CREATE_WRITABLE*/void r666pretty_target(T666* C,T2 a1);
/*CREATE_WRITABLE*/T338 r666start_position(T666* C);
/*CREATE_WRITABLE*/T0* r666twin(T666* C);
/*CREATE_WRITABLE*/T0* r666written_declaration_type_mark(void);
/*CREATE_WRITABLE*/T6 r666use_current(T666* C,T0* a1);
/*CREATE_WRITABLE*/void r666bracketed_pretty(T666* C,T2 a1);
/*CREATE_WRITABLE*/T0* r666non_void_no_dispatch_type(T0* a1);
/*CREATE_WRITABLE*/T6 r666side_effect_free(T666* C,T0* a1);
/*CREATE_WRITABLE*/void r666make_specialized(T666* C,T0* a1,T0* a2);
/*CREATE_WRITABLE*/T0* r666resolve_in(T666* C,T0* a1);
/*CREATE_WRITABLE*/T0* r666to_instruction(T666* C);
/*CREATE_WRITABLE*/T0* r666current_or_twin_init(T666* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/T0* r671specialize_and_check(T671* C,T0* a1);
/*CLOSED_OPERAND*/T0* r671to_expression(T671* C);
/*CLOSED_OPERAND*/void r671make(T671* C,T2 a1,T0* a2);
/*CLOSED_OPERAND*/void r671pretty(T671* C,T2 a1);
/*CLOSED_OPERAND*/T0* r671simplify(T671* C,T0* a1);
/*CLOSED_OPERAND*/T6 r671extra_bracket_flag(T671* C);
/*CLOSED_OPERAND*/T0* r671static_simplify(T671* C);
/*CLOSED_OPERAND*/T0* r671specialize_in(T671* C,T0* a1);
/*CLOSED_OPERAND*/void r671inline_dynamic_dispatch_(T671* C,T0* a1,T0* a2);
/*CLOSED_OPERAND*/void r671safety_check(T671* C,T0* a1);
/*CLOSED_OPERAND*/T6 r671is_result(T671* C);
/*CLOSED_OPERAND*/T2 r671precedence(T671* C);
/*CLOSED_OPERAND*/T0* r671specialize_thru(T671* C,T0* a1,T0* a2,T0* a3);
/*CLOSED_OPERAND*/T6 r671is_static(T671* C);
/*CLOSED_OPERAND*/T6 r671is_stored_in_some_local_variable(void);
/*CLOSED_OPERAND*/void r671accept(T671* C,T0* a1);
/*CLOSED_OPERAND*/T0* r671adapt_for(T671* C,T0* a1);
/*CLOSED_OPERAND*/T0* r671declaration_type(T671* C);
/*CLOSED_OPERAND*/T0* r671collect(T671* C,T0* a1);
/*CLOSED_OPERAND*/T6 r671is_current(T671* C);
/*CLOSED_OPERAND*/void r671pretty_target(T671* C,T2 a1);
/*CLOSED_OPERAND*/T0* r671twin(T671* C);
/*CLOSED_OPERAND*/T0* r671written_declaration_type_mark(void);
/*CLOSED_OPERAND*/T6 r671use_current(T671* C,T0* a1);
/*CLOSED_OPERAND*/void r671bracketed_pretty(T671* C,T2 a1);
/*CLOSED_OPERAND*/T6 r671is_void(T671* C);
/*CLOSED_OPERAND*/T0* r671non_void_no_dispatch_type(T671* C,T0* a1);
/*CLOSED_OPERAND*/T6 r671side_effect_free(T671* C,T0* a1);
/*CLOSED_OPERAND*/T6 r671is_manifest_string(T671* C);
/*CLOSED_OPERAND*/T6 r671is_implicit_current(T671* C);
/*CLOSED_OPERAND*/T0* r671resolve_in(T671* C,T0* a1);
/*CLOSED_OPERAND*/T0* r671to_instruction(T671* C);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_and_check(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413to_expression(T413* C);
/*NO_INVARIANT_WRAPPER*/void r413make(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413simplify(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_in(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/void r413inline_dynamic_dispatch_(T413* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/void r413safety_check(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_thru(T413* C,T0* a1,T0* a2,T0* a3);
/*NO_INVARIANT_WRAPPER*/void r413accept(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413adapt_for(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413collect(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r413end_mark_comment(T413* C);
/*NO_INVARIANT_WRAPPER*/T338 r413start_position(T413* C);
/*NO_INVARIANT_WRAPPER*/T0* r413twin(T413* C);
/*NO_INVARIANT_WRAPPER*/T6 r413use_current(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T6 r413side_effect_free(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413inline_dynamic_dispatch(T413* C,T0* a1,T0* a2);
/*NO_INVARIANT_WRAPPER*/T0* r413to_instruction(T413* C);
/*NO_INVARIANT_WRAPPER*/T0* r413specialize_without_checks(T413* C,T0* a1);
/*NO_INVARIANT_WRAPPER*/T0* r413current_or_twin_init(T413* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/void r731make(T731* C,T0* a1);
/*MANIFEST_STRING_INSPECTOR*/T0* r731simplify(T731* C,T0* a1,T0* a2);
/*MANIFEST_STRING_INSPECTOR*/T0* r731strings(void);
/*MANIFEST_STRING_INSPECTOR*/T0* r731inline_inspect(T731* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T338 a6);
/*MANIFEST_STRING_INSPECTOR*/T6 r731has_empty(T731* C);
/*FAKE_ARGUMENT*/T0* r356to_expression(T356* C);
/*FAKE_ARGUMENT*/void r356make(T356* C,T0* a1,T338 a2,T0* a3,T2 a4);
/*FAKE_ARGUMENT*/T0* r356static_simplify(T356* C);
/*FAKE_ARGUMENT*/T0* r356specialize_in(T356* C,T0* a1);
/*FAKE_ARGUMENT*/void r356inline_dynamic_dispatch_(T356* C,T0* a1,T0* a2);
/*FAKE_ARGUMENT*/T6 r356is_stored_in_some_local_variable(void);
/*FAKE_ARGUMENT*/void r356accept(T356* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r356collect(T356* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r356twin(T356* C);
/*FAKE_ARGUMENT*/T0* r356written_declaration_type_mark(void);
/*FAKE_ARGUMENT*/T6 r356use_current(T0* a1);
/*FAKE_ARGUMENT*/T0* r356non_void_no_dispatch_type(T0* a1);
/*FAKE_ARGUMENT*/T6 r356side_effect_free(T0* a1);
/*FAKE_ARGUMENT*/T0* r356resolve_in(T356* C,T0* a1);
/*FAKE_ARGUMENT*/T0* r356to_instruction(T356* C);
/*PROCESS_POSIX*/void r767make(T767* C);
/*PROCESS_POSIX*/T6 r767is_finished(T767* C);
/*PROCESS_POSIX*/void r767cleanup_streams(T767* C);
/*PROCESS_POSIX*/T2 r767id(T767* C);
/*PROCESS_POSIX*/void r767do_execute(T767* C,T8 a1,T8 a2,T6 a3,T8 a4);
/*PROCESS_POSIX*/void r767do_cleanup(T767* C);
/*PROCESS_POSIX*/void r767execute_command_line(T767* C,T0* a1,T6 a2);
/*PROCESS_POSIX*/void r767dispose(T767* C);
/*PROCESS_POSIX*/T6 r767is_child(T767* C);
/*PROCESS_POSIX*/void r767wait(T767* C);
/*PROCESS_WIN32*/void r768make(T768* C);
/*PROCESS_WIN32*/T6 r768is_finished(T768* C);
/*PROCESS_WIN32*/void r768cleanup_streams(T768* C);
/*PROCESS_WIN32*/T2 r768handle(T768* C);
/*PROCESS_WIN32*/void r768do_execute(T768* C,T8 a1,T6 a2);
/*PROCESS_WIN32*/void r768do_cleanup(T768* C);
/*PROCESS_WIN32*/void r768execute_command_line(T768* C,T0* a1,T6 a2);
/*PROCESS_WIN32*/void r768dispose(T768* C);
/*PROCESS_WIN32*/void r768wait(T768* C);
/*PROCESS_NONE*/void r769make(T769* C);
/*PROCESS_NONE*/void r769execute_command_line(T769* C,T0* a1,T6 a2);
/*PROCESS_GROUP_POSIX*/void r764make(T764* C);
/*PROCESS_GROUP_POSIX*/void r764unregister(T764* C,T0* a1);
/*PROCESS_GROUP_POSIX*/void r764register(T764* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r765make(T765* C);
/*PROCESS_GROUP_WIN32*/void r765unregister(T765* C,T0* a1);
/*PROCESS_GROUP_WIN32*/void r765register(T765* C,T0* a1);
/*TUPLE_STRING_POOL*/void r821count_states(T821* C);
extern T0*oBC822counter;
/*TUPLE_STRING_POOL*/void r821make_transitions_array(T821* C);
extern T0*oBC822transition_memory;
extern int fBC822transition_memory;
/*TUPLE_STRING_POOL*/T0* r821transition_memory(void);
/*TUPLE_STRING_POOL*/T2 r821external_state(T821* C,T2 a1);
/*TUPLE_STRING_POOL*/T2 r821the_final_state(T821* C,T0* a1,T2 a2,T2 a3);
/*TUPLE_STRING_POOL*/void r821externalize_tags(T821* C,T0* a1);
/*TUPLE_STRING_POOL*/void r821set_state(T821* C,T2 a1,T2 a2,T3 a3);
/*TUPLE_STRING_POOL*/T2 r821state(T821* C,T2 a1,T3 a2);
/*TUPLE_STRING_POOL*/void r821compile_headers(T821* C);
/*TUPLE_STRING_POOL*/void r821from_collection(T821* C,T0* a1);
/*TUPLE_STRING_POOL*/T0* r821transition(T821* C,T2 a1);
/*COUNTER*/void r337next(T337* C);
/*STD_INPUT*/void r60make(T60* C);
/*MICROSOFT_PATH_NAME*/void r773remove_last(T773* C);
/*MICROSOFT_PATH_NAME*/void r773make_empty(T773* C);
/*MICROSOFT_PATH_NAME*/void r773start_join(T773* C,T0* a1,T2 a2);
/*MICROSOFT_PATH_NAME*/void r773join_element(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T2 r773start_join_to(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r773drive_specification(T773* C);
/*MICROSOFT_PATH_NAME*/void r773end_join(T773* C);
/*MICROSOFT_PATH_NAME*/void r773make_from_string(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r773last(T773* C);
/*MICROSOFT_PATH_NAME*/void r773add_last(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T6 r773is_separator(T3 a1);
/*MICROSOFT_PATH_NAME*/T6 r773is_absolute(T773* C);
/*MICROSOFT_PATH_NAME*/void r773go_up(T773* C);
/*MICROSOFT_PATH_NAME*/void r773make_current(T773* C);
/*MICROSOFT_PATH_NAME*/T2 r773scan_element(T773* C,T2 a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T6 r773is_valid_path(T0* a1);
/*MICROSOFT_PATH_NAME*/void r773join_to(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r773join(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/T0* r773to_string(T773* C);
/*MICROSOFT_PATH_NAME*/T0* r773short_name(T773* C);
/*MICROSOFT_PATH_NAME*/void r773join_element_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/void r773join_directory_to(T0* a1,T0* a2);
/*MICROSOFT_PATH_NAME*/T2 r773count(T773* C);
/*MICROSOFT_PATH_NAME*/void r773make_root(T773* C);
/*MICROSOFT_PATH_NAME*/void r773_P_772_join_element(T773* C,T0* a1);
/*MICROSOFT_PATH_NAME*/void r773_P_770_end_join(T773* C);
/*UTF8_PARSER*/void r734decode(T734* C,T0* a1,T0* a2);
/*SEDB*/T658*create658make(T338 a1,T3 a2);
/*SEDB*/T0* r658to_expression(T658* C);
/*SEDB*/void r658make(T658* C,T338 a1,T3 a2);
/*SEDB*/T0* r658simplify(T658* C,T0* a1);
/*SEDB*/void r658inline_dynamic_dispatch_(T658* C,T0* a1,T0* a2);
/*SEDB*/void r658accept(T658* C,T0* a1);
/*SEDB*/T6 r658use_current(T0* a1);
/*SEDB*/T6 r658side_effect_free(T0* a1);
/*SEDB*/T0* r658inline_dynamic_dispatch(T658* C,T0* a1,T0* a2);
/*SEDB*/T0* r658to_instruction(T658* C);
/*NO_DISPATCH*/T0* r664specialize_and_check(T664* C,T0* a1);
/*NO_DISPATCH*/T0* r664to_expression(T664* C);
/*NO_DISPATCH*/void r664make(T664* C,T0* a1,T0* a2,T0* a3);
/*NO_DISPATCH*/T0* r664simplify(T664* C,T0* a1);
/*NO_DISPATCH*/T0* r664static_simplify(T664* C);
/*NO_DISPATCH*/void r664inline_dynamic_dispatch_(T664* C,T0* a1,T0* a2);
/*NO_DISPATCH*/void r664safety_check(T664* C,T0* a1);
/*NO_DISPATCH*/T6 r664is_result(T664* C);
/*NO_DISPATCH*/T6 r664is_stored_in_some_local_variable(void);
/*NO_DISPATCH*/void r664accept(T664* C,T0* a1);
/*NO_DISPATCH*/T0* r664adapt_for(T664* C,T0* a1);
/*NO_DISPATCH*/T0* r664collect(T664* C,T0* a1);
/*NO_DISPATCH*/T338 r664start_position(T664* C);
/*NO_DISPATCH*/T0* r664twin(T664* C);
/*NO_DISPATCH*/T0* r664written_declaration_type_mark(void);
/*NO_DISPATCH*/T6 r664use_current(T664* C,T0* a1);
/*NO_DISPATCH*/T0* r664non_void_no_dispatch_type(T664* C,T0* a1);
/*NO_DISPATCH*/T6 r664side_effect_free(T0* a1);
/*NO_DISPATCH*/T0* r664resolve_in(T664* C,T0* a1);
/*NO_DISPATCH*/T0* r664to_instruction(T664* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668specialize_and_check(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668to_expression(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r668make(T668* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668simplify(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r668set_tag(T668* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668static_simplify(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r668inline_dynamic_dispatch_(T668* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r668safety_check(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r668is_result(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r668is_static(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r668is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/void r668accept(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668adapt_for(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668collect(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T338 r668start_position(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668twin(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r668use_current(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T6 r668side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668tag(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668resolve_in(T668* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1*/T0* r668to_instruction(T668* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669specialize_and_check(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669to_expression(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r669make(T669* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669simplify(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669static_simplify(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r669inline_dynamic_dispatch_(T669* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r669is_result(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r669is_static(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r669is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/void r669accept(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T338 r669start_position(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669twin(T669* C);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r669use_current(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669non_void_no_dispatch_type(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T6 r669side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669resolve_in(T669* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY2*/T0* r669to_instruction(T669* C);
/*VOID_CALL*/T672*create672make(T338 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r672specialize_and_check(T672* C,T0* a1);
/*VOID_CALL*/T0* r672to_expression(T672* C);
/*VOID_CALL*/void r672make(T672* C,T338 a1,T0* a2,T0* a3);
/*VOID_CALL*/T0* r672simplify(T672* C,T0* a1);
/*VOID_CALL*/T0* r672static_simplify(T672* C);
/*VOID_CALL*/void r672inline_dynamic_dispatch_(T672* C,T0* a1,T0* a2);
/*VOID_CALL*/void r672safety_check(T672* C,T0* a1);
/*VOID_CALL*/T6 r672is_stored_in_some_local_variable(void);
/*VOID_CALL*/void r672accept(T672* C,T0* a1);
/*VOID_CALL*/T0* r672declaration_type(T672* C);
/*VOID_CALL*/T0* r672twin(T672* C);
/*VOID_CALL*/T0* r672written_declaration_type_mark(void);
/*VOID_CALL*/T6 r672use_current(T0* a1);
/*VOID_CALL*/T0* r672non_void_no_dispatch_type(T0* a1);
/*VOID_CALL*/T6 r672side_effect_free(T0* a1);
/*VOID_CALL*/T0* r672resolve_in(T672* C,T0* a1);
/*VOID_CALL*/T0* r672to_instruction(T672* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T675*create675make(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675specialize_and_check(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675to_expression(T675* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r675make(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675simplify(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675static_simplify(T675* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r675inline_dynamic_dispatch_(T675* C,T0* a1,T0* a2);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r675safety_check(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r675is_stored_in_some_local_variable(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/void r675accept(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675collect(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T338 r675start_position(T675* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675twin(T675* C);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675written_declaration_type_mark(void);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r675use_current(T675* C,T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675non_void_no_dispatch_type(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T6 r675side_effect_free(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675resolve_in(T0* a1);
/*DYNAMIC_DISPATCH_TEMPORARY1_ID*/T0* r675to_instruction(T675* C);
/*INTERNAL_LOCAL2*/T667*create667make(T338 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r667specialize_and_check(T667* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r667to_expression(T667* C);
/*INTERNAL_LOCAL2*/void r667make(T667* C,T338 a1,T0* a2,T0* a3,T6 a4);
/*INTERNAL_LOCAL2*/T0* r667simplify(T667* C,T0* a1);
/*INTERNAL_LOCAL2*/void r667set_tag(T667* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r667static_simplify(T667* C);
/*INTERNAL_LOCAL2*/void r667inline_dynamic_dispatch_(T667* C,T0* a1,T0* a2);
/*INTERNAL_LOCAL2*/T0* r667tagged_tag(T667* C,T0* a1);
/*INTERNAL_LOCAL2*/T6 r667is_stored_in_some_local_variable(void);
/*INTERNAL_LOCAL2*/void r667accept(T667* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r667declaration_type(T667* C);
/*INTERNAL_LOCAL2*/T0* r667collect(T667* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r667twin(T667* C);
/*INTERNAL_LOCAL2*/T0* r667written_declaration_type_mark(T667* C);
/*INTERNAL_LOCAL2*/T6 r667use_current(T0* a1);
/*INTERNAL_LOCAL2*/T0* r667non_void_no_dispatch_type(T0* a1);
/*INTERNAL_LOCAL2*/T6 r667side_effect_free(T0* a1);
/*INTERNAL_LOCAL2*/T0* r667resolve_in(T667* C,T0* a1);
/*INTERNAL_LOCAL2*/T0* r667to_instruction(T667* C);
/*UNUSED_EXPRESSION*/T661*create661make(T0* a1);
/*UNUSED_EXPRESSION*/T0* r661to_expression(T661* C);
/*UNUSED_EXPRESSION*/void r661make(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r661simplify(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/void r661inline_dynamic_dispatch_(T661* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/void r661safety_check(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/void r661accept(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r661adapt_for(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r661collect(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/T338 r661start_position(T661* C);
/*UNUSED_EXPRESSION*/T6 r661use_current(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/T6 r661side_effect_free(T661* C,T0* a1);
/*UNUSED_EXPRESSION*/T0* r661inline_dynamic_dispatch(T661* C,T0* a1,T0* a2);
/*UNUSED_EXPRESSION*/T0* r661to_instruction(T661* C);
/*NATURAL_CONSTANT*/T0* r665to_expression(T665* C);
/*NATURAL_CONSTANT*/void r665make(T665* C,uint64_t a1,T338 a2);
/*NATURAL_CONSTANT*/void r665pretty(T665* C,T2 a1);
/*NATURAL_CONSTANT*/T0* r665simplify(T665* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r665static_simplify(T665* C);
/*NATURAL_CONSTANT*/void r665inline_dynamic_dispatch_(T665* C,T0* a1,T0* a2);
/*NATURAL_CONSTANT*/T6 r665is_stored_in_some_local_variable(void);
/*NATURAL_CONSTANT*/void r665accept(T665* C,T0* a1);
/*NATURAL_CONSTANT*/void r665with(T665* C,uint64_t a1,T338 a2,T0* a3);
/*NATURAL_CONSTANT*/T0* r665result_type(T665* C);
/*NATURAL_CONSTANT*/T0* r665declaration_type(T665* C);
/*NATURAL_CONSTANT*/T0* r665collect(T665* C,T0* a1);
/*NATURAL_CONSTANT*/void r665pretty_target(T665* C,T2 a1);
/*NATURAL_CONSTANT*/T0* r665twin(T665* C);
/*NATURAL_CONSTANT*/T0* r665written_declaration_type_mark(void);
/*NATURAL_CONSTANT*/T6 r665use_current(T0* a1);
/*NATURAL_CONSTANT*/void r665bracketed_pretty(T665* C,T2 a1);
/*NATURAL_CONSTANT*/T0* r665non_void_no_dispatch_type(T665* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r665to_string(T665* C);
/*NATURAL_CONSTANT*/T6 r665side_effect_free(T0* a1);
/*NATURAL_CONSTANT*/void r665append_in(T665* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r665resolve_in(T665* C,T0* a1);
/*NATURAL_CONSTANT*/T0* r665to_instruction(T665* C);
/*NATURAL_CONSTANT*/void r665_P_372_pretty_target(T665* C,T2 a1);
/*NULL_POINTER*/T0* r673specialize_and_check(T673* C,T0* a1);
/*NULL_POINTER*/T0* r673to_expression(T673* C);
/*NULL_POINTER*/void r673make(T673* C,T338 a1,T0* a2);
/*NULL_POINTER*/T0* r673simplify(T673* C,T0* a1);
/*NULL_POINTER*/T0* r673static_simplify(T673* C);
/*NULL_POINTER*/void r673inline_dynamic_dispatch_(T673* C,T0* a1,T0* a2);
/*NULL_POINTER*/T6 r673is_stored_in_some_local_variable(void);
/*NULL_POINTER*/void r673accept(T673* C,T0* a1);
extern T0*oBC673declaration_type;
extern int fBC673declaration_type;
/*NULL_POINTER*/T0* r673declaration_type(void);
/*NULL_POINTER*/T0* r673twin(T673* C);
/*NULL_POINTER*/T0* r673written_declaration_type_mark(void);
/*NULL_POINTER*/T6 r673use_current(T0* a1);
/*NULL_POINTER*/T0* r673non_void_no_dispatch_type(T0* a1);
/*NULL_POINTER*/T6 r673side_effect_free(T0* a1);
/*NULL_POINTER*/T0* r673resolve_in(T0* a1);
/*NULL_POINTER*/T0* r673to_instruction(T673* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T654*create654make(T338 a1,T0* a2,T2 a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r654to_expression(T654* C);
/*RUN_TIME_ERROR_INSTRUCTION*/void r654make(T654* C,T338 a1,T0* a2,T2 a3);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r654simplify(T654* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/void r654inline_dynamic_dispatch_(T654* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/void r654accept(T654* C,T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r654error_name(T654* C);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r654use_current(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T6 r654side_effect_free(T0* a1);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r654inline_dynamic_dispatch(T654* C,T0* a1,T0* a2);
/*RUN_TIME_ERROR_INSTRUCTION*/T0* r654to_instruction(T654* C);
/*EXCEPTIONS*/T0* r329name_of_exception(T2 a1);
/*IMPLICIT_CAST*/T0* r524specialize_and_check(T524* C,T0* a1);
/*IMPLICIT_CAST*/T0* r524to_expression(T524* C);
/*IMPLICIT_CAST*/void r524make(T524* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/void r524pretty(T524* C,T2 a1);
/*IMPLICIT_CAST*/T0* r524simplify(T524* C,T0* a1);
/*IMPLICIT_CAST*/T6 r524extra_bracket_flag(T524* C);
/*IMPLICIT_CAST*/T0* r524static_simplify(T524* C);
/*IMPLICIT_CAST*/void r524inline_dynamic_dispatch_(T524* C,T0* a1,T0* a2);
/*IMPLICIT_CAST*/void r524safety_check(T524* C,T0* a1);
/*IMPLICIT_CAST*/T6 r524is_result(T524* C);
/*IMPLICIT_CAST*/T2 r524precedence(T524* C);
/*IMPLICIT_CAST*/T0* r524specialize_thru(T524* C,T0* a1,T0* a2,T0* a3);
/*IMPLICIT_CAST*/T6 r524is_static(T524* C);
/*IMPLICIT_CAST*/T6 r524is_stored_in_some_local_variable(void);
/*IMPLICIT_CAST*/void r524accept(T524* C,T0* a1);
/*IMPLICIT_CAST*/T0* r524adapt_for(T524* C,T0* a1);
/*IMPLICIT_CAST*/T0* r524collect(T524* C,T0* a1);
/*IMPLICIT_CAST*/T6 r524is_current(void);
/*IMPLICIT_CAST*/void r524pretty_target(T524* C,T2 a1);
/*IMPLICIT_CAST*/T338 r524start_position(T524* C);
/*IMPLICIT_CAST*/T0* r524twin(T524* C);
/*IMPLICIT_CAST*/T0* r524written_declaration_type_mark(void);
/*IMPLICIT_CAST*/T6 r524use_current(T524* C,T0* a1);
/*IMPLICIT_CAST*/void r524bracketed_pretty(T524* C,T2 a1);
/*IMPLICIT_CAST*/T6 r524is_void(T524* C);
/*IMPLICIT_CAST*/T0* r524non_void_no_dispatch_type(T0* a1);
/*IMPLICIT_CAST*/T6 r524side_effect_free(T524* C,T0* a1);
/*IMPLICIT_CAST*/T6 r524is_manifest_string(T524* C);
/*IMPLICIT_CAST*/T0* r524resolve_in(T524* C,T0* a1);
/*IMPLICIT_CAST*/T0* r524to_instruction(T524* C);
/*AGENT_EXPRESSION*/T0* r677specialize_and_check(T677* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r677to_expression(T677* C);
/*AGENT_EXPRESSION*/void r677make(T677* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_EXPRESSION*/void r677agent_launcher_collect(T677* C,T0* a1);
/*AGENT_EXPRESSION*/void r677pretty(T677* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r677simplify(T677* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r677static_simplify(T677* C);
/*AGENT_EXPRESSION*/void r677inline_dynamic_dispatch_(T677* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/void r677safety_check(T677* C,T0* a1);
/*AGENT_EXPRESSION*/void r677init(T677* C,T0* a1,T0* a2);
/*AGENT_EXPRESSION*/T0* r677specialize_thru(T677* C,T0* a1,T0* a2,T0* a3);
/*AGENT_EXPRESSION*/void r677specialize_check(T677* C,T0* a1);
/*AGENT_EXPRESSION*/T6 r677is_stored_in_some_local_variable(void);
/*AGENT_EXPRESSION*/void r677accept(T677* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r677adapt_for(T677* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r677collect(T677* C,T0* a1);
/*AGENT_EXPRESSION*/void r677pretty_target(T677* C,T2 a1);
/*AGENT_EXPRESSION*/T338 r677start_position(T677* C);
/*AGENT_EXPRESSION*/T0* r677twin(T677* C);
/*AGENT_EXPRESSION*/T0* r677written_declaration_type_mark(void);
/*AGENT_EXPRESSION*/T6 r677use_current(T677* C,T0* a1);
/*AGENT_EXPRESSION*/void r677bracketed_pretty(T677* C,T2 a1);
/*AGENT_EXPRESSION*/T0* r677non_void_no_dispatch_type(T0* a1);
/*AGENT_EXPRESSION*/T6 r677side_effect_free(T0* a1);
/*AGENT_EXPRESSION*/T0* r677resolve_in(T677* C,T0* a1);
/*AGENT_EXPRESSION*/T0* r677to_instruction(T677* C);
/*AGENT_EXPRESSION*/T0* r677current_or_twin_init(T677* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T663*create663make(T338 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r663to_expression(T663* C);
/*VOID_PROC_CALL*/void r663make(T663* C,T338 a1,T0* a2,T0* a3);
/*VOID_PROC_CALL*/T0* r663simplify(T663* C,T0* a1);
/*VOID_PROC_CALL*/void r663inline_dynamic_dispatch_(T663* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/void r663safety_check(T663* C,T0* a1);
/*VOID_PROC_CALL*/void r663accept(T663* C,T0* a1);
/*VOID_PROC_CALL*/T6 r663use_current(T0* a1);
/*VOID_PROC_CALL*/T6 r663side_effect_free(T0* a1);
/*VOID_PROC_CALL*/T0* r663inline_dynamic_dispatch(T663* C,T0* a1,T0* a2);
/*VOID_PROC_CALL*/T0* r663to_instruction(T663* C);
/*AGENT_INSTRUCTION*/T0* r659specialize_and_check(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r659to_expression(T659* C);
/*AGENT_INSTRUCTION*/void r659make(T659* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*AGENT_INSTRUCTION*/void r659agent_launcher_collect(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r659simplify(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/void r659inline_dynamic_dispatch_(T659* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/void r659safety_check(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/void r659init(T659* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r659specialize_thru(T659* C,T0* a1,T0* a2,T0* a3);
/*AGENT_INSTRUCTION*/void r659specialize_check(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/void r659accept(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r659adapt_for(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/T0* r659collect(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/T338 r659start_position(T659* C);
/*AGENT_INSTRUCTION*/T0* r659twin(T659* C);
/*AGENT_INSTRUCTION*/T6 r659use_current(T659* C,T0* a1);
/*AGENT_INSTRUCTION*/T6 r659side_effect_free(T0* a1);
/*AGENT_INSTRUCTION*/T0* r659inline_dynamic_dispatch(T659* C,T0* a1,T0* a2);
/*AGENT_INSTRUCTION*/T0* r659to_instruction(T659* C);
/*AGENT_INSTRUCTION*/T0* r659current_or_twin_init(T659* C,T0* a1,T0* a2);
/*NUMBER_TOOLS*/T0* r306from_integer_64(T11 a1);
/*INLINE_MEMO*/T0* r527expression(T527* C);
/*INLINE_MEMO*/T0* r527instruction(T527* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_compound(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123not_yet_implemented(T123* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_check_compound(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_procedure_call_n(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_once_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_plug_in(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_manifest_generic(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_run_time_error_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fake_target(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_no_dispatch(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_call(T123* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_precursor_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_local_var_list(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_anonymous_feature(T123* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_address_of(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_procedure_call_1(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_procedure_call_0(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_inspect_statement(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_built_in(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assertion_list(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_function_call_n(T123* C,T0* a1);
extern T0*oBC123anonymous_feature_stack;
extern int fBC123anonymous_feature_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r123anonymous_feature_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_retry_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_c_inline(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment_test(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_no_invariant_wrapper(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_implicit_cast(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_once_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_deferred_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_create_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_external_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_effective_arg_list(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r123visit(T123* C,T0* a1,T0* a2);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_when_clause(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_built_in_eq_neq(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_manifest_tuple(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fake_tuple(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_debug_compound(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_e_procedure(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_agent_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_closed_operand(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_call_1(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_call_0(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_deferred_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_void_call(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_unused_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_writable_attribute(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_array_item(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_e_old(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_agent_creation(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T6 r123can_be_dropped(T123* C,T0* a1,T0* a2,T0* a3);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123crash(T123* C);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_ifthenelse(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_create_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assertion(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_loop_instruction(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_e_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_ifthen(T123* C,T0* a1);
extern T0*oBC123type_stack;
extern int fBC123type_stack;
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/T0* r123type_stack(void);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment_call_assigner(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_c_plus_plus(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fast_array_of_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_external_function(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_require_assertion(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_compound_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_native_c(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_agent_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_open_operand(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_void_proc_call(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment_attempt(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_fake_argument(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_precursor_expression(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_expression_with_comment(T123* C,T0* a1);
/*PRECOMPUTABLE_ROUTINE_DETECTOR*/void r123visit_assignment(T123* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_assignment(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_debug_compound(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_class_invariant(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_void_call(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_create_expression(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_fake_tuple(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_e_false(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_native_array_item(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_implicit_cast(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_integer_constant(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_run_time_error_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_manifest_string_inspect_statement(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_compound_expression(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_precursor_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_argument_name2(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_dynamic_dispatch_temporary1_id(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_old_manifest_array(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_sedb(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_require_assertion(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_c_inline(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_create_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_generator_generating_type(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_implicit_current(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_check_compound(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_compound(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_effective_arg_list(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_call_infix_or_else(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_real_constant(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_agent_creation(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_static_call_0_c(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_assignment_call_assigner(T732* C,T0* a1);
/*CODE_COMPARATOR*/T6 r732trace_in(T732* C,T0* a1,T0* a2,T0* a3);
/*CODE_COMPARATOR*/void r732visit_call_infix(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_no_dispatch(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_character_constant(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_dynamic_dispatch_temporary1(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_null_pointer(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_dynamic_dispatch_temporary2(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_e_true(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_ensure_assertion(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_procedure_call_n(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_natural_constant(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_call_infix_implies(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_assignment_attempt(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_assignment_test(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_written_current(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_retry_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_expression_with_comment(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_other_inspect_statement(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_assertion(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_function_call_0(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_manifest_string(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_function_call_1(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_non_void_no_dispatch(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_manifest_tuple(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_closed_operand(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_when_clause(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_ifthen(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_open_operand(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_call_infix_and_then(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_local_name2(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_e_old(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_ifthenelse(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_create_writable(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_fake_target(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_call_prefix(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_writable_attribute_name(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_unused_expression(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_internal_local2(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_procedure_call_1(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_address_of(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_loop_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_procedure_call_0(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_fake_argument(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_void_proc_call(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_raw_create_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_e_void(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_agent_expression(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_loop_variant(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_manifest_generic(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_built_in_eq_neq(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_precursor_expression(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_agent_instruction(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_assertion_list(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_no_invariant_wrapper(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_result(T732* C,T0* a1);
/*CODE_COMPARATOR*/void r732visit_function_call_n(T732* C,T0* a1);
/*RUN_FEATURE_8*/T2 r737arg_count(T737* C);
/*RUN_FEATURE_8*/void r737compute_use_current(T737* C);
/*RUN_FEATURE_8*/void r737std_compute_use_current(T737* C);
/*RUN_FEATURE_8*/void r737for(T737* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_8*/void r737accept(T737* C,T0* a1);
/*RUN_FEATURE_8*/void r737set_result_type(T737* C);
/*RUN_FEATURE_8*/T338 r737start_position(T737* C);
/*RUN_FEATURE_8*/T6 r737use_current(T737* C);
/*RUN_FEATURE_8*/void r737mapping_name_in(T737* C,T0* a1);
/*RUN_FEATURE_8*/void r737do_adapt(T737* C);
/*RUN_FEATURE_8*/void r737adapt(T737* C);
/*RUN_FEATURE_8*/T0* r737feature_stamp(T737* C);
/*EXCEPTIONS_HANDLER*/void r117se_evobt(T117* C);
/*EXCEPTIONS_HANDLER*/void r117customize_c_runtime(T117* C);
/*EXCEPTIONS_HANDLER*/T0* r117cpp(void);
/*EXCEPTIONS_HANDLER*/void r117initialize_runtime(T117* C);
/*EXCEPTIONS_HANDLER*/void r117bad_inspect_value(T117* C,T338 a1);
/*STATIC_CALL_0_C*/T0* r414declaration_type(T414* C);
/*STATIC_CALL_0_C*/T0* r414adapt_for(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414resolve_in(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414use_current_stack(void);
/*STATIC_CALL_0_C*/T0* r414collect(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414specialize_in(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414written_declaration_type_mark(void);
/*STATIC_CALL_0_C*/T0* r414simplify(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414arguments(void);
/*STATIC_CALL_0_C*/void r414pretty_target(T414* C,T2 a1);
/*STATIC_CALL_0_C*/void r414safety_check(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414to_expression(T414* C);
/*STATIC_CALL_0_C*/T0* r414specialize_thru(T414* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/T0* r414manifest_expression(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414feature_accumulator(void);
/*STATIC_CALL_0_C*/T0* r414specialize_and_check(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T6 r414simplify_limit_reached(T414* C);
/*STATIC_CALL_0_C*/void r414inline_dynamic_dispatch_(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r414to_instruction(T414* C);
/*STATIC_CALL_0_C*/T0* r414current_or_twin_init(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r414standard_check_export_and_obsolete_calls(T414* C,T0* a1,T0* a2,T0* a3);
/*STATIC_CALL_0_C*/void r414make(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/T0* r414echo(void);
/*STATIC_CALL_0_C*/void r414type_id_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/void r414non_void_check(T0* a1,T0* a2,T0* a3,T0* a4);
/*STATIC_CALL_0_C*/T6 r414use_current(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414static_simplify(T414* C);
/*STATIC_CALL_0_C*/T0* r414extra_local_expanded(T414* C,T0* a1);
/*STATIC_CALL_0_C*/void r414function_and_argument_count_check(T414* C,T0* a1,T0* a2);
/*STATIC_CALL_0_C*/void r414pretty(T414* C,T2 a1);
/*STATIC_CALL_0_C*/T6 r414side_effect_free(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414non_void_no_dispatch_type(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414inline_with(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T0* r414twin(T414* C);
/*STATIC_CALL_0_C*/void r414bracketed_pretty(T414* C,T2 a1);
/*STATIC_CALL_0_C*/void r414accept(T414* C,T0* a1);
/*STATIC_CALL_0_C*/T338 r414start_position(T414* C);
/*STATIC_CALL_0_C*/T6 r414is_stored_in_some_local_variable(void);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_and_check(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411to_expression(T411* C);
/*RAW_CREATE_INSTRUCTION*/void r411make(T411* C,T338 a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/T0* r411created_type(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411typed_internals(T411* C,T338 a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r411pretty(T411* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411simplify(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_in(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411inline_dynamic_dispatch_(T411* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r411safety_check(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411set_call(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411init(T411* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/void r411specialize_checks(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_thru(T411* C,T0* a1,T0* a2,T0* a3);
/*RAW_CREATE_INSTRUCTION*/void r411accept(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/void r411set_eiffel_parser_stamp(T411* C,T2 a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411adapt_for(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411default_create_name(void);
/*RAW_CREATE_INSTRUCTION*/T0* r411collect(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411any_default_create_fs(void);
/*RAW_CREATE_INSTRUCTION*/T0* r411twin(T411* C);
/*RAW_CREATE_INSTRUCTION*/T0* r411creation_procedure(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r411use_current(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T6 r411side_effect_free(T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411arguments(T411* C);
/*RAW_CREATE_INSTRUCTION*/T0* r411inline_dynamic_dispatch(T411* C,T0* a1,T0* a2);
/*RAW_CREATE_INSTRUCTION*/void r411make_specialized(T411* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/void r411create_instruction_make(T411* C,T338 a1,T0* a2,T0* a3,T0* a4);
/*RAW_CREATE_INSTRUCTION*/T0* r411to_instruction(T411* C);
/*RAW_CREATE_INSTRUCTION*/T0* r411specialize_without_checks(T411* C,T0* a1);
/*RAW_CREATE_INSTRUCTION*/T0* r411current_or_twin_init(T411* C,T0* a1,T0* a2,T0* a3);
/*GENERATOR_GENERATING_TYPE*/T0* r366to_expression(T366* C);
/*GENERATOR_GENERATING_TYPE*/T0* r366simplify(T366* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366static_simplify(T366* C);
/*GENERATOR_GENERATING_TYPE*/void r366inline_dynamic_dispatch_(T366* C,T0* a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/void r366make_generating_type(T366* C,T338 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T6 r366is_stored_in_some_local_variable(void);
/*GENERATOR_GENERATING_TYPE*/void r366accept(T366* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366declaration_type(void);
/*GENERATOR_GENERATING_TYPE*/T0* r366collect(T366* C,T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366twin(T366* C);
/*GENERATOR_GENERATING_TYPE*/T0* r366written_declaration_type_mark(void);
/*GENERATOR_GENERATING_TYPE*/T6 r366use_current(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366non_void_no_dispatch_type(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T6 r366side_effect_free(T0* a1);
/*GENERATOR_GENERATING_TYPE*/void r366make_generator(T366* C,T338 a1,T0* a2);
/*GENERATOR_GENERATING_TYPE*/T0* r366resolve_in(T0* a1);
/*GENERATOR_GENERATING_TYPE*/T0* r366to_instruction(T366* C);
/*RUN_FEATURE_1*/void r783compute_use_current(T783* C);
/*RUN_FEATURE_1*/T0* r783require_assertion(void);
/*RUN_FEATURE_1*/void r783for(T783* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_1*/void r783accept(T783* C,T0* a1);
/*RUN_FEATURE_1*/void r783set_result_type(T783* C);
/*RUN_FEATURE_1*/T338 r783start_position(T783* C);
/*RUN_FEATURE_1*/T6 r783use_current(T783* C);
/*RUN_FEATURE_1*/void r783mapping_name_in(T783* C,T0* a1);
/*RUN_FEATURE_1*/T0* r783arguments(void);
/*RUN_FEATURE_1*/void r783adapt(T783* C);
/*RUN_FEATURE_1*/T0* r783feature_stamp(T783* C);
/*RUN_FEATURE_6*/void r636compute_use_current(T636* C);
/*RUN_FEATURE_6*/void r636std_compute_use_current(T636* C);
/*RUN_FEATURE_6*/void r636for(T636* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_6*/void r636accept(T636* C,T0* a1);
/*RUN_FEATURE_6*/void r636set_result_type(T636* C);
/*RUN_FEATURE_6*/T338 r636start_position(T636* C);
/*RUN_FEATURE_6*/T6 r636use_current(T636* C);
/*RUN_FEATURE_6*/void r636mapping_name_in(T636* C,T0* a1);
/*RUN_FEATURE_6*/void r636do_adapt(T636* C);
/*RUN_FEATURE_6*/void r636adapt(T636* C);
/*RUN_FEATURE_6*/T0* r636feature_stamp(T636* C);
/*RUN_FEATURE_6*/T6 r636is_precomputable_once(T636* C);
/*RUN_FEATURE_9*/void r785compute_use_current(T785* C);
/*RUN_FEATURE_9*/void r785for(T785* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_9*/void r785accept(T785* C,T0* a1);
/*RUN_FEATURE_9*/void r785set_result_type(T785* C);
/*RUN_FEATURE_9*/T338 r785start_position(T785* C);
/*RUN_FEATURE_9*/T6 r785use_current(T785* C);
/*RUN_FEATURE_9*/void r785mapping_name_in(T785* C,T0* a1);
/*RUN_FEATURE_9*/void r785do_adapt(T785* C);
/*RUN_FEATURE_9*/void r785adapt(T785* C);
/*RUN_FEATURE_9*/T0* r785feature_stamp(T785* C);
/*RUN_FEATURE_7*/T2 r782arg_count(T782* C);
/*RUN_FEATURE_7*/void r782compute_use_current(T782* C);
/*RUN_FEATURE_7*/void r782std_compute_use_current(T782* C);
/*RUN_FEATURE_7*/void r782for(T782* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_7*/void r782accept(T782* C,T0* a1);
/*RUN_FEATURE_7*/T338 r782start_position(T782* C);
/*RUN_FEATURE_7*/T6 r782use_current(T782* C);
/*RUN_FEATURE_7*/void r782mapping_name_in(T782* C,T0* a1);
/*RUN_FEATURE_7*/void r782do_adapt(T782* C);
/*RUN_FEATURE_7*/void r782adapt(T782* C);
/*RUN_FEATURE_7*/T0* r782feature_stamp(T782* C);
/*NATIVE_ARRAY_ITEM*/T0* r674specialize_and_check(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674to_expression(T674* C);
/*NATIVE_ARRAY_ITEM*/void r674make(T674* C,T338 a1,T0* a2,T0* a3);
/*NATIVE_ARRAY_ITEM*/T0* r674simplify(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674static_simplify(T674* C);
/*NATIVE_ARRAY_ITEM*/void r674inline_dynamic_dispatch_(T674* C,T0* a1,T0* a2);
/*NATIVE_ARRAY_ITEM*/void r674safety_check(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T6 r674is_stored_in_some_local_variable(void);
/*NATIVE_ARRAY_ITEM*/void r674accept(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674adapt_for(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674collect(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674twin(T674* C);
/*NATIVE_ARRAY_ITEM*/T0* r674written_declaration_type_mark(void);
/*NATIVE_ARRAY_ITEM*/T6 r674use_current(T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674non_void_no_dispatch_type(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T6 r674side_effect_free(T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674resolve_in(T674* C,T0* a1);
/*NATIVE_ARRAY_ITEM*/T0* r674to_instruction(T674* C);
/*RUN_FEATURE_3*/void r531compute_use_current(T531* C);
/*RUN_FEATURE_3*/void r531std_compute_use_current(T531* C);
/*RUN_FEATURE_3*/void r531for(T531* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_3*/T6 r531empty_body_side_effect_free_in_boost(T531* C);
/*RUN_FEATURE_3*/T6 r531is_empty_or_null_body(T531* C);
/*RUN_FEATURE_3*/void r531accept(T531* C,T0* a1);
/*RUN_FEATURE_3*/T338 r531start_position(T531* C);
/*RUN_FEATURE_3*/T0* r531memory_dispose(T531* C);
/*RUN_FEATURE_3*/T6 r531use_current(T531* C);
/*RUN_FEATURE_3*/void r531mapping_name_in(T531* C,T0* a1);
/*RUN_FEATURE_3*/void r531do_adapt(T531* C);
/*RUN_FEATURE_3*/T6 r531side_effect_free(T531* C);
/*RUN_FEATURE_3*/void r531adapt(T531* C);
/*RUN_FEATURE_3*/T0* r531feature_stamp(T531* C);
/*RUN_FEATURE_4*/void r784compute_use_current(T784* C);
/*RUN_FEATURE_4*/void r784std_compute_use_current(T784* C);
/*RUN_FEATURE_4*/void r784for(T784* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_4*/void r784accept(T784* C,T0* a1);
/*RUN_FEATURE_4*/void r784set_result_type(T784* C);
/*RUN_FEATURE_4*/T338 r784start_position(T784* C);
/*RUN_FEATURE_4*/T6 r784use_current(T784* C);
/*RUN_FEATURE_4*/void r784mapping_name_in(T784* C,T0* a1);
/*RUN_FEATURE_4*/void r784do_adapt(T784* C);
/*RUN_FEATURE_4*/void r784adapt(T784* C);
/*RUN_FEATURE_4*/T0* r784feature_stamp(T784* C);
/*RUN_FEATURE_5*/void r635compute_use_current(T635* C);
/*RUN_FEATURE_5*/void r635std_compute_use_current(T635* C);
/*RUN_FEATURE_5*/void r635for(T635* C,T0* a1,T0* a2,T0* a3);
/*RUN_FEATURE_5*/void r635accept(T635* C,T0* a1);
/*RUN_FEATURE_5*/T338 r635start_position(T635* C);
/*RUN_FEATURE_5*/T6 r635use_current(T635* C);
/*RUN_FEATURE_5*/void r635mapping_name_in(T635* C,T0* a1);
/*RUN_FEATURE_5*/void r635do_adapt(T635* C);
/*RUN_FEATURE_5*/void r635adapt(T635* C);
/*RUN_FEATURE_5*/T0* r635feature_stamp(T635* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823put_line(T823* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823make(T823* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823filtered_put_character(T823* C,T3 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823create_pipe(T823* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823put_string(T823* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r823tmp_string(void);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823put_real_format(T823* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823put_integer(T823* C,T11 a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823filtered_flush(T823* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823put_abstract_string(T823* C,T0* a1);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823dispose(T823* C);
/*EXEC_OUTPUT_STREAM_POSIX*/void r823disconnect(T823* C);
/*EXEC_OUTPUT_STREAM_POSIX*/T0* r823as_output_stream(T823* C);
/*EXEC_INPUT_STREAM_POSIX*/void r825make(T825* C,T0* a1);
/*EXEC_INPUT_STREAM_POSIX*/void r825filtered_read_character(T825* C);
/*EXEC_INPUT_STREAM_POSIX*/void r825create_pipe(T825* C);
/*EXEC_INPUT_STREAM_POSIX*/void r825swap_unread_buffer(T825* C);
/*EXEC_INPUT_STREAM_POSIX*/void r825dispose(T825* C);
/*EXEC_INPUT_STREAM_POSIX*/void r825disconnect(T825* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826put_line(T826* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826make(T826* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826filtered_put_character(T826* C,T3 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826create_pipe(T826* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826put_string(T826* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r826tmp_string(void);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826put_real_format(T826* C,T5 a1,T2 a2);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826put_integer(T826* C,T11 a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826filtered_flush(T826* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826put_abstract_string(T826* C,T0* a1);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826dispose(T826* C);
/*EXEC_OUTPUT_STREAM_WIN32*/void r826disconnect(T826* C);
/*EXEC_OUTPUT_STREAM_WIN32*/T0* r826as_output_stream(T826* C);
/*EXEC_INPUT_STREAM_WIN32*/void r827make(T827* C,T0* a1);
/*EXEC_INPUT_STREAM_WIN32*/void r827filtered_read_character(T827* C);
/*EXEC_INPUT_STREAM_WIN32*/void r827create_pipe(T827* C);
/*EXEC_INPUT_STREAM_WIN32*/void r827swap_unread_buffer(T827* C);
/*EXEC_INPUT_STREAM_WIN32*/void r827dispose(T827* C);
/*EXEC_INPUT_STREAM_WIN32*/void r827disconnect(T827* C);
/*FAKE_TUPLE*/T0* r670specialize_and_check(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670to_expression(T670* C);
/*FAKE_TUPLE*/void r670make(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670simplify(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670static_simplify(T670* C);
/*FAKE_TUPLE*/T0* r670specialize_in(T670* C,T0* a1);
/*FAKE_TUPLE*/void r670inline_dynamic_dispatch_(T670* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r670expression(T670* C,T2 a1);
/*FAKE_TUPLE*/void r670safety_check(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670implicit_cast(T670* C,T0* a1,T0* a2);
/*FAKE_TUPLE*/T0* r670specialize_thru(T670* C,T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T6 r670is_stored_in_some_local_variable(void);
/*FAKE_TUPLE*/void r670accept(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670adapt_for(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670declaration_type(T670* C);
/*FAKE_TUPLE*/T0* r670collect(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670inline_dynamic_dispatch_of(T0* a1,T0* a2,T0* a3);
/*FAKE_TUPLE*/T0* r670twin(T670* C);
/*FAKE_TUPLE*/T0* r670written_declaration_type_mark(void);
/*FAKE_TUPLE*/T6 r670use_current(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670non_void_no_dispatch_type(T0* a1);
/*FAKE_TUPLE*/T6 r670side_effect_free(T0* a1);
/*FAKE_TUPLE*/T2 r670count(T670* C);
/*FAKE_TUPLE*/T0* r670resolve_in(T670* C,T0* a1);
/*FAKE_TUPLE*/T0* r670to_instruction(T670* C);
/*INTEGER_64_NUMBER*/void r702make(T702* C,T11 a1);
/*INTEGER_64_NUMBER*/T11 r702to_integer_64(T702* C);
/*INTEGER_64_NUMBER*/T0* r702multiply_with_big_integer_number(T702* C,T0* a1);
extern T0*oBC305zero;
extern T0*oBC305mutable_register1;
extern int fBC305mutable_register1;
/*INTEGER_64_NUMBER*/T0* r702mutable_register1(void);
extern T0*oBC305mutable_register2;
extern int fBC305mutable_register2;
/*INTEGER_64_NUMBER*/T0* r702mutable_register2(void);
extern T0*oBC305mutable_register3;
extern int fBC305mutable_register3;
/*INTEGER_64_NUMBER*/T0* r702mutable_register3(void);
/*INTEGER_64_NUMBER*/T0* r702_ix_42(T702* C,T0* a1);
/*INTEGER_64_NUMBER*/T0* r702_ix_43(T702* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r702is_integer_32(T702* C);
/*INTEGER_64_NUMBER*/T0* r702_px_45(T702* C);
/*INTEGER_64_NUMBER*/T0* r702_ix_45(T702* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r702is_integer_16(T702* C);
/*INTEGER_64_NUMBER*/T0* r702add_with_big_integer_number(T702* C,T0* a1);
/*INTEGER_64_NUMBER*/T6 r702is_integer_8(T702* C);
/*INTEGER_64_NUMBER*/T0* r702_ix_6442(T702* C,T11 a1);
/*INTEGER_64_NUMBER*/T0* r702_ix_6443(T702* C,T11 a1);
/*INTEGER_64_NUMBER*/T10 r702to_integer_16(T702* C);
/*INTEGER_64_NUMBER*/T0* r702to_string(T702* C);
/*INTEGER_64_NUMBER*/T1 r702to_integer_8(T702* C);
/*INTEGER_64_NUMBER*/T2 r702to_integer_32(T702* C);
/*INTEGER_64_NUMBER*/void r702append_in(T702* C,T0* a1);
extern T0*oBC305string_buffer;
extern int fBC305string_buffer;
/*INTEGER_64_NUMBER*/T0* r702string_buffer(void);
/*C_PLUGIN*/T6 r976is_equal(T976* C,T0* a1);
/*C_PLUGIN*/void r976make(T976* C,T338 a1,T0* a2,T0* a3);
/*C_PLUGIN*/void r976add_c_source(T976* C,T0* a1);
/*C_PLUGIN*/T0* r976echo(void);
/*C_PLUGIN*/void r976add_c_header(T976* C,T0* a1);
extern T0*oBC533tfr;
/*C_PLUGIN*/T0* r976cpp(void);
/*C_PLUGIN*/void r976read_auto_init(T976* C,T0* a1);
/*C_PLUGIN*/T0* r976system_tools(void);
/*C_PLUGIN*/T0* r976absolute_path(T976* C,T0* a1);
/*C_PLUGIN*/void r976try_auto_init(T976* C);
/*C_PLUGIN*/T0* r976parser_buffer(void);
/*C_PLUGIN*/void r976include(T976* C,T338 a1);
/*C_PLUGIN*/T0* r976read(T0* a1);
/*INTERNAL_C_LOCAL_LIST*/T0* r632lock_local(T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL_LIST*/T0* r632echo(void);
/*INTERNAL_C_LOCAL_LIST*/void r632declaration_dump(T632* C,T0* a1);
extern T0*oBC632internal_c_local_pool;
extern int fBC632internal_c_local_pool;
/*INTERNAL_C_LOCAL_LIST*/T0* r632internal_c_local_pool(void);
/*INTERNAL_C_LOCAL_LIST*/void r632echo_information(T632* C);
/*INTERNAL_C_LOCAL*/void r557make(T557* C,T2 a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/T0* r557lock_local(T557* C,T0* a1,T0* a2,T0* a3);
/*INTERNAL_C_LOCAL*/void r557unlock(T557* C);
extern T0*oBC557counter;
/*INTERNAL_C_LOCAL*/T6 r557declaration_dump(T557* C,T0* a1);
/*INTERNAL_C_LOCAL*/T0* r557cpp(void);
/*INTERNAL_C_LOCAL*/T6 r557can_be_recycle_with_type(T557* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r557c_type_in(T557* C,T0* a1);
/*INTERNAL_C_LOCAL*/void r557append_in(T557* C,T0* a1);
/*CODE_CONTEXT_DIRECT_CALL*/void r551reserve(T551* C);
/*CODE_CONTEXT_CREATE_INSTRUCTION*/void r552reserve(T552* C);
/*CODE_CONTEXT_CREATE_EXPRESSION*/void r553reserve(T553* C);
/*CODE_CONTEXT_INSIDE_TWIN*/void r554reserve(T554* C);
/*CODE_CONTEXT_PRECURSOR*/void r555reserve(T555* C);
/*CODE_CONTEXT_INSIDE_SOME_WRAPPER*/void r556reserve(T556* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r797make(T797* C,T2 a1);
/*C_SPLITTER_LEGACY_ITERATOR*/void r797next(T797* C);
/*C_SPLITTER_LEGACY_ITERATOR*/void r797start(T797* C);
/*C_SPLITTER_LEGACY_ITERATOR*/T0* r797item(T797* C);
/*TAGGED_FLAG*/void r794as_true(T794* C);
/*MUTABLE_BIG_INTEGER*/void r707subtract_magnitude_raw_reverse(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T11 r707to_integer_64(T707* C);
/*MUTABLE_BIG_INTEGER*/T6 r707is_one_negative(T707* C);
/*MUTABLE_BIG_INTEGER*/T2 r707divide_one_word(T707* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r707add(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r707copy(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r707is_integer_64(T707* C);
extern T0*oBC707char_buffer;
extern int fBC707char_buffer;
/*MUTABLE_BIG_INTEGER*/T0* r707char_buffer(void);
/*MUTABLE_BIG_INTEGER*/void r707subtract_magnitude_raw_truncated(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r707add_integer_64(T707* C,T11 a1);
/*MUTABLE_BIG_INTEGER*/void r707negate(T707* C);
/*MUTABLE_BIG_INTEGER*/T2 r707append_in_char_buffer(T707* C);
/*MUTABLE_BIG_INTEGER*/void r707subtract_magnitude_raw(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T6 r707is_one(T707* C);
/*MUTABLE_BIG_INTEGER*/void r707multiply_to(T707* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/void r707subtract_magnitude_raw_reverse_truncated(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/T2 r707capacity_from_upper_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r707multiply_to_like_human(T707* C,T0* a1,T0* a2);
/*MUTABLE_BIG_INTEGER*/T0* r707to_integer_general_number(T707* C);
extern T0*oBC707register1;
extern int fBC707register1;
/*MUTABLE_BIG_INTEGER*/T0* r707register1(void);
/*MUTABLE_BIG_INTEGER*/void r707set_with_zero(T707* C);
/*MUTABLE_BIG_INTEGER*/void r707from_integer(T707* C,T2 a1);
/*MUTABLE_BIG_INTEGER*/void r707subtract_magnitude(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r707from_native_array(T707* C,T1102 a1,T2 a2,T6 a3);
/*MUTABLE_BIG_INTEGER*/T2 r707capacity_from_lower_bound(T2 a1,T2 a2);
/*MUTABLE_BIG_INTEGER*/void r707add_magnitude(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r707set_all(T707* C,T1102 a1,T2 a2,T2 a3,T2 a4,T6 a5);
/*MUTABLE_BIG_INTEGER*/void r707append_in(T707* C,T0* a1);
/*MUTABLE_BIG_INTEGER*/void r707from_integer_64(T707* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T11 r704to_integer_64(T704* C);
/*BIG_INTEGER_NUMBER*/T0* r704multiply_with_big_integer_number(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r704mutable_register1(void);
/*BIG_INTEGER_NUMBER*/T0* r704mutable_register2(void);
/*BIG_INTEGER_NUMBER*/T0* r704mutable_register3(void);
/*BIG_INTEGER_NUMBER*/T0* r704_ix_42(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r704_ix_43(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/void r704put_into_mutable_big_integer(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r704_ix_45(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r704_px_45(T704* C);
/*BIG_INTEGER_NUMBER*/T0* r704add_with_big_integer_number(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r704_ix_6442(T704* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T0* r704_ix_6443(T704* C,T11 a1);
/*BIG_INTEGER_NUMBER*/T10 r704to_integer_16(T704* C);
/*BIG_INTEGER_NUMBER*/T0* r704to_string(T704* C);
/*BIG_INTEGER_NUMBER*/T1 r704to_integer_8(T704* C);
/*BIG_INTEGER_NUMBER*/void r704from_native_array(T704* C,T1102 a1,T2 a2,T6 a3);
/*BIG_INTEGER_NUMBER*/T2 r704to_integer_32(T704* C);
/*BIG_INTEGER_NUMBER*/void r704append_in(T704* C,T0* a1);
/*BIG_INTEGER_NUMBER*/T0* r704string_buffer(void);
/*TAGGED_INTERNAL_C_LOCAL*/void r781set_item(T781* C,T0* a1);
/*TAGGED_INTEGER*/void r779set_item(T779* C,T2 a1);
void agent_launcher_o469(/*agent*/T0*a,T0* a1);
void agent_launcher_o525(/*agent*/T0*a,T0* a1);
void agent_launcher_o476(/*agent*/T0*a,T0* a1);
void agent_launcher(/*agent*/T0*a);
void agent_launcher_o331(/*agent*/T0*a,T0* a1);
T6 agent_launcher_R6_o7(/*agent*/T0*a,T0* a1);
void agent_launcher_o95(/*agent*/T0*a,T0* a1);
void agent_launcher_o87(/*agent*/T0*a,T0* a1);
void agent_launcher_o559(/*agent*/T0*a,T0* a1);
void agent_launcher_o406(/*agent*/T0*a,T0* a1);
void agent_launcher_o85(/*agent*/T0*a,T0* a1);
void agent_launcher_o327o7(/*agent*/T0*a,T0* a1,T0* a2);
void agent_launcher_o418(/*agent*/T0*a,T0* a1);
void agent_launcher_o368(/*agent*/T0*a,T0* a1);
void agent_launcher_o458(/*agent*/T0*a,T0* a1);
void agent_launcher_o277o277(/*agent*/T0*a,T0* a1,T0* a2);
union _se_agent{T0 s0;se_agent0 u0;
se_agenT112f112l4023c31 uagenT112f112l4023c31;
se_agenT112f112l4012c28 uagenT112f112l4012c28;
se_agenT112f112l3783c47 uagenT112f112l3783c47;
se_agenT112f112l618c22 uagenT112f112l618c22;
se_agenT112f112l675c22 uagenT112f112l675c22;
se_agenT112f112l3802c55 uagenT112f112l3802c55;
se_agenT112f112l3595c39 uagenT112f112l3595c39;
se_agenT112f112l3512c38 uagenT112f112l3512c38;
se_agenT107f107l345c38 uagenT107f107l345c38;
se_agenT564f565l25c44 uagenT564f565l25c44;
se_agenT594f565l25c44 uagenT594f565l25c44;
se_agenT595f595l22c50 uagenT595f595l22c50;
se_agenT595f565l25c44 uagenT595f565l25c44;
se_agenT596f565l25c44 uagenT596f565l25c44;
se_agenT597f597l77c54 uagenT597f597l77c54;
se_agenT597f597l106c53 uagenT597f597l106c53;
se_agenT597f597l117c20 uagenT597f597l117c20;
se_agenT614f614l80c33 uagenT614f614l80c33;
se_agenT614f614l1095c35 uagenT614f614l1095c35;
se_agenT614f614l61c33 uagenT614f614l61c33;
se_agenT614f614l1070c37 uagenT614f614l1070c37;
se_agenT614f614l1078c32 uagenT614f614l1078c32;
se_agenT614f614l1025c35 uagenT614f614l1025c35;
se_agenT368f368l155c36 uagenT368f368l155c36;
se_agenT368f368l473c44 uagenT368f368l473c44;
se_agenT104f104l169c20 uagenT104f104l169c20;
se_agenT104f104l159c20 uagenT104f104l159c20;
};
/*
-- ------------------------------------------------------------------------------------------------------------
-- Copyright notice below. Please read.
--
-- Copyright(C) 1994-2002: INRIA - LORIA (INRIA Lorraine) - ESIAL U.H.P.       - University of Nancy 1 - FRANCE
-- Copyright(C) 2003-2005: INRIA - LORIA (INRIA Lorraine) - I.U.T. Charlemagne - University of Nancy 2 - FRANCE
--
-- Authors: Dominique COLNET, Philippe RIBET, Cyril ADRIAN, Vincent CROIZIER, Frederic MERIZEN
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
-- documentation files (the "Software"), to deal in the Software without restriction, including without
-- limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-- the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
-- conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial
-- portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-- LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
-- EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
-- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
-- OR OTHER DEALINGS IN THE SOFTWARE.
--
-- http://SmartEiffel.loria.fr - SmartEiffel@loria.fr
-- ------------------------------------------------------------------------------------------------------------
*/
#define SE_AGENTS 1
#define EIF_AGENT se_agent*

se_agent* new_agent(Tid id);

#ifdef SE_GC_LIB

  typedef struct B_agent gc_agent;

  struct B_agent {
    se_agent object;
    union {
      void *flag;
      gc_agent *next;
    } header;
  };

  extern gc_agent *store_agent;
  extern gc_agent *gc_free_agent;
  extern int       store_left_agent;
  extern fsoc     *store_chunk_agent;
  extern fsoc      H_agent;
  extern int       gc_info_nb_agent;

  void gc_align_mark_agent(fsoc *c, gc_agent* a);
  void gc_sweep_agent(fsoc *c);

#endif
extern T0*ms108_240Abc272A;
extern T0*ms614_4766225Abc614A;
extern T0*ms108_240Abc274A;
extern T0*ms33_406284Abc33A;
extern T0*ms104_660Abc104A;
extern T0*ms121_44975894Abc121A;
extern T0*ms33_1639475718Abc33A;
extern T0*ms107_713806135Abc107A;
extern T0*ms112_57150800Abc112A;
extern T0*ms101_175744691Abc101A;
extern T0*ms790_737599544Abc790A;
extern T0*ms791_14464Abc791B;
extern T0*ms791_14464Abc791A;
extern T0*ms788_699Abc788A;
extern T0*ms112_257Abc597A;
extern T0*ms112_257Abc597B;
extern T0*ms976_482960256Abc976A;
extern T0*ms117_51895507Abc117A;
extern T0*ms33_3501Abc33A;
extern T0*ms790_1069766146Abc790A;
extern T0*ms619_185146Abc619A;
extern T0*ms790_1651Abc790A;
extern T0*ms790_176986Abc790A;
extern T0*ms790_1069766146Abc792A;
extern T0*ms620_325Abc620A;
extern T0*ms112_1284Abc611A;
extern T0*ms112_1284Abc611B;
extern T0*ms112_1284Abc611C;
extern T0*ms106_1616517694Abc106A;
extern T0*ms112_1160736641Abc112A;
extern T0*ms112_1284Abc612A;
extern T0*ms620_2118444283Abc620A;
extern T0*ms596_1199620901Abc596A;
extern T0*ms597_657822788Abc597A;
extern T0*ms112_1284Abc620A;
extern T0*ms112_1284Abc620B;
extern T0*ms388_529996976Abc388A;
extern T0*ms121_322Abc121A;
extern T0*ms112_1881374985Abc112A;
extern T0*ms112_1284Abc619A;
extern T0*ms597_82Abc597A;
extern T0*ms112_1284Abc619B;
extern T0*ms565_11241768Abc565A;
extern T0*ms108_179868158Abc108A;
extern T0*ms100_1689577436Abc100A;
extern T0*ms734_1139569132Abc734A;
extern T0*ms115_612334905Abc115A;
extern T0*ms100_732257893Abc100A;
extern T0*ms790_1265395998Abc790A;
extern T0*ms107_327902Abc282A;
extern T0*ms107_327902Abc282B;
extern T0*ms790_69352117Abc790B;
extern T0*ms790_69352117Abc790A;
extern T0*ms115_1752297822Abc115A;
extern T0*ms107_1255776138Abc107A;
extern T0*ms112_389675Abc112A;
extern T0*ms623_300665Abc623A;
extern T0*ms121_809686569Abc121A;
extern T0*ms100_470853074Abc100A;
extern T0*ms623_1150927957Abc623A;
extern T0*ms614_750Abc597A;
extern T0*ms274_926093361Abc274A;
extern T0*ms108_830570470Abc108A;
extern T0*ms33_2246041Abc33A;
extern T0*ms108_1223801083Abc108A;
extern T0*ms33_548331507Abc33A;
extern T0*ms102_1377150320Abc102A;
extern T0*ms112_1919660703Abc112A;
extern T0*ms628_2395Abc628A;
extern T0*ms33_1597390874Abc33A;
extern T0*ms371_30745830Abc371A;
extern T0*ms100_883016350Abc100A;
extern T0*ms100_883016350Abc100B;
extern T0*ms100_883016350Abc100C;
extern T0*ms470_1810101146Abc470A;
extern T0*ms559_671Abc597A;
extern T0*ms34_1839765037Abc34A;
extern T0*ms478_439056951Abc478A;
extern T0*ms30_63Abc30A;
extern T0*ms30_7779Abc30A;
extern T0*ms112_726227573Abc112A;
extern T0*ms112_77412Abc112A;
extern T0*ms112_77412Abc112B;
extern T0*ms112_77412Abc112C;
extern T0*ms614_750Abc614A;
extern T0*ms795_1847764413Abc795A;
extern T0*ms100_945201499Abc100A;
extern T0*ms112_772432310Abc112A;
extern T0*ms100_676728857Abc100A;
extern T0*ms614_1060489498Abc614A;
extern T0*ms493_2068414678Abc493A;
extern T0*ms112_526Abc112A;
extern T0*ms112_267478119Abc112A;
extern T0*ms100_822318035Abc100A;
extern T0*ms597_46337Abc597A;
extern T0*ms559_671Abc559A;
extern T0*ms792_958639438Abc792A;
extern T0*ms559_168Abc112A;
extern T0*ms620_579867211Abc620A;
extern T0*ms609_185453Abc609A;
extern T0*ms609_185448Abc609A;
extern T0*ms108_1102814319Abc108A;
extern T0*ms429_146113272Abc429A;
extern T0*ms476_1142240176Abc476A;
extern T0*ms420_1240817101Abc420A;
extern T0*ms621_946895Abc621B;
extern T0*ms621_946895Abc621A;
extern T0*ms112_1586448448Abc112A;
extern T0*ms112_1197714671Abc112A;
extern T0*ms620_2996Abc620A;
extern T0*ms620_2996Abc620B;
extern T0*ms112_18131599Abc112A;
extern T0*ms620_2996Abc620C;
extern T0*ms400_923532Abc400A;
extern T0*ms620_2996Abc620D;
extern T0*ms400_923532Abc400B;
extern T0*ms620_2996Abc620E;
extern T0*ms400_923532Abc400C;
extern T0*ms620_2996Abc620F;
extern T0*ms400_923532Abc400D;
extern T0*ms33_1326673961Abc33A;
extern T0*ms112_1586354711Abc112A;
extern T0*ms452_90390825Abc452A;
extern T0*ms112_1377391529Abc112A;
extern T0*ms976_1067567332Abc976A;
extern T0*ms597_2187432Abc597A;
extern T0*ms597_2187432Abc597B;
extern T0*ms620_1340573954Abc620A;
extern T0*ms107_542094038Abc107A;
extern T0*ms559_671Abc464B;
extern T0*ms557_7557Abc557A;
extern T0*ms559_671Abc464A;
extern T0*ms112_2087300232Abc112A;
extern T0*ms33_60Abc33A;
extern T0*ms112_13801Abc112A;
extern T0*ms452_46Abc106A;
extern T0*ms112_17507Abc112A;
extern T0*ms329_1492212881Abc329A;
extern T0*ms452_46Abc107A;
extern T0*ms452_46Abc107B;
extern T0*ms452_46Abc107C;
extern T0*ms633_378711602Abc633A;
extern T0*ms597_10937200Abc597A;
extern T0*ms452_789877170Abc452A;
extern T0*ms100_2060540980Abc100A;
extern T0*ms452_46Abc115A;
extern T0*ms452_46Abc115B;
extern T0*ms452_46Abc115C;
extern T0*ms400_205616643Abc400A;
extern T0*ms410_183516812Abc410A;
extern T0*ms33_1574640467Abc33A;
extern T0*ms33_175767198Abc33A;
extern T0*ms790_384078512Abc790A;
extern T0*ms121_322Abc418A;
extern T0*ms108_270309168Abc108A;
extern T0*ms33_880412606Abc33A;
extern T0*ms597_7475Abc597A;
extern T0*ms597_7475Abc597B;
extern T0*ms405_1458557644Abc405A;
extern T0*ms121_322Abc430A;
extern T0*ms112_2630Abc621A;
extern T0*ms100_629850238Abc100A;
extern T0*ms34_17221Abc561A;
extern T0*ms621_68406039Abc621A;
extern T0*ms621_68406039Abc621B;
extern T0*ms121_322Abc429A;
extern T0*ms559_5515Abc559A;
extern T0*ms564_244Abc564B;
extern T0*ms461_1172758533Abc461A;
extern T0*ms564_244Abc564A;
extern T0*ms121_322Abc391A;
extern T0*ms597_567426438Abc597A;
extern T0*ms112_1130602126Abc112A;
extern T0*ms614_48939847Abc614B;
extern T0*ms614_48939847Abc614A;
extern T0*ms274_2028436769Abc274A;
extern T0*ms452_865125357Abc452A;
extern T0*ms666_1083579905Abc666A;
extern T0*ms597_1367040625Abc597A;
extern T0*ms100_955584028Abc100A;
extern T0*ms33_18110Abc33A;
extern T0*ms376_316489161Abc376A;
extern T0*ms121_322Abc454A;
extern T0*ms557_38182Abc557A;
extern T0*ms597_832670Abc597A;
extern T0*ms596_5580Abc596A;
extern T0*ms790_377Abc790B;
extern T0*ms790_377Abc790A;
extern T0*ms112_2630Abc597A;
extern T0*ms357_197895058Abc357A;
extern T0*ms112_9130Abc790A;
extern T0*ms621_2102695Abc621A;
extern T0*ms112_120095614Abc112A;
extern T0*ms34_11251026Abc34A;
extern T0*ms532_520647979Abc532A;
extern T0*ms100_12184Abc100A;
extern T0*ms112_1844536619Abc597A;
extern T0*ms100_12184Abc100B;
extern T0*ms33_447584Abc33A;
extern T0*ms112_2417Abc112A;
extern T0*ms33_1549680Abc33A;
extern T0*ms112_1591358844Abc112A;
extern T0*ms35_77608Abc35A;
extern T0*ms461_907165587Abc461A;
extern T0*ms621_388821092Abc621A;
extern T0*ms597_80771Abc597A;
extern T0*ms100_1466196812Abc100A;
extern T0*ms368_4488096Abc368A;
extern T0*ms101_116346440Abc101A;
extern T0*ms329_198146473Abc329A;
extern T0*ms33_761722990Abc33A;
extern T0*ms614_6305Abc614A;
extern T0*ms593_11952Abc593A;
extern T0*ms790_25822456Abc790A;
extern T0*ms790_25822456Abc790B;
extern T0*ms614_6305Abc620A;
extern T0*ms34_8054609Abc776A;
extern T0*ms336_1642968637Abc336A;
extern T0*ms776_68224Abc776A;
extern T0*ms594_619166512Abc594A;
extern T0*ms280_1153312264Abc280A;
extern T0*ms30_1090Abc108A;
extern T0*ms30_1090Abc108B;
extern T0*ms107_298390Abc107A;
extern T0*ms400_1143055473Abc400A;
extern T0*ms112_277Cbc112A;
extern T0*ms400_1143055473Abc400B;
extern T0*ms400_1143055473Abc400C;
extern T0*ms400_1143055473Abc400D;
extern T0*ms400_1143055473Abc400E;
extern T0*ms30_1090Abc121A;
extern T0*ms30_1090Abc121B;
extern T0*ms30_1090Abc121C;
extern T0*ms277_1838870713Abc277A;
extern T0*ms30_1090Abc121D;
extern T0*ms121_322Abc614A;
extern T0*ms34_17221Abc380A;
extern T0*ms100_1320619413Abc100A;
extern T0*ms33_55041141Abc33A;
extern T0*ms33_55041091Abc33A;
extern T0*ms682_1499315956Abc682A;
extern T0*ms621_2187545Abc621A;
extern T0*ms112_47278Abc112A;
extern T0*ms452_46Abc280A;
extern T0*ms452_46Abc280B;
extern T0*ms112_1377208779Abc112D;
extern T0*ms397_729510616Abc397A;
extern T0*ms112_1377208779Abc112C;
extern T0*ms112_1377208779Abc112B;
extern T0*ms112_1377208779Abc112A;
extern T0*ms112_1672511676Abc112A;
extern T0*ms620_670Abc620B;
extern T0*ms620_670Abc620A;
extern T0*ms633_39109479Abc633A;
extern T0*ms620_2030510390Abc620A;
extern T0*ms33_55040401Abc33A;
extern T0*ms429_1642232185Abc429A;
extern T0*ms452_46Abc336A;
extern T0*ms627_90792Abc627A;
extern T0*ms452_46Abc336B;
extern T0*ms33_361Abc33A;
extern T0*ms107_763853019Abc107A;
extern T0*ms121_322Abc641A;
extern T0*ms452_46Abc339A;
extern T0*ms400_1718483009Abc400A;
extern T0*ms619_419443Abc619A;
extern T0*ms452_46Abc401A;
extern T0*ms400_944882Abc400A;
extern T0*ms400_944882Abc400B;
extern T0*ms400_944882Abc400C;
extern T0*ms400_944882Abc400D;
extern T0*ms34_78002Abc34A;
extern T0*ms101_1581369567Abc101A;
extern T0*ms101_85511833Abc101A;
extern T0*ms452_46Abc405A;
extern T0*ms452_46Abc410A;
extern T0*ms452_46Abc405B;
extern T0*ms100_1138390195Abc100A;
extern T0*ms597_948421114Abc597A;
extern T0*ms597_274Abc597A;
extern T0*ms112_12331Abc112A;
extern T0*ms100_1098712729Abc100A;
extern T0*ms112_81256Abc112A;
extern T0*ms108_689Abc108A;
extern T0*ms112_1195084695Abc112A;
extern T0*ms596_565069653Abc596A;
extern T0*ms452_46Abc365A;
extern T0*ms112_207160501Abc112A;
extern T0*ms614_25900Abc614A;
extern T0*ms470_1961687Abc470A;
extern T0*ms452_46Abc367A;
extern T0*ms452_46Abc367B;
extern T0*ms419_282823780Abc419A;
extern T0*ms776_65332Abc776A;
extern T0*ms620_484454800Abc620A;
extern T0*ms100_1978106088Abc100A;
extern T0*ms107_1737672775Abc107A;
extern T0*ms621_965636096Abc621A;
extern T0*ms100_161325869Abc100A;
extern T0*ms401_1933023161Abc401A;
extern T0*ms108_1744Abc108A;
extern T0*ms121_322Abc681A;
extern T0*ms405_1382321814Abc405A;
extern T0*ms121_322Abc681B;
extern T0*ms34_400652Abc34A;
extern T0*ms756_1400894751Abc756A;
extern T0*ms118_138929174Abc118A;
extern T0*ms620_252669317Abc620A;
extern T0*ms790_44739Abc790A;
extern T0*ms597_37202594Abc597A;
extern T0*ms101_74239Abc101A;
extern T0*ms112_77412Abc614A;
extern T0*ms469_56907446Abc469A;
extern T0*ms112_77412Abc614B;
extern T0*ms619_2077255577Abc619A;
extern T0*ms112_77412Abc614C;
extern T0*ms112_77412Abc614D;
extern T0*ms112_561947515Abc112A;
extern T0*ms452_46Abc394A;
extern T0*ms597_1023028228Abc597A;
extern T0*ms623_138425Abc623A;
extern T0*ms633_1849347035Abc633A;
extern T0*ms623_138425Abc623B;
extern T0*ms112_77412Abc623A;
extern T0*ms107_801894175Abc107A;
extern T0*ms620_296Abc621A;
extern T0*ms336_2084824380Abc336A;
extern T0*ms620_296Abc620A;
extern T0*ms452_46Abc397A;
extern T0*ms452_46Abc452A;
extern T0*ms112_1564992795Abc112A;
extern T0*ms559_671Abc112B;
extern T0*ms559_671Abc112A;
extern T0*ms112_1965730Abc614B;
extern T0*ms112_1965730Abc614A;
extern T0*ms623_646768902Abc623A;
extern T0*ms452_46Abc449A;
extern T0*ms614_440120430Abc614A;
extern T0*ms34_78263Abc34A;
extern T0*ms790_26635163Abc790A;
extern T0*ms112_526Abc624A;
extern T0*ms452_46Abc461A;
extern T0*ms633_1197649626Abc633A;
extern T0*ms394_1896547075Abc394A;
extern T0*ms33_1744399653Abc33A;
extern T0*ms394_1721307786Abc394A;
extern T0*ms274_1799491166Abc274A;
extern T0*ms35_385751Abc35A;
extern T0*ms100_2018315248Abc100A;
extern T0*ms788_614Abc788B;
extern T0*ms788_614Abc788A;
extern T0*ms564_1710532409Abc564A;
extern T0*ms619_1085305030Abc619A;
extern T0*ms394_1424594977Abc394A;
extern T0*ms788_614Abc790D;
extern T0*ms614_809795Abc620B;
extern T0*ms788_614Abc790C;
extern T0*ms614_809795Abc620A;
extern T0*ms788_614Abc790B;
extern T0*ms620_116864219Abc620A;
extern T0*ms788_614Abc790A;
extern T0*ms107_215Abc107A;
extern T0*ms452_46Abc476A;
extern T0*ms107_215Abc107B;
extern T0*ms452_46Abc476B;
extern T0*ms614_809795Abc614A;
extern T0*ms108_62728285Abc108A;
extern T0*ms620_907447617Abc620A;
extern T0*ms284_252Abc113A;
extern T0*ms614_809795Abc612A;
extern T0*ms112_526Abc597A;
extern T0*ms329_1306325004Abc329A;
extern T0*ms419_170383550Abc419A;
extern T0*ms452_529299514Abc452A;
extern T0*ms363_336696676Abc363A;
extern T0*ms564_1476281050Abc564A;
extern T0*ms452_46Abc544A;
extern T0*ms776_1854402277Abc776A;
extern T0*ms400_1670460393Abc400A;
extern T0*ms100_2137524537Abc100A;
extern T0*ms621_1719326284Abc621A;
extern T0*ms33_1673348567Abc33A;
extern T0*ms657_1257368965Abc657A;
extern T0*ms34_661Abc34A;
extern T0*ms112_1290234339Abc112A;
extern T0*ms100_1075925125Abc100A;
extern T0*ms34_59251Abc397A;
extern T0*ms452_46Abc559A;
extern T0*ms274_767646015Abc274A;
extern T0*ms33_3460Abc33A;
extern T0*ms620_6396Abc620A;
extern T0*ms336_590983311Abc336A;
extern T0*ms112_18131599Abc597A;
extern T0*ms107_2106290588Abc107A;
extern T0*ms100_751585121Abc100A;
extern T0*ms612_3485Abc612A;
extern T0*ms112_860532685Abc112A;
extern T0*ms620_7025Abc620A;
extern T0*ms620_7025Abc620B;
extern T0*ms100_1023251859Abc100A;
extern T0*ms280_1145998825Abc280A;
extern T0*ms452_46Abc633A;
extern T0*ms274_1707020207Abc274A;
extern T0*ms100_825716016Abc100A;
extern T0*ms108_98806116Abc108A;
extern T0*ms100_1181926797Abc100A;
extern T0*ms327_855586967Abc327A;
extern T0*ms100_2016523575Abc100A;
extern T0*ms34_396356Abc34A;
extern T0*ms112_495363549Abc112A;
extern T0*ms371_2126200255Abc371A;
extern T0*ms100_2020913390Abc100A;
extern T0*ms100_1061217192Abc100A;
extern T0*ms115_1816788953Abc115A;
extern T0*ms34_437070Abc34A;
extern T0*ms549_28418819Abc549A;
extern T0*ms112_113036818Abc112A;
extern T0*ms33_10945665Abc33A;
extern T0*ms107_1463938603Abc107A;
extern T0*ms100_529554293Abc100A;
extern T0*ms112_1295Abc112A;
extern T0*ms452_46Abc666A;
extern T0*ms112_2041682Abc112E;
extern T0*ms112_985140858Abc112A;
extern T0*ms623_1216329562Abc623A;
extern T0*ms112_2041682Abc112D;
extern T0*ms112_2041682Abc112C;
extern T0*ms623_1216329562Abc623B;
extern T0*ms112_2041682Abc112B;
extern T0*ms112_2041682Abc112A;
extern T0*ms34_640Abc34A;
extern T0*ms106_580488532Abc106A;
extern T0*ms34_2073386Abc34A;
extern T0*ms619_6655Abc619A;
extern T0*ms33_43Abc621A;
extern T0*ms33_43Abc621B;
extern T0*ms619_6655Abc620A;
extern T0*ms452_46Abc688A;
extern T0*ms284_1661812564Abc284A;
extern T0*ms620_520373770Abc620C;
extern T0*ms620_520373770Abc620B;
extern T0*ms620_520373770Abc620A;
extern T0*ms112_2417Abc625A;
extern T0*ms614_1175100011Abc614A;
extern T0*ms277_1897894366Abc277A;
extern T0*ms33_3669Abc33A;
extern T0*ms100_124992Abc100A;
extern T0*ms112_392938270Abc112A;
extern T0*ms284_252Abc277A;
extern T0*ms284_252Abc277B;
extern T0*ms100_1088075316Abc100A;
extern T0*ms597_826425832Abc597A;
extern T0*ms112_273430505Abc108A;
extern T0*ms597_826425832Abc597B;
extern T0*ms33_424424Abc33A;
extern T0*ms597_826425832Abc597C;
extern T0*ms34_82570Abc34A;
extern T0*ms112_273430505Abc112A;
extern T0*ms95_1781104140Abc95A;
extern T0*ms33_37186806Abc33A;
extern T0*ms284_252Abc339A;
extern T0*ms100_1962710217Abc100A;
extern T0*ms452_46Abc771A;
extern T0*ms614_28032126Abc614A;
extern T0*ms614_28032126Abc614B;
extern T0*ms614_28032126Abc614C;
extern T0*ms614_28032126Abc614D;
extern T0*ms34_3601Abc34A;
extern T0*ms452_46Abc773A;
extern T0*ms597_1566831588Abc597A;
extern T0*ms277_1820580025Abc277A;
extern T0*ms611_1476205446Abc611A;
extern T0*ms108_109Abc108A;
extern T0*ms107_445497083Abc107A;
extern T0*ms790_1058430701Abc790B;
extern T0*ms284_252Abc409A;
extern T0*ms614_1008067448Abc614A;
extern T0*ms790_1058430701Abc790A;
extern T0*ms34_2065491Abc34A;
extern T0*ms614_1008067448Abc621A;
extern T0*ms730_1762204931Abc730A;
extern T0*ms107_215Abc368A;
extern T0*ms621_105695965Abc621A;
extern T0*ms597_491029751Abc597A;
extern T0*ms614_236Abc614A;
extern T0*ms112_1836282258Abc112A;
extern T0*ms791_41300Abc791A;
extern T0*ms100_911265735Abc100A;
extern T0*ms112_107312226Abc112A;
extern T0*ms33_180965447Abc33A;
extern T0*ms34_18090Abc357A;
extern T0*ms614_236Abc612A;
extern T0*ms100_79251Abc100A;
extern T0*ms619_1428771266Abc619A;
extern T0*ms788_1777096676Abc788A;
extern T0*ms112_522691310Abc112A;
extern T0*ms112_400297641Abc112A;
extern T0*ms112_400297641Abc112B;
extern T0*ms597_1642168697Abc597A;
extern T0*ms112_400297641Abc112C;
extern T0*ms108_301Abc108A;
extern T0*ms112_400297641Abc112D;
extern T0*ms470_1577658176Abc470A;
extern T0*ms284_252Abc442A;
extern T0*ms112_23988287Abc112A;
extern T0*ms284_252Abc443A;
extern T0*ms33_217Abc33A;
extern T0*ms112_30942Abc112A;
extern T0*ms112_12331Abc620A;
extern T0*ms112_12331Abc620B;
extern T0*ms597_345908476Abc597A;
extern T0*ms112_12331Abc624A;
extern T0*ms549_32450971Abc549A;
extern T0*ms790_1748680500Abc790A;
extern T0*ms620_537910373Abc620A;
extern T0*ms34_436911Abc562A;
extern T0*ms470_1809088081Abc470A;
extern T0*ms30_1090Abc683A;
extern T0*ms559_724183788Abc559A;
extern T0*ms376_2014931627Abc376A;
extern T0*ms394_1089483711Abc394A;
extern T0*ms33_203589551Abc33A;
extern T0*ms34_1168210079Abc34A;
extern T0*ms419_1700082283Abc419A;
extern T0*ms284_252Abc523A;
extern T0*ms284_252Abc518A;
extern T0*ms284_252Abc518B;
extern T0*ms100_28789007Abc100A;
extern T0*ms284_252Abc480A;
extern T0*ms280_413151726Abc280A;
extern T0*ms280_413151726Abc280B;
extern T0*ms284_252Abc476A;
extern T0*ms284_252Abc476B;
extern T0*ms788_742356016Abc788A;
extern T0*ms107_5873980Abc107A;
extern T0*ms112_116813823Abc112A;
extern T0*ms400_1592935176Abc400E;
extern T0*ms400_1592935176Abc400D;
extern T0*ms400_1592935176Abc400C;
extern T0*ms400_1592935176Abc400B;
extern T0*ms400_1592935176Abc400A;
extern T0*ms33_1578334651Abc33A;
extern T0*ms790_2092663259Abc790A;
extern T0*ms274_929353692Abc274A;
extern T0*ms112_1483072174Abc112A;
extern T0*ms596_1191155066Abc596A;
extern T0*ms112_1965730Abc112A;
extern T0*ms371_2126200255Abc112A;
extern T0*ms596_1191155066Abc596B;
extern T0*ms620_9980719Abc620B;
extern T0*ms620_83277Abc620A;
extern T0*ms620_9980719Abc620A;
extern T0*ms33_167970159Abc33A;
extern T0*ms597_1728089446Abc597A;
extern T0*ms284_252Abc493A;
extern T0*ms475_2009909053Abc475A;
extern T0*ms280_1492303331Abc280A;
extern T0*ms112_54734511Abc112A;
extern T0*ms112_1934139Abc112C;
extern T0*ms112_1934139Abc112B;
extern T0*ms112_1934139Abc112A;
extern T0*ms419_2134616155Abc419A;
extern T0*ms112_2060090728Abc112A;
extern T0*ms112_941548611Abc112C;
extern T0*ms115_1811139659Abc115A;
extern T0*ms112_941548611Abc112B;
extern T0*ms112_941548611Abc112A;
extern T0*ms110_2178Abc110A;
extern T0*ms33_240810604Abc33A;
extern T0*ms614_80037Abc614A;
extern T0*ms115_1129671576Abc115A;
extern T0*ms452_1875641781Abc452A;
extern T0*ms614_80037Abc623A;
extern T0*ms614_80037Abc623B;
extern T0*ms112_530940601Abc112A;
extern T0*ms284_252Abc624A;
extern T0*ms284_252Abc624B;
extern T0*ms478_1387816739Abc478A;
extern T0*ms620_114321512Abc620A;
extern T0*ms107_689013605Abc107A;
extern T0*ms108_165012750Abc108A;
extern T0*ms498_1083118122Abc498A;
extern T0*ms412_1085830094Abc412A;
extern T0*ms33_1553736287Abc33A;
extern T0*ms107_485115581Abc107A;
extern T0*ms112_6455Abc112A;
extern T0*ms112_1601653158Abc112B;
extern T0*ms112_1164208Abc112A;
extern T0*ms112_1601653158Abc112A;
extern T0*ms730_495673125Abc730A;
extern T0*ms597_327Abc597A;
extern T0*ms469_1490203324Abc469A;
extern T0*ms672_638047023Abc663A;
extern T0*ms400_1324593410Abc400A;
extern T0*ms100_1752914319Abc100A;
extern T0*ms363_611824887Abc363A;
extern T0*ms672_638047023Abc672A;
extern T0*ms34_1223234252Abc34A;
extern T0*ms32_329Abc32A;
extern T0*ms286_624587783Abc286A;
extern T0*ms32_334Abc32A;
extern T0*ms108_9121Abc108A;
extern T0*ms357_1664909434Abc357A;
extern T0*ms620_60405Abc620A;
extern T0*ms349_1771711260Abc349A;
extern T0*ms280_413151726Abc461A;
extern T0*ms626_591Abc628A;
extern T0*ms100_494839979Abc100A;
extern T0*ms544_276Abc773A;
extern T0*ms34_1975394Abc34A;
extern T0*ms620_37173080Abc620A;
extern T0*ms89_1462938943Abc89A;
extern T0*ms620_1824713404Abc620A;
extern T0*ms626_591Abc626A;
extern T0*ms620_1900Abc620A;
extern T0*ms620_1900Abc620B;
extern T0*ms620_1900Abc620C;
extern T0*ms544_276Abc771A;
extern T0*ms792_1411018665Abc792A;
extern T0*ms397_461679483Abc397A;
extern T0*ms612_21020045Abc612A;
extern T0*ms112_1059359695Abc112A;
extern T0*ms619_1231257120Abc619A;
extern T0*ms32_635943583Abc32A;
extern T0*ms612_21020045Abc620A;
extern T0*ms597_1246790712Abc597A;
extern T0*ms280_722230651Abc280A;
extern T0*ms363_61858840Abc363A;
extern T0*ms100_2077708091Abc100A;
extern T0*ms509_890319497Abc374A;
extern T0*ms100_2117894368Abc100A;
extern T0*ms612_115574176Abc612A;
extern T0*ms107_215Abc679A;
extern T0*ms115_1127406485Abc115A;
extern T0*ms476_94643563Abc405A;
extern T0*ms107_1242126608Abc107A;
extern T0*ms274_608446371Abc274A;
extern T0*ms34_306165094Abc34A;
extern T0*ms33_1487451Abc33A;
extern T0*ms620_704592146Abc620A;
extern T0*ms100_2060176323Abc100A;
extern T0*ms100_1665385073Abc100A;
extern T0*ms620_1671077900Abc620A;
extern T0*ms33_65574Abc33A;
extern T0*ms620_1671077900Abc620B;
extern T0*ms100_180894Abc100A;
extern T0*ms108_150382995Abc108A;
extern T0*ms121_1071750288Abc121A;
extern T0*ms790_28263330Abc790A;
extern T0*ms112_1295Abc611A;
extern T0*ms33_911175911Abc33A;
extern T0*ms621_2110Abc621A;
extern T0*ms684_2565Abc684A;
extern T0*ms112_1295Abc621A;
extern T0*ms112_1295Abc621B;
extern T0*ms621_1773508175Abc621A;
extern T0*ms544_276Abc730A;
extern T0*ms564_565060278Abc564A;
extern T0*ms329_176865800Abc329A;
extern T0*ms112_1530032908Abc112A;
extern T0*ms110_448859Abc110A;
extern T0*ms112_1530032908Abc112B;
extern T0*ms112_1530032908Abc112C;
extern T0*ms100_1301660112Abc100A;
extern T0*ms112_1530032908Abc112D;
extern T0*ms115_69115705Abc115A;
extern T0*ms509_890319497Abc508A;
extern T0*ms394_1747372019Abc394A;
extern T0*ms509_890319497Abc509A;
extern T0*ms732_351Abc732A;
extern T0*ms620_2217200Abc620A;
extern T0*ms732_351Abc732B;
extern T0*ms112_1271Abc597A;
extern T0*ms34_16001Abc398A;
extern T0*ms408_1719402393Abc408A;
extern T0*ms343_242535516Abc343A;
extern T0*ms443_1428348580Abc443A;
extern T0*ms112_1042003640Abc112A;
extern T0*ms112_6877Abc112A;
extern T0*ms112_1965252672Abc112A;
extern T0*ms34_264667428Abc34A;
extern T0*ms620_6425Abc620A;
extern T0*ms790_1288623074Abc790A;
extern T0*ms686_1085938891Abc686A;
extern T0*ms686_559Abc686A;
extern T0*ms686_559Abc686B;
extern T0*ms597_1880914324Abc597A;
extern T0*ms614_20481355Abc614A;
extern T0*ms100_552734069Abc100A;
extern T0*ms612_7227375Abc612A;
extern T0*ms405_1136256141Abc405A;
extern T0*ms476_94643563Abc476A;
extern T0*ms100_4492176Abc597A;
extern T0*ms112_379Abc112A;
extern T0*ms112_379Abc112B;
extern T0*ms388_1814961148Abc388A;
extern T0*ms34_212160365Abc34A;
extern T0*ms329_41769343Abc329A;
extern T0*ms34_16001Abc363B;
extern T0*ms34_16001Abc363A;
extern T0*ms626_17916Abc626A;
extern T0*ms34_414461Abc34A;
extern T0*ms795_2008215484Abc795A;
extern T0*ms621_32400Abc621A;
extern T0*ms620_1553763390Abc620A;
extern T0*ms620_1214258443Abc620A;
extern T0*ms626_17916Abc628A;
extern T0*ms620_162070Abc620A;
extern T0*ms614_521905705Abc614A;
extern T0*ms593_86545Abc593A;
extern T0*ms367_22401251Abc367A;
extern T0*ms367_22401251Abc367B;
extern T0*ms633_1722095007Abc633A;
extern T0*ms33_7704337Abc33A;
extern T0*ms100_4492176Abc626A;
extern T0*ms110_1663868Abc110A;
extern T0*ms30_104Abc30A;
extern T0*ms112_724500276Abc112A;
extern T0*ms30_53561911Abc30A;
extern T0*ms544_276Abc544A;
extern T0*ms280_413151726Abc688A;
extern T0*ms100_860582570Abc100A;
extern T0*ms34_10648581Abc377A;
extern T0*ms34_10648581Abc430A;
extern T0*ms100_1559455194Abc100A;
extern T0*ms620_933501Abc620A;
extern T0*ms34_408086Abc34A;
extern T0*ms34_407540Abc281A;
extern T0*ms339_731327330Abc339A;
extern T0*ms101_2004339522Abc101A;
extern T0*ms34_670Abc34A;
extern T0*ms33_1739790308Abc33A;
extern T0*ms107_1556970935Abc107A;
extern T0*ms790_7374Abc790A;
extern T0*ms448_914877497Abc448A;
extern T0*ms112_2115332211Abc112A;
extern T0*ms108_0Abc89A;
extern T0*ms734_263008962Abc734A;
extern T0*ms619_89821Abc619A;
extern T0*ms112_1855175789Abc112A;
extern T0*ms34_1473988901Abc34A;
extern T0*ms788_1126647264Abc788A;
extern T0*ms620_829308144Abc620A;
extern T0*ms112_7720290Abc112A;
extern T0*ms34_402346Abc657A;
extern T0*ms518_372Abc620B;
extern T0*ms112_400297641Abc597A;
extern T0*ms518_372Abc620A;
extern T0*ms108_1561265653Abc108A;
extern T0*ms112_400297641Abc597B;
extern T0*ms33_9529116Abc33A;
extern T0*ms112_41Abc112A;
extern T0*ms112_1136118256Abc112A;
extern T0*ms619_1994331Abc619A;
extern T0*ms112_932172292Abc112A;
extern T0*ms108_592781506Abc108A;
extern T0*ms34_434665Abc34A;
extern T0*ms379_1552710436Abc379A;
extern T0*ms95_251Abc95A;
extern T0*ms34_1509818Abc34A;
extern T0*ms329_971287994Abc329A;
extern T0*ms418_145102259Abc418A;
extern T0*ms399_925886099Abc399A;
extern T0*ms609_22854451Abc609A;
extern T0*ms107_1836299930Abc107A;
extern T0*ms790_52067Abc790A;
extern T0*ms767_1121854Abc767A;
extern T0*ms115_1127406485Abc431A;
extern T0*ms485_672729595Abc485A;
extern T0*ms274_1130154866Abc102A;
extern T0*ms122_75639Abc122A;
extern T0*ms419_1627141371Abc419A;
extern T0*ms609_4570857Abc609A;
extern T0*ms609_4570907Abc609A;
extern T0*ms112_1723513855Abc112A;
extern T0*ms112_1723513855Abc112B;
extern T0*ms112_1723513855Abc112C;
extern T0*ms620_46980416Abc620C;
extern T0*ms112_1723513855Abc112D;
extern T0*ms620_46980416Abc620B;
extern T0*ms620_46980416Abc620A;
extern T0*ms597_436987Abc597A;
extern T0*ms480_2088401Abc480A;
extern T0*ms790_2021999449Abc790A;
extern T0*ms790_2021999449Abc790B;
extern T0*ms34_10049231Abc34A;
extern T0*ms274_961330339Abc274A;
extern T0*ms33_2035472654Abc33A;
extern T0*ms108_180Abc100A;
extern T0*ms976_7037Abc976A;
extern T0*ms34_1072344038Abc34B;
extern T0*ms34_1072344038Abc34A;
extern T0*ms976_1807195960Abc976A;
extern T0*ms100_75828399Abc100A;
extern T0*ms34_16001Abc34A;
extern T0*ms34_3601Abc471A;
extern T0*ms518_372Abc518A;
extern T0*ms100_1297544492Abc100A;
extern T0*ms400_163270777Abc400A;
extern T0*ms400_163270777Abc400B;
extern T0*ms100_922212712Abc100A;
extern T0*ms400_163270777Abc400C;
extern T0*ms108_17494489Abc108A;
extern T0*ms100_407741255Abc100A;
extern T0*ms365_432936020Abc365A;
extern T0*ms107_1839715989Abc107A;
extern T0*ms34_78591Abc34A;
extern T0*ms100_761631659Abc100A;
extern T0*ms112_21391495Abc112A;
extern T0*ms112_1492394528Abc112A;
extern T0*ms30_1090Abc30A;
extern T0*ms452_1051699101Abc452A;
extern T0*ms102_1784452489Abc102A;
extern T0*ms730_1309017823Abc730A;
extern T0*ms34_451011Abc645A;
extern T0*ms112_6455Abc620A;
extern T0*ms614_1181502Abc614A;
extern T0*ms112_6455Abc565A;
extern T0*ms112_6455Abc620B;
extern T0*ms112_6455Abc565B;
extern T0*ms790_15405Abc790A;
extern T0*ms100_1160088831Abc100A;
extern T0*ms112_6455Abc621A;
extern T0*ms112_6455Abc621B;
extern T0*ms274_374877Abc274A;
extern T0*ms112_6455Abc621C;
extern T0*ms619_159025018Abc619A;
extern T0*ms380_905138318Abc380A;
extern T0*ms101_1578831409Abc101A;
extern T0*ms33_591417242Abc33A;
extern T0*ms112_6455Abc619A;
extern T0*ms108_333Abc108A;
extern T0*ms108_333Abc108B;
extern T0*ms108_333Abc108C;
extern T0*ms101_274238642Abc101A;
extern T0*ms112_471707221Abc112A;
extern T0*ms549_1747846Abc549A;
extern T0*ms100_316863332Abc100A;
extern T0*ms107_5615Abc107A;
extern T0*ms34_2032026Abc34A;
extern T0*ms400_190952Abc400D;
extern T0*ms33_1744612358Abc33A;
extern T0*ms976_1760616840Abc976A;
extern T0*ms400_190952Abc400C;
extern T0*ms614_279959115Abc614A;
extern T0*ms400_190952Abc400B;
extern T0*ms400_190952Abc400A;
extern T0*ms614_2089246593Abc614A;
extern T0*ms345_1759986771Abc345A;
extern T0*ms767_324Abc108A;
extern T0*ms112_6455Abc597A;
extern T0*ms112_490486762Abc112A;
extern T0*ms30_1042405932Abc30A;
extern T0*ms101_1708886163Abc101A;
extern T0*ms790_680177517Abc790A;
extern T0*ms597_2072064738Abc597A;
extern T0*ms394_332834879Abc394A;
extern T0*ms107_66925608Abc107A;
extern T0*ms274_2100317873Abc274A;
extern T0*ms100_928941315Abc100A;
extern T0*ms112_1838958244Abc112A;
extern T0*ms354_892535123Abc354A;
extern T0*ms475_1753Abc475A;
extern T0*ms115_784841421Abc115A;
extern T0*ms100_1390190909Abc100A;
extern T0*ms367_5787Abc464A;
extern T0*ms795_1635136368Abc795A;
extern T0*ms34_1957581Abc34A;
extern T0*ms100_611Abc652A;
extern T0*ms35_2248290Abc35A;
extern T0*ms418_1288915017Abc112A;
extern T0*ms112_401124480Abc112A;
extern T0*ms115_1248054333Abc115A;
extern T0*ms397_1090404950Abc397A;
extern T0*ms100_611Abc649A;
extern T0*ms112_6355Abc112A;
extern T0*ms597_173055Abc597A;
extern T0*ms633_1711825865Abc633A;
extern T0*ms620_8485Abc620A;
extern T0*ms620_8485Abc620B;
extern T0*ms274_1130154866Abc274A;
extern T0*ms33_42Abc33A;
extern T0*ms620_111269879Abc620A;
extern T0*ms614_840791Abc614A;
extern T0*ms33_337331Abc33A;
extern T0*ms34_251171752Abc34A;
extern T0*ms564_985967445Abc564A;
extern T0*ms112_1924772383Abc112A;
extern T0*ms623_7006Abc623A;
extern T0*ms795_480414235Abc795A;
extern T0*ms121_210310269Abc121A;
extern T0*ms419_1134247532Abc419A;
extern T0*ms614_2065182209Abc614A;
extern T0*ms532_902076231Abc532A;
extern T0*ms367_5787Abc367A;
extern T0*ms104_1880881887Abc610A;
extern T0*ms274_1476966395Abc274A;
extern T0*ms734_1927020241Abc734A;
extern T0*ms470_34086Abc470A;
extern T0*ms33_79341Abc33A;
extern T0*ms33_1375414302Abc33A;
extern T0*ms33_1297432701Abc33A;
extern T0*ms329_1207039342Abc329A;
extern T0*ms101_174945438Abc101A;
extern T0*ms282_1185293475Abc282A;
extern T0*ms282_1185293475Abc282B;
extern T0*ms619_614557109Abc619A;
extern T0*ms108_1087245292Abc108A;
extern T0*ms107_1019367716Abc107A;
extern T0*ms611_230Abc620E;
extern T0*ms611_230Abc620D;
extern T0*ms611_230Abc620C;
extern T0*ms397_1816888147Abc397A;
extern T0*ms611_230Abc620B;
extern T0*ms611_230Abc620A;
extern T0*ms611_230Abc611A;
extern T0*ms100_2037548Abc100B;
extern T0*ms378_305790140Abc378A;
extern T0*ms100_2037548Abc100A;
extern T0*ms33_1297876698Abc33A;
extern T0*ms100_376006259Abc100A;
extern T0*ms122_150325744Abc122A;
extern T0*ms619_1119207694Abc619A;
extern T0*ms614_180037Abc614B;
extern T0*ms614_180037Abc614A;
extern T0*ms100_4492176Abc112A;
extern T0*ms107_427937988Abc107A;
extern T0*ms107_1145029170Abc107A;
extern T0*ms100_52979396Abc100A;
extern T0*ms976_28287Abc976A;
extern T0*ms112_1713607783Abc112A;
extern T0*ms100_4492176Abc100A;
extern T0*ms106_1152235958Abc106A;
extern T0*ms32_1194182360Abc32A;
extern T0*ms405_581709925Abc405A;
extern T0*ms30_579450289Abc30A;
extern T0*ms33_1530432238Abc33A;
extern T0*ms115_1297180456Abc115A;
extern T0*ms112_588411932Abc112A;
extern T0*ms614_32175Abc614A;
extern T0*ms626_293Abc626A;
extern T0*ms329_770157670Abc329A;
extern T0*ms401_1256137461Abc401A;
extern T0*ms476_594795843Abc476A;
extern T0*ms33_9713026Abc33A;
extern T0*ms112_41Abc612A;
extern T0*ms112_41Abc614A;
extern T0*ms100_844703215Abc100A;
extern T0*ms112_41Abc614B;
extern T0*ms112_41Abc614C;
extern T0*ms112_41Abc620A;
extern T0*ms112_41Abc620B;
extern T0*ms34_407540Abc34A;
extern T0*ms112_284Abc112A;
extern T0*ms619_1824264277Abc619A;
extern T0*ms400_1337425939Abc400A;
extern T0*ms400_1337425939Abc400B;
extern T0*ms400_1337425939Abc400C;
extern T0*ms400_1337425939Abc400D;
extern T0*ms400_1337425939Abc400E;
extern T0*ms596_1511378937Abc596A;
extern T0*ms790_1523807481Abc790A;
extern T0*ms403_13637Abc403A;
extern T0*ms621_29126717Abc621A;
extern T0*ms621_1291Abc621B;
extern T0*ms621_1291Abc621A;
extern T0*ms620_9954400Abc620A;
extern T0*ms612_15629Abc612A;
extern T0*ms33_77832Abc33A;
extern T0*ms614_2251910Abc614A;
extern T0*ms112_1852104762Abc112A;
extern T0*ms614_2251910Abc614B;
extern T0*ms614_4425Abc614A;
extern T0*ms620_162020Abc620A;
extern T0*ms112_411134193Abc112A;
extern T0*ms121_3556890Abc683A;
extern T0*ms95_439490016Abc95A;
extern T0*ms597_2054563574Abc597A;
extern T0*ms429_205111678Abc429A;
extern T0*ms100_756929053Abc100A;
extern T0*ms101_1923039443Abc101A;
extern T0*ms284_10926944Abc284A;
extern T0*ms112_5367889Abc112A;
extern T0*ms112_1858528797Abc112A;
extern T0*ms100_277837020Abc100A;
extern T0*ms284_10926944Abc281A;
extern T0*ms100_916596Abc476A;
extern T0*ms100_307717976Abc100B;
extern T0*ms100_307717976Abc100A;
extern T0*ms112_471Abc112A;
extern T0*ms112_471Abc112B;
extern T0*ms400_276773717Abc400A;
extern T0*ms101_175744216Abc101A;
extern T0*ms418_1288915017Abc418A;
extern T0*ms620_106047655Abc620A;
extern T0*ms108_2009849Abc777A;
extern T0*ms34_451011Abc34A;
extern T0*ms609_185458Abc609A;
extern T0*ms609_185463Abc609A;
extern T0*ms336_1246984134Abc336A;
extern T0*ms336_1246984134Abc336B;
extern T0*ms33_15448Abc33A;
extern T0*ms621_269141588Abc621A;
extern T0*ms976_1935504882Abc976A;
extern T0*ms112_22971612Abc112A;
extern T0*ms108_1247935972Abc108A;
extern T0*ms100_67Abc100A;
extern T0*ms112_1102979933Abc621A;
extern T0*ms100_18150Abc100A;
extern T0*ms32_1897129554Abc32A;
extern T0*ms95_8198176Abc95A;
extern T0*ms619_172080Abc619A;
extern T0*ms34_78490Abc34A;
extern T0*ms795_1959331451Abc795A;
extern T0*ms597_1485929081Abc597A;
extern T0*ms100_18150Abc112A;
extern T0*ms100_18150Abc112B;
extern T0*ms620_520377520Abc620C;
extern T0*ms620_520377520Abc620B;
extern T0*ms100_18150Abc108A;
extern T0*ms620_520377520Abc620A;
extern T0*ms632_1901947715Abc632A;
extern T0*ms110_59731Abc110A;
extern T0*ms107_604558099Abc107A;
extern T0*ms100_188494264Abc100A;
extern T0*ms112_44Abc112A;
extern T0*ms609_4570957Abc609A;
extern T0*ms121_1293738877Abc121A;
extern T0*ms112_1493Abc112A;
extern T0*ms476_115013643Abc476A;
extern T0*ms108_1588150185Abc108A;
extern T0*ms115_784841421Abc498A;
extern T0*ms432_1666936074Abc432A;
extern T0*ms612_40428375Abc612A;
extern T0*ms100_2080029331Abc100A;
extern T0*ms273_758913190Abc273A;
extern T0*ms100_112999293Abc100A;
extern T0*ms597_21632225Abc597A;
extern T0*ms471_55156846Abc471A;
extern T0*ms377_5382Abc377A;
extern T0*ms29_1889925553Abc29A;
extern T0*ms35_2246326Abc35A;
extern T0*ms461_1377394679Abc461A;
extern T0*ms34_16942Abc466B;
extern T0*ms34_16942Abc466A;
extern T0*ms101_543076045Abc101B;
extern T0*ms101_543076045Abc101A;
extern T0*ms121_1430004157Abc121A;
extern T0*ms101_543076045Abc100A;
extern T0*ms419_265238926Abc419A;
extern T0*ms101_432335312Abc101A;
extern T0*ms108_19761224Abc108A;
extern T0*ms112_726728775Abc112A;
extern T0*ms790_744114Abc790A;
extern T0*ms368_78082Abc368A;
extern T0*ms33_39154229Abc33A;
extern T0*ms112_1253959973Abc112A;
extern T0*ms418_1288915017Abc619A;
extern T0*ms33_567319806Abc33A;
extern T0*ms112_218061703Abc112A;
extern T0*ms646_247541875Abc646A;
extern T0*ms597_43730Abc597A;
extern T0*ms597_1992825354Abc597A;
extern T0*ms33_282Abc33A;
extern T0*ms100_922446006Abc100A;
extern T0*ms104_1880881887Abc104A;
extern T0*ms100_1725672511Abc100A;
extern T0*ms795_1644Abc795A;
extern T0*ms795_1644Abc795B;
extern T0*ms633_139854341Abc633A;
extern T0*ms108_341Abc108A;
extern T0*ms371_278Abc371A;
extern T0*ms33_1671553525Abc33A;
extern T0*ms400_1505530135Abc400A;
extern T0*ms108_180Abc795A;
extern T0*ms108_180Abc795B;
extern T0*ms112_323348966Abc112A;
extern T0*ms559_992810240Abc559A;
extern T0*ms612_184795Abc612A;
extern T0*ms100_1414519430Abc100A;
extern T0*ms112_426087775Abc112A;
extern T0*ms33_253393261Abc33A;
extern T0*ms95_1838187926Abc95A;
extern T0*ms767_324Abc767A;
extern T0*ms795_79Abc795B;
extern T0*ms795_79Abc795A;
extern T0*ms112_660780608Abc112A;
extern T0*ms100_762747069Abc100A;
extern T0*ms731_2027238465Abc731A;
extern T0*ms33_55926626Abc33A;
extern T0*ms790_1314337673Abc790A;
extern T0*ms121_113009969Abc121A;
extern T0*ms620_1709245815Abc620A;
extern T0*ms400_1297676933Abc400D;
extern T0*ms400_1297676933Abc400C;
extern T0*ms400_1297676933Abc400B;
extern T0*ms400_1297676933Abc400A;
extern T0*ms394_35382059Abc394A;
extern T0*ms115_325166540Abc115A;
extern T0*ms565_166654Abc565A;
extern T0*ms34_9909665Abc34A;
extern T0*ms112_700572143Abc112A;
extern T0*ms597_5284Abc597A;
extern T0*ms612_2187584Abc612A;
extern T0*ms100_1632732392Abc100A;
extern T0*ms336_1060258809Abc336A;
extern T0*ms112_273443870Abc112A;
extern T0*ms107_1783880762Abc107A;
extern T0*ms597_1676Abc597A;
extern T0*ms33_207673214Abc33A;
extern T0*ms33_79341Abc614A;
extern T0*ms597_259Abc597A;
extern T0*ms108_1626Abc108A;
extern T0*ms108_1626Abc108B;
extern T0*ms112_284Abc565A;
extern T0*ms33_1501191Abc370A;
extern T0*ms112_284Abc623A;
extern T0*ms790_1927425Abc790A;
extern T0*ms619_101227749Abc619A;
extern T0*ms100_916596Abc100A;
extern T0*ms112_2096892436Abc112A;
extern T0*ms100_50040236Abc100B;
extern T0*ms452_2108232434Abc452A;
extern T0*ms100_50040236Abc100A;
extern T0*ms34_937397683Abc34A;
extern T0*ms112_339308075Abc112A;
extern T0*ms564_1747685533Abc596A;
extern T0*ms112_357794960Abc112A;
extern T0*ms108_61342149Abc108A;
extern T0*ms34_84443Abc34A;
extern T0*ms593_257Abc593A;
extern T0*ms463_1204053035Abc463A;
extern T0*ms614_1553642381Abc614A;
extern T0*ms34_627Abc34A;
extern T0*ms684_355003Abc684A;
extern T0*ms33_1594034Abc33A;
extern T0*ms100_144939139Abc100A;
extern T0*ms614_283285900Abc614A;
extern T0*ms112_284Abc597A;
extern T0*ms112_1234811086Abc112A;
extern T0*ms112_471Abc620D;
extern T0*ms112_471Abc620E;
extern T0*ms107_1225577982Abc107A;
extern T0*ms623_1245850444Abc623A;
extern T0*ms277_689575137Abc277A;
extern T0*ms274_2085574777Abc274A;
extern T0*ms35_78495Abc35A;
extern T0*ms731_989731302Abc731A;
extern T0*ms100_1062177790Abc100A;
extern T0*ms410_1099750743Abc410A;
extern T0*ms614_6775Abc614A;
extern T0*ms564_1747685533Abc564A;
extern T0*ms107_2029530601Abc107A;
extern T0*ms100_155929078Abc100A;
extern T0*ms112_824324978Abc112A;
extern T0*ms108_6159594Abc108A;
extern T0*ms419_772854717Abc419A;
extern T0*ms108_539873441Abc108A;
extern T0*ms274_1984169029Abc274A;
extern T0*ms614_1261705Abc614A;
extern T0*ms116_270Abc116A;
extern T0*ms116_270Abc116B;
extern T0*ms112_1968768303Abc112A;
extern T0*ms107_1535001676Abc107A;
extern T0*ms116_270Abc116C;
extern T0*ms115_22612837Abc559A;
extern T0*ms620_1679626025Abc620B;
extern T0*ms471_380590Abc471A;
extern T0*ms620_1679626025Abc620A;
extern T0*ms620_104084395Abc620A;
extern T0*ms614_169510Abc614A;
extern T0*ms620_104084395Abc620B;
extern T0*ms612_112304676Abc612A;
extern T0*ms394_277033810Abc394A;
extern T0*ms33_572288431Abc33A;
extern T0*ms112_471Abc597A;
extern T0*ms790_5839580Abc790A;
extern T0*ms33_42134669Abc482A;
extern T0*ms112_1102979933Abc112A;
extern T0*ms121_3556890Abc121A;
extern T0*ms400_211605167Abc400A;
extern T0*ms614_1936367907Abc614A;
extern T0*ms110_57487Abc110A;
extern T0*ms33_12376Abc33A;
extern T0*ms115_1008693261Abc115A;
extern T0*ms100_246399995Abc100A;
extern T0*ms101_996106634Abc101A;
extern T0*ms104_1449185201Abc104A;
extern T0*ms465_1867518592Abc465A;
extern T0*ms33_438300Abc33A;
extern T0*ms612_8087250Abc612A;
extern T0*ms108_186217457Abc108A;
extern T0*ms734_1398420907Abc734A;
extern T0*ms565_1502207936Abc565A;
extern T0*ms100_611217054Abc100A;
extern T0*ms976_387651299Abc976A;
extern T0*ms976_387651299Abc976B;
extern T0*ms100_1775667520Abc100A;
extern T0*ms33_577213499Abc33A;
extern T0*ms470_1163823042Abc470A;
extern T0*ms100_18150Abc627A;
extern T0*ms680_1452Abc680A;
extern T0*ms614_2022635Abc614A;
extern T0*ms471_83406Abc471A;
extern T0*ms795_1101Abc107A;
extern T0*ms34_17715Abc34A;
extern T0*ms100_850458948Abc100A;
extern T0*ms100_18150Abc593A;
extern T0*ms100_18150Abc593B;
extern T0*ms620_167916Abc620A;
extern T0*ms101_175744316Abc101A;
extern T0*ms620_167916Abc620B;
extern T0*ms619_1869700848Abc619A;
extern T0*ms100_18150Abc597A;
extern T0*ms100_18150Abc597B;
extern T0*ms100_18150Abc597C;
extern T0*ms112_284Abc790A;
extern T0*ms100_18150Abc597D;
extern T0*ms112_284Abc790B;
extern T0*ms100_18150Abc597E;
extern T0*ms112_284Abc790C;
extern T0*ms35_2191641Abc35A;
extern T0*ms34_17176Abc106A;
extern T0*ms100_18150Abc597F;
extern T0*ms112_284Abc790D;
extern T0*ms100_1703575813Abc100A;
extern T0*ms734_1613492996Abc734A;
extern T0*ms33_1549697Abc33A;
extern T0*ms112_383570Abc112A;
extern T0*ms33_42134669Abc33A;
extern T0*ms274_698011541Abc274A;
extern T0*ms30_375350487Abc30A;
extern T0*ms597_6580Abc597A;
extern T0*ms621_129654140Abc621A;
extern T0*ms621_129654140Abc621B;
extern T0*ms633_21306364Abc633A;
extern T0*ms619_189437896Abc619A;
extern T0*ms336_556920526Abc336A;
extern T0*ms100_688657949Abc100A;
extern T0*ms274_708319Abc115A;
extern T0*ms274_708319Abc115B;
extern T0*ms632_265537649Abc632A;
extern T0*ms281_15195Abc281A;
extern T0*ms458_99702656Abc458A;
extern T0*ms100_339436953Abc100A;
extern T0*ms100_1744209811Abc100A;
extern T0*ms115_7612837Abc115B;
extern T0*ms597_1489891655Abc597A;
extern T0*ms115_7612837Abc115A;
extern T0*ms273_988261007Abc273A;
extern T0*ms108_2009849Abc108A;
extern T0*ms476_1088102843Abc476A;
extern T0*ms33_1831158645Abc33A;
extern T0*ms34_10648581Abc34A;
extern T0*ms614_400650Abc614A;
extern T0*ms107_1450022771Abc107A;
extern T0*ms452_1436450217Abc452A;
extern T0*ms33_275488632Abc33A;
extern T0*ms400_1469170081Abc400A;
extern T0*ms731_89481Abc614A;
extern T0*ms410_936707889Abc410A;
extern T0*ms612_506Abc612B;
extern T0*ms612_506Abc612A;
extern T0*ms112_273431355Abc597D;
extern T0*ms112_273431355Abc597C;
extern T0*ms112_273431355Abc597B;
extern T0*ms112_273431355Abc597A;
extern T0*ms620_6810Abc620A;
extern T0*ms620_6810Abc620B;
extern T0*ms100_1011636926Abc100A;
extern T0*ms100_1522646678Abc100A;
extern T0*ms620_1124779458Abc620A;
extern T0*ms619_398948Abc619A;
extern T0*ms790_46525Abc790A;
extern T0*ms100_188014584Abc100A;
extern T0*ms620_153655Abc620A;
extern T0*ms33_89510Abc33A;
extern T0*ms399_1140411454Abc399A;
extern T0*ms33_201970799Abc33A;
extern T0*ms34_75797981Abc34A;
extern T0*ms596_1646Abc596A;
extern T0*ms596_1646Abc596B;
extern T0*ms100_1953566687Abc100A;
extern T0*ms429_202915491Abc429A;
extern T0*ms633_1447552176Abc633A;
extern T0*ms400_2480364Abc400A;
extern T0*ms790_6755Abc790B;
extern T0*ms790_6755Abc790A;
extern T0*ms112_273431355Abc623A;
extern T0*ms274_452889Abc274A;
extern T0*ms35_234165132Abc35A;
extern T0*ms33_53339Abc33A;
extern T0*ms112_273431355Abc565A;
extern T0*ms100_1452100558Abc100A;
extern T0*ms565_51582255Abc565A;
extern T0*ms116_270Abc420A;
extern T0*ms108_89862Abc108A;
extern T0*ms108_89862Abc108B;
extern T0*ms620_1821634438Abc620A;
extern T0*ms327_864187036Abc327A;
extern T0*ms684_861846863Abc684A;
extern T0*ms792_1295032451Abc792A;
extern T0*ms518_1330923746Abc518A;
extern T0*ms410_1931700734Abc410A;
extern T0*ms33_2054549840Abc33A;
extern T0*ms108_218174Abc108A;
extern T0*ms108_217674Abc108A;
extern T0*ms32_331Abc32A;
extern T0*ms620_308542874Abc620A;
extern T0*ms619_52555395Abc619A;
extern T0*ms619_16927Abc619A;
extern T0*ms100_1174611449Abc100A;
extern T0*ms620_6995Abc620A;
extern T0*ms33_859431564Abc33A;
extern T0*ms731_89481Abc731A;
extern T0*ms110_76405Abc110A;
extern T0*ms619_38305571Abc619A;
extern T0*ms612_23186700Abc612A;
extern T0*ms33_2218105Abc33A;
extern T0*ms614_48939825Abc614A;
extern T0*ms619_1403828457Abc619A;
extern T0*ms34_84443Abc392A;
extern T0*ms100_1731250773Abc100A;
extern T0*ms461_2141380032Abc461A;
extern T0*ms447_1615634978Abc447A;
extern T0*ms34_3085Abc34A;
extern T0*ms274_139303084Abc274A;
extern T0*ms792_1682659883Abc792A;
extern T0*ms368_1348774Abc368A;
extern T0*ms549_1826Abc549A;
extern T0*ms34_78263Abc100A;
extern T0*ms112_2109816196Abc112A;
extern T0*ms112_2109816196Abc112B;
extern T0*ms33_7748406Abc33A;
extern T0*ms107_1004555549Abc107A;
extern T0*ms33_1447702Abc33A;
extern T0*ms100_1436398529Abc100A;
extern T0*ms34_14036Abc397A;
extern T0*ms976_1942675017Abc976A;
extern T0*ms33_839855894Abc33A;
extern T0*ms596_1646Abc790A;
extern T0*ms596_1646Abc790B;
extern T0*ms33_1395184171Abc33A;
extern T0*ms112_78646Abc112A;
extern T0*ms609_4571032Abc609A;
extern T0*ms619_49680837Abc619A;
extern T0*ms33_94Abc107A;
extern T0*ms112_325655889Abc112A;
extern T0*ms620_77767Abc620A;
extern T0*ms112_1901755Abc112A;
extern T0*ms112_960414291Abc112A;
extern T0*ms619_411283072Abc619A;
extern T0*ms790_1985327250Abc790A;
extern T0*ms368_202031759Abc560A;
extern T0*ms100_1289042164Abc100A;
extern T0*ms597_60837Abc597A;
extern T0*ms490_2057854492Abc490A;
extern T0*ms593_1152812249Abc593A;
extern T0*ms34_10990481Abc34A;
extern T0*ms115_22612837Abc115A;
extern T0*ms623_5279655Abc623A;
extern T0*ms93_1554312113Abc93A;
extern T0*ms100_1701980726Abc100A;
extern T0*ms429_408035024Abc429A;
extern T0*ms619_49917876Abc619A;
extern T0*ms34_2593373Abc34A;
extern T0*ms594_161665Abc594A;
extern T0*ms274_2070822678Abc274A;
extern T0*ms559_1046299075Abc559A;
extern T0*ms100_2127445170Abc100A;
extern T0*ms33_197002174Abc33A;
extern T0*ms33_14150Abc33A;
extern T0*ms367_1114345928Abc367A;
extern T0*ms35_1994621Abc35A;
extern T0*ms345_1186844731Abc345A;
extern T0*ms559_26108906Abc559A;
extern T0*ms112_419316052Abc112A;
extern T0*ms112_1350760769Abc112A;
extern T0*ms33_16616Abc33A;
extern T0*ms112_1009317511Abc112A;
extern T0*ms100_246527867Abc100A;
extern T0*ms405_1732344459Abc405A;
extern T0*ms623_1659544035Abc623A;
extern T0*ms115_612971904Abc115A;
extern T0*ms619_30034Abc619A;
extern T0*ms112_1110850242Abc112A;
extern T0*ms620_1651828280Abc620A;
extern T0*ms397_333554149Abc397A;
extern T0*ms33_15831Abc33A;
extern T0*ms33_2174354Abc33A;
extern T0*ms95_74133124Abc95A;
extern T0*ms100_1910692676Abc100A;
extern T0*ms620_535Abc620A;
extern T0*ms620_10895Abc620A;
extern T0*ms112_1450568746Abc112A;
extern T0*ms620_1726920051Abc620A;
extern T0*ms329_560316788Abc329A;
extern T0*ms597_4996600Abc597A;
extern T0*ms35_594Abc110A;
extern T0*ms597_674382779Abc597A;
extern T0*ms564_15019Abc564A;
extern T0*ms35_2191641Abc112A;
extern T0*ms620_1840Abc620A;
extern T0*ms620_1840Abc620B;
extern T0*ms33_48856070Abc33A;
extern T0*ms620_1840Abc620C;
extern T0*ms790_692075493Abc790A;
extern T0*ms620_653639191Abc620A;
extern T0*ms95_1539816514Abc95A;
extern T0*ms107_1572647306Abc107B;
extern T0*ms107_1572647306Abc107A;
extern T0*ms33_312005144Abc33A;
extern T0*ms101_446380143Abc101A;
extern T0*ms33_386854Abc33A;
extern T0*ms112_1938991062Abc112A;
extern T0*ms368_202031759Abc368A;
extern T0*ms633_1541882313Abc633A;
extern T0*ms597_1637927398Abc597B;
extern T0*ms597_1637927398Abc597A;
extern T0*ms34_10876026Abc34A;
extern T0*ms596_775396Abc596A;
extern T0*ms102_42698349Abc102A;
extern T0*ms470_348Abc470A;
extern T0*ms452_1962655329Abc452A;
extern T0*ms107_601041072Abc107A;
extern T0*ms35_10714862Abc35A;
extern T0*ms597_246Abc112A;
extern T0*ms400_156630152Abc400A;
extern T0*ms597_246Abc112B;
extern T0*ms400_156630152Abc400B;
extern T0*ms614_352968782Abc614A;
extern T0*ms400_156630152Abc400C;
extern T0*ms620_9794360Abc620A;
extern T0*ms33_1176378494Abc33A;
extern T0*ms678_161074567Abc678A;
extern T0*ms518_922867504Abc518A;
extern T0*ms623_5313505Abc623A;
extern T0*ms623_5313505Abc623B;
extern T0*ms110_3169Abc110A;
extern T0*ms284_300Abc112A;
extern T0*ms612_506Abc112B;
extern T0*ms612_506Abc112A;
extern T0*ms596_1199805276Abc596A;
extern T0*ms112_395316170Abc112A;
extern T0*ms614_47187Abc614A;
extern T0*ms95_1052333303Abc95A;
extern T0*ms107_1174466439Abc107A;
extern T0*ms464_789350917Abc464A;
extern T0*ms107_1460051321Abc107A;
extern T0*ms112_1271Bbc112A;
extern T0*ms620_4638080Abc620A;
extern T0*ms100_1617443474Abc100A;
extern T0*ms469_1468725331Abc469A;
extern T0*ms112_561301605Abc112A;
extern T0*ms112_175857472Abc112A;
extern T0*ms418_271Abc107A;
extern T0*ms418_271Abc107B;
extern T0*ms34_1992063831Abc34A;
extern T0*ms112_1295Bbc112A;
extern T0*ms34_400652Abc398A;
extern T0*ms976_302Abc976A;
extern T0*ms336_70962Abc336A;
extern T0*ms274_1977886Abc274A;
extern T0*ms34_59251Abc34A;
extern T0*ms100_2087550139Abc100A;
extern T0*ms112_20552830Abc112A;
extern T0*ms100_2051403723Abc100A;
extern T0*ms108_466551816Abc108A;
extern T0*ms628_2394Abc628A;
extern T0*ms33_1682815431Abc33A;
extern T0*ms790_61699Abc790B;
extern T0*ms790_61699Abc790A;
extern T0*ms112_4620546Abc112A;
extern T0*ms469_218Abc469A;
extern T0*ms100_2102385657Abc100A;
extern T0*ms405_2007408328Abc405A;
extern T0*ms34_1690381566Abc34A;
extern T0*ms371_561523426Abc371A;
extern T0*ms614_380218Abc614A;
extern T0*ms614_380168Abc614A;
extern T0*ms621_1280Abc621B;
extern T0*ms621_1280Abc621A;
extern T0*ms336_70962Abc405A;
extern T0*ms336_70962Abc405B;
extern T0*ms112_273431355Abc112B;
extern T0*ms34_18090Abc34A;
extern T0*ms112_273431355Abc112A;
extern T0*ms33_1740332382Abc33A;
extern T0*ms620_437573617Abc620A;
extern T0*ms112_37095Abc112A;
extern T0*ms95_2123229206Abc95A;
extern T0*ms597_759184012Abc597A;
extern T0*ms121_1711985232Abc121A;
extern T0*ms33_728963476Abc33A;
extern T0*ms557_3557Abc557A;
extern T0*ms33_534Abc33A;
extern T0*ms112_148900Abc112A;
extern T0*ms33_1245671098Abc33A;
extern T0*ms614_744Abc614A;
extern T0*ms612_580292587Abc612A;
extern T0*ms33_207673231Abc33A;
extern T0*ms795_277Abc795A;
extern T0*ms614_380065Abc614A;
extern T0*ms115_938738041Abc115A;
extern T0*ms776_1000694404Abc776A;
extern T0*ms33_1554777Abc33A;
extern T0*ms400_442652821Abc400A;
extern T0*ms620_168532Abc620A;
extern T0*ms623_41131Abc623A;
extern T0*ms795_1101Abc795A;
extern T0*ms112_1264Abc112A;
extern T0*ms329_2070057757Abc329A;
extern T0*ms380_527180488Abc380A;
extern T0*ms614_54714119Abc614A;
extern T0*ms102_356743Abc102A;
extern T0*ms34_78263Abc477A;
extern T0*ms34_78263Abc477B;
extern T0*ms108_447734Abc108A;
extern T0*ms597_2028521226Abc597A;
extern T0*ms660_301503927Abc660A;
extern T0*ms492_1879799154Abc492A;
extern T0*ms112_635Abc112A;
extern T0*ms112_635Abc112B;
extern T0*ms112_1540494783Abc112A;
extern T0*ms100_888875725Abc100A;
extern T0*ms565_33316Abc565A;
extern T0*ms619_453998Abc619A;
extern T0*ms660_1084920002Abc660A;
extern T0*ms112_1417Abc112A;
extern T0*ms497_1962243783Abc497A;
extern T0*ms34_48390502Abc34A;
extern T0*ms620_351281Abc620A;
extern T0*ms612_36137368Abc612A;
extern T0*ms327_1262756502Abc327A;
extern T0*ms100_700613496Abc100A;
extern T0*ms102_1656731300Abc102A;
extern T0*ms336_70962Abc476A;
extern T0*ms33_218Abc33A;
extern T0*ms112_1565125654Abc112A;
extern T0*ms33_2038667775Abc33A;
extern T0*ms33_1680885744Abc33A;
extern T0*ms115_429361964Abc115A;
extern T0*ms610_48Abc610A;
extern T0*ms610_48Abc610B;
extern T0*ms112_78646Abc614A;
extern T0*ms610_48Abc610C;
extern T0*ms612_345Abc620A;
extern T0*ms33_45Abc33A;
extern T0*ms790_244523906Abc790A;
extern T0*ms35_17498Abc35A;
extern T0*ms112_585944489Abc112A;
extern T0*ms612_345Abc612A;
extern T0*ms631_80501401Abc631A;
extern T0*ms623_1068122514Abc623A;
extern T0*ms100_1778077539Abc100A;
extern T0*ms112_1413407004Abc112A;
extern T0*ms34_77350Abc34A;
extern T0*ms112_8359055Abc112A;
extern T0*ms34_8054609Abc34A;
extern T0*ms336_70962Abc559A;
extern T0*ms557_1399364920Abc557A;
extern T0*ms113_6926Abc113A;
extern T0*ms788_130382376Abc788A;
extern T0*ms100_1615234134Abc100B;
extern T0*ms100_1615234134Abc100A;
extern T0*ms101_1317175740Abc101A;
extern T0*ms620_427390771Abc620A;
extern T0*ms107_292482Abc95A;
extern T0*ms107_292482Abc95B;
extern T0*ms107_292482Abc95C;
extern T0*ms379_668815628Abc379A;
extern T0*ms112_1063704391Abc112A;
extern T0*ms112_1450791030Abc112A;
extern T0*ms100_639285944Abc100A;
extern T0*ms33_2187483Abc33A;
extern T0*ms33_39002989Abc33A;
extern T0*ms100_99041221Abc100A;
extern T0*ms620_86195952Abc620A;
extern T0*ms418_271Abc418A;
extern T0*ms112_1765Abc112A;
extern T0*ms405_1119905623Abc405A;
extern T0*ms336_934695142Abc336A;
extern T0*ms371_561523426Abc665A;
extern T0*ms112_1746979137Abc112A;
extern T0*ms34_10208843Abc376A;
extern T0*ms33_9676326Abc33A;
extern T0*ms100_107634778Abc100A;
extern T0*ms34_16942Abc34A;
extern T0*ms284_188916891Abc284A;
extern T0*ms33_1157Abc33A;
extern T0*ms394_29037Abc394A;
extern T0*ms418_271Abc443A;
extern T0*ms418_271Abc394A;
extern T0*ms371_1731781Abc371A;
extern T0*ms33_112335826Abc33A;
extern T0*ms400_2004103151Abc400A;
extern T0*ms371_1731781Abc371B;
extern T0*ms108_297Abc108A;
extern T0*ms371_1731781Abc371C;
extern T0*ms621_29107967Abc621A;
extern T0*ms112_36778611Abc112A;
extern T0*ms100_9897510Abc100A;
extern T0*ms790_349661420Abc790A;
extern T0*ms619_249330648Abc619A;
extern T0*ms121_203714719Abc121A;
extern T0*ms122_570Abc122A;
extern T0*ms336_25373399Abc336A;
extern T0*ms596_197373672Abc596A;
extern T0*ms596_197373672Abc596B;
extern T0*ms597_246Abc611A;
extern T0*ms367_762122588Abc367A;
extern T0*ms367_762122588Abc367B;
extern T0*ms597_246Abc612A;
extern T0*ms788_2097247Abc788A;
extern T0*ms400_1705796732Abc400A;
extern T0*ms597_246Abc612B;
extern T0*ms597_246Abc612C;
extern T0*ms597_246Abc612D;
extern T0*ms597_246Abc612E;
extern T0*ms597_246Abc612F;
extern T0*ms597_246Abc612G;
extern T0*ms597_246Abc614A;
extern T0*ms100_2047202317Abc100A;
extern T0*ms100_2047202317Abc100B;
extern T0*ms418_271Abc476A;
extern T0*ms597_246Abc620A;
extern T0*ms597_246Abc620B;
extern T0*ms597_246Abc620C;
extern T0*ms597_246Abc620D;
extern T0*ms597_246Abc620E;
extern T0*ms597_246Abc620F;
extern T0*ms597_246Abc620G;
extern T0*ms597_246Abc620H;
extern T0*ms597_246Abc620I;
extern T0*ms112_179423058Abc112A;
extern T0*ms597_246Abc620J;
extern T0*ms597_246Abc620K;
extern T0*ms597_246Abc620L;
extern T0*ms112_1682814572Abc112A;
extern T0*ms597_246Abc620M;
extern T0*ms597_246Abc620N;
extern T0*ms597_246Abc620O;
extern T0*ms418_271Abc479A;
extern T0*ms597_246Abc620P;
extern T0*ms597_246Abc620Q;
extern T0*ms597_246Abc620R;
extern T0*ms597_246Abc620S;
extern T0*ms597_246Abc620T;
extern T0*ms597_246Abc620U;
extern T0*ms597_246Abc620V;
extern T0*ms597_246Abc620W;
extern T0*ms597_246Abc620X;
extern T0*ms597_246Abc620Y;
extern T0*ms597_246Abc620Z;
extern T0*ms95_445214625Abc95A;
extern T0*ms597_706329Abc597A;
extern T0*ms397_1182157125Abc397A;
extern T0*ms597_246Abc620a;
extern T0*ms597_246Abc620b;
extern T0*ms597_246Abc620c;
extern T0*ms597_246Abc620d;
extern T0*ms597_246Abc620e;
extern T0*ms107_1483967746Abc107A;
extern T0*ms597_246Abc620f;
extern T0*ms597_246Abc620g;
extern T0*ms33_126Abc33A;
extern T0*ms597_246Abc620h;
extern T0*ms597_246Abc620i;
extern T0*ms597_246Abc620j;
extern T0*ms597_246Abc620k;
extern T0*ms597_246Abc620l;
extern T0*ms597_246Abc620m;
extern T0*ms597_246Abc620n;
extern T0*ms284_300Abc614A;
extern T0*ms112_1271Bbc612A;
extern T0*ms33_55040341Abc33A;
extern T0*ms32_1181006553Abc32A;
extern T0*ms107_646243744Abc107A;
extern T0*ms397_1222747401Abc397A;
extern T0*ms284_300Abc623A;
extern T0*ms400_282345691Abc400A;
extern T0*ms33_371Abc33A;
extern T0*ms112_1271Bbc620A;
extern T0*ms112_1271Bbc620B;
extern T0*ms400_177461Abc400B;
extern T0*ms112_1271Bbc620C;
extern T0*ms33_735034101Abc33A;
extern T0*ms400_177461Abc400A;
extern T0*ms112_1271Bbc620D;
extern T0*ms112_36460172Abc112A;
extern T0*ms394_29037Abc614A;
extern T0*ms597_246Abc597A;
extern T0*ms29_1394769930Abc29A;
extern T0*ms112_1271Bbc619A;
extern T0*ms112_1295Bbc614A;
extern T0*ms112_1295Bbc564A;
extern T0*ms112_1295Bbc614B;
extern T0*ms564_1476287022Abc564A;
extern T0*ms732_241Abc620A;
extern T0*ms732_241Abc620B;
extern T0*ms623_84Abc623A;
extern T0*ms100_1898638542Abc100A;
extern T0*ms112_499425548Abc112A;
extern T0*ms95_510352234Abc95A;
extern T0*ms476_1319735562Abc476A;
extern T0*ms34_90408Abc34A;
extern T0*ms33_15751Abc33A;
extern T0*ms274_641030424Abc274A;
extern T0*ms452_947318471Abc452A;
extern T0*ms112_1811657197Abc112A;
extern T0*ms280_92467250Abc280B;
extern T0*ms596_619030689Abc596A;
extern T0*ms280_92467250Abc280A;
extern T0*ms112_431043495Abc112D;
extern T0*ms112_431043495Abc112C;
extern T0*ms976_10220290Abc976A;
extern T0*ms112_431043495Abc112B;
extern T0*ms976_10220290Abc976B;
extern T0*ms112_431043495Abc112A;
extern T0*ms790_1173325215Abc790A;
extern T0*ms112_37095Abc609A;
extern T0*ms108_15828Abc108A;
extern T0*ms336_1813679543Abc336A;
extern T0*ms112_3374Abc112A;
extern T0*ms418_271Abc597A;
extern T0*ms112_3374Abc112B;
extern T0*ms274_1709309070Abc107A;
extern T0*ms34_78002Abc423A;
extern T0*ms34_78002Abc423B;
extern T0*ms614_1124563501Abc614A;
extern T0*ms620_419Abc620B;
extern T0*ms620_419Abc620A;
extern T0*ms790_2136427942Abc790A;
extern T0*ms418_271Abc660A;
extern T0*ms418_271Abc660B;
extern T0*ms418_271Abc660C;
extern T0*ms666_1937147216Abc666A;
extern T0*ms108_9222Abc108A;
extern T0*ms619_1197879602Abc619A;
extern T0*ms597_560761477Abc597A;
extern T0*ms100_2110077371Abc100A;
extern T0*ms792_730579755Abc792A;
extern T0*ms597_1610470399Abc597A;
extern T0*ms431_235492225Abc431A;
extern T0*ms107_1365578385Abc107A;
extern T0*ms620_1116064705Abc620A;
extern T0*ms790_90782Abc790D;
extern T0*ms790_90782Abc790C;
extern T0*ms790_90782Abc790B;
extern T0*ms790_90782Abc790A;
extern T0*ms108_8801Abc108A;
extern T0*ms110_3069Abc110A;
extern T0*ms34_3073Abc34A;
extern T0*ms452_1630520481Abc452A;
extern T0*ms732_241Abc732A;
extern T0*ms112_1404148845Abc112A;
extern T0*ms732_241Abc732B;
extern T0*ms112_1404148845Abc112B;
extern T0*ms112_1404148845Abc112C;
extern T0*ms100_1003875089Abc100A;
extern T0*ms100_554066118Abc100A;
extern T0*ms112_506210947Abc112A;
extern T0*ms112_635Abc614A;
extern T0*ms112_635Abc614B;
extern T0*ms112_635Abc614C;
extern T0*ms108_1255802680Abc108A;
extern T0*ms112_635Abc614D;
extern T0*ms112_635Abc614E;
extern T0*ms112_635Abc620A;
extern T0*ms112_635Abc614F;
extern T0*ms565_237Abc565A;
extern T0*ms112_635Abc620B;
extern T0*ms112_635Abc614G;
extern T0*ms112_635Abc614H;
extern T0*ms791_27492334Abc791A;
extern T0*ms112_635Abc623A;
extern T0*ms112_635Abc623B;
extern T0*ms33_1735712398Abc33A;
extern T0*ms612_1406782500Abc612A;
extern T0*ms621_1155996628Abc621A;
extern T0*ms107_866669263Abc107A;
extern T0*ms100_1176245553Abc100A;
extern T0*ms112_245Abc112A;
extern T0*ms107_195Abc107A;
extern T0*ms121_1711985232Abc683A;
extern T0*ms620_15533Abc620A;
extern T0*ms633_42706587Abc633A;
extern T0*ms614_1241777620Abc614A;
extern T0*ms112_1957408550Abc112A;
extern T0*ms101_181806522Abc101A;
extern T0*ms620_714188879Abc620A;
extern T0*ms403_1721243342Abc403A;
extern T0*ms112_635Abc597A;
extern T0*ms790_1648235130Abc790A;
extern T0*ms100_1453916708Abc100A;
extern T0*ms108_8991Abc108A;
extern T0*ms108_8991Abc108B;
extern T0*ms612_1188262106Abc612A;
extern T0*ms620_162010Abc620A;
extern T0*ms112_713312393Abc112A;
extern T0*ms115_290966604Abc115A;
extern T0*ms620_162010Abc621A;
extern T0*ms100_397329363Abc100A;
extern T0*ms101_256559978Abc101A;
extern T0*ms405_176104896Abc405A;
extern T0*ms112_382Abc112A;
extern T0*ms112_382Abc112B;
extern T0*ms110_402Abc110A;
extern T0*ms33_747962924Abc33A;
extern T0*ms476_1411247976Abc476A;
extern T0*ms621_28273584Abc621A;
extern T0*ms609_1312Abc609A;
extern T0*ms609_1312Abc620A;
extern T0*ms100_1869854287Abc100A;
extern T0*ms107_1131876546Abc107A;
extern T0*ms117_584218374Abc117A;
extern T0*ms108_1319327951Abc108A;
extern T0*ms368_35157672Abc368A;
extern T0*ms612_40427625Abc612A;
extern T0*ms274_1709309070Abc274A;
extern T0*ms620_1338608648Abc620A;
extern T0*ms329_580435889Abc329A;
extern T0*ms34_10193105Abc34A;
extern T0*ms609_185468Abc609A;
extern T0*ms110_395994Abc110A;
extern T0*ms100_1387339410Abc100A;
extern T0*ms623_8436Abc623C;
extern T0*ms623_8436Abc623B;
extern T0*ms623_8436Abc623A;
extern T0*ms101_35386613Abc101A;
extern T0*ms118_300594Abc685A;
extern T0*ms33_48672249Abc33A;
extern T0*ms107_408537579Abc107A;
extern T0*ms475_1370872538Abc475A;
extern T0*ms620_1586596820Abc620A;
extern T0*ms620_1586596820Abc620B;
extern T0*ms112_441192857Abc112A;
extern T0*ms620_1586596820Abc621A;
extern T0*ms277_1973946666Abc277A;
extern T0*ms795_2007377394Abc795A;
extern T0*ms34_396356Abc597A;
extern T0*ms108_1361085152Abc108A;
extern T0*ms619_1384921237Abc619A;
extern T0*ms597_386819Abc597A;
extern T0*ms107_1194472660Abc107A;
extern T0*ms107_10Abc112A;
extern T0*ms107_10Abc107A;
extern T0*ms107_10Abc112B;
extern T0*ms107_10Abc107B;
extern T0*ms452_783418632Abc452A;
extern T0*ms100_2108887750Abc100B;
extern T0*ms107_479236135Abc107A;
extern T0*ms100_2108887750Abc100A;
extern T0*ms107_10Abc115A;
extern T0*ms100_2001191Abc100A;
extern T0*ms274_90141Abc274A;
extern T0*ms112_635Abc790A;
extern T0*ms112_635Abc790B;
extern T0*ms619_905827712Abc619A;
extern T0*ms620_524787520Abc620A;
extern T0*ms597_1923813010Abc597A;
extern T0*ms100_676769302Abc100A;
extern T0*ms33_94407393Abc33A;
extern T0*ms121_195766720Abc121A;
extern T0*ms33_88795Abc33A;
extern T0*ms363_240593583Abc363A;
extern T0*ms620_1023363018Abc620A;
extern T0*ms469_522818189Abc469A;
extern T0*ms100_134219969Abc100A;
extern T0*ms107_921818688Abc107A;
extern T0*ms339_416500Abc339A;
extern T0*ms34_396356Abc612A;
extern T0*ms476_1034900711Abc476A;
extern T0*ms100_66884963Abc100A;
extern T0*ms614_16510Abc614A;
extern T0*ms549_1185594Abc549A;
extern T0*ms790_834589410Abc790A;
extern T0*ms614_264Abc614D;
extern T0*ms614_264Abc614C;
extern T0*ms33_573080478Abc33A;
extern T0*ms614_264Abc614B;
extern T0*ms614_259Abc614A;
extern T0*ms614_264Abc614A;
extern T0*ms100_1582009998Abc100A;
extern T0*ms790_1665297219Abc790A;
extern T0*ms29_1852009437Abc29A;
extern T0*ms597_1426099398Abc597A;
extern T0*ms100_1505459217Abc100A;
extern T0*ms108_725963810Abc108A;
extern T0*ms112_1630601156Abc112A;
extern T0*ms33_361Abc614A;
extern T0*ms33_361Abc614B;
extern T0*ms530_2014364610Abc530A;
extern T0*ms612_205Abc612A;
extern T0*ms112_1906398440Abc112A;
extern T0*ms100_96053257Abc100A;
extern T0*ms633_7440512Abc633A;
extern T0*ms32_831708366Abc32A;
extern T0*ms100_941240074Abc100A;
extern T0*ms549_64080Abc549A;
extern T0*ms100_1478844272Abc100A;
extern T0*ms34_396356Abc516A;
extern T0*ms614_1341914655Abc614A;
extern T0*ms100_202933204Abc100A;
extern T0*ms597_9589368Abc597A;
extern T0*ms108_326Abc108A;
extern T0*ms678_8777401Abc678A;
extern T0*ms108_25704393Abc108A;
extern T0*ms274_1667312535Abc274A;
extern T0*ms336_345225764Abc336A;
extern T0*ms33_47Abc112A;
extern T0*ms112_3374Abc611A;
extern T0*ms400_900982204Abc400A;
extern T0*ms336_1524252299Abc336A;
extern T0*ms272_1587749191Abc272A;
extern T0*ms621_804085Abc621B;
extern T0*ms379_492964813Abc379A;
extern T0*ms621_804085Abc621A;
extern T0*ms112_3374Abc614A;
extern T0*ms597_1426Abc597A;
extern T0*ms449_1087076085Abc449A;
extern T0*ms790_3209Abc790A;
extern T0*ms510_2080244194Abc511A;
extern T0*ms112_3374Abc620A;
extern T0*ms112_3374Abc620B;
extern T0*ms614_2024156039Abc614A;
extern T0*ms510_2080244194Abc510A;
extern T0*ms108_5525574Abc108A;
extern T0*ms628_399591Abc628A;
extern T0*ms112_1773201687Abc112A;
extern T0*ms112_2072467813Abc619A;
extern T0*ms112_32080Abc112A;
extern T0*ms476_589832448Abc476A;
extern T0*ms112_397592212Abc112A;
extern T0*ms620_4881995Abc620A;
extern T0*ms400_1057872442Abc400A;
extern T0*ms112_2072467813Abc609A;
extern T0*ms112_2072467813Abc612A;
extern T0*ms35_1777434714Abc35A;
extern T0*ms35_336Abc108A;
extern T0*ms35_914215870Abc35A;
extern T0*ms95_1229059519Abc95A;
extern T0*ms34_396356Abc404A;
extern T0*ms112_1418906530Abc112A;
extern T0*ms112_3374Abc597A;
extern T0*ms112_781060556Abc112A;
extern T0*ms33_282Abc771A;
extern T0*ms792_585110409Abc792A;
extern T0*ms35_822199910Abc35A;
extern T0*ms34_51843716Abc34A;
extern T0*ms112_245Abc611A;
extern T0*ms791_1274Abc791A;
extern T0*ms112_245Abc612A;
extern T0*ms112_245Abc612B;
extern T0*ms101_1700247488Abc101A;
extern T0*ms33_62Abc33A;
extern T0*ms112_245Abc612C;
extern T0*ms112_511465169Abc112A;
extern T0*ms112_245Abc612D;
extern T0*ms112_5395053Abc788C;
extern T0*ms400_1552156565Abc400E;
extern T0*ms112_5395053Abc788B;
extern T0*ms400_1552156565Abc400D;
extern T0*ms112_5395053Abc788A;
extern T0*ms400_1552156565Abc400C;
extern T0*ms400_1552156565Abc400B;
extern T0*ms400_1552156565Abc400A;
extern T0*ms619_15915Abc619A;
extern T0*ms284_200Abc597A;
extern T0*ms614_16510Abc790A;
extern T0*ms619_1203432441Abc619A;
extern T0*ms597_254Abc597A;
extern T0*ms112_508495830Abc112A;
extern T0*ms614_644847010Abc614A;
extern T0*ms100_902126Abc100A;
extern T0*ms100_1284361566Abc100A;
extern T0*ms34_16264Abc466A;
extern T0*ms112_1642367158Abc112E;
extern T0*ms112_1642367158Abc112D;
extern T0*ms112_1642367158Abc112C;
extern T0*ms564_302501127Abc564A;
extern T0*ms112_1642367158Abc112B;
extern T0*ms101_1604340919Abc101A;
extern T0*ms100_156243902Abc100A;
extern T0*ms112_1642367158Abc112A;
extern T0*ms284_1224218969Abc284A;
extern T0*ms108_50863580Abc108A;
extern T0*ms429_597973944Abc429A;
extern T0*ms33_827429162Abc33A;
extern T0*ms34_1988096Abc34A;
extern T0*ms619_197159Abc619A;
extern T0*ms107_313299890Abc107A;
extern T0*ms420_77Abc420A;
extern T0*ms619_197159Abc620A;
extern T0*ms112_382Abc614A;
extern T0*ms112_382Abc614B;
extern T0*ms112_382Abc614C;
extern T0*ms112_6559Abc112A;
extern T0*ms336_1001314405Abc336A;
extern T0*ms112_6559Abc112B;
extern T0*ms112_149822297Abc112A;
extern T0*ms112_1273572186Abc112A;
extern T0*ms614_1115076Abc614A;
extern T0*ms112_284Bbc112A;
extern T0*ms112_284Bbc112B;
extern T0*ms115_1605047378Abc115A;
extern T0*ms112_122027336Abc112A;
extern T0*ms33_619776399Abc33A;
extern T0*ms35_2141685Abc35A;
extern T0*ms112_1319581398Abc112A;
extern T0*ms478_869266852Abc478A;
extern T0*ms620_19199275Abc620A;
extern T0*ms108_297Abc976A;
extern T0*ms419_797085749Abc419A;
extern T0*ms100_2061122069Abc100A;
extern T0*ms84_1761241425Abc84A;
extern T0*ms100_199494346Abc100A;
extern T0*ms371_31214580Abc371A;
extern T0*ms419_1837585965Abc419A;
extern T0*ms100_776600004Abc100A;
extern T0*ms363_1485100899Abc363A;
extern T0*ms336_2050169721Abc336A;
extern T0*ms107_10Abc483A;
extern T0*ms100_1581435442Abc100A;
extern T0*ms790_3209Abc621A;
extern T0*ms619_1407Abc619A;
extern T0*ms345_1195446850Abc345A;
extern T0*ms620_1096165867Abc620B;
extern T0*ms620_1096165867Abc620A;
extern T0*ms277_1188332009Abc277A;
extern T0*ms112_382Abc597A;
extern T0*ms112_382Abc597B;
extern T0*ms112_351488799Abc112A;
extern T0*ms112_382Abc597C;
extern T0*ms621_1062582514Abc621A;
extern T0*ms467_384465Abc467A;
extern T0*ms378_1808265259Abc378A;
extern T0*ms112_1793244543Abc112A;
extern T0*ms107_1610926534Abc107A;
extern T0*ms976_838816886Abc976A;
extern T0*ms112_5395053Abc597A;
extern T0*ms108_373286592Abc108A;
extern T0*ms100_1593742473Abc100A;
extern T0*ms626_295Abc626A;
extern T0*ms89_3520Abc89A;
extern T0*ms119_2120987577Abc119A;
extern T0*ms612_167166Abc612A;
extern T0*ms790_1739163321Abc790A;
extern T0*ms559_142931125Abc405A;
extern T0*ms100_586311386Abc100A;
extern T0*ms112_277Abc112A;
extern T0*ms112_282Abc112A;
extern T0*ms112_277Abc112B;
extern T0*ms112_277Abc112C;
extern T0*ms112_277Abc112D;
extern T0*ms112_277Abc112E;
extern T0*ms112_277Abc112F;
extern T0*ms112_277Abc112G;
extern T0*ms790_236525Abc790A;
extern T0*ms612_1097836905Abc612B;
extern T0*ms612_1097836905Abc612A;
extern T0*ms596_926003101Abc596A;
extern T0*ms33_1947246Abc33A;
extern T0*ms33_1947251Abc33A;
extern T0*ms559_950159899Abc559A;
extern T0*ms100_1380562254Abc100A;
extern T0*ms467_384465Abc620A;
extern T0*ms467_384465Abc621A;
extern T0*ms620_842552Abc620A;
extern T0*ms790_54686284Abc790A;
extern T0*ms112_5395053Abc612A;
extern T0*ms118_300594Abc118A;
extern T0*ms112_5395053Abc610J;
extern T0*ms112_5395053Abc610I;
extern T0*ms112_5395053Abc610H;
extern T0*ms557_2007779419Abc557A;
extern T0*ms112_5395053Abc610G;
extern T0*ms112_5395053Abc610F;
extern T0*ms112_5395053Abc610E;
extern T0*ms112_5395053Abc610D;
extern T0*ms112_5395053Abc610C;
extern T0*ms112_5395053Abc610B;
extern T0*ms118_300594Abc121A;
extern T0*ms112_5395053Abc610A;
extern T0*ms35_385751Abc274A;
extern T0*ms371_360Abc112A;
extern T0*ms100_2055333675Abc100A;
extern T0*ms100_2055333675Abc100B;
extern T0*ms432_1379248421Abc432A;
extern T0*ms471_449661Abc471A;
extern T0*ms100_1819737650Abc100A;
extern T0*ms620_6534Abc620A;
extern T0*ms621_59Abc621A;
extern T0*ms620_6534Abc621A;
extern T0*ms564_1208522276Abc595A;
extern T0*ms620_32650Abc620A;
extern T0*ms100_973007162Abc100A;
extern T0*ms620_32650Abc620B;
extern T0*ms483_10459847Abc483A;
extern T0*ms118_300594Abc100A;
extern T0*ms394_354065377Abc394A;
extern T0*ms597_585895143Abc597A;
extern T0*ms633_1548937422Abc633A;
extern T0*ms597_1949908058Abc597A;
extern T0*ms112_1330Abc112A;
extern T0*ms112_1330Abc112B;
extern T0*ms112_1330Abc112C;
extern T0*ms112_1330Abc112D;
extern T0*ms112_1330Abc112E;
extern T0*ms112_1330Abc112F;
extern T0*ms112_1330Abc112G;
extern T0*ms112_1330Abc112H;
extern T0*ms112_1330Abc112I;
extern T0*ms112_1330Abc112J;
extern T0*ms112_1330Abc112K;
extern T0*ms112_1154403080Abc112A;
extern T0*ms112_1330Abc112L;
extern T0*ms620_185515Abc620A;
extern T0*ms614_162095Abc614A;
extern T0*ms564_1208522276Abc564A;
extern T0*ms400_1277330071Abc400A;
extern T0*ms112_1330Abc117A;
extern T0*ms476_1427483140Abc476A;
extern T0*ms339_931579788Abc339A;
extern T0*ms112_651Abc112A;
extern T0*ms112_651Abc112B;
extern T0*ms100_1471861047Abc100A;
extern T0*ms621_23692781Abc621A;
extern T0*ms523_287Abc596A;
extern T0*ms350_1479430694Abc350A;
extern T0*ms619_54714979Abc619A;
extern T0*ms409_835850355Abc409A;
extern T0*ms34_1532344910Abc34A;
extern T0*ms112_36951Abc112A;
extern T0*ms112_756717624Abc112A;
extern T0*ms429_1026844627Abc429A;
extern T0*ms100_1268871407Abc100A;
extern T0*ms33_3474Abc33A;
extern T0*ms734_888288799Abc734A;
extern T0*ms394_5912Abc394A;
extern T0*ms112_273430530Abc112B;
extern T0*ms112_273430530Abc112A;
extern T0*ms790_1574324912Abc790A;
extern T0*ms110_674Abc110A;
extern T0*ms597_882065083Abc597B;
extern T0*ms597_882065083Abc597A;
extern T0*ms597_338723264Abc597A;
extern T0*ms34_16761Abc34A;
extern T0*ms679_1043Abc679A;
extern T0*ms559_142931125Abc559A;
extern T0*ms112_2072467813Abc112A;
extern T0*ms100_833080669Abc100A;
extern T0*ms620_802840Abc620A;
extern T0*ms620_802840Abc620B;
extern T0*ms115_576322499Abc115A;
extern T0*ms791_136857117Abc791A;
extern T0*ms284_927785894Abc284A;
extern T0*ms357_881547256Abc357A;
extern T0*ms112_1565Abc112A;
extern T0*ms112_1565Abc112B;
extern T0*ms112_1565Abc112C;
extern T0*ms100_437331Abc100A;
extern T0*ms112_1565Abc112D;
extern T0*ms619_259021955Abc619A;
extern T0*ms29_1767481079Abc29A;
extern T0*ms597_472574902Abc597A;
extern T0*ms597_35330Abc597A;
extern T0*ms612_226Abc614B;
extern T0*ms612_226Abc614A;
extern T0*ms612_7225250Abc612A;
extern T0*ms121_1974940930Abc121A;
extern T0*ms108_69851Abc108A;
extern T0*ms108_69851Abc108B;
extern T0*ms107_1568923104Abc107A;
extern T0*ms612_226Abc612B;
extern T0*ms612_226Abc612A;
extern T0*ms274_305465997Abc274A;
extern T0*ms100_1389575653Abc100A;
extern T0*ms112_32080Abc596A;
extern T0*ms734_849265556Abc734A;
extern T0*ms400_530141799Abc400X;
extern T0*ms400_530141799Abc400W;
extern T0*ms400_530141799Abc400V;
extern T0*ms400_530141799Abc400U;
extern T0*ms400_530141799Abc400T;
extern T0*ms400_530141799Abc400S;
extern T0*ms400_530141799Abc400R;
extern T0*ms400_530141799Abc400Q;
extern T0*ms400_530141799Abc400P;
extern T0*ms400_530141799Abc400O;
extern T0*ms400_530141799Abc400N;
extern T0*ms400_530141799Abc400M;
extern T0*ms400_530141799Abc400L;
extern T0*ms400_530141799Abc400K;
extern T0*ms400_530141799Abc400J;
extern T0*ms400_530141799Abc400I;
extern T0*ms400_530141799Abc400H;
extern T0*ms400_530141799Abc400G;
extern T0*ms400_530141799Abc400F;
extern T0*ms597_422487Abc597A;
extern T0*ms400_530141799Abc400E;
extern T0*ms776_602797481Abc776A;
extern T0*ms400_530141799Abc400D;
extern T0*ms400_530141799Abc400C;
extern T0*ms400_530141799Abc400B;
extern T0*ms400_530141799Abc400A;
extern T0*ms33_1673345408Abc33A;
extern T0*ms100_1666553531Abc100A;
extern T0*ms619_10322525Abc790A;
extern T0*ms621_1102979958Abc621A;
extern T0*ms274_216Abc95A;
extern T0*ms523_287Abc523A;
extern T0*ms33_76691Abc483A;
extern T0*ms112_2142659303Abc112A;
extern T0*ms394_5912Abc614A;
extern T0*ms397_401707956Abc397A;
extern T0*ms469_58Abc469A;
extern T0*ms470_852437Abc470A;
extern T0*ms112_531983658Abc112A;
extern T0*ms614_1952787551Abc614A;
extern T0*ms108_334Abc108A;
extern T0*ms685_46245Abc685A;
extern T0*ms33_552Abc33A;
extern T0*ms790_1012357115Abc790A;
extern T0*ms100_872019014Abc100A;
extern T0*ms614_23451005Abc614A;
extern T0*ms32_8897Abc32A;
extern T0*ms108_530877013Abc108A;
extern T0*ms371_360Abc371A;
extern T0*ms452_1305581590Abc452A;
extern T0*ms33_30191860Abc33A;
extern T0*ms112_738771309Abc112A;
extern T0*ms112_1145546877Abc112B;
extern T0*ms112_1145546877Abc112A;
extern T0*ms620_160146Abc620A;
extern T0*ms620_160146Abc620B;
extern T0*ms100_1874765620Abc100A;
extern T0*ms401_902517583Abc401A;
extern T0*ms452_1876110531Abc452A;
extern T0*ms108_415107Abc108A;
extern T0*ms471_3496Abc471A;
extern T0*ms112_2103819988Abc112A;
extern T0*ms110_13028Abc110A;
extern T0*ms401_902517583Abc354A;
extern T0*ms108_84381Abc108A;
extern T0*ms112_391886489Abc112A;
extern T0*ms34_76226Abc34A;
extern T0*ms112_2237652Abc470A;
extern T0*ms378_1088174660Abc378A;
extern T0*ms273_956361723Abc273A;
extern T0*ms107_1786429697Abc107A;
extern T0*ms410_532898088Abc410A;
extern T0*ms33_421505Abc33A;
extern T0*ms35_10554609Abc35A;
extern T0*ms790_101Abc790A;
extern T0*ms660_643795973Abc660A;
extern T0*ms790_598811726Abc790A;
extern T0*ms34_427898753Abc34A;
extern T0*ms108_2109537640Abc108A;
extern T0*ms401_902517583Abc392A;
extern T0*ms108_2109537640Abc108B;
extern T0*ms108_2109537640Abc108C;
extern T0*ms112_616198177Abc112A;
extern T0*ms108_2109537640Abc108D;
extern T0*ms116_128358027Abc116A;
extern T0*ms112_48520827Abc112A;
extern T0*ms100_370754643Abc100A;
extern T0*ms400_613384625Abc400A;
extern T0*ms620_870841390Abc620A;
extern T0*ms620_870841390Abc620B;
extern T0*ms112_277Abc557A;
extern T0*ms112_277Abc612A;
extern T0*ms112_277Abc612B;
extern T0*ms112_277Abc612C;
extern T0*ms34_627Abc412A;
extern T0*ms112_2753Abc112A;
extern T0*ms100_1909979286Abc100A;
extern T0*ms100_1909979286Abc100B;
extern T0*ms790_77282146Abc790A;
extern T0*ms112_277Abc614A;
extern T0*ms100_1021024803Abc100A;
extern T0*ms101_176469602Abc101A;
extern T0*ms619_10322525Abc619A;
extern T0*ms112_282Abc621A;
extern T0*ms115_840703310Abc115A;
extern T0*ms116_1382Abc116A;
extern T0*ms112_5395053Abc112C;
extern T0*ms29_833055089Abc29A;
extern T0*ms112_5395053Abc112B;
extern T0*ms392_446205995Abc392A;
extern T0*ms34_661Abc365A;
extern T0*ms112_5395053Abc112A;
extern T0*ms100_1090616383Abc100A;
extern T0*ms680_1047Abc680A;
extern T0*ms33_276937706Abc33A;
extern T0*ms350_1440516445Abc350A;
extern T0*ms371_360Abc614A;
extern T0*ms790_484169497Abc790A;
extern T0*ms614_117385886Abc614A;
extern T0*ms112_1238750212Abc112A;
extern T0*ms100_1912621670Abc100A;
extern T0*ms619_1328320695Abc619A;
extern T0*ms100_2008366323Abc100A;
extern T0*ms101_175744666Abc101A;
extern T0*ms112_277Abc597A;
extern T0*ms112_277Abc597B;
extern T0*ms620_1605175681Abc620A;
extern T0*ms596_1112927266Abc596B;
extern T0*ms95_15142174Abc95A;
extern T0*ms596_1112927266Abc596A;
extern T0*ms363_327012886Abc363A;
extern T0*ms34_627Abc398A;
extern T0*ms112_1201497496Abc112A;
extern T0*ms107_3579844Abc107A;
extern T0*ms34_627Abc399A;
extern T0*ms597_1125599189Abc597A;
extern T0*ms470_16902Abc470A;
extern T0*ms470_16902Abc470B;
extern T0*ms33_220Abc33A;
extern T0*ms620_219498506Abc620A;
extern T0*ms33_447851Abc33A;
extern T0*ms626_474Abc626A;
extern T0*ms112_1330Abc609A;
extern T0*ms112_1330Abc614A;
extern T0*ms112_1330Abc614B;
extern T0*ms112_1330Abc614C;
extern T0*ms33_185934049Abc33A;
extern T0*ms112_1330Abc614D;
extern T0*ms112_1330Abc614E;
extern T0*ms112_1330Abc620A;
extern T0*ms112_1330Abc620B;
extern T0*ms112_1330Abc620C;
extern T0*ms112_1330Abc621A;
extern T0*ms33_2090604340Abc33A;
extern T0*ms112_1330Abc621B;
extern T0*ms112_1330Abc621C;
extern T0*ms112_1330Abc621D;
extern T0*ms620_255Abc620B;
extern T0*ms112_1330Abc621E;
extern T0*ms620_255Abc620A;
extern T0*ms565_255Abc565A;
extern T0*ms112_1330Abc621F;
extern T0*ms112_1330Abc622A;
extern T0*ms112_1330Abc619A;
extern T0*ms112_1330Abc619B;
extern T0*ms112_1330Abc619C;
extern T0*ms29_85614Abc29A;
extern T0*ms620_5654700Abc620A;
extern T0*ms620_244793715Abc620A;
extern T0*ms620_244793715Abc620B;
extern T0*ms465_334725631Abc465A;
extern T0*ms112_1581747096Abc112A;
extern T0*ms112_227Abc112A;
extern T0*ms371_360Abc665A;
extern T0*ms619_1994852Abc619C;
extern T0*ms619_1994852Abc619B;
extern T0*ms619_1994852Abc619A;
extern T0*ms112_36951Abc613A;
extern T0*ms597_228498053Abc597A;
extern T0*ms614_86950Abc614A;
extern T0*ms596_1151663379Abc596A;
extern T0*ms102_1385667261Abc102A;
extern T0*ms100_126038302Abc100A;
extern T0*ms101_1836169859Abc101A;
extern T0*ms108_8889Abc108A;
extern T0*ms33_36193081Abc33A;
extern T0*ms112_1330Abc597A;
extern T0*ms112_1330Abc597B;
extern T0*ms112_1330Abc597C;
extern T0*ms112_1330Abc597D;
extern T0*ms95_1056980719Abc95A;
extern T0*ms33_180965424Abc33A;
extern T0*ms597_1575353618Abc597A;
extern T0*ms106_1442714837Abc106A;
extern T0*ms620_108351709Abc620A;
extern T0*ms33_2067995Abc33A;
extern T0*ms33_261093457Abc33A;
extern T0*ms112_32869Abc112A;
extern T0*ms108_631091213Abc108A;
extern T0*ms112_1565Abc612A;
extern T0*ms112_1565Abc612B;
extern T0*ms614_1898591066Abc614A;
extern T0*ms646_385268764Abc646A;
extern T0*ms112_1368099455Abc112A;
extern T0*ms112_1565Abc609A;
extern T0*ms623_90405963Abc623A;
extern T0*ms112_1964848975Abc112A;
extern T0*ms363_1459510708Abc107A;
extern T0*ms33_878996813Abc33A;
extern T0*ms112_1565Abc619A;
extern T0*ms112_1565Abc619B;
extern T0*ms112_850522083Abc112A;
extern T0*ms100_1733505988Abc100A;
extern T0*ms34_49076540Abc34A;
extern T0*ms790_77562923Abc790A;
extern T0*ms100_2096474678Abc100A;
extern T0*ms597_404651Abc597A;
extern T0*ms33_669Abc33A;
extern T0*ms107_1255397791Abc107A;
extern T0*ms628_448205Abc628A;
extern T0*ms33_954385774Abc33A;
extern T0*ms33_1223768616Abc33A;
extern T0*ms685_928596125Abc685A;
extern T0*ms108_1346168095Abc108A;
extern T0*ms614_244699380Abc614E;
extern T0*ms614_244699380Abc614D;
extern T0*ms597_1664036235Abc597A;
extern T0*ms614_244699380Abc614C;
extern T0*ms614_244699380Abc614B;
extern T0*ms614_244699380Abc614A;
extern T0*ms108_3291Abc108A;
extern T0*ms419_1304837581Abc419A;
extern T0*ms112_215791Abc112A;
extern T0*ms112_1565Abc597A;
extern T0*ms112_1565Abc597B;
extern T0*ms112_1565Abc597C;
extern T0*ms112_365905049Abc112A;
extern T0*ms446_743946038Abc446A;
extern T0*ms33_324411Abc33A;
extern T0*ms790_365929075Abc790A;
extern T0*ms112_625Abc112A;
extern T0*ms112_136593176Abc112A;
extern T0*ms620_17743770Abc620B;
extern T0*ms620_17743770Abc620A;
extern T0*ms609_5395074Abc609A;
extern T0*ms609_185428Abc609A;
extern T0*ms33_705019679Abc33A;
extern T0*ms274_1658492806Abc274A;
extern T0*ms112_2237652Abc112A;
extern T0*ms116_1382Abc430A;
extern T0*ms597_815493762Abc597A;
extern T0*ms33_451899881Abc33A;
extern T0*ms112_8260Abc112A;
extern T0*ms33_2098363273Abc33A;
extern T0*ms107_22271191Abc660A;
extern T0*ms108_721564652Abc108A;
extern T0*ms112_1330Abc791A;
extern T0*ms274_817932306Abc274A;
extern T0*ms33_60Abc614A;
extern T0*ms112_163909964Abc112A;
extern T0*ms483_76659Abc483A;
extern T0*ms597_430519127Abc597A;
extern T0*ms597_4434071Abc597A;
extern T0*ms419_325449730Abc419A;
extern T0*ms100_150329797Abc100A;
extern T0*ms108_2139128753Abc108A;
extern T0*ms368_3337Abc368A;
extern T0*ms790_1111960899Abc790A;
extern T0*ms328_977955761Abc328A;
extern T0*ms100_1950357785Abc100A;
extern T0*ms329_1489034545Abc329A;
extern T0*ms33_84969Abc33A;
extern T0*ms34_17176Abc34A;
extern T0*ms612_161951Abc612A;
extern T0*ms274_1251030042Abc274A;
extern T0*ms609_4570932Abc609A;
extern T0*ms593_1971245Abc593A;
extern T0*ms339_10414970Abc339A;
extern T0*ms115_1875884480Abc115A;
extern T0*ms400_165614527Abc400A;
extern T0*ms400_165614527Abc400B;
extern T0*ms400_165614527Abc400C;
extern T0*ms370_7506001Abc370A;
extern T0*ms33_1498845794Abc33A;
extern T0*ms30_118Abc30A;
extern T0*ms363_165601417Abc363A;
extern T0*ms336_2084982239Abc336A;
extern T0*ms112_253935823Abc112A;
extern T0*ms400_511502716Abc400A;
extern T0*ms282_1133285999Abc282A;
extern T0*ms400_511502716Abc400B;
extern T0*ms100_501268295Abc100A;
extern T0*ms452_161769183Abc452A;
extern T0*ms121_354654986Abc121A;
extern T0*ms112_437780Abc112A;
extern T0*ms284_2082988666Abc284A;
extern T0*ms619_2006740748Abc619A;
extern T0*ms681_78239462Abc681A;
extern T0*ms363_1459510708Abc401A;
extern T0*ms33_197002168Abc33A;
extern T0*ms107_1814748872Abc107A;
extern T0*ms400_350193314Abc400A;
extern T0*ms34_3645Abc365A;
extern T0*ms619_280766651Abc619A;
extern T0*ms100_1931146896Abc100A;
extern T0*ms363_1459510708Abc363A;
extern T0*ms34_14036Abc34A;
extern T0*ms364_1686701Abc364A;
extern T0*ms405_1260488135Abc405A;
extern T0*ms100_124311631Abc100A;
extern T0*ms621_3181Abc621A;
extern T0*ms112_1065652086Abc112A;
extern T0*ms633_1658151484Abc633A;
extern T0*ms476_1646704683Abc476A;
extern T0*ms453_2015374870Abc453A;
extern T0*ms100_723705127Abc100A;
extern T0*ms633_374042271Abc633A;
extern T0*ms790_160930Abc790A;
extern T0*ms772_1182938696Abc772A;
extern T0*ms34_3645Abc34A;
extern T0*ms34_3595Abc34A;
extern T0*ms112_1142598643Abc112A;
extern T0*ms107_212031001Abc107A;
extern T0*ms101_1242149539Abc101A;
extern T0*ms112_1645835456Abc112A;
extern T0*ms612_162019Abc612A;
extern T0*ms476_305Abc790D;
extern T0*ms476_305Abc790C;
extern T0*ms476_305Abc790B;
extern T0*ms476_305Abc790A;
extern T0*ms620_1671074150Abc620A;
extern T0*ms790_525205114Abc790A;
extern T0*ms620_1671074150Abc620B;
extern T0*ms532_456083848Abc532A;
extern T0*ms108_7809Abc108A;
extern T0*ms363_1459510708Abc394A;
extern T0*ms363_1459510708Abc394B;
extern T0*ms112_2545Abc112A;
extern T0*ms363_1459510708Abc394C;
extern T0*ms107_1574136045Abc107A;
extern T0*ms33_1501191Abc33A;
extern T0*ms108_2109537640Abc685A;
extern T0*ms273_51017327Abc273A;
extern T0*ms108_2109537640Abc685B;
extern T0*ms363_1459510708Abc397A;
extern T0*ms363_1459510708Abc397B;
extern T0*ms363_1459510708Abc397C;
extern T0*ms363_1459510708Abc397D;
extern T0*ms277_32926Abc277A;
extern T0*ms597_1212159Abc597A;
extern T0*ms112_1240218271Abc112A;
extern T0*ms620_2138778683Abc620A;
extern T0*ms100_2053250287Abc100A;
extern T0*ms368_18257Abc368A;
extern T0*ms112_15351Abc112A;
extern T0*ms112_15351Abc112B;
extern T0*ms108_1964046235Abc108A;
extern T0*ms112_1724182721Abc112A;
extern T0*ms33_55040391Abc33A;
extern T0*ms108_99Abc108A;
extern T0*ms564_742356033Abc564A;
extern T0*ms345_646901709Abc345A;
extern T0*ms35_87180Abc35A;
extern T0*ms33_78150Abc33A;
extern T0*ms688_1345295929Abc688A;
extern T0*ms400_1324951230Abc400A;
extern T0*ms112_1911279888Abc112A;
extern T0*ms112_1580612071Abc112A;
extern T0*ms633_1846931416Abc633A;
extern T0*ms34_2073386Abc363B;
extern T0*ms34_2073386Abc363A;
extern T0*ms620_520388145Abc620B;
extern T0*ms620_520388145Abc620A;
extern T0*ms112_12188Abc112A;
extern T0*ms620_304601115Abc620A;
extern T0*ms107_218672210Abc107A;
extern T0*ms597_180709512Abc597A;
extern T0*ms790_2051940780Abc790A;
extern T0*ms397_1037594318Abc397A;
extern T0*ms112_712350300Abc112A;
extern T0*ms621_2001063662Abc621A;
extern T0*ms620_42916Abc620A;
extern T0*ms620_42916Abc620B;
extern T0*ms620_42916Abc620C;
extern T0*ms620_42916Abc620D;
extern T0*ms620_9905Abc620A;
extern T0*ms597_4999725Abc597A;
extern T0*ms790_1800342110Abc790A;
extern T0*ms95_625881326Abc95A;
extern T0*ms633_214672950Abc633A;
extern T0*ms100_760340765Abc100A;
extern T0*ms620_78629Abc620A;
extern T0*ms620_78629Abc620B;
extern T0*ms112_227Abc597A;
extern T0*ms112_227Abc597B;
extern T0*ms34_640Abc430A;
extern T0*ms34_640Abc377A;
extern T0*ms34_90408Abc466A;
extern T0*ms401_256961544Abc401A;
extern T0*ms394_376Abc394A;
extern T0*ms394_1128496981Abc394A;
extern T0*ms112_802495724Abc112A;
extern T0*ms476_305Abc597S;
extern T0*ms95_772983982Abc95A;
extern T0*ms476_305Abc597R;
extern T0*ms476_305Abc597Q;
extern T0*ms476_305Abc597P;
extern T0*ms476_305Abc597O;
extern T0*ms476_305Abc597N;
extern T0*ms790_8624Abc790A;
extern T0*ms476_305Abc597M;
extern T0*ms476_305Abc597L;
extern T0*ms476_305Abc597K;
extern T0*ms476_305Abc597J;
extern T0*ms470_397949195Abc470A;
extern T0*ms476_305Abc597I;
extern T0*ms476_305Abc597H;
extern T0*ms112_893005Abc112A;
extern T0*ms476_305Abc597G;
extern T0*ms476_305Abc597F;
extern T0*ms476_305Abc597E;
extern T0*ms790_884381655Abc790A;
extern T0*ms476_305Abc597D;
extern T0*ms476_305Abc597C;
extern T0*ms112_2123070311Abc112A;
extern T0*ms476_305Abc597B;
extern T0*ms476_305Abc597A;
extern T0*ms452_1952642401Abc452A;
extern T0*ms112_958964069Abc112A;
extern T0*ms112_3393Abc112A;
extern T0*ms597_3912034Abc597A;
extern T0*ms476_305Abc596A;
extern T0*ms476_305Abc595A;
extern T0*ms621_35966Abc621A;
extern T0*ms419_1878889060Abc419A;
extern T0*ms108_1494914262Abc108A;
extern T0*ms115_870131842Abc115A;
extern T0*ms619_1783951564Abc619A;
extern T0*ms112_1316373138Abc112A;
extern T0*ms620_1514442508Abc620A;
extern T0*ms443_1118729658Abc443A;
extern T0*ms112_215791Abc614A;
extern T0*ms626_471Abc626A;
extern T0*ms623_705408837Abc623A;
extern T0*ms33_2246041Abc614A;
extern T0*ms115_2035830473Abc115A;
extern T0*ms731_560556710Abc731A;
extern T0*ms108_3291Abc625A;
extern T0*ms108_3291Abc625B;
extern T0*ms476_305Abc624A;
extern T0*ms476_305Abc619A;
extern T0*ms108_3291Abc626A;
extern T0*ms112_215791Abc619A;
extern T0*ms108_3291Abc626B;
extern T0*ms476_305Abc623A;
extern T0*ms633_58505493Abc633A;
extern T0*ms620_247Abc620A;
extern T0*ms476_305Abc614T;
extern T0*ms614_1888091524Abc614A;
extern T0*ms476_305Abc614S;
extern T0*ms476_305Abc614R;
extern T0*ms476_305Abc614Q;
extern T0*ms476_305Abc614P;
extern T0*ms476_305Abc622A;
extern T0*ms476_305Abc621F;
extern T0*ms976_1508488213Abc976A;
extern T0*ms614_3175Abc112A;
extern T0*ms476_305Abc621E;
extern T0*ms476_305Abc614O;
extern T0*ms476_305Abc621D;
extern T0*ms614_3175Abc112B;
extern T0*ms476_305Abc614N;
extern T0*ms108_3291Abc628A;
extern T0*ms476_305Abc621C;
extern T0*ms476_305Abc614M;
extern T0*ms108_3291Abc628B;
extern T0*ms476_305Abc621B;
extern T0*ms476_305Abc614L;
extern T0*ms108_3291Abc628C;
extern T0*ms476_305Abc621A;
extern T0*ms476_305Abc614K;
extern T0*ms626_471Abc620A;
extern T0*ms476_305Abc614J;
extern T0*ms476_305Abc620D;
extern T0*ms476_305Abc614I;
extern T0*ms476_305Abc614H;
extern T0*ms476_305Abc620C;
extern T0*ms476_305Abc620B;
extern T0*ms476_305Abc614G;
extern T0*ms476_305Abc620A;
extern T0*ms476_305Abc614F;
extern T0*ms476_305Abc614E;
extern T0*ms476_305Abc564E;
extern T0*ms476_305Abc614D;
extern T0*ms476_305Abc564D;
extern T0*ms476_305Abc614C;
extern T0*ms476_305Abc564C;
extern T0*ms476_305Abc614B;
extern T0*ms476_305Abc564B;
extern T0*ms447_498169402Abc447A;
extern T0*ms476_305Abc609A;
extern T0*ms476_305Abc614A;
extern T0*ms476_305Abc564A;
extern T0*ms274_1091711046Abc274A;
extern T0*ms33_698215697Abc33A;
extern T0*ms112_950675891Abc112A;
extern T0*ms476_305Abc557A;
extern T0*ms790_998144220Abc790A;
extern T0*ms29_1525604536Abc29A;
extern T0*ms790_1242450095Abc790A;
extern T0*ms108_561720547Abc108A;
extern T0*ms432_1920465143Abc432A;
extern T0*ms100_638895319Abc100A;
extern T0*ms112_240Abc112A;
extern T0*ms100_2097430832Abc100A;
extern T0*ms121_349372Abc121A;
extern T0*ms34_16264Abc34A;
extern T0*ms790_687744958Abc790A;
extern T0*ms100_1922692108Abc100A;
extern T0*ms33_280482649Abc33A;
extern T0*ms107_572614135Abc107B;
extern T0*ms112_1618833880Abc112A;
extern T0*ms107_572614135Abc107A;
extern T0*ms100_1307652273Abc100A;
extern T0*ms112_1853640928Abc112A;
extern T0*ms619_118716790Abc619A;
extern T0*ms274_89867121Abc274A;
extern T0*ms565_1710309Abc565A;
extern T0*ms34_479922190Abc34A;
extern T0*ms660_1864907075Abc660A;
extern T0*ms108_703496930Abc108A;
extern T0*ms33_3075Abc33A;
extern T0*ms518_637371887Abc518A;
extern T0*ms336_1646268668Abc336A;
extern T0*ms623_32176Abc623A;
extern T0*ms100_1093012317Abc100A;
extern T0*ms619_35343969Abc619A;
extern T0*ms108_8976Abc108A;
extern T0*ms790_2121801775Abc790A;
extern T0*ms476_305Abc476A;
extern T0*ms95_1468715266Abc95A;
extern T0*ms597_242108838Abc597A;
extern T0*ms790_1973244310Abc790A;
extern T0*ms107_1928938448Abc107A;
extern T0*ms102_126291003Abc102A;
extern T0*ms112_106460275Abc112A;
extern T0*ms732_16139Abc732A;
extern T0*ms107_22271191Abc107B;
extern T0*ms107_22271191Abc107A;
extern T0*ms596_2039095413Abc596A;
extern T0*ms120_287218105Abc120A;
extern T0*ms343_1742784741Abc405A;
extern T0*ms283_87520Abc283A;
extern T0*ms283_87520Abc283B;
extern T0*ms101_175744241Abc101A;
extern T0*ms112_162838175Abc112A;
extern T0*ms112_162838175Abc112B;
extern T0*ms112_162838175Abc112C;
extern T0*ms476_412142950Abc476A;
extern T0*ms101_372047073Abc101A;
extern T0*ms443_540477054Abc443A;
extern T0*ms34_16630Abc34A;
extern T0*ms112_14005Abc112A;
extern T0*ms112_14005Abc112B;
extern T0*ms620_17743865Abc620B;
extern T0*ms343_1742784741Abc343A;
extern T0*ms620_17743865Abc620A;
extern T0*ms110_11253Abc110A;
extern T0*ms476_123Abc476A;
extern T0*ms354_327Abc354A;
extern T0*ms33_572288437Abc33A;
extern T0*ms790_129037214Abc790A;
extern T0*ms614_1348915394Abc614A;
extern T0*ms33_49076823Abc33A;
extern T0*ms597_156962Abc597A;
extern T0*ms350_793028699Abc350A;
extern T0*ms108_3294Abc108A;
extern T0*ms791_666336072Abc791A;
extern T0*ms284_7207Abc795A;
extern T0*ms33_88049Abc33A;
extern T0*ms100_167445550Abc100A;
extern T0*ms112_988839165Abc112A;
extern T0*ms35_16177Abc35A;
extern T0*ms394_376Abc732A;
extern T0*ms112_1339521386Abc112A;
extern T0*ms110_603Abc110A;
extern T0*ms34_600Abc34A;
extern T0*ms100_1961160815Abc100A;
extern T0*ms33_296Abc397A;
extern T0*ms112_215791Abc790A;
extern T0*ms614_4179775Abc614A;
extern T0*ms788_2082029949Abc788A;
extern T0*ms284_1831619428Abc284A;
extern T0*ms614_3760Abc112A;
extern T0*ms33_247239028Abc33A;
extern T0*ms429_178490Abc429A;
extern T0*ms100_1910823336Abc100A;
extern T0*ms790_479982486Abc790B;
extern T0*ms112_2055072316Abc112A;
extern T0*ms790_479982486Abc790A;
extern T0*ms621_534333098Abc621A;
extern T0*ms35_388005040Abc35A;
extern T0*ms609_4570982Abc609A;
extern T0*ms274_1737556726Abc274A;
extern T0*ms108_6687Abc108A;
extern T0*ms108_6687Abc108B;
extern T0*ms35_336Abc35A;
extern T0*ms397_1442631340Abc397A;
extern T0*ms100_1460213717Abc100A;
extern T0*ms101_1452518781Abc101A;
extern T0*ms518_360Abc620B;
extern T0*ms518_360Abc620A;
extern T0*ms101_348041349Abc101A;
extern T0*ms614_1650Abc614A;
extern T0*ms614_1650Abc614B;
extern T0*ms614_1650Abc614C;
extern T0*ms614_1650Abc614D;
extern T0*ms614_1650Abc614E;
extern T0*ms34_479921113Abc34A;
extern T0*ms614_1650Abc621A;
extern T0*ms623_1113554587Abc623A;
extern T0*ms112_77Abc112A;
extern T0*ms115_1998329594Abc115A;
extern T0*ms34_10315778Abc34A;
extern T0*ms33_1604522960Abc33A;
extern T0*ms400_2480394Abc400A;
extern T0*ms112_10940631Abc112A;
extern T0*ms619_689812670Abc619A;
extern T0*ms614_119389596Abc614A;
extern T0*ms284_7207Abc734A;
extern T0*ms100_210812758Abc100A;
extern T0*ms100_45224899Abc100A;
extern T0*ms435_1478Abc435A;
extern T0*ms29_1325879523Abc29A;
extern T0*ms274_1553744164Abc274A;
extern T0*ms100_1409701608Abc100A;
extern T0*ms614_379993Abc614A;
extern T0*ms284_7207Abc681B;
extern T0*ms284_7207Abc681A;
extern T0*ms112_984785217Abc112A;
extern T0*ms465_946986142Abc465A;
extern T0*ms112_280139425Abc112A;
extern T0*ms476_29585Abc476A;
extern T0*ms790_73472312Abc790B;
extern T0*ms790_73472312Abc790A;
extern T0*ms619_444775459Abc619A;
extern T0*ms327_36115402Abc327A;
extern T0*ms633_1092806174Abc633A;
extern T0*ms33_1202672333Abc33A;
extern T0*ms730_786403659Abc730A;
extern T0*ms620_887295984Abc620A;
extern T0*ms620_887295984Abc620B;
extern T0*ms612_11300605Abc612A;
extern T0*ms612_11300605Abc612B;
extern T0*ms518_360Abc518A;
extern T0*ms612_11300605Abc612C;
extern T0*ms34_51843716Abc423A;
extern T0*ms112_586511651Abc112A;
extern T0*ms612_11300605Abc612D;
extern T0*ms33_1607595572Abc33A;
extern T0*ms102_745978733Abc102A;
extern T0*ms597_46733806Abc597A;
extern T0*ms108_1431838787Abc108A;
extern T0*ms790_47598300Abc790A;
extern T0*ms108_1331737400Abc108A;
extern T0*ms33_52347889Abc33A;
extern T0*ms112_42279221Abc112A;
extern T0*ms95_8198176Abc442A;
extern T0*ms619_6271Abc619A;
extern T0*ms95_142319Abc95A;
extern T0*ms565_481249030Abc565A;
extern T0*ms791_692716864Abc791A;
extern T0*ms34_69805Abc34A;
extern T0*ms100_266191698Abc100A;
extern T0*ms620_475042348Abc620A;
extern T0*ms33_1418282620Abc33A;
extern T0*ms490_920757291Abc490A;
extern T0*ms33_201970793Abc33A;
extern T0*ms33_849712179Abc33A;
extern T0*ms112_1994596535Abc112A;
extern T0*ms112_1629400044Abc112A;
extern T0*ms112_900404594Abc112A;
extern T0*ms100_1575461624Abc100A;
extern T0*ms33_1427Abc33A;
extern T0*ms283_87520Abc633A;
extern T0*ms790_1279738389Abc790A;
extern T0*ms112_2395Abc112A;
extern T0*ms112_1772404517Abc620A;
extern T0*ms112_240Abc470A;
extern T0*ms490_920757291Abc509A;
extern T0*ms490_920757291Abc508A;
extern T0*ms112_1772404517Abc612B;
extern T0*ms112_1772404517Abc612A;
extern T0*ms435_1478Abc610A;
extern T0*ms620_8291Abc620A;
extern T0*ms597_1111279623Abc597A;
extern T0*ms620_8291Abc620B;
extern T0*ms790_775406525Abc790A;
extern T0*ms620_8291Abc620C;
extern T0*ms620_8291Abc620D;
extern T0*ms620_77773Abc620A;
extern T0*ms107_89019087Abc107A;
extern T0*ms107_89019087Abc107B;
extern T0*ms112_1099040180Abc112A;
extern T0*ms365_41841490Abc365A;
extern T0*ms33_506823435Abc33A;
extern T0*ms597_1694771411Abc597A;
extern T0*ms597_1694771411Abc597B;
extern T0*ms33_55041151Abc33A;
extern T0*ms476_305Abc112V;
extern T0*ms476_305Abc112U;
extern T0*ms476_305Abc112T;
extern T0*ms397_1769582063Abc397A;
extern T0*ms476_305Abc112S;
extern T0*ms476_305Abc112R;
extern T0*ms476_305Abc112Q;
extern T0*ms476_305Abc112P;
extern T0*ms476_305Abc112O;
extern T0*ms614_3175Abc614A;
extern T0*ms476_305Abc112N;
extern T0*ms614_3175Abc614B;
extern T0*ms476_305Abc112M;
extern T0*ms476_305Abc112L;
extern T0*ms476_305Abc112K;
extern T0*ms476_305Abc112J;
extern T0*ms614_3175Abc620A;
extern T0*ms476_305Abc112I;
extern T0*ms790_32605Abc790A;
extern T0*ms476_305Abc112H;
extern T0*ms476_305Abc112G;
extern T0*ms474_1723490337Abc474A;
extern T0*ms476_305Abc112F;
extern T0*ms100_1421961899Abc100A;
extern T0*ms476_305Abc112E;
extern T0*ms614_3175Abc621A;
extern T0*ms476_305Abc112D;
extern T0*ms476_305Abc112C;
extern T0*ms476_305Abc112B;
extern T0*ms476_305Abc112A;
extern T0*ms597_8475Abc597A;
extern T0*ms452_573004463Abc452A;
extern T0*ms490_920757291Abc374A;
extern T0*ms112_240Abc611A;
extern T0*ms112_240Abc611B;
extern T0*ms112_240Abc611C;
extern T0*ms112_240Abc611D;
extern T0*ms112_240Abc611E;
extern T0*ms112_240Abc612A;
extern T0*ms112_240Abc612B;
extern T0*ms112_240Abc612C;
extern T0*ms274_139303084Abc34A;
extern T0*ms33_296Abc33A;
extern T0*ms112_1206795525Abc112A;
extern T0*ms112_240Abc620A;
extern T0*ms112_240Abc620B;
extern T0*ms112_240Abc620C;
extern T0*ms277_2089269822Abc277A;
extern T0*ms274_1341859296Abc274A;
extern T0*ms112_240Abc620D;
extern T0*ms112_240Abc620E;
extern T0*ms100_1938643327Abc100A;
extern T0*ms112_1680956616Abc112A;
extern T0*ms33_636Abc33A;
extern T0*ms274_1811847991Abc274A;
extern T0*ms593_7317Abc593A;
extern T0*ms419_1857191624Abc419A;
extern T0*ms32_2057783129Abc32A;
extern T0*ms596_340114884Abc596A;
extern T0*ms597_26975293Abc597B;
extern T0*ms597_26975293Abc597A;
extern T0*ms280_90592250Abc280A;
extern T0*ms405_739187517Abc405A;
extern T0*ms108_1115301Abc108A;
extern T0*ms620_25969530Abc620A;
extern T0*ms620_1263916320Abc620A;
extern T0*ms614_7118Abc614A;
extern T0*ms108_9107Abc108A;
extern T0*ms110_2440Abc110A;
extern T0*ms463_1204053060Abc463A;
extern T0*ms619_1087364605Abc619A;
extern T0*ms100_34383990Abc100A;
extern T0*ms284_7207Abc429A;
extern T0*ms100_398318341Abc100A;
extern T0*ms274_816126476Abc274A;
extern T0*ms100_1687580001Abc100A;
extern T0*ms476_192265186Abc476A;
extern T0*ms621_32860Abc621A;
extern T0*ms112_374291339Abc112A;
extern T0*ms112_15589Abc112A;
extern T0*ms452_827998241Abc452A;
extern T0*ms791_1506490209Abc791A;
extern T0*ms620_511943145Abc620A;
extern T0*ms108_9220Abc108A;
extern T0*ms100_375534514Abc100A;
extern T0*ms614_180128Abc614B;
extern T0*ms614_180128Abc614A;
extern T0*ms33_337331Abc364A;
extern T0*ms100_1909918820Abc100A;
extern T0*ms101_92397395Abc101A;
extern T0*ms33_17422Abc33A;
extern T0*ms112_3475Abc112A;
extern T0*ms620_854330615Abc620A;
extern T0*ms621_1416678934Abc621A;
extern T0*ms107_1378502623Abc107A;
extern T0*ms107_1378502623Abc107B;
extern T0*ms34_1532343833Abc34A;
extern T0*ms564_11381817Abc564A;
extern T0*ms112_1136523103Abc112A;
extern T0*ms107_1206593669Abc107A;
extern T0*ms284_4479182Abc112A;
extern T0*ms34_1223234252Abc274A;
extern T0*ms112_2022630Abc112A;
extern T0*ms401_176211197Abc339A;
extern T0*ms112_162838175Abc597A;
extern T0*ms107_1661328107Abc107A;
extern T0*ms108_1615398571Abc108A;
extern T0*ms401_176211197Abc401A;
extern T0*ms284_7207Abc277A;
extern T0*ms620_234855416Abc620A;
extern T0*ms100_1680421289Abc100A;
extern T0*ms100_4750778Abc100A;
extern T0*ms100_239621812Abc100A;
extern T0*ms107_1896793334Abc107A;
extern T0*ms401_176211197Abc405A;
extern T0*ms100_1193216533Abc100A;
extern T0*ms100_376006384Abc100A;
extern T0*ms623_2117730851Abc623A;
extern T0*ms400_889865702Abc400A;
extern T0*ms614_3760Abc614A;
extern T0*ms471_18186Abc471A;
extern T0*ms400_889865702Abc400B;
extern T0*ms400_889865702Abc400C;
extern T0*ms108_99Abc976A;
extern T0*ms107_42846255Abc107A;
extern T0*ms108_99Abc976B;
extern T0*ms597_3212Abc597A;
extern T0*ms564_11381817Abc594A;
extern T0*ms614_3175Abc790A;
extern T0*ms100_1934613587Abc100A;
extern T0*ms419_1604599495Abc419A;
extern T0*ms614_3175Abc791A;
extern T0*ms108_45436Abc108A;
extern T0*ms112_317Abc112A;
extern T0*ms112_272Abc112A;
extern T0*ms614_3175Abc792A;
extern T0*ms401_176211197Abc367A;
extern T0*ms401_176211197Abc367B;
extern T0*ms401_176211197Abc367C;
extern T0*ms110_2833Abc110A;
extern T0*ms633_1677586033Abc633B;
extern T0*ms633_1677586033Abc633A;
extern T0*ms33_2126626Abc33A;
extern T0*ms614_958274895Abc614A;
extern T0*ms33_567319829Abc33A;
extern T0*ms462_898426Abc462A;
extern T0*ms100_1476889913Abc100A;
extern T0*ms476_192265186Abc339A;
extern T0*ms790_1831440704Abc790A;
extern T0*ms112_4692662Abc112A;
extern T0*ms112_16487Abc112A;
extern T0*ms112_16487Abc112B;
extern T0*ms633_557767498Abc633A;
extern T0*ms565_1500847347Abc565A;
extern T0*ms34_89771Abc34A;
extern T0*ms100_727903062Abc100A;
extern T0*ms397_362752532Abc397A;
extern T0*ms401_176211197Abc394A;
extern T0*ms620_10430693Abc620A;
extern T0*ms401_176211197Abc394B;
extern T0*ms452_1604408825Abc452A;
extern T0*ms790_1815688614Abc790A;
extern T0*ms401_176211197Abc397A;
extern T0*ms401_176211197Abc397B;
extern T0*ms34_56255230Abc34A;
extern T0*ms274_957054969Abc274A;
extern T0*ms95_1452647150Abc95A;
extern T0*ms112_471553120Abc112B;
extern T0*ms112_471553120Abc112A;
extern T0*ms100_1938643327Abc343A;
extern T0*ms620_1206509635Abc620A;
extern T0*ms33_48958735Abc33A;
extern T0*ms110_3494Abc110A;
extern T0*ms33_2104Abc33A;
extern T0*ms790_33875Abc790A;
extern T0*ms108_5578901Abc108A;
extern T0*ms117_1797674551Abc117A;
extern T0*ms621_1942608409Abc621A;
extern T0*ms107_1265Abc107A;
extern T0*ms107_1265Abc107B;
extern T0*ms790_915251302Abc790A;
extern T0*ms401_176211197Abc476A;
extern T0*ms115_582925635Abc115A;
extern T0*ms100_873294598Abc100A;
extern T0*ms614_252339Abc614C;
extern T0*ms614_252339Abc614B;
extern T0*ms614_252339Abc614A;
extern T0*ms274_2108992007Abc274A;
extern T0*ms101_1658160521Abc101A;
extern T0*ms612_7224500Abc612A;
extern T0*ms394_897982986Abc394A;
extern T0*ms108_69601Abc108A;
extern T0*ms107_1605895597Abc107A;
extern T0*ms614_206626Abc614A;
extern T0*ms112_16782Abc112A;
extern T0*ms112_16782Abc112B;
extern T0*ms112_16782Abc112C;
extern T0*ms100_1204389280Abc100A;
extern T0*ms121_1635864124Abc121A;
extern T0*ms112_1533928773Abc112A;
extern T0*ms614_1307328870Abc614A;
extern T0*ms452_1790874766Abc452A;
extern T0*ms280_875060418Abc280A;
extern T0*ms339_97896378Abc339A;
extern T0*ms549_142089811Abc549A;
extern T0*ms34_17715Abc399A;
extern T0*ms597_1115628985Abc597A;
extern T0*ms284_7207Abc115A;
extern T0*ms112_1772404517Abc112C;
extern T0*ms112_1772404517Abc112B;
extern T0*ms112_1772404517Abc112A;
extern T0*ms108_39204698Abc108A;
extern T0*ms112_1476Abc112A;
extern T0*ms790_6830Abc790A;
extern T0*ms619_158634393Abc619A;
extern T0*ms112_7869Abc112A;
extern T0*ms107_1459577427Abc107A;
extern T0*ms100_599810839Abc100A;
extern T0*ms33_185934072Abc33A;
extern T0*ms688_511703191Abc688A;
extern T0*ms790_1196941282Abc790A;
extern T0*ms397_988692517Abc397A;
extern T0*ms614_1291760099Abc614A;
extern T0*ms33_440571Abc33A;
extern T0*ms345_767649523Abc345A;
extern T0*ms100_2141291014Abc100A;
extern T0*ms620_6946Abc620A;
extern T0*ms620_6946Abc620B;
extern T0*ms614_1727Abc614A;
extern T0*ms614_1631421108Abc614A;
extern T0*ms429_299Abc429A;
extern T0*ms34_17715Abc357A;
extern T0*ms612_1298Abc612A;
extern T0*ms100_1437345301Abc100A;
extern T0*ms612_1298Abc612B;
extern T0*ms614_847125Abc614A;
extern T0*ms401_176211197Abc660A;
extern T0*ms33_756809447Abc33A;
extern T0*ms471_3196Abc471A;
extern T0*ms100_518055462Abc100A;
extern T0*ms633_831146693Abc633A;
extern T0*ms790_291421585Abc790A;
extern T0*ms97_1861287086Abc97A;
extern T0*ms790_6614Abc790A;
extern T0*ms401_176211197Abc666A;
extern T0*ms119_489233515Abc119A;
extern T0*ms100_49203356Abc430A;
extern T0*ms623_1956008156Abc623A;
extern T0*ms121_1662662954Abc121A;
extern T0*ms35_17498Abc112A;
extern T0*ms790_407207Abc790A;
extern T0*ms34_2233396Abc34A;
extern T0*ms633_1691484858Abc633A;
extern T0*ms620_59375621Abc620A;
extern T0*ms100_280897875Abc100A;
extern T0*ms100_1502870799Abc100A;
extern T0*ms33_61Abc33A;
extern T0*ms100_1223700793Abc100A;
extern T0*ms112_965818786Abc112A;
extern T0*ms33_54688766Abc33A;
extern T0*ms405_182862Abc666A;
extern T0*ms274_216Abc100A;
extern T0*ms112_1312728230Abc112A;
extern T0*ms274_216Abc100B;
extern T0*ms274_216Abc100C;
extern T0*ms274_216Abc100D;
extern T0*ms100_1690004585Abc100A;
extern T0*ms274_216Abc100E;
extern T0*ms108_129391217Abc108A;
extern T0*ms107_1265Abc282A;
extern T0*ms34_3175Abc34A;
extern T0*ms100_2176510Abc100A;
extern T0*ms614_105Abc614A;
extern T0*ms429_620Abc429A;
extern T0*ms619_40031469Abc619A;
extern T0*ms100_142936234Abc100A;
extern T0*ms619_1757386798Abc619A;
extern T0*ms108_298Abc108A;
extern T0*ms620_195246Abc620A;
extern T0*ms33_13194Abc33A;
extern T0*ms274_216Abc107A;
extern T0*ms274_216Abc107B;
extern T0*ms100_1564737054Abc100A;
extern T0*ms33_572288454Abc33A;
extern T0*ms112_2101369329Abc112A;
extern T0*ms397_112006296Abc397A;
extern T0*ms107_98784712Abc107A;
extern T0*ms621_2670Abc621A;
extern T0*ms100_1254996328Abc100A;
extern T0*ms597_20240284Abc597A;
extern T0*ms100_2009918711Abc100A;
extern T0*ms620_340514Abc620A;
extern T0*ms100_1228072329Abc100A;
extern T0*ms112_8880Abc112A;
extern T0*ms329_673829558Abc329A;
extern T0*ms100_241Abc100A;
extern T0*ms620_34510Abc620A;
extern T0*ms614_1832703325Abc614A;
extern T0*ms620_1530Abc620A;
extern T0*ms112_697705640Abc112A;
extern T0*ms112_697705640Abc112B;
extern T0*ms112_697705640Abc112C;
extern T0*ms790_1040644265Abc790A;
extern T0*ms100_241Abc107A;
extern T0*ms469_10559665Abc976B;
extern T0*ms469_10559665Abc976A;
extern T0*ms112_12201Abc112A;
extern T0*ms597_558682149Abc597A;
extern T0*ms452_69279758Abc452A;
extern T0*ms33_80109Abc33A;
extern T0*ms790_1341105285Abc790A;
extern T0*ms112_2039472678Abc112A;
extern T0*ms32_331Abc429A;
extern T0*ms612_36126743Abc612A;
extern T0*ms107_1865554673Abc107A;
extern T0*ms108_7878Abc108A;
extern T0*ms100_727272566Abc100A;
extern T0*ms100_897447412Abc100A;
extern T0*ms100_897447412Abc100B;
extern T0*ms530_927498134Abc530A;
extern T0*ms112_545118879Abc112A;
extern T0*ms33_349117293Abc33A;
extern T0*ms100_1550836304Abc100A;
extern T0*ms112_1040899642Abc112A;
extern T0*ms284_60894Abc284A;
extern T0*ms394_138555764Abc394A;
extern T0*ms100_147793411Abc100A;
extern T0*ms112_1582839830Abc112A;
extern T0*ms112_3475Abc597A;
extern T0*ms112_3475Abc597B;
extern T0*ms100_2117988535Abc100A;
extern T0*ms112_3475Abc597C;
extern T0*ms597_247Abc597A;
extern T0*ms620_31455Abc620A;
extern T0*ms397_2089449608Abc397A;
extern T0*ms112_1307483215Abc112A;
extern T0*ms33_10377643Abc33A;
extern T0*ms112_533301931Abc112A;
extern T0*ms30_8771Abc30A;
extern T0*ms33_1604515261Abc33A;
extern T0*ms476_14429929Abc476B;
extern T0*ms476_14429929Abc476A;
extern T0*ms476_112048371Abc476A;
extern T0*ms33_1856946950Abc33A;
extern T0*ms100_201048978Abc100A;
extern T0*ms34_77350Abc376A;
extern T0*ms976_1994165009Abc976A;
extern T0*ms432_171706123Abc432A;
extern T0*ms611_258Abc621A;
extern T0*ms662_1760457965Abc662A;
extern T0*ms792_576790349Abc792A;
extern T0*ms400_905382Abc400A;
extern T0*ms400_905382Abc400B;
extern T0*ms112_277Bbc112A;
extern T0*ms400_905382Abc400C;
extern T0*ms400_905382Abc400D;
extern T0*ms400_905382Abc400E;
extern T0*ms112_3430Abc112A;
extern T0*ms400_905382Abc400F;
extern T0*ms112_3430Abc112B;
extern T0*ms400_905382Abc400G;
extern T0*ms400_905382Abc400H;
extern T0*ms100_439136Abc100A;
extern T0*ms611_258Abc611B;
extern T0*ms611_258Abc611A;
extern T0*ms33_1644425991Abc33A;
extern T0*ms34_9790205Abc644A;
extern T0*ms112_341357508Abc112A;
extern T0*ms108_0Abc100A;
extern T0*ms100_1296817101Abc100A;
extern T0*ms108_1775Abc108A;
extern T0*ms108_0Abc102A;
extern T0*ms621_177459204Abc621B;
extern T0*ms621_177459204Abc621A;
extern T0*ms33_169371474Abc33A;
extern T0*ms452_1606367935Abc452A;
extern T0*ms274_216Abc274A;
extern T0*ms399_435568604Abc399A;
extern T0*ms100_1421116705Abc100A;
extern T0*ms108_0Abc112A;
extern T0*ms108_0Abc107A;
extern T0*ms108_0Abc112B;
extern T0*ms112_114Abc112A;
extern T0*ms108_0Abc112C;
extern T0*ms112_1065942137Abc112A;
extern T0*ms108_0Abc108A;
extern T0*ms108_0Abc108B;
extern T0*ms471_413651Abc471A;
extern T0*ms108_0Abc108C;
extern T0*ms597_5720Abc597A;
extern T0*ms108_0Abc108D;
extern T0*ms108_0Abc108E;
extern T0*ms108_0Abc108F;
extern T0*ms108_0Abc108G;
extern T0*ms108_0Abc108H;
extern T0*ms33_201970776Abc33A;
extern T0*ms108_0Abc108I;
extern T0*ms108_0Abc108J;
extern T0*ms108_0Abc108K;
extern T0*ms108_0Abc108L;
extern T0*ms108_0Abc108M;
extern T0*ms620_265Abc620B;
extern T0*ms108_0Abc108N;
extern T0*ms620_265Abc620A;
extern T0*ms108_0Abc108O;
extern T0*ms108_0Abc108P;
extern T0*ms108_0Abc108Q;
extern T0*ms108_0Abc108R;
extern T0*ms108_0Abc108S;
extern T0*ms277_1281353746Abc277A;
extern T0*ms660_501491947Abc660A;
extern T0*ms33_1549703Abc33A;
extern T0*ms405_182862Abc367A;
extern T0*ms100_1587734026Abc100A;
extern T0*ms112_1460025642Abc112A;
extern T0*ms100_46597328Abc100A;
extern T0*ms108_146157Abc108A;
extern T0*ms612_1367878466Abc612A;
extern T0*ms633_1912840703Abc633A;
extern T0*ms34_10703002Abc34A;
extern T0*ms284_878860Abc284A;
extern T0*ms112_514187710Abc112A;
extern T0*ms112_308542101Abc112A;
extern T0*ms100_49203356Abc100A;
extern T0*ms612_1639500234Abc612A;
extern T0*ms112_1082664800Abc112A;
extern T0*ms405_182862Abc405A;
extern T0*ms112_192841706Abc112A;
extern T0*ms112_16782Abc619A;
extern T0*ms365_1360462097Abc365A;
extern T0*ms112_251Abc112A;
extern T0*ms108_8884Abc108A;
extern T0*ms112_251Abc112B;
extern T0*ms108_8884Abc108B;
extern T0*ms112_1308400309Abc112A;
extern T0*ms112_251Abc112C;
extern T0*ms368_1809213019Abc368A;
extern T0*ms614_2353775Abc614A;
extern T0*ms594_565063403Abc594A;
extern T0*ms594_565063403Abc595A;
extern T0*ms112_7869Abc612A;
extern T0*ms112_7869Abc612B;
extern T0*ms633_2025498932Abc633A;
extern T0*ms284_1750778Abc284A;
extern T0*ms33_33120277Abc33A;
extern T0*ms731_2114672999Abc731A;
extern T0*ms33_9712276Abc33A;
extern T0*ms620_32456Abc620A;
extern T0*ms518_1359629264Abc518A;
extern T0*ms112_4049151Abc112A;
extern T0*ms112_7869Abc620A;
extern T0*ms112_7869Abc620B;
extern T0*ms112_7869Abc620C;
extern T0*ms112_7869Abc620D;
extern T0*ms394_1801Abc394A;
extern T0*ms112_7869Abc620E;
extern T0*ms112_7869Abc620F;
extern T0*ms100_1208507031Abc100A;
extern T0*ms112_7869Abc620G;
extern T0*ms108_1515266530Abc108A;
extern T0*ms108_1515266530Abc108B;
extern T0*ms107_961022639Abc107A;
extern T0*ms620_1671063525Abc620A;
extern T0*ms620_1671063525Abc620B;
extern T0*ms112_7869Abc619A;
extern T0*ms108_3094Abc108A;
extern T0*ms108_91157Abc108A;
extern T0*ms112_16782Abc597A;
extern T0*ms620_134878499Abc620A;
extern T0*ms112_16782Abc597B;
extern T0*ms112_16782Abc597C;
extern T0*ms476_1832Abc476A;
extern T0*ms84_522142839Abc84B;
extern T0*ms112_7918258Abc112A;
extern T0*ms84_522142839Abc84A;
extern T0*ms33_1622700141Abc33A;
extern T0*ms112_490869799Abc112A;
extern T0*ms458_1809998749Abc458A;
extern T0*ms620_1679636650Abc620B;
extern T0*ms620_1679636650Abc620A;
extern T0*ms597_1111954737Abc597A;
extern T0*ms281_15370Abc281A;
extern T0*ms34_78591Abc274A;
extern T0*ms33_50246319Abc33A;
extern T0*ms34_820292Abc34A;
extern T0*ms115_740900172Abc115A;
extern T0*ms620_245384155Abc620A;
extern T0*ms34_401994Abc34A;
extern T0*ms33_1223936132Abc33A;
extern T0*ms100_4235Abc100A;
extern T0*ms115_1041926341Abc115A;
extern T0*ms115_107193812Abc115A;
extern T0*ms34_392625Abc34A;
extern T0*ms621_91Abc621A;
extern T0*ms274_1302880443Abc274A;
extern T0*ms112_16487Abc788A;
extern T0*ms112_16487Abc788B;
extern T0*ms112_16487Abc788C;
extern T0*ms112_1661632742Abc112A;
extern T0*ms474_68732Abc474B;
extern T0*ms474_68732Abc474A;
extern T0*ms100_791727511Abc100A;
extern T0*ms108_1721407046Abc108A;
extern T0*ms976_2072196164Abc976A;
extern T0*ms100_34Abc100A;
extern T0*ms609_185443Abc609A;
extern T0*ms609_185438Abc609A;
extern T0*ms34_1747646688Abc34A;
extern T0*ms108_143937264Abc108A;
extern T0*ms614_1445Abc614A;
extern T0*ms95_1914699291Abc95A;
extern T0*ms108_0Abc274A;
extern T0*ms108_0Abc274B;
extern T0*ms619_1374304640Abc619A;
extern T0*ms100_120546715Abc100A;
extern T0*ms101_1226144723Abc101A;
extern T0*ms100_34Abc107A;
extern T0*ms108_0Abc282A;
extern T0*ms619_49806180Abc619A;
extern T0*ms108_0Abc282B;
extern T0*ms100_1984637890Abc100A;
extern T0*ms274_1955866577Abc274A;
extern T0*ms112_451157Abc112A;
extern T0*ms790_784300160Abc790A;
extern T0*ms112_451157Abc112B;
extern T0*ms112_451157Abc112C;
extern T0*ms660_191115496Abc660A;
extern T0*ms89_685Abc89A;
extern T0*ms112_1917882Abc112A;
extern T0*ms110_17794Abc110A;
extern T0*ms597_2187619Abc612A;
extern T0*ms274_216Abc559A;
extern T0*ms33_869539012Abc33A;
extern T0*ms790_7296Abc790A;
extern T0*ms34_3415Abc597A;
extern T0*ms274_1598804806Abc274A;
extern T0*ms112_40Abc112A;
extern T0*ms367_1744510279Abc367A;
extern T0*ms112_40Abc112B;
extern T0*ms620_39831Abc620A;
extern T0*ms732_858562Abc732A;
extern T0*ms619_6550Abc619A;
extern T0*ms33_16639Abc33A;
extern T0*ms620_45355Abc620A;
extern T0*ms614_366Abc614A;
extern T0*ms378_128333478Abc378A;
extern T0*ms614_366Abc612B;
extern T0*ms614_366Abc612A;
extern T0*ms619_6550Abc614A;
extern T0*ms108_0Abc368A;
extern T0*ms633_1655357614Abc633A;
extern T0*ms790_486352305Abc790A;
extern T0*ms101_696478167Abc101A;
extern T0*ms112_93Abc112A;
extern T0*ms34_436911Abc34A;
extern T0*ms112_438660461Abc112A;
extern T0*ms112_1173628471Abc112A;
extern T0*ms660_22122412Abc660A;
extern T0*ms107_170061979Abc107A;
extern T0*ms108_1067454155Abc108A;
extern T0*ms597_2187619Abc597A;
extern T0*ms469_10559665Abc469A;
extern T0*ms108_0Abc429A;
extern T0*ms112_1607940692Abc112A;
extern T0*ms108_0Abc429B;
extern T0*ms112_934Abc112A;
extern T0*ms108_0Abc429C;
extern T0*ms790_604Abc790B;
extern T0*ms790_604Abc790A;
extern T0*ms363_1485085274Abc363A;
extern T0*ms339_416499Abc339A;
extern T0*ms518_840796792Abc518A;
extern T0*ms339_416499Abc339B;
extern T0*ms112_475921520Abc112A;
extern T0*ms339_416499Abc339C;
extern T0*ms790_27909038Abc790A;
extern T0*ms452_375578482Abc452A;
extern T0*ms117_899910547Abc117A;
extern T0*ms100_1631593164Abc100A;
extern T0*ms95_620670284Abc95A;
extern T0*ms400_2480479Abc400A;
extern T0*ms110_301485Abc110A;
extern T0*ms621_529853775Abc621A;
extern T0*ms100_970900228Abc100A;
extern T0*ms790_1497878015Abc790A;
extern T0*ms790_931143030Abc790A;
extern T0*ms112_1500500537Abc112A;
extern T0*ms790_1843146228Abc790A;
extern T0*ms112_1901889757Abc112A;
extern T0*ms108_683870135Abc108A;
extern T0*ms100_611Abc34A;
extern T0*ms112_209121Abc112A;
extern T0*ms100_1694969179Abc100A;
extern T0*ms112_1656195746Abc112A;
extern T0*ms34_3415Abc492A;
extern T0*ms280_1534075159Abc688A;
extern T0*ms274_1689176777Abc274A;
extern T0*ms112_56845112Abc112A;
extern T0*ms610_7454Abc610A;
extern T0*ms612_40430500Abc612A;
extern T0*ms33_1947419Abc33A;
extern T0*ms101_744085684Abc101A;
extern T0*ms597_1269Abc597A;
extern T0*ms112_375072661Abc112A;
extern T0*ms597_208313786Abc597A;
extern T0*ms479_1965077754Abc479A;
extern T0*ms33_41849945Abc33A;
extern T0*ms108_327Abc108A;
extern T0*ms33_424430Abc33A;
extern T0*ms474_1610077639Abc474A;
extern T0*ms108_0Abc533A;
extern T0*ms108_0Abc533B;
extern T0*ms33_1247Abc33A;
extern T0*ms633_1238684603Abc633A;
extern T0*ms620_2017590Abc620A;
extern T0*ms108_0Abc534A;
extern T0*ms33_548214405Abc33A;
extern T0*ms597_2142146116Abc597A;
extern T0*ms112_2382Abc112A;
extern T0*ms274_527202963Abc274A;
extern T0*ms100_34Abc273A;
extern T0*ms34_402346Abc34A;
extern T0*ms100_34Abc273B;
extern T0*ms95_672350142Abc95A;
extern T0*ms112_3430Abc565A;
extern T0*ms112_1728206941Abc112A;
extern T0*ms33_80854Abc33A;
extern T0*ms100_488830629Abc100A;
extern T0*ms100_734506354Abc100A;
extern T0*ms108_0Abc549A;
extern T0*ms108_0Abc549B;
extern T0*ms419_1529695024Abc419A;
extern T0*ms100_1078639380Abc100A;
extern T0*ms788_1414Abc788A;
extern T0*ms112_1281004126Abc112A;
extern T0*ms108_0Abc612A;
extern T0*ms112_1816632501Abc112A;
extern T0*ms790_212314278Abc790A;
extern T0*ms33_87541Abc33A;
extern T0*ms112_3040Abc112A;
extern T0*ms112_1203674198Abc112A;
extern T0*ms620_10089690Abc620A;
extern T0*ms614_693716559Abc614A;
extern T0*ms33_1339128Abc33A;
extern T0*ms732_78209Abc732A;
extern T0*ms419_1333985363Abc419A;
extern T0*ms394_1250079569Abc394A;
extern T0*ms274_216Abc795A;
extern T0*ms274_216Abc795B;
extern T0*ms612_1446625Abc612A;
extern T0*ms30_941571923Abc30A;
extern T0*ms112_6330Abc112A;
extern T0*ms112_3430Abc597A;
extern T0*ms112_3430Abc597B;
extern T0*ms619_1637595774Abc619A;
extern T0*ms100_194Abc112A;
extern T0*ms108_0Abc633A;
extern T0*ms108_262628264Abc108A;
extern T0*ms107_295542551Abc107A;
extern T0*ms112_251Abc611A;
extern T0*ms441_1110386385Abc441A;
extern T0*ms112_251Abc611B;
extern T0*ms29_85614Abc286A;
extern T0*ms33_47Abc33A;
extern T0*ms33_16686Abc33A;
extern T0*ms33_185934055Abc33A;
extern T0*ms461_1554555636Abc461A;
extern T0*ms108_851047233Abc108A;
extern T0*ms112_251Abc620A;
extern T0*ms112_251Abc620B;
extern T0*ms100_1135641353Abc100A;
extern T0*ms112_251Abc620C;
extern T0*ms35_594Abc35A;
extern T0*ms33_84881Abc33A;
extern T0*ms107_385188989Abc107B;
extern T0*ms107_385188989Abc107A;
extern T0*ms112_251Abc619A;
extern T0*ms112_251Abc619B;
extern T0*ms33_279523519Abc33A;
extern T0*ms112_251Abc619C;
extern T0*ms100_1545228536Abc100A;
extern T0*ms273_1968202785Abc273A;
extern T0*ms100_2082787810Abc100A;
extern T0*ms100_2082787810Abc100B;
extern T0*ms597_2301Abc597A;
extern T0*ms112_1361175839Abc112A;
extern T0*ms35_89216Abc35A;
extern T0*ms621_1431664982Abc621A;
extern T0*ms597_26975282Abc597A;
extern T0*ms34_10208843Abc34A;
extern T0*ms112_1364588829Abc112A;
extern T0*ms623_124454155Abc623A;
extern T0*ms100_445504446Abc100A;
extern T0*ms104_589Abc104A;
extern T0*ms443_1888871872Abc443A;
extern T0*ms108_0Abc680A;
extern T0*ms790_1396798042Abc790A;
extern T0*ms108_0Abc680B;
extern T0*ms108_0Abc731A;
extern T0*ms557_146251545Abc557A;
extern T0*ms452_1573210512Abc452A;
extern T0*ms112_49152444Abc619A;
extern T0*ms108_9073Abc108A;
extern T0*ms108_9073Abc108B;
extern T0*ms274_376816512Abc274A;
extern T0*ms108_9073Abc108C;
extern T0*ms108_9073Abc108D;
extern T0*ms34_251916328Abc34A;
extern T0*ms108_0Abc684A;
extern T0*ms108_0Abc734A;
extern T0*ms108_0Abc734B;
extern T0*ms112_251Abc597A;
extern T0*ms100_1207921682Abc100A;
extern T0*ms33_180965430Abc33A;
extern T0*ms108_0Abc686A;
extern T0*ms108_0Abc686B;
extern T0*ms108_0Abc686C;
extern T0*ms112_308580Abc112A;
extern T0*ms112_2883Abc112A;
extern T0*ms108_0Abc747A;
extern T0*ms112_3457Abc112A;
extern T0*ms100_104977558Abc100A;
extern T0*ms620_234933541Abc620A;
extern T0*ms363_7238542Abc363A;
extern T0*ms626_476Abc626A;
extern T0*ms597_1032053803Abc597A;
extern T0*ms101_1038536453Abc101A;
extern T0*ms644_1166590709Abc644A;
extern T0*ms108_0Abc772A;
extern T0*ms100_2099054905Abc100A;
extern T0*ms790_526175446Abc790A;
extern T0*ms597_1484470448Abc597A;
extern T0*ms401_29662Abc401A;
extern T0*ms274_880804011Abc274A;
extern T0*ms549_193194Abc549A;
extern T0*ms33_76691Abc33A;
extern T0*ms112_523400916Abc112A;
extern T0*ms100_54634669Abc100A;
extern T0*ms597_505232755Abc597A;
extern T0*ms108_759424351Abc108A;
extern T0*ms612_920950Abc612A;
extern T0*ms33_840111968Abc33A;
extern T0*ms597_988243818Abc597B;
extern T0*ms597_988243818Abc597A;
extern T0*ms112_862271166Abc112A;
extern T0*ms33_7095298Abc33A;
extern T0*ms112_114Abc790A;
extern T0*ms597_1185483839Abc597A;
extern T0*ms441_1773450779Abc441A;
extern T0*ms100_768172015Abc100A;
extern T0*ms112_1839365502Abc112A;
extern T0*ms100_603076667Abc100A;
extern T0*ms33_1419919903Abc33A;
extern T0*ms614_380343Abc614A;
extern T0*ms790_1396Abc790A;
extern T0*ms108_0Abc795A;
extern T0*ms108_0Abc795B;
extern T0*ms108_0Abc795C;
extern T0*ms108_0Abc795D;
extern T0*ms33_1286698901Abc33A;
extern T0*ms115_1661847054Abc115A;
extern T0*ms108_0Abc795E;
extern T0*ms626_294Abc626A;
extern T0*ms112_249Abc112A;
extern T0*ms108_0Abc797A;
extern T0*ms120_2947Abc120A;
extern T0*ms620_32435Abc620A;
extern T0*ms620_32435Abc620B;
extern T0*ms112_40Abc612A;
extern T0*ms112_451157Abc619A;
extern T0*ms790_1772045883Abc790A;
extern T0*ms100_2028592127Abc100A;
extern T0*ms108_1192507148Abc108A;
extern T0*ms33_240810599Abc732A;
extern T0*ms730_2068836731Abc730A;
extern T0*ms790_97510Abc790A;
extern T0*ms33_51915068Abc33A;
extern T0*ms33_80416Abc33A;
extern T0*ms100_1154110220Abc100A;
extern T0*ms631_496139469Abc631A;
extern T0*ms101_1538234998Abc101A;
extern T0*ms107_388205767Abc107A;
extern T0*ms121_141444Abc121A;
extern T0*ms345_786054293Abc345A;
extern T0*ms280_1534075159Abc280B;
extern T0*ms33_124Abc33A;
extern T0*ms280_1534075159Abc280A;
extern T0*ms33_1192911276Abc33A;
extern T0*ms100_1066804080Abc100A;
extern T0*ms34_54418471Abc34A;
extern T0*ms597_283801480Abc597A;
extern T0*ms112_451157Abc597A;
extern T0*ms790_618166083Abc790A;
extern T0*ms33_94Abc33A;
extern T0*ms33_197002151Abc33A;
extern T0*ms35_267875778Abc35A;
extern T0*ms646_726156456Abc646A;
extern T0*ms401_1127350535Abc401A;
extern T0*ms112_33475Abc112A;
extern T0*ms33_1209184326Abc33A;
extern T0*ms32_329Abc685A;
extern T0*ms32_329Abc685B;
extern T0*ms32_329Abc685C;
extern T0*ms34_114085235Abc34A;
extern T0*ms33_1300046706Abc33A;
extern T0*ms790_1990989Abc790A;
extern T0*ms33_1979951Abc33A;
extern T0*ms619_942808765Abc619A;
extern T0*ms614_685204250Abc614A;
extern T0*ms394_7867907Abc394A;
extern T0*ms339_83290Abc339A;
extern T0*ms405_343527626Abc405A;
extern T0*ms100_1062283098Abc100A;
extern T0*ms100_18036Abc100A;
extern T0*ms614_504830035Abc614A;
extern T0*ms593_8545Abc593A;
extern T0*ms479_7232Abc641A;
extern T0*ms34_88336Abc34A;
extern T0*ms976_1439959996Abc976A;
extern T0*ms619_1246644455Abc619A;
extern T0*ms102_618869258Abc102A;
extern T0*ms788_306811962Abc788A;
extern T0*ms33_2504Abc33A;
extern T0*ms113_1753572602Abc113A;
extern T0*ms33_591414963Abc33A;
extern T0*ms482_180503525Abc482A;
extern T0*ms108_0Abc976A;
extern T0*ms108_0Abc976B;
extern T0*ms108_0Abc976C;
extern T0*ms108_0Abc976D;
extern T0*ms108_0Abc976E;
extern T0*ms95_251Abc730A;
extern T0*ms623_160937Abc623A;
extern T0*ms107_109671582Abc107A;
extern T0*ms277_1136866084Abc277A;
extern T0*ms376_3147Abc376A;
extern T0*ms112_2382Abc557A;
extern T0*ms95_251Abc672A;
extern T0*ms112_1790869799Abc112A;
extern T0*ms620_884813300Abc620A;
extern T0*ms450_22861847Abc450A;
extern T0*ms619_1215177661Abc619A;
extern T0*ms95_251Abc663A;
extern T0*ms620_1174230416Abc620F;
extern T0*ms620_1174230416Abc620E;
extern T0*ms620_1174230416Abc620D;
extern T0*ms620_1174230416Abc620C;
extern T0*ms660_167300030Abc660A;
extern T0*ms620_1174230416Abc620B;
extern T0*ms620_1174230416Abc620A;
extern T0*ms549_1096544670Abc549A;
extern T0*ms621_84085Abc621B;
extern T0*ms621_84085Abc621A;
extern T0*ms112_2382Abc619A;
extern T0*ms100_1522646803Abc100A;
extern T0*ms100_755120513Abc100A;
extern T0*ms108_932412928Abc108A;
extern T0*ms112_2382Abc626A;
extern T0*ms112_246893097Abc112A;
extern T0*ms112_2382Abc626B;
extern T0*ms112_2382Abc626C;
extern T0*ms112_2382Abc626D;
extern T0*ms112_1164920984Abc112A;
extern T0*ms112_2382Abc626E;
extern T0*ms112_2382Abc626F;
extern T0*ms620_4680700Abc620A;
extern T0*ms112_2382Abc626G;
extern T0*ms112_2382Abc626H;
extern T0*ms401_29662Abc112A;
extern T0*ms363_1094507536Abc363A;
extern T0*ms33_90544Abc33A;
extern T0*ms368_44462444Abc368A;
extern T0*ms450_114137597Abc450A;
extern T0*ms33_1115958189Abc33A;
extern T0*ms479_7232Abc479A;
extern T0*ms33_744845610Abc33A;
extern T0*ms112_17480Abc112A;
extern T0*ms112_17480Abc112B;
extern T0*ms106_23085765Abc106A;
extern T0*ms33_1937220099Abc33A;
extern T0*ms33_243411981Abc33A;
extern T0*ms100_23410Abc100A;
extern T0*ms790_5161461Abc790A;
extern T0*ms112_2382Abc597A;
extern T0*ms33_586229245Abc33A;
extern T0*ms112_1404852998Abc112A;
extern T0*ms371_1712194128Abc371A;
extern T0*ms274_416541Abc274A;
extern T0*ms620_525503499Abc620A;
extern T0*ms112_437715Abc112A;
extern T0*ms612_1285Abc612A;
extern T0*ms112_46350Abc112A;
extern T0*ms101_332623945Abc101A;
extern T0*ms100_1453066751Abc100A;
extern T0*ms612_230Abc612A;
extern T0*ms479_7232Abc509A;
extern T0*ms612_1285Abc621A;
extern T0*ms479_7232Abc508A;
extern T0*ms112_6330Abc619A;
extern T0*ms95_251Abc609A;
extern T0*ms119_557Abc119A;
extern T0*ms34_436196Abc34A;
extern T0*ms107_1379717706Abc107A;
extern T0*ms33_1095772782Abc33A;
extern T0*ms620_204519611Abc620A;
extern T0*ms452_221949868Abc452A;
extern T0*ms597_126319331Abc597A;
extern T0*ms121_1723571071Abc121A;
extern T0*ms100_1917483795Abc100A;
extern T0*ms633_1679625106Abc633A;
extern T0*ms34_1730514379Abc34A;
extern T0*ms112_1988895671Abc112B;
extern T0*ms112_1988895671Abc112A;
extern T0*ms100_445001496Abc100C;
extern T0*ms100_445001496Abc100B;
extern T0*ms100_445001496Abc100A;
extern T0*ms619_1549077634Abc619A;
extern T0*ms614_1084495643Abc614A;
extern T0*ms112_4631170Abc112A;
extern T0*ms620_476433922Abc620A;
extern T0*ms108_2077353217Abc108A;
extern T0*ms479_7232Abc374A;
extern T0*ms108_340Abc108A;
extern T0*ms368_732402575Abc368A;
extern T0*ms112_2189840Abc112A;
extern T0*ms32_329Abc976A;
extern T0*ms32_334Abc976A;
extern T0*ms112_444175272Abc112A;
extern T0*ms466_779913846Abc466A;
extern T0*ms32_329Abc976B;
extern T0*ms32_334Abc976B;
extern T0*ms112_701821825Abc112A;
extern T0*ms106_97543221Abc106A;
extern T0*ms34_2063276Abc34A;
extern T0*ms976_1942892277Abc976A;
extern T0*ms112_49152444Abc112A;
extern T0*ms277_1641573945Abc277A;
extern T0*ms621_2122389958Abc621A;
extern T0*ms100_1991246741Abc100A;
extern T0*ms112_1435285930Abc112A;
extern T0*ms33_1680926299Abc33A;
extern T0*ms614_602573626Abc614A;
extern T0*ms108_1335Abc108A;
extern T0*ms33_279656751Abc33A;
extern T0*ms112_1982839385Abc112A;
extern T0*ms110_15721Abc110A;
extern T0*ms274_17696Abc112A;
extern T0*ms34_3175Abc477A;
extern T0*ms101_894954671Abc101A;
extern T0*ms363_1626899946Abc731A;
extern T0*ms609_4571007Abc609A;
extern T0*ms30_142550Abc30A;
extern T0*ms112_1946737844Abc112A;
extern T0*ms368_181352Abc368A;
extern T0*ms112_27063164Abc112A;
extern T0*ms34_3175Abc466A;
extern T0*ms394_1816745449Abc394A;
extern T0*ms614_312808564Abc614A;
extern T0*ms108_1438Abc108A;
extern T0*ms367_389128515Abc367A;
extern T0*ms34_265093627Abc34A;
extern T0*ms110_51699930Abc110A;
extern T0*ms464_218994080Abc464A;
extern T0*ms476_84293096Abc476A;
extern T0*ms469_1331532446Abc976B;
extern T0*ms469_1089314041Abc469A;
extern T0*ms469_1331532446Abc976A;
extern T0*ms34_3175Abc399A;
extern T0*ms121_210141519Abc121A;
extern T0*ms632_1664721281Abc632A;
extern T0*ms565_3920780Abc565A;
extern T0*ms33_240810599Abc33A;
extern T0*ms620_15020Abc620A;
extern T0*ms100_431394186Abc100A;
extern T0*ms597_68284Abc597A;
extern T0*ms620_15020Abc620B;
extern T0*ms100_431394186Abc100B;
extern T0*ms620_15020Abc620C;
extern T0*ms620_15020Abc620D;
extern T0*ms612_36122993Abc612A;
extern T0*ms620_15020Abc620E;
extern T0*ms418_306215109Abc418A;
extern T0*ms620_15020Abc620F;
extern T0*ms620_15020Abc620G;
extern T0*ms612_2187585Abc612A;
extern T0*ms776_1932458562Abc776A;
extern T0*ms565_1290234494Abc565A;
extern T0*ms108_120239233Abc108A;
extern T0*ms112_2038260346Abc112A;
extern T0*ms100_2047201942Abc100A;
extern T0*ms101_140920753Abc101A;
extern T0*ms95_251Abc405A;
extern T0*ms34_3175Abc377A;
extern T0*ms33_1206543966Abc33A;
extern T0*ms34_3175Abc430A;
extern T0*ms107_1066764899Abc107A;
extern T0*ms277_169314461Abc277A;
extern T0*ms619_41125176Abc619A;
extern T0*ms95_251Abc400A;
extern T0*ms34_3175Abc423A;
extern T0*ms112_1572014572Abc112A;
extern T0*ms790_1007239Abc790A;
extern T0*ms34_9790205Abc34A;
extern T0*ms34_3175Abc363A;
extern T0*ms282_838840612Abc282A;
extern T0*ms112_881278717Abc112A;
extern T0*ms112_10666295Abc112A;
extern T0*ms112_1743948446Abc112A;
extern T0*ms100_1732402521Abc100A;
extern T0*ms788_81437Abc788A;
extern T0*ms108_10937305Abc108A;
extern T0*ms107_1162901343Abc107A;
extern T0*ms33_3421Abc33A;
extern T0*ms100_1922694958Abc100A;
extern T0*ms274_208962844Abc274A;
extern T0*ms34_2185421Abc662A;
extern T0*ms368_1317154036Abc368A;
extern T0*ms112_993675817Abc112A;
extern T0*ms95_1121Abc95A;
extern T0*ms33_170256464Abc33A;
extern T0*ms100_1524784203Abc100A;
extern T0*ms559_13424808Abc559A;
extern T0*ms401_1907958363Abc401A;
extern T0*ms107_292482Abc107A;
extern T0*ms121_44975894Abc683A;
extern T0*ms33_43Abc33A;
extern T0*ms33_38Abc33A;
extern T0*ms107_891552598Abc107A;
extern T0*ms274_17696Abc274A;
extern T0*ms100_1275558331Abc100A;
extern T0*ms33_1235Abc33A;
extern T0*ms277_38905513Abc277A;
extern T0*ms112_355630820Abc112A;
extern T0*ms100_1109293176Abc100A;
extern T0*ms34_56927287Abc34A;
extern T0*ms620_8885Abc620A;
extern T0*ms112_204Abc112A;
extern T0*ms660_143852403Abc660A;
extern T0*ms614_550508910Abc614A;
extern T0*ms112_889346373Abc112A;
extern T0*ms100_631447998Abc100A;
extern T0*ms100_2992013Abc100A;
extern T0*ms33_240810604Abc732A;
extern T0*ms620_2571Abc620A;
extern T0*ms112_389672Abc112A;
extern T0*ms623_5313530Abc623A;
extern T0*ms624_2187411Abc624A;
extern T0*ms112_6330Abc976A;
extern T0*ms776_789213750Abc776A;
extern T0*ms633_81368369Abc633A;
extern T0*ms469_1917908900Abc469A;
extern T0*ms110_1772235Abc110A;
extern T0*ms33_88048Abc33A;
extern T0*ms112_257Abc112A;
extern T0*ms107_262Abc107A;
extern T0*ms35_10714216Abc35A;
extern T0*ms112_257Abc112B;
extern T0*ms112_257Abc112C;
extern T0*ms282_360205908Abc282B;
extern T0*ms282_360205908Abc282A;
extern T0*ms565_100561530Abc565A;
extern T0*ms596_205124Abc596A;
extern T0*ms620_6411Abc620A;
extern T0*ms110_39617954Abc110A;
extern T0*ms112_10739979Abc112A;
extern T0*ms108_932412928Abc623A;
extern T0*ms112_33425Abc112A;
extern T0*ms452_1284372793Abc452A;
extern T0*ms112_33425Abc112B;
extern T0*ms452_1284372793Abc452B;
extern T0*ms452_1284372793Abc452C;
extern T0*ms452_1284372793Abc452D;
extern T0*ms497_90494969Abc497A;
extern T0*ms470_9808515Abc470A;
extern T0*ms363_1626899946Abc363A;
extern T0*ms100_469031018Abc100A;
extern T0*ms112_4620481Abc112A;
extern T0*ms681_1601130656Abc681A;
extern T0*ms100_955638361Abc100A;
extern T0*ms112_1327517381Abc112A;
extern T0*ms33_61Abc397A;
extern T0*ms100_502181838Abc100A;
extern T0*ms619_497096041Abc619A;
extern T0*ms614_6575105Abc614A;
extern T0*ms33_64Abc33A;
extern T0*ms110_207986277Abc110A;
extern T0*ms283_740Abc283A;
extern T0*ms283_740Abc283B;
extern T0*ms790_33836Abc790A;
extern T0*ms112_1737592965Abc112A;
extern T0*ms597_2111741Abc597A;
extern T0*ms107_36611104Abc107A;
extern T0*ms121_2537Abc121A;
extern T0*ms33_9647090Abc33A;
extern T0*ms110_18144Abc110A;
extern T0*ms419_1081673178Abc419A;
extern T0*ms788_413927315Abc788A;
extern T0*ms33_1483884743Abc33A;
extern T0*ms328_311661671Abc328A;
extern T0*ms619_1240206596Abc619A;
extern T0*ms612_570Abc612A;
extern T0*ms112_434116584Abc112A;
extern T0*ms34_3175Abc116A;
extern T0*ms112_1284Abc112A;
extern T0*ms112_1284Abc112B;
extern T0*ms432_983618541Abc432A;
extern T0*ms112_163413385Abc112A;
extern T0*ms112_1624663341Abc112A;
extern T0*ms112_1624663341Abc112B;
extern T0*ms112_997623147Abc112A;
extern T0*ms115_1585514726Abc115B;
extern T0*ms115_1585514726Abc115A;
extern T0*ms614_206419907Abc614A;
extern T0*ms621_813409Abc621A;
extern T0*ms100_1943393816Abc100A;
extern T0*ms523_80251Abc523A;
extern T0*ms401_1993565801Abc401A;
extern T0*ms100_962885232Abc401A;
extern T0*ms34_87466Abc34A;
extern T0*ms107_292482Abc280A;
extern T0*ms620_33291Abc620A;
extern T0*ms33_2187464Abc33A;
extern T0*ms620_33291Abc620B;
extern T0*ms620_33291Abc620C;
extern T0*ms112_11086084Abc112A;
extern T0*ms112_11086084Abc112B;
extern T0*ms112_5164112Abc112A;
extern T0*ms368_2870Abc368A;
extern T0*ms329_1777506207Abc329A;
extern T0*ms620_1628970485Abc620A;
extern T0*ms274_1453633985Abc274A;
extern T0*ms112_1754886761Abc112A;
extern T0*ms33_61Abc614A;
extern T0*ms328_1981041429Abc328A;
extern T0*ms108_2075119688Abc108A;
extern T0*ms621_531809155Abc621A;
extern T0*ms33_50778415Abc33A;
extern T0*ms112_719604853Abc112A;
extern T0*ms112_1994813154Abc112A;
extern T0*ms112_4980205Abc112A;
extern T0*ms33_36200588Abc33A;
extern T0*ms33_550709268Abc33A;
extern T0*ms619_1193180751Abc619A;
extern T0*ms112_1981256377Abc112A;
extern T0*ms612_1240Abc612A;
extern T0*ms33_267647687Abc33A;
extern T0*ms33_55924644Abc33A;
extern T0*ms34_17221Abc34A;
extern T0*ms612_1240Abc620A;
extern T0*ms107_1889118664Abc107A;
extern T0*ms34_2185421Abc34A;
extern T0*ms33_14150Abc396A;
extern T0*ms790_171955Abc790A;
extern T0*ms107_292482Abc419A;
extern T0*ms107_292482Abc419B;
extern T0*ms107_292482Abc419C;
extern T0*ms469_1331532446Abc469A;
extern T0*ms620_6965Abc620A;
extern T0*ms790_2142119302Abc790A;
extern T0*ms620_6965Abc620B;
extern T0*ms620_6965Abc620C;
extern T0*ms609_810433Abc609A;
extern T0*ms476_1496963692Abc476A;
extern T0*ms33_1603529235Abc33A;
extern T0*ms282_411001267Abc282A;
extern T0*ms108_240Abc100A;
extern T0*ms34_2234341Abc34A;
extern T0*ms112_9130Abc112A;
extern T0*ms112_1471782099Abc112A;
extern T0*ms559_168Abc559A;
extern T0*ms33_65574Abc442A;
extern T0*ms596_605650769Abc596A;
extern T0*ms410_626532654Abc410A;
extern T0*ms34_87466Abc459A;
extern T0*ms107_2114217978Abc107A;
extern T0*ms108_240Abc108A;
extern T0*ms401_1490189105Abc401A;
extern T0*ms34_2234341Abc466A;
extern T0*ms597_56760755Abc597A;
extern T0*ms108_240Abc121A;
extern T0*ms108_240Abc121B;
extern T0*ms612_7233618Abc612A;
extern T0*ms100_1717397235Abc100A;
extern T0*ms117_1568216255Abc117A;
extern T0*ms620_10089540Abc620A;
extern T0*ms273_319940936Abc273A;
extern T0*ms273_319940936Abc273B;
extern T0*ms101_595894613Abc101A;
extern T0*ms273_319940936Abc273C;
extern T0*ms273_319940936Abc273D;
extern T0*ms100_1207880883Abc100A;
extern T0*ms101_1861857328Abc101A;
extern T0*ms107_292482Abc476A;
extern T0*ms107_292482Abc476B;
extern T0*ms117_253892190Abc117A;
extern T0*ms34_3415Abc34A;
extern T0*ms476_909851733Abc476A;
extern T0*ms609_4571057Abc609A;
extern T0*ms121_27561173Abc121A;
extern T0*ms622_54686040Abc622A;
extern T0*ms120_397Abc120A;
extern T0*ms33_1944903Abc33A;
extern T0*ms466_2101296982Abc466A;
extern T0*ms633_1983193131Abc633A;
extern T0*ms33_80694Abc33A;
extern T0*ms100_1933Abc100A;
extern T0*ms401_1490189105Abc397A;
extern T0*ms401_1490189105Abc397B;
extern T0*ms100_2091587115Abc100A;
extern T0*ms620_83345Abc620A;
extern T0*ms34_945182441Abc34A;
extern T0*ms107_1546692995Abc107A;
extern T0*ms115_305596576Abc115A;
extern T0*ms33_567319812Abc33A;
extern T0*ms466_1057882626Abc466A;
extern T0*ms112_2630Abc112A;
extern T0*ms112_2630Abc112B;
extern T0*ms100_962885232Abc100C;
extern T0*ms100_962885232Abc100B;
extern T0*ms100_962885232Abc100A;
extern T0*ms633_1961403182Abc597A;
extern T0*ms33_3472Abc33A;
extern T0*ms112_1826935309Abc112A;
extern T0*ms597_1387812168Abc597A;
extern T0*ms620_87090Abc620A;
extern T0*ms284_2064444Abc281A;
extern T0*ms112_1844536619Abc112A;
extern T0*ms280_867234734Abc280A;
extern T0*ms33_2067759348Abc33A;
extern T0*ms609_23647157Abc609A;
extern T0*ms284_2064444Abc284A;
extern T0*ms790_110557057Abc790A;
extern T0*ms112_257Abc557A;
extern T0*ms112_257Abc612A;
extern T0*ms633_1961403182Abc633A;
extern T0*ms112_257Abc612B;
extern T0*ms112_257Abc557B;
extern T0*ms112_1170250908Abc112A;
extern T0*ms112_257Abc612C;
extern T0*ms112_257Abc557C;
extern T0*ms100_401981819Abc100A;
extern T0*ms623_754574290Abc623A;
extern T0*ms100_401981819Abc100B;
extern T0*ms112_257Abc609A;
extern T0*ms112_257Abc614A;
extern T0*ms112_257Abc609B;
extern T0*ms112_257Abc609C;
extern T0*ms112_257Abc609D;
extern T0*ms112_257Abc609E;
extern T0*ms112_257Abc609F;
extern T0*ms100_1439398002Abc100A;
extern T0*ms112_257Abc609G;
extern T0*ms112_257Abc609H;
extern T0*ms112_257Abc609I;
extern T0*ms633_1465905014Abc633A;
T0*se_ms(int c,char*e);
T0*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void se_msi10(void);
void se_msi11(void);
void se_msi12(void);
void se_msi13(void);
void se_msi14(void);
void se_msi15(void);
void se_msi16(void);
void se_msi17(void);
void se_msi18(void);
void se_msi19(void);
void se_msi20(void);
void se_msi21(void);
void se_msi22(void);
void se_msi23(void);
void se_msi24(void);
void se_msi25(void);
void se_msi26(void);
void se_msi27(void);
void se_msi28(void);
void se_msi29(void);
void se_msi30(void);
void se_msi31(void);
void se_msi32(void);
void se_msi33(void);
void se_msi34(void);
void se_msi35(void);
void se_msi36(void);
void se_msi37(void);
void se_msi38(void);
void se_msi39(void);
void se_msi40(void);
void se_msi41(void);
void se_msi42(void);
void se_msi43(void);
void se_msi44(void);
void se_msi45(void);
void se_msi46(void);
void se_msi47(void);
void se_msi48(void);
void se_msi49(void);
void se_msi50(void);
void se_msi51(void);
void se_msi52(void);
void se_msi53(void);
void se_msi54(void);
void se_msi55(void);
void se_msi56(void);
void se_msi57(void);
void se_msi58(void);
void se_msi59(void);
void se_msi60(void);
void se_msi61(void);
void se_msi62(void);
void se_msi63(void);
void se_msi64(void);
void se_msi65(void);
void se_msi66(void);
void se_msi67(void);
void se_msi68(void);
void se_msi69(void);
void se_msi70(void);
void se_msi71(void);
void se_msi72(void);
void se_msi73(void);
void se_msi74(void);
void se_msi75(void);
void se_msi76(void);
void se_msi77(void);
void se_msi78(void);
void se_msi79(void);
void se_msi80(void);
void se_msi81(void);
void se_msi82(void);
void se_msi83(void);
void manifest_string_mark1(void);
void manifest_string_mark2(void);
void manifest_string_mark3(void);
void manifest_string_mark4(void);
void manifest_string_mark5(void);
void manifest_string_mark6(void);
void manifest_string_mark7(void);
void manifest_string_mark8(void);
void manifest_string_mark9(void);
void manifest_string_mark10(void);
void manifest_string_mark11(void);
void manifest_string_mark12(void);
void manifest_string_mark13(void);
void manifest_string_mark14(void);
void once_function_mark(void);
void gc_start(void);
typedef struct B29 gc29;
struct B29{T29 object;union {void*flag;gc29*next;} header;};
extern gc29*store29;
extern int store_left29;
extern fsoc*store_chunk29;
extern gc29*gc_free29;
typedef struct B108 gc108;
struct B108{T108 object;union {void*flag;gc108*next;} header;};
extern gc108*store108;
extern int store_left108;
extern fsoc*store_chunk108;
extern gc108*gc_free108;
typedef struct B975 gc975;
struct B975{T975 object;union {void*flag;gc975*next;} header;};
extern gc975*store975;
extern int store_left975;
extern fsoc*store_chunk975;
extern gc975*gc_free975;
typedef struct B100 gc100;
struct B100{T100 object;union {void*flag;gc100*next;} header;};
extern gc100*store100;
extern int store_left100;
extern fsoc*store_chunk100;
extern gc100*gc_free100;
typedef struct B121 gc121;
struct B121{T121 object;union {void*flag;gc121*next;} header;};
extern gc121*store121;
extern int store_left121;
extern fsoc*store_chunk121;
extern gc121*gc_free121;
typedef struct B274 gc274;
struct B274{T274 object;union {void*flag;gc274*next;} header;};
extern gc274*store274;
extern int store_left274;
extern fsoc*store_chunk274;
extern gc274*gc_free274;
typedef struct B112 gc112;
struct B112{T112 object;union {void*flag;gc112*next;} header;};
extern gc112*store112;
extern int store_left112;
extern fsoc*store_chunk112;
extern gc112*gc_free112;
typedef struct B107 gc107;
struct B107{T107 object;union {void*flag;gc107*next;} header;};
extern gc107*store107;
extern int store_left107;
extern fsoc*store_chunk107;
extern gc107*gc_free107;
typedef struct B282 gc282;
struct B282{T282 object;union {void*flag;gc282*next;} header;};
extern gc282*store282;
extern int store_left282;
extern fsoc*store_chunk282;
extern gc282*gc_free282;
typedef struct B272 gc272;
struct B272{T272 object;union {void*flag;gc272*next;} header;};
extern gc272*store272;
extern int store_left272;
extern fsoc*store_chunk272;
extern gc272*gc_free272;
typedef struct B7 gc7;
struct B7{T7 object;union {void*flag;gc7*next;} header;};
extern gc7*store7;
extern int store_left7;
extern fsoc*store_chunk7;
extern gc7*gc_free7;
extern na_env na_env9;
typedef struct B619 gc619;
struct B619{T619 object;union {void*flag;gc619*next;} header;};
extern gc619*store619;
extern int store_left619;
extern fsoc*store_chunk619;
extern gc619*gc_free619;
typedef struct B1003 gc1003;
struct B1003{T1003 object;union {void*flag;gc1003*next;} header;};
extern gc1003*store1003;
extern int store_left1003;
extern fsoc*store_chunk1003;
extern gc1003*gc_free1003;
typedef struct B84 gc84;
struct B84{T84 object;union {void*flag;gc84*next;} header;};
extern gc84*store84;
extern int store_left84;
extern fsoc*store_chunk84;
extern gc84*gc_free84;
typedef struct B1004 gc1004;
struct B1004{T1004 object;union {void*flag;gc1004*next;} header;};
extern gc1004*store1004;
extern int store_left1004;
extern fsoc*store_chunk1004;
extern gc1004*gc_free1004;
typedef struct B284 gc284;
struct B284{T284 object;union {void*flag;gc284*next;} header;};
extern gc284*store284;
extern int store_left284;
extern fsoc*store_chunk284;
extern gc284*gc_free284;
typedef struct B77 gc77;
struct B77{T77 object;union {void*flag;gc77*next;} header;};
extern gc77*store77;
extern int store_left77;
extern fsoc*store_chunk77;
extern gc77*gc_free77;
typedef struct B1005 gc1005;
struct B1005{T1005 object;union {void*flag;gc1005*next;} header;};
extern gc1005*store1005;
extern int store_left1005;
extern fsoc*store_chunk1005;
extern gc1005*gc_free1005;
typedef struct B536 gc536;
struct B536{T536 object;union {void*flag;gc536*next;} header;};
extern gc536*store536;
extern int store_left536;
extern fsoc*store_chunk536;
extern gc536*gc_free536;
typedef struct B540 gc540;
struct B540{T540 object;union {void*flag;gc540*next;} header;};
extern gc540*store540;
extern int store_left540;
extern fsoc*store_chunk540;
extern gc540*gc_free540;
typedef struct B541 gc541;
struct B541{T541 object;union {void*flag;gc541*next;} header;};
extern gc541*store541;
extern int store_left541;
extern fsoc*store_chunk541;
extern gc541*gc_free541;
typedef struct B542 gc542;
struct B542{T542 object;union {void*flag;gc542*next;} header;};
extern gc542*store542;
extern int store_left542;
extern fsoc*store_chunk542;
extern gc542*gc_free542;
typedef struct B543 gc543;
struct B543{T543 object;union {void*flag;gc543*next;} header;};
extern gc543*store543;
extern int store_left543;
extern fsoc*store_chunk543;
extern gc543*gc_free543;
typedef struct B544 gc544;
struct B544{T544 object;union {void*flag;gc544*next;} header;};
extern gc544*store544;
extern int store_left544;
extern fsoc*store_chunk544;
extern gc544*gc_free544;
typedef struct B1006 gc1006;
struct B1006{T1006 object;union {void*flag;gc1006*next;} header;};
extern gc1006*store1006;
extern int store_left1006;
extern fsoc*store_chunk1006;
extern gc1006*gc_free1006;
typedef struct B1007 gc1007;
struct B1007{T1007 object;union {void*flag;gc1007*next;} header;};
extern gc1007*store1007;
extern int store_left1007;
extern fsoc*store_chunk1007;
extern gc1007*gc_free1007;
typedef struct B98 gc98;
struct B98{T98 object;union {void*flag;gc98*next;} header;};
extern gc98*store98;
extern int store_left98;
extern fsoc*store_chunk98;
extern gc98*gc_free98;
typedef struct B535 gc535;
struct B535{T535 object;union {void*flag;gc535*next;} header;};
extern gc535*store535;
extern int store_left535;
extern fsoc*store_chunk535;
extern gc535*gc_free535;
typedef struct B452 gc452;
struct B452{T452 object;union {void*flag;gc452*next;} header;};
extern gc452*store452;
extern int store_left452;
extern fsoc*store_chunk452;
extern gc452*gc_free452;
typedef struct B451 gc451;
struct B451{T451 object;union {void*flag;gc451*next;} header;};
extern gc451*store451;
extern int store_left451;
extern fsoc*store_chunk451;
extern gc451*gc_free451;
typedef struct B639 gc639;
struct B639{T639 object;union {void*flag;gc639*next;} header;};
extern gc639*store639;
extern int store_left639;
extern fsoc*store_chunk639;
extern gc639*gc_free639;
typedef struct B80 gc80;
struct B80{T80 object;union {void*flag;gc80*next;} header;};
extern gc80*store80;
extern int store_left80;
extern fsoc*store_chunk80;
extern gc80*gc_free80;
typedef struct B68 gc68;
struct B68{T68 object;union {void*flag;gc68*next;} header;};
extern gc68*store68;
extern int store_left68;
extern fsoc*store_chunk68;
extern gc68*gc_free68;
typedef struct B1008 gc1008;
struct B1008{T1008 object;union {void*flag;gc1008*next;} header;};
extern gc1008*store1008;
extern int store_left1008;
extern fsoc*store_chunk1008;
extern gc1008*gc_free1008;
typedef struct B103 gc103;
struct B103{T103 object;union {void*flag;gc103*next;} header;};
extern gc103*store103;
extern int store_left103;
extern fsoc*store_chunk103;
extern gc103*gc_free103;
typedef struct B118 gc118;
struct B118{T118 object;union {void*flag;gc118*next;} header;};
extern gc118*store118;
extern int store_left118;
extern fsoc*store_chunk118;
extern gc118*gc_free118;
typedef struct B682 gc682;
struct B682{T682 object;union {void*flag;gc682*next;} header;};
extern gc682*store682;
extern int store_left682;
extern fsoc*store_chunk682;
extern gc682*gc_free682;
typedef struct B686 gc686;
struct B686{T686 object;union {void*flag;gc686*next;} header;};
extern gc686*store686;
extern int store_left686;
extern fsoc*store_chunk686;
extern gc686*gc_free686;
typedef struct B684 gc684;
struct B684{T684 object;union {void*flag;gc684*next;} header;};
extern gc684*store684;
extern int store_left684;
extern fsoc*store_chunk684;
extern gc684*gc_free684;
typedef struct B545 gc545;
struct B545{T545 object;union {void*flag;gc545*next;} header;};
extern gc545*store545;
extern int store_left545;
extern fsoc*store_chunk545;
extern gc545*gc_free545;
typedef struct B678 gc678;
struct B678{T678 object;union {void*flag;gc678*next;} header;};
extern gc678*store678;
extern int store_left678;
extern fsoc*store_chunk678;
extern gc678*gc_free678;
typedef struct B420 gc420;
struct B420{T420 object;union {void*flag;gc420*next;} header;};
extern gc420*store420;
extern int store_left420;
extern fsoc*store_chunk420;
extern gc420*gc_free420;
typedef struct B1009 gc1009;
struct B1009{T1009 object;union {void*flag;gc1009*next;} header;};
extern gc1009*store1009;
extern int store_left1009;
extern fsoc*store_chunk1009;
extern gc1009*gc_free1009;
typedef struct B319 gc319;
struct B319{T319 object;union {void*flag;gc319*next;} header;};
extern gc319*store319;
extern int store_left319;
extern fsoc*store_chunk319;
extern gc319*gc_free319;
typedef struct B1010 gc1010;
struct B1010{T1010 object;union {void*flag;gc1010*next;} header;};
extern gc1010*store1010;
extern int store_left1010;
extern fsoc*store_chunk1010;
extern gc1010*gc_free1010;
typedef struct B429 gc429;
struct B429{T429 object;union {void*flag;gc429*next;} header;};
extern gc429*store429;
extern int store_left429;
extern fsoc*store_chunk429;
extern gc429*gc_free429;
typedef struct B564 gc564;
struct B564{T564 object;union {void*flag;gc564*next;} header;};
extern gc564*store564;
extern int store_left564;
extern fsoc*store_chunk564;
extern gc564*gc_free564;
typedef struct B594 gc594;
struct B594{T594 object;union {void*flag;gc594*next;} header;};
extern gc594*store594;
extern int store_left594;
extern fsoc*store_chunk594;
extern gc594*gc_free594;
typedef struct B595 gc595;
struct B595{T595 object;union {void*flag;gc595*next;} header;};
extern gc595*store595;
extern int store_left595;
extern fsoc*store_chunk595;
extern gc595*gc_free595;
typedef struct B596 gc596;
struct B596{T596 object;union {void*flag;gc596*next;} header;};
extern gc596*store596;
extern int store_left596;
extern fsoc*store_chunk596;
extern gc596*gc_free596;
typedef struct B597 gc597;
struct B597{T597 object;union {void*flag;gc597*next;} header;};
extern gc597*store597;
extern int store_left597;
extern fsoc*store_chunk597;
extern gc597*gc_free597;
typedef struct B609 gc609;
struct B609{T609 object;union {void*flag;gc609*next;} header;};
extern gc609*store609;
extern int store_left609;
extern fsoc*store_chunk609;
extern gc609*gc_free609;
typedef struct B610 gc610;
struct B610{T610 object;union {void*flag;gc610*next;} header;};
extern gc610*store610;
extern int store_left610;
extern fsoc*store_chunk610;
extern gc610*gc_free610;
typedef struct B611 gc611;
struct B611{T611 object;union {void*flag;gc611*next;} header;};
extern gc611*store611;
extern int store_left611;
extern fsoc*store_chunk611;
extern gc611*gc_free611;
typedef struct B613 gc613;
struct B613{T613 object;union {void*flag;gc613*next;} header;};
extern gc613*store613;
extern int store_left613;
extern fsoc*store_chunk613;
extern gc613*gc_free613;
typedef struct B614 gc614;
struct B614{T614 object;union {void*flag;gc614*next;} header;};
extern gc614*store614;
extern int store_left614;
extern fsoc*store_chunk614;
extern gc614*gc_free614;
typedef struct B618 gc618;
struct B618{T618 object;union {void*flag;gc618*next;} header;};
extern gc618*store618;
extern int store_left618;
extern fsoc*store_chunk618;
extern gc618*gc_free618;
typedef struct B620 gc620;
struct B620{T620 object;union {void*flag;gc620*next;} header;};
extern gc620*store620;
extern int store_left620;
extern fsoc*store_chunk620;
extern gc620*gc_free620;
typedef struct B621 gc621;
struct B621{T621 object;union {void*flag;gc621*next;} header;};
extern gc621*store621;
extern int store_left621;
extern fsoc*store_chunk621;
extern gc621*gc_free621;
typedef struct B622 gc622;
struct B622{T622 object;union {void*flag;gc622*next;} header;};
extern gc622*store622;
extern int store_left622;
extern fsoc*store_chunk622;
extern gc622*gc_free622;
typedef struct B623 gc623;
struct B623{T623 object;union {void*flag;gc623*next;} header;};
extern gc623*store623;
extern int store_left623;
extern fsoc*store_chunk623;
extern gc623*gc_free623;
typedef struct B624 gc624;
struct B624{T624 object;union {void*flag;gc624*next;} header;};
extern gc624*store624;
extern int store_left624;
extern fsoc*store_chunk624;
extern gc624*gc_free624;
typedef struct B625 gc625;
struct B625{T625 object;union {void*flag;gc625*next;} header;};
extern gc625*store625;
extern int store_left625;
extern fsoc*store_chunk625;
extern gc625*gc_free625;
typedef struct B627 gc627;
struct B627{T627 object;union {void*flag;gc627*next;} header;};
extern gc627*store627;
extern int store_left627;
extern fsoc*store_chunk627;
extern gc627*gc_free627;
typedef struct B626 gc626;
struct B626{T626 object;union {void*flag;gc626*next;} header;};
extern gc626*store626;
extern int store_left626;
extern fsoc*store_chunk626;
extern gc626*gc_free626;
typedef struct B628 gc628;
struct B628{T628 object;union {void*flag;gc628*next;} header;};
extern gc628*store628;
extern int store_left628;
extern fsoc*store_chunk628;
extern gc628*gc_free628;
typedef struct B629 gc629;
struct B629{T629 object;union {void*flag;gc629*next;} header;};
extern gc629*store629;
extern int store_left629;
extern fsoc*store_chunk629;
extern gc629*gc_free629;
typedef struct B630 gc630;
struct B630{T630 object;union {void*flag;gc630*next;} header;};
extern gc630*store630;
extern int store_left630;
extern fsoc*store_chunk630;
extern gc630*gc_free630;
typedef struct B1011 gc1011;
struct B1011{T1011 object;union {void*flag;gc1011*next;} header;};
extern gc1011*store1011;
extern int store_left1011;
extern fsoc*store_chunk1011;
extern gc1011*gc_free1011;
typedef struct B631 gc631;
struct B631{T631 object;union {void*flag;gc631*next;} header;};
extern gc631*store631;
extern int store_left631;
extern fsoc*store_chunk631;
extern gc631*gc_free631;
typedef struct B1012 gc1012;
struct B1012{T1012 object;union {void*flag;gc1012*next;} header;};
extern gc1012*store1012;
extern int store_left1012;
extern fsoc*store_chunk1012;
extern gc1012*gc_free1012;
typedef struct B1013 gc1013;
struct B1013{T1013 object;union {void*flag;gc1013*next;} header;};
extern gc1013*store1013;
extern int store_left1013;
extern fsoc*store_chunk1013;
extern gc1013*gc_free1013;
typedef struct B368 gc368;
struct B368{T368 object;union {void*flag;gc368*next;} header;};
extern gc368*store368;
extern int store_left368;
extern fsoc*store_chunk368;
extern gc368*gc_free368;
typedef struct B93 gc93;
struct B93{T93 object;union {void*flag;gc93*next;} header;};
extern gc93*store93;
extern int store_left93;
extern fsoc*store_chunk93;
extern gc93*gc_free93;
typedef struct B95 gc95;
struct B95{T95 object;union {void*flag;gc95*next;} header;};
extern gc95*store95;
extern int store_left95;
extern fsoc*store_chunk95;
extern gc95*gc_free95;
typedef struct B1014 gc1014;
struct B1014{T1014 object;union {void*flag;gc1014*next;} header;};
extern gc1014*store1014;
extern int store_left1014;
extern fsoc*store_chunk1014;
extern gc1014*gc_free1014;
typedef struct B1015 gc1015;
struct B1015{T1015 object;union {void*flag;gc1015*next;} header;};
extern gc1015*store1015;
extern int store_left1015;
extern fsoc*store_chunk1015;
extern gc1015*gc_free1015;
typedef struct B1016 gc1016;
struct B1016{T1016 object;union {void*flag;gc1016*next;} header;};
extern gc1016*store1016;
extern int store_left1016;
extern fsoc*store_chunk1016;
extern gc1016*gc_free1016;
typedef struct B277 gc277;
struct B277{T277 object;union {void*flag;gc277*next;} header;};
extern gc277*store277;
extern int store_left277;
extern fsoc*store_chunk277;
extern gc277*gc_free277;
typedef struct B87 gc87;
struct B87{T87 object;union {void*flag;gc87*next;} header;};
extern gc87*store87;
extern int store_left87;
extern fsoc*store_chunk87;
extern gc87*gc_free87;
typedef struct B532 gc532;
struct B532{T532 object;union {void*flag;gc532*next;} header;};
extern gc532*store532;
extern int store_left532;
extern fsoc*store_chunk532;
extern gc532*gc_free532;
typedef struct B1018 gc1018;
struct B1018{T1018 object;union {void*flag;gc1018*next;} header;};
extern gc1018*store1018;
extern int store_left1018;
extern fsoc*store_chunk1018;
extern gc1018*gc_free1018;
typedef struct B328 gc328;
struct B328{T328 object;union {void*flag;gc328*next;} header;};
extern gc328*store328;
extern int store_left328;
extern fsoc*store_chunk328;
extern gc328*gc_free328;
typedef struct B106 gc106;
struct B106{T106 object;union {void*flag;gc106*next;} header;};
extern gc106*store106;
extern int store_left106;
extern fsoc*store_chunk106;
extern gc106*gc_free106;
typedef struct B104 gc104;
struct B104{T104 object;union {void*flag;gc104*next;} header;};
extern gc104*store104;
extern int store_left104;
extern fsoc*store_chunk104;
extern gc104*gc_free104;
typedef struct B111 gc111;
struct B111{T111 object;union {void*flag;gc111*next;} header;};
extern gc111*store111;
extern int store_left111;
extern fsoc*store_chunk111;
extern gc111*gc_free111;
typedef struct B120 gc120;
struct B120{T120 object;union {void*flag;gc120*next;} header;};
extern gc120*store120;
extern int store_left120;
extern fsoc*store_chunk120;
extern gc120*gc_free120;
typedef struct B119 gc119;
struct B119{T119 object;union {void*flag;gc119*next;} header;};
extern gc119*store119;
extern int store_left119;
extern fsoc*store_chunk119;
extern gc119*gc_free119;
typedef struct B122 gc122;
struct B122{T122 object;union {void*flag;gc122*next;} header;};
extern gc122*store122;
extern int store_left122;
extern fsoc*store_chunk122;
extern gc122*gc_free122;
typedef struct B89 gc89;
struct B89{T89 object;union {void*flag;gc89*next;} header;};
extern gc89*store89;
extern int store_left89;
extern fsoc*store_chunk89;
extern gc89*gc_free89;
typedef struct B438 gc438;
struct B438{T438 object;union {void*flag;gc438*next;} header;};
extern gc438*store438;
extern int store_left438;
extern fsoc*store_chunk438;
extern gc438*gc_free438;
typedef struct B1020 gc1020;
struct B1020{T1020 object;union {void*flag;gc1020*next;} header;};
extern gc1020*store1020;
extern int store_left1020;
extern fsoc*store_chunk1020;
extern gc1020*gc_free1020;
typedef struct B1021 gc1021;
struct B1021{T1021 object;union {void*flag;gc1021*next;} header;};
extern gc1021*store1021;
extern int store_left1021;
extern fsoc*store_chunk1021;
extern gc1021*gc_free1021;
typedef struct B115 gc115;
struct B115{T115 object;union {void*flag;gc115*next;} header;};
extern gc115*store115;
extern int store_left115;
extern fsoc*store_chunk115;
extern gc115*gc_free115;
typedef struct B433 gc433;
struct B433{T433 object;union {void*flag;gc433*next;} header;};
extern gc433*store433;
extern int store_left433;
extern fsoc*store_chunk433;
extern gc433*gc_free433;
typedef struct B1024 gc1024;
struct B1024{T1024 object;union {void*flag;gc1024*next;} header;};
extern gc1024*store1024;
extern int store_left1024;
extern fsoc*store_chunk1024;
extern gc1024*gc_free1024;
typedef struct B1025 gc1025;
struct B1025{T1025 object;union {void*flag;gc1025*next;} header;};
extern gc1025*store1025;
extern int store_left1025;
extern fsoc*store_chunk1025;
extern gc1025*gc_free1025;
typedef struct B1026 gc1026;
struct B1026{T1026 object;union {void*flag;gc1026*next;} header;};
extern gc1026*store1026;
extern int store_left1026;
extern fsoc*store_chunk1026;
extern gc1026*gc_free1026;
typedef struct B788 gc788;
struct B788{T788 object;union {void*flag;gc788*next;} header;};
extern gc788*store788;
extern int store_left788;
extern fsoc*store_chunk788;
extern gc788*gc_free788;
typedef struct B790 gc790;
struct B790{T790 object;union {void*flag;gc790*next;} header;};
extern gc790*store790;
extern int store_left790;
extern fsoc*store_chunk790;
extern gc790*gc_free790;
typedef struct B791 gc791;
struct B791{T791 object;union {void*flag;gc791*next;} header;};
extern gc791*store791;
extern int store_left791;
extern fsoc*store_chunk791;
extern gc791*gc_free791;
typedef struct B792 gc792;
struct B792{T792 object;union {void*flag;gc792*next;} header;};
extern gc792*store792;
extern int store_left792;
extern fsoc*store_chunk792;
extern gc792*gc_free792;
typedef struct B793 gc793;
struct B793{T793 object;union {void*flag;gc793*next;} header;};
extern gc793*store793;
extern int store_left793;
extern fsoc*store_chunk793;
extern gc793*gc_free793;
extern na_env na_env1028;
typedef struct B327 gc327;
struct B327{T327 object;union {void*flag;gc327*next;} header;};
extern gc327*store327;
extern int store_left327;
extern fsoc*store_chunk327;
extern gc327*gc_free327;
typedef struct B1030 gc1030;
struct B1030{T1030 object;union {void*flag;gc1030*next;} header;};
extern gc1030*store1030;
extern int store_left1030;
extern fsoc*store_chunk1030;
extern gc1030*gc_free1030;
typedef struct B1031 gc1031;
struct B1031{T1031 object;union {void*flag;gc1031*next;} header;};
extern gc1031*store1031;
extern int store_left1031;
extern fsoc*store_chunk1031;
extern gc1031*gc_free1031;
typedef struct B775 gc775;
struct B775{T775 object;union {void*flag;gc775*next;} header;};
extern gc775*store775;
extern int store_left775;
extern fsoc*store_chunk775;
extern gc775*gc_free775;
typedef struct B777 gc777;
struct B777{T777 object;union {void*flag;gc777*next;} header;};
extern gc777*store777;
extern int store_left777;
extern fsoc*store_chunk777;
extern gc777*gc_free777;
typedef struct B776 gc776;
struct B776{T776 object;union {void*flag;gc776*next;} header;};
extern gc776*store776;
extern int store_left776;
extern fsoc*store_chunk776;
extern gc776*gc_free776;
typedef struct B1035 gc1035;
struct B1035{T1035 object;union {void*flag;gc1035*next;} header;};
extern gc1035*store1035;
extern int store_left1035;
extern fsoc*store_chunk1035;
extern gc1035*gc_free1035;
typedef struct B1036 gc1036;
struct B1036{T1036 object;union {void*flag;gc1036*next;} header;};
extern gc1036*store1036;
extern int store_left1036;
extern fsoc*store_chunk1036;
extern gc1036*gc_free1036;
typedef struct B58 gc58;
struct B58{T58 object;union {void*flag;gc58*next;} header;};
extern gc58*store58;
extern int store_left58;
extern fsoc*store_chunk58;
extern gc58*gc_free58;
typedef struct B1037 gc1037;
struct B1037{T1037 object;union {void*flag;gc1037*next;} header;};
extern gc1037*store1037;
extern int store_left1037;
extern fsoc*store_chunk1037;
extern gc1037*gc_free1037;
typedef struct B1038 gc1038;
struct B1038{T1038 object;union {void*flag;gc1038*next;} header;};
extern gc1038*store1038;
extern int store_left1038;
extern fsoc*store_chunk1038;
extern gc1038*gc_free1038;
typedef struct B293 gc293;
struct B293{T293 object;union {void*flag;gc293*next;} header;};
extern gc293*store293;
extern int store_left293;
extern fsoc*store_chunk293;
extern gc293*gc_free293;
typedef struct B1039 gc1039;
struct B1039{T1039 object;union {void*flag;gc1039*next;} header;};
extern gc1039*store1039;
extern int store_left1039;
extern fsoc*store_chunk1039;
extern gc1039*gc_free1039;
typedef struct B1042 gc1042;
struct B1042{T1042 object;union {void*flag;gc1042*next;} header;};
extern gc1042*store1042;
extern int store_left1042;
extern fsoc*store_chunk1042;
extern gc1042*gc_free1042;
extern na_env na_env1043;
typedef struct B1044 gc1044;
struct B1044{T1044 object;union {void*flag;gc1044*next;} header;};
extern gc1044*store1044;
extern int store_left1044;
extern fsoc*store_chunk1044;
extern gc1044*gc_free1044;
typedef struct B1045 gc1045;
struct B1045{T1045 object;union {void*flag;gc1045*next;} header;};
extern gc1045*store1045;
extern int store_left1045;
extern fsoc*store_chunk1045;
extern gc1045*gc_free1045;
typedef struct B1046 gc1046;
struct B1046{T1046 object;union {void*flag;gc1046*next;} header;};
extern gc1046*store1046;
extern int store_left1046;
extern fsoc*store_chunk1046;
extern gc1046*gc_free1046;
typedef struct B1047 gc1047;
struct B1047{T1047 object;union {void*flag;gc1047*next;} header;};
extern gc1047*store1047;
extern int store_left1047;
extern fsoc*store_chunk1047;
extern gc1047*gc_free1047;
typedef struct B281 gc281;
struct B281{T281 object;union {void*flag;gc281*next;} header;};
extern gc281*store281;
extern int store_left281;
extern fsoc*store_chunk281;
extern gc281*gc_free281;
extern na_env na_env1048;
typedef struct B1051 gc1051;
struct B1051{T1051 object;union {void*flag;gc1051*next;} header;};
extern gc1051*store1051;
extern int store_left1051;
extern fsoc*store_chunk1051;
extern gc1051*gc_free1051;
typedef struct B102 gc102;
struct B102{T102 object;union {void*flag;gc102*next;} header;};
extern gc102*store102;
extern int store_left102;
extern fsoc*store_chunk102;
extern gc102*gc_free102;
extern na_env na_env1052;
extern na_env na_env1053;
typedef struct B1054 gc1054;
struct B1054{T1054 object;union {void*flag;gc1054*next;} header;};
extern gc1054*store1054;
extern int store_left1054;
extern fsoc*store_chunk1054;
extern gc1054*gc_free1054;
typedef struct B747 gc747;
struct B747{T747 object;union {void*flag;gc747*next;} header;};
extern gc747*store747;
extern int store_left747;
extern fsoc*store_chunk747;
extern gc747*gc_free747;
typedef struct B795 gc795;
struct B795{T795 object;union {void*flag;gc795*next;} header;};
extern gc795*store795;
extern int store_left795;
extern fsoc*store_chunk795;
extern gc795*gc_free795;
typedef struct B1056 gc1056;
struct B1056{T1056 object;union {void*flag;gc1056*next;} header;};
extern gc1056*store1056;
extern int store_left1056;
extern fsoc*store_chunk1056;
extern gc1056*gc_free1056;
extern na_env na_env1057;
typedef struct B1058 gc1058;
struct B1058{T1058 object;union {void*flag;gc1058*next;} header;};
extern gc1058*store1058;
extern int store_left1058;
extern fsoc*store_chunk1058;
extern gc1058*gc_free1058;
typedef struct B1060 gc1060;
struct B1060{T1060 object;union {void*flag;gc1060*next;} header;};
extern gc1060*store1060;
extern int store_left1060;
extern fsoc*store_chunk1060;
extern gc1060*gc_free1060;
typedef struct B1062 gc1062;
struct B1062{T1062 object;union {void*flag;gc1062*next;} header;};
extern gc1062*store1062;
extern int store_left1062;
extern fsoc*store_chunk1062;
extern gc1062*gc_free1062;
typedef struct B749 gc749;
struct B749{T749 object;union {void*flag;gc749*next;} header;};
extern gc749*store749;
extern int store_left749;
extern fsoc*store_chunk749;
extern gc749*gc_free749;
typedef struct B1065 gc1065;
struct B1065{T1065 object;union {void*flag;gc1065*next;} header;};
extern gc1065*store1065;
extern int store_left1065;
extern fsoc*store_chunk1065;
extern gc1065*gc_free1065;
typedef struct B449 gc449;
struct B449{T449 object;union {void*flag;gc449*next;} header;};
extern gc449*store449;
extern int store_left449;
extern fsoc*store_chunk449;
extern gc449*gc_free449;
typedef struct B426 gc426;
struct B426{T426 object;union {void*flag;gc426*next;} header;};
extern gc426*store426;
extern int store_left426;
extern fsoc*store_chunk426;
extern gc426*gc_free426;
typedef struct B380 gc380;
struct B380{T380 object;union {void*flag;gc380*next;} header;};
extern gc380*store380;
extern int store_left380;
extern fsoc*store_chunk380;
extern gc380*gc_free380;
typedef struct B432 gc432;
struct B432{T432 object;union {void*flag;gc432*next;} header;};
extern gc432*store432;
extern int store_left432;
extern fsoc*store_chunk432;
extern gc432*gc_free432;
typedef struct B441 gc441;
struct B441{T441 object;union {void*flag;gc441*next;} header;};
extern gc441*store441;
extern int store_left441;
extern fsoc*store_chunk441;
extern gc441*gc_free441;
typedef struct B485 gc485;
struct B485{T485 object;union {void*flag;gc485*next;} header;};
extern gc485*store485;
extern int store_left485;
extern fsoc*store_chunk485;
extern gc485*gc_free485;
typedef struct B495 gc495;
struct B495{T495 object;union {void*flag;gc495*next;} header;};
extern gc495*store495;
extern int store_left495;
extern fsoc*store_chunk495;
extern gc495*gc_free495;
typedef struct B497 gc497;
struct B497{T497 object;union {void*flag;gc497*next;} header;};
extern gc497*store497;
extern int store_left497;
extern fsoc*store_chunk497;
extern gc497*gc_free497;
typedef struct B354 gc354;
struct B354{T354 object;union {void*flag;gc354*next;} header;};
extern gc354*store354;
extern int store_left354;
extern fsoc*store_chunk354;
extern gc354*gc_free354;
typedef struct B116 gc116;
struct B116{T116 object;union {void*flag;gc116*next;} header;};
extern gc116*store116;
extern int store_left116;
extern fsoc*store_chunk116;
extern gc116*gc_free116;
typedef struct B498 gc498;
struct B498{T498 object;union {void*flag;gc498*next;} header;};
extern gc498*store498;
extern int store_left498;
extern fsoc*store_chunk498;
extern gc498*gc_free498;
typedef struct B445 gc445;
struct B445{T445 object;union {void*flag;gc445*next;} header;};
extern gc445*store445;
extern int store_left445;
extern fsoc*store_chunk445;
extern gc445*gc_free445;
typedef struct B408 gc408;
struct B408{T408 object;union {void*flag;gc408*next;} header;};
extern gc408*store408;
extern int store_left408;
extern fsoc*store_chunk408;
extern gc408*gc_free408;
typedef struct B381 gc381;
struct B381{T381 object;union {void*flag;gc381*next;} header;};
extern gc381*store381;
extern int store_left381;
extern fsoc*store_chunk381;
extern gc381*gc_free381;
typedef struct B436 gc436;
struct B436{T436 object;union {void*flag;gc436*next;} header;};
extern gc436*store436;
extern int store_left436;
extern fsoc*store_chunk436;
extern gc436*gc_free436;
typedef struct B407 gc407;
struct B407{T407 object;union {void*flag;gc407*next;} header;};
extern gc407*store407;
extern int store_left407;
extern fsoc*store_chunk407;
extern gc407*gc_free407;
typedef struct B434 gc434;
struct B434{T434 object;union {void*flag;gc434*next;} header;};
extern gc434*store434;
extern int store_left434;
extern fsoc*store_chunk434;
extern gc434*gc_free434;
typedef struct B403 gc403;
struct B403{T403 object;union {void*flag;gc403*next;} header;};
extern gc403*store403;
extern int store_left403;
extern fsoc*store_chunk403;
extern gc403*gc_free403;
typedef struct B437 gc437;
struct B437{T437 object;union {void*flag;gc437*next;} header;};
extern gc437*store437;
extern int store_left437;
extern fsoc*store_chunk437;
extern gc437*gc_free437;
typedef struct B435 gc435;
struct B435{T435 object;union {void*flag;gc435*next;} header;};
extern gc435*store435;
extern int store_left435;
extern fsoc*store_chunk435;
extern gc435*gc_free435;
typedef struct B442 gc442;
struct B442{T442 object;union {void*flag;gc442*next;} header;};
extern gc442*store442;
extern int store_left442;
extern fsoc*store_chunk442;
extern gc442*gc_free442;
typedef struct B439 gc439;
struct B439{T439 object;union {void*flag;gc439*next;} header;};
extern gc439*store439;
extern int store_left439;
extern fsoc*store_chunk439;
extern gc439*gc_free439;
typedef struct B443 gc443;
struct B443{T443 object;union {void*flag;gc443*next;} header;};
extern gc443*store443;
extern int store_left443;
extern fsoc*store_chunk443;
extern gc443*gc_free443;
typedef struct B446 gc446;
struct B446{T446 object;union {void*flag;gc446*next;} header;};
extern gc446*store446;
extern int store_left446;
extern fsoc*store_chunk446;
extern gc446*gc_free446;
typedef struct B273 gc273;
struct B273{T273 object;union {void*flag;gc273*next;} header;};
extern gc273*store273;
extern int store_left273;
extern fsoc*store_chunk273;
extern gc273*gc_free273;
typedef struct B467 gc467;
struct B467{T467 object;union {void*flag;gc467*next;} header;};
extern gc467*store467;
extern int store_left467;
extern fsoc*store_chunk467;
extern gc467*gc_free467;
typedef struct B469 gc469;
struct B469{T469 object;union {void*flag;gc469*next;} header;};
extern gc469*store469;
extern int store_left469;
extern fsoc*store_chunk469;
extern gc469*gc_free469;
typedef struct B470 gc470;
struct B470{T470 object;union {void*flag;gc470*next;} header;};
extern gc470*store470;
extern int store_left470;
extern fsoc*store_chunk470;
extern gc470*gc_free470;
typedef struct B471 gc471;
struct B471{T471 object;union {void*flag;gc471*next;} header;};
extern gc471*store471;
extern int store_left471;
extern fsoc*store_chunk471;
extern gc471*gc_free471;
typedef struct B421 gc421;
struct B421{T421 object;union {void*flag;gc421*next;} header;};
extern gc421*store421;
extern int store_left421;
extern fsoc*store_chunk421;
extern gc421*gc_free421;
typedef struct B1066 gc1066;
struct B1066{T1066 object;union {void*flag;gc1066*next;} header;};
extern gc1066*store1066;
extern int store_left1066;
extern fsoc*store_chunk1066;
extern gc1066*gc_free1066;
typedef struct B280 gc280;
struct B280{T280 object;union {void*flag;gc280*next;} header;};
extern gc280*store280;
extern int store_left280;
extern fsoc*store_chunk280;
extern gc280*gc_free280;
typedef struct B478 gc478;
struct B478{T478 object;union {void*flag;gc478*next;} header;};
extern gc478*store478;
extern int store_left478;
extern fsoc*store_chunk478;
extern gc478*gc_free478;
typedef struct B1067 gc1067;
struct B1067{T1067 object;union {void*flag;gc1067*next;} header;};
extern gc1067*store1067;
extern int store_left1067;
extern fsoc*store_chunk1067;
extern gc1067*gc_free1067;
typedef struct B518 gc518;
struct B518{T518 object;union {void*flag;gc518*next;} header;};
extern gc518*store518;
extern int store_left518;
extern fsoc*store_chunk518;
extern gc518*gc_free518;
typedef struct B487 gc487;
struct B487{T487 object;union {void*flag;gc487*next;} header;};
extern gc487*store487;
extern int store_left487;
extern fsoc*store_chunk487;
extern gc487*gc_free487;
typedef struct B401 gc401;
struct B401{T401 object;union {void*flag;gc401*next;} header;};
extern gc401*store401;
extern int store_left401;
extern fsoc*store_chunk401;
extern gc401*gc_free401;
typedef struct B474 gc474;
struct B474{T474 object;union {void*flag;gc474*next;} header;};
extern gc474*store474;
extern int store_left474;
extern fsoc*store_chunk474;
extern gc474*gc_free474;
typedef struct B371 gc371;
struct B371{T371 object;union {void*flag;gc371*next;} header;};
extern gc371*store371;
extern int store_left371;
extern fsoc*store_chunk371;
extern gc371*gc_free371;
typedef struct B475 gc475;
struct B475{T475 object;union {void*flag;gc475*next;} header;};
extern gc475*store475;
extern int store_left475;
extern fsoc*store_chunk475;
extern gc475*gc_free475;
typedef struct B476 gc476;
struct B476{T476 object;union {void*flag;gc476*next;} header;};
extern gc476*store476;
extern int store_left476;
extern fsoc*store_chunk476;
extern gc476*gc_free476;
typedef struct B339 gc339;
struct B339{T339 object;union {void*flag;gc339*next;} header;};
extern gc339*store339;
extern int store_left339;
extern fsoc*store_chunk339;
extern gc339*gc_free339;
typedef struct B348 gc348;
struct B348{T348 object;union {void*flag;gc348*next;} header;};
extern gc348*store348;
extern int store_left348;
extern fsoc*store_chunk348;
extern gc348*gc_free348;
typedef struct B351 gc351;
struct B351{T351 object;union {void*flag;gc351*next;} header;};
extern gc351*store351;
extern int store_left351;
extern fsoc*store_chunk351;
extern gc351*gc_free351;
typedef struct B353 gc353;
struct B353{T353 object;union {void*flag;gc353*next;} header;};
extern gc353*store353;
extern int store_left353;
extern fsoc*store_chunk353;
extern gc353*gc_free353;
typedef struct B342 gc342;
struct B342{T342 object;union {void*flag;gc342*next;} header;};
extern gc342*store342;
extern int store_left342;
extern fsoc*store_chunk342;
extern gc342*gc_free342;
typedef struct B346 gc346;
struct B346{T346 object;union {void*flag;gc346*next;} header;};
extern gc346*store346;
extern int store_left346;
extern fsoc*store_chunk346;
extern gc346*gc_free346;
typedef struct B347 gc347;
struct B347{T347 object;union {void*flag;gc347*next;} header;};
extern gc347*store347;
extern int store_left347;
extern fsoc*store_chunk347;
extern gc347*gc_free347;
typedef struct B489 gc489;
struct B489{T489 object;union {void*flag;gc489*next;} header;};
extern gc489*store489;
extern int store_left489;
extern fsoc*store_chunk489;
extern gc489*gc_free489;
typedef struct B490 gc490;
struct B490{T490 object;union {void*flag;gc490*next;} header;};
extern gc490*store490;
extern int store_left490;
extern fsoc*store_chunk490;
extern gc490*gc_free490;
typedef struct B491 gc491;
struct B491{T491 object;union {void*flag;gc491*next;} header;};
extern gc491*store491;
extern int store_left491;
extern fsoc*store_chunk491;
extern gc491*gc_free491;
typedef struct B480 gc480;
struct B480{T480 object;union {void*flag;gc480*next;} header;};
extern gc480*store480;
extern int store_left480;
extern fsoc*store_chunk480;
extern gc480*gc_free480;
typedef struct B385 gc385;
struct B385{T385 object;union {void*flag;gc385*next;} header;};
extern gc385*store385;
extern int store_left385;
extern fsoc*store_chunk385;
extern gc385*gc_free385;
typedef struct B456 gc456;
struct B456{T456 object;union {void*flag;gc456*next;} header;};
extern gc456*store456;
extern int store_left456;
extern fsoc*store_chunk456;
extern gc456*gc_free456;
typedef struct B462 gc462;
struct B462{T462 object;union {void*flag;gc462*next;} header;};
extern gc462*store462;
extern int store_left462;
extern fsoc*store_chunk462;
extern gc462*gc_free462;
typedef struct B481 gc481;
struct B481{T481 object;union {void*flag;gc481*next;} header;};
extern gc481*store481;
extern int store_left481;
extern fsoc*store_chunk481;
extern gc481*gc_free481;
typedef struct B515 gc515;
struct B515{T515 object;union {void*flag;gc515*next;} header;};
extern gc515*store515;
extern int store_left515;
extern fsoc*store_chunk515;
extern gc515*gc_free515;
typedef struct B516 gc516;
struct B516{T516 object;union {void*flag;gc516*next;} header;};
extern gc516*store516;
extern int store_left516;
extern fsoc*store_chunk516;
extern gc516*gc_free516;
typedef struct B1068 gc1068;
struct B1068{T1068 object;union {void*flag;gc1068*next;} header;};
extern gc1068*store1068;
extern int store_left1068;
extern fsoc*store_chunk1068;
extern gc1068*gc_free1068;
typedef struct B1069 gc1069;
struct B1069{T1069 object;union {void*flag;gc1069*next;} header;};
extern gc1069*store1069;
extern int store_left1069;
extern fsoc*store_chunk1069;
extern gc1069*gc_free1069;
typedef struct B453 gc453;
struct B453{T453 object;union {void*flag;gc453*next;} header;};
extern gc453*store453;
extern int store_left453;
extern fsoc*store_chunk453;
extern gc453*gc_free453;
typedef struct B454 gc454;
struct B454{T454 object;union {void*flag;gc454*next;} header;};
extern gc454*store454;
extern int store_left454;
extern fsoc*store_chunk454;
extern gc454*gc_free454;
typedef struct B1070 gc1070;
struct B1070{T1070 object;union {void*flag;gc1070*next;} header;};
extern gc1070*store1070;
extern int store_left1070;
extern fsoc*store_chunk1070;
extern gc1070*gc_free1070;
typedef struct B391 gc391;
struct B391{T391 object;union {void*flag;gc391*next;} header;};
extern gc391*store391;
extern int store_left391;
extern fsoc*store_chunk391;
extern gc391*gc_free391;
typedef struct B1071 gc1071;
struct B1071{T1071 object;union {void*flag;gc1071*next;} header;};
extern gc1071*store1071;
extern int store_left1071;
extern fsoc*store_chunk1071;
extern gc1071*gc_free1071;
typedef struct B662 gc662;
struct B662{T662 object;union {void*flag;gc662*next;} header;};
extern gc662*store662;
extern int store_left662;
extern fsoc*store_chunk662;
extern gc662*gc_free662;
typedef struct B1072 gc1072;
struct B1072{T1072 object;union {void*flag;gc1072*next;} header;};
extern gc1072*store1072;
extern int store_left1072;
extern fsoc*store_chunk1072;
extern gc1072*gc_free1072;
typedef struct B418 gc418;
struct B418{T418 object;union {void*flag;gc418*next;} header;};
extern gc418*store418;
extern int store_left418;
extern fsoc*store_chunk418;
extern gc418*gc_free418;
typedef struct B388 gc388;
struct B388{T388 object;union {void*flag;gc388*next;} header;};
extern gc388*store388;
extern int store_left388;
extern fsoc*store_chunk388;
extern gc388*gc_free388;
typedef struct B1073 gc1073;
struct B1073{T1073 object;union {void*flag;gc1073*next;} header;};
extern gc1073*store1073;
extern int store_left1073;
extern fsoc*store_chunk1073;
extern gc1073*gc_free1073;
typedef struct B392 gc392;
struct B392{T392 object;union {void*flag;gc392*next;} header;};
extern gc392*store392;
extern int store_left392;
extern fsoc*store_chunk392;
extern gc392*gc_free392;
typedef struct B448 gc448;
struct B448{T448 object;union {void*flag;gc448*next;} header;};
extern gc448*store448;
extern int store_left448;
extern fsoc*store_chunk448;
extern gc448*gc_free448;
typedef struct B517 gc517;
struct B517{T517 object;union {void*flag;gc517*next;} header;};
extern gc517*store517;
extern int store_left517;
extern fsoc*store_chunk517;
extern gc517*gc_free517;
typedef struct B1074 gc1074;
struct B1074{T1074 object;union {void*flag;gc1074*next;} header;};
extern gc1074*store1074;
extern int store_left1074;
extern fsoc*store_chunk1074;
extern gc1074*gc_free1074;
typedef struct B477 gc477;
struct B477{T477 object;union {void*flag;gc477*next;} header;};
extern gc477*store477;
extern int store_left477;
extern fsoc*store_chunk477;
extern gc477*gc_free477;
typedef struct B412 gc412;
struct B412{T412 object;union {void*flag;gc412*next;} header;};
extern gc412*store412;
extern int store_left412;
extern fsoc*store_chunk412;
extern gc412*gc_free412;
typedef struct B398 gc398;
struct B398{T398 object;union {void*flag;gc398*next;} header;};
extern gc398*store398;
extern int store_left398;
extern fsoc*store_chunk398;
extern gc398*gc_free398;
typedef struct B1075 gc1075;
struct B1075{T1075 object;union {void*flag;gc1075*next;} header;};
extern gc1075*store1075;
extern int store_left1075;
extern fsoc*store_chunk1075;
extern gc1075*gc_free1075;
typedef struct B357 gc357;
struct B357{T357 object;union {void*flag;gc357*next;} header;};
extern gc357*store357;
extern int store_left357;
extern fsoc*store_chunk357;
extern gc357*gc_free357;
typedef struct B369 gc369;
struct B369{T369 object;union {void*flag;gc369*next;} header;};
extern gc369*store369;
extern int store_left369;
extern fsoc*store_chunk369;
extern gc369*gc_free369;
typedef struct B362 gc362;
struct B362{T362 object;union {void*flag;gc362*next;} header;};
extern gc362*store362;
extern int store_left362;
extern fsoc*store_chunk362;
extern gc362*gc_free362;
typedef struct B479 gc479;
struct B479{T479 object;union {void*flag;gc479*next;} header;};
extern gc479*store479;
extern int store_left479;
extern fsoc*store_chunk479;
extern gc479*gc_free479;
typedef struct B423 gc423;
struct B423{T423 object;union {void*flag;gc423*next;} header;};
extern gc423*store423;
extern int store_left423;
extern fsoc*store_chunk423;
extern gc423*gc_free423;
typedef struct B465 gc465;
struct B465{T465 object;union {void*flag;gc465*next;} header;};
extern gc465*store465;
extern int store_left465;
extern fsoc*store_chunk465;
extern gc465*gc_free465;
typedef struct B466 gc466;
struct B466{T466 object;union {void*flag;gc466*next;} header;};
extern gc466*store466;
extern int store_left466;
extern fsoc*store_chunk466;
extern gc466*gc_free466;
typedef struct B364 gc364;
struct B364{T364 object;union {void*flag;gc364*next;} header;};
extern gc364*store364;
extern int store_left364;
extern fsoc*store_chunk364;
extern gc364*gc_free364;
typedef struct B404 gc404;
struct B404{T404 object;union {void*flag;gc404*next;} header;};
extern gc404*store404;
extern int store_left404;
extern fsoc*store_chunk404;
extern gc404*gc_free404;
typedef struct B463 gc463;
struct B463{T463 object;union {void*flag;gc463*next;} header;};
extern gc463*store463;
extern int store_left463;
extern fsoc*store_chunk463;
extern gc463*gc_free463;
typedef struct B494 gc494;
struct B494{T494 object;union {void*flag;gc494*next;} header;};
extern gc494*store494;
extern int store_left494;
extern fsoc*store_chunk494;
extern gc494*gc_free494;
typedef struct B484 gc484;
struct B484{T484 object;union {void*flag;gc484*next;} header;};
extern gc484*store484;
extern int store_left484;
extern fsoc*store_chunk484;
extern gc484*gc_free484;
typedef struct B367 gc367;
struct B367{T367 object;union {void*flag;gc367*next;} header;};
extern gc367*store367;
extern int store_left367;
extern fsoc*store_chunk367;
extern gc367*gc_free367;
typedef struct B394 gc394;
struct B394{T394 object;union {void*flag;gc394*next;} header;};
extern gc394*store394;
extern int store_left394;
extern fsoc*store_chunk394;
extern gc394*gc_free394;
typedef struct B464 gc464;
struct B464{T464 object;union {void*flag;gc464*next;} header;};
extern gc464*store464;
extern int store_left464;
extern fsoc*store_chunk464;
extern gc464*gc_free464;
typedef struct B459 gc459;
struct B459{T459 object;union {void*flag;gc459*next;} header;};
extern gc459*store459;
extern int store_left459;
extern fsoc*store_chunk459;
extern gc459*gc_free459;
typedef struct B395 gc395;
struct B395{T395 object;union {void*flag;gc395*next;} header;};
extern gc395*store395;
extern int store_left395;
extern fsoc*store_chunk395;
extern gc395*gc_free395;
typedef struct B657 gc657;
struct B657{T657 object;union {void*flag;gc657*next;} header;};
extern gc657*store657;
extern int store_left657;
extern fsoc*store_chunk657;
extern gc657*gc_free657;
typedef struct B483 gc483;
struct B483{T483 object;union {void*flag;gc483*next;} header;};
extern gc483*store483;
extern int store_left483;
extern fsoc*store_chunk483;
extern gc483*gc_free483;
typedef struct B457 gc457;
struct B457{T457 object;union {void*flag;gc457*next;} header;};
extern gc457*store457;
extern int store_left457;
extern fsoc*store_chunk457;
extern gc457*gc_free457;
typedef struct B396 gc396;
struct B396{T396 object;union {void*flag;gc396*next;} header;};
extern gc396*store396;
extern int store_left396;
extern fsoc*store_chunk396;
extern gc396*gc_free396;
typedef struct B492 gc492;
struct B492{T492 object;union {void*flag;gc492*next;} header;};
extern gc492*store492;
extern int store_left492;
extern fsoc*store_chunk492;
extern gc492*gc_free492;
typedef struct B514 gc514;
struct B514{T514 object;union {void*flag;gc514*next;} header;};
extern gc514*store514;
extern int store_left514;
extern fsoc*store_chunk514;
extern gc514*gc_free514;
typedef struct B513 gc513;
struct B513{T513 object;union {void*flag;gc513*next;} header;};
extern gc513*store513;
extern int store_left513;
extern fsoc*store_chunk513;
extern gc513*gc_free513;
typedef struct B509 gc509;
struct B509{T509 object;union {void*flag;gc509*next;} header;};
extern gc509*store509;
extern int store_left509;
extern fsoc*store_chunk509;
extern gc509*gc_free509;
typedef struct B510 gc510;
struct B510{T510 object;union {void*flag;gc510*next;} header;};
extern gc510*store510;
extern int store_left510;
extern fsoc*store_chunk510;
extern gc510*gc_free510;
typedef struct B511 gc511;
struct B511{T511 object;union {void*flag;gc511*next;} header;};
extern gc511*store511;
extern int store_left511;
extern fsoc*store_chunk511;
extern gc511*gc_free511;
typedef struct B512 gc512;
struct B512{T512 object;union {void*flag;gc512*next;} header;};
extern gc512*store512;
extern int store_left512;
extern fsoc*store_chunk512;
extern gc512*gc_free512;
typedef struct B508 gc508;
struct B508{T508 object;union {void*flag;gc508*next;} header;};
extern gc508*store508;
extern int store_left508;
extern fsoc*store_chunk508;
extern gc508*gc_free508;
typedef struct B374 gc374;
struct B374{T374 object;union {void*flag;gc374*next;} header;};
extern gc374*store374;
extern int store_left374;
extern fsoc*store_chunk374;
extern gc374*gc_free374;
typedef struct B397 gc397;
struct B397{T397 object;union {void*flag;gc397*next;} header;};
extern gc397*store397;
extern int store_left397;
extern fsoc*store_chunk397;
extern gc397*gc_free397;
typedef struct B504 gc504;
struct B504{T504 object;union {void*flag;gc504*next;} header;};
extern gc504*store504;
extern int store_left504;
extern fsoc*store_chunk504;
extern gc504*gc_free504;
typedef struct B505 gc505;
struct B505{T505 object;union {void*flag;gc505*next;} header;};
extern gc505*store505;
extern int store_left505;
extern fsoc*store_chunk505;
extern gc505*gc_free505;
typedef struct B506 gc506;
struct B506{T506 object;union {void*flag;gc506*next;} header;};
extern gc506*store506;
extern int store_left506;
extern fsoc*store_chunk506;
extern gc506*gc_free506;
typedef struct B507 gc507;
struct B507{T507 object;union {void*flag;gc507*next;} header;};
extern gc507*store507;
extern int store_left507;
extern fsoc*store_chunk507;
extern gc507*gc_free507;
typedef struct B402 gc402;
struct B402{T402 object;union {void*flag;gc402*next;} header;};
extern gc402*store402;
extern int store_left402;
extern fsoc*store_chunk402;
extern gc402*gc_free402;
typedef struct B503 gc503;
struct B503{T503 object;union {void*flag;gc503*next;} header;};
extern gc503*store503;
extern int store_left503;
extern fsoc*store_chunk503;
extern gc503*gc_free503;
typedef struct B500 gc500;
struct B500{T500 object;union {void*flag;gc500*next;} header;};
extern gc500*store500;
extern int store_left500;
extern fsoc*store_chunk500;
extern gc500*gc_free500;
typedef struct B501 gc501;
struct B501{T501 object;union {void*flag;gc501*next;} header;};
extern gc501*store501;
extern int store_left501;
extern fsoc*store_chunk501;
extern gc501*gc_free501;
typedef struct B502 gc502;
struct B502{T502 object;union {void*flag;gc502*next;} header;};
extern gc502*store502;
extern int store_left502;
extern fsoc*store_chunk502;
extern gc502*gc_free502;
typedef struct B499 gc499;
struct B499{T499 object;union {void*flag;gc499*next;} header;};
extern gc499*store499;
extern int store_left499;
extern fsoc*store_chunk499;
extern gc499*gc_free499;
typedef struct B458 gc458;
struct B458{T458 object;union {void*flag;gc458*next;} header;};
extern gc458*store458;
extern int store_left458;
extern fsoc*store_chunk458;
extern gc458*gc_free458;
typedef struct B493 gc493;
struct B493{T493 object;union {void*flag;gc493*next;} header;};
extern gc493*store493;
extern int store_left493;
extern fsoc*store_chunk493;
extern gc493*gc_free493;
typedef struct B283 gc283;
struct B283{T283 object;union {void*flag;gc283*next;} header;};
extern gc283*store283;
extern int store_left283;
extern fsoc*store_chunk283;
extern gc283*gc_free283;
typedef struct B461 gc461;
struct B461{T461 object;union {void*flag;gc461*next;} header;};
extern gc461*store461;
extern int store_left461;
extern fsoc*store_chunk461;
extern gc461*gc_free461;
typedef struct B460 gc460;
struct B460{T460 object;union {void*flag;gc460*next;} header;};
extern gc460*store460;
extern int store_left460;
extern fsoc*store_chunk460;
extern gc460*gc_free460;
typedef struct B1076 gc1076;
struct B1076{T1076 object;union {void*flag;gc1076*next;} header;};
extern gc1076*store1076;
extern int store_left1076;
extern fsoc*store_chunk1076;
extern gc1076*gc_free1076;
typedef struct B419 gc419;
struct B419{T419 object;union {void*flag;gc419*next;} header;};
extern gc419*store419;
extern int store_left419;
extern fsoc*store_chunk419;
extern gc419*gc_free419;
typedef struct B428 gc428;
struct B428{T428 object;union {void*flag;gc428*next;} header;};
extern gc428*store428;
extern int store_left428;
extern fsoc*store_chunk428;
extern gc428*gc_free428;
typedef struct B748 gc748;
struct B748{T748 object;union {void*flag;gc748*next;} header;};
extern gc748*store748;
extern int store_left748;
extern fsoc*store_chunk748;
extern gc748*gc_free748;
typedef struct B455 gc455;
struct B455{T455 object;union {void*flag;gc455*next;} header;};
extern gc455*store455;
extern int store_left455;
extern fsoc*store_chunk455;
extern gc455*gc_free455;
typedef struct B358 gc358;
struct B358{T358 object;union {void*flag;gc358*next;} header;};
extern gc358*store358;
extern int store_left358;
extern fsoc*store_chunk358;
extern gc358*gc_free358;
typedef struct B410 gc410;
struct B410{T410 object;union {void*flag;gc410*next;} header;};
extern gc410*store410;
extern int store_left410;
extern fsoc*store_chunk410;
extern gc410*gc_free410;
typedef struct B393 gc393;
struct B393{T393 object;union {void*flag;gc393*next;} header;};
extern gc393*store393;
extern int store_left393;
extern fsoc*store_chunk393;
extern gc393*gc_free393;
typedef struct B1077 gc1077;
struct B1077{T1077 object;union {void*flag;gc1077*next;} header;};
extern gc1077*store1077;
extern int store_left1077;
extern fsoc*store_chunk1077;
extern gc1077*gc_free1077;
typedef struct B1078 gc1078;
struct B1078{T1078 object;union {void*flag;gc1078*next;} header;};
extern gc1078*store1078;
extern int store_left1078;
extern fsoc*store_chunk1078;
extern gc1078*gc_free1078;
typedef struct B1079 gc1079;
struct B1079{T1079 object;union {void*flag;gc1079*next;} header;};
extern gc1079*store1079;
extern int store_left1079;
extern fsoc*store_chunk1079;
extern gc1079*gc_free1079;
typedef struct B1080 gc1080;
struct B1080{T1080 object;union {void*flag;gc1080*next;} header;};
extern gc1080*store1080;
extern int store_left1080;
extern fsoc*store_chunk1080;
extern gc1080*gc_free1080;
extern na_env na_env1081;
extern na_env na_env1082;
extern na_env na_env1083;
typedef struct B1084 gc1084;
struct B1084{T1084 object;union {void*flag;gc1084*next;} header;};
extern gc1084*store1084;
extern int store_left1084;
extern fsoc*store_chunk1084;
extern gc1084*gc_free1084;
typedef struct B530 gc530;
struct B530{T530 object;union {void*flag;gc530*next;} header;};
extern gc530*store530;
extern int store_left530;
extern fsoc*store_chunk530;
extern gc530*gc_free530;
typedef struct B1085 gc1085;
struct B1085{T1085 object;union {void*flag;gc1085*next;} header;};
extern gc1085*store1085;
extern int store_left1085;
extern fsoc*store_chunk1085;
extern gc1085*gc_free1085;
typedef struct B1087 gc1087;
struct B1087{T1087 object;union {void*flag;gc1087*next;} header;};
extern gc1087*store1087;
extern int store_left1087;
extern fsoc*store_chunk1087;
extern gc1087*gc_free1087;
typedef struct B430 gc430;
struct B430{T430 object;union {void*flag;gc430*next;} header;};
extern gc430*store430;
extern int store_left430;
extern fsoc*store_chunk430;
extern gc430*gc_free430;
typedef struct B422 gc422;
struct B422{T422 object;union {void*flag;gc422*next;} header;};
extern gc422*store422;
extern int store_left422;
extern fsoc*store_chunk422;
extern gc422*gc_free422;

#define gc_mark1088(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1091(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1093 gc1093;
struct B1093{T1093 object;union {void*flag;gc1093*next;} header;};
extern gc1093*store1093;
extern int store_left1093;
extern fsoc*store_chunk1093;
extern gc1093*gc_free1093;
typedef struct B1094 gc1094;
struct B1094{T1094 object;union {void*flag;gc1094*next;} header;};
extern gc1094*store1094;
extern int store_left1094;
extern fsoc*store_chunk1094;
extern gc1094*gc_free1094;
typedef struct B450 gc450;
struct B450{T450 object;union {void*flag;gc450*next;} header;};
extern gc450*store450;
extern int store_left450;
extern fsoc*store_chunk450;
extern gc450*gc_free450;
typedef struct B427 gc427;
struct B427{T427 object;union {void*flag;gc427*next;} header;};
extern gc427*store427;
extern int store_left427;
extern fsoc*store_chunk427;
extern gc427*gc_free427;
typedef struct B447 gc447;
struct B447{T447 object;union {void*flag;gc447*next;} header;};
extern gc447*store447;
extern int store_left447;
extern fsoc*store_chunk447;
extern gc447*gc_free447;
typedef struct B1095 gc1095;
struct B1095{T1095 object;union {void*flag;gc1095*next;} header;};
extern gc1095*store1095;
extern int store_left1095;
extern fsoc*store_chunk1095;
extern gc1095*gc_free1095;
typedef struct B425 gc425;
struct B425{T425 object;union {void*flag;gc425*next;} header;};
extern gc425*store425;
extern int store_left425;
extern fsoc*store_chunk425;
extern gc425*gc_free425;
typedef struct B1096 gc1096;
struct B1096{T1096 object;union {void*flag;gc1096*next;} header;};
extern gc1096*store1096;
extern int store_left1096;
extern fsoc*store_chunk1096;
extern gc1096*gc_free1096;
extern na_env na_env1097;
typedef struct B1098 gc1098;
struct B1098{T1098 object;union {void*flag;gc1098*next;} header;};
extern gc1098*store1098;
extern int store_left1098;
extern fsoc*store_chunk1098;
extern gc1098*gc_free1098;
typedef struct B1099 gc1099;
struct B1099{T1099 object;union {void*flag;gc1099*next;} header;};
extern gc1099*store1099;
extern int store_left1099;
extern fsoc*store_chunk1099;
extern gc1099*gc_free1099;
extern na_env na_env1100;
typedef struct B1101 gc1101;
struct B1101{T1101 object;union {void*flag;gc1101*next;} header;};
extern gc1101*store1101;
extern int store_left1101;
extern fsoc*store_chunk1101;
extern gc1101*gc_free1101;
extern na_env na_env1102;
typedef struct B1103 gc1103;
struct B1103{T1103 object;union {void*flag;gc1103*next;} header;};
extern gc1103*store1103;
extern int store_left1103;
extern fsoc*store_chunk1103;
extern gc1103*gc_free1103;
typedef struct B1106 gc1106;
struct B1106{T1106 object;union {void*flag;gc1106*next;} header;};
extern gc1106*store1106;
extern int store_left1106;
extern fsoc*store_chunk1106;
extern gc1106*gc_free1106;
typedef struct B1107 gc1107;
struct B1107{T1107 object;union {void*flag;gc1107*next;} header;};
extern gc1107*store1107;
extern int store_left1107;
extern fsoc*store_chunk1107;
extern gc1107*gc_free1107;
typedef struct B1110 gc1110;
struct B1110{T1110 object;union {void*flag;gc1110*next;} header;};
extern gc1110*store1110;
extern int store_left1110;
extern fsoc*store_chunk1110;
extern gc1110*gc_free1110;
typedef struct B1111 gc1111;
struct B1111{T1111 object;union {void*flag;gc1111*next;} header;};
extern gc1111*store1111;
extern int store_left1111;
extern fsoc*store_chunk1111;
extern gc1111*gc_free1111;
typedef struct B1112 gc1112;
struct B1112{T1112 object;union {void*flag;gc1112*next;} header;};
extern gc1112*store1112;
extern int store_left1112;
extern fsoc*store_chunk1112;
extern gc1112*gc_free1112;
typedef struct B1113 gc1113;
struct B1113{T1113 object;union {void*flag;gc1113*next;} header;};
extern gc1113*store1113;
extern int store_left1113;
extern fsoc*store_chunk1113;
extern gc1113*gc_free1113;
typedef struct B1114 gc1114;
struct B1114{T1114 object;union {void*flag;gc1114*next;} header;};
extern gc1114*store1114;
extern int store_left1114;
extern fsoc*store_chunk1114;
extern gc1114*gc_free1114;
typedef struct B1115 gc1115;
struct B1115{T1115 object;union {void*flag;gc1115*next;} header;};
extern gc1115*store1115;
extern int store_left1115;
extern fsoc*store_chunk1115;
extern gc1115*gc_free1115;
typedef struct B523 gc523;
struct B523{T523 object;union {void*flag;gc523*next;} header;};
extern gc523*store523;
extern int store_left523;
extern fsoc*store_chunk523;
extern gc523*gc_free523;
typedef struct B1117 gc1117;
struct B1117{T1117 object;union {void*flag;gc1117*next;} header;};
extern gc1117*store1117;
extern int store_left1117;
extern fsoc*store_chunk1117;
extern gc1117*gc_free1117;
typedef struct B1121 gc1121;
struct B1121{T1121 object;union {void*flag;gc1121*next;} header;};
extern gc1121*store1121;
extern int store_left1121;
extern fsoc*store_chunk1121;
extern gc1121*gc_free1121;
typedef struct B1122 gc1122;
struct B1122{T1122 object;union {void*flag;gc1122*next;} header;};
extern gc1122*store1122;
extern int store_left1122;
extern fsoc*store_chunk1122;
extern gc1122*gc_free1122;
typedef struct B1123 gc1123;
struct B1123{T1123 object;union {void*flag;gc1123*next;} header;};
extern gc1123*store1123;
extern int store_left1123;
extern fsoc*store_chunk1123;
extern gc1123*gc_free1123;
typedef struct B1124 gc1124;
struct B1124{T1124 object;union {void*flag;gc1124*next;} header;};
extern gc1124*store1124;
extern int store_left1124;
extern fsoc*store_chunk1124;
extern gc1124*gc_free1124;
typedef struct B1125 gc1125;
struct B1125{T1125 object;union {void*flag;gc1125*next;} header;};
extern gc1125*store1125;
extern int store_left1125;
extern fsoc*store_chunk1125;
extern gc1125*gc_free1125;
typedef struct B525 gc525;
struct B525{T525 object;union {void*flag;gc525*next;} header;};
extern gc525*store525;
extern int store_left525;
extern fsoc*store_chunk525;
extern gc525*gc_free525;
typedef struct B1126 gc1126;
struct B1126{T1126 object;union {void*flag;gc1126*next;} header;};
extern gc1126*store1126;
extern int store_left1126;
extern fsoc*store_chunk1126;
extern gc1126*gc_free1126;
typedef struct B1127 gc1127;
struct B1127{T1127 object;union {void*flag;gc1127*next;} header;};
extern gc1127*store1127;
extern int store_left1127;
extern fsoc*store_chunk1127;
extern gc1127*gc_free1127;
typedef struct B558 gc558;
struct B558{T558 object;union {void*flag;gc558*next;} header;};
extern gc558*store558;
extern int store_left558;
extern fsoc*store_chunk558;
extern gc558*gc_free558;
typedef struct B1129 gc1129;
struct B1129{T1129 object;union {void*flag;gc1129*next;} header;};
extern gc1129*store1129;
extern int store_left1129;
extern fsoc*store_chunk1129;
extern gc1129*gc_free1129;
typedef struct B1130 gc1130;
struct B1130{T1130 object;union {void*flag;gc1130*next;} header;};
extern gc1130*store1130;
extern int store_left1130;
extern fsoc*store_chunk1130;
extern gc1130*gc_free1130;
typedef struct B1131 gc1131;
struct B1131{T1131 object;union {void*flag;gc1131*next;} header;};
extern gc1131*store1131;
extern int store_left1131;
extern fsoc*store_chunk1131;
extern gc1131*gc_free1131;
typedef struct B400 gc400;
struct B400{T400 object;union {void*flag;gc400*next;} header;};
extern gc400*store400;
extern int store_left400;
extern fsoc*store_chunk400;
extern gc400*gc_free400;
extern na_env na_env1132;
typedef struct B1133 gc1133;
struct B1133{T1133 object;union {void*flag;gc1133*next;} header;};
extern gc1133*store1133;
extern int store_left1133;
extern fsoc*store_chunk1133;
extern gc1133*gc_free1133;
typedef struct B1134 gc1134;
struct B1134{T1134 object;union {void*flag;gc1134*next;} header;};
extern gc1134*store1134;
extern int store_left1134;
extern fsoc*store_chunk1134;
extern gc1134*gc_free1134;
extern na_env na_env1135;
typedef struct B1136 gc1136;
struct B1136{T1136 object;union {void*flag;gc1136*next;} header;};
extern gc1136*store1136;
extern int store_left1136;
extern fsoc*store_chunk1136;
extern gc1136*gc_free1136;
typedef struct B1137 gc1137;
struct B1137{T1137 object;union {void*flag;gc1137*next;} header;};
extern gc1137*store1137;
extern int store_left1137;
extern fsoc*store_chunk1137;
extern gc1137*gc_free1137;
typedef struct B633 gc633;
struct B633{T633 object;union {void*flag;gc633*next;} header;};
extern gc633*store633;
extern int store_left633;
extern fsoc*store_chunk633;
extern gc633*gc_free633;
typedef struct B1138 gc1138;
struct B1138{T1138 object;union {void*flag;gc1138*next;} header;};
extern gc1138*store1138;
extern int store_left1138;
extern fsoc*store_chunk1138;
extern gc1138*gc_free1138;
typedef struct B1139 gc1139;
struct B1139{T1139 object;union {void*flag;gc1139*next;} header;};
extern gc1139*store1139;
extern int store_left1139;
extern fsoc*store_chunk1139;
extern gc1139*gc_free1139;
typedef struct B1140 gc1140;
struct B1140{T1140 object;union {void*flag;gc1140*next;} header;};
extern gc1140*store1140;
extern int store_left1140;
extern fsoc*store_chunk1140;
extern gc1140*gc_free1140;
typedef struct B1141 gc1141;
struct B1141{T1141 object;union {void*flag;gc1141*next;} header;};
extern gc1141*store1141;
extern int store_left1141;
extern fsoc*store_chunk1141;
extern gc1141*gc_free1141;
typedef struct B1146 gc1146;
struct B1146{T1146 object;union {void*flag;gc1146*next;} header;};
extern gc1146*store1146;
extern int store_left1146;
extern fsoc*store_chunk1146;
extern gc1146*gc_free1146;
typedef struct B1147 gc1147;
struct B1147{T1147 object;union {void*flag;gc1147*next;} header;};
extern gc1147*store1147;
extern int store_left1147;
extern fsoc*store_chunk1147;
extern gc1147*gc_free1147;
typedef struct B1148 gc1148;
struct B1148{T1148 object;union {void*flag;gc1148*next;} header;};
extern gc1148*store1148;
extern int store_left1148;
extern fsoc*store_chunk1148;
extern gc1148*gc_free1148;
typedef struct B1149 gc1149;
struct B1149{T1149 object;union {void*flag;gc1149*next;} header;};
extern gc1149*store1149;
extern int store_left1149;
extern fsoc*store_chunk1149;
extern gc1149*gc_free1149;
typedef struct B1150 gc1150;
struct B1150{T1150 object;union {void*flag;gc1150*next;} header;};
extern gc1150*store1150;
extern int store_left1150;
extern fsoc*store_chunk1150;
extern gc1150*gc_free1150;
typedef struct B1151 gc1151;
struct B1151{T1151 object;union {void*flag;gc1151*next;} header;};
extern gc1151*store1151;
extern int store_left1151;
extern fsoc*store_chunk1151;
extern gc1151*gc_free1151;
extern na_env na_env1152;
typedef struct B1153 gc1153;
struct B1153{T1153 object;union {void*flag;gc1153*next;} header;};
extern gc1153*store1153;
extern int store_left1153;
extern fsoc*store_chunk1153;
extern gc1153*gc_free1153;
typedef struct B1154 gc1154;
struct B1154{T1154 object;union {void*flag;gc1154*next;} header;};
extern gc1154*store1154;
extern int store_left1154;
extern fsoc*store_chunk1154;
extern gc1154*gc_free1154;
extern na_env na_env1155;
extern na_env na_env1156;
typedef struct B1157 gc1157;
struct B1157{T1157 object;union {void*flag;gc1157*next;} header;};
extern gc1157*store1157;
extern int store_left1157;
extern fsoc*store_chunk1157;
extern gc1157*gc_free1157;
typedef struct B1160 gc1160;
struct B1160{T1160 object;union {void*flag;gc1160*next;} header;};
extern gc1160*store1160;
extern int store_left1160;
extern fsoc*store_chunk1160;
extern gc1160*gc_free1160;
typedef struct B1161 gc1161;
struct B1161{T1161 object;union {void*flag;gc1161*next;} header;};
extern gc1161*store1161;
extern int store_left1161;
extern fsoc*store_chunk1161;
extern gc1161*gc_free1161;
typedef struct B1162 gc1162;
struct B1162{T1162 object;union {void*flag;gc1162*next;} header;};
extern gc1162*store1162;
extern int store_left1162;
extern fsoc*store_chunk1162;
extern gc1162*gc_free1162;
typedef struct B406 gc406;
struct B406{T406 object;union {void*flag;gc406*next;} header;};
extern gc406*store406;
extern int store_left406;
extern fsoc*store_chunk406;
extern gc406*gc_free406;
typedef struct B1163 gc1163;
struct B1163{T1163 object;union {void*flag;gc1163*next;} header;};
extern gc1163*store1163;
extern int store_left1163;
extern fsoc*store_chunk1163;
extern gc1163*gc_free1163;
typedef struct B559 gc559;
struct B559{T559 object;union {void*flag;gc559*next;} header;};
extern gc559*store559;
extern int store_left559;
extern fsoc*store_chunk559;
extern gc559*gc_free559;
typedef struct B1164 gc1164;
struct B1164{T1164 object;union {void*flag;gc1164*next;} header;};
extern gc1164*store1164;
extern int store_left1164;
extern fsoc*store_chunk1164;
extern gc1164*gc_free1164;
typedef struct B1165 gc1165;
struct B1165{T1165 object;union {void*flag;gc1165*next;} header;};
extern gc1165*store1165;
extern int store_left1165;
extern fsoc*store_chunk1165;
extern gc1165*gc_free1165;
extern na_env na_env1166;
extern na_env na_env1167;
typedef struct B1168 gc1168;
struct B1168{T1168 object;union {void*flag;gc1168*next;} header;};
extern gc1168*store1168;
extern int store_left1168;
extern fsoc*store_chunk1168;
extern gc1168*gc_free1168;
typedef struct B1169 gc1169;
struct B1169{T1169 object;union {void*flag;gc1169*next;} header;};
extern gc1169*store1169;
extern int store_left1169;
extern fsoc*store_chunk1169;
extern gc1169*gc_free1169;
typedef struct B1171 gc1171;
struct B1171{T1171 object;union {void*flag;gc1171*next;} header;};
extern gc1171*store1171;
extern int store_left1171;
extern fsoc*store_chunk1171;
extern gc1171*gc_free1171;
extern na_env na_env1173;
typedef struct B1174 gc1174;
struct B1174{T1174 object;union {void*flag;gc1174*next;} header;};
extern gc1174*store1174;
extern int store_left1174;
extern fsoc*store_chunk1174;
extern gc1174*gc_free1174;
typedef struct B1175 gc1175;
struct B1175{T1175 object;union {void*flag;gc1175*next;} header;};
extern gc1175*store1175;
extern int store_left1175;
extern fsoc*store_chunk1175;
extern gc1175*gc_free1175;
extern na_env na_env1176;
typedef struct B1177 gc1177;
struct B1177{T1177 object;union {void*flag;gc1177*next;} header;};
extern gc1177*store1177;
extern int store_left1177;
extern fsoc*store_chunk1177;
extern gc1177*gc_free1177;
extern na_env na_env1179;
extern na_env na_env1180;
typedef struct B1181 gc1181;
struct B1181{T1181 object;union {void*flag;gc1181*next;} header;};
extern gc1181*store1181;
extern int store_left1181;
extern fsoc*store_chunk1181;
extern gc1181*gc_free1181;
extern na_env na_env1183;
typedef struct B1184 gc1184;
struct B1184{T1184 object;union {void*flag;gc1184*next;} header;};
extern gc1184*store1184;
extern int store_left1184;
extern fsoc*store_chunk1184;
extern gc1184*gc_free1184;
typedef struct B1185 gc1185;
struct B1185{T1185 object;union {void*flag;gc1185*next;} header;};
extern gc1185*store1185;
extern int store_left1185;
extern fsoc*store_chunk1185;
extern gc1185*gc_free1185;
typedef struct B1187 gc1187;
struct B1187{T1187 object;union {void*flag;gc1187*next;} header;};
extern gc1187*store1187;
extern int store_left1187;
extern fsoc*store_chunk1187;
extern gc1187*gc_free1187;
typedef struct B771 gc771;
struct B771{T771 object;union {void*flag;gc771*next;} header;};
extern gc771*store771;
extern int store_left771;
extern fsoc*store_chunk771;
extern gc771*gc_free771;
typedef struct B1189 gc1189;
struct B1189{T1189 object;union {void*flag;gc1189*next;} header;};
extern gc1189*store1189;
extern int store_left1189;
extern fsoc*store_chunk1189;
extern gc1189*gc_free1189;
typedef struct B1190 gc1190;
struct B1190{T1190 object;union {void*flag;gc1190*next;} header;};
extern gc1190*store1190;
extern int store_left1190;
extern fsoc*store_chunk1190;
extern gc1190*gc_free1190;
typedef struct B1191 gc1191;
struct B1191{T1191 object;union {void*flag;gc1191*next;} header;};
extern gc1191*store1191;
extern int store_left1191;
extern fsoc*store_chunk1191;
extern gc1191*gc_free1191;
typedef struct B1192 gc1192;
struct B1192{T1192 object;union {void*flag;gc1192*next;} header;};
extern gc1192*store1192;
extern int store_left1192;
extern fsoc*store_chunk1192;
extern gc1192*gc_free1192;
extern na_env na_env1193;
typedef struct B1194 gc1194;
struct B1194{T1194 object;union {void*flag;gc1194*next;} header;};
extern gc1194*store1194;
extern int store_left1194;
extern fsoc*store_chunk1194;
extern gc1194*gc_free1194;
typedef struct B1195 gc1195;
struct B1195{T1195 object;union {void*flag;gc1195*next;} header;};
extern gc1195*store1195;
extern int store_left1195;
extern fsoc*store_chunk1195;
extern gc1195*gc_free1195;
extern na_env na_env1196;
extern na_env na_env1197;
typedef struct B1198 gc1198;
struct B1198{T1198 object;union {void*flag;gc1198*next;} header;};
extern gc1198*store1198;
extern int store_left1198;
extern fsoc*store_chunk1198;
extern gc1198*gc_free1198;
typedef struct B1199 gc1199;
struct B1199{T1199 object;union {void*flag;gc1199*next;} header;};
extern gc1199*store1199;
extern int store_left1199;
extern fsoc*store_chunk1199;
extern gc1199*gc_free1199;
typedef struct B1200 gc1200;
struct B1200{T1200 object;union {void*flag;gc1200*next;} header;};
extern gc1200*store1200;
extern int store_left1200;
extern fsoc*store_chunk1200;
extern gc1200*gc_free1200;
typedef struct B1201 gc1201;
struct B1201{T1201 object;union {void*flag;gc1201*next;} header;};
extern gc1201*store1201;
extern int store_left1201;
extern fsoc*store_chunk1201;
extern gc1201*gc_free1201;
extern na_env na_env1202;
typedef struct B1203 gc1203;
struct B1203{T1203 object;union {void*flag;gc1203*next;} header;};
extern gc1203*store1203;
extern int store_left1203;
extern fsoc*store_chunk1203;
extern gc1203*gc_free1203;
extern na_env na_env1204;
typedef struct B640 gc640;
struct B640{T640 object;union {void*flag;gc640*next;} header;};
extern gc640*store640;
extern int store_left640;
extern fsoc*store_chunk640;
extern gc640*gc_free640;
typedef struct B648 gc648;
struct B648{T648 object;union {void*flag;gc648*next;} header;};
extern gc648*store648;
extern int store_left648;
extern fsoc*store_chunk648;
extern gc648*gc_free648;
typedef struct B560 gc560;
struct B560{T560 object;union {void*flag;gc560*next;} header;};
extern gc560*store560;
extern int store_left560;
extern fsoc*store_chunk560;
extern gc560*gc_free560;
typedef struct B653 gc653;
struct B653{T653 object;union {void*flag;gc653*next;} header;};
extern gc653*store653;
extern int store_left653;
extern fsoc*store_chunk653;
extern gc653*gc_free653;
typedef struct B650 gc650;
struct B650{T650 object;union {void*flag;gc650*next;} header;};
extern gc650*store650;
extern int store_left650;
extern fsoc*store_chunk650;
extern gc650*gc_free650;
typedef struct B651 gc651;
struct B651{T651 object;union {void*flag;gc651*next;} header;};
extern gc651*store651;
extern int store_left651;
extern fsoc*store_chunk651;
extern gc651*gc_free651;
typedef struct B646 gc646;
struct B646{T646 object;union {void*flag;gc646*next;} header;};
extern gc646*store646;
extern int store_left646;
extern fsoc*store_chunk646;
extern gc646*gc_free646;
typedef struct B649 gc649;
struct B649{T649 object;union {void*flag;gc649*next;} header;};
extern gc649*store649;
extern int store_left649;
extern fsoc*store_chunk649;
extern gc649*gc_free649;
typedef struct B647 gc647;
struct B647{T647 object;union {void*flag;gc647*next;} header;};
extern gc647*store647;
extern int store_left647;
extern fsoc*store_chunk647;
extern gc647*gc_free647;
typedef struct B652 gc652;
struct B652{T652 object;union {void*flag;gc652*next;} header;};
extern gc652*store652;
extern int store_left652;
extern fsoc*store_chunk652;
extern gc652*gc_free652;
typedef struct B643 gc643;
struct B643{T643 object;union {void*flag;gc643*next;} header;};
extern gc643*store643;
extern int store_left643;
extern fsoc*store_chunk643;
extern gc643*gc_free643;
typedef struct B642 gc642;
struct B642{T642 object;union {void*flag;gc642*next;} header;};
extern gc642*store642;
extern int store_left642;
extern fsoc*store_chunk642;
extern gc642*gc_free642;
typedef struct B645 gc645;
struct B645{T645 object;union {void*flag;gc645*next;} header;};
extern gc645*store645;
extern int store_left645;
extern fsoc*store_chunk645;
extern gc645*gc_free645;
typedef struct B1205 gc1205;
struct B1205{T1205 object;union {void*flag;gc1205*next;} header;};
extern gc1205*store1205;
extern int store_left1205;
extern fsoc*store_chunk1205;
extern gc1205*gc_free1205;
typedef struct B1206 gc1206;
struct B1206{T1206 object;union {void*flag;gc1206*next;} header;};
extern gc1206*store1206;
extern int store_left1206;
extern fsoc*store_chunk1206;
extern gc1206*gc_free1206;
typedef struct B1207 gc1207;
struct B1207{T1207 object;union {void*flag;gc1207*next;} header;};
extern gc1207*store1207;
extern int store_left1207;
extern fsoc*store_chunk1207;
extern gc1207*gc_free1207;
extern na_env na_env1208;
typedef struct B688 gc688;
struct B688{T688 object;union {void*flag;gc688*next;} header;};
extern gc688*store688;
extern int store_left688;
extern fsoc*store_chunk688;
extern gc688*gc_free688;
extern na_env na_env1209;
extern na_env na_env1210;
extern na_env na_env1211;
extern na_env na_env1212;
extern na_env na_env1213;
typedef struct B1214 gc1214;
struct B1214{T1214 object;union {void*flag;gc1214*next;} header;};
extern gc1214*store1214;
extern int store_left1214;
extern fsoc*store_chunk1214;
extern gc1214*gc_free1214;
extern na_env na_env1215;
extern na_env na_env1216;
extern na_env na_env1217;
typedef struct B1218 gc1218;
struct B1218{T1218 object;union {void*flag;gc1218*next;} header;};
extern gc1218*store1218;
extern int store_left1218;
extern fsoc*store_chunk1218;
extern gc1218*gc_free1218;
extern na_env na_env1219;
typedef struct B730 gc730;
struct B730{T730 object;union {void*flag;gc730*next;} header;};
extern gc730*store730;
extern int store_left730;
extern fsoc*store_chunk730;
extern gc730*gc_free730;
typedef struct B1220 gc1220;
struct B1220{T1220 object;union {void*flag;gc1220*next;} header;};
extern gc1220*store1220;
extern int store_left1220;
extern fsoc*store_chunk1220;
extern gc1220*gc_free1220;
typedef struct B379 gc379;
struct B379{T379 object;union {void*flag;gc379*next;} header;};
extern gc379*store379;
extern int store_left379;
extern fsoc*store_chunk379;
extern gc379*gc_free379;
typedef struct B676 gc676;
struct B676{T676 object;union {void*flag;gc676*next;} header;};
extern gc676*store676;
extern int store_left676;
extern fsoc*store_chunk676;
extern gc676*gc_free676;
typedef struct B666 gc666;
struct B666{T666 object;union {void*flag;gc666*next;} header;};
extern gc666*store666;
extern int store_left666;
extern fsoc*store_chunk666;
extern gc666*gc_free666;
typedef struct B1221 gc1221;
struct B1221{T1221 object;union {void*flag;gc1221*next;} header;};
extern gc1221*store1221;
extern int store_left1221;
extern fsoc*store_chunk1221;
extern gc1221*gc_free1221;
typedef struct B1222 gc1222;
struct B1222{T1222 object;union {void*flag;gc1222*next;} header;};
extern gc1222*store1222;
extern int store_left1222;
extern fsoc*store_chunk1222;
extern gc1222*gc_free1222;
typedef struct B671 gc671;
struct B671{T671 object;union {void*flag;gc671*next;} header;};
extern gc671*store671;
extern int store_left671;
extern fsoc*store_chunk671;
extern gc671*gc_free671;
typedef struct B1223 gc1223;
struct B1223{T1223 object;union {void*flag;gc1223*next;} header;};
extern gc1223*store1223;
extern int store_left1223;
extern fsoc*store_chunk1223;
extern gc1223*gc_free1223;
typedef struct B1224 gc1224;
struct B1224{T1224 object;union {void*flag;gc1224*next;} header;};
extern gc1224*store1224;
extern int store_left1224;
extern fsoc*store_chunk1224;
extern gc1224*gc_free1224;
typedef struct B1225 gc1225;
struct B1225{T1225 object;union {void*flag;gc1225*next;} header;};
extern gc1225*store1225;
extern int store_left1225;
extern fsoc*store_chunk1225;
extern gc1225*gc_free1225;
extern na_env na_env1227;
extern na_env na_env1228;
typedef struct B1229 gc1229;
struct B1229{T1229 object;union {void*flag;gc1229*next;} header;};
extern gc1229*store1229;
extern int store_left1229;
extern fsoc*store_chunk1229;
extern gc1229*gc_free1229;
typedef struct B1230 gc1230;
struct B1230{T1230 object;union {void*flag;gc1230*next;} header;};
extern gc1230*store1230;
extern int store_left1230;
extern fsoc*store_chunk1230;
extern gc1230*gc_free1230;
extern na_env na_env1231;
typedef struct B1232 gc1232;
struct B1232{T1232 object;union {void*flag;gc1232*next;} header;};
extern gc1232*store1232;
extern int store_left1232;
extern fsoc*store_chunk1232;
extern gc1232*gc_free1232;
typedef struct B1233 gc1233;
struct B1233{T1233 object;union {void*flag;gc1233*next;} header;};
extern gc1233*store1233;
extern int store_left1233;
extern fsoc*store_chunk1233;
extern gc1233*gc_free1233;
extern na_env na_env1234;
typedef struct B1235 gc1235;
struct B1235{T1235 object;union {void*flag;gc1235*next;} header;};
extern gc1235*store1235;
extern int store_left1235;
extern fsoc*store_chunk1235;
extern gc1235*gc_free1235;
extern na_env na_env1237;
extern na_env na_env1238;
extern na_env na_env1239;
extern na_env na_env1240;
typedef struct B1241 gc1241;
struct B1241{T1241 object;union {void*flag;gc1241*next;} header;};
extern gc1241*store1241;
extern int store_left1241;
extern fsoc*store_chunk1241;
extern gc1241*gc_free1241;
typedef struct B1242 gc1242;
struct B1242{T1242 object;union {void*flag;gc1242*next;} header;};
extern gc1242*store1242;
extern int store_left1242;
extern fsoc*store_chunk1242;
extern gc1242*gc_free1242;
typedef struct B1243 gc1243;
struct B1243{T1243 object;union {void*flag;gc1243*next;} header;};
extern gc1243*store1243;
extern int store_left1243;
extern fsoc*store_chunk1243;
extern gc1243*gc_free1243;
typedef struct B1244 gc1244;
struct B1244{T1244 object;union {void*flag;gc1244*next;} header;};
extern gc1244*store1244;
extern int store_left1244;
extern fsoc*store_chunk1244;
extern gc1244*gc_free1244;
typedef struct B1245 gc1245;
struct B1245{T1245 object;union {void*flag;gc1245*next;} header;};
extern gc1245*store1245;
extern int store_left1245;
extern fsoc*store_chunk1245;
extern gc1245*gc_free1245;
typedef struct B1246 gc1246;
struct B1246{T1246 object;union {void*flag;gc1246*next;} header;};
extern gc1246*store1246;
extern int store_left1246;
extern fsoc*store_chunk1246;
extern gc1246*gc_free1246;
extern na_env na_env1247;
typedef struct B1248 gc1248;
struct B1248{T1248 object;union {void*flag;gc1248*next;} header;};
extern gc1248*store1248;
extern int store_left1248;
extern fsoc*store_chunk1248;
extern gc1248*gc_free1248;
extern na_env na_env1249;
typedef struct B1250 gc1250;
struct B1250{T1250 object;union {void*flag;gc1250*next;} header;};
extern gc1250*store1250;
extern int store_left1250;
extern fsoc*store_chunk1250;
extern gc1250*gc_free1250;
typedef struct B1251 gc1251;
struct B1251{T1251 object;union {void*flag;gc1251*next;} header;};
extern gc1251*store1251;
extern int store_left1251;
extern fsoc*store_chunk1251;
extern gc1251*gc_free1251;
typedef struct B1255 gc1255;
struct B1255{T1255 object;union {void*flag;gc1255*next;} header;};
extern gc1255*store1255;
extern int store_left1255;
extern fsoc*store_chunk1255;
extern gc1255*gc_free1255;
extern na_env na_env1256;
typedef struct B1257 gc1257;
struct B1257{T1257 object;union {void*flag;gc1257*next;} header;};
extern gc1257*store1257;
extern int store_left1257;
extern fsoc*store_chunk1257;
extern gc1257*gc_free1257;
typedef struct B1259 gc1259;
struct B1259{T1259 object;union {void*flag;gc1259*next;} header;};
extern gc1259*store1259;
extern int store_left1259;
extern fsoc*store_chunk1259;
extern gc1259*gc_free1259;
typedef struct B1260 gc1260;
struct B1260{T1260 object;union {void*flag;gc1260*next;} header;};
extern gc1260*store1260;
extern int store_left1260;
extern fsoc*store_chunk1260;
extern gc1260*gc_free1260;
typedef struct B1261 gc1261;
struct B1261{T1261 object;union {void*flag;gc1261*next;} header;};
extern gc1261*store1261;
extern int store_left1261;
extern fsoc*store_chunk1261;
extern gc1261*gc_free1261;
extern na_env na_env1262;
extern na_env na_env1263;
extern na_env na_env1264;
extern na_env na_env1265;
typedef struct B1266 gc1266;
struct B1266{T1266 object;union {void*flag;gc1266*next;} header;};
extern gc1266*store1266;
extern int store_left1266;
extern fsoc*store_chunk1266;
extern gc1266*gc_free1266;
typedef struct B1267 gc1267;
struct B1267{T1267 object;union {void*flag;gc1267*next;} header;};
extern gc1267*store1267;
extern int store_left1267;
extern fsoc*store_chunk1267;
extern gc1267*gc_free1267;
extern na_env na_env1268;
extern na_env na_env1270;
typedef struct B1271 gc1271;
struct B1271{T1271 object;union {void*flag;gc1271*next;} header;};
extern gc1271*store1271;
extern int store_left1271;
extern fsoc*store_chunk1271;
extern gc1271*gc_free1271;
typedef struct B1272 gc1272;
struct B1272{T1272 object;union {void*flag;gc1272*next;} header;};
extern gc1272*store1272;
extern int store_left1272;
extern fsoc*store_chunk1272;
extern gc1272*gc_free1272;
typedef struct B1273 gc1273;
struct B1273{T1273 object;union {void*flag;gc1273*next;} header;};
extern gc1273*store1273;
extern int store_left1273;
extern fsoc*store_chunk1273;
extern gc1273*gc_free1273;
typedef struct B1274 gc1274;
struct B1274{T1274 object;union {void*flag;gc1274*next;} header;};
extern gc1274*store1274;
extern int store_left1274;
extern fsoc*store_chunk1274;
extern gc1274*gc_free1274;
extern na_env na_env1275;
extern na_env na_env1276;
typedef struct B1277 gc1277;
struct B1277{T1277 object;union {void*flag;gc1277*next;} header;};
extern gc1277*store1277;
extern int store_left1277;
extern fsoc*store_chunk1277;
extern gc1277*gc_free1277;
typedef struct B1278 gc1278;
struct B1278{T1278 object;union {void*flag;gc1278*next;} header;};
extern gc1278*store1278;
extern int store_left1278;
extern fsoc*store_chunk1278;
extern gc1278*gc_free1278;
typedef struct B1279 gc1279;
struct B1279{T1279 object;union {void*flag;gc1279*next;} header;};
extern gc1279*store1279;
extern int store_left1279;
extern fsoc*store_chunk1279;
extern gc1279*gc_free1279;
typedef struct B1280 gc1280;
struct B1280{T1280 object;union {void*flag;gc1280*next;} header;};
extern gc1280*store1280;
extern int store_left1280;
extern fsoc*store_chunk1280;
extern gc1280*gc_free1280;
extern na_env na_env1281;
extern na_env na_env1282;
typedef struct B1283 gc1283;
struct B1283{T1283 object;union {void*flag;gc1283*next;} header;};
extern gc1283*store1283;
extern int store_left1283;
extern fsoc*store_chunk1283;
extern gc1283*gc_free1283;
typedef struct B1284 gc1284;
struct B1284{T1284 object;union {void*flag;gc1284*next;} header;};
extern gc1284*store1284;
extern int store_left1284;
extern fsoc*store_chunk1284;
extern gc1284*gc_free1284;
extern na_env na_env1285;
typedef struct B1286 gc1286;
struct B1286{T1286 object;union {void*flag;gc1286*next;} header;};
extern gc1286*store1286;
extern int store_left1286;
extern fsoc*store_chunk1286;
extern gc1286*gc_free1286;
typedef struct B1287 gc1287;
struct B1287{T1287 object;union {void*flag;gc1287*next;} header;};
extern gc1287*store1287;
extern int store_left1287;
extern fsoc*store_chunk1287;
extern gc1287*gc_free1287;
extern na_env na_env1288;
extern na_env na_env1289;
typedef struct B1290 gc1290;
struct B1290{T1290 object;union {void*flag;gc1290*next;} header;};
extern gc1290*store1290;
extern int store_left1290;
extern fsoc*store_chunk1290;
extern gc1290*gc_free1290;
typedef struct B1291 gc1291;
struct B1291{T1291 object;union {void*flag;gc1291*next;} header;};
extern gc1291*store1291;
extern int store_left1291;
extern fsoc*store_chunk1291;
extern gc1291*gc_free1291;
typedef struct B1292 gc1292;
struct B1292{T1292 object;union {void*flag;gc1292*next;} header;};
extern gc1292*store1292;
extern int store_left1292;
extern fsoc*store_chunk1292;
extern gc1292*gc_free1292;
extern na_env na_env1293;
typedef struct B1294 gc1294;
struct B1294{T1294 object;union {void*flag;gc1294*next;} header;};
extern gc1294*store1294;
extern int store_left1294;
extern fsoc*store_chunk1294;
extern gc1294*gc_free1294;
extern na_env na_env1295;
typedef struct B413 gc413;
struct B413{T413 object;union {void*flag;gc413*next;} header;};
extern gc413*store413;
extern int store_left413;
extern fsoc*store_chunk413;
extern gc413*gc_free413;
typedef struct B731 gc731;
struct B731{T731 object;union {void*flag;gc731*next;} header;};
extern gc731*store731;
extern int store_left731;
extern fsoc*store_chunk731;
extern gc731*gc_free731;
extern na_env na_env1296;
typedef struct B1297 gc1297;
struct B1297{T1297 object;union {void*flag;gc1297*next;} header;};
extern gc1297*store1297;
extern int store_left1297;
extern fsoc*store_chunk1297;
extern gc1297*gc_free1297;
typedef struct B1298 gc1298;
struct B1298{T1298 object;union {void*flag;gc1298*next;} header;};
extern gc1298*store1298;
extern int store_left1298;
extern fsoc*store_chunk1298;
extern gc1298*gc_free1298;
extern na_env na_env1299;
typedef struct B1300 gc1300;
struct B1300{T1300 object;union {void*flag;gc1300*next;} header;};
extern gc1300*store1300;
extern int store_left1300;
extern fsoc*store_chunk1300;
extern gc1300*gc_free1300;
typedef struct B1301 gc1301;
struct B1301{T1301 object;union {void*flag;gc1301*next;} header;};
extern gc1301*store1301;
extern int store_left1301;
extern fsoc*store_chunk1301;
extern gc1301*gc_free1301;
extern na_env na_env1302;
extern na_env na_env1303;
typedef struct B1304 gc1304;
struct B1304{T1304 object;union {void*flag;gc1304*next;} header;};
extern gc1304*store1304;
extern int store_left1304;
extern fsoc*store_chunk1304;
extern gc1304*gc_free1304;
typedef struct B1305 gc1305;
struct B1305{T1305 object;union {void*flag;gc1305*next;} header;};
extern gc1305*store1305;
extern int store_left1305;
extern fsoc*store_chunk1305;
extern gc1305*gc_free1305;
typedef struct B1306 gc1306;
struct B1306{T1306 object;union {void*flag;gc1306*next;} header;};
extern gc1306*store1306;
extern int store_left1306;
extern fsoc*store_chunk1306;
extern gc1306*gc_free1306;
typedef struct B1307 gc1307;
struct B1307{T1307 object;union {void*flag;gc1307*next;} header;};
extern gc1307*store1307;
extern int store_left1307;
extern fsoc*store_chunk1307;
extern gc1307*gc_free1307;
extern na_env na_env1308;
typedef struct B1309 gc1309;
struct B1309{T1309 object;union {void*flag;gc1309*next;} header;};
extern gc1309*store1309;
extern int store_left1309;
extern fsoc*store_chunk1309;
extern gc1309*gc_free1309;
typedef struct B1310 gc1310;
struct B1310{T1310 object;union {void*flag;gc1310*next;} header;};
extern gc1310*store1310;
extern int store_left1310;
extern fsoc*store_chunk1310;
extern gc1310*gc_free1310;
extern na_env na_env1311;
extern na_env na_env1312;
extern na_env na_env1313;
typedef struct B1314 gc1314;
struct B1314{T1314 object;union {void*flag;gc1314*next;} header;};
extern gc1314*store1314;
extern int store_left1314;
extern fsoc*store_chunk1314;
extern gc1314*gc_free1314;
typedef struct B1315 gc1315;
struct B1315{T1315 object;union {void*flag;gc1315*next;} header;};
extern gc1315*store1315;
extern int store_left1315;
extern fsoc*store_chunk1315;
extern gc1315*gc_free1315;
extern na_env na_env1316;
extern na_env na_env1317;
extern na_env na_env1318;
typedef struct B356 gc356;
struct B356{T356 object;union {void*flag;gc356*next;} header;};
extern gc356*store356;
extern int store_left356;
extern fsoc*store_chunk356;
extern gc356*gc_free356;
typedef struct B1319 gc1319;
struct B1319{T1319 object;union {void*flag;gc1319*next;} header;};
extern gc1319*store1319;
extern int store_left1319;
extern fsoc*store_chunk1319;
extern gc1319*gc_free1319;
extern na_env na_env1320;
typedef struct B1321 gc1321;
struct B1321{T1321 object;union {void*flag;gc1321*next;} header;};
extern gc1321*store1321;
extern int store_left1321;
extern fsoc*store_chunk1321;
extern gc1321*gc_free1321;
extern na_env na_env1322;
typedef struct B1323 gc1323;
struct B1323{T1323 object;union {void*flag;gc1323*next;} header;};
extern gc1323*store1323;
extern int store_left1323;
extern fsoc*store_chunk1323;
extern gc1323*gc_free1323;
extern na_env na_env1324;
typedef struct B1325 gc1325;
struct B1325{T1325 object;union {void*flag;gc1325*next;} header;};
extern gc1325*store1325;
extern int store_left1325;
extern fsoc*store_chunk1325;
extern gc1325*gc_free1325;
extern na_env na_env1326;
extern na_env na_env1327;
extern na_env na_env1328;
typedef struct B1329 gc1329;
struct B1329{T1329 object;union {void*flag;gc1329*next;} header;};
extern gc1329*store1329;
extern int store_left1329;
extern fsoc*store_chunk1329;
extern gc1329*gc_free1329;
typedef struct B1330 gc1330;
struct B1330{T1330 object;union {void*flag;gc1330*next;} header;};
extern gc1330*store1330;
extern int store_left1330;
extern fsoc*store_chunk1330;
extern gc1330*gc_free1330;
typedef struct B1332 gc1332;
struct B1332{T1332 object;union {void*flag;gc1332*next;} header;};
extern gc1332*store1332;
extern int store_left1332;
extern fsoc*store_chunk1332;
extern gc1332*gc_free1332;
typedef struct B767 gc767;
struct B767{T767 object;union {void*flag;gc767*next;} header;};
extern gc767*store767;
extern int store_left767;
extern fsoc*store_chunk767;
extern gc767*gc_free767;
typedef struct B768 gc768;
struct B768{T768 object;union {void*flag;gc768*next;} header;};
extern gc768*store768;
extern int store_left768;
extern fsoc*store_chunk768;
extern gc768*gc_free768;
typedef struct B769 gc769;
struct B769{T769 object;union {void*flag;gc769*next;} header;};
extern gc769*store769;
extern int store_left769;
extern fsoc*store_chunk769;
extern gc769*gc_free769;
typedef struct B764 gc764;
struct B764{T764 object;union {void*flag;gc764*next;} header;};
extern gc764*store764;
extern int store_left764;
extern fsoc*store_chunk764;
extern gc764*gc_free764;
typedef struct B765 gc765;
struct B765{T765 object;union {void*flag;gc765*next;} header;};
extern gc765*store765;
extern int store_left765;
extern fsoc*store_chunk765;
extern gc765*gc_free765;
typedef struct B766 gc766;
struct B766{T766 object;union {void*flag;gc766*next;} header;};
extern gc766*store766;
extern int store_left766;
extern fsoc*store_chunk766;
extern gc766*gc_free766;
typedef struct B1334 gc1334;
struct B1334{T1334 object;union {void*flag;gc1334*next;} header;};
extern gc1334*store1334;
extern int store_left1334;
extern fsoc*store_chunk1334;
extern gc1334*gc_free1334;
extern na_env na_env1335;
typedef struct B1336 gc1336;
struct B1336{T1336 object;union {void*flag;gc1336*next;} header;};
extern gc1336*store1336;
extern int store_left1336;
extern fsoc*store_chunk1336;
extern gc1336*gc_free1336;
extern na_env na_env1337;
typedef struct B1338 gc1338;
struct B1338{T1338 object;union {void*flag;gc1338*next;} header;};
extern gc1338*store1338;
extern int store_left1338;
extern fsoc*store_chunk1338;
extern gc1338*gc_free1338;
typedef struct B1339 gc1339;
struct B1339{T1339 object;union {void*flag;gc1339*next;} header;};
extern gc1339*store1339;
extern int store_left1339;
extern fsoc*store_chunk1339;
extern gc1339*gc_free1339;
extern na_env na_env1340;
extern na_env na_env1341;
typedef struct B1342 gc1342;
struct B1342{T1342 object;union {void*flag;gc1342*next;} header;};
extern gc1342*store1342;
extern int store_left1342;
extern fsoc*store_chunk1342;
extern gc1342*gc_free1342;
typedef struct B1343 gc1343;
struct B1343{T1343 object;union {void*flag;gc1343*next;} header;};
extern gc1343*store1343;
extern int store_left1343;
extern fsoc*store_chunk1343;
extern gc1343*gc_free1343;
extern na_env na_env1344;
typedef struct B1345 gc1345;
struct B1345{T1345 object;union {void*flag;gc1345*next;} header;};
extern gc1345*store1345;
extern int store_left1345;
extern fsoc*store_chunk1345;
extern gc1345*gc_free1345;
typedef struct B1346 gc1346;
struct B1346{T1346 object;union {void*flag;gc1346*next;} header;};
extern gc1346*store1346;
extern int store_left1346;
extern fsoc*store_chunk1346;
extern gc1346*gc_free1346;
extern na_env na_env1347;
typedef struct B1348 gc1348;
struct B1348{T1348 object;union {void*flag;gc1348*next;} header;};
extern gc1348*store1348;
extern int store_left1348;
extern fsoc*store_chunk1348;
extern gc1348*gc_free1348;
typedef struct B1349 gc1349;
struct B1349{T1349 object;union {void*flag;gc1349*next;} header;};
extern gc1349*store1349;
extern int store_left1349;
extern fsoc*store_chunk1349;
extern gc1349*gc_free1349;
extern na_env na_env1350;
typedef struct B1351 gc1351;
struct B1351{T1351 object;union {void*flag;gc1351*next;} header;};
extern gc1351*store1351;
extern int store_left1351;
extern fsoc*store_chunk1351;
extern gc1351*gc_free1351;
extern na_env na_env1352;
extern na_env na_env1353;
extern na_env na_env1354;
extern na_env na_env1355;
extern na_env na_env1356;
typedef struct B1357 gc1357;
struct B1357{T1357 object;union {void*flag;gc1357*next;} header;};
extern gc1357*store1357;
extern int store_left1357;
extern fsoc*store_chunk1357;
extern gc1357*gc_free1357;
extern na_env na_env1358;
extern na_env na_env1359;
typedef struct B1360 gc1360;
struct B1360{T1360 object;union {void*flag;gc1360*next;} header;};
extern gc1360*store1360;
extern int store_left1360;
extern fsoc*store_chunk1360;
extern gc1360*gc_free1360;
typedef struct B1361 gc1361;
struct B1361{T1361 object;union {void*flag;gc1361*next;} header;};
extern gc1361*store1361;
extern int store_left1361;
extern fsoc*store_chunk1361;
extern gc1361*gc_free1361;
extern na_env na_env1362;
typedef struct B1363 gc1363;
struct B1363{T1363 object;union {void*flag;gc1363*next;} header;};
extern gc1363*store1363;
extern int store_left1363;
extern fsoc*store_chunk1363;
extern gc1363*gc_free1363;
typedef struct B1364 gc1364;
struct B1364{T1364 object;union {void*flag;gc1364*next;} header;};
extern gc1364*store1364;
extern int store_left1364;
extern fsoc*store_chunk1364;
extern gc1364*gc_free1364;
typedef struct B1367 gc1367;
struct B1367{T1367 object;union {void*flag;gc1367*next;} header;};
extern gc1367*store1367;
extern int store_left1367;
extern fsoc*store_chunk1367;
extern gc1367*gc_free1367;
typedef struct B1368 gc1368;
struct B1368{T1368 object;union {void*flag;gc1368*next;} header;};
extern gc1368*store1368;
extern int store_left1368;
extern fsoc*store_chunk1368;
extern gc1368*gc_free1368;
extern na_env na_env1370;
extern na_env na_env1371;
extern na_env na_env1372;
extern na_env na_env1373;
typedef struct B1374 gc1374;
struct B1374{T1374 object;union {void*flag;gc1374*next;} header;};
extern gc1374*store1374;
extern int store_left1374;
extern fsoc*store_chunk1374;
extern gc1374*gc_free1374;
typedef struct B1375 gc1375;
struct B1375{T1375 object;union {void*flag;gc1375*next;} header;};
extern gc1375*store1375;
extern int store_left1375;
extern fsoc*store_chunk1375;
extern gc1375*gc_free1375;
typedef struct B821 gc821;
struct B821{T821 object;union {void*flag;gc821*next;} header;};
extern gc821*store821;
extern int store_left821;
extern fsoc*store_chunk821;
extern gc821*gc_free821;
extern na_env na_env1376;
typedef struct B1377 gc1377;
struct B1377{T1377 object;union {void*flag;gc1377*next;} header;};
extern gc1377*store1377;
extern int store_left1377;
extern fsoc*store_chunk1377;
extern gc1377*gc_free1377;
typedef struct B1378 gc1378;
struct B1378{T1378 object;union {void*flag;gc1378*next;} header;};
extern gc1378*store1378;
extern int store_left1378;
extern fsoc*store_chunk1378;
extern gc1378*gc_free1378;
typedef struct B1380 gc1380;
struct B1380{T1380 object;union {void*flag;gc1380*next;} header;};
extern gc1380*store1380;
extern int store_left1380;
extern fsoc*store_chunk1380;
extern gc1380*gc_free1380;
typedef struct B1381 gc1381;
struct B1381{T1381 object;union {void*flag;gc1381*next;} header;};
extern gc1381*store1381;
extern int store_left1381;
extern fsoc*store_chunk1381;
extern gc1381*gc_free1381;
extern na_env na_env1382;
typedef struct B1383 gc1383;
struct B1383{T1383 object;union {void*flag;gc1383*next;} header;};
extern gc1383*store1383;
extern int store_left1383;
extern fsoc*store_chunk1383;
extern gc1383*gc_free1383;
typedef struct B1384 gc1384;
struct B1384{T1384 object;union {void*flag;gc1384*next;} header;};
extern gc1384*store1384;
extern int store_left1384;
extern fsoc*store_chunk1384;
extern gc1384*gc_free1384;
extern na_env na_env1385;
extern na_env na_env1386;
typedef struct B1388 gc1388;
struct B1388{T1388 object;union {void*flag;gc1388*next;} header;};
extern gc1388*store1388;
extern int store_left1388;
extern fsoc*store_chunk1388;
extern gc1388*gc_free1388;
typedef struct B1389 gc1389;
struct B1389{T1389 object;union {void*flag;gc1389*next;} header;};
extern gc1389*store1389;
extern int store_left1389;
extern fsoc*store_chunk1389;
extern gc1389*gc_free1389;
extern na_env na_env1390;
typedef struct B337 gc337;
struct B337{T337 object;union {void*flag;gc337*next;} header;};
extern gc337*store337;
extern int store_left337;
extern fsoc*store_chunk337;
extern gc337*gc_free337;
typedef struct B1391 gc1391;
struct B1391{T1391 object;union {void*flag;gc1391*next;} header;};
extern gc1391*store1391;
extern int store_left1391;
extern fsoc*store_chunk1391;
extern gc1391*gc_free1391;
typedef struct B1392 gc1392;
struct B1392{T1392 object;union {void*flag;gc1392*next;} header;};
extern gc1392*store1392;
extern int store_left1392;
extern fsoc*store_chunk1392;
extern gc1392*gc_free1392;
typedef struct B1393 gc1393;
struct B1393{T1393 object;union {void*flag;gc1393*next;} header;};
extern gc1393*store1393;
extern int store_left1393;
extern fsoc*store_chunk1393;
extern gc1393*gc_free1393;
typedef struct B1394 gc1394;
struct B1394{T1394 object;union {void*flag;gc1394*next;} header;};
extern gc1394*store1394;
extern int store_left1394;
extern fsoc*store_chunk1394;
extern gc1394*gc_free1394;
typedef struct B1396 gc1396;
struct B1396{T1396 object;union {void*flag;gc1396*next;} header;};
extern gc1396*store1396;
extern int store_left1396;
extern fsoc*store_chunk1396;
extern gc1396*gc_free1396;
extern na_env na_env1397;
typedef struct B1398 gc1398;
struct B1398{T1398 object;union {void*flag;gc1398*next;} header;};
extern gc1398*store1398;
extern int store_left1398;
extern fsoc*store_chunk1398;
extern gc1398*gc_free1398;
typedef struct B1399 gc1399;
struct B1399{T1399 object;union {void*flag;gc1399*next;} header;};
extern gc1399*store1399;
extern int store_left1399;
extern fsoc*store_chunk1399;
extern gc1399*gc_free1399;
extern na_env na_env1400;
typedef struct B1401 gc1401;
struct B1401{T1401 object;union {void*flag;gc1401*next;} header;};
extern gc1401*store1401;
extern int store_left1401;
extern fsoc*store_chunk1401;
extern gc1401*gc_free1401;
extern na_env na_env1402;
typedef struct B1405 gc1405;
struct B1405{T1405 object;union {void*flag;gc1405*next;} header;};
extern gc1405*store1405;
extern int store_left1405;
extern fsoc*store_chunk1405;
extern gc1405*gc_free1405;
typedef struct B1406 gc1406;
struct B1406{T1406 object;union {void*flag;gc1406*next;} header;};
extern gc1406*store1406;
extern int store_left1406;
extern fsoc*store_chunk1406;
extern gc1406*gc_free1406;
typedef struct B1407 gc1407;
struct B1407{T1407 object;union {void*flag;gc1407*next;} header;};
extern gc1407*store1407;
extern int store_left1407;
extern fsoc*store_chunk1407;
extern gc1407*gc_free1407;
typedef struct B1408 gc1408;
struct B1408{T1408 object;union {void*flag;gc1408*next;} header;};
extern gc1408*store1408;
extern int store_left1408;
extern fsoc*store_chunk1408;
extern gc1408*gc_free1408;
typedef struct B1409 gc1409;
struct B1409{T1409 object;union {void*flag;gc1409*next;} header;};
extern gc1409*store1409;
extern int store_left1409;
extern fsoc*store_chunk1409;
extern gc1409*gc_free1409;
typedef struct B1412 gc1412;
struct B1412{T1412 object;union {void*flag;gc1412*next;} header;};
extern gc1412*store1412;
extern int store_left1412;
extern fsoc*store_chunk1412;
extern gc1412*gc_free1412;
typedef struct B1413 gc1413;
struct B1413{T1413 object;union {void*flag;gc1413*next;} header;};
extern gc1413*store1413;
extern int store_left1413;
extern fsoc*store_chunk1413;
extern gc1413*gc_free1413;
typedef struct B1414 gc1414;
struct B1414{T1414 object;union {void*flag;gc1414*next;} header;};
extern gc1414*store1414;
extern int store_left1414;
extern fsoc*store_chunk1414;
extern gc1414*gc_free1414;
typedef struct B1415 gc1415;
struct B1415{T1415 object;union {void*flag;gc1415*next;} header;};
extern gc1415*store1415;
extern int store_left1415;
extern fsoc*store_chunk1415;
extern gc1415*gc_free1415;
extern na_env na_env1416;
extern na_env na_env1417;
typedef struct B1418 gc1418;
struct B1418{T1418 object;union {void*flag;gc1418*next;} header;};
extern gc1418*store1418;
extern int store_left1418;
extern fsoc*store_chunk1418;
extern gc1418*gc_free1418;
typedef struct B1419 gc1419;
struct B1419{T1419 object;union {void*flag;gc1419*next;} header;};
extern gc1419*store1419;
extern int store_left1419;
extern fsoc*store_chunk1419;
extern gc1419*gc_free1419;
extern na_env na_env1420;
typedef struct B60 gc60;
struct B60{T60 object;union {void*flag;gc60*next;} header;};
extern gc60*store60;
extern int store_left60;
extern fsoc*store_chunk60;
extern gc60*gc_free60;
typedef struct B773 gc773;
struct B773{T773 object;union {void*flag;gc773*next;} header;};
extern gc773*store773;
extern int store_left773;
extern fsoc*store_chunk773;
extern gc773*gc_free773;
typedef struct B658 gc658;
struct B658{T658 object;union {void*flag;gc658*next;} header;};
extern gc658*store658;
extern int store_left658;
extern fsoc*store_chunk658;
extern gc658*gc_free658;

#define gc_mark1423(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1425 gc1425;
struct B1425{T1425 object;union {void*flag;gc1425*next;} header;};
extern gc1425*store1425;
extern int store_left1425;
extern fsoc*store_chunk1425;
extern gc1425*gc_free1425;
typedef struct B1426 gc1426;
struct B1426{T1426 object;union {void*flag;gc1426*next;} header;};
extern gc1426*store1426;
extern int store_left1426;
extern fsoc*store_chunk1426;
extern gc1426*gc_free1426;
typedef struct B1428 gc1428;
struct B1428{T1428 object;union {void*flag;gc1428*next;} header;};
extern gc1428*store1428;
extern int store_left1428;
extern fsoc*store_chunk1428;
extern gc1428*gc_free1428;
typedef struct B1431 gc1431;
struct B1431{T1431 object;union {void*flag;gc1431*next;} header;};
extern gc1431*store1431;
extern int store_left1431;
extern fsoc*store_chunk1431;
extern gc1431*gc_free1431;
typedef struct B664 gc664;
struct B664{T664 object;union {void*flag;gc664*next;} header;};
extern gc664*store664;
extern int store_left664;
extern fsoc*store_chunk664;
extern gc664*gc_free664;
typedef struct B668 gc668;
struct B668{T668 object;union {void*flag;gc668*next;} header;};
extern gc668*store668;
extern int store_left668;
extern fsoc*store_chunk668;
extern gc668*gc_free668;
typedef struct B669 gc669;
struct B669{T669 object;union {void*flag;gc669*next;} header;};
extern gc669*store669;
extern int store_left669;
extern fsoc*store_chunk669;
extern gc669*gc_free669;
typedef struct B672 gc672;
struct B672{T672 object;union {void*flag;gc672*next;} header;};
extern gc672*store672;
extern int store_left672;
extern fsoc*store_chunk672;
extern gc672*gc_free672;
typedef struct B675 gc675;
struct B675{T675 object;union {void*flag;gc675*next;} header;};
extern gc675*store675;
extern int store_left675;
extern fsoc*store_chunk675;
extern gc675*gc_free675;
typedef struct B667 gc667;
struct B667{T667 object;union {void*flag;gc667*next;} header;};
extern gc667*store667;
extern int store_left667;
extern fsoc*store_chunk667;
extern gc667*gc_free667;
typedef struct B661 gc661;
struct B661{T661 object;union {void*flag;gc661*next;} header;};
extern gc661*store661;
extern int store_left661;
extern fsoc*store_chunk661;
extern gc661*gc_free661;
typedef struct B665 gc665;
struct B665{T665 object;union {void*flag;gc665*next;} header;};
extern gc665*store665;
extern int store_left665;
extern fsoc*store_chunk665;
extern gc665*gc_free665;
typedef struct B673 gc673;
struct B673{T673 object;union {void*flag;gc673*next;} header;};
extern gc673*store673;
extern int store_left673;
extern fsoc*store_chunk673;
extern gc673*gc_free673;
typedef struct B654 gc654;
struct B654{T654 object;union {void*flag;gc654*next;} header;};
extern gc654*store654;
extern int store_left654;
extern fsoc*store_chunk654;
extern gc654*gc_free654;
typedef struct B1432 gc1432;
struct B1432{T1432 object;union {void*flag;gc1432*next;} header;};
extern gc1432*store1432;
extern int store_left1432;
extern fsoc*store_chunk1432;
extern gc1432*gc_free1432;
typedef struct B1433 gc1433;
struct B1433{T1433 object;union {void*flag;gc1433*next;} header;};
extern gc1433*store1433;
extern int store_left1433;
extern fsoc*store_chunk1433;
extern gc1433*gc_free1433;
typedef struct B524 gc524;
struct B524{T524 object;union {void*flag;gc524*next;} header;};
extern gc524*store524;
extern int store_left524;
extern fsoc*store_chunk524;
extern gc524*gc_free524;
typedef struct B1434 gc1434;
struct B1434{T1434 object;union {void*flag;gc1434*next;} header;};
extern gc1434*store1434;
extern int store_left1434;
extern fsoc*store_chunk1434;
extern gc1434*gc_free1434;
typedef struct B677 gc677;
struct B677{T677 object;union {void*flag;gc677*next;} header;};
extern gc677*store677;
extern int store_left677;
extern fsoc*store_chunk677;
extern gc677*gc_free677;
typedef struct B663 gc663;
struct B663{T663 object;union {void*flag;gc663*next;} header;};
extern gc663*store663;
extern int store_left663;
extern fsoc*store_chunk663;
extern gc663*gc_free663;
typedef struct B659 gc659;
struct B659{T659 object;union {void*flag;gc659*next;} header;};
extern gc659*store659;
extern int store_left659;
extern fsoc*store_chunk659;
extern gc659*gc_free659;
typedef struct B1435 gc1435;
struct B1435{T1435 object;union {void*flag;gc1435*next;} header;};
extern gc1435*store1435;
extern int store_left1435;
extern fsoc*store_chunk1435;
extern gc1435*gc_free1435;
typedef struct B1436 gc1436;
struct B1436{T1436 object;union {void*flag;gc1436*next;} header;};
extern gc1436*store1436;
extern int store_left1436;
extern fsoc*store_chunk1436;
extern gc1436*gc_free1436;
typedef struct B1437 gc1437;
struct B1437{T1437 object;union {void*flag;gc1437*next;} header;};
extern gc1437*store1437;
extern int store_left1437;
extern fsoc*store_chunk1437;
extern gc1437*gc_free1437;
typedef struct B1438 gc1438;
struct B1438{T1438 object;union {void*flag;gc1438*next;} header;};
extern gc1438*store1438;
extern int store_left1438;
extern fsoc*store_chunk1438;
extern gc1438*gc_free1438;
typedef struct B1439 gc1439;
struct B1439{T1439 object;union {void*flag;gc1439*next;} header;};
extern gc1439*store1439;
extern int store_left1439;
extern fsoc*store_chunk1439;
extern gc1439*gc_free1439;
extern na_env na_env1440;
typedef struct B1445 gc1445;
struct B1445{T1445 object;union {void*flag;gc1445*next;} header;};
extern gc1445*store1445;
extern int store_left1445;
extern fsoc*store_chunk1445;
extern gc1445*gc_free1445;
typedef struct B527 gc527;
struct B527{T527 object;union {void*flag;gc527*next;} header;};
extern gc527*store527;
extern int store_left527;
extern fsoc*store_chunk527;
extern gc527*gc_free527;
typedef struct B123 gc123;
struct B123{T123 object;union {void*flag;gc123*next;} header;};
extern gc123*store123;
extern int store_left123;
extern fsoc*store_chunk123;
extern gc123*gc_free123;
typedef struct B732 gc732;
struct B732{T732 object;union {void*flag;gc732*next;} header;};
extern gc732*store732;
extern int store_left732;
extern fsoc*store_chunk732;
extern gc732*gc_free732;
typedef struct B737 gc737;
struct B737{T737 object;union {void*flag;gc737*next;} header;};
extern gc737*store737;
extern int store_left737;
extern fsoc*store_chunk737;
extern gc737*gc_free737;
typedef struct B117 gc117;
struct B117{T117 object;union {void*flag;gc117*next;} header;};
extern gc117*store117;
extern int store_left117;
extern fsoc*store_chunk117;
extern gc117*gc_free117;
typedef struct B1447 gc1447;
struct B1447{T1447 object;union {void*flag;gc1447*next;} header;};
extern gc1447*store1447;
extern int store_left1447;
extern fsoc*store_chunk1447;
extern gc1447*gc_free1447;
typedef struct B414 gc414;
struct B414{T414 object;union {void*flag;gc414*next;} header;};
extern gc414*store414;
extern int store_left414;
extern fsoc*store_chunk414;
extern gc414*gc_free414;
typedef struct B411 gc411;
struct B411{T411 object;union {void*flag;gc411*next;} header;};
extern gc411*store411;
extern int store_left411;
extern fsoc*store_chunk411;
extern gc411*gc_free411;
typedef struct B366 gc366;
struct B366{T366 object;union {void*flag;gc366*next;} header;};
extern gc366*store366;
extern int store_left366;
extern fsoc*store_chunk366;
extern gc366*gc_free366;
typedef struct B783 gc783;
struct B783{T783 object;union {void*flag;gc783*next;} header;};
extern gc783*store783;
extern int store_left783;
extern fsoc*store_chunk783;
extern gc783*gc_free783;
typedef struct B636 gc636;
struct B636{T636 object;union {void*flag;gc636*next;} header;};
extern gc636*store636;
extern int store_left636;
extern fsoc*store_chunk636;
extern gc636*gc_free636;
typedef struct B785 gc785;
struct B785{T785 object;union {void*flag;gc785*next;} header;};
extern gc785*store785;
extern int store_left785;
extern fsoc*store_chunk785;
extern gc785*gc_free785;
typedef struct B782 gc782;
struct B782{T782 object;union {void*flag;gc782*next;} header;};
extern gc782*store782;
extern int store_left782;
extern fsoc*store_chunk782;
extern gc782*gc_free782;
typedef struct B674 gc674;
struct B674{T674 object;union {void*flag;gc674*next;} header;};
extern gc674*store674;
extern int store_left674;
extern fsoc*store_chunk674;
extern gc674*gc_free674;
typedef struct B531 gc531;
struct B531{T531 object;union {void*flag;gc531*next;} header;};
extern gc531*store531;
extern int store_left531;
extern fsoc*store_chunk531;
extern gc531*gc_free531;
typedef struct B784 gc784;
struct B784{T784 object;union {void*flag;gc784*next;} header;};
extern gc784*store784;
extern int store_left784;
extern fsoc*store_chunk784;
extern gc784*gc_free784;
typedef struct B635 gc635;
struct B635{T635 object;union {void*flag;gc635*next;} header;};
extern gc635*store635;
extern int store_left635;
extern fsoc*store_chunk635;
extern gc635*gc_free635;
typedef struct B1448 gc1448;
struct B1448{T1448 object;union {void*flag;gc1448*next;} header;};
extern gc1448*store1448;
extern int store_left1448;
extern fsoc*store_chunk1448;
extern gc1448*gc_free1448;
typedef struct B823 gc823;
struct B823{T823 object;union {void*flag;gc823*next;} header;};
extern gc823*store823;
extern int store_left823;
extern fsoc*store_chunk823;
extern gc823*gc_free823;
typedef struct B825 gc825;
struct B825{T825 object;union {void*flag;gc825*next;} header;};
extern gc825*store825;
extern int store_left825;
extern fsoc*store_chunk825;
extern gc825*gc_free825;
typedef struct B826 gc826;
struct B826{T826 object;union {void*flag;gc826*next;} header;};
extern gc826*store826;
extern int store_left826;
extern fsoc*store_chunk826;
extern gc826*gc_free826;
typedef struct B827 gc827;
struct B827{T827 object;union {void*flag;gc827*next;} header;};
extern gc827*store827;
extern int store_left827;
extern fsoc*store_chunk827;
extern gc827*gc_free827;
typedef struct B1449 gc1449;
struct B1449{T1449 object;union {void*flag;gc1449*next;} header;};
extern gc1449*store1449;
extern int store_left1449;
extern fsoc*store_chunk1449;
extern gc1449*gc_free1449;
extern na_env na_env1450;
typedef struct B1451 gc1451;
struct B1451{T1451 object;union {void*flag;gc1451*next;} header;};
extern gc1451*store1451;
extern int store_left1451;
extern fsoc*store_chunk1451;
extern gc1451*gc_free1451;
extern na_env na_env1452;
typedef struct B1453 gc1453;
struct B1453{T1453 object;union {void*flag;gc1453*next;} header;};
extern gc1453*store1453;
extern int store_left1453;
extern fsoc*store_chunk1453;
extern gc1453*gc_free1453;
typedef struct B1454 gc1454;
struct B1454{T1454 object;union {void*flag;gc1454*next;} header;};
extern gc1454*store1454;
extern int store_left1454;
extern fsoc*store_chunk1454;
extern gc1454*gc_free1454;
typedef struct B1455 gc1455;
struct B1455{T1455 object;union {void*flag;gc1455*next;} header;};
extern gc1455*store1455;
extern int store_left1455;
extern fsoc*store_chunk1455;
extern gc1455*gc_free1455;
typedef struct B1456 gc1456;
struct B1456{T1456 object;union {void*flag;gc1456*next;} header;};
extern gc1456*store1456;
extern int store_left1456;
extern fsoc*store_chunk1456;
extern gc1456*gc_free1456;
extern na_env na_env1457;
typedef struct B1458 gc1458;
struct B1458{T1458 object;union {void*flag;gc1458*next;} header;};
extern gc1458*store1458;
extern int store_left1458;
extern fsoc*store_chunk1458;
extern gc1458*gc_free1458;
typedef struct B1459 gc1459;
struct B1459{T1459 object;union {void*flag;gc1459*next;} header;};
extern gc1459*store1459;
extern int store_left1459;
extern fsoc*store_chunk1459;
extern gc1459*gc_free1459;
extern na_env na_env1460;
typedef struct B1461 gc1461;
struct B1461{T1461 object;union {void*flag;gc1461*next;} header;};
extern gc1461*store1461;
extern int store_left1461;
extern fsoc*store_chunk1461;
extern gc1461*gc_free1461;
typedef struct B1462 gc1462;
struct B1462{T1462 object;union {void*flag;gc1462*next;} header;};
extern gc1462*store1462;
extern int store_left1462;
extern fsoc*store_chunk1462;
extern gc1462*gc_free1462;
typedef struct B1463 gc1463;
struct B1463{T1463 object;union {void*flag;gc1463*next;} header;};
extern gc1463*store1463;
extern int store_left1463;
extern fsoc*store_chunk1463;
extern gc1463*gc_free1463;
extern na_env na_env1464;
typedef struct B670 gc670;
struct B670{T670 object;union {void*flag;gc670*next;} header;};
extern gc670*store670;
extern int store_left670;
extern fsoc*store_chunk670;
extern gc670*gc_free670;
extern na_env na_env1465;
extern na_env na_env1466;
typedef struct B702 gc702;
struct B702{T702 object;union {void*flag;gc702*next;} header;};
extern gc702*store702;
extern int store_left702;
extern fsoc*store_chunk702;
extern gc702*gc_free702;
extern na_env na_env1467;
typedef struct B1468 gc1468;
struct B1468{T1468 object;union {void*flag;gc1468*next;} header;};
extern gc1468*store1468;
extern int store_left1468;
extern fsoc*store_chunk1468;
extern gc1468*gc_free1468;
typedef struct B1469 gc1469;
struct B1469{T1469 object;union {void*flag;gc1469*next;} header;};
extern gc1469*store1469;
extern int store_left1469;
extern fsoc*store_chunk1469;
extern gc1469*gc_free1469;
extern na_env na_env1470;
extern na_env na_env1471;
extern na_env na_env1472;
extern na_env na_env1473;
typedef struct B976 gc976;
struct B976{T976 object;union {void*flag;gc976*next;} header;};
extern gc976*store976;
extern int store_left976;
extern fsoc*store_chunk976;
extern gc976*gc_free976;
typedef struct B632 gc632;
struct B632{T632 object;union {void*flag;gc632*next;} header;};
extern gc632*store632;
extern int store_left632;
extern fsoc*store_chunk632;
extern gc632*gc_free632;
typedef struct B557 gc557;
struct B557{T557 object;union {void*flag;gc557*next;} header;};
extern gc557*store557;
extern int store_left557;
extern fsoc*store_chunk557;
extern gc557*gc_free557;

#define gc_mark1475(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1477(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1479(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1481(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1483(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1485(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1487 gc1487;
struct B1487{T1487 object;union {void*flag;gc1487*next;} header;};
extern gc1487*store1487;
extern int store_left1487;
extern fsoc*store_chunk1487;
extern gc1487*gc_free1487;
typedef struct B1488 gc1488;
struct B1488{T1488 object;union {void*flag;gc1488*next;} header;};
extern gc1488*store1488;
extern int store_left1488;
extern fsoc*store_chunk1488;
extern gc1488*gc_free1488;
typedef struct B551 gc551;
struct B551{T551 object;union {void*flag;gc551*next;} header;};
extern gc551*store551;
extern int store_left551;
extern fsoc*store_chunk551;
extern gc551*gc_free551;
typedef struct B552 gc552;
struct B552{T552 object;union {void*flag;gc552*next;} header;};
extern gc552*store552;
extern int store_left552;
extern fsoc*store_chunk552;
extern gc552*gc_free552;
typedef struct B553 gc553;
struct B553{T553 object;union {void*flag;gc553*next;} header;};
extern gc553*store553;
extern int store_left553;
extern fsoc*store_chunk553;
extern gc553*gc_free553;
typedef struct B554 gc554;
struct B554{T554 object;union {void*flag;gc554*next;} header;};
extern gc554*store554;
extern int store_left554;
extern fsoc*store_chunk554;
extern gc554*gc_free554;
typedef struct B555 gc555;
struct B555{T555 object;union {void*flag;gc555*next;} header;};
extern gc555*store555;
extern int store_left555;
extern fsoc*store_chunk555;
extern gc555*gc_free555;
typedef struct B556 gc556;
struct B556{T556 object;union {void*flag;gc556*next;} header;};
extern gc556*store556;
extern int store_left556;
extern fsoc*store_chunk556;
extern gc556*gc_free556;

#define gc_mark1491(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1494 gc1494;
struct B1494{T1494 object;union {void*flag;gc1494*next;} header;};
extern gc1494*store1494;
extern int store_left1494;
extern fsoc*store_chunk1494;
extern gc1494*gc_free1494;
typedef struct B1498 gc1498;
struct B1498{T1498 object;union {void*flag;gc1498*next;} header;};
extern gc1498*store1498;
extern int store_left1498;
extern fsoc*store_chunk1498;
extern gc1498*gc_free1498;
typedef struct B797 gc797;
struct B797{T797 object;union {void*flag;gc797*next;} header;};
extern gc797*store797;
extern int store_left797;
extern fsoc*store_chunk797;
extern gc797*gc_free797;
typedef struct B1500 gc1500;
struct B1500{T1500 object;union {void*flag;gc1500*next;} header;};
extern gc1500*store1500;
extern int store_left1500;
extern fsoc*store_chunk1500;
extern gc1500*gc_free1500;

#define gc_mark1501(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B794 gc794;
struct B794{T794 object;union {void*flag;gc794*next;} header;};
extern gc794*store794;
extern int store_left794;
extern fsoc*store_chunk794;
extern gc794*gc_free794;
typedef struct B1506 gc1506;
struct B1506{T1506 object;union {void*flag;gc1506*next;} header;};
extern gc1506*store1506;
extern int store_left1506;
extern fsoc*store_chunk1506;
extern gc1506*gc_free1506;
typedef struct B1507 gc1507;
struct B1507{T1507 object;union {void*flag;gc1507*next;} header;};
extern gc1507*store1507;
extern int store_left1507;
extern fsoc*store_chunk1507;
extern gc1507*gc_free1507;
typedef struct B707 gc707;
struct B707{T707 object;union {void*flag;gc707*next;} header;};
extern gc707*store707;
extern int store_left707;
extern fsoc*store_chunk707;
extern gc707*gc_free707;
typedef struct B1508 gc1508;
struct B1508{T1508 object;union {void*flag;gc1508*next;} header;};
extern gc1508*store1508;
extern int store_left1508;
extern fsoc*store_chunk1508;
extern gc1508*gc_free1508;
extern na_env na_env1509;
extern na_env na_env1510;
extern na_env na_env1511;
typedef struct B1512 gc1512;
struct B1512{T1512 object;union {void*flag;gc1512*next;} header;};
extern gc1512*store1512;
extern int store_left1512;
extern fsoc*store_chunk1512;
extern gc1512*gc_free1512;
typedef struct B1513 gc1513;
struct B1513{T1513 object;union {void*flag;gc1513*next;} header;};
extern gc1513*store1513;
extern int store_left1513;
extern fsoc*store_chunk1513;
extern gc1513*gc_free1513;
extern na_env na_env1514;
typedef struct B1515 gc1515;
struct B1515{T1515 object;union {void*flag;gc1515*next;} header;};
extern gc1515*store1515;
extern int store_left1515;
extern fsoc*store_chunk1515;
extern gc1515*gc_free1515;
extern na_env na_env1516;
typedef struct B704 gc704;
struct B704{T704 object;union {void*flag;gc704*next;} header;};
extern gc704*store704;
extern int store_left704;
extern fsoc*store_chunk704;
extern gc704*gc_free704;
extern na_env na_env1517;
extern na_env na_env1518;
typedef struct B1519 gc1519;
struct B1519{T1519 object;union {void*flag;gc1519*next;} header;};
extern gc1519*store1519;
extern int store_left1519;
extern fsoc*store_chunk1519;
extern gc1519*gc_free1519;
typedef struct B1520 gc1520;
struct B1520{T1520 object;union {void*flag;gc1520*next;} header;};
extern gc1520*store1520;
extern int store_left1520;
extern fsoc*store_chunk1520;
extern gc1520*gc_free1520;

#define gc_mark1522(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1525(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1528(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))


#define gc_mark1530(x) (((se_agent0*)(x))->gc_mark_agent_mold((se_agent*)(x)))

typedef struct B1533 gc1533;
struct B1533{T1533 object;union {void*flag;gc1533*next;} header;};
extern gc1533*store1533;
extern int store_left1533;
extern fsoc*store_chunk1533;
extern gc1533*gc_free1533;
typedef struct B781 gc781;
struct B781{T781 object;union {void*flag;gc781*next;} header;};
extern gc781*store781;
extern int store_left781;
extern fsoc*store_chunk781;
extern gc781*gc_free781;
typedef struct B1534 gc1534;
struct B1534{T1534 object;union {void*flag;gc1534*next;} header;};
extern gc1534*store1534;
extern int store_left1534;
extern fsoc*store_chunk1534;
extern gc1534*gc_free1534;
typedef struct B779 gc779;
struct B779{T779 object;union {void*flag;gc779*next;} header;};
extern gc779*store779;
extern int store_left779;
extern fsoc*store_chunk779;
extern gc779*gc_free779;
typedef struct B1537 gc1537;
struct B1537{T1537 object;union {void*flag;gc1537*next;} header;};
extern gc1537*store1537;
extern int store_left1537;
extern fsoc*store_chunk1537;
extern gc1537*gc_free1537;
extern na_env na_env1538;
typedef struct B1539 gc1539;
struct B1539{T1539 object;union {void*flag;gc1539*next;} header;};
extern gc1539*store1539;
extern int store_left1539;
extern fsoc*store_chunk1539;
extern gc1539*gc_free1539;
typedef struct B1540 gc1540;
struct B1540{T1540 object;union {void*flag;gc1540*next;} header;};
extern gc1540*store1540;
extern int store_left1540;
extern fsoc*store_chunk1540;
extern gc1540*gc_free1540;
void gc_sweep29(fsoc*c);
void gc_mark29(T29*o);
void gc_align_mark29(fsoc*c,gc29*p);
extern fsoc H29;
T29*new29(void);
void gc_sweep108(fsoc*c);
void gc_mark108(T108*o);
void gc_align_mark108(fsoc*c,gc108*p);
extern fsoc H108;
T108*new108(void);
void gc_sweep975(fsoc*c);
void gc_mark975(T975*o);
void gc_align_mark975(fsoc*c,gc975*p);
extern fsoc H975;
T975*new975(void);
void gc_sweep100(fsoc*c);
void gc_mark100(T100*o);
void gc_align_mark100(fsoc*c,gc100*p);
extern fsoc H100;
T100*new100(void);
void gc_sweep121(fsoc*c);
void gc_mark121(T121*o);
void gc_align_mark121(fsoc*c,gc121*p);
extern fsoc H121;
T121*new121(void);
void gc_sweep274(fsoc*c);
void gc_mark274(T274*o);
void gc_align_mark274(fsoc*c,gc274*p);
extern fsoc H274;
T274*new274(void);
void gc_sweep112(fsoc*c);
void gc_mark112(T112*o);
void gc_align_mark112(fsoc*c,gc112*p);
extern fsoc H112;
T112*new112(void);
void gc_sweep107(fsoc*c);
void gc_mark107(T107*o);
void gc_align_mark107(fsoc*c,gc107*p);
extern fsoc H107;
T107*new107(void);
void gc_sweep282(fsoc*c);
void gc_mark282(T282*o);
void gc_align_mark282(fsoc*c,gc282*p);
extern fsoc H282;
T282*new282(void);
void gc_sweep272(fsoc*c);
void gc_mark272(T272*o);
void gc_align_mark272(fsoc*c,gc272*p);
extern fsoc H272;
T272*new272(void);
void gc_sweep7(fsoc*c);
void gc_mark7(T7*o);
void gc_align_mark7(fsoc*c,gc7*p);
extern fsoc H7;
T7*new7(void);
void gc_mark9(T9 o);
T9 new9(unsigned int size);
void gc_sweep619(fsoc*c);
void gc_mark619(T619*o);
void gc_align_mark619(fsoc*c,gc619*p);
extern fsoc H619;
T619*new619(void);
void gc_sweep1003(fsoc*c);
void gc_mark1003(T1003*o);
void gc_align_mark1003(fsoc*c,gc1003*p);
extern fsoc H1003;
T1003*new1003(void);
void gc_sweep84(fsoc*c);
void gc_mark84(T84*o);
void gc_align_mark84(fsoc*c,gc84*p);
extern fsoc H84;
T84*new84(void);
void gc_sweep1004(fsoc*c);
void gc_mark1004(T1004*o);
void gc_align_mark1004(fsoc*c,gc1004*p);
extern fsoc H1004;
T1004*new1004(void);
void gc_sweep284(fsoc*c);
void gc_mark284(T284*o);
void gc_align_mark284(fsoc*c,gc284*p);
extern fsoc H284;
T284*new284(void);
void gc_sweep77(fsoc*c);
void gc_mark77(T77*o);
void gc_align_mark77(fsoc*c,gc77*p);
extern fsoc H77;
T77*new77(void);
void gc_sweep1005(fsoc*c);
void gc_mark1005(T1005*o);
void gc_align_mark1005(fsoc*c,gc1005*p);
extern fsoc H1005;
T1005*new1005(void);
void gc_sweep536(fsoc*c);
void gc_mark536(T536*o);
void gc_align_mark536(fsoc*c,gc536*p);
extern fsoc H536;
T536*new536(void);
void gc_sweep540(fsoc*c);
void gc_mark540(T540*o);
void gc_align_mark540(fsoc*c,gc540*p);
extern fsoc H540;
T540*new540(void);
void gc_sweep541(fsoc*c);
void gc_mark541(T541*o);
void gc_align_mark541(fsoc*c,gc541*p);
extern fsoc H541;
T541*new541(void);
void gc_sweep542(fsoc*c);
void gc_mark542(T542*o);
void gc_align_mark542(fsoc*c,gc542*p);
extern fsoc H542;
T542*new542(void);
void gc_sweep543(fsoc*c);
void gc_mark543(T543*o);
void gc_align_mark543(fsoc*c,gc543*p);
extern fsoc H543;
T543*new543(void);
void gc_sweep544(fsoc*c);
void gc_mark544(T544*o);
void gc_align_mark544(fsoc*c,gc544*p);
extern fsoc H544;
T544*new544(void);
void gc_sweep1006(fsoc*c);
void gc_mark1006(T1006*o);
void gc_align_mark1006(fsoc*c,gc1006*p);
extern fsoc H1006;
T1006*new1006(void);
void gc_sweep1007(fsoc*c);
void gc_mark1007(T1007*o);
void gc_align_mark1007(fsoc*c,gc1007*p);
extern fsoc H1007;
T1007*new1007(void);
void gc_sweep98(fsoc*c);
void gc_mark98(T98*o);
void gc_align_mark98(fsoc*c,gc98*p);
extern fsoc H98;
T98*new98(void);
void gc_sweep535(fsoc*c);
void gc_mark535(T535*o);
void gc_align_mark535(fsoc*c,gc535*p);
extern fsoc H535;
T535*new535(void);
void gc_sweep452(fsoc*c);
void gc_mark452(T452*o);
void gc_align_mark452(fsoc*c,gc452*p);
extern fsoc H452;
T452*new452(void);
void gc_sweep451(fsoc*c);
void gc_mark451(T451*o);
void gc_align_mark451(fsoc*c,gc451*p);
extern fsoc H451;
T451*new451(void);
void gc_sweep639(fsoc*c);
void gc_mark639(T639*o);
void gc_align_mark639(fsoc*c,gc639*p);
extern fsoc H639;
T639*new639(void);
void gc_sweep80(fsoc*c);
void gc_mark80(T80*o);
void gc_align_mark80(fsoc*c,gc80*p);
extern fsoc H80;
T80*new80(void);
void gc_sweep68(fsoc*c);
void gc_mark68(T68*o);
void gc_align_mark68(fsoc*c,gc68*p);
extern fsoc H68;
T68*new68(void);
void gc_sweep1008(fsoc*c);
void gc_mark1008(T1008*o);
void gc_align_mark1008(fsoc*c,gc1008*p);
extern fsoc H1008;
T1008*new1008(void);
void gc_sweep103(fsoc*c);
void gc_mark103(T103*o);
void gc_align_mark103(fsoc*c,gc103*p);
extern fsoc H103;
T103*new103(void);
void gc_sweep118(fsoc*c);
void gc_mark118(T118*o);
void gc_align_mark118(fsoc*c,gc118*p);
extern fsoc H118;
T118*new118(void);
void gc_sweep682(fsoc*c);
void gc_mark682(T682*o);
void gc_align_mark682(fsoc*c,gc682*p);
extern fsoc H682;
T682*new682(void);
void gc_sweep686(fsoc*c);
void gc_mark686(T686*o);
void gc_align_mark686(fsoc*c,gc686*p);
extern fsoc H686;
T686*new686(void);
void gc_sweep684(fsoc*c);
void gc_mark684(T684*o);
void gc_align_mark684(fsoc*c,gc684*p);
extern fsoc H684;
T684*new684(void);
void gc_sweep545(fsoc*c);
void gc_mark545(T545*o);
void gc_align_mark545(fsoc*c,gc545*p);
extern fsoc H545;
T545*new545(void);
void gc_sweep678(fsoc*c);
void gc_mark678(T678*o);
void gc_align_mark678(fsoc*c,gc678*p);
extern fsoc H678;
T678*new678(void);
void gc_sweep420(fsoc*c);
void gc_mark420(T420*o);
void gc_align_mark420(fsoc*c,gc420*p);
extern fsoc H420;
T420*new420(void);
void gc_sweep1009(fsoc*c);
void gc_mark1009(T1009*o);
void gc_align_mark1009(fsoc*c,gc1009*p);
extern fsoc H1009;
T1009*new1009(void);
void gc_sweep319(fsoc*c);
void gc_mark319(T319*o);
void gc_align_mark319(fsoc*c,gc319*p);
extern fsoc H319;
T319*new319(void);
void gc_sweep1010(fsoc*c);
void gc_mark1010(T1010*o);
void gc_align_mark1010(fsoc*c,gc1010*p);
extern fsoc H1010;
T1010*new1010(void);
void gc_sweep429(fsoc*c);
void gc_mark429(T429*o);
void gc_align_mark429(fsoc*c,gc429*p);
extern fsoc H429;
T429*new429(void);
void gc_mark756(T756*o);
void gc_sweep564(fsoc*c);
void gc_mark564(T564*o);
void gc_align_mark564(fsoc*c,gc564*p);
extern fsoc H564;
T564*new564(void);
void gc_sweep594(fsoc*c);
void gc_mark594(T594*o);
void gc_align_mark594(fsoc*c,gc594*p);
extern fsoc H594;
T594*new594(void);
void gc_sweep595(fsoc*c);
void gc_mark595(T595*o);
void gc_align_mark595(fsoc*c,gc595*p);
extern fsoc H595;
T595*new595(void);
void gc_sweep596(fsoc*c);
void gc_mark596(T596*o);
void gc_align_mark596(fsoc*c,gc596*p);
extern fsoc H596;
T596*new596(void);
void gc_sweep597(fsoc*c);
void gc_mark597(T597*o);
void gc_align_mark597(fsoc*c,gc597*p);
extern fsoc H597;
T597*new597(void);
void gc_sweep609(fsoc*c);
void gc_mark609(T609*o);
void gc_align_mark609(fsoc*c,gc609*p);
extern fsoc H609;
T609*new609(void);
void gc_sweep610(fsoc*c);
void gc_mark610(T610*o);
void gc_align_mark610(fsoc*c,gc610*p);
extern fsoc H610;
T610*new610(void);
void gc_sweep611(fsoc*c);
void gc_mark611(T611*o);
void gc_align_mark611(fsoc*c,gc611*p);
extern fsoc H611;
T611*new611(void);
void gc_sweep613(fsoc*c);
void gc_mark613(T613*o);
void gc_align_mark613(fsoc*c,gc613*p);
extern fsoc H613;
T613*new613(void);
void gc_sweep614(fsoc*c);
void gc_mark614(T614*o);
void gc_align_mark614(fsoc*c,gc614*p);
extern fsoc H614;
T614*new614(void);
void gc_sweep618(fsoc*c);
void gc_mark618(T618*o);
void gc_align_mark618(fsoc*c,gc618*p);
extern fsoc H618;
T618*new618(void);
void gc_sweep620(fsoc*c);
void gc_mark620(T620*o);
void gc_align_mark620(fsoc*c,gc620*p);
extern fsoc H620;
T620*new620(void);
void gc_sweep621(fsoc*c);
void gc_mark621(T621*o);
void gc_align_mark621(fsoc*c,gc621*p);
extern fsoc H621;
T621*new621(void);
void gc_sweep622(fsoc*c);
void gc_mark622(T622*o);
void gc_align_mark622(fsoc*c,gc622*p);
extern fsoc H622;
T622*new622(void);
void gc_sweep623(fsoc*c);
void gc_mark623(T623*o);
void gc_align_mark623(fsoc*c,gc623*p);
extern fsoc H623;
T623*new623(void);
void gc_sweep624(fsoc*c);
void gc_mark624(T624*o);
void gc_align_mark624(fsoc*c,gc624*p);
extern fsoc H624;
T624*new624(void);
void gc_sweep625(fsoc*c);
void gc_mark625(T625*o);
void gc_align_mark625(fsoc*c,gc625*p);
extern fsoc H625;
T625*new625(void);
void gc_sweep627(fsoc*c);
void gc_mark627(T627*o);
void gc_align_mark627(fsoc*c,gc627*p);
extern fsoc H627;
T627*new627(void);
void gc_sweep626(fsoc*c);
void gc_mark626(T626*o);
void gc_align_mark626(fsoc*c,gc626*p);
extern fsoc H626;
T626*new626(void);
void gc_sweep628(fsoc*c);
void gc_mark628(T628*o);
void gc_align_mark628(fsoc*c,gc628*p);
extern fsoc H628;
T628*new628(void);
void gc_sweep629(fsoc*c);
void gc_mark629(T629*o);
void gc_align_mark629(fsoc*c,gc629*p);
extern fsoc H629;
T629*new629(void);
void gc_sweep630(fsoc*c);
void gc_mark630(T630*o);
void gc_align_mark630(fsoc*c,gc630*p);
extern fsoc H630;
T630*new630(void);
void gc_sweep1011(fsoc*c);
void gc_mark1011(T1011*o);
void gc_align_mark1011(fsoc*c,gc1011*p);
extern fsoc H1011;
T1011*new1011(void);
void gc_sweep631(fsoc*c);
void gc_mark631(T631*o);
void gc_align_mark631(fsoc*c,gc631*p);
extern fsoc H631;
T631*new631(void);
void gc_sweep1012(fsoc*c);
void gc_mark1012(T1012*o);
void gc_align_mark1012(fsoc*c,gc1012*p);
extern fsoc H1012;
T1012*new1012(void);
void gc_sweep1013(fsoc*c);
void gc_mark1013(T1013*o);
void gc_align_mark1013(fsoc*c,gc1013*p);
extern fsoc H1013;
T1013*new1013(void);
void gc_sweep368(fsoc*c);
void gc_mark368(T368*o);
void gc_align_mark368(fsoc*c,gc368*p);
extern fsoc H368;
T368*new368(void);
void gc_sweep93(fsoc*c);
void gc_mark93(T93*o);
void gc_align_mark93(fsoc*c,gc93*p);
extern fsoc H93;
T93*new93(void);
void gc_sweep95(fsoc*c);
void gc_mark95(T95*o);
void gc_align_mark95(fsoc*c,gc95*p);
extern fsoc H95;
T95*new95(void);
void gc_sweep1014(fsoc*c);
void gc_mark1014(T1014*o);
void gc_align_mark1014(fsoc*c,gc1014*p);
extern fsoc H1014;
T1014*new1014(void);
void gc_sweep1015(fsoc*c);
void gc_mark1015(T1015*o);
void gc_align_mark1015(fsoc*c,gc1015*p);
extern fsoc H1015;
T1015*new1015(void);
void gc_sweep1016(fsoc*c);
void gc_mark1016(T1016*o);
void gc_align_mark1016(fsoc*c,gc1016*p);
extern fsoc H1016;
T1016*new1016(void);
void gc_sweep277(fsoc*c);
void gc_mark277(T277*o);
void gc_align_mark277(fsoc*c,gc277*p);
extern fsoc H277;
T277*new277(void);
void gc_sweep87(fsoc*c);
void gc_mark87(T87*o);
void gc_align_mark87(fsoc*c,gc87*p);
extern fsoc H87;
T87*new87(void);
void gc_sweep532(fsoc*c);
void gc_mark532(T532*o);
void gc_align_mark532(fsoc*c,gc532*p);
extern fsoc H532;
T532*new532(void);
void gc_sweep1018(fsoc*c);
void gc_mark1018(T1018*o);
void gc_align_mark1018(fsoc*c,gc1018*p);
extern fsoc H1018;
T1018*new1018(void);
void gc_sweep328(fsoc*c);
void gc_mark328(T328*o);
void gc_align_mark328(fsoc*c,gc328*p);
extern fsoc H328;
T328*new328(void);
void gc_sweep106(fsoc*c);
void gc_mark106(T106*o);
void gc_align_mark106(fsoc*c,gc106*p);
extern fsoc H106;
T106*new106(void);
void gc_sweep104(fsoc*c);
void gc_mark104(T104*o);
void gc_align_mark104(fsoc*c,gc104*p);
extern fsoc H104;
T104*new104(void);
void gc_sweep111(fsoc*c);
void gc_mark111(T111*o);
void gc_align_mark111(fsoc*c,gc111*p);
extern fsoc H111;
T111*new111(void);
void gc_sweep120(fsoc*c);
void gc_mark120(T120*o);
void gc_align_mark120(fsoc*c,gc120*p);
extern fsoc H120;
T120*new120(void);
void gc_sweep119(fsoc*c);
void gc_mark119(T119*o);
void gc_align_mark119(fsoc*c,gc119*p);
extern fsoc H119;
T119*new119(void);
void gc_sweep122(fsoc*c);
void gc_mark122(T122*o);
void gc_align_mark122(fsoc*c,gc122*p);
extern fsoc H122;
T122*new122(void);
void gc_sweep89(fsoc*c);
void gc_mark89(T89*o);
void gc_align_mark89(fsoc*c,gc89*p);
extern fsoc H89;
T89*new89(void);
void gc_sweep438(fsoc*c);
void gc_mark438(T438*o);
void gc_align_mark438(fsoc*c,gc438*p);
extern fsoc H438;
T438*new438(void);
void gc_sweep1020(fsoc*c);
void gc_mark1020(T1020*o);
void gc_align_mark1020(fsoc*c,gc1020*p);
extern fsoc H1020;
T1020*new1020(void);
void gc_sweep1021(fsoc*c);
void gc_mark1021(T1021*o);
void gc_align_mark1021(fsoc*c,gc1021*p);
extern fsoc H1021;
T1021*new1021(void);
void gc_sweep115(fsoc*c);
void gc_mark115(T115*o);
void gc_align_mark115(fsoc*c,gc115*p);
extern fsoc H115;
T115*new115(void);
void gc_sweep433(fsoc*c);
void gc_mark433(T433*o);
void gc_align_mark433(fsoc*c,gc433*p);
extern fsoc H433;
T433*new433(void);
void gc_sweep1024(fsoc*c);
void gc_mark1024(T1024*o);
void gc_align_mark1024(fsoc*c,gc1024*p);
extern fsoc H1024;
T1024*new1024(void);
void gc_sweep1025(fsoc*c);
void gc_mark1025(T1025*o);
void gc_align_mark1025(fsoc*c,gc1025*p);
extern fsoc H1025;
T1025*new1025(void);
void gc_sweep1026(fsoc*c);
void gc_mark1026(T1026*o);
void gc_align_mark1026(fsoc*c,gc1026*p);
extern fsoc H1026;
T1026*new1026(void);
void gc_sweep788(fsoc*c);
void gc_mark788(T788*o);
void gc_align_mark788(fsoc*c,gc788*p);
extern fsoc H788;
T788*new788(void);
void gc_sweep790(fsoc*c);
void gc_mark790(T790*o);
void gc_align_mark790(fsoc*c,gc790*p);
extern fsoc H790;
T790*new790(void);
void gc_sweep791(fsoc*c);
void gc_mark791(T791*o);
void gc_align_mark791(fsoc*c,gc791*p);
extern fsoc H791;
T791*new791(void);
void gc_sweep792(fsoc*c);
void gc_mark792(T792*o);
void gc_align_mark792(fsoc*c,gc792*p);
extern fsoc H792;
T792*new792(void);
void gc_sweep793(fsoc*c);
void gc_mark793(T793*o);
void gc_align_mark793(fsoc*c,gc793*p);
extern fsoc H793;
T793*new793(void);
void gc_mark1028(T1028 o);
T1028 new1028(unsigned int size);
void gc_sweep327(fsoc*c);
void gc_mark327(T327*o);
void gc_align_mark327(fsoc*c,gc327*p);
extern fsoc H327;
T327*new327(void);
void gc_sweep1030(fsoc*c);
void gc_mark1030(T1030*o);
void gc_align_mark1030(fsoc*c,gc1030*p);
extern fsoc H1030;
T1030*new1030(void);
void gc_sweep1031(fsoc*c);
void gc_mark1031(T1031*o);
void gc_align_mark1031(fsoc*c,gc1031*p);
extern fsoc H1031;
T1031*new1031(void);
void gc_sweep775(fsoc*c);
void gc_mark775(T775*o);
void gc_align_mark775(fsoc*c,gc775*p);
extern fsoc H775;
T775*new775(void);
void gc_sweep777(fsoc*c);
void gc_mark777(T777*o);
void gc_align_mark777(fsoc*c,gc777*p);
extern fsoc H777;
T777*new777(void);
void gc_sweep776(fsoc*c);
void gc_mark776(T776*o);
void gc_align_mark776(fsoc*c,gc776*p);
extern fsoc H776;
T776*new776(void);
void gc_sweep1035(fsoc*c);
void gc_mark1035(T1035*o);
void gc_align_mark1035(fsoc*c,gc1035*p);
extern fsoc H1035;
T1035*new1035(void);
void gc_sweep1036(fsoc*c);
void gc_mark1036(T1036*o);
void gc_align_mark1036(fsoc*c,gc1036*p);
extern fsoc H1036;
T1036*new1036(void);
void gc_sweep58(fsoc*c);
void gc_mark58(T58*o);
void gc_align_mark58(fsoc*c,gc58*p);
extern fsoc H58;
T58*new58(void);
void gc_sweep1037(fsoc*c);
void gc_mark1037(T1037*o);
void gc_align_mark1037(fsoc*c,gc1037*p);
extern fsoc H1037;
T1037*new1037(void);
void gc_sweep1038(fsoc*c);
void gc_mark1038(T1038*o);
void gc_align_mark1038(fsoc*c,gc1038*p);
extern fsoc H1038;
T1038*new1038(void);
void gc_sweep293(fsoc*c);
void gc_mark293(T293*o);
void gc_align_mark293(fsoc*c,gc293*p);
extern fsoc H293;
T293*new293(void);
void gc_sweep1039(fsoc*c);
void gc_mark1039(T1039*o);
void gc_align_mark1039(fsoc*c,gc1039*p);
extern fsoc H1039;
T1039*new1039(void);
void gc_sweep1042(fsoc*c);
void gc_update_weak_ref_item1042(T1042* wr);
void gc_mark1042(T1042*o);
void gc_align_mark1042(fsoc*c,gc1042*p);
extern fsoc H1042;
T1042*new1042(void);
void gc_mark1043(T1043 o);
T1043 new1043(unsigned int size);
void gc_sweep1044(fsoc*c);
void gc_update_weak_ref_item1044(T1044* wr);
void gc_mark1044(T1044*o);
void gc_align_mark1044(fsoc*c,gc1044*p);
extern fsoc H1044;
T1044*new1044(void);
void gc_sweep1045(fsoc*c);
void gc_mark1045(T1045*o);
void gc_align_mark1045(fsoc*c,gc1045*p);
extern fsoc H1045;
T1045*new1045(void);
void gc_sweep1046(fsoc*c);
void gc_mark1046(T1046*o);
void gc_align_mark1046(fsoc*c,gc1046*p);
extern fsoc H1046;
T1046*new1046(void);
void gc_sweep1047(fsoc*c);
void gc_mark1047(T1047*o);
void gc_align_mark1047(fsoc*c,gc1047*p);
extern fsoc H1047;
T1047*new1047(void);
void gc_sweep281(fsoc*c);
void gc_mark281(T281*o);
void gc_align_mark281(fsoc*c,gc281*p);
extern fsoc H281;
T281*new281(void);
void gc_mark1048(T1048 o);
T1048 new1048(unsigned int size);
void gc_sweep1051(fsoc*c);
void gc_mark1051(T1051*o);
void gc_align_mark1051(fsoc*c,gc1051*p);
extern fsoc H1051;
T1051*new1051(void);
void gc_sweep102(fsoc*c);
void gc_mark102(T102*o);
void gc_align_mark102(fsoc*c,gc102*p);
extern fsoc H102;
T102*new102(void);
void gc_mark1052(T1052 o);
T1052 new1052(unsigned int size);
void gc_mark1053(T1053 o);
T1053 new1053(unsigned int size);
void gc_sweep1054(fsoc*c);
void gc_mark1054(T1054*o);
void gc_align_mark1054(fsoc*c,gc1054*p);
extern fsoc H1054;
T1054*new1054(void);
void gc_sweep747(fsoc*c);
void gc_mark747(T747*o);
void gc_align_mark747(fsoc*c,gc747*p);
extern fsoc H747;
T747*new747(void);
void gc_sweep795(fsoc*c);
void gc_mark795(T795*o);
void gc_align_mark795(fsoc*c,gc795*p);
extern fsoc H795;
T795*new795(void);
void gc_sweep1056(fsoc*c);
void gc_mark1056(T1056*o);
void gc_align_mark1056(fsoc*c,gc1056*p);
extern fsoc H1056;
T1056*new1056(void);
void gc_mark1057(T1057 o);
T1057 new1057(unsigned int size);
void gc_sweep1058(fsoc*c);
void gc_mark1058(T1058*o);
void gc_align_mark1058(fsoc*c,gc1058*p);
extern fsoc H1058;
T1058*new1058(void);
void gc_sweep1060(fsoc*c);
void gc_mark1060(T1060*o);
void gc_align_mark1060(fsoc*c,gc1060*p);
extern fsoc H1060;
T1060*new1060(void);
void gc_sweep1062(fsoc*c);
void gc_mark1062(T1062*o);
void gc_align_mark1062(fsoc*c,gc1062*p);
extern fsoc H1062;
T1062*new1062(void);
void gc_sweep749(fsoc*c);
void gc_mark749(T749*o);
void gc_align_mark749(fsoc*c,gc749*p);
extern fsoc H749;
T749*new749(void);
void gc_sweep1065(fsoc*c);
void gc_mark1065(T1065*o);
void gc_align_mark1065(fsoc*c,gc1065*p);
extern fsoc H1065;
T1065*new1065(void);
void gc_sweep449(fsoc*c);
void gc_mark449(T449*o);
void gc_align_mark449(fsoc*c,gc449*p);
extern fsoc H449;
T449*new449(void);
void gc_sweep426(fsoc*c);
void gc_mark426(T426*o);
void gc_align_mark426(fsoc*c,gc426*p);
extern fsoc H426;
T426*new426(void);
void gc_sweep380(fsoc*c);
void gc_mark380(T380*o);
void gc_align_mark380(fsoc*c,gc380*p);
extern fsoc H380;
T380*new380(void);
void gc_sweep432(fsoc*c);
void gc_mark432(T432*o);
void gc_align_mark432(fsoc*c,gc432*p);
extern fsoc H432;
T432*new432(void);
void gc_sweep441(fsoc*c);
void gc_mark441(T441*o);
void gc_align_mark441(fsoc*c,gc441*p);
extern fsoc H441;
T441*new441(void);
void gc_sweep485(fsoc*c);
void gc_mark485(T485*o);
void gc_align_mark485(fsoc*c,gc485*p);
extern fsoc H485;
T485*new485(void);
void gc_sweep495(fsoc*c);
void gc_mark495(T495*o);
void gc_align_mark495(fsoc*c,gc495*p);
extern fsoc H495;
T495*new495(void);
void gc_sweep497(fsoc*c);
void gc_mark497(T497*o);
void gc_align_mark497(fsoc*c,gc497*p);
extern fsoc H497;
T497*new497(void);
void gc_sweep354(fsoc*c);
void gc_mark354(T354*o);
void gc_align_mark354(fsoc*c,gc354*p);
extern fsoc H354;
T354*new354(void);
void gc_sweep116(fsoc*c);
void gc_mark116(T116*o);
void gc_align_mark116(fsoc*c,gc116*p);
extern fsoc H116;
T116*new116(void);
void gc_sweep498(fsoc*c);
void gc_mark498(T498*o);
void gc_align_mark498(fsoc*c,gc498*p);
extern fsoc H498;
T498*new498(void);
void gc_sweep445(fsoc*c);
void gc_mark445(T445*o);
void gc_align_mark445(fsoc*c,gc445*p);
extern fsoc H445;
T445*new445(void);
void gc_sweep408(fsoc*c);
void gc_mark408(T408*o);
void gc_align_mark408(fsoc*c,gc408*p);
extern fsoc H408;
T408*new408(void);
void gc_sweep381(fsoc*c);
void gc_mark381(T381*o);
void gc_align_mark381(fsoc*c,gc381*p);
extern fsoc H381;
T381*new381(void);
void gc_sweep436(fsoc*c);
void gc_mark436(T436*o);
void gc_align_mark436(fsoc*c,gc436*p);
extern fsoc H436;
T436*new436(void);
void gc_sweep407(fsoc*c);
void gc_mark407(T407*o);
void gc_align_mark407(fsoc*c,gc407*p);
extern fsoc H407;
T407*new407(void);
void gc_sweep434(fsoc*c);
void gc_mark434(T434*o);
void gc_align_mark434(fsoc*c,gc434*p);
extern fsoc H434;
T434*new434(void);
void gc_sweep403(fsoc*c);
void gc_mark403(T403*o);
void gc_align_mark403(fsoc*c,gc403*p);
extern fsoc H403;
T403*new403(void);
void gc_sweep437(fsoc*c);
void gc_mark437(T437*o);
void gc_align_mark437(fsoc*c,gc437*p);
extern fsoc H437;
T437*new437(void);
void gc_sweep435(fsoc*c);
void gc_mark435(T435*o);
void gc_align_mark435(fsoc*c,gc435*p);
extern fsoc H435;
T435*new435(void);
void gc_sweep442(fsoc*c);
void gc_mark442(T442*o);
void gc_align_mark442(fsoc*c,gc442*p);
extern fsoc H442;
T442*new442(void);
void gc_sweep439(fsoc*c);
void gc_mark439(T439*o);
void gc_align_mark439(fsoc*c,gc439*p);
extern fsoc H439;
T439*new439(void);
void gc_sweep443(fsoc*c);
void gc_mark443(T443*o);
void gc_align_mark443(fsoc*c,gc443*p);
extern fsoc H443;
T443*new443(void);
void gc_sweep446(fsoc*c);
void gc_mark446(T446*o);
void gc_align_mark446(fsoc*c,gc446*p);
extern fsoc H446;
T446*new446(void);
void gc_sweep273(fsoc*c);
void gc_mark273(T273*o);
void gc_align_mark273(fsoc*c,gc273*p);
extern fsoc H273;
T273*new273(void);
void gc_sweep467(fsoc*c);
void gc_mark467(T467*o);
void gc_align_mark467(fsoc*c,gc467*p);
extern fsoc H467;
T467*new467(void);
void gc_sweep469(fsoc*c);
void gc_mark469(T469*o);
void gc_align_mark469(fsoc*c,gc469*p);
extern fsoc H469;
T469*new469(void);
void gc_sweep470(fsoc*c);
void gc_mark470(T470*o);
void gc_align_mark470(fsoc*c,gc470*p);
extern fsoc H470;
T470*new470(void);
void gc_sweep471(fsoc*c);
void gc_mark471(T471*o);
void gc_align_mark471(fsoc*c,gc471*p);
extern fsoc H471;
T471*new471(void);
void gc_sweep421(fsoc*c);
void gc_mark421(T421*o);
void gc_align_mark421(fsoc*c,gc421*p);
extern fsoc H421;
T421*new421(void);
void gc_sweep1066(fsoc*c);
void gc_mark1066(T1066*o);
void gc_align_mark1066(fsoc*c,gc1066*p);
extern fsoc H1066;
T1066*new1066(void);
void gc_sweep280(fsoc*c);
void gc_mark280(T280*o);
void gc_align_mark280(fsoc*c,gc280*p);
extern fsoc H280;
T280*new280(void);
void gc_sweep478(fsoc*c);
void gc_mark478(T478*o);
void gc_align_mark478(fsoc*c,gc478*p);
extern fsoc H478;
T478*new478(void);
void gc_sweep1067(fsoc*c);
void gc_mark1067(T1067*o);
void gc_align_mark1067(fsoc*c,gc1067*p);
extern fsoc H1067;
T1067*new1067(void);
void gc_sweep518(fsoc*c);
void gc_mark518(T518*o);
void gc_align_mark518(fsoc*c,gc518*p);
extern fsoc H518;
T518*new518(void);
void gc_sweep487(fsoc*c);
void gc_mark487(T487*o);
void gc_align_mark487(fsoc*c,gc487*p);
extern fsoc H487;
T487*new487(void);
void gc_sweep401(fsoc*c);
void gc_mark401(T401*o);
void gc_align_mark401(fsoc*c,gc401*p);
extern fsoc H401;
T401*new401(void);
void gc_sweep474(fsoc*c);
void gc_mark474(T474*o);
void gc_align_mark474(fsoc*c,gc474*p);
extern fsoc H474;
T474*new474(void);
void gc_sweep371(fsoc*c);
void gc_mark371(T371*o);
void gc_align_mark371(fsoc*c,gc371*p);
extern fsoc H371;
T371*new371(void);
void gc_sweep475(fsoc*c);
void gc_mark475(T475*o);
void gc_align_mark475(fsoc*c,gc475*p);
extern fsoc H475;
T475*new475(void);
void gc_sweep476(fsoc*c);
void gc_mark476(T476*o);
void gc_align_mark476(fsoc*c,gc476*p);
extern fsoc H476;
T476*new476(void);
void gc_sweep339(fsoc*c);
void gc_mark339(T339*o);
void gc_align_mark339(fsoc*c,gc339*p);
extern fsoc H339;
T339*new339(void);
void gc_sweep348(fsoc*c);
void gc_mark348(T348*o);
void gc_align_mark348(fsoc*c,gc348*p);
extern fsoc H348;
T348*new348(void);
void gc_sweep351(fsoc*c);
void gc_mark351(T351*o);
void gc_align_mark351(fsoc*c,gc351*p);
extern fsoc H351;
T351*new351(void);
void gc_sweep353(fsoc*c);
void gc_mark353(T353*o);
void gc_align_mark353(fsoc*c,gc353*p);
extern fsoc H353;
T353*new353(void);
void gc_sweep342(fsoc*c);
void gc_mark342(T342*o);
void gc_align_mark342(fsoc*c,gc342*p);
extern fsoc H342;
T342*new342(void);
void gc_sweep346(fsoc*c);
void gc_mark346(T346*o);
void gc_align_mark346(fsoc*c,gc346*p);
extern fsoc H346;
T346*new346(void);
void gc_sweep347(fsoc*c);
void gc_mark347(T347*o);
void gc_align_mark347(fsoc*c,gc347*p);
extern fsoc H347;
T347*new347(void);
void gc_sweep489(fsoc*c);
void gc_mark489(T489*o);
void gc_align_mark489(fsoc*c,gc489*p);
extern fsoc H489;
T489*new489(void);
void gc_sweep490(fsoc*c);
void gc_mark490(T490*o);
void gc_align_mark490(fsoc*c,gc490*p);
extern fsoc H490;
T490*new490(void);
void gc_sweep491(fsoc*c);
void gc_mark491(T491*o);
void gc_align_mark491(fsoc*c,gc491*p);
extern fsoc H491;
T491*new491(void);
void gc_sweep480(fsoc*c);
void gc_mark480(T480*o);
void gc_align_mark480(fsoc*c,gc480*p);
extern fsoc H480;
T480*new480(void);
void gc_sweep385(fsoc*c);
void gc_mark385(T385*o);
void gc_align_mark385(fsoc*c,gc385*p);
extern fsoc H385;
T385*new385(void);
void gc_sweep456(fsoc*c);
void gc_mark456(T456*o);
void gc_align_mark456(fsoc*c,gc456*p);
extern fsoc H456;
T456*new456(void);
void gc_sweep462(fsoc*c);
void gc_mark462(T462*o);
void gc_align_mark462(fsoc*c,gc462*p);
extern fsoc H462;
T462*new462(void);
void gc_sweep481(fsoc*c);
void gc_mark481(T481*o);
void gc_align_mark481(fsoc*c,gc481*p);
extern fsoc H481;
T481*new481(void);
void gc_sweep515(fsoc*c);
void gc_mark515(T515*o);
void gc_align_mark515(fsoc*c,gc515*p);
extern fsoc H515;
T515*new515(void);
void gc_sweep516(fsoc*c);
void gc_mark516(T516*o);
void gc_align_mark516(fsoc*c,gc516*p);
extern fsoc H516;
T516*new516(void);
void gc_sweep1068(fsoc*c);
void gc_mark1068(T1068*o);
void gc_align_mark1068(fsoc*c,gc1068*p);
extern fsoc H1068;
T1068*new1068(void);
void gc_sweep1069(fsoc*c);
void gc_mark1069(T1069*o);
void gc_align_mark1069(fsoc*c,gc1069*p);
extern fsoc H1069;
T1069*new1069(void);
void gc_sweep453(fsoc*c);
void gc_mark453(T453*o);
void gc_align_mark453(fsoc*c,gc453*p);
extern fsoc H453;
T453*new453(void);
void gc_sweep454(fsoc*c);
void gc_mark454(T454*o);
void gc_align_mark454(fsoc*c,gc454*p);
extern fsoc H454;
T454*new454(void);
void gc_sweep1070(fsoc*c);
void gc_mark1070(T1070*o);
void gc_align_mark1070(fsoc*c,gc1070*p);
extern fsoc H1070;
T1070*new1070(void);
void gc_sweep391(fsoc*c);
void gc_mark391(T391*o);
void gc_align_mark391(fsoc*c,gc391*p);
extern fsoc H391;
T391*new391(void);
void gc_sweep1071(fsoc*c);
void gc_mark1071(T1071*o);
void gc_align_mark1071(fsoc*c,gc1071*p);
extern fsoc H1071;
T1071*new1071(void);
void gc_sweep662(fsoc*c);
void gc_mark662(T662*o);
void gc_align_mark662(fsoc*c,gc662*p);
extern fsoc H662;
T662*new662(void);
void gc_sweep1072(fsoc*c);
void gc_mark1072(T1072*o);
void gc_align_mark1072(fsoc*c,gc1072*p);
extern fsoc H1072;
T1072*new1072(void);
void gc_sweep418(fsoc*c);
void gc_mark418(T418*o);
void gc_align_mark418(fsoc*c,gc418*p);
extern fsoc H418;
T418*new418(void);
void gc_sweep388(fsoc*c);
void gc_mark388(T388*o);
void gc_align_mark388(fsoc*c,gc388*p);
extern fsoc H388;
T388*new388(void);
void gc_sweep1073(fsoc*c);
void gc_mark1073(T1073*o);
void gc_align_mark1073(fsoc*c,gc1073*p);
extern fsoc H1073;
T1073*new1073(void);
void gc_sweep392(fsoc*c);
void gc_mark392(T392*o);
void gc_align_mark392(fsoc*c,gc392*p);
extern fsoc H392;
T392*new392(void);
void gc_sweep448(fsoc*c);
void gc_mark448(T448*o);
void gc_align_mark448(fsoc*c,gc448*p);
extern fsoc H448;
T448*new448(void);
void gc_sweep517(fsoc*c);
void gc_mark517(T517*o);
void gc_align_mark517(fsoc*c,gc517*p);
extern fsoc H517;
T517*new517(void);
void gc_sweep1074(fsoc*c);
void gc_mark1074(T1074*o);
void gc_align_mark1074(fsoc*c,gc1074*p);
extern fsoc H1074;
T1074*new1074(void);
void gc_sweep477(fsoc*c);
void gc_mark477(T477*o);
void gc_align_mark477(fsoc*c,gc477*p);
extern fsoc H477;
T477*new477(void);
void gc_sweep412(fsoc*c);
void gc_mark412(T412*o);
void gc_align_mark412(fsoc*c,gc412*p);
extern fsoc H412;
T412*new412(void);
void gc_sweep398(fsoc*c);
void gc_mark398(T398*o);
void gc_align_mark398(fsoc*c,gc398*p);
extern fsoc H398;
T398*new398(void);
void gc_sweep1075(fsoc*c);
void gc_mark1075(T1075*o);
void gc_align_mark1075(fsoc*c,gc1075*p);
extern fsoc H1075;
T1075*new1075(void);
void gc_sweep357(fsoc*c);
void gc_mark357(T357*o);
void gc_align_mark357(fsoc*c,gc357*p);
extern fsoc H357;
T357*new357(void);
void gc_sweep369(fsoc*c);
void gc_mark369(T369*o);
void gc_align_mark369(fsoc*c,gc369*p);
extern fsoc H369;
T369*new369(void);
void gc_sweep362(fsoc*c);
void gc_mark362(T362*o);
void gc_align_mark362(fsoc*c,gc362*p);
extern fsoc H362;
T362*new362(void);
void gc_sweep479(fsoc*c);
void gc_mark479(T479*o);
void gc_align_mark479(fsoc*c,gc479*p);
extern fsoc H479;
T479*new479(void);
void gc_sweep423(fsoc*c);
void gc_mark423(T423*o);
void gc_align_mark423(fsoc*c,gc423*p);
extern fsoc H423;
T423*new423(void);
void gc_sweep465(fsoc*c);
void gc_mark465(T465*o);
void gc_align_mark465(fsoc*c,gc465*p);
extern fsoc H465;
T465*new465(void);
void gc_sweep466(fsoc*c);
void gc_mark466(T466*o);
void gc_align_mark466(fsoc*c,gc466*p);
extern fsoc H466;
T466*new466(void);
void gc_sweep364(fsoc*c);
void gc_mark364(T364*o);
void gc_align_mark364(fsoc*c,gc364*p);
extern fsoc H364;
T364*new364(void);
void gc_sweep404(fsoc*c);
void gc_mark404(T404*o);
void gc_align_mark404(fsoc*c,gc404*p);
extern fsoc H404;
T404*new404(void);
void gc_sweep463(fsoc*c);
void gc_mark463(T463*o);
void gc_align_mark463(fsoc*c,gc463*p);
extern fsoc H463;
T463*new463(void);
void gc_sweep494(fsoc*c);
void gc_mark494(T494*o);
void gc_align_mark494(fsoc*c,gc494*p);
extern fsoc H494;
T494*new494(void);
void gc_sweep484(fsoc*c);
void gc_mark484(T484*o);
void gc_align_mark484(fsoc*c,gc484*p);
extern fsoc H484;
T484*new484(void);
void gc_sweep367(fsoc*c);
void gc_mark367(T367*o);
void gc_align_mark367(fsoc*c,gc367*p);
extern fsoc H367;
T367*new367(void);
void gc_sweep394(fsoc*c);
void gc_mark394(T394*o);
void gc_align_mark394(fsoc*c,gc394*p);
extern fsoc H394;
T394*new394(void);
void gc_sweep464(fsoc*c);
void gc_mark464(T464*o);
void gc_align_mark464(fsoc*c,gc464*p);
extern fsoc H464;
T464*new464(void);
void gc_sweep459(fsoc*c);
void gc_mark459(T459*o);
void gc_align_mark459(fsoc*c,gc459*p);
extern fsoc H459;
T459*new459(void);
void gc_sweep395(fsoc*c);
void gc_mark395(T395*o);
void gc_align_mark395(fsoc*c,gc395*p);
extern fsoc H395;
T395*new395(void);
void gc_sweep657(fsoc*c);
void gc_mark657(T657*o);
void gc_align_mark657(fsoc*c,gc657*p);
extern fsoc H657;
T657*new657(void);
void gc_sweep483(fsoc*c);
void gc_mark483(T483*o);
void gc_align_mark483(fsoc*c,gc483*p);
extern fsoc H483;
T483*new483(void);
void gc_sweep457(fsoc*c);
void gc_mark457(T457*o);
void gc_align_mark457(fsoc*c,gc457*p);
extern fsoc H457;
T457*new457(void);
void gc_sweep396(fsoc*c);
void gc_mark396(T396*o);
void gc_align_mark396(fsoc*c,gc396*p);
extern fsoc H396;
T396*new396(void);
void gc_sweep492(fsoc*c);
void gc_mark492(T492*o);
void gc_align_mark492(fsoc*c,gc492*p);
extern fsoc H492;
T492*new492(void);
void gc_sweep514(fsoc*c);
void gc_mark514(T514*o);
void gc_align_mark514(fsoc*c,gc514*p);
extern fsoc H514;
T514*new514(void);
void gc_sweep513(fsoc*c);
void gc_mark513(T513*o);
void gc_align_mark513(fsoc*c,gc513*p);
extern fsoc H513;
T513*new513(void);
void gc_sweep509(fsoc*c);
void gc_mark509(T509*o);
void gc_align_mark509(fsoc*c,gc509*p);
extern fsoc H509;
T509*new509(void);
void gc_sweep510(fsoc*c);
void gc_mark510(T510*o);
void gc_align_mark510(fsoc*c,gc510*p);
extern fsoc H510;
T510*new510(void);
void gc_sweep511(fsoc*c);
void gc_mark511(T511*o);
void gc_align_mark511(fsoc*c,gc511*p);
extern fsoc H511;
T511*new511(void);
void gc_sweep512(fsoc*c);
void gc_mark512(T512*o);
void gc_align_mark512(fsoc*c,gc512*p);
extern fsoc H512;
T512*new512(void);
void gc_sweep508(fsoc*c);
void gc_mark508(T508*o);
void gc_align_mark508(fsoc*c,gc508*p);
extern fsoc H508;
T508*new508(void);
void gc_sweep374(fsoc*c);
void gc_mark374(T374*o);
void gc_align_mark374(fsoc*c,gc374*p);
extern fsoc H374;
T374*new374(void);
void gc_sweep397(fsoc*c);
void gc_mark397(T397*o);
void gc_align_mark397(fsoc*c,gc397*p);
extern fsoc H397;
T397*new397(void);
void gc_sweep504(fsoc*c);
void gc_mark504(T504*o);
void gc_align_mark504(fsoc*c,gc504*p);
extern fsoc H504;
T504*new504(void);
void gc_sweep505(fsoc*c);
void gc_mark505(T505*o);
void gc_align_mark505(fsoc*c,gc505*p);
extern fsoc H505;
T505*new505(void);
void gc_sweep506(fsoc*c);
void gc_mark506(T506*o);
void gc_align_mark506(fsoc*c,gc506*p);
extern fsoc H506;
T506*new506(void);
void gc_sweep507(fsoc*c);
void gc_mark507(T507*o);
void gc_align_mark507(fsoc*c,gc507*p);
extern fsoc H507;
T507*new507(void);
void gc_sweep402(fsoc*c);
void gc_mark402(T402*o);
void gc_align_mark402(fsoc*c,gc402*p);
extern fsoc H402;
T402*new402(void);
void gc_sweep503(fsoc*c);
void gc_mark503(T503*o);
void gc_align_mark503(fsoc*c,gc503*p);
extern fsoc H503;
T503*new503(void);
void gc_sweep500(fsoc*c);
void gc_mark500(T500*o);
void gc_align_mark500(fsoc*c,gc500*p);
extern fsoc H500;
T500*new500(void);
void gc_sweep501(fsoc*c);
void gc_mark501(T501*o);
void gc_align_mark501(fsoc*c,gc501*p);
extern fsoc H501;
T501*new501(void);
void gc_sweep502(fsoc*c);
void gc_mark502(T502*o);
void gc_align_mark502(fsoc*c,gc502*p);
extern fsoc H502;
T502*new502(void);
void gc_sweep499(fsoc*c);
void gc_mark499(T499*o);
void gc_align_mark499(fsoc*c,gc499*p);
extern fsoc H499;
T499*new499(void);
void gc_sweep458(fsoc*c);
void gc_mark458(T458*o);
void gc_align_mark458(fsoc*c,gc458*p);
extern fsoc H458;
T458*new458(void);
void gc_sweep493(fsoc*c);
void gc_mark493(T493*o);
void gc_align_mark493(fsoc*c,gc493*p);
extern fsoc H493;
T493*new493(void);
void gc_sweep283(fsoc*c);
void gc_mark283(T283*o);
void gc_align_mark283(fsoc*c,gc283*p);
extern fsoc H283;
T283*new283(void);
void gc_sweep461(fsoc*c);
void gc_mark461(T461*o);
void gc_align_mark461(fsoc*c,gc461*p);
extern fsoc H461;
T461*new461(void);
void gc_sweep460(fsoc*c);
void gc_mark460(T460*o);
void gc_align_mark460(fsoc*c,gc460*p);
extern fsoc H460;
T460*new460(void);
void gc_sweep1076(fsoc*c);
void gc_mark1076(T1076*o);
void gc_align_mark1076(fsoc*c,gc1076*p);
extern fsoc H1076;
T1076*new1076(void);
void gc_sweep419(fsoc*c);
void gc_mark419(T419*o);
void gc_align_mark419(fsoc*c,gc419*p);
extern fsoc H419;
T419*new419(void);
void gc_sweep428(fsoc*c);
void gc_mark428(T428*o);
void gc_align_mark428(fsoc*c,gc428*p);
extern fsoc H428;
T428*new428(void);
void gc_sweep748(fsoc*c);
void gc_mark748(T748*o);
void gc_align_mark748(fsoc*c,gc748*p);
extern fsoc H748;
T748*new748(void);
void gc_sweep455(fsoc*c);
void gc_mark455(T455*o);
void gc_align_mark455(fsoc*c,gc455*p);
extern fsoc H455;
T455*new455(void);
void gc_sweep358(fsoc*c);
void gc_mark358(T358*o);
void gc_align_mark358(fsoc*c,gc358*p);
extern fsoc H358;
T358*new358(void);
void gc_sweep410(fsoc*c);
void gc_mark410(T410*o);
void gc_align_mark410(fsoc*c,gc410*p);
extern fsoc H410;
T410*new410(void);
void gc_sweep393(fsoc*c);
void gc_mark393(T393*o);
void gc_align_mark393(fsoc*c,gc393*p);
extern fsoc H393;
T393*new393(void);
void gc_sweep1077(fsoc*c);
void gc_mark1077(T1077*o);
void gc_align_mark1077(fsoc*c,gc1077*p);
extern fsoc H1077;
T1077*new1077(void);
void gc_sweep1078(fsoc*c);
void gc_mark1078(T1078*o);
void gc_align_mark1078(fsoc*c,gc1078*p);
extern fsoc H1078;
T1078*new1078(void);
void gc_sweep1079(fsoc*c);
void gc_update_weak_ref_item1079(T1079* wr);
void gc_mark1079(T1079*o);
void gc_align_mark1079(fsoc*c,gc1079*p);
extern fsoc H1079;
T1079*new1079(void);
void gc_sweep1080(fsoc*c);
void gc_mark1080(T1080*o);
void gc_align_mark1080(fsoc*c,gc1080*p);
extern fsoc H1080;
T1080*new1080(void);
void gc_mark1081(T1081 o);
T1081 new1081(unsigned int size);
void gc_mark1082(T1082 o);
T1082 new1082(unsigned int size);
void gc_mark1083(T1083 o);
T1083 new1083(unsigned int size);
void gc_sweep1084(fsoc*c);
void gc_mark1084(T1084*o);
void gc_align_mark1084(fsoc*c,gc1084*p);
extern fsoc H1084;
T1084*new1084(void);
void gc_sweep530(fsoc*c);
void gc_mark530(T530*o);
void gc_align_mark530(fsoc*c,gc530*p);
extern fsoc H530;
T530*new530(void);
void gc_sweep1085(fsoc*c);
void gc_mark1085(T1085*o);
void gc_align_mark1085(fsoc*c,gc1085*p);
extern fsoc H1085;
T1085*new1085(void);
void gc_sweep1087(fsoc*c);
void gc_mark1087(T1087*o);
void gc_align_mark1087(fsoc*c,gc1087*p);
extern fsoc H1087;
T1087*new1087(void);
void gc_sweep430(fsoc*c);
void gc_mark430(T430*o);
void gc_align_mark430(fsoc*c,gc430*p);
extern fsoc H430;
T430*new430(void);
void gc_sweep422(fsoc*c);
void gc_mark422(T422*o);
void gc_align_mark422(fsoc*c,gc422*p);
extern fsoc H422;
T422*new422(void);
void gc_sweep1093(fsoc*c);
void gc_mark1093(T1093*o);
void gc_align_mark1093(fsoc*c,gc1093*p);
extern fsoc H1093;
T1093*new1093(void);
void gc_sweep1094(fsoc*c);
void gc_mark1094(T1094*o);
void gc_align_mark1094(fsoc*c,gc1094*p);
extern fsoc H1094;
T1094*new1094(void);
void gc_sweep450(fsoc*c);
void gc_mark450(T450*o);
void gc_align_mark450(fsoc*c,gc450*p);
extern fsoc H450;
T450*new450(void);
void gc_sweep427(fsoc*c);
void gc_mark427(T427*o);
void gc_align_mark427(fsoc*c,gc427*p);
extern fsoc H427;
T427*new427(void);
void gc_sweep447(fsoc*c);
void gc_mark447(T447*o);
void gc_align_mark447(fsoc*c,gc447*p);
extern fsoc H447;
T447*new447(void);
void gc_sweep1095(fsoc*c);
void gc_mark1095(T1095*o);
void gc_align_mark1095(fsoc*c,gc1095*p);
extern fsoc H1095;
T1095*new1095(void);
void gc_sweep425(fsoc*c);
void gc_mark425(T425*o);
void gc_align_mark425(fsoc*c,gc425*p);
extern fsoc H425;
T425*new425(void);
void gc_sweep1096(fsoc*c);
void gc_mark1096(T1096*o);
void gc_align_mark1096(fsoc*c,gc1096*p);
extern fsoc H1096;
T1096*new1096(void);
void gc_mark1097(T1097 o);
T1097 new1097(unsigned int size);
void gc_sweep1098(fsoc*c);
void gc_update_weak_ref_item1098(T1098* wr);
void gc_mark1098(T1098*o);
void gc_align_mark1098(fsoc*c,gc1098*p);
extern fsoc H1098;
T1098*new1098(void);
void gc_sweep1099(fsoc*c);
void gc_mark1099(T1099*o);
void gc_align_mark1099(fsoc*c,gc1099*p);
extern fsoc H1099;
T1099*new1099(void);
void gc_mark1100(T1100 o);
T1100 new1100(unsigned int size);
void gc_sweep1101(fsoc*c);
void gc_update_weak_ref_item1101(T1101* wr);
void gc_mark1101(T1101*o);
void gc_align_mark1101(fsoc*c,gc1101*p);
extern fsoc H1101;
T1101*new1101(void);
void gc_mark1102(T1102 o);
T1102 new1102(unsigned int size);
void gc_sweep1103(fsoc*c);
void gc_mark1103(T1103*o);
void gc_align_mark1103(fsoc*c,gc1103*p);
extern fsoc H1103;
T1103*new1103(void);
void gc_sweep1106(fsoc*c);
void gc_mark1106(T1106*o);
void gc_align_mark1106(fsoc*c,gc1106*p);
extern fsoc H1106;
T1106*new1106(void);
void gc_sweep1107(fsoc*c);
void gc_mark1107(T1107*o);
void gc_align_mark1107(fsoc*c,gc1107*p);
extern fsoc H1107;
T1107*new1107(void);
void gc_sweep1110(fsoc*c);
void gc_mark1110(T1110*o);
void gc_align_mark1110(fsoc*c,gc1110*p);
extern fsoc H1110;
T1110*new1110(void);
void gc_sweep1111(fsoc*c);
void gc_mark1111(T1111*o);
void gc_align_mark1111(fsoc*c,gc1111*p);
extern fsoc H1111;
T1111*new1111(void);
void gc_sweep1112(fsoc*c);
void gc_mark1112(T1112*o);
void gc_align_mark1112(fsoc*c,gc1112*p);
extern fsoc H1112;
T1112*new1112(void);
void gc_sweep1113(fsoc*c);
void gc_mark1113(T1113*o);
void gc_align_mark1113(fsoc*c,gc1113*p);
extern fsoc H1113;
T1113*new1113(void);
void gc_sweep1114(fsoc*c);
void gc_mark1114(T1114*o);
void gc_align_mark1114(fsoc*c,gc1114*p);
extern fsoc H1114;
T1114*new1114(void);
void gc_sweep1115(fsoc*c);
void gc_mark1115(T1115*o);
void gc_align_mark1115(fsoc*c,gc1115*p);
extern fsoc H1115;
T1115*new1115(void);
void gc_sweep523(fsoc*c);
void gc_mark523(T523*o);
void gc_align_mark523(fsoc*c,gc523*p);
extern fsoc H523;
T523*new523(void);
void gc_sweep1117(fsoc*c);
void gc_mark1117(T1117*o);
void gc_align_mark1117(fsoc*c,gc1117*p);
extern fsoc H1117;
T1117*new1117(void);
void gc_sweep1121(fsoc*c);
void gc_mark1121(T1121*o);
void gc_align_mark1121(fsoc*c,gc1121*p);
extern fsoc H1121;
T1121*new1121(void);
void gc_sweep1122(fsoc*c);
void gc_mark1122(T1122*o);
void gc_align_mark1122(fsoc*c,gc1122*p);
extern fsoc H1122;
T1122*new1122(void);
void gc_sweep1123(fsoc*c);
void gc_mark1123(T1123*o);
void gc_align_mark1123(fsoc*c,gc1123*p);
extern fsoc H1123;
T1123*new1123(void);
void gc_sweep1124(fsoc*c);
void gc_mark1124(T1124*o);
void gc_align_mark1124(fsoc*c,gc1124*p);
extern fsoc H1124;
T1124*new1124(void);
void gc_sweep1125(fsoc*c);
void gc_mark1125(T1125*o);
void gc_align_mark1125(fsoc*c,gc1125*p);
extern fsoc H1125;
T1125*new1125(void);
void gc_sweep525(fsoc*c);
void gc_mark525(T525*o);
void gc_align_mark525(fsoc*c,gc525*p);
extern fsoc H525;
T525*new525(void);
void gc_sweep1126(fsoc*c);
void gc_mark1126(T1126*o);
void gc_align_mark1126(fsoc*c,gc1126*p);
extern fsoc H1126;
T1126*new1126(void);
void gc_sweep1127(fsoc*c);
void gc_mark1127(T1127*o);
void gc_align_mark1127(fsoc*c,gc1127*p);
extern fsoc H1127;
T1127*new1127(void);
void gc_sweep558(fsoc*c);
void gc_mark558(T558*o);
void gc_align_mark558(fsoc*c,gc558*p);
extern fsoc H558;
T558*new558(void);
void gc_sweep1129(fsoc*c);
void gc_mark1129(T1129*o);
void gc_align_mark1129(fsoc*c,gc1129*p);
extern fsoc H1129;
T1129*new1129(void);
void gc_sweep1130(fsoc*c);
void gc_mark1130(T1130*o);
void gc_align_mark1130(fsoc*c,gc1130*p);
extern fsoc H1130;
T1130*new1130(void);
void gc_sweep1131(fsoc*c);
void gc_mark1131(T1131*o);
void gc_align_mark1131(fsoc*c,gc1131*p);
extern fsoc H1131;
T1131*new1131(void);
void gc_sweep400(fsoc*c);
void gc_mark400(T400*o);
void gc_align_mark400(fsoc*c,gc400*p);
extern fsoc H400;
T400*new400(void);
void gc_mark1132(T1132 o);
T1132 new1132(unsigned int size);
void gc_sweep1133(fsoc*c);
void gc_update_weak_ref_item1133(T1133* wr);
void gc_mark1133(T1133*o);
void gc_align_mark1133(fsoc*c,gc1133*p);
extern fsoc H1133;
T1133*new1133(void);
void gc_sweep1134(fsoc*c);
void gc_mark1134(T1134*o);
void gc_align_mark1134(fsoc*c,gc1134*p);
extern fsoc H1134;
T1134*new1134(void);
void gc_mark1135(T1135 o);
T1135 new1135(unsigned int size);
void gc_sweep1136(fsoc*c);
void gc_mark1136(T1136*o);
void gc_align_mark1136(fsoc*c,gc1136*p);
extern fsoc H1136;
T1136*new1136(void);
void gc_sweep1137(fsoc*c);
void gc_mark1137(T1137*o);
void gc_align_mark1137(fsoc*c,gc1137*p);
extern fsoc H1137;
T1137*new1137(void);
void gc_sweep633(fsoc*c);
void gc_mark633(T633*o);
void gc_align_mark633(fsoc*c,gc633*p);
extern fsoc H633;
T633*new633(void);
void gc_sweep1138(fsoc*c);
void gc_mark1138(T1138*o);
void gc_align_mark1138(fsoc*c,gc1138*p);
extern fsoc H1138;
T1138*new1138(void);
void gc_sweep1139(fsoc*c);
void gc_mark1139(T1139*o);
void gc_align_mark1139(fsoc*c,gc1139*p);
extern fsoc H1139;
T1139*new1139(void);
void gc_sweep1140(fsoc*c);
void gc_mark1140(T1140*o);
void gc_align_mark1140(fsoc*c,gc1140*p);
extern fsoc H1140;
T1140*new1140(void);
void gc_mark335(T335*o);
void gc_sweep1141(fsoc*c);
void gc_mark1141(T1141*o);
void gc_align_mark1141(fsoc*c,gc1141*p);
extern fsoc H1141;
T1141*new1141(void);
void gc_sweep1146(fsoc*c);
void gc_mark1146(T1146*o);
void gc_align_mark1146(fsoc*c,gc1146*p);
extern fsoc H1146;
T1146*new1146(void);
void gc_sweep1147(fsoc*c);
void gc_mark1147(T1147*o);
void gc_align_mark1147(fsoc*c,gc1147*p);
extern fsoc H1147;
T1147*new1147(void);
void gc_sweep1148(fsoc*c);
void gc_mark1148(T1148*o);
void gc_align_mark1148(fsoc*c,gc1148*p);
extern fsoc H1148;
T1148*new1148(void);
void gc_sweep1149(fsoc*c);
void gc_mark1149(T1149*o);
void gc_align_mark1149(fsoc*c,gc1149*p);
extern fsoc H1149;
T1149*new1149(void);
void gc_sweep1150(fsoc*c);
void gc_update_weak_ref_item1150(T1150* wr);
void gc_mark1150(T1150*o);
void gc_align_mark1150(fsoc*c,gc1150*p);
extern fsoc H1150;
T1150*new1150(void);
void gc_sweep1151(fsoc*c);
void gc_mark1151(T1151*o);
void gc_align_mark1151(fsoc*c,gc1151*p);
extern fsoc H1151;
T1151*new1151(void);
void gc_mark1152(T1152 o);
T1152 new1152(unsigned int size);
void gc_sweep1153(fsoc*c);
void gc_update_weak_ref_item1153(T1153* wr);
void gc_mark1153(T1153*o);
void gc_align_mark1153(fsoc*c,gc1153*p);
extern fsoc H1153;
T1153*new1153(void);
void gc_sweep1154(fsoc*c);
void gc_mark1154(T1154*o);
void gc_align_mark1154(fsoc*c,gc1154*p);
extern fsoc H1154;
T1154*new1154(void);
void gc_mark1155(T1155 o);
T1155 new1155(unsigned int size);
void gc_mark1156(T1156 o);
T1156 new1156(unsigned int size);
void gc_sweep1157(fsoc*c);
void gc_mark1157(T1157*o);
void gc_align_mark1157(fsoc*c,gc1157*p);
extern fsoc H1157;
T1157*new1157(void);
void gc_sweep1160(fsoc*c);
void gc_update_weak_ref_item1160(T1160* wr);
void gc_mark1160(T1160*o);
void gc_align_mark1160(fsoc*c,gc1160*p);
extern fsoc H1160;
T1160*new1160(void);
void gc_sweep1161(fsoc*c);
void gc_mark1161(T1161*o);
void gc_align_mark1161(fsoc*c,gc1161*p);
extern fsoc H1161;
T1161*new1161(void);
void gc_sweep1162(fsoc*c);
void gc_mark1162(T1162*o);
void gc_align_mark1162(fsoc*c,gc1162*p);
extern fsoc H1162;
T1162*new1162(void);
void gc_sweep406(fsoc*c);
void gc_mark406(T406*o);
void gc_align_mark406(fsoc*c,gc406*p);
extern fsoc H406;
T406*new406(void);
void gc_sweep1163(fsoc*c);
void gc_mark1163(T1163*o);
void gc_align_mark1163(fsoc*c,gc1163*p);
extern fsoc H1163;
T1163*new1163(void);
void gc_sweep559(fsoc*c);
void gc_mark559(T559*o);
void gc_align_mark559(fsoc*c,gc559*p);
extern fsoc H559;
T559*new559(void);
void gc_sweep1164(fsoc*c);
void gc_update_weak_ref_item1164(T1164* wr);
void gc_mark1164(T1164*o);
void gc_align_mark1164(fsoc*c,gc1164*p);
extern fsoc H1164;
T1164*new1164(void);
void gc_sweep1165(fsoc*c);
void gc_mark1165(T1165*o);
void gc_align_mark1165(fsoc*c,gc1165*p);
extern fsoc H1165;
T1165*new1165(void);
void gc_mark1166(T1166 o);
T1166 new1166(unsigned int size);
void gc_mark1167(T1167 o);
T1167 new1167(unsigned int size);
void gc_sweep1168(fsoc*c);
void gc_mark1168(T1168*o);
void gc_align_mark1168(fsoc*c,gc1168*p);
extern fsoc H1168;
T1168*new1168(void);
void gc_sweep1169(fsoc*c);
void gc_mark1169(T1169*o);
void gc_align_mark1169(fsoc*c,gc1169*p);
extern fsoc H1169;
T1169*new1169(void);
void gc_sweep1171(fsoc*c);
void gc_mark1171(T1171*o);
void gc_align_mark1171(fsoc*c,gc1171*p);
extern fsoc H1171;
T1171*new1171(void);
void gc_mark311(T311*o);
void gc_mark1173(T1173 o);
T1173 new1173(unsigned int size);
void gc_sweep1174(fsoc*c);
void gc_mark1174(T1174*o);
void gc_align_mark1174(fsoc*c,gc1174*p);
extern fsoc H1174;
T1174*new1174(void);
void gc_sweep1175(fsoc*c);
void gc_update_weak_ref_item1175(T1175* wr);
void gc_mark1175(T1175*o);
void gc_align_mark1175(fsoc*c,gc1175*p);
extern fsoc H1175;
T1175*new1175(void);
void gc_mark1176(T1176 o);
T1176 new1176(unsigned int size);
void gc_sweep1177(fsoc*c);
void gc_mark1177(T1177*o);
void gc_align_mark1177(fsoc*c,gc1177*p);
extern fsoc H1177;
T1177*new1177(void);
void gc_mark1179(T1179 o);
T1179 new1179(unsigned int size);
void gc_mark1180(T1180 o);
T1180 new1180(unsigned int size);
void gc_sweep1181(fsoc*c);
void gc_mark1181(T1181*o);
void gc_align_mark1181(fsoc*c,gc1181*p);
extern fsoc H1181;
T1181*new1181(void);
void gc_mark1183(T1183 o);
T1183 new1183(unsigned int size);
void gc_sweep1184(fsoc*c);
void gc_mark1184(T1184*o);
void gc_align_mark1184(fsoc*c,gc1184*p);
extern fsoc H1184;
T1184*new1184(void);
void gc_sweep1185(fsoc*c);
void gc_mark1185(T1185*o);
void gc_align_mark1185(fsoc*c,gc1185*p);
extern fsoc H1185;
T1185*new1185(void);
void gc_mark522(T522*o);
void gc_sweep1187(fsoc*c);
void gc_mark1187(T1187*o);
void gc_align_mark1187(fsoc*c,gc1187*p);
extern fsoc H1187;
T1187*new1187(void);
void gc_sweep771(fsoc*c);
void gc_mark771(T771*o);
void gc_align_mark771(fsoc*c,gc771*p);
extern fsoc H771;
T771*new771(void);
void gc_sweep1189(fsoc*c);
void gc_mark1189(T1189*o);
void gc_align_mark1189(fsoc*c,gc1189*p);
extern fsoc H1189;
T1189*new1189(void);
void gc_sweep1190(fsoc*c);
void gc_mark1190(T1190*o);
void gc_align_mark1190(fsoc*c,gc1190*p);
extern fsoc H1190;
T1190*new1190(void);
void gc_sweep1191(fsoc*c);
void gc_update_weak_ref_item1191(T1191* wr);
void gc_mark1191(T1191*o);
void gc_align_mark1191(fsoc*c,gc1191*p);
extern fsoc H1191;
T1191*new1191(void);
void gc_sweep1192(fsoc*c);
void gc_mark1192(T1192*o);
void gc_align_mark1192(fsoc*c,gc1192*p);
extern fsoc H1192;
T1192*new1192(void);
void gc_mark1193(T1193 o);
T1193 new1193(unsigned int size);
void gc_sweep1194(fsoc*c);
void gc_update_weak_ref_item1194(T1194* wr);
void gc_mark1194(T1194*o);
void gc_align_mark1194(fsoc*c,gc1194*p);
extern fsoc H1194;
T1194*new1194(void);
void gc_sweep1195(fsoc*c);
void gc_mark1195(T1195*o);
void gc_align_mark1195(fsoc*c,gc1195*p);
extern fsoc H1195;
T1195*new1195(void);
void gc_mark1196(T1196 o);
T1196 new1196(unsigned int size);
void gc_mark1197(T1197 o);
T1197 new1197(unsigned int size);
void gc_sweep1198(fsoc*c);
void gc_mark1198(T1198*o);
void gc_align_mark1198(fsoc*c,gc1198*p);
extern fsoc H1198;
T1198*new1198(void);
void gc_sweep1199(fsoc*c);
void gc_update_weak_ref_item1199(T1199* wr);
void gc_mark1199(T1199*o);
void gc_align_mark1199(fsoc*c,gc1199*p);
extern fsoc H1199;
T1199*new1199(void);
void gc_sweep1200(fsoc*c);
void gc_update_weak_ref_item1200(T1200* wr);
void gc_mark1200(T1200*o);
void gc_align_mark1200(fsoc*c,gc1200*p);
extern fsoc H1200;
T1200*new1200(void);
void gc_sweep1201(fsoc*c);
void gc_mark1201(T1201*o);
void gc_align_mark1201(fsoc*c,gc1201*p);
extern fsoc H1201;
T1201*new1201(void);
void gc_mark1202(T1202 o);
T1202 new1202(unsigned int size);
void gc_sweep1203(fsoc*c);
void gc_mark1203(T1203*o);
void gc_align_mark1203(fsoc*c,gc1203*p);
extern fsoc H1203;
T1203*new1203(void);
void gc_mark1204(T1204 o);
T1204 new1204(unsigned int size);
void gc_sweep640(fsoc*c);
void gc_mark640(T640*o);
void gc_align_mark640(fsoc*c,gc640*p);
extern fsoc H640;
T640*new640(void);
void gc_sweep648(fsoc*c);
void gc_mark648(T648*o);
void gc_align_mark648(fsoc*c,gc648*p);
extern fsoc H648;
T648*new648(void);
void gc_sweep560(fsoc*c);
void gc_mark560(T560*o);
void gc_align_mark560(fsoc*c,gc560*p);
extern fsoc H560;
T560*new560(void);
void gc_sweep653(fsoc*c);
void gc_mark653(T653*o);
void gc_align_mark653(fsoc*c,gc653*p);
extern fsoc H653;
T653*new653(void);
void gc_sweep650(fsoc*c);
void gc_mark650(T650*o);
void gc_align_mark650(fsoc*c,gc650*p);
extern fsoc H650;
T650*new650(void);
void gc_sweep651(fsoc*c);
void gc_mark651(T651*o);
void gc_align_mark651(fsoc*c,gc651*p);
extern fsoc H651;
T651*new651(void);
void gc_sweep646(fsoc*c);
void gc_mark646(T646*o);
void gc_align_mark646(fsoc*c,gc646*p);
extern fsoc H646;
T646*new646(void);
void gc_sweep649(fsoc*c);
void gc_mark649(T649*o);
void gc_align_mark649(fsoc*c,gc649*p);
extern fsoc H649;
T649*new649(void);
void gc_sweep647(fsoc*c);
void gc_mark647(T647*o);
void gc_align_mark647(fsoc*c,gc647*p);
extern fsoc H647;
T647*new647(void);
void gc_sweep652(fsoc*c);
void gc_mark652(T652*o);
void gc_align_mark652(fsoc*c,gc652*p);
extern fsoc H652;
T652*new652(void);
void gc_sweep643(fsoc*c);
void gc_mark643(T643*o);
void gc_align_mark643(fsoc*c,gc643*p);
extern fsoc H643;
T643*new643(void);
void gc_sweep642(fsoc*c);
void gc_mark642(T642*o);
void gc_align_mark642(fsoc*c,gc642*p);
extern fsoc H642;
T642*new642(void);
void gc_sweep645(fsoc*c);
void gc_mark645(T645*o);
void gc_align_mark645(fsoc*c,gc645*p);
extern fsoc H645;
T645*new645(void);
void gc_sweep1205(fsoc*c);
void gc_mark1205(T1205*o);
void gc_align_mark1205(fsoc*c,gc1205*p);
extern fsoc H1205;
T1205*new1205(void);
void gc_sweep1206(fsoc*c);
void gc_mark1206(T1206*o);
void gc_align_mark1206(fsoc*c,gc1206*p);
extern fsoc H1206;
T1206*new1206(void);
void gc_sweep1207(fsoc*c);
void gc_mark1207(T1207*o);
void gc_align_mark1207(fsoc*c,gc1207*p);
extern fsoc H1207;
T1207*new1207(void);
void gc_mark1208(T1208 o);
T1208 new1208(unsigned int size);
void gc_sweep688(fsoc*c);
void gc_mark688(T688*o);
void gc_align_mark688(fsoc*c,gc688*p);
extern fsoc H688;
T688*new688(void);
void gc_mark1209(T1209 o);
T1209 new1209(unsigned int size);
void gc_mark1210(T1210 o);
T1210 new1210(unsigned int size);
void gc_mark1211(T1211 o);
T1211 new1211(unsigned int size);
void gc_mark1212(T1212 o);
T1212 new1212(unsigned int size);
void gc_mark1213(T1213 o);
T1213 new1213(unsigned int size);
void gc_sweep1214(fsoc*c);
void gc_mark1214(T1214*o);
void gc_align_mark1214(fsoc*c,gc1214*p);
extern fsoc H1214;
T1214*new1214(void);
void gc_mark1215(T1215 o);
T1215 new1215(unsigned int size);
void gc_mark1216(T1216 o);
T1216 new1216(unsigned int size);
void gc_mark1217(T1217 o);
T1217 new1217(unsigned int size);
void gc_sweep1218(fsoc*c);
void gc_mark1218(T1218*o);
void gc_align_mark1218(fsoc*c,gc1218*p);
extern fsoc H1218;
T1218*new1218(void);
void gc_mark1219(T1219 o);
T1219 new1219(unsigned int size);
void gc_sweep730(fsoc*c);
void gc_mark730(T730*o);
void gc_align_mark730(fsoc*c,gc730*p);
extern fsoc H730;
T730*new730(void);
void gc_sweep1220(fsoc*c);
void gc_mark1220(T1220*o);
void gc_align_mark1220(fsoc*c,gc1220*p);
extern fsoc H1220;
T1220*new1220(void);
void gc_sweep379(fsoc*c);
void gc_mark379(T379*o);
void gc_align_mark379(fsoc*c,gc379*p);
extern fsoc H379;
T379*new379(void);
void gc_sweep676(fsoc*c);
void gc_mark676(T676*o);
void gc_align_mark676(fsoc*c,gc676*p);
extern fsoc H676;
T676*new676(void);
void gc_sweep666(fsoc*c);
void gc_mark666(T666*o);
void gc_align_mark666(fsoc*c,gc666*p);
extern fsoc H666;
T666*new666(void);
void gc_sweep1221(fsoc*c);
void gc_mark1221(T1221*o);
void gc_align_mark1221(fsoc*c,gc1221*p);
extern fsoc H1221;
T1221*new1221(void);
void gc_sweep1222(fsoc*c);
void gc_mark1222(T1222*o);
void gc_align_mark1222(fsoc*c,gc1222*p);
extern fsoc H1222;
T1222*new1222(void);
void gc_sweep671(fsoc*c);
void gc_mark671(T671*o);
void gc_align_mark671(fsoc*c,gc671*p);
extern fsoc H671;
T671*new671(void);
void gc_sweep1223(fsoc*c);
void gc_mark1223(T1223*o);
void gc_align_mark1223(fsoc*c,gc1223*p);
extern fsoc H1223;
T1223*new1223(void);
void gc_sweep1224(fsoc*c);
void gc_mark1224(T1224*o);
void gc_align_mark1224(fsoc*c,gc1224*p);
extern fsoc H1224;
T1224*new1224(void);
void gc_sweep1225(fsoc*c);
void gc_mark1225(T1225*o);
void gc_align_mark1225(fsoc*c,gc1225*p);
extern fsoc H1225;
T1225*new1225(void);
void gc_mark1227(T1227 o);
T1227 new1227(unsigned int size);
void gc_mark1228(T1228 o);
T1228 new1228(unsigned int size);
void gc_sweep1229(fsoc*c);
void gc_mark1229(T1229*o);
void gc_align_mark1229(fsoc*c,gc1229*p);
extern fsoc H1229;
T1229*new1229(void);
void gc_sweep1230(fsoc*c);
void gc_update_weak_ref_item1230(T1230* wr);
void gc_mark1230(T1230*o);
void gc_align_mark1230(fsoc*c,gc1230*p);
extern fsoc H1230;
T1230*new1230(void);
void gc_mark1231(T1231 o);
T1231 new1231(unsigned int size);
void gc_sweep1232(fsoc*c);
void gc_update_weak_ref_item1232(T1232* wr);
void gc_mark1232(T1232*o);
void gc_align_mark1232(fsoc*c,gc1232*p);
extern fsoc H1232;
T1232*new1232(void);
void gc_sweep1233(fsoc*c);
void gc_mark1233(T1233*o);
void gc_align_mark1233(fsoc*c,gc1233*p);
extern fsoc H1233;
T1233*new1233(void);
void gc_mark1234(T1234 o);
T1234 new1234(unsigned int size);
void gc_sweep1235(fsoc*c);
void gc_mark1235(T1235*o);
void gc_align_mark1235(fsoc*c,gc1235*p);
extern fsoc H1235;
T1235*new1235(void);
void gc_mark1237(T1237 o);
T1237 new1237(unsigned int size);
void gc_mark1238(T1238 o);
T1238 new1238(unsigned int size);
void gc_mark1239(T1239 o);
T1239 new1239(unsigned int size);
void gc_mark1240(T1240 o);
T1240 new1240(unsigned int size);
void gc_sweep1241(fsoc*c);
void gc_mark1241(T1241*o);
void gc_align_mark1241(fsoc*c,gc1241*p);
extern fsoc H1241;
T1241*new1241(void);
void gc_sweep1242(fsoc*c);
void gc_update_weak_ref_item1242(T1242* wr);
void gc_mark1242(T1242*o);
void gc_align_mark1242(fsoc*c,gc1242*p);
extern fsoc H1242;
T1242*new1242(void);
void gc_sweep1243(fsoc*c);
void gc_mark1243(T1243*o);
void gc_align_mark1243(fsoc*c,gc1243*p);
extern fsoc H1243;
T1243*new1243(void);
void gc_sweep1244(fsoc*c);
void gc_mark1244(T1244*o);
void gc_align_mark1244(fsoc*c,gc1244*p);
extern fsoc H1244;
T1244*new1244(void);
void gc_sweep1245(fsoc*c);
void gc_update_weak_ref_item1245(T1245* wr);
void gc_mark1245(T1245*o);
void gc_align_mark1245(fsoc*c,gc1245*p);
extern fsoc H1245;
T1245*new1245(void);
void gc_sweep1246(fsoc*c);
void gc_mark1246(T1246*o);
void gc_align_mark1246(fsoc*c,gc1246*p);
extern fsoc H1246;
T1246*new1246(void);
void gc_mark1247(T1247 o);
T1247 new1247(unsigned int size);
void gc_sweep1248(fsoc*c);
void gc_mark1248(T1248*o);
void gc_align_mark1248(fsoc*c,gc1248*p);
extern fsoc H1248;
T1248*new1248(void);
void gc_mark1249(T1249 o);
T1249 new1249(unsigned int size);
void gc_sweep1250(fsoc*c);
void gc_mark1250(T1250*o);
void gc_align_mark1250(fsoc*c,gc1250*p);
extern fsoc H1250;
T1250*new1250(void);
void gc_sweep1251(fsoc*c);
void gc_update_weak_ref_item1251(T1251* wr);
void gc_mark1251(T1251*o);
void gc_align_mark1251(fsoc*c,gc1251*p);
extern fsoc H1251;
T1251*new1251(void);
void gc_sweep1255(fsoc*c);
void gc_mark1255(T1255*o);
void gc_align_mark1255(fsoc*c,gc1255*p);
extern fsoc H1255;
T1255*new1255(void);
void gc_mark1256(T1256 o);
T1256 new1256(unsigned int size);
void gc_sweep1257(fsoc*c);
void gc_mark1257(T1257*o);
void gc_align_mark1257(fsoc*c,gc1257*p);
extern fsoc H1257;
T1257*new1257(void);
void gc_sweep1259(fsoc*c);
void gc_update_weak_ref_item1259(T1259* wr);
void gc_mark1259(T1259*o);
void gc_align_mark1259(fsoc*c,gc1259*p);
extern fsoc H1259;
T1259*new1259(void);
void gc_sweep1260(fsoc*c);
void gc_update_weak_ref_item1260(T1260* wr);
void gc_mark1260(T1260*o);
void gc_align_mark1260(fsoc*c,gc1260*p);
extern fsoc H1260;
T1260*new1260(void);
void gc_sweep1261(fsoc*c);
void gc_mark1261(T1261*o);
void gc_align_mark1261(fsoc*c,gc1261*p);
extern fsoc H1261;
T1261*new1261(void);
void gc_mark1262(T1262 o);
T1262 new1262(unsigned int size);
void gc_mark1263(T1263 o);
T1263 new1263(unsigned int size);
void gc_mark1264(T1264 o);
T1264 new1264(unsigned int size);
void gc_mark1265(T1265 o);
T1265 new1265(unsigned int size);
void gc_sweep1266(fsoc*c);
void gc_mark1266(T1266*o);
void gc_align_mark1266(fsoc*c,gc1266*p);
extern fsoc H1266;
T1266*new1266(void);
void gc_sweep1267(fsoc*c);
void gc_update_weak_ref_item1267(T1267* wr);
void gc_mark1267(T1267*o);
void gc_align_mark1267(fsoc*c,gc1267*p);
extern fsoc H1267;
T1267*new1267(void);
void gc_mark1268(T1268 o);
T1268 new1268(unsigned int size);
void gc_mark1270(T1270 o);
T1270 new1270(unsigned int size);
void gc_sweep1271(fsoc*c);
void gc_mark1271(T1271*o);
void gc_align_mark1271(fsoc*c,gc1271*p);
extern fsoc H1271;
T1271*new1271(void);
void gc_sweep1272(fsoc*c);
void gc_update_weak_ref_item1272(T1272* wr);
void gc_mark1272(T1272*o);
void gc_align_mark1272(fsoc*c,gc1272*p);
extern fsoc H1272;
T1272*new1272(void);
void gc_sweep1273(fsoc*c);
void gc_update_weak_ref_item1273(T1273* wr);
void gc_mark1273(T1273*o);
void gc_align_mark1273(fsoc*c,gc1273*p);
extern fsoc H1273;
T1273*new1273(void);
void gc_sweep1274(fsoc*c);
void gc_mark1274(T1274*o);
void gc_align_mark1274(fsoc*c,gc1274*p);
extern fsoc H1274;
T1274*new1274(void);
void gc_mark1275(T1275 o);
T1275 new1275(unsigned int size);
void gc_mark1276(T1276 o);
T1276 new1276(unsigned int size);
void gc_sweep1277(fsoc*c);
void gc_mark1277(T1277*o);
void gc_align_mark1277(fsoc*c,gc1277*p);
extern fsoc H1277;
T1277*new1277(void);
void gc_sweep1278(fsoc*c);
void gc_update_weak_ref_item1278(T1278* wr);
void gc_mark1278(T1278*o);
void gc_align_mark1278(fsoc*c,gc1278*p);
extern fsoc H1278;
T1278*new1278(void);
void gc_sweep1279(fsoc*c);
void gc_update_weak_ref_item1279(T1279* wr);
void gc_mark1279(T1279*o);
void gc_align_mark1279(fsoc*c,gc1279*p);
extern fsoc H1279;
T1279*new1279(void);
void gc_sweep1280(fsoc*c);
void gc_mark1280(T1280*o);
void gc_align_mark1280(fsoc*c,gc1280*p);
extern fsoc H1280;
T1280*new1280(void);
void gc_mark1281(T1281 o);
T1281 new1281(unsigned int size);
void gc_mark1282(T1282 o);
T1282 new1282(unsigned int size);
void gc_sweep1283(fsoc*c);
void gc_mark1283(T1283*o);
void gc_align_mark1283(fsoc*c,gc1283*p);
extern fsoc H1283;
T1283*new1283(void);
void gc_sweep1284(fsoc*c);
void gc_update_weak_ref_item1284(T1284* wr);
void gc_mark1284(T1284*o);
void gc_align_mark1284(fsoc*c,gc1284*p);
extern fsoc H1284;
T1284*new1284(void);
void gc_mark1285(T1285 o);
T1285 new1285(unsigned int size);
void gc_sweep1286(fsoc*c);
void gc_mark1286(T1286*o);
void gc_align_mark1286(fsoc*c,gc1286*p);
extern fsoc H1286;
T1286*new1286(void);
void gc_sweep1287(fsoc*c);
void gc_update_weak_ref_item1287(T1287* wr);
void gc_mark1287(T1287*o);
void gc_align_mark1287(fsoc*c,gc1287*p);
extern fsoc H1287;
T1287*new1287(void);
void gc_mark1288(T1288 o);
T1288 new1288(unsigned int size);
void gc_mark1289(T1289 o);
T1289 new1289(unsigned int size);
void gc_sweep1290(fsoc*c);
void gc_mark1290(T1290*o);
void gc_align_mark1290(fsoc*c,gc1290*p);
extern fsoc H1290;
T1290*new1290(void);
void gc_sweep1291(fsoc*c);
void gc_update_weak_ref_item1291(T1291* wr);
void gc_mark1291(T1291*o);
void gc_align_mark1291(fsoc*c,gc1291*p);
extern fsoc H1291;
T1291*new1291(void);
void gc_sweep1292(fsoc*c);
void gc_mark1292(T1292*o);
void gc_align_mark1292(fsoc*c,gc1292*p);
extern fsoc H1292;
T1292*new1292(void);
void gc_mark1293(T1293 o);
T1293 new1293(unsigned int size);
void gc_sweep1294(fsoc*c);
void gc_update_weak_ref_item1294(T1294* wr);
void gc_mark1294(T1294*o);
void gc_align_mark1294(fsoc*c,gc1294*p);
extern fsoc H1294;
T1294*new1294(void);
void gc_mark1295(T1295 o);
T1295 new1295(unsigned int size);
void gc_sweep413(fsoc*c);
void gc_mark413(T413*o);
void gc_align_mark413(fsoc*c,gc413*p);
extern fsoc H413;
T413*new413(void);
void gc_sweep731(fsoc*c);
void gc_mark731(T731*o);
void gc_align_mark731(fsoc*c,gc731*p);
extern fsoc H731;
T731*new731(void);
void gc_mark1296(T1296 o);
T1296 new1296(unsigned int size);
void gc_sweep1297(fsoc*c);
void gc_mark1297(T1297*o);
void gc_align_mark1297(fsoc*c,gc1297*p);
extern fsoc H1297;
T1297*new1297(void);
void gc_sweep1298(fsoc*c);
void gc_update_weak_ref_item1298(T1298* wr);
void gc_mark1298(T1298*o);
void gc_align_mark1298(fsoc*c,gc1298*p);
extern fsoc H1298;
T1298*new1298(void);
void gc_mark1299(T1299 o);
T1299 new1299(unsigned int size);
void gc_sweep1300(fsoc*c);
void gc_update_weak_ref_item1300(T1300* wr);
void gc_mark1300(T1300*o);
void gc_align_mark1300(fsoc*c,gc1300*p);
extern fsoc H1300;
T1300*new1300(void);
void gc_sweep1301(fsoc*c);
void gc_mark1301(T1301*o);
void gc_align_mark1301(fsoc*c,gc1301*p);
extern fsoc H1301;
T1301*new1301(void);
void gc_mark1302(T1302 o);
T1302 new1302(unsigned int size);
void gc_mark1303(T1303 o);
T1303 new1303(unsigned int size);
void gc_sweep1304(fsoc*c);
void gc_mark1304(T1304*o);
void gc_align_mark1304(fsoc*c,gc1304*p);
extern fsoc H1304;
T1304*new1304(void);
void gc_sweep1305(fsoc*c);
void gc_update_weak_ref_item1305(T1305* wr);
void gc_mark1305(T1305*o);
void gc_align_mark1305(fsoc*c,gc1305*p);
extern fsoc H1305;
T1305*new1305(void);
void gc_sweep1306(fsoc*c);
void gc_update_weak_ref_item1306(T1306* wr);
void gc_mark1306(T1306*o);
void gc_align_mark1306(fsoc*c,gc1306*p);
extern fsoc H1306;
T1306*new1306(void);
void gc_sweep1307(fsoc*c);
void gc_mark1307(T1307*o);
void gc_align_mark1307(fsoc*c,gc1307*p);
extern fsoc H1307;
T1307*new1307(void);
void gc_mark1308(T1308 o);
T1308 new1308(unsigned int size);
void gc_sweep1309(fsoc*c);
void gc_update_weak_ref_item1309(T1309* wr);
void gc_mark1309(T1309*o);
void gc_align_mark1309(fsoc*c,gc1309*p);
extern fsoc H1309;
T1309*new1309(void);
void gc_sweep1310(fsoc*c);
void gc_mark1310(T1310*o);
void gc_align_mark1310(fsoc*c,gc1310*p);
extern fsoc H1310;
T1310*new1310(void);
void gc_mark1311(T1311 o);
T1311 new1311(unsigned int size);
void gc_mark1312(T1312 o);
T1312 new1312(unsigned int size);
void gc_mark1313(T1313 o);
T1313 new1313(unsigned int size);
void gc_sweep1314(fsoc*c);
void gc_update_weak_ref_item1314(T1314* wr);
void gc_mark1314(T1314*o);
void gc_align_mark1314(fsoc*c,gc1314*p);
extern fsoc H1314;
T1314*new1314(void);
void gc_sweep1315(fsoc*c);
void gc_mark1315(T1315*o);
void gc_align_mark1315(fsoc*c,gc1315*p);
extern fsoc H1315;
T1315*new1315(void);
void gc_mark1316(T1316 o);
T1316 new1316(unsigned int size);
void gc_mark1317(T1317 o);
T1317 new1317(unsigned int size);
void gc_mark1318(T1318 o);
T1318 new1318(unsigned int size);
void gc_sweep356(fsoc*c);
void gc_mark356(T356*o);
void gc_align_mark356(fsoc*c,gc356*p);
extern fsoc H356;
T356*new356(void);
void gc_sweep1319(fsoc*c);
void gc_mark1319(T1319*o);
void gc_align_mark1319(fsoc*c,gc1319*p);
extern fsoc H1319;
T1319*new1319(void);
void gc_mark1320(T1320 o);
T1320 new1320(unsigned int size);
void gc_sweep1321(fsoc*c);
void gc_mark1321(T1321*o);
void gc_align_mark1321(fsoc*c,gc1321*p);
extern fsoc H1321;
T1321*new1321(void);
void gc_mark1322(T1322 o);
T1322 new1322(unsigned int size);
void gc_sweep1323(fsoc*c);
void gc_update_weak_ref_item1323(T1323* wr);
void gc_mark1323(T1323*o);
void gc_align_mark1323(fsoc*c,gc1323*p);
extern fsoc H1323;
T1323*new1323(void);
void gc_mark1324(T1324 o);
T1324 new1324(unsigned int size);
void gc_sweep1325(fsoc*c);
void gc_update_weak_ref_item1325(T1325* wr);
void gc_mark1325(T1325*o);
void gc_align_mark1325(fsoc*c,gc1325*p);
extern fsoc H1325;
T1325*new1325(void);
void gc_mark1326(T1326 o);
T1326 new1326(unsigned int size);
void gc_mark1327(T1327 o);
T1327 new1327(unsigned int size);
void gc_mark1328(T1328 o);
T1328 new1328(unsigned int size);
void gc_sweep1329(fsoc*c);
void gc_mark1329(T1329*o);
void gc_align_mark1329(fsoc*c,gc1329*p);
extern fsoc H1329;
T1329*new1329(void);
void gc_sweep1330(fsoc*c);
void gc_mark1330(T1330*o);
void gc_align_mark1330(fsoc*c,gc1330*p);
extern fsoc H1330;
T1330*new1330(void);
void gc_sweep1332(fsoc*c);
void gc_update_weak_ref_item1332(T1332* wr);
void gc_mark1332(T1332*o);
void gc_align_mark1332(fsoc*c,gc1332*p);
extern fsoc H1332;
T1332*new1332(void);
void gc_sweep767(fsoc*c);
void gc_mark767(T767*o);
void gc_align_mark767(fsoc*c,gc767*p);
extern fsoc H767;
T767*new767(void);
void gc_sweep768(fsoc*c);
void gc_mark768(T768*o);
void gc_align_mark768(fsoc*c,gc768*p);
extern fsoc H768;
T768*new768(void);
void gc_sweep769(fsoc*c);
void gc_mark769(T769*o);
void gc_align_mark769(fsoc*c,gc769*p);
extern fsoc H769;
T769*new769(void);
void gc_sweep764(fsoc*c);
void gc_mark764(T764*o);
void gc_align_mark764(fsoc*c,gc764*p);
extern fsoc H764;
T764*new764(void);
void gc_sweep765(fsoc*c);
void gc_mark765(T765*o);
void gc_align_mark765(fsoc*c,gc765*p);
extern fsoc H765;
T765*new765(void);
void gc_sweep766(fsoc*c);
void gc_mark766(T766*o);
void gc_align_mark766(fsoc*c,gc766*p);
extern fsoc H766;
T766*new766(void);
void gc_sweep1334(fsoc*c);
void gc_mark1334(T1334*o);
void gc_align_mark1334(fsoc*c,gc1334*p);
extern fsoc H1334;
T1334*new1334(void);
void gc_mark1335(T1335 o);
T1335 new1335(unsigned int size);
void gc_sweep1336(fsoc*c);
void gc_update_weak_ref_item1336(T1336* wr);
void gc_mark1336(T1336*o);
void gc_align_mark1336(fsoc*c,gc1336*p);
extern fsoc H1336;
T1336*new1336(void);
void gc_mark1337(T1337 o);
T1337 new1337(unsigned int size);
void gc_sweep1338(fsoc*c);
void gc_update_weak_ref_item1338(T1338* wr);
void gc_mark1338(T1338*o);
void gc_align_mark1338(fsoc*c,gc1338*p);
extern fsoc H1338;
T1338*new1338(void);
void gc_sweep1339(fsoc*c);
void gc_mark1339(T1339*o);
void gc_align_mark1339(fsoc*c,gc1339*p);
extern fsoc H1339;
T1339*new1339(void);
void gc_mark1340(T1340 o);
T1340 new1340(unsigned int size);
void gc_mark1341(T1341 o);
T1341 new1341(unsigned int size);
void gc_sweep1342(fsoc*c);
void gc_mark1342(T1342*o);
void gc_align_mark1342(fsoc*c,gc1342*p);
extern fsoc H1342;
T1342*new1342(void);
void gc_sweep1343(fsoc*c);
void gc_update_weak_ref_item1343(T1343* wr);
void gc_mark1343(T1343*o);
void gc_align_mark1343(fsoc*c,gc1343*p);
extern fsoc H1343;
T1343*new1343(void);
void gc_mark1344(T1344 o);
T1344 new1344(unsigned int size);
void gc_sweep1345(fsoc*c);
void gc_update_weak_ref_item1345(T1345* wr);
void gc_mark1345(T1345*o);
void gc_align_mark1345(fsoc*c,gc1345*p);
extern fsoc H1345;
T1345*new1345(void);
void gc_sweep1346(fsoc*c);
void gc_mark1346(T1346*o);
void gc_align_mark1346(fsoc*c,gc1346*p);
extern fsoc H1346;
T1346*new1346(void);
void gc_mark1347(T1347 o);
T1347 new1347(unsigned int size);
void gc_sweep1348(fsoc*c);
void gc_update_weak_ref_item1348(T1348* wr);
void gc_mark1348(T1348*o);
void gc_align_mark1348(fsoc*c,gc1348*p);
extern fsoc H1348;
T1348*new1348(void);
void gc_sweep1349(fsoc*c);
void gc_mark1349(T1349*o);
void gc_align_mark1349(fsoc*c,gc1349*p);
extern fsoc H1349;
T1349*new1349(void);
void gc_mark1350(T1350 o);
T1350 new1350(unsigned int size);
void gc_sweep1351(fsoc*c);
void gc_mark1351(T1351*o);
void gc_align_mark1351(fsoc*c,gc1351*p);
extern fsoc H1351;
T1351*new1351(void);
void gc_mark1352(T1352 o);
T1352 new1352(unsigned int size);
void gc_mark1353(T1353 o);
T1353 new1353(unsigned int size);
void gc_mark1354(T1354 o);
T1354 new1354(unsigned int size);
void gc_mark1355(T1355 o);
T1355 new1355(unsigned int size);
void gc_mark1356(T1356 o);
T1356 new1356(unsigned int size);
void gc_sweep1357(fsoc*c);
void gc_mark1357(T1357*o);
void gc_align_mark1357(fsoc*c,gc1357*p);
extern fsoc H1357;
T1357*new1357(void);
void gc_mark1358(T1358 o);
T1358 new1358(unsigned int size);
void gc_mark1359(T1359 o);
T1359 new1359(unsigned int size);
void gc_sweep1360(fsoc*c);
void gc_update_weak_ref_item1360(T1360* wr);
void gc_mark1360(T1360*o);
void gc_align_mark1360(fsoc*c,gc1360*p);
extern fsoc H1360;
T1360*new1360(void);
void gc_sweep1361(fsoc*c);
void gc_mark1361(T1361*o);
void gc_align_mark1361(fsoc*c,gc1361*p);
extern fsoc H1361;
T1361*new1361(void);
void gc_mark1362(T1362 o);
T1362 new1362(unsigned int size);
void gc_sweep1363(fsoc*c);
void gc_mark1363(T1363*o);
void gc_align_mark1363(fsoc*c,gc1363*p);
extern fsoc H1363;
T1363*new1363(void);
void gc_sweep1364(fsoc*c);
void gc_mark1364(T1364*o);
void gc_align_mark1364(fsoc*c,gc1364*p);
extern fsoc H1364;
T1364*new1364(void);
void gc_sweep1367(fsoc*c);
void gc_update_weak_ref_item1367(T1367* wr);
void gc_mark1367(T1367*o);
void gc_align_mark1367(fsoc*c,gc1367*p);
extern fsoc H1367;
T1367*new1367(void);
void gc_sweep1368(fsoc*c);
void gc_mark1368(T1368*o);
void gc_align_mark1368(fsoc*c,gc1368*p);
extern fsoc H1368;
T1368*new1368(void);
void gc_mark1370(T1370 o);
T1370 new1370(unsigned int size);
void gc_mark1371(T1371 o);
T1371 new1371(unsigned int size);
void gc_mark1372(T1372 o);
T1372 new1372(unsigned int size);
void gc_mark1373(T1373 o);
T1373 new1373(unsigned int size);
void gc_sweep1374(fsoc*c);
void gc_mark1374(T1374*o);
void gc_align_mark1374(fsoc*c,gc1374*p);
extern fsoc H1374;
T1374*new1374(void);
void gc_sweep1375(fsoc*c);
void gc_update_weak_ref_item1375(T1375* wr);
void gc_mark1375(T1375*o);
void gc_align_mark1375(fsoc*c,gc1375*p);
extern fsoc H1375;
T1375*new1375(void);
void gc_sweep821(fsoc*c);
void gc_mark821(T821*o);
void gc_align_mark821(fsoc*c,gc821*p);
extern fsoc H821;
T821*new821(void);
void gc_mark1376(T1376 o);
T1376 new1376(unsigned int size);
void gc_sweep1377(fsoc*c);
void gc_mark1377(T1377*o);
void gc_align_mark1377(fsoc*c,gc1377*p);
extern fsoc H1377;
T1377*new1377(void);
void gc_sweep1378(fsoc*c);
void gc_update_weak_ref_item1378(T1378* wr);
void gc_mark1378(T1378*o);
void gc_align_mark1378(fsoc*c,gc1378*p);
extern fsoc H1378;
T1378*new1378(void);
void gc_sweep1380(fsoc*c);
void gc_mark1380(T1380*o);
void gc_align_mark1380(fsoc*c,gc1380*p);
extern fsoc H1380;
T1380*new1380(void);
void gc_sweep1381(fsoc*c);
void gc_mark1381(T1381*o);
void gc_align_mark1381(fsoc*c,gc1381*p);
extern fsoc H1381;
T1381*new1381(void);
void gc_mark1382(T1382 o);
T1382 new1382(unsigned int size);
void gc_sweep1383(fsoc*c);
void gc_update_weak_ref_item1383(T1383* wr);
void gc_mark1383(T1383*o);
void gc_align_mark1383(fsoc*c,gc1383*p);
extern fsoc H1383;
T1383*new1383(void);
void gc_sweep1384(fsoc*c);
void gc_mark1384(T1384*o);
void gc_align_mark1384(fsoc*c,gc1384*p);
extern fsoc H1384;
T1384*new1384(void);
void gc_mark1385(T1385 o);
T1385 new1385(unsigned int size);
void gc_mark1386(T1386 o);
T1386 new1386(unsigned int size);
void gc_sweep1388(fsoc*c);
void gc_update_weak_ref_item1388(T1388* wr);
void gc_mark1388(T1388*o);
void gc_align_mark1388(fsoc*c,gc1388*p);
extern fsoc H1388;
T1388*new1388(void);
void gc_sweep1389(fsoc*c);
void gc_mark1389(T1389*o);
void gc_align_mark1389(fsoc*c,gc1389*p);
extern fsoc H1389;
T1389*new1389(void);
void gc_mark1390(T1390 o);
T1390 new1390(unsigned int size);
void gc_sweep337(fsoc*c);
void gc_mark337(T337*o);
void gc_align_mark337(fsoc*c,gc337*p);
extern fsoc H337;
T337*new337(void);
void gc_sweep1391(fsoc*c);
void gc_mark1391(T1391*o);
void gc_align_mark1391(fsoc*c,gc1391*p);
extern fsoc H1391;
T1391*new1391(void);
void gc_sweep1392(fsoc*c);
void gc_mark1392(T1392*o);
void gc_align_mark1392(fsoc*c,gc1392*p);
extern fsoc H1392;
T1392*new1392(void);
void gc_sweep1393(fsoc*c);
void gc_mark1393(T1393*o);
void gc_align_mark1393(fsoc*c,gc1393*p);
extern fsoc H1393;
T1393*new1393(void);
void gc_sweep1394(fsoc*c);
void gc_mark1394(T1394*o);
void gc_align_mark1394(fsoc*c,gc1394*p);
extern fsoc H1394;
T1394*new1394(void);
void gc_sweep1396(fsoc*c);
void gc_mark1396(T1396*o);
void gc_align_mark1396(fsoc*c,gc1396*p);
extern fsoc H1396;
T1396*new1396(void);
void gc_mark1397(T1397 o);
T1397 new1397(unsigned int size);
void gc_sweep1398(fsoc*c);
void gc_update_weak_ref_item1398(T1398* wr);
void gc_mark1398(T1398*o);
void gc_align_mark1398(fsoc*c,gc1398*p);
extern fsoc H1398;
T1398*new1398(void);
void gc_sweep1399(fsoc*c);
void gc_mark1399(T1399*o);
void gc_align_mark1399(fsoc*c,gc1399*p);
extern fsoc H1399;
T1399*new1399(void);
void gc_mark1400(T1400 o);
T1400 new1400(unsigned int size);
void gc_sweep1401(fsoc*c);
void gc_update_weak_ref_item1401(T1401* wr);
void gc_mark1401(T1401*o);
void gc_align_mark1401(fsoc*c,gc1401*p);
extern fsoc H1401;
T1401*new1401(void);
void gc_mark1402(T1402 o);
T1402 new1402(unsigned int size);
void gc_sweep1405(fsoc*c);
void gc_update_weak_ref_item1405(T1405* wr);
void gc_mark1405(T1405*o);
void gc_align_mark1405(fsoc*c,gc1405*p);
extern fsoc H1405;
T1405*new1405(void);
void gc_sweep1406(fsoc*c);
void gc_mark1406(T1406*o);
void gc_align_mark1406(fsoc*c,gc1406*p);
extern fsoc H1406;
T1406*new1406(void);
void gc_sweep1407(fsoc*c);
void gc_mark1407(T1407*o);
void gc_align_mark1407(fsoc*c,gc1407*p);
extern fsoc H1407;
T1407*new1407(void);
void gc_sweep1408(fsoc*c);
void gc_mark1408(T1408*o);
void gc_align_mark1408(fsoc*c,gc1408*p);
extern fsoc H1408;
T1408*new1408(void);
void gc_sweep1409(fsoc*c);
void gc_mark1409(T1409*o);
void gc_align_mark1409(fsoc*c,gc1409*p);
extern fsoc H1409;
T1409*new1409(void);
void gc_sweep1412(fsoc*c);
void gc_update_weak_ref_item1412(T1412* wr);
void gc_mark1412(T1412*o);
void gc_align_mark1412(fsoc*c,gc1412*p);
extern fsoc H1412;
T1412*new1412(void);
void gc_sweep1413(fsoc*c);
void gc_mark1413(T1413*o);
void gc_align_mark1413(fsoc*c,gc1413*p);
extern fsoc H1413;
T1413*new1413(void);
void gc_sweep1414(fsoc*c);
void gc_update_weak_ref_item1414(T1414* wr);
void gc_mark1414(T1414*o);
void gc_align_mark1414(fsoc*c,gc1414*p);
extern fsoc H1414;
T1414*new1414(void);
void gc_sweep1415(fsoc*c);
void gc_mark1415(T1415*o);
void gc_align_mark1415(fsoc*c,gc1415*p);
extern fsoc H1415;
T1415*new1415(void);
void gc_mark1416(T1416 o);
T1416 new1416(unsigned int size);
void gc_mark1417(T1417 o);
T1417 new1417(unsigned int size);
void gc_sweep1418(fsoc*c);
void gc_update_weak_ref_item1418(T1418* wr);
void gc_mark1418(T1418*o);
void gc_align_mark1418(fsoc*c,gc1418*p);
extern fsoc H1418;
T1418*new1418(void);
void gc_sweep1419(fsoc*c);
void gc_mark1419(T1419*o);
void gc_align_mark1419(fsoc*c,gc1419*p);
extern fsoc H1419;
T1419*new1419(void);
void gc_mark1420(T1420 o);
T1420 new1420(unsigned int size);
void gc_sweep60(fsoc*c);
void gc_mark60(T60*o);
void gc_align_mark60(fsoc*c,gc60*p);
extern fsoc H60;
T60*new60(void);
void gc_sweep773(fsoc*c);
void gc_mark773(T773*o);
void gc_align_mark773(fsoc*c,gc773*p);
extern fsoc H773;
T773*new773(void);
void gc_mark734(T734*o);
void gc_sweep658(fsoc*c);
void gc_mark658(T658*o);
void gc_align_mark658(fsoc*c,gc658*p);
extern fsoc H658;
T658*new658(void);
void gc_sweep1425(fsoc*c);
void gc_mark1425(T1425*o);
void gc_align_mark1425(fsoc*c,gc1425*p);
extern fsoc H1425;
T1425*new1425(void);
void gc_sweep1426(fsoc*c);
void gc_mark1426(T1426*o);
void gc_align_mark1426(fsoc*c,gc1426*p);
extern fsoc H1426;
T1426*new1426(void);
void gc_sweep1428(fsoc*c);
void gc_mark1428(T1428*o);
void gc_align_mark1428(fsoc*c,gc1428*p);
extern fsoc H1428;
T1428*new1428(void);
void gc_sweep1431(fsoc*c);
void gc_mark1431(T1431*o);
void gc_align_mark1431(fsoc*c,gc1431*p);
extern fsoc H1431;
T1431*new1431(void);
void gc_sweep664(fsoc*c);
void gc_mark664(T664*o);
void gc_align_mark664(fsoc*c,gc664*p);
extern fsoc H664;
T664*new664(void);
void gc_sweep668(fsoc*c);
void gc_mark668(T668*o);
void gc_align_mark668(fsoc*c,gc668*p);
extern fsoc H668;
T668*new668(void);
void gc_sweep669(fsoc*c);
void gc_mark669(T669*o);
void gc_align_mark669(fsoc*c,gc669*p);
extern fsoc H669;
T669*new669(void);
void gc_sweep672(fsoc*c);
void gc_mark672(T672*o);
void gc_align_mark672(fsoc*c,gc672*p);
extern fsoc H672;
T672*new672(void);
void gc_sweep675(fsoc*c);
void gc_mark675(T675*o);
void gc_align_mark675(fsoc*c,gc675*p);
extern fsoc H675;
T675*new675(void);
void gc_sweep667(fsoc*c);
void gc_mark667(T667*o);
void gc_align_mark667(fsoc*c,gc667*p);
extern fsoc H667;
T667*new667(void);
void gc_sweep661(fsoc*c);
void gc_mark661(T661*o);
void gc_align_mark661(fsoc*c,gc661*p);
extern fsoc H661;
T661*new661(void);
void gc_sweep665(fsoc*c);
void gc_mark665(T665*o);
void gc_align_mark665(fsoc*c,gc665*p);
extern fsoc H665;
T665*new665(void);
void gc_sweep673(fsoc*c);
void gc_mark673(T673*o);
void gc_align_mark673(fsoc*c,gc673*p);
extern fsoc H673;
T673*new673(void);
void gc_sweep654(fsoc*c);
void gc_mark654(T654*o);
void gc_align_mark654(fsoc*c,gc654*p);
extern fsoc H654;
T654*new654(void);
void gc_sweep1432(fsoc*c);
void gc_mark1432(T1432*o);
void gc_align_mark1432(fsoc*c,gc1432*p);
extern fsoc H1432;
T1432*new1432(void);
void gc_sweep1433(fsoc*c);
void gc_mark1433(T1433*o);
void gc_align_mark1433(fsoc*c,gc1433*p);
extern fsoc H1433;
T1433*new1433(void);
void gc_sweep524(fsoc*c);
void gc_mark524(T524*o);
void gc_align_mark524(fsoc*c,gc524*p);
extern fsoc H524;
T524*new524(void);
void gc_sweep1434(fsoc*c);
void gc_mark1434(T1434*o);
void gc_align_mark1434(fsoc*c,gc1434*p);
extern fsoc H1434;
T1434*new1434(void);
void gc_sweep677(fsoc*c);
void gc_mark677(T677*o);
void gc_align_mark677(fsoc*c,gc677*p);
extern fsoc H677;
T677*new677(void);
void gc_sweep663(fsoc*c);
void gc_mark663(T663*o);
void gc_align_mark663(fsoc*c,gc663*p);
extern fsoc H663;
T663*new663(void);
void gc_sweep659(fsoc*c);
void gc_mark659(T659*o);
void gc_align_mark659(fsoc*c,gc659*p);
extern fsoc H659;
T659*new659(void);
void gc_sweep1435(fsoc*c);
void gc_mark1435(T1435*o);
void gc_align_mark1435(fsoc*c,gc1435*p);
extern fsoc H1435;
T1435*new1435(void);
void gc_sweep1436(fsoc*c);
void gc_mark1436(T1436*o);
void gc_align_mark1436(fsoc*c,gc1436*p);
extern fsoc H1436;
T1436*new1436(void);
void gc_sweep1437(fsoc*c);
void gc_mark1437(T1437*o);
void gc_align_mark1437(fsoc*c,gc1437*p);
extern fsoc H1437;
T1437*new1437(void);
void gc_sweep1438(fsoc*c);
void gc_mark1438(T1438*o);
void gc_align_mark1438(fsoc*c,gc1438*p);
extern fsoc H1438;
T1438*new1438(void);
void gc_sweep1439(fsoc*c);
void gc_mark1439(T1439*o);
void gc_align_mark1439(fsoc*c,gc1439*p);
extern fsoc H1439;
T1439*new1439(void);
void gc_mark1440(T1440 o);
T1440 new1440(unsigned int size);
void gc_sweep1445(fsoc*c);
void gc_mark1445(T1445*o);
void gc_align_mark1445(fsoc*c,gc1445*p);
extern fsoc H1445;
T1445*new1445(void);
void gc_sweep527(fsoc*c);
void gc_mark527(T527*o);
void gc_align_mark527(fsoc*c,gc527*p);
extern fsoc H527;
T527*new527(void);
void gc_sweep123(fsoc*c);
void gc_mark123(T123*o);
void gc_align_mark123(fsoc*c,gc123*p);
extern fsoc H123;
T123*new123(void);
void gc_sweep732(fsoc*c);
void gc_mark732(T732*o);
void gc_align_mark732(fsoc*c,gc732*p);
extern fsoc H732;
T732*new732(void);
void gc_sweep737(fsoc*c);
void gc_mark737(T737*o);
void gc_align_mark737(fsoc*c,gc737*p);
extern fsoc H737;
T737*new737(void);
void gc_sweep117(fsoc*c);
void gc_mark117(T117*o);
void gc_align_mark117(fsoc*c,gc117*p);
extern fsoc H117;
T117*new117(void);
void gc_sweep1447(fsoc*c);
void gc_mark1447(T1447*o);
void gc_align_mark1447(fsoc*c,gc1447*p);
extern fsoc H1447;
T1447*new1447(void);
void gc_sweep414(fsoc*c);
void gc_mark414(T414*o);
void gc_align_mark414(fsoc*c,gc414*p);
extern fsoc H414;
T414*new414(void);
void gc_sweep411(fsoc*c);
void gc_mark411(T411*o);
void gc_align_mark411(fsoc*c,gc411*p);
extern fsoc H411;
T411*new411(void);
void gc_sweep366(fsoc*c);
void gc_mark366(T366*o);
void gc_align_mark366(fsoc*c,gc366*p);
extern fsoc H366;
T366*new366(void);
void gc_sweep783(fsoc*c);
void gc_mark783(T783*o);
void gc_align_mark783(fsoc*c,gc783*p);
extern fsoc H783;
T783*new783(void);
void gc_sweep636(fsoc*c);
void gc_mark636(T636*o);
void gc_align_mark636(fsoc*c,gc636*p);
extern fsoc H636;
T636*new636(void);
void gc_sweep785(fsoc*c);
void gc_mark785(T785*o);
void gc_align_mark785(fsoc*c,gc785*p);
extern fsoc H785;
T785*new785(void);
void gc_sweep782(fsoc*c);
void gc_mark782(T782*o);
void gc_align_mark782(fsoc*c,gc782*p);
extern fsoc H782;
T782*new782(void);
void gc_sweep674(fsoc*c);
void gc_mark674(T674*o);
void gc_align_mark674(fsoc*c,gc674*p);
extern fsoc H674;
T674*new674(void);
void gc_sweep531(fsoc*c);
void gc_mark531(T531*o);
void gc_align_mark531(fsoc*c,gc531*p);
extern fsoc H531;
T531*new531(void);
void gc_sweep784(fsoc*c);
void gc_mark784(T784*o);
void gc_align_mark784(fsoc*c,gc784*p);
extern fsoc H784;
T784*new784(void);
void gc_sweep635(fsoc*c);
void gc_mark635(T635*o);
void gc_align_mark635(fsoc*c,gc635*p);
extern fsoc H635;
T635*new635(void);
void gc_sweep1448(fsoc*c);
void gc_mark1448(T1448*o);
void gc_align_mark1448(fsoc*c,gc1448*p);
extern fsoc H1448;
T1448*new1448(void);
void gc_sweep823(fsoc*c);
void gc_mark823(T823*o);
void gc_align_mark823(fsoc*c,gc823*p);
extern fsoc H823;
T823*new823(void);
void gc_sweep825(fsoc*c);
void gc_mark825(T825*o);
void gc_align_mark825(fsoc*c,gc825*p);
extern fsoc H825;
T825*new825(void);
void gc_sweep826(fsoc*c);
void gc_mark826(T826*o);
void gc_align_mark826(fsoc*c,gc826*p);
extern fsoc H826;
T826*new826(void);
void gc_sweep827(fsoc*c);
void gc_mark827(T827*o);
void gc_align_mark827(fsoc*c,gc827*p);
extern fsoc H827;
T827*new827(void);
void gc_sweep1449(fsoc*c);
void gc_mark1449(T1449*o);
void gc_align_mark1449(fsoc*c,gc1449*p);
extern fsoc H1449;
T1449*new1449(void);
void gc_mark1450(T1450 o);
T1450 new1450(unsigned int size);
void gc_sweep1451(fsoc*c);
void gc_update_weak_ref_item1451(T1451* wr);
void gc_mark1451(T1451*o);
void gc_align_mark1451(fsoc*c,gc1451*p);
extern fsoc H1451;
T1451*new1451(void);
void gc_mark1452(T1452 o);
T1452 new1452(unsigned int size);
void gc_sweep1453(fsoc*c);
void gc_mark1453(T1453*o);
void gc_align_mark1453(fsoc*c,gc1453*p);
extern fsoc H1453;
T1453*new1453(void);
void gc_sweep1454(fsoc*c);
void gc_update_weak_ref_item1454(T1454* wr);
void gc_mark1454(T1454*o);
void gc_align_mark1454(fsoc*c,gc1454*p);
extern fsoc H1454;
T1454*new1454(void);
void gc_sweep1455(fsoc*c);
void gc_update_weak_ref_item1455(T1455* wr);
void gc_mark1455(T1455*o);
void gc_align_mark1455(fsoc*c,gc1455*p);
extern fsoc H1455;
T1455*new1455(void);
void gc_sweep1456(fsoc*c);
void gc_mark1456(T1456*o);
void gc_align_mark1456(fsoc*c,gc1456*p);
extern fsoc H1456;
T1456*new1456(void);
void gc_mark1457(T1457 o);
T1457 new1457(unsigned int size);
void gc_sweep1458(fsoc*c);
void gc_update_weak_ref_item1458(T1458* wr);
void gc_mark1458(T1458*o);
void gc_align_mark1458(fsoc*c,gc1458*p);
extern fsoc H1458;
T1458*new1458(void);
void gc_sweep1459(fsoc*c);
void gc_mark1459(T1459*o);
void gc_align_mark1459(fsoc*c,gc1459*p);
extern fsoc H1459;
T1459*new1459(void);
void gc_mark1460(T1460 o);
T1460 new1460(unsigned int size);
void gc_sweep1461(fsoc*c);
void gc_mark1461(T1461*o);
void gc_align_mark1461(fsoc*c,gc1461*p);
extern fsoc H1461;
T1461*new1461(void);
void gc_sweep1462(fsoc*c);
void gc_mark1462(T1462*o);
void gc_align_mark1462(fsoc*c,gc1462*p);
extern fsoc H1462;
T1462*new1462(void);
void gc_sweep1463(fsoc*c);
void gc_update_weak_ref_item1463(T1463* wr);
void gc_mark1463(T1463*o);
void gc_align_mark1463(fsoc*c,gc1463*p);
extern fsoc H1463;
T1463*new1463(void);
void gc_mark1464(T1464 o);
T1464 new1464(unsigned int size);
void gc_sweep670(fsoc*c);
void gc_mark670(T670*o);
void gc_align_mark670(fsoc*c,gc670*p);
extern fsoc H670;
T670*new670(void);
void gc_mark1465(T1465 o);
T1465 new1465(unsigned int size);
void gc_mark1466(T1466 o);
T1466 new1466(unsigned int size);
void gc_sweep702(fsoc*c);
void gc_mark702(T702*o);
void gc_align_mark702(fsoc*c,gc702*p);
extern fsoc H702;
T702*new702(void);
void gc_mark1467(T1467 o);
T1467 new1467(unsigned int size);
void gc_sweep1468(fsoc*c);
void gc_mark1468(T1468*o);
void gc_align_mark1468(fsoc*c,gc1468*p);
extern fsoc H1468;
T1468*new1468(void);
void gc_sweep1469(fsoc*c);
void gc_update_weak_ref_item1469(T1469* wr);
void gc_mark1469(T1469*o);
void gc_align_mark1469(fsoc*c,gc1469*p);
extern fsoc H1469;
T1469*new1469(void);
void gc_mark1470(T1470 o);
T1470 new1470(unsigned int size);
void gc_mark1471(T1471 o);
T1471 new1471(unsigned int size);
void gc_mark1472(T1472 o);
T1472 new1472(unsigned int size);
void gc_mark1473(T1473 o);
T1473 new1473(unsigned int size);
void gc_sweep976(fsoc*c);
void gc_mark976(T976*o);
void gc_align_mark976(fsoc*c,gc976*p);
extern fsoc H976;
T976*new976(void);
void gc_sweep632(fsoc*c);
void gc_mark632(T632*o);
void gc_align_mark632(fsoc*c,gc632*p);
extern fsoc H632;
T632*new632(void);
void gc_sweep557(fsoc*c);
void gc_mark557(T557*o);
void gc_align_mark557(fsoc*c,gc557*p);
extern fsoc H557;
T557*new557(void);
void gc_sweep1487(fsoc*c);
void gc_mark1487(T1487*o);
void gc_align_mark1487(fsoc*c,gc1487*p);
extern fsoc H1487;
T1487*new1487(void);
void gc_sweep1488(fsoc*c);
void gc_mark1488(T1488*o);
void gc_align_mark1488(fsoc*c,gc1488*p);
extern fsoc H1488;
T1488*new1488(void);
void gc_sweep551(fsoc*c);
void gc_mark551(T551*o);
void gc_align_mark551(fsoc*c,gc551*p);
extern fsoc H551;
T551*new551(void);
void gc_sweep552(fsoc*c);
void gc_mark552(T552*o);
void gc_align_mark552(fsoc*c,gc552*p);
extern fsoc H552;
T552*new552(void);
void gc_sweep553(fsoc*c);
void gc_mark553(T553*o);
void gc_align_mark553(fsoc*c,gc553*p);
extern fsoc H553;
T553*new553(void);
void gc_sweep554(fsoc*c);
void gc_mark554(T554*o);
void gc_align_mark554(fsoc*c,gc554*p);
extern fsoc H554;
T554*new554(void);
void gc_sweep555(fsoc*c);
void gc_mark555(T555*o);
void gc_align_mark555(fsoc*c,gc555*p);
extern fsoc H555;
T555*new555(void);
void gc_sweep556(fsoc*c);
void gc_mark556(T556*o);
void gc_align_mark556(fsoc*c,gc556*p);
extern fsoc H556;
T556*new556(void);
void gc_sweep1494(fsoc*c);
void gc_mark1494(T1494*o);
void gc_align_mark1494(fsoc*c,gc1494*p);
extern fsoc H1494;
T1494*new1494(void);
void gc_sweep1498(fsoc*c);
void gc_mark1498(T1498*o);
void gc_align_mark1498(fsoc*c,gc1498*p);
extern fsoc H1498;
T1498*new1498(void);
void gc_sweep797(fsoc*c);
void gc_mark797(T797*o);
void gc_align_mark797(fsoc*c,gc797*p);
extern fsoc H797;
T797*new797(void);
void gc_sweep1500(fsoc*c);
void gc_mark1500(T1500*o);
void gc_align_mark1500(fsoc*c,gc1500*p);
extern fsoc H1500;
T1500*new1500(void);
void gc_sweep794(fsoc*c);
void gc_mark794(T794*o);
void gc_align_mark794(fsoc*c,gc794*p);
extern fsoc H794;
T794*new794(void);
void gc_sweep1506(fsoc*c);
void gc_mark1506(T1506*o);
void gc_align_mark1506(fsoc*c,gc1506*p);
extern fsoc H1506;
T1506*new1506(void);
void gc_sweep1507(fsoc*c);
void gc_mark1507(T1507*o);
void gc_align_mark1507(fsoc*c,gc1507*p);
extern fsoc H1507;
T1507*new1507(void);
void gc_sweep707(fsoc*c);
void gc_mark707(T707*o);
void gc_align_mark707(fsoc*c,gc707*p);
extern fsoc H707;
T707*new707(void);
void gc_sweep1508(fsoc*c);
void gc_mark1508(T1508*o);
void gc_align_mark1508(fsoc*c,gc1508*p);
extern fsoc H1508;
T1508*new1508(void);
void gc_mark1509(T1509 o);
T1509 new1509(unsigned int size);
void gc_mark1510(T1510 o);
T1510 new1510(unsigned int size);
void gc_mark1511(T1511 o);
T1511 new1511(unsigned int size);
void gc_sweep1512(fsoc*c);
void gc_mark1512(T1512*o);
void gc_align_mark1512(fsoc*c,gc1512*p);
extern fsoc H1512;
T1512*new1512(void);
void gc_sweep1513(fsoc*c);
void gc_mark1513(T1513*o);
void gc_align_mark1513(fsoc*c,gc1513*p);
extern fsoc H1513;
T1513*new1513(void);
void gc_mark1514(T1514 o);
T1514 new1514(unsigned int size);
void gc_sweep1515(fsoc*c);
void gc_update_weak_ref_item1515(T1515* wr);
void gc_mark1515(T1515*o);
void gc_align_mark1515(fsoc*c,gc1515*p);
extern fsoc H1515;
T1515*new1515(void);
void gc_mark1516(T1516 o);
T1516 new1516(unsigned int size);
void gc_sweep704(fsoc*c);
void gc_mark704(T704*o);
void gc_align_mark704(fsoc*c,gc704*p);
extern fsoc H704;
T704*new704(void);
void gc_mark1517(T1517 o);
T1517 new1517(unsigned int size);
void gc_mark1518(T1518 o);
T1518 new1518(unsigned int size);
void gc_sweep1519(fsoc*c);
void gc_mark1519(T1519*o);
void gc_align_mark1519(fsoc*c,gc1519*p);
extern fsoc H1519;
T1519*new1519(void);
void gc_sweep1520(fsoc*c);
void gc_update_weak_ref_item1520(T1520* wr);
void gc_mark1520(T1520*o);
void gc_align_mark1520(fsoc*c,gc1520*p);
extern fsoc H1520;
T1520*new1520(void);
void gc_sweep1533(fsoc*c);
void gc_mark1533(T1533*o);
void gc_align_mark1533(fsoc*c,gc1533*p);
extern fsoc H1533;
T1533*new1533(void);
void gc_sweep781(fsoc*c);
void gc_mark781(T781*o);
void gc_align_mark781(fsoc*c,gc781*p);
extern fsoc H781;
T781*new781(void);
void gc_sweep1534(fsoc*c);
void gc_mark1534(T1534*o);
void gc_align_mark1534(fsoc*c,gc1534*p);
extern fsoc H1534;
T1534*new1534(void);
void gc_sweep779(fsoc*c);
void gc_mark779(T779*o);
void gc_align_mark779(fsoc*c,gc779*p);
extern fsoc H779;
T779*new779(void);
void gc_sweep1537(fsoc*c);
void gc_mark1537(T1537*o);
void gc_align_mark1537(fsoc*c,gc1537*p);
extern fsoc H1537;
T1537*new1537(void);
void gc_mark1538(T1538 o);
T1538 new1538(unsigned int size);
void gc_sweep1539(fsoc*c);
void gc_mark1539(T1539*o);
void gc_align_mark1539(fsoc*c,gc1539*p);
extern fsoc H1539;
T1539*new1539(void);
void gc_sweep1540(fsoc*c);
void gc_update_weak_ref_item1540(T1540* wr);
void gc_mark1540(T1540*o);
void gc_align_mark1540(fsoc*c,gc1540*p);
extern fsoc H1540;
T1540*new1540(void);
void Xgc_mark365(T0*o);
void Xgc_mark680(T0*o);
void Xgc_mark340(T0*o);
void Xgc_mark389(T0*o);
void Xgc_mark387(T0*o);
void Xgc_mark376(T0*o);
void Xgc_mark331(T0*o);
void Xgc_mark341(T0*o);
void Xgc_mark336(T0*o);
void Xgc_mark378(T0*o);
void Xgc_mark344(T0*o);
void Xgc_mark550(T0*o);
void Xgc_mark548(T0*o);
void Xgc_mark538(T0*o);
void Xgc_mark763(T0*o);
void Xgc_mark70(T0*o);
void Xgc_mark683(T0*o);
void Xgc_mark679(T0*o);
void Xgc_mark404(T0*o);
void Xgc_mark1041(T0*o);
void Xgc_mark1186(T0*o);
void Xgc_mark468(T0*o);
void Xgc_mark343(T0*o);
void Xgc_mark1070(T0*o);
void Xgc_mark423(T0*o);
void Xgc_mark350(T0*o);
void Xgc_mark386(T0*o);
void Xgc_mark373(T0*o);
void Xgc_mark1159(T0*o);
void Xgc_mark1331(T0*o);
void Xgc_mark62(T0*o);
void Xgc_mark1366(T0*o);
void Xgc_mark352(T0*o);
void Xgc_mark641(T0*o);
void Xgc_mark644(T0*o);
void Xgc_mark520(T0*o);
void Xgc_mark416(T0*o);
extern T29*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 1541
extern T7*g[];
extern T7*t[];
extern int se_strucT[];
void se_atexit(void);
void initialize_eiffel_runtime(int argc,char*argv[]);
int main(int argc,char*argv[]);
T0* se_manifest1147(T2 initial_lower,int argc,...);
T0* se_manifest1020(T2 initial_lower,int argc,...);
T0* se_manifest1071(T2 initial_lower,int argc,...);
T0* se_manifest1003(int argc,...);
T0* se_manifest1448(int argc,...);
T0* se_manifest1148(T2 initial_lower,int argc,...);
T0* se_manifest1026(int argc,...);
T0* se_manifest1122(int argc,...);
int can_assign_to379_from378(T0* expression);
int can_assign_to795_from680(T0* expression);
int can_assign_to641_from336(T0* expression);
int can_assign_toATTRIBUTE_from336(T0* expression);
int can_assign_to652_from336(T0* expression);
int can_assign_to560_from336(T0* expression);
int can_assign_to647_from336(T0* expression);
int can_assign_to430_from336(T0* expression);
int can_assign_to649_from336(T0* expression);
int can_assign_to642_from336(T0* expression);
int can_assign_to650_from336(T0* expression);
int can_assign_to456_from386(T0* expression);
int can_assign_to362_from344(T0* expression);
int can_assign_to395_from344(T0* expression);
int can_assign_to420_from344(T0* expression);
int can_assign_to367_from344(T0* expression);
int can_assign_to658_from344(T0* expression);
int can_assign_to782_from331(T0* expression);
int can_assign_to406_from331(T0* expression);
int can_assign_to293_from38(T0* expression);
int can_assign_to344_from341(T0* expression);
int can_assign_to676_from341(T0* expression);
int can_assign_to343_from341(T0* expression);
int can_assign_to395_from341(T0* expression);
int can_assign_to350_from341(T0* expression);
int can_assign_to404_from341(T0* expression);
int can_assign_to340_from341(T0* expression);
int can_assign_to371_from373(T0* expression);
int can_assign_to537_from538(T0* expression);
int can_assign_to541_from538(T0* expression);
int can_assign_to543_from538(T0* expression);
int can_assign_to540_from538(T0* expression);
int can_assign_to536_from538(T0* expression);
int can_assign_to542_from538(T0* expression);
int can_assign_to544_from538(T0* expression);
int can_assign_to498_from365(T0* expression);
int can_assign_to435_from365(T0* expression);
int can_assign_to407_from365(T0* expression);
int can_assign_to470_from468(T0* expression);
int can_assign_to393_from340(T0* expression);
int can_assign_to456_from340(T0* expression);
int can_assign_to475_from340(T0* expression);
int can_assign_to480_from340(T0* expression);
int can_assign_to524_from340(T0* expression);
int can_assign_to350_from340(T0* expression);
int can_assign_to525_from340(T0* expression);
int can_assign_to474_from340(T0* expression);
int can_assign_to462_from340(T0* expression);
int can_assign_to457_from340(T0* expression);
int can_assign_to515_from340(T0* expression);
int can_assign_to385_from340(T0* expression);
int can_assign_to371_from340(T0* expression);
int can_assign_to386_from340(T0* expression);
int can_assign_to380_from340(T0* expression);
int can_assign_to673_from340(T0* expression);

#ifdef __cplusplus
}
#endif
